/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 04:37:20 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4659992569610426
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = 724;
      String string0 = "";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 724, "", "RfFSpqVY`>", "wheel.asm.ClassReader", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      Attribute attribute0 = new Attribute("");
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("RfFSpqVY`>");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newMethod("=", "", "t!x[><bUT5", true);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4265, "Signature", "Signature", "y", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1016);
      classWriter0.visitAnnotation("vjjVh}yL*", false);
      classWriter0.addUninitializedType("vjjVh}yL*", 1016);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 170, "yw**1hOOM>;Cnw}88)o", "yw**1hOOM>;Cnw}88)o", "yw**1hOOM>;Cnw}88)o", "yw**1hOOM>;Cnw}88)o");
      ByteVector byteVector0 = new ByteVector(170);
      fieldWriter0.put(byteVector0);
      byteVector0.putShort(0);
      ByteVector byteVector1 = byteVector0.put12(5239, 1);
      fieldWriter0.put(byteVector1);
      fieldWriter0.visitEnd();
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("-{x", false);
      Attribute attribute0 = new Attribute("vjjVh}yL*");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte) (-55);
      byteArray0[3] = (byte)24;
      byteArray0[4] = (byte)62;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)107;
      byteArray0[7] = (byte)7;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 1, (byte)49);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newMethod("=", "", "t!x[><bUT5", true);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4265, "Signature", "Signature", "y", "");
      fieldWriter0.visitAnnotation("1]=sC\trT>", false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt(3);
      fieldWriter0.put(byteVector1);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2116));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "6", "jR", "jR", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1804);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1804, "Deprecated", "p#NUq8G8g|C[U", (String) null, "p#NUq8G8g|C[U");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1941), "", "hP(4[9zu", "HBBtiA$t=;Nr^eC0kcZ", "");
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-1941), "hP(4[9zu", "cORt", "", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1016);
      classWriter0.visitAnnotation("<init>", true);
      classWriter0.addUninitializedType("Signature", 1016);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 728, "rG-p", "<init>", (String) null, "<init>");
      ByteVector byteVector0 = new ByteVector(0);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0360334832009355
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3963));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2116), "", "K|`W#2{$pqh2r8$@", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putByte((-1325));
      ByteVector byteVector1 = byteVector0.putUTF8("1v");
      fieldWriter0.put(byteVector1);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2116));
      classWriter0.addUninitializedType("Signature", 99);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2116), "y", "", (String) null, "");
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.putInt((-2381));
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector2 = byteVector1.putInt((-2381));
      fieldWriter0.put(byteVector2);
      fieldWriter0.put(byteVector1);
      int int0 = fieldWriter0.getSize();
      assertEquals(40, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0360334832009355
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3963), "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector(49);
      ByteVector byteVector2 = byteVector0.putUTF8("");
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector3 = byteVector2.putByte(9);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2116));
      classWriter0.addUninitializedType("RuntimeVisibleAnnotations", (-2116));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4265, "Signature", "Signature", "%e|ndZa", "");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("ConstantValue", true);
      ByteVector byteVector1 = byteVector0.putInt(4);
      ByteVector byteVector2 = byteVector1.putUTF8("sM<%f.");
      fieldWriter0.put(byteVector2);
      fieldWriter0.put(byteVector2);
      assertSame(byteVector0, byteVector2);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[0];
      classWriter0.visit(32767, 69, "", "", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1941), "", "", "HBBtiA$t=;Nr^eC0kcZ", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.getSize();
      ByteVector byteVector1 = classWriter0.pool;
      byteVector0.put12(981, 1);
      byteVector0.put12(981, 3118);
      fieldWriter0.put(byteVector0);
      assertNotSame(byteVector0, byteVector1);
  }
}
