/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 04:41:58 GMT 2018
 */

package org.jcvi.jillion.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jcvi.jillion.core.Range;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Range_ESTest extends Range_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8357589838940775
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Range range0 = Range.of((-2224L));
      Range range1 = Range.of((-2386L));
      boolean boolean0 = range1.equals(range0);
      assertFalse(boolean0);
      
      long long0 = range0.getBegin();
      assertEquals((-2224L), long0);
      assertFalse(range0.isEmpty());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      // Undeclared exception!
      try { 
        Range.of(range_CoordinateSystem0, (-9223372036854775808L), (-1239L));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // given length -1240 would make range [9223372036854775807 - ? ] beyond max allowed end offset
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      // Undeclared exception!
      try { 
        Range.of(1L, (-1582L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      long long0 = 0L;
      Range range0 = Range.ofLength(0L);
      // Undeclared exception!
      try { 
        range0.isSubRangeOf((Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // range can not be null
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = null;
      // Undeclared exception!
      try { 
        range0.endsBefore((Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null Range used in range comparison operation.
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      // Undeclared exception!
      try { 
        Range.of(range_CoordinateSystem0, 362L, (-9223372036854775787L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range coordinates 362, -9223372036854775787 are not valid Residue Based coordinates
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      // Undeclared exception!
      try { 
        Range.ofLength((-32751L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must be >=0
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      long long0 = 1410L;
      Range.Builder range_Builder0 = new Range.Builder(1410L);
      long long1 = 3171L;
      range_Builder0.expandEnd(1410L);
      // Undeclared exception!
      try { 
        range_Builder0.contractEnd(9223372036854775553L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = "RESIDUE_BASED";
      Range.CoordinateSystem.valueOf("RESIDUE_BASED");
      Range.Builder range_Builder0 = new Range.Builder(1L, 1L);
      Range.Builder range_Builder1 = range_Builder0.copy();
      range_Builder1.copy();
      range_Builder0.expandBegin(1L);
      range_Builder0.contractBegin(1L);
      Range.Builder range_Builder2 = new Range.Builder(range_Builder1);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      // Undeclared exception!
      try { 
        Range.of(range_CoordinateSystem0, 65535L, 1L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder(1410L);
      long long0 = 255L;
      Range.Builder range_Builder1 = range_Builder0.expandEnd(255L);
      Range.Builder range_Builder2 = new Range.Builder(range_Builder1);
      range_Builder0.expandBegin(1410L);
      range_Builder0.expandBegin(1410L);
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      // Undeclared exception!
      try { 
        Range.of((Range.CoordinateSystem) null, (-10L), 1071L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // CoordinateSystem can not be null
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8857169919784904
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Range range0 = Range.of(9223372032559808492L);
      Object object0 = new Object();
      Object object1 = new Object();
      Range range1 = Range.of(9223372036854775807L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      range0.intersects(range1);
      range1.split(9223372032559808492L);
      range1.getEnd(range_CoordinateSystem0);
      range1.equals(range0);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("<)EZm");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.<)EZm
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8675667124188546
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 1254L, 1254L);
      range0.toString();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range1 = Range.parseRange("[ 1254 .. 1253 ]/0B", range_CoordinateSystem1);
      Long long0 = new Long(0L);
      range0.equals(long0);
      range1.startsBefore(range0);
      range0.equals(range1);
      Range.Comparators[] range_ComparatorsArray0 = Range.Comparators.values();
      range0.getEnd();
      range0.equals(range_CoordinateSystem1);
      Range.Comparators.values();
      range0.getBegin();
      Range.Comparators[] range_ComparatorsArray1 = Range.Comparators.values();
      assertFalse(range_ComparatorsArray1.equals((Object)range_ComparatorsArray0));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.8679224603950764
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = Range.ofLength(0L);
      Range range2 = range0.intersection(range1);
      range1.startsBefore(range2);
      Object object0 = new Object();
      range0.equals(object0);
      range0.equals(range2);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("V@;j[tP", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse V@;j[tP into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      long long0 = range0.getBegin(range_CoordinateSystem0);
      assertTrue(range0.isEmpty());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      // Undeclared exception!
      try { 
        range0.split(0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // max splitLength must be >= 1
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9888752824463305
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Range range0 = Range.of(1093L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      range0.getEnd(range_CoordinateSystem0);
      Range range1 = Range.of(1094L);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      range1.forEach(consumer0);
      range0.equals(range1);
      Long long0 = new Long(386L);
      range0.getEnd();
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = Range.ofLength(0L);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      range0.forEach(consumer0);
      assertTrue(range0.isEmpty());
      assertSame(range0, range1);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      // Undeclared exception!
      try { 
        Range.parseRange((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      long long0 = (-4838L);
      Range.Builder range_Builder0 = null;
      try {
        range_Builder0 = new Range.Builder((-4838L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must be >=0
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.583518938456111
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      long long0 = 1L;
      Range range0 = Range.ofLength(1L);
      List<Range> list0 = range0.split(1L);
      range0.complementFrom(list0);
      range0.toString();
      Range range1 = range0.asRange();
      Long long1 = new Long(0L);
      range0.complementFrom(list0);
      range1.startsBefore(range1);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      long long2 = 0L;
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Range.CoordinateSystem.values();
      Range.CoordinateSystem.values();
      String string0 = "Uax9,3";
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("Uax9,3", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7920474405363453
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Range range0 = Range.of(406L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      long long0 = range0.getEnd(range_CoordinateSystem0);
      Range range1 = Range.of(386L);
      range1.equals(range0);
      Long long1 = new Long(2594L);
      assertFalse(long1.equals((Object)long0));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.7722984534427955
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Range range0 = Range.of(0L);
      Range range1 = Range.of(1L);
      range0.split(2147483647L);
      Range.of(0L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      range0.toString(range_CoordinateSystem0);
      range0.getBegin();
      range0.toString();
      range0.equals(range1);
      range1.getEnd();
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("[ 0 .. 0 ]/0B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.[ 0 .. 0 ]/0B
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.294507088863727
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Range range0 = Range.of(9223372032559808492L);
      Range range1 = Range.ofLength(9223372032559808492L);
      Range range2 = Range.ofLength(9223372036854775807L);
      range1.complement(range0);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      range0.toString(range_CoordinateSystem0);
      // Undeclared exception!
      try { 
        range2.forEach((Consumer<? super Long>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.4657359027997248
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Range range0 = Range.of((-32768L), (-32768L));
      List<Range> list0 = range0.complement(range0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      LinkedList<Range> linkedList0 = new LinkedList<Range>();
      range0.complementFrom(linkedList0);
      range0.spliterator();
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.8444872614601695
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Range range0 = Range.of(1093L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      LinkedList<Range> linkedList0 = new LinkedList<Range>();
      linkedList0.add((Range) null);
      // Undeclared exception!
      try { 
        range0.complementFrom(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      range0.getLength();
      Object object0 = new Object();
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.791294569695012
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-32768L), (-32768L));
      range0.getBegin();
      range0.toString();
      range0.equals(range_CoordinateSystem0);
      String string0 = null;
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-32768L), (-32768L));
      range0.getBegin();
      range0.toString();
      range0.isEmpty();
      String string0 = null;
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = Range.ofLength(0L);
      range1.endsBefore(range0);
      Object object0 = new Object();
      range0.getEnd();
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8444872614601695
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Range range0 = Range.of(1093L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      range0.equals("");
      long long0 = range0.getEnd(range_CoordinateSystem0);
      assertEquals(1094L, long0);
      
      Range range1 = Range.of(1093L);
      boolean boolean0 = range0.endsBefore(range1);
      Range range2 = Range.of(1094L);
      boolean boolean1 = range0.equals(range2);
      assertTrue(boolean1 == boolean0);
      assertFalse(range2.equals((Object)range0));
      
      Long long1 = new Long(386L);
      long long2 = range0.getEnd();
      assertEquals(1093L, long2);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Range range0 = Range.ofLength(40L);
      Range range1 = Range.ofLength(40L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      range0.toString(range_CoordinateSystem0);
      Long long0 = new Long(40L);
      range1.intersects(range1);
      Range.Comparators range_Comparators0 = Range.Comparators.LONGEST_TO_SHORTEST;
      Range.Comparators.values();
      Range.Comparators.values();
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("[ 0 .. 39 ]/0B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.[ 0 .. 39 ]/0B
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.7920474405363453
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Range range0 = Range.of(1093L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      range0.getEnd(range_CoordinateSystem0);
      Range range1 = Range.of(1094L);
      range0.equals(range1);
      Long long0 = new Long(386L);
      range0.getEnd();
      range0.equals((Object) null);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("5]Vg6]#V%j?DksSE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.5]Vg6]#V%j?DksSE
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Range range0 = Range.of((-2405L));
      range0.equals(range0);
      Long long0 = new Long(428L);
      assertEquals(428L, (long)long0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      // Undeclared exception!
      try { 
        range0.complement((Range) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null Range used in intersection operation.
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder(1410L);
      long long0 = 3171L;
      range_Builder0.expandBegin(1410L);
      // Undeclared exception!
      try { 
        Range.of(3171L, 34L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = Range.ofLength(0L);
      range1.complement(range0);
      Range.Comparators[] range_ComparatorsArray0 = Range.Comparators.values();
      assertEquals(4, range_ComparatorsArray0.length);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8914393850137774
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range.of(range_CoordinateSystem0, 0L, 1071L);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Range range0 = Range.ofLength(38L);
      boolean boolean0 = range0.equals(range0);
      assertFalse(range0.isEmpty());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = Range.ofLength(2147483647L);
      Range range2 = range1.intersection(range0);
      Object object0 = new Object();
      boolean boolean0 = range0.equals(range2);
      assertFalse(range2.equals((Object)range1));
      assertFalse(range1.isEmpty());
      assertTrue(boolean0);
      assertTrue(range2.isEmpty());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.8745730520043735
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Range range0 = Range.of(924L, 9223372036854774725L);
      Range range1 = Range.of(923L, 9223372036854774725L);
      range0.equals(range1);
      Range.CoordinateSystem.values();
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.9655274957312305
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 607L, 2147483647L);
      Range.Builder range_Builder0 = new Range.Builder(range0);
      range0.equals(range_CoordinateSystem0);
      range0.toString(range_CoordinateSystem0);
      range0.getBegin();
      range0.toString();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      Range.CoordinateSystem range_CoordinateSystem2 = Range.CoordinateSystem.ZERO_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("", range_CoordinateSystem2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse  into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.7920474405363453
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      Range.Builder range_Builder0 = new Range.Builder(range0);
      range0.toString();
      Object object0 = new Object();
      range0.equals(object0);
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("[ 2147483647 .. 2147483646 ]/0B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.[ 2147483647 .. 2147483646 ]/0B
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.8147041867002995
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      long long0 = 406L;
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range.of(range_CoordinateSystem0, 406L, 406L);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("Zero Based", range_CoordinateSystem1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse Zero Based into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Range range0 = Range.ofLength(9223372036854775807L);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        range0.intersects((Range) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null Range used in intersection operation.
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.8754478444593765
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483651L, 2147483651L);
      long long0 = range0.getBegin();
      assertEquals(2147483650L, long0);
      
      range0.equals(range_CoordinateSystem0);
      Object object0 = new Object();
      range0.equals("");
      boolean boolean0 = range0.equals("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.894657832994279
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Range range0 = Range.of(1093L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      range0.getEnd(range_CoordinateSystem0);
      Range range1 = Range.of(1094L);
      range1.intersects(range0);
      range0.equals(range1);
      range0.intersects(range1);
      Long long0 = new Long(386L);
      range0.getEnd();
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("invalid startOffset %d: file is only %d bytes");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.invalid startOffset %d: file is only %d bytes
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.9490123306617946
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Range range0 = Range.ofLength(9223372036854775807L);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      range0.forEach(consumer0);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      long long0 = range0.getBegin(range_CoordinateSystem0);
      assertEquals(1L, long0);
      assertFalse(range0.isEmpty());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.908318357393279
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Range range0 = Range.of((-2147483648L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      range0.toString(range_CoordinateSystem0);
      Object object0 = new Object();
      Long long0 = new Long((-2147483648L));
      Range.of((-2147483648L));
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange((String) null, range_CoordinateSystem1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range.of(range_CoordinateSystem0, 0L, 9223372032559808516L);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.8444872614601695
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Range range0 = Range.of(1093L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      long long0 = range0.getEnd(range_CoordinateSystem0);
      assertEquals(1094L, long0);
      
      Range range1 = Range.of(1094L);
      boolean boolean0 = range0.isSubRangeOf(range1);
      boolean boolean1 = range0.equals(range1);
      assertTrue(boolean1 == boolean0);
      
      Long long1 = new Long(386L);
      range0.getEnd();
      long long2 = range1.getBegin();
      assertFalse(range1.equals((Object)range0));
      assertEquals(1094L, long2);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.8492350266892
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Range range0 = Range.of((-128L));
      range0.equals("^C&3r+*jq#mpz&Ny");
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      long long0 = range0.getBegin(range_CoordinateSystem0);
      assertEquals((-127L), long0);
      
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      long long1 = range0.getBegin(range_CoordinateSystem1);
      assertFalse(range0.isEmpty());
      assertEquals((-128L), long1);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.282303075948998
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Range range0 = Range.of((-128L), (-128L));
      Range range1 = Range.of((-66L), (-66L));
      Object object0 = new Object();
      range1.intersection(range0);
      range0.equals(range1);
      long long0 = 787L;
      // Undeclared exception!
      try { 
        range1.complementFrom((Collection<Range>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Range range0 = Range.ofLength(385L);
      Long long0 = new Long(385L);
      boolean boolean0 = range0.equals(long0);
      assertFalse(boolean0);
      assertFalse(range0.isEmpty());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      long long0 = 0L;
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      // Undeclared exception!
      try { 
        Range.of(range_CoordinateSystem0, 1L, 0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Range range0 = Range.of(1093L);
      range0.equals(range0);
      Long long0 = new Long(386L);
      assertEquals(386L, (long)long0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.9237840993113355
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Range range0 = Range.of((-2224L), (-2224L));
      Long long0 = new Long(208L);
      Range range1 = Range.of((-2825L), (-2224L));
      boolean boolean0 = range1.equals(range0);
      range0.getBegin();
      Object object0 = new Object();
      range0.equals(object0);
      boolean boolean1 = range1.equals((Object) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = range0.intersection(range0);
      Object object0 = new Object();
      boolean boolean0 = range1.isSubRangeOf(range1);
      assertTrue(range0.isEmpty());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-32768L), (-32768L));
      Object object0 = new Object();
      boolean boolean0 = range0.equals((Object) null);
      assertFalse(boolean0);
      assertTrue(range0.isEmpty());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 406L, 406L);
      Consumer<Long> consumer0 = (Consumer<Long>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Object object0 = new Object();
      boolean boolean0 = range0.equals((Object) null);
      assertTrue(range0.isEmpty());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Range.Comparators.values();
      Range range0 = Range.ofLength(444L);
      long long0 = 1L;
      Range range1 = Range.ofLength(1L);
      range0.equals(range1);
      String string0 = null;
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange((String) null, range_CoordinateSystem0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 406L, 406L);
      String string0 = range0.toString();
      assertEquals("[ 406 .. 405 ]/0B", string0);
      
      boolean boolean0 = range0.isEmpty();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Range range0 = Range.of((-128L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      String string0 = range0.toString(range_CoordinateSystem0);
      assertEquals("[ -128 .. -127 ]/SB", string0);
      
      Object object0 = new Object();
      boolean boolean0 = range0.equals((Object) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, 2147483647L, 2147483647L);
      range0.toString();
      Object object0 = new Object();
      range0.isEmpty();
      Object object1 = new Object();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      assertEquals("SB", range_CoordinateSystem1.getAbbreviatedName());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.9143943095713007
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Range range0 = Range.of(2147483647L, 9223372036854774714L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 2147483647L, 9223372036854774714L);
      range1.getBegin();
      range1.equals(range0);
      range0.equals(range1);
      Object object0 = new Object();
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Range.ofLength(9223372036854775807L);
      Range.Builder range_Builder0 = null;
      try {
        range_Builder0 = new Range.Builder((Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // range can not be null
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.9690137448276874
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Range range0 = Range.of((-32805L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      range0.getEnd(range_CoordinateSystem0);
      Range range1 = Range.of((-32804L));
      range0.getLength();
      range0.equals(range1);
      Object object0 = new Object();
      range0.equals(object0);
      Long long0 = new Long((-2820L));
      range1.getEnd();
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("(AeA/7}x2F+F^7`sIc");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.(AeA/7}x2F+F^7`sIc
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Range range0 = Range.of((-9223372036854775788L));
      Object object0 = new Object();
      boolean boolean0 = range0.equals(object0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Range range0 = Range.of((-2147483677L));
      Long long0 = new Long((-2147483677L));
      boolean boolean0 = range0.equals((Object) null);
      assertFalse(boolean0);
      
      Range range1 = Range.of((-2147483677L));
      assertSame(range1, range0);
      assertFalse(range1.isEmpty());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Range range0 = Range.of(2147483629L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      range0.getEnd(range_CoordinateSystem0);
      Range.of(2147483630L);
      range0.equals((Object) null);
      Long long0 = new Long((-1662L));
      range0.getEnd();
      Range.Comparators[] range_ComparatorsArray0 = Range.Comparators.values();
      assertEquals(4, range_ComparatorsArray0.length);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Range range0 = Range.ofLength(7L);
      boolean boolean0 = range0.equals((Object) null);
      assertFalse(boolean0);
      assertFalse(range0.isEmpty());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Range range0 = Range.ofLength(1236L);
      // Undeclared exception!
      try { 
        range0.startsBefore((Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null Range used in range comparison operation.
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Range range0 = Range.of(9223372036854775806L, 9223372036854775806L);
      List<Range> list0 = range0.split(9223372036854775806L);
      List<Range> list1 = range0.complementFrom(list0);
      assertFalse(list1.contains(range0));
      
      long long0 = range0.getEnd();
      assertEquals(9223372036854775806L, long0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.4339872044851467
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      long long0 = 9223372034707292161L;
      Range range0 = Range.of(range_CoordinateSystem0, 9223372034707292161L, 9223372034707292161L);
      List<Range> list0 = range0.complement(range0);
      String string0 = "";
      range0.equals("");
      range0.complementFrom(list0);
      // Undeclared exception!
      try { 
        range0.forEach((Consumer<? super Long>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Range range0 = Range.of(9223372036854774714L);
      range0.equals(range0);
      Range.CoordinateSystem.values();
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Range range0 = Range.of(0L);
      Range range1 = Range.of(1L);
      Range range2 = Range.of(0L);
      range1.isSubRangeOf(range0);
      range0.equals(range1);
      range1.getEnd();
      range0.equals(range2);
      range1.getEnd();
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("invalid startOffset %d: file is only %d bytes");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.invalid startOffset %d: file is only %d bytes
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.9264175554979963
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Range range0 = Range.of(9223372036854775423L);
      range0.equals((Object) null);
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.874573052004374
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483655L, 2147483655L);
      range0.toString();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range1 = Range.parseRange("[ 2147483655 .. 2147483654 ]/0B", range_CoordinateSystem1);
      range1.startsBefore(range0);
      range0.equals(range1);
      Range.Comparators.values();
      Range.Comparators[] range_ComparatorsArray0 = Range.Comparators.values();
      assertEquals(4, range_ComparatorsArray0.length);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Range range0 = Range.of((-2147483648L));
      Object object0 = new Object();
      Long long0 = new Long((-2147483648L));
      range0.equals((Object) null);
      Range range1 = Range.of((-2147483648L));
      assertSame(range1, range0);
      assertFalse(range1.isEmpty());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Range range0 = Range.of(924L, 924L);
      Object object0 = new Object();
      Range range1 = Range.of(923L, 924L);
      boolean boolean0 = range0.equals(range1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Range range0 = Range.ofLength(2147483671L);
      Long long0 = new Long(255L);
      Long long1 = new Long(606L);
      range0.equals(long1);
      Object object0 = new Object();
      range0.equals(object0);
      boolean boolean0 = range0.equals(long1);
      assertFalse(boolean0);
      
      Object object1 = new Object();
      range0.equals((Object) null);
      Range.CoordinateSystem.values();
      long long2 = range0.getEnd();
      assertEquals(2147483670L, long2);
      
      Object object2 = new Object();
      boolean boolean1 = range0.equals((Object) null);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.010752589246022
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 9223372036854775807L, 9223372036854775807L);
      range0.equals(range_CoordinateSystem0);
      Object object0 = new Object();
      Range range1 = Range.of(9223372036854775807L);
      range1.getEnd();
      range1.equals(range0);
      Range range2 = Range.of(9223372036854775807L);
      range2.getBegin();
      // Undeclared exception!
      try { 
        Range.parseRange("org.jcvi.jillion.core.Range$UnsignedShortStartShortLengthRange", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse org.jcvi.jillion.core.Range$UnsignedShortStartShortLengthRange into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.136539873025358
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-9223372036854775787L), (-9223372036854775787L));
      Object object0 = new Object();
      Object object1 = new Object();
      Range range1 = Range.of((-9223372036854775787L));
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      long long0 = range1.getEnd(range_CoordinateSystem1);
      assertEquals((-9223372036854775786L), long0);
      
      boolean boolean0 = range0.equals(range1);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 1990L, 9223372032559808492L);
      range0.getBegin();
      range0.equals((Object) null);
      Object object0 = new Object();
      range0.equals(object0);
      Object object1 = new Object();
      Range.Comparators.values();
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("?");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.?
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = Range.ofLength(0L);
      Range range2 = range0.intersection(range1);
      Range range3 = Range.ofLength(1123L);
      range3.toString();
      range3.intersects(range2);
      range2.equals(range3);
      range3.getEnd();
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("[ 0 .. 1122 ]/0B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.[ 0 .. 1122 ]/0B
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Range range0 = Range.ofLength(9223372036854775807L);
      range0.equals((Object) null);
      Long long0 = new Long(9223372036854775807L);
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Range range0 = Range.ofLength(9223372032559808492L);
      Range range1 = Range.ofLength(9223372036854775807L);
      Range range2 = Range.ofLength(9223372036854775807L);
      Object object0 = new Object();
      boolean boolean0 = range0.equals(object0);
      Object object1 = new Object();
      boolean boolean1 = range1.equals(range0);
      assertTrue(boolean1 == boolean0);
      assertSame(range1, range2);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Range range0 = Range.ofLength(9223372036854775807L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 127L, 9223372036854775807L);
      Long long0 = new Long(127L);
      range0.equals(range1);
      String string0 = null;
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Range range0 = Range.of((-32805L));
      range0.equals(range0);
      range0.equals(range0);
      Range.CoordinateSystem.values();
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf(".-hi-29#gy=X-wG3&r");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators..-hi-29#gy=X-wG3&r
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      long long0 = 9223372032559808492L;
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Object object0 = new Object();
      Range.of(range_CoordinateSystem0, 9223372032559808492L, 9223372036854775807L);
      // Undeclared exception!
      try { 
        Range.parseRange("2l!/gN)", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse 2l!/gN) into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.401197381662154
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-9223372036854775787L), (-9223372036854775787L));
      Object object0 = new Object();
      long long0 = range0.getLength();
      assertEquals(1L, long0);
      
      List<Range> list0 = range0.complement(range0);
      assertFalse(range0.isEmpty());
      assertTrue(list0.contains(range0));
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 3103L, 2147483640L);
      Range.Builder range_Builder0 = new Range.Builder(3103L, 2147483640L);
      range0.equals((Object) null);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      long long0 = 9223372036854775807L;
      Range range0 = Range.ofLength(9223372036854775807L);
      // Undeclared exception!
      try { 
        range0.toString((Range.CoordinateSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // coordinateSystem can not be null
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Range range0 = Range.of(1093L);
      // Undeclared exception!
      try { 
        range0.getEnd((Range.CoordinateSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // CoordinateSystem can not be null
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Range range0 = Range.of(2147483640L);
      Range range1 = Range.of(2147483640L);
      Range range2 = Range.of(2147483640L);
      range0.equals(range2);
      long long0 = range0.getEnd();
      assertEquals(2147483640L, long0);
      assertSame(range0, range1);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Range range0 = Range.of(924L, 9223372036854774725L);
      range0.equals(range0);
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Range range0 = Range.of(2147483647L, 9223372036854774714L);
      Object object0 = new Object();
      boolean boolean0 = range0.equals((Object) null);
      assertFalse(range0.isEmpty());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.075893987517936
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Range range0 = Range.of(2147483647L, 2147483647L);
      Range range1 = Range.of(2147483647L, 9223372036854774714L);
      range1.equals(range0);
      Object object0 = new Object();
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 406L, 406L);
      Range range1 = Range.of(range_CoordinateSystem0, 406L, 406L);
      range0.equals(range1);
      assertTrue(range1.isEmpty());
      assertSame(range1, range0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.7581004844121146
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = Range.ofLength(0L);
      Range range2 = range0.intersection(range1);
      Object object0 = new Object();
      boolean boolean0 = range0.equals(object0);
      assertFalse(boolean0);
      
      boolean boolean1 = range2.equals((Object) null);
      assertTrue(range1.isEmpty());
      assertFalse(boolean1);
      assertSame(range2, range1);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Range range0 = Range.of(2147483647L);
      // Undeclared exception!
      try { 
        range0.getBegin((Range.CoordinateSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // CoordinateSystem can not be null
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Range range0 = Range.of((-128L));
      range0.toString();
      Object object0 = new Object();
      Range range1 = Range.of((-128L));
      range0.equals(range1);
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("[ -128 .. -128 ]/0B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.[ -128 .. -128 ]/0B
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.9786611832420213
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Range range0 = Range.ofLength(2147483671L);
      Long long0 = new Long(255L);
      Range range1 = Range.of(255L, 2147483671L);
      range1.getLength();
      range1.getBegin();
      range1.equals(range0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      assertFalse(object2.equals((Object)object1));
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Range range0 = Range.ofLength(2147483671L);
      Range.ofLength(2147483671L);
      range0.equals(range0);
      Object object0 = new Object();
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.8608146679218707
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Range range0 = Range.of((-70L), (-70L));
      Object object0 = new Object();
      range0.equals(object0);
      Range range1 = Range.of((-94L), (-70L));
      range1.equals(range0);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Range range0 = Range.of(2147483640L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      long long0 = range0.getEnd(range_CoordinateSystem0);
      assertEquals(2147483641L, long0);
      
      Range range1 = Range.of(2147483647L);
      boolean boolean0 = range0.equals(range1);
      assertFalse(boolean0);
      
      Long long1 = new Long((-9223372036854775788L));
      long long2 = range0.getEnd();
      assertEquals(2147483640L, long2);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-9223372036854775787L), (-9223372036854775787L));
      Range range1 = Range.of((-2760L), 4294967295L);
      range0.equals(range1);
      Range.Comparators.values();
      Range.Comparators[] range_ComparatorsArray0 = Range.Comparators.values();
      assertEquals(4, range_ComparatorsArray0.length);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      Range.Builder range_Builder0 = new Range.Builder(range0);
      String string0 = range0.toString();
      assertEquals("[ 2147483647 .. 2147483646 ]/0B", string0);
      
      Object object0 = new Object();
      boolean boolean0 = range0.equals((Object) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.9025538185947704
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Range range0 = Range.of(406L, 9223372036854774725L);
      Object object0 = new Object();
      Range range1 = Range.of(923L, 9223372036854774725L);
      range0.equals(range1);
      assertFalse(range0.isEmpty());
      
      long long0 = range1.getBegin();
      assertEquals(923L, long0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483625L, 2147483625L);
      range0.equals(range0);
      Range.Comparators.values();
      Range.Comparators[] range_ComparatorsArray0 = Range.Comparators.values();
      assertEquals(4, range_ComparatorsArray0.length);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 1990L, 9223372032559808492L);
      range0.getBegin();
      range0.equals((Object) null);
      Object object0 = new Object();
      Object object1 = new Object();
      Range.Comparators.values();
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("?");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.?
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 3103L, 2147483640L);
      range0.toString();
      range0.toString(range_CoordinateSystem0);
      range0.equals(range0);
      Range.Comparators[] range_ComparatorsArray0 = Range.Comparators.values();
      Range.Comparators[] range_ComparatorsArray1 = Range.Comparators.values();
      assertFalse(range_ComparatorsArray1.equals((Object)range_ComparatorsArray0));
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Range range0 = Range.of(9223372036854774714L, 9223372036854774714L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 9223372036854774714L, 9223372036854774714L);
      range0.getBegin();
      range0.equals(range1);
      range0.isEmpty();
      Object object0 = new Object();
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.9689526668537134
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 3103L, 2147483640L);
      Range.Builder range_Builder0 = new Range.Builder(3103L, 2147483640L);
      range0.toString();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range1 = Range.parseRange("[ 3103 .. 2147483639 ]/0B", range_CoordinateSystem1);
      range1.toString(range_CoordinateSystem1);
      range0.equals(range1);
      Range.Comparators range_Comparators0 = Range.Comparators.LONGEST_TO_SHORTEST;
      Range.Comparators[] range_ComparatorsArray0 = Range.Comparators.values();
      Range.Comparators[] range_ComparatorsArray1 = Range.Comparators.values();
      assertFalse(range_ComparatorsArray1.equals((Object)range_ComparatorsArray0));
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.996306798305616
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 3103L, 2147483640L);
      Range.Builder range_Builder0 = new Range.Builder(3103L, 2147483640L);
      range0.toString();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      Range range1 = Range.parseRange("[ 3102 .. 2147483639 ]/0B", range_CoordinateSystem1);
      range0.equals(range1);
      Object object0 = new Object();
      Range.CoordinateSystem range_CoordinateSystem2 = Range.CoordinateSystem.ZERO_BASED;
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.0244000293419413
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483640L, 2147483640L);
      range0.split(2147483640L);
      Range.Builder range_Builder0 = new Range.Builder(2147483640L, 2147483640L);
      range0.toString();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range1 = Range.parseRange("[ 2147483640 .. 2147483639 ]/0B", range_CoordinateSystem1);
      range0.equals(range1);
      range0.equals(range_CoordinateSystem0);
      range0.iterator();
      Range.Comparators range_Comparators0 = Range.Comparators.LONGEST_TO_SHORTEST;
      range0.getEnd();
      // Undeclared exception!
      try { 
        Range.parseRange("Null Range used in intersection operation.", range_CoordinateSystem1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse Null Range used in intersection operation. into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483647L, 4294967295L);
      Object object0 = new Object();
      Object object1 = new Object();
      Range range1 = Range.of(2147483640L);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      long long0 = range1.getEnd(range_CoordinateSystem1);
      assertEquals(2147483641L, long0);
      
      boolean boolean0 = range0.equals(range1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483655L, 2147483655L);
      range0.equals(range0);
      Range.Comparators[] range_ComparatorsArray0 = Range.Comparators.values();
      Range.Comparators[] range_ComparatorsArray1 = Range.Comparators.values();
      assertFalse(range_ComparatorsArray1.equals((Object)range_ComparatorsArray0));
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Range range0 = Range.of(2147483647L, 9223372036854774714L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 2147483647L, 9223372036854774714L);
      range1.getBegin();
      range1.equals(range0);
      range0.equals(range1);
      Object object0 = new Object();
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.2145970709167044
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Range range0 = Range.of((-32805L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      range0.getEnd(range_CoordinateSystem0);
      Range range1 = Range.of(range_CoordinateSystem0, (-32805L), (-32804L));
      range0.equals(range1);
      Range range2 = range0.intersection(range1);
      range0.getBegin();
      range2.toString();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("[ -32805 .. -32805 ]/0B", range_CoordinateSystem1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse [ -32805 .. -32805 ]/0B into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.parseRange("e$4-8?nSjdD~B", range_CoordinateSystem0);
      assertFalse(range0.isEmpty());
  }
}
