/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 06:22:41 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.Document;
import org.dom4j.DocumentFactory;
import org.dom4j.Element;
import org.dom4j.ElementHandler;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.bean.BeanAttribute;
import org.dom4j.bean.BeanAttributeList;
import org.dom4j.bean.BeanElement;
import org.dom4j.dom.DOMDocument;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.ElementModifier;
import org.dom4j.io.ElementStack;
import org.dom4j.io.PruningElementStack;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXModifyElementHandler;
import org.dom4j.io.SAXReader;
import org.dom4j.tree.DefaultDocument;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.xml.sax.ErrorHandler;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.XMLFilter;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XMLReader xMLReader0 = null;
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl0.endDocument();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl1.getParent();
      try { 
        sAXReader0.setProperty("org.dom4j.io.SAXReader$SAXEntityResolver", xMLFilterImpl1);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: org.dom4j.io.SAXReader$SAXEntityResolver
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      assertTrue(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      QName qName0 = new QName("", namespace0, "");
      qName0.getDocumentFactory();
      qName0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null, true);
      sAXReader0.setDocumentFactory((DocumentFactory) null);
      boolean boolean0 = sAXReader0.isIncludeExternalDTDDeclarations();
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      String string0 = "//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/2>m!K/h@HRAfYyJ5`U}0h@HRAfYyJ5`U}";
      EvoSuiteFile evoSuiteFile0 = null;
      sAXReader0.setDocumentFactory(documentFactory0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/2>m!K/h@HRAfYyJ5`U}0h@HRAfYyJ5`U}");
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      assertFalse(sAXReader0.isIgnoreComments());
      
      sAXReader0.setIgnoreComments(true);
      assertTrue(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      assertTrue(sAXReader0.isStringInternEnabled());
      
      sAXReader0.setStringInternEnabled(false);
      assertFalse(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("e(l `CV-Sx=+q^_Y&~");
      String string0 = null;
      sAXReader0.getErrorHandler();
      sAXReader0.setErrorHandler((ErrorHandler) null);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.setIncludeInternalDTDDeclarations(false);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.getXMLReader();
      MockFile mockFile0 = new MockFile("w!Pu", "{|E=1jry?^l");
      mockFile0.setExecutable(false, false);
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, (String) null, (File) mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BeanElement beanElement0 = new BeanElement(" r4M", " r4M");
      BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0);
      QName qName0 = beanAttributeList0.getQName(0);
      String string0 = "F3ks514_Bwtn>b";
      beanElement0.createCopy("F3ks514_Bwtn>b");
      QName.get("F3ks514_Bwtn>b", " r4M");
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      sAXReader0.getXMLFilter();
      sAXReader0.setXMLReader((XMLReader) null);
      sAXReader0.isIgnoreComments();
      BeanAttribute beanAttribute0 = beanAttributeList0.attribute(0);
      beanAttribute0.createXPathFilter(" r4M");
      beanAttribute0.getNamespace();
      MockFile mockFile0 = new MockFile("`,)olmc!'bcV;icYg|", "E");
      String string1 = null;
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, (String) null, (File) mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6891781665181376
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl0.endDocument();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl1.getParent();
      xMLFilterImpl1.getEntityResolver();
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      StringReader stringReader0 = new StringReader("h@HRAfYyJ5`U}");
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      MockFile mockFile0 = new MockFile((String) null, "l2>m!K");
      sAXReader0.setXMLFilter((XMLFilter) null);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      InputStream inputStream0 = null;
      // Undeclared exception!
      try { 
        sAXReader0.read((InputStream) null, "h@HRAfYyJ5`U}");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      String string0 = "S3!&=(\"0";
      defaultDocumentFactory0.createNamespace("S3!&=(\"0", "S3!&=(\"0");
      QName.get("S3!&=(\"0");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      sAXReader0.getXMLFilter();
      SAXReader sAXReader1 = new SAXReader((XMLReader) null, false);
      sAXReader1.isIncludeInternalDTDDeclarations();
      String[] stringArray0 = new String[0];
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      PruningElementStack pruningElementStack0 = null;
      try {
        pruningElementStack0 = new PruningElementStack(stringArray0, dispatchHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid path of length: 0 it must be greater than 2
         //
         verifyException("org.dom4j.io.PruningElementStack", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.751044712482355
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      String string0 = "//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/http:/xml.org/sax/properties/lexical-handler/l2>m!K/j6H/pw8=l\"v@f6\"\\GV0/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/'~ vGM:lkB,(vhU/h@HRAfYyJ5`U}/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/|3%<@6VCG;A)O>m/|3%<@6VCG;A)O>m/|3%<@6VCG;A)O>m1/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/ : /M]ghv'zi)<stEh9<0 :tIRw[sX2SJn\\H'#08";
      File file0 = MockFile.createTempFile("//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/http:/xml.org/sax/properties/lexical-handler/l2>m!K/j6H/pw8=l\"v@f6\"GV0/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/'~ vGM:lkB,(vhU/h@HRAfYyJ5`U}/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/|3%<@6VCG;A)O>m/|3%<@6VCG;A)O>m/|3%<@6VCG;A)O>m1/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/ : /M]ghv'zi)<stEh9<0 :tIRw[sX2SJnH'#08", "//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/http:/xml.org/sax/properties/lexical-handler/l2>m!K/j6H/pw8=l\"v@f6\"GV0/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/'~ vGM:lkB,(vhU/h@HRAfYyJ5`U}/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/|3%<@6VCG;A)O>m/|3%<@6VCG;A)O>m/|3%<@6VCG;A)O>m1/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/ : /M]ghv'zi)<stEh9<0 :tIRw[sX2SJnH'#08");
      MockFile mockFile0 = new MockFile(file0, "");
      try { 
        sAXReader0.read((File) mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.807564737707392
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl1.getParent();
      xMLFilterImpl1.endDocument();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      StringReader stringReader0 = new StringReader("h@HRAfYyJ5`U}");
      SAXReader sAXReader0 = new SAXReader(true);
      MockFile mockFile0 = new MockFile("l@", "UY&q?");
      File file0 = MockFile.createTempFile("`_137joZR]srd`8", "l@", (File) mockFile0);
      MockFile.createTempFile("l2>m!K", "`_137joZR]srd`8", (File) mockFile0);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl0.endDocument();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.setContentHandler(xMLFilterImpl0);
      String string0 = "{BT/2uKB*";
      xMLFilterImpl1.skippedEntity("{BT/2uKB*");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl1.getParent();
      xMLFilterImpl1.getEntityResolver();
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      MockFile.createTempFile("{BT/2uKB*", "{BT/2uKB*");
      StringReader stringReader0 = new StringReader("{BT/2uKB*");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      sAXReader0.getDocumentFactory();
      String string0 = "http://xml.org/sax/properties/declaration-handler";
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string1 = "p(Re<,-4";
      String string2 = "org.dom4j.tree.LazyList";
      try { 
        MockURI.URI("http://xml.org/sax/properties/declaration-handler", "//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/l2>m!K/EIqsX/=q$)assFV;/http:/xml.org/sax/features/namespaces0h@HRAfYyJ5`U}", "http://5ml.org/sax/features/validation", "//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/{j)mT50+~Kf~/%H/%y2cYyk59+{yV0/tmp/jKG'10h@HRAfYyJ5`U}", "http://5ml.org/sax/features/validation");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: http://xml.org/sax/properties/declaration-handler://%2F%2Fhome%2Fubuntu%2Fevosuite_readability_gen%2Fprojects%2F62_dom4j%2Fl2%3Em!K%2FEIqsX%2F=q$)assFV;%2Fhttp:%2Fxml.org%2Fsax%2Ffeatures%2Fnamespaces0h@HRAfYyJ5%60U%7Dhttp://5ml.org/sax/features/validation?//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/%7Bj)mT50+~Kf~/%25H/%25y2cYyk59+%7ByV0/tmp/jKG'10h@HRAfYyJ5%60U%7D#http://5ml.org/sax/features/validation
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, false);
      sAXReader0.createDefaultEntityResolver((String) null);
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("s#:U0U>M=%Mr;Z");
      sAXReader_SAXEntityResolver0.resolveEntity("s#:U0U>M=%Mr;Z", "s#:U0U>M=%Mr;Z");
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("//tmp/tmp/yn#M.G'W2VH=L0yn#M.G'W2VH=L2org.dom4j.DefaultDocumentFactory.singleton.strategy");
      sAXReader_SAXEntityResolver0.uriPrefix = "//tmp/tmp/yn#M.G'W2VH=L0yn#M.G'W2VH=L2org.dom4j.DefaultDocumentFactory.singleton.strategy";
      sAXReader_SAXEntityResolver0.resolveEntity("zXDYZ^~$5Y,^-@\"w", "//tmp/tmp/yn#M.G'W2VH=L0yn#M.G'W2VH=L2org.dom4j.DefaultDocumentFactory.singleton.strategy");
      String string0 = null;
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte byte0 = (byte) (-46);
      String string0 = null;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      sAXReader0.setStripWhitespaceText(true);
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, (byte) (-55), (byte) (-55));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.setDispatchHandler((DispatchHandler) null);
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class  not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getEncoding();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7986522062521288
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl0.endDocument();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl1.getParent();
      xMLFilterImpl1.getEntityResolver();
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      String string0 = "h@HRAfYyJ5`U}";
      StringReader stringReader0 = new StringReader("h@HRAfYyJ5`U}");
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      MockFile mockFile0 = new MockFile((String) null, "l2>!K");
      File file0 = MockFile.createTempFile("h@HRAfYyJ5`U}", "h@HRAfYyJ5`U}", (File) mockFile0);
      MockFile.createTempFile("h@HRAfYyJ5`U}", "l2>!K", (File) mockFile0);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.getDocumentFactory();
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      assertTrue(sAXReader0.isValidating());
      
      sAXReader0.setValidation(false);
      assertFalse(sAXReader0.isValidating());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory0.createQName("");
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      sAXReader0.getEntityResolver();
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl0.endDocument();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.setContentHandler(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl1.getParent();
      xMLFilterImpl1.getEntityResolver();
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      InputStream inputStream0 = null;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      try { 
        sAXReader0.read((InputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XMLReader xMLReader0 = null;
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl0.endDocument();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      xMLFilterImpl0.getParent();
      try { 
        sAXReader0.setFeature("//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/h@HRAfYyJ5`U}/@zC2K-zFP[%`3a?,'/h@HRAfYyJ5`U}0/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/3Sclgt]xjgh&E7x4r@/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/h@HRAfYyJ5`U}/$}|H-<YFb/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/file:/)^Pw|\"/d^C<[Ec1bE.50{BT/2uKB*1>;/1G_Wo m.h!C~#DNZ=;}0/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/h@HRAfYyJ5`U}/l2>m!K/h@HRAfYyJ5`U}0l2>m!K", true);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature: //home/ubuntu/evosuite_readability_gen/projects/62_dom4j/h@HRAfYyJ5`U}/@zC2K-zFP[%`3a?,'/h@HRAfYyJ5`U}0/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/3Sclgt]xjgh&E7x4r@/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/h@HRAfYyJ5`U}/$}|H-<YFb/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/file:/)^Pw|\"/d^C<[Ec1bE.50{BT/2uKB*1>;/1G_Wo m.h!C~#DNZ=;}0/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/h@HRAfYyJ5`U}/l2>m!K/h@HRAfYyJ5`U}0l2>m!K
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      defaultDocumentFactory0.createNamespace("S3!&=(\"0", "S3!&=(\"0");
      QName.get("S3!&=(\"0");
      String[] stringArray0 = new String[0];
      String string0 = ">/^ Oe6Se{{vW?";
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("0d3Un8eu");
      sAXReader_SAXEntityResolver0.uriPrefix = "0d3Un8eu";
      String string1 = null;
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "");
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.82337540094768
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      StringReader stringReader0 = new StringReader("the size: ");
      try { 
        sAXReader0.read((Reader) stringReader0, "//tmp/Jd2:sM>,m0yFLg%O3G&))o]{oH76");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document //tmp/Jd2:sM>,m0yFLg%O3G&))o]{oH76 : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl0.endDocument();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl1.getParent();
      xMLFilterImpl1.getEntityResolver();
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      String string0 = "//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/org.dom4j.dom.DOMCDATA/8}'T'wqn!~\\3$.0hUcdi~:\\0D'9&43PDF";
      String string1 = "org.dom4j.io.SAXReader$SAXEntityResolver";
      StringReader stringReader0 = new StringReader("org.dom4j.io.SAXReader$SAXEntityResolver");
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      try { 
        sAXReader0.read((Reader) stringReader0, "//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/org.dom4j.dom.DOMCDATA/8}'T'wqn!~\u0003$.0hUcdi~:\u0000D'9&43PDF");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.createDefaultEntityResolver("g5%C:'lEZB_;_FEi;");
      MockFile mockFile0 = new MockFile("//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/2>K/h@HRAfYyJ5`U}0h@HRAfYyJ5`U}");
      mockFile0.toURL();
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, (String) null, (File) mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      String string0 = null;
      sAXReader0.removeHandler("//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/Validation not supported for XMLReader: /Validation not supported for XMLReader: /Validation not supported for XMLReader: 0Validation not supported for XMLReader: ");
      String string1 = "2>!)";
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.endDocument();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.setContentHandler(xMLFilterImpl0);
      xMLFilterImpl1.skippedEntity("{BT/2uKB*");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl1.getParent();
      ElementModifier elementModifier0 = mock(ElementModifier.class, new ViolatedAssumptionAnswer());
      SAXModifyElementHandler sAXModifyElementHandler0 = new SAXModifyElementHandler(elementModifier0);
      sAXReader0.setDefaultHandler(sAXModifyElementHandler0);
      StringReader stringReader0 = new StringReader("{BT/2uKB*");
      SAXReader sAXReader1 = null;
      try {
        sAXReader1 = new SAXReader("Yi/sO+].D3xuV^.=.-_", true);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class Yi/sO+].D3xuV^.=.-_ not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((XMLReader) null);
      ElementStack elementStack0 = new ElementStack(705);
      elementStack0.getDispatchHandler();
      sAXReader0.addHandler(" PUBLIC \"", (ElementHandler) null);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null, false);
      sAXReader0.resetHandlers();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, (-617));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl0.endDocument();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      xMLFilterImpl0.getParent();
      xMLFilterImpl1.getEntityResolver();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      MockFile mockFile0 = new MockFile("l2>!K", "http://xml.org/sax/features/string-interning");
      StringReader stringReader0 = new StringReader("//Htbk,/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/h@HRAfYyJ5`U}/http:/xml.org/sax/features/namespace-prefixes/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/ : /6oz[/6oz[0p_V$5Qn(d%6_!?0KQ(./K#HjC+U0/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/h@HRAfYyJ5`U}/http:/xml.org/sax/features/namespace-prefixes/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/ : /6oz[/6oz[0p_V$5Qn(d%6_!?0KQ(./K#HjC+U");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        sAXReader0.read((InputStream) pipedInputStream0, "");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Y|P8A:{yn=T)-h~W");
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      try { 
        sAXReader0.setXMLReaderClassName("#document");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class #document not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      assertFalse(sAXReader0.isMergeAdjacentText());
      
      sAXReader0.setMergeAdjacentText(true);
      assertTrue(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl0.endDocument();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl1.getParent();
      xMLFilterImpl1.getEntityResolver();
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      try { 
        sAXReader0.read((InputStream) null, "//tmp/file:/0file:");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "e;YG4H>");
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl1.getEntityResolver();
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      URL uRL0 = MockURL.getFtpExample();
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      URL uRL0 = MockURL.getFtpExample();
      // Undeclared exception!
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = false;
      SAXReader sAXReader0 = new SAXReader((String) null);
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl0.endDocument();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl1.getParent();
      xMLFilterImpl1.getEntityResolver();
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      StringReader stringReader0 = new StringReader("h@HRAfYyJ5`U}");
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      try { 
        sAXReader0.read("//tmp/Jd2:sM>,m0e<vm*I|Y(@/Q:.teF]n");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      try { 
        sAXReader0.configureReader(xMLFilterImpl0, defaultHandler2_0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@4bd6904e Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null, true);
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      try { 
        sAXReader0.read((InputStream) mockFileInputStream0, "parent");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("E1JEJcbvZ/~WwZ6Jw", (String) null);
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      String string0 = ",\"4.-[P8";
      File file0 = MockFile.createTempFile(",\"4.-[P8", ",\"4.-[P8", (File) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte) (-7);
      byteArray0[4] = (byte)22;
      byteArray0[6] = (byte)6;
      byteArray0[6] = (byte)110;
      SAXReader sAXReader0 = new SAXReader(true);
      DOMDocument dOMDocument0 = new DOMDocument();
      sAXReader0.setEncoding("//tmp/D3`b7<0Z`L");
      StringReader stringReader0 = new StringReader("<!DOCTYPE ");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : XML document structures must start and end within the same entity. Nested exception: XML document structures must start and end within the same entity.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.startPrefixMapping("//tmp/7~CJ6{07~CJ6{", ":BwT03<V<;8LXI76");
      defaultHandler2_0.endDTD();
      sAXReader0.setErrorHandler(defaultHandler2_0);
      try { 
        sAXReader0.read((InputStream) null, "//tmp/org.jaxen.SimpleVariableContext0/tmp/$c15>#zXIU-o+l\" `0org.dom4j.datatype.Datatyp,Attribute");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: //tmp/org.jaxen.SimpleVariableContext0/tmp/$c15>#zXIU-o+l\" `0org.dom4j.datatype.Datatyp,Attribute Nested exception: no protocol: //tmp/org.jaxen.SimpleVariableContext0/tmp/$c15>#zXIU-o+l\" `0org.dom4j.datatype.Datatyp,Attribute
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte)30;
      byteArray0[3] = (byte)103;
      byteArray0[4] = (byte)22;
      byteArray0[6] = (byte)6;
      byteArray0[6] = (byte)110;
      SAXReader sAXReader0 = new SAXReader(true);
      DOMDocument dOMDocument0 = new DOMDocument();
      sAXReader0.setEncoding("//tmp/D3`b7<0Z`L");
      StringReader stringReader0 = new StringReader("<!DOCTYPE ");
      try { 
        sAXReader0.read("//tmp/D3`b7<0Z`L");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: //tmp/D3`b7<0Z`L Nested exception: no protocol: //tmp/D3`b7<0Z`L
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl0.endDocument();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.setContentHandler(xMLFilterImpl0);
      String string0 = "{BT/2uKB*";
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      sAXReader0.setEncoding("{BT/2uKB*");
      sAXReader0.installXMLFilter(xMLFilterImpl1);
      StringReader stringReader0 = new StringReader("{BT/2uKB*");
      stringReader0.reset();
      try { 
        sAXReader0.read((Reader) stringReader0, ">5_.HL3ob*>s)-xN");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.setContentHandler(xMLFilterImpl0);
      xMLFilterImpl1.skippedEntity("{BT/2K-B");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl1.getParent();
      xMLFilterImpl1.getEntityResolver();
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      InputStream inputStream0 = null;
      sAXReader0.setEncoding("{BT/2K-B");
      try { 
        sAXReader0.read((InputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      String string0 = "LZff' ;BmjdEHrHb";
      SAXReader sAXReader1 = new SAXReader((XMLReader) null);
      SAXContentHandler sAXContentHandler0 = sAXReader1.createContentHandler((XMLReader) null);
      xMLFilterImpl0.setContentHandler(sAXContentHandler0);
      MockFile mockFile0 = new MockFile("LZff' ;BmjdEHrHb", "LZff' ;BmjdEHrHb");
      URL uRL0 = mockFile0.toURL();
      sAXReader0.removeHandler("LZff' ;BmjdEHrHb");
      String string1 = ")(`~f0]nw#KJK8h<Z.J";
      sAXReader0.setEncoding(")(`~f0]nw#KJK8h<Z.J");
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@60499813 Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@60499813 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl0.endDocument();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      sAXReader0.setEncoding("contains() requires two arguments.");
      XMLFilterImpl xMLFilterImpl2 = (XMLFilterImpl)xMLFilterImpl1.getParent();
      xMLFilterImpl1.getEntityResolver();
      xMLFilterImpl1.getEntityResolver();
      sAXReader0.setXMLFilter(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        sAXReader0.read((InputStream) pipedInputStream0, "ttp://xml.org/sax/fatures/namespaces");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XMLReader xMLReader0 = null;
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl0.endDocument();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl1.getParent();
      xMLFilterImpl1.getEntityResolver();
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      StringReader stringReader0 = new StringReader("h@HRAfYyJ5`U}");
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      sAXReader0.setEncoding("h@HRAfYyJ5`U}");
      MockFile mockFile0 = new MockFile((String) null, "l2>m!K");
      MockFile.createTempFile("h@HRAfYyJ5`U}", "h@HRAfYyJ5`U}", (File) mockFile0);
      File file0 = MockFile.createTempFile("[TgnEP", "Error on line ", (File) mockFile0);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }
}
