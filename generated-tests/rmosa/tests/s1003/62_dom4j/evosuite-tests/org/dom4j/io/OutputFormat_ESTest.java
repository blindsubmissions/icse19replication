/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 06:14:10 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.908908734898781
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "XO~AS`x\"ny<:8OJ|%";
      stringArray0[1] = "XO~AS`x\"ny<:8OJ|%";
      stringArray0[2] = "";
      stringArray0[3] = "XO~AS`x\"ny<:8OJ|%";
      stringArray0[4] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setTrimText(true);
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isTrimText());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setPadText(false);
      assertTrue(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("K\"; 'CYCc~hCX", false, "K\"; 'CYCc~hCX");
      assertFalse(outputFormat0.isNewlines());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "K\"; 'CYCc~hCX";
      stringArray0[1] = "K\"; 'CYCc~hCX";
      stringArray0[2] = "\n";
      outputFormat0.setNewlines(true);
      stringArray0[3] = "_FnE0Pg\";lvn[";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isNewlines());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0791615912646864
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-padText", true, "$SDY");
      outputFormat0.isXHTML();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterNTags(2245);
      String[] stringArray0 = new String[22];
      stringArray0[0] = "`bYq^s]S2HL";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      assertEquals(2245, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("%w$~");
      outputFormat0.isNewlines();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "T";
      stringArray0[1] = "T";
      stringArray0[2] = "%w$~";
      stringArray0[3] = "T";
      stringArray0[4] = "ZHqf";
      stringArray0[5] = "T";
      stringArray0[6] = "T";
      outputFormat0.parseOptions(stringArray0, 651);
      assertEquals("%w$~", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newlines");
      outputFormat0.setEncoding("1j-M~t{q{>X2+&Zc9");
      outputFormat0.setNewLineAfterNTags(1913);
      assertEquals("1j-M~t{q{>X2+&Zc9", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmptyXO~AS`x\"ny<:8OJ|%");
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.375024252984546
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("`bYq^s]S2HL", false, "`bYq^s]S2HL");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "`bYq^s]S2HL";
      stringArray0[1] = "`bYq^s]S2HL";
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat1.getIndent());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertTrue(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isXHTML());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertTrue(outputFormat1.isTrimText());
      assertTrue(outputFormat1.isPadText());
      assertFalse(outputFormat1.isOmitEncoding());
      
      stringArray0[2] = "`bYq^s]S2HL";
      stringArray0[3] = "`bYq^s]S2HL";
      stringArray0[4] = "`bYq^s]S2HL";
      stringArray0[5] = "`bYq^s]S2HL";
      stringArray0[6] = "`bYq^s]S2HL";
      stringArray0[7] = "1j-M~t{q{>X2+&Zc9";
      stringArray0[8] = "`bYq^s]S2HL";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("`bYq^s]S2HL", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-padText", true, "$SDY");
      outputFormat0.setIndent(false);
      outputFormat0.setEncoding("<>sOAK%MX6)UOYMb");
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setIndent(true);
      int int0 = (-13);
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, (-1911399964));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("cT=bIL;!lW", false);
      outputFormat0.getIndent();
      outputFormat0.isExpandEmptyElements();
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      
      outputFormat0.setNewLineAfterDeclaration(false);
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.setNewLineAfterNTags((-2835));
      outputFormat0.setIndentSize((-2835));
      outputFormat0.setIndentSize(0);
      boolean boolean1 = true;
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterNTags(1834);
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.getEncoding();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('x');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (x)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      outputFormat0.setPadText(true);
      outputFormat0.setIndent(true);
      outputFormat0.setNewlines(true);
      outputFormat0.getLineSeparator();
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.isOmitEncoding();
      outputFormat0.setPadText(false);
      outputFormat1.setTrimText(true);
      outputFormat0.isPadText();
      outputFormat0.isOmitEncoding();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('M');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (M)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndentSize((-2197));
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      assertEquals("", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("j4f/>uC*d");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('+');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (+)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3020613918729727
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Q`#h3(Y";
      stringArray0[1] = "taNw>|:";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      boolean boolean0 = outputFormat0.isPadText();
      assertFalse(boolean0);
      
      String string0 = outputFormat0.getLineSeparator();
      assertFalse(outputFormat0.isXHTML());
      assertEquals("\n", string0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("", outputFormat0.getIndent());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Gh+Yfl/", true, "Gh+Yfl/");
      assertFalse(outputFormat0.isOmitEncoding());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "$SDY";
      outputFormat0.setOmitEncoding(true);
      assertTrue(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("1F*Io$Adf#dN'M");
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      
      outputFormat0.setNewLineAfterDeclaration(false);
      boolean boolean0 = outputFormat0.isTrimText();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("3;-)!x@K\u0004#^");
      outputFormat0.setIndent("-expandEmptyXO~AS`x\"ny<:8OJ|%");
      assertEquals("-expandEmptyXO~AS`x\"ny<:8OJ|%", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = new OutputFormat("-expandEmptyXO~AS`x\"ny<:8OJ|%");
      outputFormat1.setEncoding((String) null);
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("XO~AS`x\"ny<:8OJ|%");
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "XO~AS`x\"ny<:8OJ|%";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      outputFormat0.parseOptions(stringArray0, 138);
      OutputFormat outputFormat1 = new OutputFormat("", true);
      outputFormat1.setTrimText(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setTrimText(true);
      assertTrue(outputFormat0.isTrimText());
      assertEquals("  ", outputFormat0.getIndent());
      
      outputFormat1.setIndent("");
      assertFalse(outputFormat1.isPadText());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.isNewLineAfterDeclaration();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertEquals(1, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "/,&!+19\\+9PUN;pH";
      OutputFormat outputFormat0 = new OutputFormat("/,&!+19+9PUN;pH", true);
      boolean boolean0 = false;
      int int0 = 39;
      outputFormat0.setIndentSize(39);
      outputFormat0.setXHTML(false);
      outputFormat0.isSuppressDeclaration();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('t');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (t)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("`bYq^s]S2HL", false, "`bYq^s]S2HL");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "`bYq^s]S2HL";
      stringArray0[1] = "`bYq^s]S2HL";
      stringArray0[2] = "`bYq^s]S2HL";
      stringArray0[3] = "`bYq^s]S2HL";
      stringArray0[7] = "`bYq^s]S2HL";
      stringArray0[5] = "`bYq^s]S2HL";
      stringArray0[6] = "`bYq^s]S2HL";
      stringArray0[7] = "1j-M~t{q{>X2+&Zc9";
      stringArray0[8] = "`bYq^s]S2HL";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getNewLineAfterNTags();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1455680084));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1455680084
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(true);
      String[] stringArray0 = new String[2];
      outputFormat0.setIndentSize(2411);
      stringArray0[0] = "p`u|sr6kld>VS";
      stringArray0[1] = "-omitEncoding";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "-omitEncoding";
      stringArray1[1] = "p`u|sr6kld>VS";
      stringArray1[2] = "-omitEncoding";
      int int0 = (-1644315024);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-1644315024));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1644315024
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setEncoding("bvxyhr//N ");
      outputFormat0.setIndent((String) null);
      assertEquals("bvxyhr//N ", outputFormat0.getEncoding());
      
      OutputFormat outputFormat1 = new OutputFormat("qIw%dZ`Nr 'BCA");
      outputFormat1.setEncoding((String) null);
      assertFalse(outputFormat1.isNewlines());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewlines(true);
      char char0 = '\'';
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.setPadText(true);
      outputFormat0.setNewLineAfterNTags(0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      int int0 = (-1842);
      outputFormat0.setIndent(false);
      outputFormat0.setPadText(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1842));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1842
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-padTex", true, "-padTex");
      outputFormat0.setTrimText(true);
      outputFormat0.setXHTML(true);
      outputFormat0.isXHTML();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-expandEmptybYq^s]";
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-4117));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4117
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml$SDY", false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xhtml$SDY";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-xhtml$SDY";
      stringArray0[3] = "-lineSeparator";
      stringArray0[4] = "-xhtml$SDY";
      stringArray0[5] = "-xhtml$SDY";
      stringArray0[6] = "-xhtml$SDY";
      stringArray0[7] = "-xhtml$SDY";
      stringArray0[8] = "-xhtml$SDY";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("-xhtml$SDY", outputFormat0.getLineSeparator());
      assertEquals(9, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-padText", true, "-xhtml`bYq^s]2HL");
      assertFalse(outputFormat0.isPadText());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-padText";
      stringArray0[1] = "U64CpwjnDL@m2(I";
      stringArray0[2] = "-padText";
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.parseOptions(stringArray0, 3045);
      assertTrue(outputFormat0.isPadText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "nsqN EaK1I*?:";
      stringArray0[1] = "-suppressDeclaration";
      stringArray0[2] = ")";
      stringArray0[3] = "-xhtml";
      stringArray0[4] = "hMy>}]hV^Ueicar_7=";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-xhtml30eX.L]8mY!";
      stringArray0[1] = "-padText";
      stringArray0[2] = ">(|`X";
      stringArray0[3] = "-expandEmpty-dad}ex";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isPadText());
      assertTrue(outputFormat0.isXHTML());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent("pW");
      OutputFormat outputFormat1 = new OutputFormat("1F*Io$");
      outputFormat0.setEncoding("1F*Io$");
      outputFormat0.getAttributeQuoteCharacter();
      assertEquals("pW", outputFormat0.getIndent());
      
      outputFormat1.setIndent(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Q`#h3(Y";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "1F*Io$Adf#dN'M";
      stringArray0[3] = "<>sOAK%MX6)UOYMb";
      int int0 = outputFormat1.parseOptions(stringArray0, 1);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      boolean boolean0 = true;
      String string0 = "-padText";
      OutputFormat outputFormat0 = new OutputFormat("-padText", true, "-encoding");
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "$SDY";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indentSize", true);
      outputFormat0.setTrimText(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setXHTML(true);
      outputFormat0.isXHTML();
      outputFormat0.setNewlines(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "-indentSize";
      stringArray0[3] = "-indentSize";
      stringArray0[4] = "-indentSize";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-indentSize\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-xhtml-xhtml30eX.L]8mYj!";
      stringArray0[1] = "-indent";
      stringArray0[2] = "4gXf%|";
      stringArray0[3] = "B'GQsB>cVw`%";
      stringArray0[4] = "awXN[u";
      stringArray0[5] = "R";
      stringArray0[6] = "";
      outputFormat0.setIndentSize(2830);
      outputFormat0.parseOptions(stringArray0, 2830);
      outputFormat0.parseOptions(stringArray0, 2830);
      outputFormat0.parseOptions(stringArray0, 5827);
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.parseOptions(stringArray0, 5827);
      outputFormat0.parseOptions(stringArray0, 2830);
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.parseOptions(stringArray0, 2830);
      outputFormat0.parseOptions(stringArray0, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
