/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 06:23:30 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "$eKl", "[i>p", "", "$eKl");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      ClassWriter classWriter1 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, (-1), "Ar9I6l69<F+ls", "", "", "Ar9I6l69<F+ls");
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Exceptions", "Exceptions", "Exceptions", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "[.R4H]rR");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2008, "Ar9I6l69<F+ls", "", "Ar9I6l69<F+ls", "");
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter0.next = fieldWriter1;
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("");
      byte[] byteArray0 = new byte[0];
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (-4067), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.toByteArray();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-372), "SourceFile", "5wNPn", "SourceFile", "SourceFile");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("5wNPn", false);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 168, "LUi ~1&)\"]", "5wNPn", "", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0360334832009355
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1936);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-389), "u}uf+7o??:iH$", "The wildcard list must not be null", "[i>p", "u}uf+7o??:iH$");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.getSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      fieldWriter0.visitAnnotation("'.8^JFXk}Me", false);
      fieldWriter0.put(byteVector0);
      classWriter0.addUninitializedType("RuntimeInvisibleAnnotations", (-481));
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1816);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 817, "", "", "", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1831264038703304
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String string0 = "Ar9I6l69<F+ls";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-546), "", "", (String) null, "");
      fieldWriter0.visitAnnotation("org.apache.commons.io.filefilter.SizeFileFilter", true);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      classWriter0.toByteArray();
      classWriter0.visitOuterClass("", "", "");
      String string1 = "/J`eC'y ";
      String string2 = null;
      Object object0 = new Object();
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1816);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 239, "The strings must not be null", "", (String) null, "[i>p");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1816);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.7751292747786216
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1936);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-389), "u}uf+7o??:iH$", "The wildcard list must not be null", "[i>p", "u}uf+7o??:iH$");
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("RuntimeVisibleAnnotations");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1936);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-389), "u}uf+7o??:iH$", "The wildcard list must not be null", "[i>p", "u}uf+7o??:iH$");
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.put(byteVector0);
      classWriter0.version = 2699;
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      fieldWriter1.put(byteVector0);
      assertSame(fieldWriter1, fieldWriter0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1087));
      classWriter0.toByteArray();
      classWriter0.toByteArray();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "&s=RM+.", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
