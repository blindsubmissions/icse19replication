/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 06:38:44 GMT 2018
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import accessories.plugins.time.JYearChooser;
import freemind.view.mindmapview.MultipleImage;
import java.awt.AWTEventMulticaster;
import java.awt.Button;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.ImageCapabilities;
import java.awt.SystemColor;
import java.awt.color.ColorSpace;
import java.awt.dnd.DropTarget;
import java.awt.event.ActionEvent;
import java.awt.event.ContainerListener;
import java.awt.event.FocusEvent;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.image.ImageObserver;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.sql.Timestamp;
import java.time.temporal.Temporal;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;
import java.util.Hashtable;
import java.util.List;
import java.util.Locale;
import java.util.MissingResourceException;
import javax.help.DefaultHelpModel;
import javax.help.GlossaryView;
import javax.help.HelpSet;
import javax.swing.DebugGraphics;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JPopupMenu;
import javax.swing.JRadioButton;
import javax.swing.KeyStroke;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuKeyEvent;
import javax.swing.plaf.PanelUI;
import javax.swing.plaf.basic.BasicToolBarUI;
import javax.swing.plaf.multi.MultiTableUI;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.apache.batik.bridge.BridgeContext;
import org.apache.batik.bridge.DocumentLoader;
import org.apache.batik.bridge.SVGColorProfileElementBridge;
import org.apache.batik.bridge.UserAgentAdapter;
import org.apache.batik.css.parser.Parser;
import org.apache.batik.gvt.CompositeGraphicsNode;
import org.apache.batik.gvt.ImageNode;
import org.apache.batik.gvt.text.GVTAttributedCharacterIterator;
import org.apache.batik.script.InterpreterPool;
import org.apache.crimson.tree.XmlDocument;
import org.apache.fop.fonts.FontInfo;
import org.apache.fop.pdf.PDFResourceContext;
import org.apache.fop.pdf.PDFResources;
import org.apache.fop.svg.PDFDocumentGraphics2D;
import org.apache.fop.svg.PDFGraphics2D;
import org.apache.xalan.processor.TransformerFactoryImpl;
import org.apache.xml.utils.ListingErrorHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.hsqldb.Session;
import org.junit.runner.RunWith;
import org.openstreetmap.gui.jmapviewer.tilesources.BingAerialTileSource;
import org.xml.sax.SAXParseException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1864);
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream(1864);
      byteArrayOutputStream1.write(46);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream1, false);
      String string0 = null;
      mockPrintWriter0.print((String) null);
      jDayChooser0.list((PrintWriter) mockPrintWriter0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.setForeground((Color) null);
      jDayChooser0.setYear(22);
      jDayChooser0.setDayBordersVisible(false);
      // Undeclared exception!
      try { 
        Timestamp.valueOf("day");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Timestamp format must be yyyy-mm-dd hh:mm:ss[.fffffffff]
         //
         verifyException("java.sql.Timestamp", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      MenuElement[] menuElementArray0 = new MenuElement[1];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      JYearChooser jYearChooser0 = new JYearChooser();
      menuSelectionManager0.addChangeListener(jYearChooser0);
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 2418, 2418, 1419, 2418, '_', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyTyped(menuKeyEvent0);
      jDayChooser0.init();
      jDayChooser0.drawDays();
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JYearChooser jYearChooser0 = new JYearChooser();
      String[] stringArray0 = new String[3];
      stringArray0[2] = "year";
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      PanelUI panelUI0 = jDayChooser0.getUI();
      jDayChooser0.setUI(panelUI0);
      jDayChooser0.init();
      jDayChooser0.getMaxDayCharacters();
      Parser parser0 = new Parser();
      try { 
        parser0.formatMessage("5by`", (Object[]) null);
        fail("Expecting exception: MissingResourceException");
      
      } catch(MissingResourceException e) {
         //
         // Can't find resource for bundle java.util.PropertyResourceBundle, key 5by`
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.784088171041157
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDropTarget((DropTarget) null);
      jDayChooser0.setAlwaysFireDayProperty(false);
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setDay((-1437625606));
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 34, (-5745L), (-1437625606), 34, '\\');
      // Undeclared exception!
      try { 
        InputEvent.getMaskForButton((-1437625606));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // button doesn't exist -1437625606
         //
         verifyException("java.awt.event.InputEvent", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.706697613279902
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(37);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 442, 0L, 442, 37, 'g');
      KeyEvent.getExtendedKeyCodeForChar(3403);
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.770581544706131
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Parser parser0 = new Parser();
      Locale locale0 = JComponent.getDefaultLocale();
      locale0.toLanguageTag();
      JDayChooser jDayChooser1 = new JDayChooser();
      Locale locale1 = jDayChooser1.getLocale();
      locale0.getDisplayName(locale1);
      locale0.getDisplayLanguage();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      jDayChooser0.setLocale(locale0);
      jDayChooser0.setLocale(locale0);
      jDayChooser0.setFocus();
      jDayChooser0.setEnabled(true);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getWeekdayForeground();
      jDayChooser0.setMaxDayCharacters(1859);
      jDayChooser0.createToolTip();
      MultiTableUI multiTableUI0 = new MultiTableUI();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getMouseWheelListeners();
      jDayChooser0.getComponentListeners();
      JMonthChooser jMonthChooser0 = jDayChooser0.monthChooser;
      jDayChooser0.setMonthChooser((JMonthChooser) null);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8675477273543817
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = true;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "g! f:Q");
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setDropTarget((DropTarget) null);
      jDayChooser0.setAlwaysFireDayProperty(true);
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setDay((-1437625606));
      jDayChooser0.setEnabled(true);
      jDayChooser0.requestFocusInWindow();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 34, (-5745L), (-1437625606), 34, '\\');
      keyEvent0.setKeyChar('P');
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.firePropertyChange("JDayChooser", (short)57, (short)57);
      jDayChooser0.setMonth((-364));
      jDayChooser0.getSelectedDay();
      jDayChooser0.setDayBordersVisible(false);
      assertFalse(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7376047233857554
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      jDayChooser0.addContainerListener((ContainerListener) null);
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.setEnabled(true);
      Date date0 = jDayChooser0.getMinSelectableDate();
      Date date1 = jDayChooser0.setMinSelectableDate(date0);
      assertSame(date1, date0);
      
      jDayChooser0.setEnabled(true);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7421583343393316
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "xml:base");
      JYearChooser jYearChooser0 = jDayChooser0.yearChooser;
      jDayChooser0.setYearChooser((JYearChooser) null);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 0, '8', 18, 583, '8');
      jDayChooser0.keyPressed(keyEvent0);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getSundayForeground();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)22;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)34;
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)9;
      byteArray0[7] = (byte)47;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      float[] floatArray0 = new float[3];
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = false;
      JDayChooser jDayChooser0 = new JDayChooser(false);
      ActionEvent actionEvent0 = new ActionEvent(jDayChooser0, 90, "day", 90);
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // accessories.plugins.time.JDayChooser cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      SystemColor systemColor0 = SystemColor.inactiveCaptionBorder;
      jDayChooser0.setWeekdayForeground(systemColor0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.isSelected();
      EvoSuiteFile evoSuiteFile0 = null;
      JYearChooser jYearChooser0 = new JYearChooser();
      JDayChooser jDayChooser1 = jYearChooser0.dayChooser;
      try { 
        XmlDocument.createXmlDocument("day", false);
        fail("Expecting exception: SAXParseException");
      
      } catch(SAXParseException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("org.apache.crimson.parser.Parser2", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Date date0 = jDayChooser0.defaultMaxSelectableDate;
      jDayChooser0.setMaxSelectableDate(date0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.drawDays();
      jDayChooser0.setDayBordersVisible(true);
      Color color0 = DebugGraphics.flashColor();
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) (-4137);
      floatArray0[2] = 1207.5428F;
      // Undeclared exception!
      try { 
        color0.getColorComponents((ColorSpace) null, floatArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Color", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Color color0 = jDayChooser0.getDecorationBackgroundColor();
      assertEquals((-2956050), color0.getRGB());
      
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      MockDate mockDate0 = new MockDate(1103, 8476, 10, 208, 8476);
      Date date0 = jDayChooser0.minSelectableDate;
      jDayChooser0.setSelectableDateRange(date0, mockDate0);
      jDayChooser0.drawDays();
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)27;
      byteArray0[2] = (byte)27;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      MultipleImage multipleImage0 = new MultipleImage((-1.193234011570258));
      multipleImage0.getImage();
      SystemColor systemColor0 = SystemColor.desktop;
      jDayChooser0.setBackground(systemColor0);
      Locale locale0 = new Locale("day", "day", "day");
      jDayChooser0.setSelectableDateRange((Date) null, (Date) null);
      jDayChooser0.updateUI();
      KeyEvent keyEvent0 = null;
      try {
        keyEvent0 = new KeyEvent(jDayChooser0, (-623), 0L, 1605, 2277, 'A', 969);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid keyLocation
         //
         verifyException("java.awt.event.KeyEvent", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getMinSelectableDate();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "day");
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(false);
      Color color0 = Color.YELLOW;
      jDayChooser0.getMinSelectableDate();
      Color color1 = Color.PINK;
      jDayChooser0.isDayBordersVisible();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getDay();
      jDayChooser0.getWeekdayForeground();
      jDayChooser0.getDay();
      jDayChooser0.isDecorationBackgroundVisible();
      JPopupMenu jPopupMenu0 = new JPopupMenu();
      JFrame jFrame0 = null;
      try {
        jFrame0 = new JFrame("");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.7421583343393316
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.isFocusable();
      jDayChooser0.setDecorationBordersVisible(false);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser_DecoratorButton0, 914, 914, 31, 40, '9');
      jDayChooser0.keyPressed(keyEvent0);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      // Undeclared exception!
      try { 
        Timestamp.valueOf("day");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Timestamp format must be yyyy-mm-dd hh:mm:ss[.fffffffff]
         //
         verifyException("java.sql.Timestamp", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.698555534979564
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.isSelected();
      jDayChooser_DecoratorButton0.isSelected();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser_DecoratorButton0, 878, 878, 31, 40, '9');
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(40);
      keyEvent0.consume();
      KeyEvent keyEvent1 = new KeyEvent(jDayChooser_DecoratorButton0, '9', 878, 38, (-280), 'K');
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.keyPressed(keyEvent1);
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.635484863709782
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Parser parser0 = new Parser();
      Locale locale0 = JComponent.getDefaultLocale();
      locale0.getDisplayLanguage();
      Locale.forLanguageTag("English");
      jDayChooser0.setLocale(locale0);
      jDayChooser0.setLocale(locale0);
      jDayChooser0.setFocus();
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(34);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object object0 = new Object();
      JDayChooser jDayChooser0 = new JDayChooser(false);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-2481), 1L, (-2481), (-1800), 'N');
      jDayChooser0.keyReleased(keyEvent0);
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMaxDayCharacters((-1517));
      jDayChooser0.drawDays();
      assertEquals(0, jDayChooser0.getMaxDayCharacters());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.setDecorationBackgroundVisible(false);
      Color color0 = Color.BLUE;
      SVGColorProfileElementBridge sVGColorProfileElementBridge0 = new SVGColorProfileElementBridge();
      UserAgentAdapter userAgentAdapter0 = new UserAgentAdapter();
      InterpreterPool interpreterPool0 = new InterpreterPool();
      DocumentLoader documentLoader0 = new DocumentLoader(userAgentAdapter0);
      BridgeContext bridgeContext0 = new BridgeContext(userAgentAdapter0, interpreterPool0, documentLoader0);
      TransformerFactoryImpl transformerFactoryImpl0 = new TransformerFactoryImpl();
      ListingErrorHandler listingErrorHandler0 = new ListingErrorHandler();
      jDayChooser0.getDayPanel();
      float[] floatArray0 = new float[6];
      bridgeContext0.dispose();
      floatArray0[2] = (float) 1;
      float float0 = 0.0F;
      // Undeclared exception!
      try { 
        bridgeContext0.getSystemColor("27");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.batik.css.engine.SystemColorSupport", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener2 = AWTEventMulticaster.remove(containerListener0, containerListener1);
      ContainerListener containerListener3 = AWTEventMulticaster.add(containerListener2, containerListener2);
      jDayChooser0.addContainerListener(containerListener3);
      jDayChooser0.getMinSelectableDate();
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(false);
      jDayChooser0.addListeners(0);
      jDayChooser0.getMinSelectableDate();
      Color color0 = jDayChooser0.getSundayForeground();
      assertEquals(164, color0.getRed());
      
      boolean boolean0 = new Boolean(true);
      jDayChooser0.isDecorationBordersVisible();
      jDayChooser0.setDayBordersVisible(true);
      jDayChooser0.updateUI();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.737604723385756
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      
      Parser parser0 = new Parser();
      Locale locale0 = JComponent.getDefaultLocale();
      locale0.getDisplayLanguage();
      jDayChooser0.setWeekOfYearVisible(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      jDayChooser0.setLocale(locale0);
      jDayChooser0.setLocale(locale0);
      jDayChooser0.setFocus();
      jDayChooser0.setEnabled(true);
      assertFalse(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.8512595412328823
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.isSelected();
      jDayChooser_DecoratorButton0.isBorderPainted();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser_DecoratorButton0, 914, 914, 31, 40, '9');
      jDayChooser0.getMinSelectableDate();
      jDayChooser0.getMaxSelectableDate();
      jDayChooser0.setEnabled(false);
      jDayChooser0.setDay(31);
      KeyEvent keyEvent1 = new KeyEvent(jDayChooser_DecoratorButton0, (-280), 9223372036854775807L, (-280), 914, '\'');
      jDayChooser0.keyPressed(keyEvent0);
      Locale locale0 = jDayChooser0.locale;
      locale0.getDisplayVariant();
      jDayChooser0.setLocale(locale0);
      System.setCurrentTimeMillis((-717L));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setWeekOfYearVisible(true);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getDecorationBackgroundColor();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.remove((Component) jDayChooser_DecoratorButton0);
      jDayChooser_DecoratorButton0.isFocusable();
      jDayChooser0.setDecorationBordersVisible(false);
      jDayChooser0.focusGained((FocusEvent) null);
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.init();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.isValidateRoot();
      boolean boolean0 = jDayChooser_DecoratorButton0.isContentAreaFilled();
      assertTrue(boolean0);
      
      jDayChooser0.setDecorationBordersVisible(false);
      jDayChooser0.isWeekOfYearVisible();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMaxSelectableDate((Date) null);
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.7085325293656215
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Parser parser0 = new Parser();
      Locale locale0 = JComponent.getDefaultLocale();
      locale0.getDisplayLanguage();
      jDayChooser0.setLocale(locale0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.getWidth();
      FontInfo fontInfo0 = new FontInfo();
      PDFResourceContext pDFResourceContext0 = new PDFResourceContext((PDFResources) null);
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(true);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      jDayChooser0.getAlignmentX();
      debugGraphics0.getDebugOptions();
      jDayChooser_DecoratorButton0.paint(debugGraphics0);
      jDayChooser0.setMaxDayCharacters(3);
      jDayChooser0.setDay(0);
      System.setCurrentTimeMillis(0L);
      BasicToolBarUI basicToolBarUI0 = new BasicToolBarUI();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "org.apache.batik.css.parser.resources.Messages");
      basicToolBarUI0.getFloatingColor();
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      assertEquals(3, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setFocus();
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, (byte)107);
      focusEvent0.getOppositeComponent();
      KeyStroke.getKeyStroke("day");
      jDayChooser0.unregisterKeyboardAction((KeyStroke) null);
      focusEvent0.paramString();
      jDayChooser0.focusLost(focusEvent0);
      BingAerialTileSource bingAerialTileSource0 = new BingAerialTileSource();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFGraphics2D pDFGraphics2D0 = null;
      try {
        pDFGraphics2D0 = new PDFGraphics2D((PDFGraphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.batik.ext.awt.g2d.AbstractGraphics2D", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser jDayChooser1 = new JDayChooser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser1.new DecoratorButton();
      jDayChooser_DecoratorButton0.isValidateRoot();
      jDayChooser_DecoratorButton0.setBorderPainted(true);
      jDayChooser_DecoratorButton0.isFocusable();
      jDayChooser1.setDecorationBordersVisible(true);
      MockDate mockDate0 = new MockDate((-3519), 8476, 10, 208, 8476);
      Date date0 = jDayChooser0.minSelectableDate;
      jDayChooser0.setSelectableDateRange(date0, mockDate0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      boolean boolean0 = true;
      JDayChooser jDayChooser0 = new JDayChooser(true);
      // Undeclared exception!
      try { 
        jDayChooser0.setCalendar((Calendar) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JYearChooser jYearChooser0 = new JYearChooser();
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getFocusTraversalPolicy();
      jDayChooser0.setDay(10073);
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setMonth(43);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setSundayForeground((Color) null);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JYearChooser jYearChooser0 = new JYearChooser();
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MultiTableUI multiTableUI0 = new MultiTableUI();
      // Undeclared exception!
      try { 
        multiTableUI0.getPreferredSize(jYearChooser0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7886730895804845
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      boolean boolean0 = true;
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Parser parser0 = new Parser();
      Locale locale0 = JComponent.getDefaultLocale();
      locale0.getDisplayLanguage();
      jDayChooser0.setLocale(locale0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      FontInfo fontInfo0 = new FontInfo();
      PDFResourceContext pDFResourceContext0 = new PDFResourceContext((PDFResources) null);
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(true);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      debugGraphics0.getDebugOptions();
      jDayChooser_DecoratorButton0.paint(debugGraphics0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser_DecoratorButton0, 0, 0, 1667, 34, '8');
      keyEvent0.setKeyCode(34);
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 35, 35, 35, 35, 'i');
      jDayChooser0.keyPressed(keyEvent0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 37, 'g', 37, 37, 'g');
      jDayChooser0.keyPressed(keyEvent0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(37);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = AWTEventMulticaster.add(containerListener0, containerListener0);
      AWTEventMulticaster.remove(containerListener1, containerListener1);
      ContainerListener containerListener2 = AWTEventMulticaster.add((ContainerListener) null, containerListener1);
      jDayChooser0.addContainerListener(containerListener2);
      jDayChooser0.setWeekOfYearVisible(false);
      jDayChooser0.setEnabled(false);
      jDayChooser0.getMinSelectableDate();
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setMinSelectableDate((Date) null);
      jDayChooser1.setEnabled(true);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6789477095792162
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Parser parser0 = new Parser();
      Locale locale0 = JComponent.getDefaultLocale();
      ImageNode imageNode0 = new ImageNode();
      Locale.filter((List<Locale.LanguageRange>) imageNode0, (Collection<Locale>) imageNode0);
      locale0.getDisplayLanguage();
      jDayChooser0.setLocale(locale0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      FontInfo fontInfo0 = new FontInfo();
      PDFResourceContext pDFResourceContext0 = new PDFResourceContext((PDFResources) null);
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(true);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      debugGraphics0.getDebugOptions();
      jDayChooser_DecoratorButton0.paint(debugGraphics0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jDayChooser0.setMaxDayCharacters(3);
      Locale locale1 = Locale.KOREAN;
      jDayChooser0.setLocale(locale1);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 30, (-1801L), 30, 38, 'O');
      jDayChooser0.keyPressed(keyEvent0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(37);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 37, 'g', 37, 37, 'g');
      KeyEvent.getExtendedKeyCodeForChar(36);
      keyEvent0.setKeyCode(36);
      jDayChooser0.keyPressed(keyEvent0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setDay((-1437625606));
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 40000, 5000L, (-1755), 38, 'K');
      jDayChooser0.keyPressed(keyEvent0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Parser parser0 = new Parser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      FontInfo fontInfo0 = new FontInfo();
      PDFResourceContext pDFResourceContext0 = new PDFResourceContext((PDFResources) null);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      debugGraphics0.getDebugOptions();
      jDayChooser_DecoratorButton0.paint(debugGraphics0);
      jDayChooser0.selectedDay = (JButton) jDayChooser_DecoratorButton0;
      jDayChooser0.setMaxDayCharacters(4);
      jDayChooser0.drawDays();
      jDayChooser0.setMaxDayCharacters((byte)43);
      jDayChooser0.drawDays();
      jDayChooser0.setDay(228);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.isSelected();
      jDayChooser_DecoratorButton0.isSelected();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-743), (-743), 33, (-743), '9');
      jDayChooser0.setDay((-743));
      keyEvent0.consume();
      KeyEvent keyEvent1 = new KeyEvent(jDayChooser0, 90, (-743), 48, 33, 'K');
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed(keyEvent1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Parser parser0 = new Parser();
      Locale locale0 = Locale.FRENCH;
      locale0.getDisplayCountry();
      locale0.getDisplayLanguage();
      jDayChooser0.setLocale(locale0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.getWidth();
      FontInfo fontInfo0 = new FontInfo();
      PDFResourceContext pDFResourceContext0 = new PDFResourceContext((PDFResources) null);
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(true);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      jDayChooser0.getAlignmentX();
      int int0 = 22;
      jDayChooser0.setYear(22);
      jDayChooser0.setDayBordersVisible(false);
      // Undeclared exception!
      try { 
        Timestamp.valueOf("=&Hd4ZtdkLf");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Timestamp format must be yyyy-mm-dd hh:mm:ss[.fffffffff]
         //
         verifyException("java.sql.Timestamp", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Parser parser0 = new Parser();
      Locale locale0 = JComponent.getDefaultLocale();
      locale0.getDisplayLanguage();
      Locale locale1 = JComponent.getDefaultLocale();
      locale1.getDisplayLanguage();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JButton jButton0 = new JButton("^O~'.-h]}");
      jDayChooser0.selectedDay = jButton0;
      jDayChooser0.setLocale(locale0);
      jDayChooser0.setLocale(locale0);
      jDayChooser0.setFocus();
      jDayChooser0.setEnabled(false);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      MenuElement[] menuElementArray0 = new MenuElement[0];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 5, 5, 39, 39, ';', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyPressed(menuKeyEvent0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Parser parser0 = new Parser();
      jDayChooser0.initialized = false;
      Locale locale0 = JComponent.getDefaultLocale();
      locale0.getDisplayLanguage();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      jDayChooser0.setLocale(locale0);
      jDayChooser0.updateUI();
      jDayChooser0.setEnabled(false);
      jDayChooser0.setDayBordersVisible(false);
  }
}
