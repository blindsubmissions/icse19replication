/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 06:17:27 GMT 2018
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.ByteArrayInputStream;
import java.io.OutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.12974069471942834
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("uka_L|.", true);
      MockPrintStream mockPrintStream0 = new MockPrintStream("uka_L|.");
      byte byte0 = (byte)59;
      byte[] byteArray0 = new byte[18];
      byteArray0[13] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)118;
      byteArray0[4] = (byte)62;
      byteArray0[17] = (byte)2;
      byteArray0[6] = (byte)59;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)59;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      Object object0 = new Object();
      base64Decoder0.setStatusObject(object0);
      base64Decoder0.decodeStream();
      // Undeclared exception!
      try { 
        byteArrayInputStream0.read(byteArray0, (int) (byte)10, (int) (byte)10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.13269142083987176
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("uka_L|.", true);
      MockPrintStream mockPrintStream0 = new MockPrintStream("uka_L|.");
      byte[] byteArray0 = new byte[18];
      byteArray0[13] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)118;
      byteArray0[4] = (byte)43;
      byteArray0[17] = (byte)2;
      byteArray0[6] = (byte)32;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      bufferedCustomInputStream0.mark((byte)2);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(4L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.1461447460085638
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("uka_L|.", true);
      MockPrintStream mockPrintStream0 = new MockPrintStream("Directory Dialog");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)43;
      byteArray0[4] = (byte)118;
      byteArray0[5] = (byte) (-113);
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)32;
      byteArray0[8] = (byte)43;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder1.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(2L, base64Decoder0.getLineCount());
      
      base64Decoder1.decodeStream();
      assertEquals(0L, base64Decoder1.getLineCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      byteArray0[13] = (byte)10;
      byteArray0[15] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)118;
      byteArray0[4] = (byte)2;
      byteArray0[6] = (byte)75;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)75;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 228);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      assertEquals(4L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "OFF");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("uka_L|.", true);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[4] = (byte)43;
      byteArray0[5] = (byte)26;
      byteArray0[6] = (byte)26;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)26;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.read(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0);
      byteArrayInputStream0.close();
      BufferedCustomInputStream bufferedCustomInputStream2 = new BufferedCustomInputStream(bufferedCustomInputStream1, (byte)10, false);
      Newzgrabber.verbose = true;
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream2, mockFileOutputStream0);
      base64Decoder0.br = bufferedCustomInputStream0;
      mockFileOutputStream0.write((int) (byte)0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(3L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("uka_L|.");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("uka_L|.");
      byte[] byteArray0 = new byte[18];
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[6] = (byte)118;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)118;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      bufferedCustomInputStream0.mark((byte)118);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      Newzgrabber.IsBatch = true;
      base64Decoder0.decodeStream();
      assertEquals(0L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("uka_L|.");
      byte[] byteArray0 = new byte[18];
      byteArray0[13] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[4] = (byte)62;
      byteArray0[17] = (byte)2;
      byteArray0[6] = (byte)51;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)51;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.setStatusObject((byte)51);
      base64Decoder0.decodeStream();
      byteArrayInputStream0.read(byteArray0, (int) (byte)10, (int) (byte)0);
      // Undeclared exception!
      try { 
        bufferedCustomInputStream0.read(byteArray0, (int) (byte)51, 4);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("uka_L|.", true);
      MockPrintStream mockPrintStream0 = new MockPrintStream("uka_L|.");
      byte[] byteArray0 = new byte[18];
      byteArray0[13] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)118;
      byteArray0[4] = (byte)62;
      byteArray0[17] = (byte)2;
      byteArray0[6] = (byte)59;
      byteArray0[8] = (byte)59;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      bufferedCustomInputStream0.markSupported();
      base64Decoder0.LineCount = (-1L);
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder2.decodeStream();
      base64Decoder2.decodeStream();
      base64Decoder2.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder1.decodeStream();
      assertFalse(base64Decoder1.ABORT);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.12974069471942834
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("uka_L|.", true);
      MockPrintStream mockPrintStream0 = new MockPrintStream("uka_L|.");
      byte byte0 = (byte)59;
      byte[] byteArray0 = new byte[18];
      byteArray0[13] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)118;
      byteArray0[4] = (byte)62;
      byteArray0[17] = (byte)2;
      byteArray0[6] = (byte)59;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)59;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      mockPrintStream0.println(true);
      byteArrayInputStream0.close();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.ABORT = true;
      Object object0 = new Object();
      base64Decoder0.setStatusObject(object0);
      base64Decoder0.decodeStream();
      // Undeclared exception!
      try { 
        byteArrayInputStream0.read(byteArray0, (int) (byte)10, (int) (byte)10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("uka_L|.", true);
      MockPrintStream mockPrintStream0 = new MockPrintStream("uka_L|.");
      byte[] byteArray0 = new byte[18];
      byteArray0[13] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)118;
      byteArray0[4] = (byte)46;
      byteArray0[6] = (byte)61;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(byteArrayInputStream1);
      byteArrayInputStream1.close();
      byteArrayInputStream0.close();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      Object object0 = new Object();
      base64Decoder0.setStatusObject(byteArrayInputStream1);
      base64Decoder0.decodeStream();
      // Undeclared exception!
      try { 
        byteArrayInputStream1.read(byteArray0, (int) (byte)61, (int) (byte)10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("uka_L|.", true);
      MockPrintStream mockPrintStream0 = new MockPrintStream("uka_L|.");
      byte[] byteArray0 = new byte[18];
      byteArray0[13] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)118;
      byte byte0 = (byte)46;
      byteArray0[4] = (byte)46;
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)10;
      byteArray1[1] = (byte)46;
      byteArray1[2] = (byte)61;
      byteArray1[3] = (byte)118;
      byteArray1[4] = (byte)61;
      byteArray1[5] = (byte)10;
      byteArray1[6] = (byte)46;
      byteArray1[7] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder0.ProgressSet = true;
      Object object0 = new Object();
      Object object1 = new Object();
      base64Decoder0.setStatusObject(object1);
      base64Decoder0.decodeStream();
      // Undeclared exception!
      try { 
        byteArrayInputStream0.read(byteArray0, 30, (-3127));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("uka_L|.", true);
      MockPrintStream mockPrintStream0 = new MockPrintStream("uka_L|.");
      byte[] byteArray0 = new byte[18];
      byteArray0[13] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)118;
      byteArray0[4] = (byte)46;
      byteArray0[6] = (byte)47;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)47;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, mockPrintStream0);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder1.decodeStream();
      bufferedCustomInputStream0.mark(3492);
      base64Decoder1.decodeStream();
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder2.decodeStream();
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }
}
