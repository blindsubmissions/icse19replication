/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 13:15:11 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SupportingDocument_ESTest extends SupportingDocument_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Object object0 = supportingDocument0.clone();
      supportingDocument0.clone();
      supportingDocument0.setDocumentCode("");
      supportingDocument0.clone();
      supportingDocument0.setTitle((String) null);
      supportingDocument0.getFilePath();
      supportingDocument0.setTitle("");
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      assertEquals(0, supportingDocument1.getIdentifier());
      
      supportingDocument0.setFilePath((String) null);
      supportingDocument0.setTitle("");
      supportingDocument0.setFilePath("");
      supportingDocument0.setIdentifier(0);
      assertFalse(supportingDocument0.isNewRecord());
      assertNotSame(supportingDocument0, object0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis(1301L);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = "XFu.s4NS&`";
      supportingDocument0.setDocumentCode("XFu.s4NS&`");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("P@", "P@");
      user0.clone();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("P@");
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      assertEquals(1, arrayList0.size());
      
      supportingDocument0.setFileName("user.email.label");
      supportingDocument0.getIdentifier();
      int int0 = supportingDocument1.getIdentifier();
      assertEquals(0, int0);
      assertFalse(supportingDocument1.isNewRecord());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("D9_l<-+");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("%");
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.clone();
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setFileName("");
      supportingDocument0.getDescription();
      supportingDocument0.getTitle();
      supportingDocument0.setDocumentCode("");
      supportingDocument0.getIdentifier();
      supportingDocument0.isNewRecord();
      supportingDocument0.setDescription("%");
      supportingDocument0.getDisplayName();
      supportingDocument0.clone();
      supportingDocument0.getFileName();
      supportingDocument0.getDocumentCode();
      supportingDocument0.getDisplayName();
      supportingDocument0.setFilePath((String) null);
      supportingDocument0.setFileName("");
      supportingDocument0.getDisplayItemIdentifier();
      assertFalse(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("VN<G_:|)gKRoWO{");
      supportingDocument0.getFileName();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("RZsW'X%Q");
      supportingDocument0.setDocumentCode("O(~jwM0lIV[L|-u@");
      User user0 = new User(".gT", "O(~jwM0lIV[L|-u@");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      assertEquals(2, arrayList0.size());
      
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument1);
      assertEquals(0, arrayList1.size());
      
      supportingDocument0.getDescription();
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals(0, supportingDocument0.getIdentifier());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("h2:[g,{Z<vWlL!$d3", "h2:[g,{Z<vWlL!$d3");
      user0.setPostCode("h2:[g,{Z<vWlL!$d3");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      user0.setCounty("h2:[g,{Z<vWlL!$d3");
      supportingDocument0.getIdentifier();
      supportingDocument1.setIdentifier(0);
      supportingDocument0.getDescription();
      supportingDocument0.getDisplayName();
      supportingDocument0.setFileName("");
      supportingDocument0.getDescription();
      supportingDocument0.getTitle();
      User user1 = new User("J awayd.", "1");
      user1.setAffiliation("");
      user1.setLastName("-");
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument0);
      assertTrue(arrayList0.isEmpty());
      
      String string0 = supportingDocument0.getDisplayName();
      assertEquals("-", string0);
      
      String string1 = supportingDocument0.getDisplayItemIdentifier();
      assertEquals("0", string1);
      
      supportingDocument1.getDescription();
      supportingDocument1.setTitle("9(AQ>\"xp+JP6'xxY");
      supportingDocument0.getDescription();
      User user2 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user2, supportingDocument0, supportingDocument1);
      assertEquals(1, arrayList1.size());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals(0, supportingDocument1.getIdentifier());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.setDocumentCode("0");
      User user0 = new User(">`q3:", (String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath((String) null);
      User user0 = new User("h2:[g,{Z<vWlL!$d3", "s*Wexc");
      user0.setPassword("");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument1);
      assertEquals(1, arrayList0.size());
      assertEquals(0, supportingDocument2.getIdentifier());
      assertFalse(supportingDocument2.isNewRecord());
  }
}
