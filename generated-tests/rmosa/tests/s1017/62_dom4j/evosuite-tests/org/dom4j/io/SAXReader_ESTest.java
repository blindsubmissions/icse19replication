/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 13:11:14 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.Document;
import org.dom4j.DocumentFactory;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.dom.DOMNamespace;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.ElementModifier;
import org.dom4j.io.ElementStack;
import org.dom4j.io.PruningDispatchHandler;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXModifyElementHandler;
import org.dom4j.io.SAXReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.xml.sax.EntityResolver;
import org.xml.sax.Parser;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLFilter;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultDocumentFactory.getInstance();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "5bk@]2aL]]w.(");
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "5bk@]2aL]]w.(");
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "//tmp/wg6v0wg6v");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      // Undeclared exception!
      try { 
        defaultDocumentFactory0.createQName("$=[{04(8y", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.createDefaultEntityResolver("_Wdfqy _EdCl%");
      ElementStack elementStack0 = null;
      try {
        elementStack0 = new ElementStack((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.ElementStack", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.setEntityResolver((EntityResolver) null);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter0.setEntityResolver((EntityResolver) null);
      sAXReader0.configureReader(parserAdapter0, (DefaultHandler) null);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.isIncludeExternalDTDDeclarations();
      // Undeclared exception!
      try { 
        MockURI.toURL((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      boolean boolean0 = sAXReader0.isIgnoreComments();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isValidating());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.createXMLReader();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Namespace.get("j3XRx{Ay");
      DOMNamespace dOMNamespace0 = new DOMNamespace("j3XRx{Ay", "j3XRx{Ay");
      QName qName0 = QName.get("org.dom4j.io.SAXReader", (Namespace) dOMNamespace0, "org.dom4j.io.SAXReader");
      qName0.getDocumentFactory();
      qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      sAXReader0.setDocumentFactory((DocumentFactory) null);
      sAXReader0.isStripWhitespaceText();
      sAXReader0.createContentHandler((XMLReader) null);
      qName0.getQualifiedName();
      URL uRL0 = MockURL.getFileExample();
      // Undeclared exception!
      try { 
        MockURL.openStream(uRL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.resetHandlers();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      boolean boolean0 = sAXReader0.isIncludeInternalDTDDeclarations();
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.807564737707392
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      File file0 = MockFile.createTempFile("//tmp/Validation not supported for XMLReader: 0.tmp", "/ tmp/5A<KA/tmp/wg6v0wgtv");
      SAXReader sAXReader0 = new SAXReader(true);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.798652206252129
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      File file0 = MockFile.createTempFile("X-(}d&Pbx*-Gx@BO\"T", "X-(}d&Pbx*-Gx@BO\"T");
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory0.createQName("g!-3", "2d+]Aif5IjJC&uL");
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      String string0 = null;
      String string1 = "";
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler((XMLReader) null);
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, sAXContentHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      sAXReader0.createDefaultEntityResolver("//tmp/Ofw\"0E0Ofw\"0E");
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertNotNull(xMLReader0);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "org.jaxen.FunctionCallException";
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("org.jaxen.FunctionCallException", true);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class org.jaxen.FunctionCallException loaded but cannot be instantiated (no empty public constructor?)
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      assertFalse(sAXReader0.isIgnoreComments());
      
      sAXReader0.setIgnoreComments(true);
      assertTrue(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null, true);
      String string0 = "http://xml.org/sax/features/namespace-prefixes";
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      String string1 = "DI!1_dN*!F0}v<~Gkt";
      File file0 = MockFile.createTempFile("DI!1_dN*!F0}v<~Gkt", "DI!1_dN*!F0}v<~Gkt");
      try { 
        MockFile.createTempFile("http://xml.org/sax/features/namespace-prefixes", "]UgXwu7", file0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.uriPrefix = "";
      sAXReader_SAXEntityResolver0.uriPrefix = "]]>";
      sAXReader_SAXEntityResolver0.uriPrefix = "]]>";
      sAXReader_SAXEntityResolver0.resolveEntity("", "");
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.getDispatchHandler();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setMergeAdjacentText(true);
      try { 
        sAXReader0.setXMLReaderClassName("]]>");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class ]]> not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, false);
      try { 
        sAXReader0.setXMLReaderClassName("Ptd^oE9`>g^.g8s<");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class Ptd^oE9`>g^.g8s< not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setMergeAdjacentText(true);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter((Parser) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Parser argument must not be null
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.getEntityResolver();
      xMLFilterImpl0.setEntityResolver((EntityResolver) null);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      MockFile.createTempFile("X-(}d&Pbx*-Gx@BO\"T", "X-(}d&Pbx*-Gx@BO\"T");
      URI uRI0 = MockURI.aFTPURI;
      assertEquals("ftp://foo.bar", uRI0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.845638493134256
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      byteArrayInputStream0.close();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "";
      SAXReader sAXReader0 = new SAXReader();
      try { 
        sAXReader0.read("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/evosuite_readability_gen/projects/62_dom4j/ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      SAXParseException sAXParseException0 = new SAXParseException("", locatorImpl0);
      SAXParseException sAXParseException1 = new SAXParseException("@cWQ", "", "", (byte)0, 27, sAXParseException0);
      xMLFilterImpl0.error(sAXParseException1);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, true);
      xMLFilterImpl1.endDocument();
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      sAXReader0.installXMLFilter(xMLFilterImpl1);
      StringReader stringReader0 = new StringReader("//tmp/wg6v0Pf[[c");
      MockURL.getFtpExample();
      try { 
        sAXReader0.read((Reader) stringReader0, "//tmp/{%u|,qP/;/2b}6[KM0zI?GMv");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      assertFalse(sAXReader0.isValidating());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SAXParseException sAXParseException0 = new SAXParseException("//tmp/dx?6'V~~%IiQ0 (", "gBg6{.u=_o<", "//tmp/dx?6'V~~%IiQ0 (", 92, 18);
      xMLFilterImpl1.fatalError(sAXParseException0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "gBg6{.u=_o<");
      MockFile.createTempFile("X-(}d&Pbx*-Gx@BO\"T", "X-(}d&Pbx*-Gx@BO\"T");
      StringReader stringReader0 = new StringReader("X-(}d&Pbx*-Gx@BO\"T");
      stringReader0.markSupported();
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      sAXReader0.createDefaultEntityResolver((String) null);
      File file0 = null;
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      sAXReader0.getDispatchHandler();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        sAXReader0.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      String string0 = "SV<H&QqFuj45r;w}";
      try { 
        sAXReader0.setProperty("SV<H&QqFuj45r;w}", xMLReaderAdapter0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: SV<H&QqFuj45r;w}
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      String string0 = "DOCUMENT_FRAGMENT_NODE";
      String string1 = "iD;*FTV7/K6OR(~D";
      try { 
        sAXReader0.read("iD;*FTV7/K6OR(~D");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("}QU(cUpV[L6oW\"dD");
      sAXReader_SAXEntityResolver0.uriPrefix = "}QU(cUpV[L6oW\"dD";
      sAXReader_SAXEntityResolver0.resolveEntity("}QU(cUpV[L6oW\"dD", "R#1EU=e");
      sAXReader_SAXEntityResolver0.resolveEntity("Warning: I will print the stack trace then carry on using the default SAX parser", "Warning: I will print the stack trace then carry on using the default SAX parser");
      sAXReader_SAXEntityResolver0.resolveEntity("ka\"%M'u$|XqK>XFu", " [Text: \"");
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      QName qName0 = documentFactory0.createQName("ka\"%M'u$|XqK>XFu", "/");
      DocumentFactory documentFactory1 = qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(documentFactory1, false);
      try { 
        MockURL.URL("ryz");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: ryz
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)96;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)96, (byte)96);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SAXReader sAXReader0 = new SAXReader(true);
      String string0 = "I_V+";
      String string1 = "//tmp/tmp/Validation not supported for XMLReader: 0.tmp0/ tmp/5A<KA/tmp/wg6v0wgtv";
      sAXReader0.setStripWhitespaceText(false);
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), (-2499));
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArrayInputStream0.close();
      byteArrayInputStream0.read();
      String string0 = "DOCUMENT_FRAGMENT_NODE";
      try { 
        sAXReader0.read((InputStream) byteArrayInputStream0, "DOCUMENT_FRAGMENT_NODE");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "j$|gcN@4 OC=");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      try { 
        sAXReader0.setFeature("j$|gcN@4 OC=", false);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature: j$|gcN@4 OC=
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      String string0 = null;
      sAXReader0.removeHandler((String) null);
      // Undeclared exception!
      try { 
        MockURI.URI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXParseException sAXParseException0 = new SAXParseException("//tmp/dx?6'V~~%IiQ0 (", "gBg6{.u=_o<", "//tmp/dx?6'V~~%IiQ0 (", 92, 18);
      xMLFilterImpl1.fatalError(sAXParseException0);
      StringReader stringReader0 = new StringReader("X-(}d&Pbx*-Gx@BO\"T");
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.setStringInternEnabled(true);
      Document document0 = documentFactory0.createDocument();
      assertFalse(document0.isReadOnly());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      StringReader stringReader0 = new StringReader("<%");
      sAXReader0.setValidation(false);
      char[] charArray0 = new char[5];
      charArray0[0] = '';
      charArray0[1] = '/';
      charArray0[2] = '#';
      charArray0[3] = 'y';
      charArray0[4] = 'A';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, 1376, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      sAXReader0.getErrorHandler();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      sAXReader0.setDefaultHandler(dispatchHandler0);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, false);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      sAXReader0.setDefaultHandler(dispatchHandler0);
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      assertNotNull(documentFactory0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("(sYbR+jmMJ+L6g'[lm,");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class (sYbR+jmMJ+L6g'[lm, not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      sAXReader0.addHandler((String) null, dispatchHandler0);
      // Undeclared exception!
      try { 
        MockURI.resolve((URI) null, "lookupPrefix");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MockFile.createTempFile("//tmp/tmp/Validation not supported for XMLReader: 0.tmp0FromIndex: {0}, ToIndex: {1}, Size: {2}", (String) null);
      SAXReader sAXReader0 = new SAXReader((String) null);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      sAXReader0.setDocumentFactory(defaultDocumentFactory0);
      DefaultHandler defaultHandler0 = new DefaultHandler();
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setLineNumber(58);
      locator2Impl0.getEncoding();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, "//tmp/ tmp/5A<KA/tmp/wg6v0wgtv0A4AY.Q}Xbu", 0, 1152);
      SAXParseException sAXParseException1 = new SAXParseException("//tmp/wg6v0Pf[[c", (String) null, "//tmp/wg6v0Pf[[c", 6656, 0);
      sAXParseException1.toString();
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      sAXReader0.installXMLFilter(xMLFilterImpl2);
      try { 
        sAXReader0.read((InputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      sAXReader0.setXMLReader((XMLReader) null);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      URI uRI0 = MockURI.aHttpURI;
      assertEquals("http", uRI0.getScheme());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.929568618777601
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl1);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      SAXReader sAXReader1 = new SAXReader(parserAdapter0);
      sAXReader1.installXMLFilter(xMLFilterImpl0);
      parserAdapter0.setEntityResolver(xMLFilterImpl1);
      String string0 = "X-(}d&Pbx*-Gx@BO\"T";
      sAXReader1.setIncludeInternalDTDDeclarations(true);
      File file0 = MockFile.createTempFile("X-(}d&Pbx*-Gx@BO\"T", "X-(}d&Pbx*-Gx@BO\"T");
      try { 
        sAXReader1.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Feature: http://xml.org/sax/features/namespace-prefixes Nested exception: Feature: http://xml.org/sax/features/namespace-prefixes
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, true);
      try { 
        sAXReader0.configureReader(parserAdapter0, (DefaultHandler) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.ParserAdapter@86817b6 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("^");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver1.resolveEntity("org.dom4j.tree.ConcurrentReaderHashMap$BarrierLock", (String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver2 = new SAXReader.SAXEntityResolver("_,r,6");
      sAXReader_SAXEntityResolver2.resolveEntity("org.dom4j.tree.ConcurrentReaderHashMap$BarrierLock", "org.dom4j.tree.ConcurrentReaderHashMap$BarrierLock");
      sAXReader_SAXEntityResolver0.resolveEntity(")GA=&n,WE*vf0kzUV$", "//tmp/>J!26V!0TsYQ9w0");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      // Undeclared exception!
      try { 
        defaultDocumentFactory0.createQName((String) null, "h7#(8,?.)gr8 =]}G16");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.QNameCache", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      StringReader stringReader0 = new StringReader("");
      sAXReader0.createDefaultEntityResolver("");
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, false);
      SAXReader sAXReader1 = new SAXReader(xMLFilterImpl1, true);
      sAXReader1.setXMLFilter(xMLFilterImpl1);
      sAXReader0.installXMLFilter(xMLFilterImpl1);
      String string0 = " is less than zero";
      sAXReader1.setEntityResolver(xMLFilterImpl0);
      String string1 = "/comment()";
      File file0 = MockFile.createTempFile(" is less than zero", "/comment()");
      // Undeclared exception!
      try { 
        sAXReader1.read(file0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      sAXReader0.setDispatchHandler(pruningDispatchHandler0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      // Undeclared exception!
      try { 
        MockURI.URI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.getXMLReader();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/");
      sAXReader0.getEncoding();
      MockFile mockFile0 = new MockFile("bBfZm>:Xy");
      try { 
        MockFile.createTempFile("/", (String) null, (File) mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)96;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)96, (byte)96);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      SAXParseException sAXParseException0 = new SAXParseException("", locatorImpl0);
      SAXParseException sAXParseException1 = new SAXParseException("@cWQ", "", "", (byte)96, 27, sAXParseException0);
      xMLFilterImpl0.error(sAXParseException1);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, false);
      xMLFilterImpl1.endDocument();
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      sAXReader0.installXMLFilter(xMLFilterImpl1);
      StringReader stringReader0 = new StringReader("//tmp/wg6v0Pf[[c");
      URL uRL0 = MockURL.getFtpExample();
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("h*z", "F", "h*z", (byte) (-13), (-11));
      sAXParseException0.fillInStackTrace();
      sAXParseException0.getColumnNumber();
      SAXParseException sAXParseException1 = new SAXParseException("*Wx)0)6", "h*z", "#:60m2tKYVL", (byte) (-13), (byte) (-13), sAXParseException0);
      sAXParseException0.toString();
      StringReader stringReader0 = new StringReader("//tmp/X-(}d&Pbx*-Gx@BO\"T0http:/xml.org/sax/features/string-interning");
      SAXReader sAXReader0 = new SAXReader();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      defaultHandler0.resolveEntity("F", "F");
      sAXReader0.setErrorHandler(defaultHandler0);
      try { 
        sAXReader0.read("org.xml.sax.SAXParseExceptionpublicId: F; systemId: h*z; lineNumber: -13; columnNumber: -11; h*z");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unknown protocol: org.xml.sax.saxparseexceptionpublicid Nested exception: unknown protocol: org.xml.sax.saxparseexceptionpublicid
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.setLineNumber((-433));
      locator2Impl1.getEncoding();
      String string0 = "//tmp/org.dom4j.io.SAXReader0LXe:Hq1'O]KR";
      SAXParseException sAXParseException0 = new SAXParseException("//tmp/X-}d&Pbx*-Gx@BO\"T0nb", "//tmp/org.dom4j.io.SAXReader0LXe:Hq1'O]KR", "r~NSjts#@}$=\"c82>", 0, (-433));
      sAXParseException0.toString();
      locator2Impl1.setXMLVersion("//tmp/tmp/X-(}d&Pbx*-Gx@BO\"T0.tmp0 is less than zero");
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      sAXReader0.setEncoding("V-f#=R~8'");
      InputStream inputStream0 = null;
      try { 
        sAXReader0.read((InputStream) null, "V-f#=R~8'");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_gx%LJ(&");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.getEntityResolver();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, false);
      xMLFilterImpl1.endDocument();
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      sAXReader0.installXMLFilter(xMLFilterImpl1);
      StringReader stringReader0 = new StringReader("//tmp/wg6v0Pf[[c");
      URL uRL0 = MockURL.getFtpExample();
      String string0 = "//tmp/X-(}d&Pbx*-Gx@BO\"T0.tmp";
      sAXReader0.setEncoding("//tmp/X-(}d&Pbx*-Gx@BO\"T0.tmp");
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setLineNumber((-419));
      locator2Impl0.getEncoding();
      SAXParseException sAXParseException0 = new SAXParseException("//tmp/X-(}d&Pbx*-Gx@BO\"T0nb", "//tmp/org.dom4j.io.SAXReader0LXe:Hq1'O]KR", "r~NSjts#@}$=\"c82>", 0, (-419));
      sAXParseException0.toString();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      sAXReader0.setEncoding("V-f#=R~8'");
      try { 
        sAXReader0.read("Notation");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLReader0);
      sAXReader0.configureReader(xMLReader0, sAXContentHandler0);
      MockFile mockFile0 = new MockFile("CqWi-x\"}xO", "CqWi-x\"}xO");
      MockFile mockFile1 = new MockFile(mockFile0, "CqWi-x\"}xO");
      char[] charArray0 = new char[6];
      charArray0[0] = 'c';
      charArray0[1] = '%';
      charArray0[3] = 'c';
      sAXReader0.getXMLReader();
      charArray0[4] = 'q';
      charArray0[5] = '8';
      MockFile.createTempFile("CqWi-x\"}xO", "'m8w", (File) mockFile1);
      try { 
        sAXReader0.read((File) mockFile1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.setLineNumber((-419));
      locator2Impl1.getEncoding();
      SAXParseException sAXParseException0 = new SAXParseException("//tmp/X-(}d&Pbx*-Gx@BO\"T0nb", "//tmp/org.dom4j.io.SAXReader0LXe:Hq1'O]KR", "r~NSjts#@}$=\"c82>", 0, (-419));
      sAXParseException0.toString();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      sAXReader0.setEncoding("V-f#=R~8'");
      InputStream inputStream0 = null;
      try { 
        sAXReader0.read((InputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      sAXReader0.installXMLFilter(xMLFilterImpl1);
      String string0 = " is less than zero";
      sAXReader0.setEncoding("a\"b(Nel`S");
      StringReader stringReader0 = new StringReader(" is less than zero");
      try { 
        sAXReader0.read((Reader) stringReader0, " is less than zero");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.9356005054539458
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEncoding("Validation not supported for XMLReader: ");
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      File file0 = MockFile.createTempFile("X-(}d&Pbx*-Gx@BO\"T", "X-(}d&Pbx*-Gx@BO\"T");
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      String string0 = "h[?dt(|k+~p%R5i.~_";
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "h[?dt(|k+~p%R5i.~_");
      SAXReader sAXReader0 = new SAXReader();
      StringReader stringReader0 = new StringReader(".");
      sAXReader0.setEncoding(".");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }
}
