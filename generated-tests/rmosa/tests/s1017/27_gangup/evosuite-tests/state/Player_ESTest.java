/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 13:15:26 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(248);
      Party party0 = player0.head;
      player0.prev = null;
      player0.setX(248);
      player0.getName();
      assertEquals(248.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player();
      String string0 = player0.toString();
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", string0);
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(3918, "T1'yy]$!VI;yBA$", 3918);
      Player player1 = new Player((-1094), "T1'yy]$!VI;yBA$", "", (-1094));
      player0.remove(player1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player0.unpack(dataInputStream0);
      player0.setDead(2291L);
      player1.setDead((long) 3918);
      player0.isDead();
      player0.toString();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("", "");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-3486));
      player0.setY(1.0F);
      player0.setDead();
      player0.setY((-3486));
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(0, "]g%q`>", "]g%q`>", 0);
      Player player1 = new Player();
      player0.remove(player1);
      Player player2 = new Player((short)4919, "]g%q`>", "]g%q`>", 0, (short)4919);
      player2.reset(false);
      player2.pack();
      player0.gangBoss();
      player1.getSubparty();
      player2.remove(player0);
      Party party0 = player1.boss;
      player0.remove((Party) null);
      player2.setDead((long) 0, true);
      Player player3 = new Player();
      player3.getStrength();
      player2.setX(2756.458F);
      byte[] byteArray0 = player0.pack();
      player3.pack();
      player1.setDead(0L);
      player2.getIP();
      player2.type();
      player1.setY((-344.0F));
      player3.unpack(byteArray0);
      player0.setMoney((short)4919);
      player1.getX();
      player0.setZ((-3047.0854F));
      assertEquals((-3047.0854F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-95), "wI*)!y>sA')$", "wI*)!y>sA')$", (-95), (-95));
      player0.getIP();
      Player player1 = new Player((short)4919, "wI*)!y>sA')$", "wI*)!y>sA')$", (short)4919);
      assertEquals(1, player1.getStrength());
      
      long long0 = player0.getTimeOfDeath();
      assertEquals((-95), player0.getStrength());
      assertEquals(0L, long0);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-95), player0.getPictureId());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-2946));
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      String string0 = player0.getName();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player-2946", string0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-2013), "&>1*)*54|76PHz", "xn5JU3f1TsZ9!W8", 836, 836);
      player0.getY();
      Player player1 = new Player((short)4919);
      Player player2 = new Player();
      player1.setJoinOK(player0, true);
      Player player3 = (Player)player2.gangBoss();
      Party party0 = player0.head;
      Enumeration<DataInputStream> enumeration0 = (Enumeration<DataInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, (short)4919);
      pushbackInputStream0.skip((short)4919);
      pushbackInputStream0.mark((short)4919);
      player0.getSubparty();
      Party party1 = player2.head;
      player2.setDead((long) (-2013), true);
      player0.getX();
      player1.setX(10.0F);
      player3.getPictureId();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        dataOutputStream0.writeByte(25600);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-4755), "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 0);
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      System.setCurrentTimeMillis(893L);
      Player player1 = new Player((-1), "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 2765);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
      assertTrue(player1.isConnected());
      assertEquals("Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", player1.getIP());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(2765, player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(5, "state.Party", 4919);
      player0.setMoney(1.0F);
      player0.getMoney();
      File file0 = MockFile.createTempFile("state.Party", "module.ModuleBrowserDialog$ModuleFilter");
      Player player1 = new Player();
      player0.add(player1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      dataOutputStream0.writeInt((short)4919);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.getChannel();
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      dataInputStream0.readUTF();
      player0.unpack(dataInputStream0);
      player0.pack(dataOutputStream0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      player1.setX(2326.074F);
      Player player2 = new Player((short)4919, "", "module.ModuleBrowserDialog$ModuleFilter", 1);
      Player player3 = new Player(0);
      player3.isJoinOK(player2, true);
      System.setCurrentTimeMillis(1392409296320L);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player1.head = (Party) player0;
      player0.isJoinOK(player1, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(0L);
      player1.isJoinOK(player0, false);
      System.setCurrentTimeMillis((-1282L));
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)122;
      byteArray0[2] = (byte) (-38);
      byteArray0[3] = (byte)116;
      byteArray0[4] = (byte) (-34);
      byteArray0[5] = (byte)55;
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte) (-64);
      byteArray0[8] = (byte)123;
      player1.unpack(byteArray0);
      player1.isJoinOK(player0, false);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      player0.setConnected(false);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      try { 
        dataInputStream0.readUTF();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player();
      player0.reset(true);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(0, "=)K$", "=)K$", 0);
      Party party0 = player0.next;
      player0.remove((Party) null);
      Player player1 = new Player((-3537), ".vSC", (-1646));
      player0.setJoinOK(player1, true);
      player0.setDead((-829L), true);
      player0.setMoney(3996.5715F);
      player0.isConnected();
      player0.getPictureId();
      Player player2 = new Player((-671), "=)K$", "xw7uP}z<we'KXCIJQ5", 2674);
      Player player3 = new Player(0);
      player2.setJoinOK(player0, true);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals((-829L), player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(0, "TTa@T", "wPRgd,<s%MiY", 0, 2343);
      Player player1 = new Player();
      player0.boss = (Party) player1;
      player0.head = (Party) player1;
      player1.gangStrength();
      player0.setDead();
      player0.getZ();
      player0.setZ(0.0F);
      player0.isDead();
      player0.setMoney((-2486.8782F));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-55);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(0, "]g%q`>", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 0, 4178);
      boolean boolean0 = player0.isDead();
      assertTrue(player0.isConnected());
      assertEquals("]g%q`>", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(4178, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6674619334292948
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((-4712), "Player.unpak(): *** ARNING *** [IO] fa^led to unpack data:P", "Player.unpak(): *** ARNING *** [IO] fa^led to unpack data:P", 0);
      Player player1 = new Player((-4712));
      player1.setJoinOK(player0, true);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertTrue(boolean0);
      
      System.setCurrentTimeMillis(2960L);
      boolean boolean1 = player1.isJoinOK(player0, false);
      assertFalse(boolean1);
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("Player-4712", player1.getName());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-11670), "state.Party", "t3(|Z.^.P|{ ", 0);
      Player player1 = new Player(5);
      player0.setJoinOK(player1, true);
      player1.isJoinOK(player0, true);
      player0.getSubparty();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis(1392409296320L);
      boolean boolean1 = player0.isJoinOK(player1, true);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals("Player5", player1.getName());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertFalse(boolean1 == boolean0);
      assertEquals("state.Party", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(boolean1);
  }
}
