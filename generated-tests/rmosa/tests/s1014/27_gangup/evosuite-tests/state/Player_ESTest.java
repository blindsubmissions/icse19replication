/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 11:35:28 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.SequenceInputStream;
import java.io.SyncFailedException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(335, "", 335);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-99);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)90;
      byteArray0[4] = (byte)1;
      player0.unpack(byteArray0);
      int int0 = player0.getPictureId();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(335, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "^d;GKzICF";
      Player player0 = new Player(0, "^d;GKzICF", "^d;GKzICF", 0);
      player0.getTimeOfDeath();
      player0.id = 0;
      long long0 = (-403L);
      boolean boolean0 = false;
      player0.pack();
      String string1 = "@OAV4x1$~: D=WW:?A0";
      player0.id = 0;
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(95, "&{>RN`i/S'", 2547);
      assertFalse(player0.isDead());
      
      player0.setDead((long) 0);
      player0.remove(player0);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertTrue(player0.isDead());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      player0.isDead();
      player0.setY((-295.16F));
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-68);
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte) (-13);
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)85;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)0;
      player0.unpack(byteArray0);
      player0.setDead(0L);
      float float0 = player0.getZ();
      assertEquals((-295.16F), player0.getY(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-41);
      player0.unpack(byteArray0);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      player0.reset(true);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player0", player0.getName());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(2841, "}QEg=V", 2841);
      Player player1 = new Player();
      player0.remove(player1);
      player1.reset(true);
      float float0 = player1.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      player1.isDead();
      int int0 = player1.gangStrength();
      assertEquals(1, int0);
      
      player1.setZ(0.0F);
      player1.getTimeOfDeath();
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(2841, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals(0, player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals("Player-1", player1.getName());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getZ(), 0.01F);
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(2841, "", (-489));
      int int0 = player0.type();
      assertTrue(player0.isConnected());
      assertEquals((-489), player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(5, int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(1414);
      player0.setX(1414);
      player0.setZ((-1012.68976F));
      player0.setX((-1012.68976F));
      player0.pack();
      player0.getIP();
      player0.pack();
      Player player1 = new Player(1, "0.0.0.0", "0.0.0.0", (-6037));
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      int int0 = Packable.GAME_EVENT;
      player1.isJoinOK(player0, true);
      player0.getY();
      player1.isJoinOK(player0, false);
      assertEquals((-1012.68976F), player0.getZ(), 0.01F);
      assertEquals((-6037), player1.getPictureId());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(10);
      player0.getStrength();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(0, ";4%l`t^", ";4%l`t^", 0);
      player0.getName();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 2841;
      Player player0 = new Player();
      player0.setDead((long) 2841, true);
      player0.setMoney((-3643.8806F));
      player0.isDead();
      player0.setConnected(false);
      player0.reset(true);
      float float0 = Player.TOLERANCE;
      player0.toString();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-928), "&{>RN`i/S'", 2547);
      Player player1 = new Player(4919, "&{>RN`i/S'", (short)4919);
      player1.pack();
      player1.remove(player0);
      byte[] byteArray0 = player0.pack();
      player1.unpack(byteArray0);
      player1.getIP();
      assertEquals(96, player1.getId());
      
      player0.reset(false);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(4, (String) null, (-1025));
      player0.setY(94.0F);
      player0.id = 4;
      boolean boolean0 = player0.isConnected();
      assertEquals(94.0F, player0.getY(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(200);
      Party party0 = player0.gangBoss();
      Player player1 = new Player();
      party0.next = (Party) player0;
      party0.remove(player1);
      player0.remove(party0);
      player0.setConnected(true);
      player0.setZ(200);
      assertEquals(200.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(2415, "Ya+xT", "Ya+xT", 0, 0);
      Player player1 = (Player)player0.gangBoss();
      player0.prev = (Party) player1;
      player1.add(player0);
      player0.setX(0.0F);
      player0.setMoney(2415);
      player0.id = 0;
      player0.add(player1);
      player0.setDead(565L, true);
      Player player2 = new Player(2415);
      player2.setDead((long) 0);
      player2.remove(player1);
      player1.add(player2);
      player0.getZ();
      player0.isDead();
      player0.setDead(0L);
      player0.setConnected(true);
      Player player3 = new Player(1786, "", "Ya+xT", 5);
      Player player4 = new Player(0, "", " \"3XB^u3'zgS", 2415, (-1064));
      player1.setJoinOK(player4, true);
      boolean boolean0 = player0.isDead();
      assertEquals(2415.0F, player0.getMoney(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-2470), "&>xRN`i/S'", (-2470));
      player0.id = 719;
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertTrue(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals((-2470), player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(2661, "N;w!H{1\"", (-2188));
      Player player1 = new Player((-2188), "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", (-2188));
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertFalse(boolean0);
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals((-2188), player0.getPictureId());
      assertFalse(player1.isDead());
  }
}
