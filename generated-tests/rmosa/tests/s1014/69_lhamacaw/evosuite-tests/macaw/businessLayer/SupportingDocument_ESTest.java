/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 11:35:06 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SupportingDocument_ESTest extends SupportingDocument_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("");
      supportingDocument0.getDisplayName();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertFalse(supportingDocument0.isNewRecord());
      
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.getDisplayName();
      supportingDocument0.setFileName("user.status.label");
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setFilePath("");
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.setDescription("'Nd^3Y[\"Np");
      supportingDocument0.setIdentifier(0);
      assertTrue(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setFileName("LWj_T*");
      supportingDocument0.isNewRecord();
      supportingDocument0.getTitle();
      supportingDocument0.setIdentifier(0);
      supportingDocument0.setFileName("LWj_T*");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(0);
      supportingDocument0.getIdentifier();
      String string0 = "";
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("mQ(5 6?G=QWlyw%");
      supportingDocument0.setDocumentCode("x\"vZZA6Bh");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("supportingDocument.title.label");
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setDescription("supportingDocument.title.label");
      supportingDocument0.setFileName("g{&L`");
      supportingDocument0.setIdentifier(0);
      supportingDocument0.setDescription("supportingDocument.title.label");
      User user0 = new User("", "UNABLE_TO_GET_AVAILABILITY_STATES");
      user0.setPostCode("RJ");
      user0.setPassword("");
      supportingDocument0.getDisplayName();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      assertEquals(2, arrayList0.size());
      
      supportingDocument1.getDocumentCode();
      supportingDocument0.clone();
      String string0 = supportingDocument1.getDisplayName();
      assertEquals("-", string0);
      
      supportingDocument0.isNewRecord();
      SupportingDocument supportingDocument2 = (SupportingDocument)supportingDocument0.clone();
      assertEquals("supportingDocument.title.label", supportingDocument2.getDescription());
      assertEquals(0, supportingDocument2.getIdentifier());
      assertEquals("g{&L`", supportingDocument2.getFileName());
      
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      assertEquals(2, arrayList1.size());
      
      supportingDocument0.getFilePath();
      assertNotSame(supportingDocument0, supportingDocument2);
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      User user0 = new User("V~y-", "@NT");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      User.detectFieldChanges(user0, user0, user0);
      supportingDocument0.setFilePath("supportingDocument.filePath.saveChanges");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("~.%8cwpD}[#jb#-TAD");
      Object object0 = supportingDocument0.clone();
      supportingDocument0.setDocumentCode("supportingDocument.filePath.saveChanges");
      supportingDocument0.clone();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setFileName("");
      supportingDocument2.setFilePath("d`G'Je");
      supportingDocument1.getDocumentCode();
      supportingDocument0.setDocumentCode("~.%8cwpD}[#jb#-TAD");
      String string0 = supportingDocument0.getDisplayName();
      assertEquals("-~.%8cwpD}[#jb#-TAD", string0);
      
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument0.setFileName("d`G'Je");
      SupportingDocument supportingDocument4 = (SupportingDocument)supportingDocument0.clone();
      assertEquals("supportingDocument.filePath.saveChanges", supportingDocument4.getFilePath());
      assertEquals("~.%8cwpD}[#jb#-TAD", supportingDocument4.getDocumentCode());
      assertEquals(0, supportingDocument4.getIdentifier());
      assertEquals("d`G'Je", supportingDocument4.getFileName());
      
      supportingDocument0.getFileName();
      String string1 = supportingDocument2.getDisplayItemIdentifier();
      assertEquals("0", string1);
      
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument2);
      assertTrue(arrayList0.isEmpty());
      
      supportingDocument3.getIdentifier();
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals(3, arrayList1.size());
      assertNotSame(supportingDocument0, object0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-5));
      supportingDocument0.setDescription("");
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.getDisplayName();
      supportingDocument0.setTitle("UNABLE_TO_UPDATE_AVAILABILITY_STATE");
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      User user0 = new User("-", (String) null);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.setDocumentCode("");
      supportingDocument0.setIdentifier(0);
      User user1 = new User();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument2);
      supportingDocument2.getDisplayName();
      supportingDocument1.clone();
      supportingDocument1.getDocumentCode();
      supportingDocument1.setTitle("UNABLE_TO_UPDATE_AVAILABILITY_STATE");
      SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument2);
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals(0, supportingDocument0.getIdentifier());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(0);
      supportingDocument0.setDescription("");
      supportingDocument0.getDisplayItemIdentifier();
      String string0 = supportingDocument0.getDisplayName();
      assertEquals("-", string0);
      
      supportingDocument0.setTitle("UNABLE_TO_UPDATE_AVAILABILITY_STATE");
      supportingDocument0.setFileName("g{&L`");
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("g{&L`", supportingDocument1.getFileName());
      assertEquals("UNABLE_TO_UPDATE_AVAILABILITY_STATE", supportingDocument1.getTitle());
      
      User user0 = new User("-", (String) null);
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      assertEquals(0, arrayList0.size());
      
      supportingDocument0.setDocumentCode("");
      supportingDocument0.setIdentifier(0);
      supportingDocument0.setFilePath("d`G'Je");
      supportingDocument0.setFilePath("x Shm");
      supportingDocument0.setDocumentCode("");
      supportingDocument0.getFileName();
      supportingDocument0.setDocumentCode("x Shm");
      SupportingDocument.validateFields(supportingDocument0);
      supportingDocument0.setFileName("rJ=y,O`4D5}_qd7");
      boolean boolean0 = supportingDocument0.isNewRecord();
      assertFalse(boolean0);
      
      int int0 = supportingDocument0.getIdentifier();
      assertNotSame(supportingDocument0, supportingDocument1);
      assertEquals(0, int0);
  }
}
