/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 13:59:05 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      boolean boolean0 = outputFormat0.isPadText();
      boolean boolean1 = outputFormat0.isSuppressDeclaration();
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("  ", outputFormat0.getIndent());
      assertTrue(boolean1 == boolean0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6885673693022827
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      int int0 = 0;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "B#mmnNg+qsY)dm";
      outputFormat0.setIndent("r6OW:js^UL[|");
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 964);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent(true);
      outputFormat0.parseOptions(stringArray0, 964);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-5922));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5922
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8377716126398524
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "B#mmnNg=qsY)dm";
      stringArray0[4] = "-trimText";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat1 = new OutputFormat("-trimText", true, "-trimText");
      outputFormat1.setIndent(true);
      outputFormat1.parseOptions(stringArray0, 0);
      assertEquals("  ", outputFormat1.getIndent());
      
      int int0 = outputFormat0.parseOptions(stringArray0, 1217);
      assertTrue(outputFormat0.isTrimText());
      assertEquals(1217, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2337673247041645
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "BDRi<ulVR{S";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat.createPrettyPrint();
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setPadText(true);
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      outputFormat0.setExpandEmptyElements(true);
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "jN");
      outputFormat0.setNewlines(true);
      outputFormat0.setIndentSize(34);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "jN";
      outputFormat0.parseOptions(stringArray0, 34);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewlines(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setSuppressDeclaration(false);
      assertEquals("                                  ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6885673693022827
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration", true, ",vxo!o<,");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-suppressDeclaration";
      stringArray0[1] = ",vxo!o<,";
      stringArray0[2] = "-suppressDeclaration";
      outputFormat0.setIndentSize(5);
      stringArray0[3] = ",vxo!o<,";
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1645862605));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1645862605
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewLineAfterNTags(1358);
      assertEquals(1358, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("NHd]G|", false, "");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "NHd]G|";
      stringArray0[1] = "  ";
      outputFormat0.parseOptions(stringArray0, 1765);
      outputFormat0.setIndent(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndent(" T><s+9Pg$");
      outputFormat0.getEncoding();
      assertEquals(" T><s+9Pg$", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize((-1655));
      OutputFormat outputFormat1 = new OutputFormat("", true, "-lineSeparator");
      String string0 = outputFormat1.getLineSeparator();
      assertEquals("\n", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      outputFormat0.setXHTML(false);
      outputFormat0.parseOptions(stringArray0, 35);
      int int0 = outputFormat0.parseOptions(stringArray0, 35);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(35, int0);
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9998704205025659
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setExpandEmptyElements(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "B#mmnNg=qsY)dm";
      stringArray0[4] = "-trimText";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat1 = new OutputFormat("-trimText", true, "-trimText");
      outputFormat1.setSuppressDeclaration(true);
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 1217);
      outputFormat0.parseOptions(stringArray0, 1217);
      assertTrue(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.48509409130221154
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "B#mmnNg+qsY)dm";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndentSize(0);
      outputFormat0.parseOptions(stringArray0, 964);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 964);
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.7201248812718097
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "BDRi<ulVR{S";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setIndent(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('A');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (A)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0379083330628327
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      int int0 = 0;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "B#mmnNg+qsY)dm";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat.createCompactFormat();
      outputFormat0.parseOptions(stringArray0, 964);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 964);
      outputFormat0.parseOptions(stringArray0, 964);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-5922));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5922
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.48509409130221154
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      int int0 = 0;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "B#mmnNg+qsY)dm";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 964);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setLineSeparator("");
      outputFormat0.parseOptions(stringArray0, 964);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-5922));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5922
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("QTDg'mnu@Xs");
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setTrimText(true);
      outputFormat1.setSuppressDeclaration(false);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setOmitEncoding(false);
      assertTrue(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isPadText());
      
      outputFormat1.isTrimText();
      outputFormat1.setIndent("QTDg'mnu@Xs");
      assertFalse(outputFormat1.isNewlines());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(",vxo!o<,", false, ",vxo!o<,");
      outputFormat0.setNewlines(false);
      outputFormat0.setIndent(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndentSize(0);
      String[] stringArray0 = new String[0];
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat1 = new OutputFormat((String) null, false, ",vxo!o<,");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isNewlines();
      outputFormat1.setEncoding("-lineSeparator");
      outputFormat1.isXHTML();
      outputFormat1.isOmitEncoding();
      outputFormat0.setNewlines(false);
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('T');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (T)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = null;
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, (String) null);
      outputFormat0.isXHTML();
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-encoding", true, (String) null);
      outputFormat0.setPadText(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expandEmptyl_1ch4L}$;rx?";
      stringArray0[1] = "-encoding";
      stringArray0[2] = null;
      stringArray0[3] = "-encoding";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "AAISFrd;i1";
      OutputFormat outputFormat0 = new OutputFormat("AAISFrd;i1", true, "AAISFrd;i1");
      outputFormat0.setTrimText(true);
      boolean boolean0 = false;
      outputFormat0.setAttributeQuoteCharacter('\'');
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('\u001A');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (\u001A)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.48509409130221154
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      int int0 = 0;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "B#mmnNg+qsY)dm";
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 964);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 964);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-5922));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5922
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration", false, ",vxo!o<,");
      String string0 = outputFormat0.getIndent();
      assertEquals("-suppressDeclaration", string0);
      
      boolean boolean0 = outputFormat0.isTrimText();
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(",vxo!o<,", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = outputFormat0.isNewlines();
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("UTF-8", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.509137344082687
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "BDRi<ulVR{S";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.parseOptions(stringArray0, 0);
      int int0 = 2;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.48509409130221154
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      int int0 = 0;
      String[] stringArray0 = new String[7];
      outputFormat0.setIndent("-padText");
      stringArray0[0] = "B#mmnNg+qsY)dm";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 964);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 964);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-5922));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5922
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "BDRi<ulVR{S";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = false;
      String string0 = null;
      outputFormat0.setIndent((String) null);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('_');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (_)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "-omitEncoding";
      OutputFormat outputFormat0 = new OutputFormat("-omitEncoding", false, "");
      int int0 = 55;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "-omitEncoding";
      String string1 = "-padText";
      stringArray0[2] = "-padText";
      outputFormat0.setNewlines(false);
      String string2 = "Wvr}o/";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("1h1T<j{5]Q:~I>?~m^w");
      outputFormat1.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat1.getNewLineAfterNTags();
      assertFalse(outputFormat1.isOmitEncoding());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "1h1T<j{5]Q:~I>?~m^w";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "BDRi<ulVR{S";
      stringArray0[3] = "-xhtml-xhtml";
      stringArray0[4] = "1h1T<j{5]Q:~I>?~m^w";
      stringArray0[5] = "1h1T<j{5]Q:~I>?~m^w";
      stringArray0[6] = "BDRi<ulVR{S";
      stringArray0[7] = "BDRi<ulVR{S";
      outputFormat1.parseOptions(stringArray0, 1);
      assertTrue(outputFormat1.isOmitEncoding());
      
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.setSuppressDeclaration(false);
      outputFormat2.parseOptions(stringArray0, 0);
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("-encoding", false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-indent";
      stringArray0[1] = "B#mmnNg=qsY)dm";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "-encoding";
      stringArray0[4] = "-encoding";
      stringArray0[5] = "B#mmnNg=qsY)dm";
      stringArray0[6] = "-encoding";
      outputFormat1.parseOptions(stringArray0, 558);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-xhtml-xhtml";
      stringArray0[1] = "-xhtml-xhtml";
      stringArray0[2] = "8{XL KgzjARko+&s";
      stringArray0[3] = "-xhtml-xhtml";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmptyN+nk|LOB=", false);
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      String[] stringArray0 = new String[5];
      stringArray0[1] = "-expandEmptyN+nk|LOB=";
      stringArray0[2] = "-expandEmptyN+nk|LOB=";
      stringArray0[3] = "-expandEmptyN+nk|LOB=";
      stringArray0[4] = "-expandEmptyN+nk|LOB=";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-2527));
      OutputFormat outputFormat1 = new OutputFormat();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-indentSize";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
