/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 14:05:22 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.ObjectInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-1334));
      Party party0 = new Party();
      player0.getSubparty();
      player0.setDead((long) (-1334), true);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertEquals((-1334L), player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setDead((long) 0);
      player0.getX();
      player0.setConnected(false);
      assertFalse(player0.isConnected());
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(1464, "rI+", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 1464, 1464);
      player0.getMoney();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/evosuite_readability_gen/projects/27_gangup");
      byte[] byteArray0 = new byte[0];
      boolean boolean0 = FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-1334));
      Party party0 = new Party();
      player0.setMoney((-1850.1671F));
      party0.remove(player0);
      player0.remove(party0);
      player0.getSubparty();
      player0.setJoinOK(player0, true);
      System.setCurrentTimeMillis((-1334));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      player0.setY((-974.52124F));
      assertEquals((-974.52124F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-1334));
      Party party0 = new Party();
      party0.remove(player0);
      player0.remove(party0);
      player0.getSubparty();
      player0.reset(true);
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1334", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-32));
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      player0.setDead();
      Player player1 = new Player((-1303));
      player0.remove(player1);
      player0.toString();
      int int0 = player0.type();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      player0.remove(player0);
      player0.toString();
      int int0 = Packable.GAME_EVENT;
      System.setCurrentTimeMillis(1209L);
      System.setCurrentTimeMillis(3);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setDead(0L, false);
      player0.setDead((long) 0, false);
      Player player1 = new Player(1886);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)124;
      byteArray0[1] = (byte) (-70);
      byteArray0[2] = (byte)123;
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte) (-52);
      player1.unpack(byteArray0);
      player0.add(player1);
      player0.id = 0;
      player0.isDead();
      player0.setMoney(0);
      player0.getX();
      player0.setX(178.2964F);
      player0.setX((-1072.5748F));
      assertEquals((-1072.5748F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(0, "U)u.d]}pb", 310);
      player0.setZ((-1713.7344F));
      assertEquals((-1713.7344F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      player0.getSubparty();
      player0.getPictureId();
      Player player1 = new Player();
      player0.setMoney(2166.032F);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)126;
      byteArray0[3] = (byte) (-50);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 4919, (byte)5);
      String string0 = "gui.ModuleBrowserDialog$ModuleFilter";
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setMoney(0);
      player0.getY();
      Player player1 = new Player(3, "P:Ps@", "P:Ps@", 3);
      player1.setDead(2829L, true);
      long long0 = player1.getTimeOfDeath();
      assertEquals(2829L, long0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-5328), (String) null, 940);
      String string0 = player0.getIP();
      assertEquals(1, player0.getStrength());
      assertEquals(940, player0.getPictureId());
      assertEquals("0.0.0.0", string0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-1));
      player0.getSubparty();
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      Player player1 = new Player(0, "3b7\"e-v<G", (-5120));
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      assertEquals((-5120), player1.getPictureId());
      
      int int0 = player0.getStrength();
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, int0);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-1334));
      Party party0 = new Party();
      party0.head = (Party) player0;
      player0.remove(party0);
      player0.getSubparty();
      player0.getSubparty();
      Player player1 = new Player(2147340491, "K4.^T", (-1286));
      player0.setJoinOK(player1, false);
      player1.isConnected();
      System.setCurrentTimeMillis(457L);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(3653, (String) null, "`6w<fs#n874S/J9,", 3653, 3653);
      Player player1 = new Player((short)4919, "`6w<fs#n874S/J9,", "", 0);
      player0.setJoinOK(player1, true);
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals("`6w<fs#n874S/J9,", player1.getIP());
      
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(3653, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(3653, player0.getPictureId());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((-1334));
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      Party party0 = new Party();
      player0.remove(party0);
      player0.getSubparty();
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1334", player0.getName());
      
      Player player1 = new Player(0, "z_K2!yA@qAs>^}m{q8&", (short)4919);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(4919, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Party party0 = new Party();
      Player player0 = new Player(0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-1);
      player0.unpack(byteArray0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player0", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-1334));
      player0.setDead((long) (-1334), true);
      Party party0 = new Party();
      party0.head = (Party) player0;
      party0.remove(player0);
      player0.remove(party0);
      player0.getSubparty();
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isDead();
      assertEquals((-1334L), player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(3, "", "", (-1));
      player0.reset(true);
      Party party0 = player0.gangBoss();
      player0.boss = party0;
      player0.setY(610.1778F);
      party0.id = 582;
      player0.prev = party0;
      party0.remove((Party) null);
      player0.getZ();
      player0.prev = party0;
      player0.getMoney();
      byte[] byteArray0 = player0.pack();
      player0.setX(1899.3866F);
      player0.getName();
      player0.unpack(byteArray0);
      System.setCurrentTimeMillis((-942L));
      System.setCurrentTimeMillis((-1977L));
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((-1334));
      player0.remove(player0);
      player0.remove(player0);
      player0.getSubparty();
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1334", player0.getName());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-1334));
      Party party0 = new Party();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.remove(party0);
      player0.remove(party0);
      player0.getSubparty();
      Player player1 = new Player((-1334), "", "", (-933));
      player0.setJoinOK(player1, false);
      Player player2 = new Player((-933), "", (-933));
      player2.add(player1);
      player2.isJoinOK(player1, true);
      System.setCurrentTimeMillis((-2209L));
      System.setCurrentTimeMillis(1392409296320L);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(1, player1.getStrength());
      assertFalse(boolean0);
      assertEquals("Player-1334", player0.toString());
      assertFalse(player1.isDead());
      assertEquals((-933), player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }
}
