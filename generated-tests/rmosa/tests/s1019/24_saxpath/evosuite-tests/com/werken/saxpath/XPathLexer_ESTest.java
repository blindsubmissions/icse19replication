/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 14:03:16 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<R");
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5281189455022457
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".^3701z9'Uz");
      xPathLexer0.at();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.726557501493486
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<R");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("<", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("R", token2.getTokenText());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.7508969420745703
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<R");
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer(":<R");
      xPathLexer1.literal();
      xPathLexer1.notEquals();
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("!?Z/IZRi%");
      xPathLexer0.or();
      xPathLexer2.nextToken();
      xPathLexer2.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.7429579122917852
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.colon();
      assertEquals("[", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.7794361083442046
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<R");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5658843209624893
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".@n701F'Uz");
      xPathLexer0.setXPath(".@n701F'Uz");
      xPathLexer0.mod();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.955135120832051
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.plus();
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<R");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6944230652122783
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C.4qNwwq");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      String string0 = null;
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<R");
      Token token0 = xPathLexer0.at();
      assertEquals(":", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.766319181580324
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",-apqo/#!b)2( q#5T");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(",-apqo/#!b)2( q#5T");
      xPathLexer0.consume((-334));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9444001837597331
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",-apqo/#!b)2( q#5T");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(6, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(",-apqo/#!b)2( q#5T");
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.dollar();
      assertEquals("a", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer1.equals();
      String string0 = token0.toString();
      assertEquals("[ (32) (,)", string0);
      
      xPathLexer1.comma();
      String string1 = token3.toString();
      assertEquals("[ (21) (,)", string1);
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("apqo", token4.getTokenText());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.2981004464448087
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/llynzw@Ms@J+WSoX");
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.literal();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.mod();
      assertNull(token2);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.7137947389606807
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<R");
      XPathLexer xPathLexer1 = new XPathLexer(":<R");
      Token token0 = xPathLexer1.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals(":<", token0.getTokenText());
      
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("!?Z/IZRi%");
      xPathLexer0.or();
      Token token1 = xPathLexer2.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      xPathLexer2.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer2.or();
      Token token3 = xPathLexer2.nextToken();
      assertEquals("?Z/IZRi%", token3.getTokenText());
      
      Token token4 = xPathLexer2.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4898709102748832
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".^3701z9'Uz");
      xPathLexer0.setXPath(".^3701z9'Uz");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0730378210901508
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".^3701z9'Uz");
      xPathLexer0.setXPath(".^3701z9'Uz");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("oKdvNppv.HEv");
      xPathLexer0.div();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5475222642133337
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i$&><,{iJ ");
      xPathLexer0.and();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(22, token0.getTokenType());
      assertEquals("i$", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("&", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.and();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("<", token4.getTokenText());
      assertEquals(7, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.div();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(32, token6.getTokenType());
      assertEquals(",", token6.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.345911059960548
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oo&n");
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.number();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("o", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0oLDHT_");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("0o", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("LDHT_", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1G}D<u'>3aK!cuKB");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("1", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0730378210901508
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".^3701z9'Uz");
      xPathLexer0.setXPath(".^3701z9'Uz");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0730378210901508
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".^3701z9'Uz");
      xPathLexer0.setXPath(".^3701z9'Uz");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("^", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("3701", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|jE+iUnS;V01");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("|", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.8442153640059868
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".709z");
      Token token0 = xPathLexer0.dollar();
      assertEquals(".", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("709", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer1.leftParen();
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.8126179598015353
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".709z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".709", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer1.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer1.leftParen();
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1142527752732287
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("86.vcdLn>;uCNE?(");
      Token token0 = xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("86.vcdLn>;uCNE?(");
      XPathLexer xPathLexer2 = new XPathLexer("86.vcdLn>;uCNE?(");
      xPathLexer2.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals(">;", token1.getTokenText());
      
      Token token2 = xPathLexer1.equals();
      assertEquals("8", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (17) (8)", string0);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("uCNE", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0001129501549597
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]5dd$ Skhv");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("]", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("5", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.div();
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("$ ", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("khv", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.8594058293620606
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<R");
      XPathLexer xPathLexer1 = new XPathLexer(":<R");
      Token token0 = xPathLexer1.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals(":<", token0.getTokenText());
      
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("!?Z/IZRi%");
      Token token1 = xPathLexer2.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("!?", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer2.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Z", token2.getTokenText());
      
      xPathLexer2.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(":", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.188087839961315
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n$qufJ)-j@+bU");
      Token token0 = xPathLexer0.comma();
      assertEquals("n", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      XPathLexer xPathLexer1 = new XPathLexer("n$qufJ)-j@+bU");
      Token token2 = xPathLexer1.equals();
      assertEquals("n", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (15) (qufJ)", string0);
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(26, token3.getTokenType());
      assertEquals("$", token3.getTokenText());
      
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('(');
      assertFalse(boolean0);
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(")", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r.Z78$tnWk9C|hk8b");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("r.Z78", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1797269776294952
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]5dd$ Skhv");
      Token token0 = xPathLexer0.plus();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3653265327777906
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]5dd$ Skhv");
      xPathLexer0.plus();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("]5dd$ Skhv");
      xPathLexer1.whitespace();
      xPathLexer1.comma();
      xPathLexer1.consume();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.9242190485476333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C.4qNwwq");
      xPathLexer0.dots();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      String string0 = null;
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.287157981160451
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.setXPath(".0h9z");
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.913003274705213
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".H");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.8798846890844252
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E");
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*axTs' \u0000v");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(20, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T2G?");
      Token token0 = new Token(56, "T2G?", 56, (-1300));
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.8204162834946392
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qkh.osb_=U=|(");
      XPathLexer xPathLexer1 = new XPathLexer("Qkh.osb_=U=|(");
      XPathLexer xPathLexer2 = new XPathLexer("Qkh.osb_=U=|(");
      xPathLexer2.identifierOrOperatorName();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Qkh.osb_", token0.getTokenText());
      
      Token token1 = xPathLexer2.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.3306448686158059
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wZmtOF");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.mod();
      token0.toString();
      xPathLexer0.operatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("wZmtOF");
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qkh.osb_=U=|(");
      XPathLexer xPathLexer1 = new XPathLexer("`VcX~>{eXl2v0-<");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("`VcX~>{eXl2v0-<", token0.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("][9YmP9RT`^}G}");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C.4qNwwq");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("C.4qNwwq", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5936369122993135
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.setXPath("");
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.minus();
      xPathLexer0.setXPath("QTTY@a*t!uc{mw5Z");
      Token token5 = xPathLexer0.leftParen();
      assertEquals("Q", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      xPathLexer0.minus();
      Token token6 = xPathLexer0.minus();
      xPathLexer0.and();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("Y", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightParen();
      String string0 = token6.toString();
      assertEquals("[ (6) (T)", string0);
      
      String string1 = token8.toString();
      assertEquals("[ (2) (@)", string1);
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")*Iy");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.pipe();
      assertEquals("[", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("'QtHFXa-T%~8=&Eh D");
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y/^;E~ikL");
      xPathLexer0.literal();
      xPathLexer0.identifier();
      xPathLexer0.identifier();
      xPathLexer0.or();
      xPathLexer0.plus();
      xPathLexer0.consume((-2692));
      XPathLexer xPathLexer1 = new XPathLexer("Y/^;E~ikL");
      xPathLexer1.slashes();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.3501387822636106
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/llynzw@Ms@J+WSoX");
      Token token0 = xPathLexer0.comma();
      assertEquals("/", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("ll", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (15) (ynzw)", string0);
      
      Token token3 = xPathLexer0.literal();
      xPathLexer0.setPreviousToken(token3);
      assertEquals("Ms", token3.getTokenText());
      assertEquals(27, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("J+WSoX", token4.getTokenText());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Kx8][d'O ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Kx8", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.8154562257291564
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.setXPath("%d8kRsX");
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%i)|vx0YPfD&tmg_F");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("%i)|vx0YPfD&tmg_F", token0.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.2158772070434334
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n$qufJ)-j@+bU");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("n", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(26, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      token2.toString();
      XPathLexer xPathLexer1 = new XPathLexer("n$qufJ)-j@+bU");
      xPathLexer1.nextToken();
      Token token4 = xPathLexer1.equals();
      assertEquals("$", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (15) (qufJ)", string0);
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("qufJ)-j@+bU", token5.getTokenText());
      
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('(');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("X", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.8510274070140533
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4'\"|er'^o");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.3090604788629006
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7:;5&S4567y");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      xPathLexer0.consume();
      token0.toString();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.colon();
      token1.toString();
      token1.toString();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      Token token2 = xPathLexer0.mod();
      assertNull(token2);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WJ02{D]*b8{Mtb");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("WJ02", token0.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.3571751325367705
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wZmtOF");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.not();
      assertEquals("t", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(11, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("OF", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("wZmtOF");
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer0.mod();
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.8154562257291564
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.8150470866031743
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".H");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("H", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.3398899683921883
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/llynzw@Ms@J+WSoX");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.literal();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.and();
      assertNull(token2);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x\"J`B{'y*&8UQ");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("x", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T2G?");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("T", token0.getTokenText());
      
      Token token1 = new Token(56, "T2G?", 56, (-1300));
      Token token2 = xPathLexer0.star();
      assertEquals("2", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer0.nextToken();
      assertEquals("G?", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xI");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("xI", token0.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WJ02{D]*b8{Mtb");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("WJ", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("02", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.3994430666848732
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".^3701z9'Uz");
      xPathLexer0.setXPath(".^3701z9'Uz");
      xPathLexer0.doubleColon();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Id 9TTCP<=|3c)");
      XPathLexer xPathLexer1 = new XPathLexer("Id 9TTCP<=|3c)");
      Token token0 = xPathLexer1.equals();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (21) (I)", string0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Id", token1.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-6Y<Cup@S;");
      Token token0 = xPathLexer0.identifier();
      String string0 = token0.toString();
      assertEquals("[ (15) (-6Y)", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.9795512710380188
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ambTf2]90R4RmP9tE'");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      assertEquals("ambTf2", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(4, token1.getTokenType());
      assertEquals("]", token1.getTokenText());
      
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MqPxM=~dDuGIaES");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("MqPxM", token0.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b\"]k?zavv3d");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("b", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/llynzw@Ms@J+WSoX");
      xPathLexer0.or();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N^MB^!>!.8'!c{Oj");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e5Azp}I{M");
      XPathLexer xPathLexer1 = new XPathLexer("e5Azp}I{M");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("e5Azp", token0.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('(');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.8754740558299271
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".709z");
      Token token0 = xPathLexer0.not();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("09", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token3 = xPathLexer1.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer1.leftParen();
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.7619471569286803
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.setXPath(".0h9z");
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.2683472595570102
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<R");
      XPathLexer xPathLexer1 = new XPathLexer(":<R");
      xPathLexer1.slashes();
      xPathLexer1.notEquals();
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("!?Z/IZRi%");
      xPathLexer0.or();
      xPathLexer2.nextToken();
      xPathLexer0.setXPath("V4u[,A:*MDD7YNj");
      xPathLexer2.and();
      xPathLexer0.nextToken();
      xPathLexer2.or();
      xPathLexer2.identifierOrOperatorName();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.3501387822636106
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/llynzw@Ms@J+WSoX");
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.literal();
      token1.toString();
      xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.mod();
      assertNull(token2);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.9569125676632271
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7:;5&S4567y");
      xPathLexer0.star();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("7:;5&S4567y");
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.dollar();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wZmtOF");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("wZmtOF", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.9511602196876867
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]5dd$ Skhv");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("]", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.div();
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("Skhv", token3.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("= R");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.9444001837597331
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",-apqo/#!b)2( q#5T");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(",-apqo/#!b)2( q#5T");
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.dollar();
      assertEquals("a", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer1.equals();
      String string0 = token0.toString();
      assertEquals("[ (32) (,)", string0);
      
      String string1 = token2.toString();
      assertEquals("[ (21) (,)", string1);
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("-", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      xPathLexer1.and();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("pqo", token4.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.2767956223526347
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wZmtOF");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.whitespace();
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("wZmtOF");
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("D", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i$&><,{iJ ");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.star();
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W02{D]*8{Mtb");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("W0", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("2", token1.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.1889566956420738
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<!wBL~YveE49ZP5!T3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals("wBL", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#ao2ev");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#ao2ev", token0.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.9867181692768371
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("86.vcdLn>;uCNE?(");
      Token token0 = xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("86.vcdLn>;uCNE?(");
      XPathLexer xPathLexer2 = new XPathLexer("86.vcdLn>;uCNE?(");
      xPathLexer2.operatorName();
      Token token1 = xPathLexer1.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (17) (8)", string0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("6.", token2.getTokenText());
      assertEquals(31, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("vcdLn>;uCNE?(", token3.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.7508969420745703
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<R");
      XPathLexer xPathLexer1 = new XPathLexer(":<R");
      xPathLexer1.slashes();
      xPathLexer1.notEquals();
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("!?Z/IZRi%");
      xPathLexer0.or();
      xPathLexer2.nextToken();
      xPathLexer2.and();
      xPathLexer0.nextToken();
      xPathLexer2.or();
      Token token0 = xPathLexer2.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.8924853529456784
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.setXPath(".0h9z");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ga9~");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      xPathLexer0.nextToken();
      String string0 = null;
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.9787037436461098
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",-apqo/#!b)2( q#5T");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(",-apqo/#!b)2( q#5T");
      xPathLexer0.operatorName();
      xPathLexer0.dollar();
      Token token1 = xPathLexer1.equals();
      token0.toString();
      token1.toString();
      xPathLexer1.nextToken();
      Token token2 = xPathLexer1.and();
      assertNull(token2);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.1283852741461817
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".^3701z9'Uz");
      xPathLexer0.setXPath(".^3701z9'Uz");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("^", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("3", token2.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("z9'Uz", token4.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("86.vcdLn>;uCNE?(");
      Token token0 = xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("86.vcdLn>;uCNE?(");
      xPathLexer0.operatorName();
      Token token1 = xPathLexer1.equals();
      assertEquals("8", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (17) (8)", string0);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setPreviousToken(token0);
      boolean boolean0 = xPathLexer2.isIdentifierStartChar('_');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.3306448686158059
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wZmtOF");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("Zm", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("O", token2.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(11, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("F", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("wZmtOF");
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.1991360934119366
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i$&><,{iJ ");
      xPathLexer0.and();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.9726210083321282
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("86.vcdLn>;uCNE?(");
      Token token0 = xPathLexer0.slashes();
      assertEquals("8", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("86.vcdLn>;uCNE?(");
      XPathLexer xPathLexer2 = new XPathLexer("86.vcdLn>;uCNE?(");
      xPathLexer2.or();
      Token token2 = xPathLexer2.identifierOrOperatorName();
      assertEquals("86.vcdLn", token2.getTokenText());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals(">", token3.getTokenText());
      assertEquals(9, token3.getTokenType());
      
      xPathLexer1.and();
      Token token4 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("PC");
      Token token0 = new Token(81, "", 81, 81);
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<=g8LyaF4.<>D-9");
      Token token0 = xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.or();
      Token token1 = xPathLexer1.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("<=y");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<=", token0.getTokenText());
      assertEquals(8, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("y", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.238941108704779
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]5di$ Skhv");
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("usl^");
      xPathLexer1.operatorName();
      Token token1 = xPathLexer1.equals();
      token1.toString();
      token0.toString();
      xPathLexer1.operatorName();
      Token token2 = xPathLexer0.and();
      assertNull(token2);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.401197381662154
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer0.colon();
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume(46);
      xPathLexer0.or();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.star();
      xPathLexer0.literal();
      xPathLexer0.leftParen();
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      xPathLexer0.plus();
      xPathLexer0.whitespace();
      xPathLexer0.doubleColon();
      xPathLexer0.setXPath("h::kq{sr:8");
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.2953868005627187
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".370z9Uz");
      xPathLexer0.identifier();
      xPathLexer0.setXPath(".370z9Uz");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".909z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".909", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("0|{#{P58vy^nj");
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("z", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("0", token2.getTokenText());
  }
}
