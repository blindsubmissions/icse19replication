/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 14:41:33 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("0|0a_}2}y3#[5");
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[2];
      stringArray0[1] = "e`e3e";
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(')');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ())
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize((-1969));
      outputFormat0.setEncoding("TK|vN__T~$O^");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.isTrimText();
      outputFormat0.setNewLineAfterNTags((-1969));
      assertEquals("TK|vN__T~$O^", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("9/lV{Rh%&n_A", false, "9/lV{Rh%&n_A");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "9/lV{Rh%&n_A";
      stringArray0[1] = "9/lV{Rh%&n_A";
      stringArray0[2] = "9/lV{Rh%&n_A";
      stringArray0[3] = "9/lV{Rh%&n_A";
      stringArray0[4] = "-expandEmpty)6:eV<G>z`";
      stringArray0[5] = "9/lV{Rh%&n_A";
      stringArray0[6] = "9/lV{Rh%&n_A";
      stringArray0[7] = "9/lV{Rh%&n_A";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("9/lV{Rh%&n_A", outputFormat0.getIndent());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("9/lV{Rh%&n_A", outputFormat0.getEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("L/Y&*qyV&&>TS<H", false, "");
      String string0 = outputFormat0.getEncoding();
      assertEquals("L/Y&*qyV&&>TS<H", outputFormat0.getIndent());
      assertEquals("", string0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = " j!#kT0LQ#OO]fb3Z!";
      boolean boolean0 = false;
      String string1 = "rAP7P-7";
      OutputFormat outputFormat0 = new OutputFormat(" j!#kT0LQ#OO]fb3Z!", false, "rAP7P-7");
      outputFormat0.setPadText(false);
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "&W2&<}w~_)3$\u0000Nq0C";
      stringArray0[1] = "Eu";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "0g7[jY3}~nL^/";
      stringArray0[6] = "<1u1G&";
      stringArray0[7] = ">.2;M.+";
      outputFormat0.parseOptions(stringArray0, 421);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "-expandEmpty-encoding";
      stringArray1[1] = " H<LCC.4p YldkSF";
      stringArray1[2] = "8R4(aE~G";
      outputFormat0.setOmitEncoding(false);
      int int0 = outputFormat0.parseOptions(stringArray1, 35);
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(35, int0);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("");
      outputFormat0.setPadText(true);
      outputFormat0.isNewlines();
      assertFalse(outputFormat0.isNewlines());
      
      outputFormat0.setNewlines(true);
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[14];
      stringArray0[0] = ")6:eV<G>z`";
      stringArray0[7] = "NOiT)L";
      stringArray0[2] = "NOiT)L";
      stringArray0[2] = "NOiT)L";
      OutputFormat outputFormat0 = new OutputFormat("$r$hI;Y");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.parseOptions(stringArray0, 151);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-104503659));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -104503659
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimText", false);
      outputFormat0.setXHTML(false);
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("-trimText", outputFormat0.getIndent());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "so6q6E~@X'm;fYM";
      stringArray0[2] = "-expandEmptyso6q6E~@X'm;fYM";
      stringArray0[3] = "pK0z-";
      stringArray0[4] = "so6q6E~@X'm;fYM";
      OutputFormat outputFormat1 = new OutputFormat("26J(");
      boolean boolean0 = outputFormat1.isOmitEncoding();
      assertEquals("26J(", outputFormat1.getIndent());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertFalse(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isTrimText());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertFalse(outputFormat1.isXHTML());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertFalse(boolean0);
      assertFalse(outputFormat1.isPadText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.2015591547737916
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent(")6:eV<G>z`");
      outputFormat0.isXHTML();
      outputFormat0.setIndent((String) null);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndentSize(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ")6:eV<G>z`";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("", outputFormat0.getIndent());
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2337673247041645
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setEncoding("");
      outputFormat0.setExpandEmptyElements(true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('}');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (})
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      String[] stringArray0 = new String[0];
      outputFormat0.parseOptions(stringArray0, 34);
      outputFormat0.setIndentSize(34);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1047));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1047
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent((String) null);
      outputFormat0.isXHTML();
      outputFormat0.isSuppressDeclaration();
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[2] = "";
      stringArray0[3] = "y&tNyE*";
      stringArray0[4] = "";
      stringArray0[5] = "mRT<3;rDK";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertEquals("UTF-8", outputFormat0.getEncoding());
      
      outputFormat0.setEncoding("");
      outputFormat0.setIndent("");
      outputFormat0.isPadText();
      outputFormat0.setIndent("A");
      assertEquals("", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setIndentSize((-1));
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals('\"', char0);
      
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isXHTML());
      assertEquals("", outputFormat0.getIndent());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "9/lV{Rh%&n_A\\";
      OutputFormat outputFormat0 = new OutputFormat("9/lV{Rh%&n_A", true);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('^');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (^)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(true);
      boolean boolean0 = true;
      outputFormat0.setIndent(true);
      outputFormat0.getIndent();
      outputFormat0.getLineSeparator();
      outputFormat0.setSuppressDeclaration(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('3');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (3)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("0|0a_}2}y3#[5", true, "0|0a_}2}y3#[5");
      outputFormat0.isExpandEmptyElements();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "\u0005'TS@3|[2";
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray1 = new String[9];
      stringArray1[0] = "0|0a_}2}y3#[5";
      stringArray1[1] = "0|0a_}2}y3#[5";
      stringArray1[2] = "\u0005'TS@3|[2";
      stringArray1[3] = "\u0005'TS@3|[2";
      stringArray1[4] = "\u0005'TS@3|[2";
      stringArray1[5] = "0|0a_}2}y3#[5";
      stringArray1[6] = "\u0005'TS@3|[2";
      stringArray1[7] = "0|0a_}2}y3#[5";
      stringArray1[8] = "0|0a_}2}y3#[5";
      outputFormat0.parseOptions(stringArray1, 261);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1969444123));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1969444123
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setNewlines(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = null;
      outputFormat0.setLineSeparator("");
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      outputFormat0.setXHTML(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('0');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (0)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "so6q6E~@X'm;fYM";
      stringArray0[2] = "-expandEmptyso6q6E~@X'm;fYM";
      stringArray0[3] = "pK0z-";
      stringArray0[4] = "so6q6E~@X'm;fYM";
      OutputFormat outputFormat0 = new OutputFormat("-trimText", false);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "-trimText";
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      stringArray1[1] = "-newlines";
      stringArray1[2] = "-expandEmptyso6q6E~@X'm;fYM";
      stringArray1[3] = "so6q6E~@X'm;fYM";
      stringArray1[4] = "={SPbQ6?I#yI/r)*ES";
      stringArray1[5] = "so6q6E~@X'm;fYM";
      stringArray1[6] = "so6q6E~@X'm;fYM";
      stringArray1[7] = "-trimText";
      int int0 = outputFormat0.parseOptions(stringArray1, 2);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setIndent("-lineSeparator");
      outputFormat0.setLineSeparator(")6:eV<G>z`");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = ")6:eV<G>z`";
      stringArray0[2] = "-lineSeparator";
      outputFormat0.getNewLineAfterNTags();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isExpandEmptyElements();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "V }0EwvC-t";
      stringArray0[2] = "\u0005'TS@3|[2";
      stringArray0[3] = "e`e3e";
      stringArray0[4] = "#pUdJGjY3'y'If3";
      stringArray0[5] = "V }0EwvC-t";
      stringArray0[6] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-3483));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3483
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("TR&@L5?n7gyOa(:IV7", false);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterNTags((-393049466));
      outputFormat0.setAttributeQuoteCharacter('\'');
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-expandEmpty";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-393049466));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -393049466
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("JH[,p,Bjd1eZ*%");
      outputFormat0.setNewLineAfterDeclaration(false);
      String string0 = "%U\\udy-,";
      outputFormat0.setIndent(string0);
      outputFormat0.isXHTML();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ")6:eV<G>z`";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "JH[,p,Bjd1eZ*%";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat1.setEncoding("-trimText");
      outputFormat0.setEncoding("JH[,p,Bjd1eZ*%");
      assertEquals("%U\\udy-,", outputFormat0.getIndent());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      OutputFormat outputFormat1 = new OutputFormat("", false);
      outputFormat1.setEncoding((String) null);
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions((String[]) null, (-498));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Z1u7]{");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent("<eP}");
      outputFormat0.isXHTML();
      String[] stringArray0 = new String[9];
      stringArray0[0] = ")6:eV<G>z`";
      stringArray0[1] = "-encoding";
      stringArray0[2] = ")6:eV<G>z`";
      stringArray0[3] = "Z1u7]{";
      stringArray0[4] = "Z1u7]{";
      stringArray0[5] = "Z1u7]{";
      stringArray0[6] = "<eP}";
      stringArray0[7] = "<eP}";
      stringArray0[8] = "-encoding";
      outputFormat0.parseOptions(stringArray0, 1357);
      outputFormat0.parseOptions(stringArray0, 1);
      int int0 = outputFormat0.parseOptions(stringArray0, 39);
      assertEquals("<eP}", outputFormat0.getIndent());
      assertEquals(39, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setLineSeparator("q ");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "q ";
      stringArray0[2] = "-encoding";
      outputFormat0.parseOptions(stringArray0, 0);
      int int0 = outputFormat0.parseOptions(stringArray0, 19);
      assertEquals("q ", outputFormat0.getLineSeparator());
      assertEquals(19, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmln8['Yh'nm>Hxt");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent("-padText");
      assertEquals("-padText", outputFormat0.getIndent());
      
      outputFormat0.setIndent("-xhtmln8['Yh'nm>Hxt");
      outputFormat0.isXHTML();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-padText";
      stringArray0[1] = "-padText";
      stringArray0[2] = "-padText";
      outputFormat0.parseOptions(stringArray0, 0);
      int int0 = outputFormat0.parseOptions(stringArray0, 4713);
      assertEquals(4713, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-expandEmpty~]KzKusT7HfPJU";
      stringArray0[1] = "";
      stringArray0[2] = "-padText";
      stringArray0[3] = ";((fr";
      stringArray0[4] = " P~OeU";
      stringArray0[5] = "W js1fh|7,W;7xN*wp&";
      stringArray0[6] = "";
      stringArray0[7] = "z~kssF7Ma0y~vD";
      stringArray0[8] = "xSe!W%J~eW/K/a)r";
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = null;
      int int0 = 1;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-encoding", false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xhtmln8['Yh'nm>Hxt";
      stringArray0[1] = "gp&${t<Tz_) #gB4!";
      stringArray0[2] = "-xhtm)6:eVG>z`";
      stringArray0[3] = "-encoding";
      stringArray0[4] = "-xhtmln8['Yh'nm>Hxt";
      stringArray0[5] = "z~&MDR;_Z(>EJ";
      stringArray0[6] = "-encoding";
      stringArray0[8] = "ti";
      outputFormat0.parseOptions(stringArray0, 572);
      assertFalse(outputFormat0.isXHTML());
      
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "-xhtmln8['Yh'nm>Hxt";
      stringArray1[1] = "-xhtm)6:eVG>z`";
      stringArray1[2] = "ti";
      stringArray1[3] = "gp&${t<Tz_) #gB4!";
      int int0 = outputFormat0.parseOptions(stringArray1, 1);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String string0 = "-lineSeparator";
      String string1 = "-lineSeparator";
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("-lineSeparator");
      outputFormat0.setIndent("-xhtml-xhtmln8['Yh'nm>Hxt");
      outputFormat1.setLineSeparator("-lineSeparator");
      outputFormat0.setLineSeparator("-lineSeparator");
      int int0 = 1;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-lineSeparator";
      String string2 = "-indent";
      stringArray0[1] = "-indent";
      stringArray0[2] = "-xhtml-xhtmln8['Yh'nm>Hxt";
      stringArray0[3] = "-lineSeparator";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-encoding", false);
      String[] stringArray0 = new String[9];
      outputFormat0.setXHTML(false);
      stringArray0[0] = "-xhtmln8['Yh'nm>Hxt";
      stringArray0[1] = "gp&${t<Tz_) #gB4!";
      stringArray0[2] = "-xhtml)6:eV<G>z`";
      stringArray0[3] = "-encoding";
      stringArray0[4] = "-xhtmln8['Yh'nm>Hxt";
      stringArray0[5] = "z~&MDR;_Z(>EJ";
      outputFormat0.setIndentSize(984);
      stringArray0[6] = "-encoding";
      stringArray0[7] = "-xhtmln8['Yh'nm>Hxt";
      stringArray0[8] = "-suppressDeclaration";
      outputFormat0.parseOptions(stringArray0, 574);
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "-xhtmln8['Yh'nm>Hxt";
      stringArray1[1] = "-xhtml)6:eV<G>z`";
      stringArray1[2] = "-suppressDeclaration";
      stringArray1[3] = "gp&${t<Tz_) #gB4!";
      int int0 = outputFormat0.parseOptions(stringArray1, 1);
      assertEqualsoutputFormat0.getIndent());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setNewLineAfterDeclaration(true);
      String string0 = "-padText";
      outputFormat0.setIndent("-padText");
      outputFormat0.isXHTML();
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      int int0 = 1;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "-padText";
      stringArray0[2] = "-indentSize";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
