/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 14:48:14 GMT 2018
 */

package weka.filters.unsupervised.attribute;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.function.Consumer;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.DenseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.Range;
import weka.core.SparseInstance;
import weka.filters.AllFilter;
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.Discretize;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Discretize_ESTest extends Discretize_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getRevision();
      // Undeclared exception!
      try { 
        discretize0.output();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1383972463477248
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Range range0 = discretize0.m_DiscretizeCols;
      discretize0.m_DiscretizeCols = range0;
      discretize0.setOptions((String[]) null);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Discretize discretize0 = new Discretize("a}cHsRcFfv@7zZ3#'8");
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      discretize0.setAttributeIndices("a}cHsRcFfv@7zZ3#'8");
      Random.setNextRandom(7);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.setAttributeIndicesArray((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8989267893363286
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setDesiredWeightOfInstancesPerInterval((-1144.72938352));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HpukI");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("6|@@A IOYs:e`", arrayList0, 2710);
      Attribute attribute0 = new Attribute(".arff");
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 4;
      doubleArray0[1] = (double) 0;
      doubleArray0[0] = (-1144.72938352);
      doubleArray0[3] = (-1144.72938352);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1144.72938352), doubleArray0);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance((SparseInstance) binarySparseInstance0);
      instances0.add((Instance) binarySparseInstance0);
      arrayList0.add(attribute0);
      Instances instances1 = new Instances(instances0, 0);
      instances0.retainAll(arrayList0);
      discretize0.setInputFormat(instances1);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1842527717936577
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Discretize discretize0 = new Discretize("KWh>E?p?@H+B3lCN");
      double[][] doubleArray0 = new double[3][0];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 3529;
      doubleArray1[1] = (double) 3529;
      doubleArray1[2] = (double) 3529;
      doubleArray1[3] = (double) 3529;
      doubleArray1[4] = (double) 3529;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) 3529;
      doubleArray0[1] = doubleArray2;
      discretize0.m_CutPoints = doubleArray0;
      discretize0.m_NumBins = 3529;
      discretize0.getOptions();
      discretize0.getBinRangesString(1);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Discretize discretize0 = new Discretize("I406@Yd{on");
      discretize0.makeBinaryTipText();
      SparseInstance sparseInstance0 = null;
      try {
        sparseInstance0 = new SparseInstance((-1.0), (double[]) null, (int[]) null, 283);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.SparseInstance", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.input((Instance) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Discretize discretize0 = new Discretize("");
      discretize0.getOptions();
      BinarySparseInstance binarySparseInstance0 = null;
      try {
        binarySparseInstance0 = new BinarySparseInstance((-148));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.BinarySparseInstance", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Discretize discretize0 = new Discretize("0(0!uQBx@vr)$v");
      String string0 = discretize0.invertSelectionTipText();
      assertEquals("Set attribute selection mode. If false, only selected (numeric) attributes in the range will be discretized; if true, only non-selected attributes will be discretized.", string0);
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Discretize discretize0 = new Discretize("I40m@Yd3on");
      String string0 = discretize0.findNumBinsTipText();
      assertEquals(10, discretize0.getBins());
      assertEquals("Optimize number of equal-width bins using leave-one-out. Doesn't work for equal-frequency binning", string0);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.attributeIndicesTipText();
      // Undeclared exception!
      try { 
        discretize0.outputPeek();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[6];
      Discretize.main(stringArray0);
      assertEquals(6, stringArray0.length);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[] doubleArray0 = new double[5];
      discretize0.useBinNumbersTipText();
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.binsTipText();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertEquals("Number of bins.", string0);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.useEqualFrequencyTipText();
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals("If set to true, equal-frequency binning will be used instead of equal-width binning.", string0);
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getCutPoints(589);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.1842527717936577
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Discretize discretize0 = new Discretize("KWh>E?p?@H+B3lCN");
      double[][] doubleArray0 = new double[3][0];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 3529;
      doubleArray1[1] = (double) 3529;
      doubleArray1[2] = (double) 3529;
      doubleArray1[3] = (double) 3529;
      doubleArray1[4] = (double) 3529;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) 3529;
      doubleArray0[1] = doubleArray2;
      discretize0.m_UseEqualFrequency = true;
      discretize0.m_CutPoints = doubleArray0;
      discretize0.m_NumBins = 3529;
      discretize0.getOptions();
      discretize0.getBinRangesString(1);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-M";
      stringArray0[1] = "gof]S%?";
      stringArray0[2] = "d_L-y$E%B5$&P";
      Filter.runFilter(discretize0, stringArray0);
      discretize0.getInvertSelection();
      discretize0.setOutputFormat();
      SparseInstance sparseInstance0 = null;
      try {
        sparseInstance0 = new SparseInstance((Instance) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.SparseInstance", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Discretize discretize0 = new Discretize("-B");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-B";
      stringArray0[1] = "iT~V.8\"W-7 wNuuc";
      stringArray0[2] = "@w%}'7{yvX(xgVd$LYi";
      stringArray0[3] = "-B";
      stringArray0[4] = "-B";
      stringArray0[5] = "-B";
      stringArray0[6] = "-B";
      Filter.runFilter(discretize0, stringArray0);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "// This code is public domain and comes with no warranty.\n";
      stringArray0[1] = "weka.core.wekaPackageRepositoryURL";
      stringArray0[2] = "-R";
      stringArray0[3] = ";t3Cz'Q)zT=";
      stringArray0[4] = "NOMINAL_ATTRIBUTES";
      stringArray0[5] = ";t3Cz'Q)zT=";
      discretize0.setOptions(stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "?+/$j_}j";
      try { 
        Filter.batchFilterFile(discretize0, stringArray1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 
         // null
         // Filter options:
         // 
         // -unset-class-temporarily
         // \tUnsets the class index temporarily before the filter is
         // \tapplied to the data.
         // \t(default: no)
         // -B <num>
         // \tSpecifies the (maximum) number of bins to divide numeric attributes into.
         // \t(default = 10)
         // -M <num>
         // \tSpecifies the desired weight of instances per bin for
         // \tequal-frequency binning. If this is set to a positive
         // \tnumber then the -B option will be ignored.
         // \t(default = -1)
         // -F
         // \tUse equal-frequency instead of equal-width discretization.
         // -O
         // \tOptimize number of bins using leave-one-out estimate
         // \tof estimated entropy (for equal-width discretization).
         // \tIf this is set then the -B option will be ignored.
         // -R <col1,col2-col4,...>
         // \tSpecifies list of columns to Discretize. First and last are valid indexes.
         // \t(default: first-last)
         // -V
         // \tInvert matching sense of column indexes.
         // -D
         // \tOutput binary attributes for discretized attributes.
         // -Y
         // \tUse bin numbers rather than ranges for discretized attributes.
         // 
         // General options:
         // 
         // -h
         // \tGet help on available options.
         // -i <filename>
         // \tThe file containing first input instances.
         // -o <filename>
         // \tThe file first output instances will be written to.
         // -r <filename>
         // \tThe file containing second input instances.
         // -s <filename>
         // \tThe file second output instances will be written to.
         // -c <class index>
         // \tThe number of the attribute to use as the class.
         // \t\"first\" and \"last\" are also valid entries.
         // \tIf not supplied then no class is assigned.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Discretize discretize0 = new Discretize();
      double[] doubleArray0 = new double[1];
      discretize0.setFindNumBins(true);
      discretize0.m_DiscretizeCols = null;
      // Undeclared exception!
      try { 
        discretize0.getOptions();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.globalInfo();
      assertEquals("An instance filter that discretizes a range of numeric attributes in the dataset into nominal attributes. Discretization is by simple binning. Skips the class attribute if set.", string0);
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Discretize discretize0 = new Discretize();
      double[] doubleArray0 = new double[7];
      discretize0.setMakeBinary(true);
      discretize0.m_DiscretizeCols = null;
      // Undeclared exception!
      try { 
        discretize0.getOptions();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[2][0];
      discretize0.m_CutPoints = doubleArray0;
      discretize0.m_NumBins = 3529;
      // Undeclared exception!
      try { 
        discretize0.getCutPoints(3529);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3529
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7983582344060363
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("L&V$uMMQls(#si}l4");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("L&V$uMMQls(#si}l4", arrayList0, 2710);
      Instances instances1 = new Instances("L&V$uMMQls(#si}l4", arrayList0, 2710);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Integer integer0 = new Integer(2710);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      instances0.removeIf(predicate0);
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1);
      Attribute attribute1 = new Attribute((String) null, list0);
      instances1.numDistinctValues(attribute0);
      arrayList0.add(attribute1);
      Instances instances2 = new Instances(instances0, 0);
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      instances1.retainAll(linkedList2);
      discretize0.setInputFormat(instances1);
      discretize0.calculateCutPoints();
      // Undeclared exception!
      try { 
        discretize0.findNumBins(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9504543117424777
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      int int0 = 3373;
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("L&Vu'als(#s}+4", arrayList0, 3373);
      Attribute attribute0 = new Attribute("@relation");
      boolean boolean0 = discretize0.m_UseBinNumbers;
      discretize0.m_NumBins = 3373;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
      arrayList0.add(attribute0);
      Instances instances1 = new Instances(instances0, 0);
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      attribute0.setWeight(3373);
      discretize0.setInputFormat(instances1);
      Random.setNextRandom(1);
      discretize0.calculateCutPoints();
      discretize0.findNumBins(0);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Discretize discretize0 = new Discretize("KWh>E?p?@H+B3lCN");
      double[][] doubleArray0 = new double[3][0];
      double[] doubleArray1 = new double[5];
      doubleArray0[0] = doubleArray1;
      doubleArray0[1] = doubleArray1;
      discretize0.m_CutPoints = doubleArray0;
      Locale.getISOLanguages();
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("|;:!njE0r", arrayList0, 3931);
      SystemInUtil.addInputLine(".bsi");
      Attribute attribute0 = new Attribute("|;:!njE0r", 3931);
      discretize0.m_NumBins = 3931;
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "date";
      stringArray0[1] = "relational";
      stringArray0[2] = "zr;J`[^=$v5L;d-A|9";
      stringArray0[3] = "string";
      stringArray0[4] = "@attribute";
      stringArray0[5] = ".bsi";
      stringArray0[6] = "@end";
      discretize0.setOptions(stringArray0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Integer integer0 = new Integer((-3224));
      Attribute attribute1 = new Attribute("-~(?A]gA|", instances0, 4);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) attribute1);
      instances0.removeIf(predicate0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1);
      Attribute attribute2 = new Attribute((String) null, linkedList1);
      // Undeclared exception!
      try { 
        instances0.numDistinctValues(attribute1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4, Size: 4
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4956858769802763
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertEquals(10, discretize0.getBins());
      
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("L&Vu'als(#s}+4", arrayList0, 3318);
      Attribute attribute0 = new Attribute("@relation");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "@relation");
      discretize0.m_NumBins = 3318;
      Attribute attribute1 = attribute0.copy(".bsi");
      attribute0.addStringValue(attribute1, 3253);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(3269);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance((SparseInstance) binarySparseInstance0);
      arrayList0.add(attribute0);
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      discretize0.getCapabilities();
      discretize0.batchFinished();
      DenseInstance denseInstance0 = new DenseInstance(910);
      discretize0.convertInstance(denseInstance0);
      discretize0.setOutputFormat();
      discretize0.convertInstance(binarySparseInstance1);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("L&V$uMMQls(#si}l4", arrayList0, 2710);
      Attribute attribute0 = new Attribute("Dw;jfd");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      arrayList0.add(attribute0);
      Instances instances1 = new Instances(instances0, 2);
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      discretize0.setInputFormat(instances0);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(3);
      // Undeclared exception!
      try { 
        discretize0.input(binarySparseInstance0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Instance has no dataset assigned!!
         //
         verifyException("weka.core.RelationalLocator", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute((String) null);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 2710);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Attribute attribute1 = new Attribute((String) null, linkedList0);
      instances0.numDistinctValues(attribute0);
      discretize0.setUseEqualFrequency(true);
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      // Undeclared exception!
      try { 
        discretize0.findNumBins(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HpukI");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("6|@@A IOYs:e`", arrayList0, 2710);
      Attribute attribute0 = new Attribute(".arff");
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 4;
      discretize0.m_DesiredWeightOfInstancesPerInterval = (double) 3;
      doubleArray0[0] = (double) 0;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0.0, doubleArray0);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance((SparseInstance) binarySparseInstance0);
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HpukI");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("6|@@A IOYs:e`", arrayList0, 2710);
      Attribute attribute0 = new Attribute(".arff");
      attribute0.indexOfValue("HpukI");
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 4;
      doubleArray0[1] = (double) 0;
      doubleArray0[0] = (-1144.72938352);
      doubleArray0[3] = (-1144.72938352);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1144.72938352), doubleArray0);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(0);
      arrayList0.add(attribute0);
      Instances instances1 = new Instances(instances0, 0);
      instances0.retainAll(arrayList0);
      discretize0.setInputFormat(instances1);
      discretize0.batchFinished();
      discretize0.calculateCutPoints();
      discretize0.input(binarySparseInstance1);
      discretize0.calculateCutPointsByEqualFrequencyBinning(0);
      discretize0.getOptions();
      boolean boolean0 = discretize0.input(binarySparseInstance0);
      assertFalse(discretize0.isNewBatch());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("$e", arrayList0, 2723);
      Attribute attribute0 = new Attribute("Cl%eU;'|", instances0, 2723);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2654);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance((SparseInstance) binarySparseInstance0);
      Attribute attribute1 = new Attribute("^.<T;I:kD_9CK.z-I|7", (List<String>) null);
      arrayList0.add(attribute1);
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      arrayList1.add(attribute1);
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      discretize0.getCapabilities();
      discretize0.batchFinished();
      // Undeclared exception!
      try { 
        discretize0.convertInstance(binarySparseInstance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.StringLocator", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.524428793624801
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("|;:!njE0r", arrayList0, 3855);
      instances0.toString();
      SystemInUtil.addInputLine(".bsi");
      Attribute attribute0 = new Attribute("|;:!njE0r", 3855);
      attribute0.indexOfValue("@relation");
      discretize0.m_NumBins = 3855;
      arrayList0.add(attribute0);
      instances0.iterator();
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      SystemInUtil.addInputLine("@end");
      Integer integer0 = new Integer(2);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 2;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2, intArray0, 2);
      binarySparseInstance0.toString(2, 0);
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      arrayList1.containsAll(instances0);
      arrayList1.add(attribute0);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      discretize0.setInputFormat(instances0);
      discretize0.setOutputFormat();
      discretize0.getCapabilities();
      discretize0.batchFinished();
      discretize0.convertInstance(binarySparseInstance0);
      discretize0.batchFinished();
      discretize0.convertInstance(binarySparseInstance0);
      // Undeclared exception!
      try { 
        discretize0.findNumBins(31);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 31
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("L&V$uMMQls(#si}l4", arrayList0, 2723);
      Attribute attribute0 = new Attribute("L&V$uMMQls(#si}l4", instances0, 2723);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance((SparseInstance) binarySparseInstance0);
      arrayList0.add(attribute0);
      discretize0.m_MakeBinary = true;
      arrayList0.add(attribute0);
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // weka.filters.unsupervised.attribute.Discretize: Class attribute not set!
         //
         verifyException("weka.core.Capabilities", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("L&Vu'als(#s}+4", arrayList0, 3318);
      Attribute attribute0 = new Attribute("@relation");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "@relation");
      discretize0.m_IgnoreClass = true;
      discretize0.m_NumBins = 3318;
      attribute0.copy(".bsi");
      Locale.getISOLanguages();
      discretize0.getBinRangesString((-2337));
      discretize0.getOptions();
      // Undeclared exception!
      try { 
        discretize0.findNumBins(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("L&V$uMMQls(#si}l4", arrayList0, 3221);
      Attribute attribute0 = new Attribute("@relation");
      discretize0.m_NumBins = 1;
      attribute0.addRelation(instances0);
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setInvertSelection(true);
      discretize0.getOptions();
      String string0 = "Turns on output of debugging information.";
      AllFilter allFilter0 = new AllFilter();
      // Undeclared exception!
      try { 
        allFilter0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9356005054539458
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("L&V$uMMQls(#si}l4", arrayList0, 2723);
      Attribute attribute0 = new Attribute("@relation");
      discretize0.m_NumBins = 2723;
      arrayList0.add(attribute0);
      discretize0.m_FindNumBins = true;
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      Integer integer0 = new Integer(1);
      discretize0.setInputFormat(instances0);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("L&V$uMMQls(#si}l4", arrayList0, 2723);
      Attribute attribute0 = new Attribute("@relation");
      discretize0.m_NumBins = 30;
      arrayList0.add(attribute0);
      discretize0.m_FindNumBins = true;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList1.add((Integer) 1);
      boolean boolean0 = discretize0.m_MakeBinary;
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      discretize0.getCapabilities();
      // Undeclared exception!
      try { 
        instances0.firstInstance();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.294006659924228
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Discretize discretize0 = new Discretize("KWh>E?p?@H+B3lCN");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      discretize0.getCapabilities(instances0);
      discretize0.setOutputFormat();
      double[][] doubleArray0 = new double[3][0];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 3529;
      doubleArray1[1] = (double) 3529;
      doubleArray1[2] = (double) 3529;
      doubleArray1[3] = (double) 3529;
      doubleArray1[4] = (double) 3529;
      discretize0.m_UseBinNumbers = true;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) 3529;
      doubleArray0[1] = doubleArray1;
      discretize0.m_CutPoints = doubleArray0;
      discretize0.m_NumBins = 3529;
      discretize0.getOptions();
      discretize0.getBinRangesString(1);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("|;:!njE0r", arrayList0, 3931);
      SystemInUtil.addInputLine(".bsi");
      Attribute attribute0 = new Attribute("|;:!njE0r", 3931);
      discretize0.m_NumBins = 3931;
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      Locale.getISOLanguages();
      discretize0.getBinRangesString(3);
      discretize0.mayRemoveInstanceAfterFirstBatchDone();
      Random.setNextRandom(3285);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("L&u'als#s}+4", arrayList0, 0);
      Attribute attribute0 = new Attribute("@data");
      arrayList0.iterator();
      discretize0.mayRemoveInstanceAfterFirstBatchDone();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Attribute attribute1 = new Attribute("@end", arrayList1, 4);
      arrayList0.add(attribute1);
      arrayList0.add(attribute1);
      Discretize discretize1 = new Discretize("2");
      Attribute.typeToString(attribute0);
      discretize1.setInputFormat(instances0);
      discretize1.calculateCutPoints();
      DenseInstance denseInstance0 = null;
      try {
        denseInstance0 = new DenseInstance((-2420));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.DenseInstance", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("L&V$uMMQls(#si}l4", arrayList0, 2723);
      Attribute attribute0 = new Attribute("@relation");
      discretize0.m_NumBins = 2723;
      arrayList0.add(attribute0);
      discretize0.m_FindNumBins = true;
      Integer integer0 = new Integer(1);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      MockRandom mockRandom0 = new MockRandom();
      instances0.resampleWithWeights((java.util.Random) mockRandom0);
      Instances instances1 = new Instances(instances0, 74);
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      instances0.retainAll(arrayList0);
      discretize0.setUseEqualFrequency(true);
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bin number optimization in conjunction with equal-frequency binning not implemented.
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Range range0 = new Range();
      discretize0.m_DiscretizeCols = range0;
      Instances instances0 = new Instances("L&Vu'als(#s}+4", arrayList0, 3318);
      Attribute attribute0 = new Attribute("@relation");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Attribute attribute1 = new Attribute("L&Vu'als(#s}+4", linkedList0, 12);
      arrayList0.remove((Object) attribute1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte)100;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Integer integer0 = new Integer(3318);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((byte)70);
      instances0.add((Instance) binarySparseInstance0);
      attribute1.addStringValue("");
      arrayList0.add(attribute1);
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      discretize0.setInputFormat(instances0);
      Discretize discretize1 = new Discretize();
      discretize1.getCapabilities();
      discretize0.batchFinished();
      discretize0.convertInstance(binarySparseInstance0);
      discretize1.setInputFormat(instances0);
      discretize0.batchFinished();
      discretize0.setOutputFormat();
      Random.setNextRandom(1);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("L&V$uMMQls(#si}l4");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("L&V$uMMQls(#si}l4", arrayList0, 2710);
      Instances instances1 = new Instances("L&V$uMMQls(#si}l4", arrayList0, 2710);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      instances1.setClass(attribute0);
      Integer integer0 = new Integer(2710);
      Predicate.isEqual((Object) integer0);
      instances1.numDistinctValues(attribute0);
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      instances1.retainAll(linkedList1);
      discretize0.setInputFormat(instances1);
      discretize0.calculateCutPoints();
      discretize0.calculateCutPoints();
      // Undeclared exception!
      try { 
        discretize0.convertInstance((Instance) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.0348713328512753
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      discretize0.setBins(3775);
      arrayList0.sort((Comparator<? super Attribute>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"CM");
      Instances instances0 = new Instances("dY2.5PXko'*N7", arrayList0, 3407);
      Attribute attribute0 = new Attribute("@relation");
      arrayList0.add(attribute0);
      boolean boolean0 = discretize0.m_UseBinNumbers;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
      arrayList0.add(attribute0);
      Instances instances1 = new Instances(instances0, 0);
      instances1.deleteAttributeType((-668));
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      instances1.iterator();
      attribute0.setWeight(3407);
      discretize0.setInputFormat(instances1);
      discretize0.m_MakeBinary = true;
      Random.setNextRandom(1);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: '@relation' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("L&V$uMMQls(#si}l4");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("L&V$uMMQls(#si}l4", arrayList0, 2710);
      Instances instances1 = new Instances("L&V$uMMQls(#si}l4", arrayList0, 2710);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      instances1.setClass(attribute0);
      Integer integer0 = new Integer(2710);
      Predicate.isEqual((Object) integer0);
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1);
      Attribute attribute1 = new Attribute((String) null, list0);
      instances1.numDistinctValues(attribute0);
      Instances instances2 = new Instances(instances0, 0);
      instances1.deleteStringAttributes();
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      instances1.retainAll(linkedList2);
      discretize0.setInputFormat(instances1);
      discretize0.calculateCutPoints();
      discretize0.setOutputFormat();
      // Undeclared exception!
      try { 
        discretize0.findNumBins(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }
}
