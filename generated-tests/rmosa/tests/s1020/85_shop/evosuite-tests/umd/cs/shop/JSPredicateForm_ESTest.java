/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 14:45:24 GMT 2018
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(9kv~U}$w<uz7*ig");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5359610497090694
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.removeElement("(TLII\"XUJ?=C?qxiG");
      StringReader stringReader0 = new StringReader("(TLII\"XUJ?=C?qxiG");
      stringReader0.mark(3589);
      jSPredicateForm0.print();
      jSPredicateForm0.listIterator();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      assertEquals("[]", jSPredicateForm0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ooV tokenize: is SPACEl");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      int int0 = (-1078417050);
      streamTokenizer0.wordChars((-1078417050), 32);
      streamTokenizer0.pushBack();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringReader stringReader0 = new StringReader("7.0");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = jSPredicateForm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.46341355882643
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(tNr#YbuBSlJU;N)");
      char[] charArray0 = new char[4];
      charArray0[0] = 'S';
      stringReader0.skip(0L);
      charArray0[1] = 'S';
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm0.toStr();
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5359610497090694
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.insertElementAt((Object) null, 0);
      jSPredicateForm0.removeElement("(TLII\"XUJ?=C?qxiG");
      StringReader stringReader0 = new StringReader("(TLII\"XUJ?=C?qxiG");
      stringReader0.mark(3589);
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6546695645285008
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(tNr#YbuBSlJU;N)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
      jSPredicateForm0.removeElement(streamTokenizer0);
      StringReader stringReader1 = new StringReader("(rAII\"XUJ>=C?qxiG");
      stringReader1.ready();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      SystemInUtil.addInputLine((String) null);
      jSPredicateForm0.print();
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ooT tokenize: is SPACEl");
      SystemInUtil.addInputLine("ooT tokenize: is SPACEl");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      stringReader0.mark(32);
      streamTokenizer0.eolIsSignificant(false);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSTerm0.equals(jSPredicateForm0);
      stringReader0.ready();
      streamTokenizer0.parseNumbers();
      jSTerm0.print();
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      StringBuffer stringBuffer0 = jSTerm0.toStr();
      assertEquals("ooT ", stringBuffer0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5359610497090694
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.toStr();
      StringReader stringReader0 = new StringReader("(TLS\"%X8IJ4=~?qXiG");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.nextToken();
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ooT tokenize: is SPACEl");
      SystemInUtil.addInputLine("ooT tokenize: is SPACEl");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      stringReader0.mark(32);
      streamTokenizer0.eolIsSignificant(false);
      stringReader0.ready();
      streamTokenizer0.parseNumbers();
      jSTerm0.print();
      boolean boolean0 = jSTerm0.equals((JSPredicateForm) jSTerm0);
      assertTrue(boolean0);
      
      boolean boolean1 = jSTerm0.equals((JSPredicateForm) null);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("thl tokenize: is SPACE!");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution1 = jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ooV tokenize: is SPACEl");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.wordChars(32, 32);
      stringReader0.ready();
      streamTokenizer0.parseNumbers();
      jSTerm0.toStr();
      SystemInUtil.addInputLine("ooV tokenize: is SPACEl");
      boolean boolean0 = jSTerm0.equals((JSPredicateForm) jSTerm0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm0.print();
      jSTerm0.print();
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      System.setCurrentTimeMillis(32);
      jSTerm0.print();
      boolean boolean1 = jSTerm1.equals((JSPredicateForm) jSTerm0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0114042647073516
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7? c-1lCc)%!DaE^q");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm0.setSize(62);
      jSTerm0.add((Object) streamTokenizer0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      streamTokenizer0.whitespaceChars(62, 62);
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ooV tokenize: is SPACEl");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      int int0 = (-1078417050);
      streamTokenizer0.wordChars((-1078417050), 32);
      streamTokenizer0.pushBack();
      stringReader0.ready();
      streamTokenizer0.parseNumbers();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.add((Object) jSTerm1);
      jSTerm0.print();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.setSize(317);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution0.spliterator();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm0, jSSubstitution1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ooV tokenize: is SPACEl");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.wordChars(32, 32);
      stringReader0.ready();
      streamTokenizer0.parseNumbers();
      jSTerm0.toStr();
      SystemInUtil.addInputLine("ooV tokenize: is SPACEl");
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm1);
      jSTerm0.print();
      jSTerm0.print();
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      System.setCurrentTimeMillis(32);
      jSTerm0.print();
      assertFalse(jSTerm0.isFunction());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9743147528693494
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7? c-1lCc)%!DaE^q");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm1);
      streamTokenizer0.ttype = (-2028306831);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm0.print();
      jSTerm0.toStr();
      jSTerm0.print();
      assertEquals(10, jSTerm0.capacity());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ooV tokenize: is SPACEl");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.wordChars(32, 32);
      stringReader0.ready();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.add((Object) jSTerm1);
      streamTokenizer0.parseNumbers();
      jSTerm0.toStr();
      streamTokenizer0.pushBack();
      SystemInUtil.addInputLine("ooV tokenize: is SPACEl");
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      JSTerm jSTerm2 = null;
      try {
        jSTerm2 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.24493002679463532
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(tNr#YbuBSlJU;N)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
      SystemInUtil.addInputLine("");
      jSPredicateForm0.removeElement(streamTokenizer0);
      StringReader stringReader1 = new StringReader("(rAIm\"XUJ>=C?qxiG");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      streamTokenizer2.slashSlashComments(false);
      streamTokenizer2.resetSyntax();
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer2);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0751393240053733
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("thl tokenize: is SPACE!");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.clone();
      JSTerm jSTerm1 = (JSTerm)jSTerm0.clone();
      jSTerm0.add((Object) jSTerm1);
      JSTerm jSTerm2 = (JSTerm)jSTerm0.lastElement();
      jSTerm1.add((Object) jSTerm2);
      jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm0 = jSTerm1.clonePF();
      JSPredicateForm jSPredicateForm1 = jSTerm2.clonePF();
      jSTerm0.print();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = jSPredicateForm1.matches((JSPredicateForm) jSTerm0, jSSubstitution1);
      assertFalse(jSSubstitution2.fail());
      assertNotSame(jSPredicateForm1, jSPredicateForm0);
      assertEquals("[thl, [thl]]", jSPredicateForm1.toString());
      
      JSPredicateForm jSPredicateForm2 = jSTerm0.standarizerPredicateForm();
      assertEquals(2, jSPredicateForm2.size());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6128694524619495
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(sNr#YuBSlJU;N)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.ordinaryChar((-1841631631));
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm(streamTokenizer1);
      jSPredicateForm0.toStr();
      StringReader stringReader1 = new StringReader("(!LS\"%X8IJ4=~?qXiG");
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer2);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6128694524619495
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(sNr#YuBSlJU;N)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.ordinaryChar((-1841631631));
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm(streamTokenizer1);
      jSPredicateForm0.toStr();
      StringReader stringReader1 = new StringReader("(!LS\"%X8IJ4=~?qXiG");
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      streamTokenizer2.resetSyntax();
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer2);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("thl tokenize: is SPACE!");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = (JSTerm)jSTerm0.clone();
      jSTerm0.add((Object) jSTerm1);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer0);
      jSTerm1.add((Object) jSTerm2);
      JSPredicateForm jSPredicateForm0 = jSTerm1.standarizerPredicateForm();
      jSTerm0.print();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = jSPredicateForm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      assertTrue(jSSubstitution1.fail());
      assertEquals(2, jSPredicateForm0.size());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4437572842601484
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(tNr#YbuBSlJU;N)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
      SystemInUtil.addInputLine("");
      jSPredicateForm0.removeElement(streamTokenizer0);
      StringReader stringReader1 = new StringReader("(rAImNuXUJvCqx G");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer2);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("()!LS\"%X8IJ4=~?qXiG");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      SystemInUtil.addInputLine("term");
      jSTerm0.addElement("not");
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1 >= 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(sNr#YuBSlJU;N)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm(streamTokenizer1);
      StringReader stringReader1 = new StringReader("(!L)\"%X8IJ4v~?qXiG");
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      jSPredicateForm0.JSPredicateFormInit(streamTokenizer2);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(NNr#uSJXU; 6rN");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }
}
