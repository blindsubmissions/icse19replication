/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 14:28:37 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5725982024717419
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?+ dxT2x+~3");
      XPathLexer xPathLexer1 = new XPathLexer("<?+ dxT2x+~3");
      Token token0 = xPathLexer1.notEquals();
      assertEquals("<?", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(5, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      Token token2 = xPathLexer0.relationalOperator();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6782041247436594
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.doubleColon();
      xPathLexer1.dollar();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("!>IN U{LW`#gS");
      xPathLexer2.nextToken();
      xPathLexer0.mod();
      xPathLexer1.div();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6123108960348549
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?+ dxT2x+~3");
      XPathLexer xPathLexer1 = new XPathLexer("<?+ dxT2x+~3");
      xPathLexer0.colon();
      xPathLexer1.rightBracket();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6123108960348549
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?+ dxT2x+~3");
      XPathLexer xPathLexer1 = new XPathLexer("<?+ dxT2x+~3");
      Token token0 = xPathLexer1.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("?+ dxT2x+~3", token1.getTokenText());
      
      Token token2 = xPathLexer0.relationalOperator();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
      assertNotNull(token2);
      
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5725982024717419
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?+ dxT2x+~3");
      XPathLexer xPathLexer1 = new XPathLexer("<?+ dxT2x+~3");
      Token token0 = xPathLexer1.minus();
      assertEquals("<", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("?+ dxT2x+~3", token1.getTokenText());
      
      Token token2 = xPathLexer0.relationalOperator();
      assertEquals(7, token2.getTokenType());
      assertNotNull(token2);
      assertEquals("<", token2.getTokenText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6001882813317665
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("!>IN U{LW`#gS");
      xPathLexer2.setXPath("");
      xPathLexer2.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.520034471866936
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m`<Hu 'lN$i");
      Token token0 = xPathLexer0.comma();
      assertEquals("m", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("`<Hu 'lN$i", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("<", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5936160370311571
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.&+q/'L5]V8AGc");
      XPathLexer xPathLexer1 = new XPathLexer("H.&+q/'L5]V8AGc");
      Token token0 = xPathLexer0.comma();
      assertEquals("H", token0.getTokenText());
      
      Token token1 = xPathLexer1.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("&", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6883974656342468
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<EoS");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("EoS", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5562572767880457
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.G&+q/'L5]V8AGc");
      XPathLexer xPathLexer1 = new XPathLexer("H.G&+q/'L5]V8AGc");
      Token token0 = xPathLexer0.comma();
      assertEquals("H", token0.getTokenText());
      
      xPathLexer1.operatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("G", token2.getTokenText());
      
      Token token3 = xPathLexer1.slashes();
      assertEquals("H", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6123108960348549
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?+ dxT2x+~3");
      XPathLexer xPathLexer1 = new XPathLexer("<?+ dxT2x+~3");
      xPathLexer1.rightParen();
      xPathLexer1.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("!>IN U{LW`#gS");
      xPathLexer2.at();
      xPathLexer2.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.dollar();
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("!>IN U{LW`#gS");
      Token token1 = xPathLexer2.comma();
      assertEquals("!", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer2.nextToken();
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5460269778469428
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("deQuz9v4l![");
      XPathLexer xPathLexer1 = new XPathLexer(":<EoS");
      xPathLexer1.equals();
      xPathLexer1.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6685894323668364
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(1, token0.getTokenType());
      assertEquals("(", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".3p");
      XPathLexer xPathLexer1 = new XPathLexer(".3p");
      XPathLexer xPathLexer2 = new XPathLexer("!:eg/9gN$4'~I(b&W");
      xPathLexer2.mod();
      XPathLexer xPathLexer3 = new XPathLexer("!:eg/9gN$4'~I(b&W");
      Token token0 = xPathLexer3.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(".", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer3.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.7060122404920299
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.pipe();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6944230652122783
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1z>6,");
      xPathLexer0.nextToken();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.572598202471742
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?+ dxT2x+~3");
      XPathLexer xPathLexer1 = new XPathLexer("<?+ dxT2x+~3");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(7, token0.getTokenType());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6514905330698992
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?+ dxT2x+~3");
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("<?+ dxT2x+~3");
      xPathLexer0.identifier();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.7429579122917852
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.whitespace();
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?yEvIab8zambD2");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("?yEvIab8zambD2", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("?", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("yEvIab8zambD2", token2.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.89187793072354
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1z>6,");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".1", token0.getTokenText());
      
      xPathLexer0.setXPath("5dl-c/%i>");
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("dl-c/%i>", token3.getTokenText());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.7384961899624691
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.G&+q/'L5]V8AGc");
      XPathLexer xPathLexer1 = new XPathLexer("H.G&+q/'L5]V8AGc");
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      xPathLexer1.setPreviousToken(token0);
      assertEquals("H", token0.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("G", token2.getTokenText());
      
      Token token3 = xPathLexer1.slashes();
      assertEquals("H", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.div();
      Token token4 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals(".G", token4.getTokenText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.7951352514753476
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1z>6,");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BGpA o'$I3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("BGpA", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9055802027064599
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"1v][Cc.=}V|% 1");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.803100745182839
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?+ dxT2x+~3");
      XPathLexer xPathLexer1 = new XPathLexer("<?+ dxT2x+~3");
      xPathLexer1.consume();
      Token token0 = xPathLexer1.notEquals();
      assertEquals("?+", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("dxT2x", token1.getTokenText());
      
      Token token2 = xPathLexer0.relationalOperator();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.110987997010893
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pG):V8WN-W-K?{i&");
      xPathLexer0.at();
      xPathLexer0.not();
      xPathLexer0.dots();
      xPathLexer0.at();
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kw!,tZfeoW.}8q&");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("kw", token0.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1940313230798942
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.G&+q/'L5]V8AGc");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("G", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("&+q/'L5]V8AGc", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.9208583103573379
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals(") ", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.7429579122917852
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.7951352514753476
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".3p");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("74kLhH+,P4H0Y5veJ'");
      XPathLexer xPathLexer1 = new XPathLexer("74kLhH+,P4H0Y5veJ'");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("74", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1225316124416735
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ag9:1v\tq-f+IM&g");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("a", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("9", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";7ks=Sh]i[cJO(WhAU");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1144597831210474
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.G&+q/'L5]V8AGc");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.025705948934909
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"St9g|DbJNN%FX_Wo5.|");
      Token token0 = new Token(100, "\"St9g|DbJNN%FX_Wo5.|", 1, (-832));
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.284793320475624
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1z>6,");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".1", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.setXPath("5dl-c/%i>");
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("dl", token2.getTokenText());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("-", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0143372050706814
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pG):V8WN-W-K?{i&");
      Token token0 = xPathLexer0.at();
      assertEquals("p", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("G", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals(")", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("V", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      assertEquals("8", token5.getTokenText());
      
      xPathLexer0.mod();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("WN-W-K?{i&", token6.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.3567353376516866
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1z>6,");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".1", token0.getTokenText());
      
      xPathLexer0.setXPath("5dl-c/%i>");
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("dl", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(6, token3.getTokenType());
      assertEquals("-", token3.getTokenText());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("c", token5.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.9364438419928476
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ag9:1v\tq-f+IM&g");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("ag", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("9", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("1", token2.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("v\tq-f+IM&g", token3.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1940313230798942
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.G&+q/'L5]V8AGc");
      xPathLexer0.identifier();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(5, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0601469823570697
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.G&+q/'L5]V8AGc");
      xPathLexer0.dots();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("JC#&CB_2X");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.9544002363611557
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("or");
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0769040496700026
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Token token0 = new Token((-1150), ".K&|Ik", 8, (-1150));
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0132494710228934
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ag9:1v\tq-f+IM&g");
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      Token token0 = xPathLexer0.literal();
      assertNotNull(token0);
      assertEquals(27, token0.getTokenType());
      assertEquals("9:1v\tq-f+IM&", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y%F9");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.2076495523417814
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("deQuz:9v4l![");
      Token token0 = xPathLexer0.slashes();
      assertEquals("d", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("e", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("deQuz:9v4l![");
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("d", token2.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("deQuz:9v4l![");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(":", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer1.and();
      Token token4 = xPathLexer1.nextToken();
      assertEquals("eQuz", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#8[wZ*`.^`z2");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("]+u{B\"vbyc%I|qDrd");
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.7736215122198191
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.G&+q/'L5]V8AGc");
      XPathLexer xPathLexer1 = new XPathLexer("H.G&+q/'L5]V8AGc");
      Token token0 = xPathLexer0.comma();
      assertEquals("H", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("G", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("&", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals("H", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&x%OpT[2<d0b.'bXK");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("&x%OpT[2<d0b.'bXK", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("x%OpT[2<d0b.'bXK", token2.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.6944230652122783
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8V");
      xPathLexer0.div();
      xPathLexer0.setXPath(".8V");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".20_QhE.");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".20", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("_QhE.", token1.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@t");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.8476521847776651
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("rq3jpa\u0001k<^/");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("rq3jpa\u0001k", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.3489965172357785
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyh$z^{");
      xPathLexer0.at();
      xPathLexer0.identifier();
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.minus();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.057613179401238
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ag9:1v\tq-f+IM&g");
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T]6=dn^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("T", token0.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.9149127898540275
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"1v][Cc.=}V|% 1");
      xPathLexer0.minus();
      xPathLexer0.number();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer(".20_QhE.");
      xPathLexer1.notEquals();
      xPathLexer1.nextToken();
      xPathLexer1.leftBracket();
      xPathLexer0.mod();
      xPathLexer1.div();
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.2075133904466895
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G,CA|O'");
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.1997161117032897
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("!>IN U{LW`#gS");
      xPathLexer2.pipe();
      xPathLexer0.notEquals();
      xPathLexer2.nextToken();
      xPathLexer2.identifierOrOperatorName();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ft5");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Ft5", token0.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.9369212314345163
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mv'1[2h");
      xPathLexer0.comma();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Mlf+?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Mlf", token0.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.9460509995340152
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"1v][Cc.=}V|% 1");
      Token token0 = xPathLexer0.minus();
      assertEquals("\"", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("v", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(".20_QhE.");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(31, token3.getTokenType());
      assertEquals(".20", token3.getTokenText());
      
      Token token4 = xPathLexer1.leftBracket();
      assertEquals("_", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer1.div();
      xPathLexer1.and();
      xPathLexer1.or();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(4, token5.getTokenType());
      assertEquals("]", token5.getTokenText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.2951132347176262
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyh$z^{");
      xPathLexer0.at();
      xPathLexer0.identifier();
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.8905001340190424
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("deQuz:9v4l![");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("e", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("deQuz:9v4l![");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Quz", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("deQuz:9v4l![");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      xPathLexer1.and();
      xPathLexer1.nextToken();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",.0c}I<932bV(Qw]s-");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.3698262598359816
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("!>IN U{LW`#gS");
      xPathLexer2.pipe();
      xPathLexer0.notEquals();
      xPathLexer2.consume(5);
      xPathLexer2.nextToken();
      xPathLexer2.identifierOrOperatorName();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ag9:1v\tq-f+IM&g");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.236969114443606
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pG):V8WN-W-K?{i&");
      Token token0 = xPathLexer0.at();
      assertEquals("p", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.and();
      xPathLexer0.and();
      Token token4 = xPathLexer0.slashes();
      assertEquals("{", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("i", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n:{K!7ZHI(svtu");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("n", token0.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.2200641422520229
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.G&+q/'L5]V8AGc");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b3Ze,/86 R9]~:{ZqO");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.2640868909303595
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<EoS");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("E", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("S", token4.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.5323407625503742
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?+ dxT2x+~3");
      XPathLexer xPathLexer1 = new XPathLexer("<?+ dxT2x+~3");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(7, token0.getTokenType());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("?+ dxT2x+~3", token2.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2PSN09HxMZ");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j{/Y#{fKQ}^qvl");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("j", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|}0C<|lNNK");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("An;}P");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("An", token0.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">=Bt_3F");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(10, token0.getTokenType());
      assertEquals(">=", token0.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%P%ABzMh");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("%P%ABzMh", token0.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.8279498916841109
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8V");
      xPathLexer0.div();
      xPathLexer0.setXPath(".8V");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".8", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("V", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("tP3I?)9R\"x2qLgmP");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("tP3I", token0.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = "45\\uY7`";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      Token token0 = xPathLexer0.nextToken();
      assertEquals("45", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5dl-c/%i>");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.7951352514753476
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".3p");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.9634407835011024
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("deQuz:9v4l![");
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("deQuz:9v4l![");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("deQuz:9v4l![");
      xPathLexer0.nextToken();
      xPathLexer1.and();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O0v*AFcm");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.7938518367468184
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ag9:1v\tq-f+IM&g");
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.7794361083442046
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("(", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      assertNotNull(token1);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.3440349285958548
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("!>IN U{LW`#gS");
      xPathLexer2.pipe();
      xPathLexer2.consume();
      xPathLexer0.notEquals();
      xPathLexer2.nextToken();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.or();
      Token token0 = xPathLexer2.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.3221884626964053
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyh$z^{");
      xPathLexer0.at();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6{,gvU0pk`8-kEq");
      XPathLexer xPathLexer1 = new XPathLexer("6{,gvU0pk`8-kEq");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6L.+3");
      xPathLexer0.div();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q.D+R>`7b,P#=D:");
      Token token0 = new Token(1024, (String) null, 1024, 2);
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("D+R>`7b,P#=D:", token2.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.6944230652122783
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".3p");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.205179166790329
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!CW");
      xPathLexer0.or();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("!CW");
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.8083257488581992
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.G&+q/'L5]V8AGc");
      XPathLexer xPathLexer1 = new XPathLexer("H.G&+q/'L5]V8AGc");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("H.G", token0.getTokenText());
      
      xPathLexer0.comma();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("+", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      xPathLexer1.operatorName();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("q", token2.getTokenText());
      
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("H", token3.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.481353395641352
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")H1+K9`prmp;BWZ'C");
      xPathLexer0.minus();
      xPathLexer0.plus();
      xPathLexer0.mod();
      xPathLexer0.star();
      xPathLexer0.consume();
      xPathLexer0.getPreviousToken();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.consume();
      xPathLexer0.setXPath(")H1+K9`prmp;BWZ'C");
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0224103852247368
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.G&+q/'L5]V8AGc");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LTL9Gda-5(z");
      XPathLexer xPathLexer1 = new XPathLexer("LTL9Gda-5(z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("LTL9Gda-5", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.151297503279171
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.consume();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.447079633983654
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")H1+K9`prmp;BWZ'C");
      xPathLexer0.minus();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.getPreviousToken();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.minus();
      assertEquals("`", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(";", token5.getTokenText());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals("BW", token6.getTokenText());
      assertEquals(19, token6.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token7 = xPathLexer0.number();
      assertEquals("", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("Z'C", token8.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w~^\"tNvJW4Z(_");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("w~^\"tNvJW4Z(_");
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.2603955569419671
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1z>6,");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".1", token0.getTokenText());
      
      xPathLexer0.setXPath("5dl-c/%i>");
      Token token1 = xPathLexer0.comma();
      assertEquals("5", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("d", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("l-c/%i>", token4.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.G&+q/'L5]V8AGc");
      Token token0 = new Token(8, "H.G&+q/'L5]V8AGc", (-1), (-1));
      XPathLexer xPathLexer1 = new XPathLexer("H.G&+q/'L5]V8AGc");
      xPathLexer1.setPreviousToken(token0);
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("H.G", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Rcq");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Rcq", token0.getTokenText());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sE");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f.3p");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(5, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(20, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.9096390915138661
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ag9:1v\tq-f+IM&g");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S]XmXp");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.0968290712819553
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"1v][Cc.=}V|% 1");
      xPathLexer0.or();
      Token token0 = xPathLexer0.minus();
      assertEquals("\"", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.number();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("v", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(".20_QhE.");
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("20", token3.getTokenText());
      
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("_", token4.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer1.div();
      xPathLexer1.and();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token5);
      assertEquals("", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.240143938432169
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyh$z^{");
      Token token0 = xPathLexer0.at();
      assertEquals("d", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("y", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("h", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(26, token3.getTokenType());
      assertEquals("$", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("z", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token5);
      assertEquals("^", token5.getTokenText());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.G&+q/'L5]V8AGc");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(".G", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("&", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(12, token3.getTokenType());
      assertEquals("q/", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token4);
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.480829364381059
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("or");
      Token token0 = xPathLexer0.operatorName();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      xPathLexer0.consume();
      xPathLexer0.setXPath("[ (29) (or)");
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      token0.toString();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (29) (or)");
      xPathLexer1.whitespace();
      xPathLexer1.whitespace();
      xPathLexer1.leftBracket();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.315528501343382
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"1v][Cc.=}V|% 1");
      xPathLexer0.minus();
      xPathLexer0.number();
      xPathLexer0.not();
      xPathLexer0.dots();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.notEquals();
      xPathLexer0.at();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5''afcs[z]8P=:=ov/J");
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("5''afcs[z]8P=:=ov/J");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h<={A");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(8, token1.getTokenType());
      assertEquals("<=", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("{A", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("{A", token3.getTokenText());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!=W");
      xPathLexer0.or();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("!=W");
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",.0c}I<932bV(Qw]s-");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(32, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals(".0", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("an|>%MjXjH>^B_=-");
      xPathLexer0.and();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.401197381662154
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9.V Iz7/14E$%!");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.notEquals();
      xPathLexer0.not();
      token0.toString();
      xPathLexer0.equals();
      xPathLexer0.mod();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.doubleColon();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.consume();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.setXPath("vgqOJAOEe");
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }
}
