/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 10:29:50 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-608));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1920), "7'*U%X1y+-]A,", "The wildcard must not be null", "The wildcard must not be null", "7'*U%X1y+-]A,");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 39, "RuntimeInvisibleAnnotations", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1184));
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byte byte0 = (byte)0;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1048), "2n]v*.t}QS']2D", "2n]v*.t}QS']2D", "", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0360334832009355
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4842);
      ClassWriter classWriter1 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, 4842, "uli(D\")TY*VA39A'T", "uli(D\")TY*VA39A'T", "", "");
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      FieldWriter fieldWriter1 = classWriter1.lastField;
      fieldWriter1.visitAnnotation("i ONuz^qO^ZN6PpI:", false);
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter1.getSize();
      assertEquals(42, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      classWriter0.newClassItem("");
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 19, "", "", "rD\"`cp<K/S?EF>W", "rD\"`cp<K/S?EF>W");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-608));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1920), "?+Njm5kgB8w5Z z\"q", "The wildcard must not be null", "The wildcard must not be null", "?+Njm5kgB8w5Z z\"q");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 59, "The wildcard must not be null", "o", "RuntimeVisibleParameterAnnotations", "The wildcard must not be null");
      fieldWriter1.visitAnnotation("?+Njm5kgB8w5Z z\"q", true);
      fieldWriter1.getSize();
      ByteVector byteVector0 = new ByteVector(1778);
      fieldWriter1.put(byteVector0);
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter.DelegateFileFilter", "", ";", "");
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation(";", true);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.DelegateFileFilter");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-103);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-13);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      attribute0.value = byteArray0;
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putLong(1158L);
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-307));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3525), "ih", "ih", "ih", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 1, "Deprecated", (String) null, "ih", classWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6128694524619496
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-307));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3525), "ih", "ih", "ih", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, ")nWXdDmL[KiUlw^N{X", "9>O(s8VC^/6c", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(14, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "xE@$pv", "Label offset position has not been resolved yet", (String) null, "xE@$pv");
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6128694524619496
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-307));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "rD\"`cp<K/S?EF>W";
      stringArray0[1] = "rD\"`cp<K/S?EF>W";
      stringArray0[2] = "rD\"`cp<K/S?EF>W";
      stringArray0[3] = "<NFU;JR-C6m2A%-o";
      stringArray0[4] = "rD\"`cp<K/S?EF>W";
      stringArray0[5] = "rD\"`cp<K/S?EF>W";
      stringArray0[6] = "rD\"`cp<K/S?EF>W";
      stringArray0[7] = "rD\"`cp<K/S?EF>W";
      stringArray0[8] = "m w3uf";
      classWriter0.visit((-307), (-1755), "rD\"`cp<K/S?EF>W", "rD\"`cp<K/S?EF>W", "rD\"`cp<K/S?EF>W", stringArray0);
      classWriter0.newClassItem("rD\"`cp<K/S?EF>W");
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3525), "ih", "ih", "ih", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }
}
