/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 10:28:18 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.7513862775354921
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cT>7-pnH");
      XPathLexer xPathLexer1 = new XPathLexer(":A'[VPh");
      Token token0 = xPathLexer0.star();
      token0.toString();
      xPathLexer0.whitespace();
      xPathLexer1.nextToken();
      xPathLexer1.setXPath("C'ZEaD=Yym8,I;)");
      xPathLexer1.dots();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7832988652718272
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token0 = xPathLexer1.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(1, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6863148014672493
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\u0006!>Se-8TerDm <");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.at();
      assertEquals("!", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Se-8TerDm", token2.getTokenText());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6763797097695825
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#K.-<Pmqi0#*E");
      Token token0 = xPathLexer0.comma();
      xPathLexer0.rightBracket();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      token0.toString();
      xPathLexer1.whitespace();
      xPathLexer0.nextToken();
      xPathLexer1.setXPath("");
      xPathLexer0.dots();
      Token token1 = xPathLexer1.and();
      assertNull(token1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pw ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Pw", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6763797097695825
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#K.-<Pmqi0#*E");
      Token token0 = xPathLexer0.comma();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      token0.toString();
      xPathLexer1.whitespace();
      xPathLexer0.nextToken();
      xPathLexer1.setXPath("");
      xPathLexer0.dots();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6901484657011141
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F>9ga]B3Cm_h");
      xPathLexer0.dollar();
      xPathLexer0.consume(1);
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8185051314565771
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.slashes();
      assertEquals("[", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(" ", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(1, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer0.or();
      Token token4 = xPathLexer1.whitespace();
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.712308402680699
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#K.-<Pmqi0#*E");
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("K", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      
      token0.toString();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (32) (#)", string0);
      
      Token token4 = xPathLexer1.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(6, token5.getTokenType());
      assertEquals("-", token5.getTokenText());
      
      xPathLexer1.setXPath("");
      Token token6 = xPathLexer0.dots();
      assertEquals("<", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.88262001840707
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer1.whitespace();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6863148014672492
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\u0006!>Se-8TerDm <");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("\u0006", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Se-8TerDm", token2.getTokenText());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.712308402680699
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#K.-<Pmqi0#*E");
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("K", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (32) (#)", string0);
      
      xPathLexer1.whitespace();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.identifier();
      assertEquals("-", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer1.setXPath("");
      Token token4 = xPathLexer0.dots();
      assertEquals("<", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1391874538097038
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cvF[vjL");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.and();
      Token token1 = xPathLexer0.comma();
      xPathLexer0.or();
      token1.toString();
      token1.toString();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("F", token2.getTokenText());
      
      token1.toString();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("[v", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      token1.toString();
      xPathLexer0.div();
      String string0 = token1.toString();
      assertEquals("[ (32) (v)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("j", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("L", token5.getTokenText());
      
      xPathLexer0.getXPath();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.712308402680699
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#K.-<Pmqi0#*E");
      Token token0 = xPathLexer0.comma();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      token0.toString();
      xPathLexer1.whitespace();
      xPathLexer0.nextToken();
      xPathLexer1.dollar();
      xPathLexer1.setXPath("");
      xPathLexer0.dots();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0814826038705732
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer0.whitespace();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.relationalOperator();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",SPcVu=6v-PjC/--Ss");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(4, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("SPcVu=6v-PjC/--Ss", token1.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8466584464538927
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.Token", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0803805381634626
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#.8<@mqi0#*rE");
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".8", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(16, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.minus();
      assertEquals("m", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.not();
      assertEquals("q", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("i", token4.getTokenText());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.number();
      assertEquals("0", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9691870272169335
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":96L7XJ39p");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1304451753122835
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#.<@mqi0#*rE");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.372584618438104
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6|}O3&^O5z<`*e<F");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("|", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("}", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.and();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("O3", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1766096627463394
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#.<@mqi0#*rE");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.minus();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j!>e-8TerDm <");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.261531670751751
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cT>7-pnH");
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer(".4so7B/{BK07");
      xPathLexer0.at();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume(782);
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9548711307083797
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pT>7-p%H");
      xPathLexer0.setXPath("Sz1!mO");
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.2615334669154135
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pT>7-p%H");
      xPathLexer0.number();
      xPathLexer0.setXPath(") (");
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6910092173333133
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$$`A-3wke");
      xPathLexer0.equals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume(95);
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.number();
      xPathLexer0.dollar();
      xPathLexer0.whitespace();
      xPathLexer0.colon();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.slashes();
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.2366315275918514
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("te^ovSZVv}8^;lOJ");
      Token token0 = xPathLexer0.not();
      assertEquals("t", token0.getTokenText());
      
      xPathLexer0.minus();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("^ovSZVv}8^;lOJ", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("^", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.notEquals();
      assertEquals("ov", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals("Z", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("Vv}8^;lOJ", token6.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("DD+g4WqW-dm9q(7;wp\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("DD", token0.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_+1B[We+<ML~e$2");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("_", token0.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1958044640847523
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#.8<@mqi0#*rE");
      Token token0 = xPathLexer0.literal();
      assertEquals(".8<@mqi0", token0.getTokenText());
      assertEquals(27, token0.getTokenType());
      
      xPathLexer0.minus();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("rE", token1.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.or();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.8839804795645748
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#.8<@mqi0#*rE");
      xPathLexer0.whitespace();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.minus();
      xPathLexer0.not();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.9046927992495671
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WHl:/1&");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("W", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("H", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.pipe();
      assertEquals(":", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(11, token3.getTokenType());
      assertEquals("/", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("1", token4.getTokenText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.8707898593838574
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":96L7XJ39p");
      xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/M%O&D5R`5,");
      xPathLexer0.setXPath("\"t;=ir1){JL<$");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.werken.saxpath.XPathLexer", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1468106741086659
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\u0006!>Se-8TerDm <");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("\u0006!>Se-8TerDm <", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("Se-8TerDm", token3.getTokenText());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.8518403811430223
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#.8<@mqi0#*rE");
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".8", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.or();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals("q", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("i", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      assertEquals("0", token5.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.8839804795645748
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#.8<@mqi0#*rE");
      Token token0 = xPathLexer0.minus();
      assertEquals("#", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".8", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.or();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("m", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("q", token4.getTokenText());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("UcMz0-6\"%Yj7_d3f{4I");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.setXPath("2K~!pv-]J8ZC|prb%");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.setXPath("}h?n/VPGau");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("}", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("h?n/VPGau", token2.getTokenText());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1585634818072061
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/M%O&D5R`5,");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("/", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("M", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("%", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("O", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("&D5R`5,", token4.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F>9ga]B3Cm_h");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*U,p1d");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(20, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("U", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5147214506032403
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("m.", token3.getTokenText());
      assertEquals(14, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("werken.saxpath.XPathLexer", token4.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.setXPath("#f#R]{.BYU2'-hN7mw[");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("#", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (-1) (#f#R]{.BYU2'-hN7mw[)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("f#R]{.BYU2'-hN7mw[", token2.getTokenText());
      
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token3 = xPathLexer2.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Y", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.209442555447144
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("te^ovSZVv}8^;lOJ");
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.479184479325838
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p7nmqeWaigY#vn1+7");
      Token token0 = xPathLexer0.at();
      assertEquals("p", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNotNull(token1);
      
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      token1.toString();
      xPathLexer0.mod();
      String string0 = token1.toString();
      assertEquals("[ (27) (nmqeWaigY#vn1+)", string0);
      
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.consume(39);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("p7nmqeWaigY#vn1+7");
      Token token3 = xPathLexer0.dots();
      assertEquals("p", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.number();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.2030672955148678
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\u0006!>Se-8TerDm <");
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("pT>7-p%H");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.7844482981733467
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5#6E(+\"9BzIj'# V!]");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("#6E(+\"9BzIj'# V!]", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("#6E(+\"9BzIj'# V!]", token2.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.7909946878532033
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_+1B[We+<ML~e$2");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("_", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("+", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.9117364017931511
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F>9ga]B3Cm_h");
      xPathLexer0.minus();
      xPathLexer0.plus();
      xPathLexer0.consume(1);
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.039485023674232
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#.8<@mqi0#*rE");
      xPathLexer0.minus();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals(".8", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.or();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("q", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("i", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertEquals("0", token5.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.3121673307381645
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cT>7-pnH");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("T", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.consume(1);
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("-", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]`q~1`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(4, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=./;m/pVV_D|");
      Token token0 = xPathLexer0.nextToken();
      String string0 = token0.toString();
      assertEquals("[ (21) (=)", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",yT^dzS");
      XPathLexer xPathLexer1 = new XPathLexer(",yT^dzS");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(",", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.835025236584
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WHl:/1&");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("W", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Hl", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(18, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WHl:/1&");
      Token token0 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("WHl:/1&", token1.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@u8yGV6,oj0~TD=\"");
      Token token0 = xPathLexer0.slashes();
      assertEquals("@", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("u8yGV6", token1.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5345370633236244
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#.8<@mdi0#ZrE");
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.not();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5851311271647632
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v'-dj=PX5BCcEe%q");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.star();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      xPathLexer0.whitespace();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1468106741086659
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\u0006!>Se-8TerDm <");
      xPathLexer0.setXPath("Sz1!mO");
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N3~52eb7");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3hq~;]tx;$3u,3Mfe");
      xPathLexer0.number();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.1865168731012918
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/M%O&D5R`5,");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("/", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("%", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("O", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("&D5R`5,", token5.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.3587412041988496
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pT>7-p%H");
      xPathLexer0.setXPath("Sz1!mO");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("S", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("z1", token1.getTokenText());
      
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?\"Ewz6;nh");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("?\"Ewz6;nh", token0.getTokenText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yD+g4WqW-dm9q(7;wp\"");
      xPathLexer0.setXPath("yD+g4WqW-dm9q(7;wp\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("yD", token0.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0642710425125048
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":96L7XJ39p");
      xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.setXPath("M");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0039685783883536
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F>9ga]B3Cm_h");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("F>", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.comma();
      assertEquals("9", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("g", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("a", token3.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#25C@?+");
      xPathLexer0.number();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("25", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("C@?+", token2.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pB0c%");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("B0c", token0.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.4891121216640573
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/M%O&D5R`5,");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(18, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("%", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("O", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0952601320349438
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":96L7XJ39p");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.star();
      xPathLexer0.dollar();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.3662524298656533
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cT>7-pnH");
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer(".4so7B/{BK07");
      xPathLexer1.setXPath("Qa-d");
      xPathLexer0.at();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0975530721021156
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/M%O&D5R`5,");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(11, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("M", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("%O&D5R`5,", token2.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.1056129230388592
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@u8yGV6,oj0~TD=\"");
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.947203264431026
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#.8<@mqi0#*rE");
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".8", token0.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.or();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("m", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("q", token3.getTokenText());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("i0#*rE", token4.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("x", token0.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("[ ", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k~!|'Z(kaXR");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("k", token0.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.179333673828121
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\u0006!>Se-8TerDm <");
      xPathLexer0.consume();
      xPathLexer0.at();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-5));
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/M%O&D5R`5,");
      XPathLexer xPathLexer1 = new XPathLexer("~Ac}u2CJWso{F)'(");
      xPathLexer1.nextToken();
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.nextToken();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.2307734433994666
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\u0006!>Se-8TerDm <");
      xPathLexer0.consume();
      xPathLexer0.identifier();
      xPathLexer0.whitespace();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d-~r");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("d-", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.2032046635525728
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WHl:/1&");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(6, token0.getTokenType());
      assertEquals("W", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("H", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(11, token3.getTokenType());
      assertEquals("/", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("1", token4.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.3185887808557326
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cT>7-pnH");
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer(".4so7B/{BK07");
      xPathLexer1.minus();
      xPathLexer0.at();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer(".![c)_gq");
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer1.consume();
      Token token0 = xPathLexer1.doubleColon();
      xPathLexer2.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      assertEquals("![", token0.getTokenText());
      
      Token token1 = xPathLexer2.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer2.leftParen();
      assertEquals("[", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer2.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals(" ", token3.getTokenText());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.1865168731012918
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/M%O&D5R`5,");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("M", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("%O&D5R`5,", token3.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.9796931985960265
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ONZJG<[(g'<f=Af{Pa&");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`0+1eSqfz<j9J)+q6`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`0+1eSqfz<j9J)+q6`", token0.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.1750812281104344
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\u0006!>Se-8TerDm <");
      xPathLexer0.setXPath(") (");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertNotNull(token2);
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.007863802057206
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ONZJG<[(g'<f=Af{Pa&");
      xPathLexer0.consume(1);
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("Z", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("JG", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(7, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token4 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.2635559422504725
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("te^ovSZVv}8^;lOJ");
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("te^ovSZVv}8^;lOJ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("te", token0.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.214839270293306
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5#6E(+\"9BzIj'# V!]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("#", token1.getTokenText());
      
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("E(+\"9BzIj'# V!]", token2.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("' ]_<4{jx>A");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R6!H!TOH)eBsa<]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("R6", token0.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<=");
      Token token0 = xPathLexer0.relationalOperator();
      assertNotNull(token0);
      assertEquals(8, token0.getTokenType());
      assertEquals("<=", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#.5<@mqi0#*rE");
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RU+Z>='");
      Token token0 = xPathLexer0.not();
      assertEquals("R", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.minus();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("+", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("Z", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(10, token3.getTokenType());
      assertEquals(">=", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token4 = xPathLexer1.notEquals();
      assertEquals("[ ", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token5.getTokenText());
      
      xPathLexer1.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.or();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
  }
}
