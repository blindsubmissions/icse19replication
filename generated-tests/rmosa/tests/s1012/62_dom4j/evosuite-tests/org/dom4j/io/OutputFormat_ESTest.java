/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 10:24:32 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("U3Q*Ap{6)})T[J");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Y";
      stringArray0[1] = "^6_7gw~'{!6_=gHM";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals(0, int0);
      
      boolean boolean0 = outputFormat0.isTrimText();
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isXHTML());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("U3Q*Ap{6)})T[J", outputFormat0.getIndent());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-yx+t[B";
      stringArray0[1] = "-yx+t[B";
      stringArray0[3] = "-yx+t[B";
      stringArray0[4] = "-yx+t[B";
      stringArray0[5] = "-yx+t[B";
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-yxhtml");
      String[] stringArray0 = new String[6];
      outputFormat0.setSuppressDeclaration(false);
      stringArray0[0] = "-yxhtml";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("-xhtml");
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterNTags((-3194));
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.isOmitEncoding();
      outputFormat0.setNewlines(false);
      outputFormat0.setTrimText(false);
      outputFormat0.isTrimText();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setIndent(false);
      outputFormat0.setLineSeparator("-omitEncoding");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setEncoding("9");
      outputFormat0.isPadText();
      outputFormat0.getIndent();
      outputFormat0.setSuppressDeclaration(true);
      assertEquals("-omitEncoding", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("%'X", true);
      assertTrue(outputFormat0.isNewlines());
      
      outputFormat0.setNewlines(false);
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertFalse(outputFormat0.isNewlines());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.setNewLineAfterNTags(0);
      boolean boolean0 = outputFormat0.isXHTML();
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("", outputFormat0.getIndent());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("%S", true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.getIndent();
      outputFormat0.setLineSeparator("-xhtmljn]u3#9}2(-%g");
      outputFormat0.setLineSeparator("+mqBE2[ni8A>;yN=");
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals("+mqBE2[ni8A>;yN=", outputFormat0.getLineSeparator());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("xUl");
      boolean boolean0 = outputFormat0.isNewlines();
      assertEquals("xUl", outputFormat0.getIndent());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setLineSeparator("");
      boolean boolean0 = true;
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isTrimText();
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      outputFormat0.setIndentSize(294);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-4429));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4429
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = false;
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      boolean boolean1 = true;
      outputFormat0.setIndent(true);
      outputFormat1.setXHTML(false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "Y";
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.getLineSeparator();
      // Undeclared exception!
      try { 
        outputFormat2.setAttributeQuoteCharacter('3');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (3)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-xhtmluef:");
      outputFormat0.getEncoding();
      outputFormat0.setTrimText(false);
      assertEquals("-xhtmluef:", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("uef:");
      outputFormat0.setXHTML(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "uef:";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setExpandEmptyElements(false);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("", outputFormat0.getIndent());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml");
      OutputFormat outputFormat1 = new OutputFormat("");
      int int0 = 0;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "NnDi\n(,0+";
      stringArray0[1] = "";
      outputFormat0.setEncoding("-xhtmlInvalid attribute quote character (");
      stringArray0[2] = ")";
      stringArray0[3] = "NnDi\n(,0+";
      stringArray0[4] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.509137344082687
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-yxhtml");
      outputFormat0.setIndentSize(1);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-yxhtml";
      stringArray0[1] = "-yxhtml";
      stringArray0[3] = "-yxhtml";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      assertEquals(" ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("cbU iR`,aD", false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('&');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (&)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.16822349161464
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("N3Q*Ap{6))T[J");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "N3Q*Ap{6))T[J";
      stringArray0[1] = "N3Q*Ap{6))T[J";
      stringArray0[2] = "N3Q*Ap{6))T[J";
      stringArray0[3] = "N3Q*Ap{6))T[J";
      stringArray0[4] = "N3Q*Ap{6))T[J";
      stringArray0[5] = "N3Q*Ap{6))T[J";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.isTrimText();
      outputFormat0.setTrimText(false);
      outputFormat0.setSuppressDeclaration(false);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("");
      outputFormat0.getAttributeQuoteCharacter();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat1.setIndentSize(0);
      assertTrue(outputFormat1.isSuppressDeclaration());
      
      outputFormat3.parseOptions(stringArray0, 0);
      outputFormat2.setAttributeQuoteCharacter('\"');
      assertEquals("  ", outputFormat2.getIndent());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isOmitEncoding();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(',');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (,)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4354735656251962
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setTrimText(true);
      int int0 = 1;
      outputFormat0.setIndentSize(1);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtml";
      stringArray0[1] = "vigoiP<b";
      stringArray0[2] = "-xhtml";
      outputFormat0.setIndent(false);
      stringArray0[3] = "-xhtml";
      stringArray0[4] = "-expandEmptyUTF-8";
      stringArray0[5] = "-expandEmpty";
      stringArray0[6] = "-expandEmpty";
      stringArray0[7] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      char char0 = 'h';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('h');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (h)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("uef:");
      assertEquals("uef:", outputFormat0.getIndent());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "uef:";
      stringArray0[1] = "-yxhtml";
      stringArray0[3] = "-yxhtml";
      stringArray0[4] = "Invalid attribute quote character (";
      stringArray0[5] = "uef:";
      outputFormat0.setIndent(false);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      assertFalse(outputFormat0.isPadText());
      
      String[] stringArray0 = new String[0];
      outputFormat0.setPadText(true);
      outputFormat0.parseOptions(stringArray0, 1949);
      outputFormat0.parseOptions(stringArray0, 3398);
      outputFormat0.parseOptions(stringArray0, 4216);
      assertTrue(outputFormat0.isPadText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.509137344082687
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-yxhtml");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-yxhtml";
      stringArray0[1] = "-yxhtml";
      stringArray0[3] = "-yxhtml";
      outputFormat0.setLineSeparator("V");
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("V", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setEncoding((String) null);
      outputFormat0.setIndentSize(1644);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "uef:";
      stringArray0[1] = "-yxhtml";
      stringArray0[2] = "XEz^`trl7V7x_xt";
      stringArray0[3] = "-yxhtml";
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indent", false, "-indent");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-indent";
      stringArray0[1] = "-indent";
      stringArray0[2] = "-indent";
      stringArray0[3] = "-indent";
      stringArray0[4] = "-indent";
      stringArray0[5] = "-indent";
      stringArray0[6] = "-indent";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.isSuppressDeclaration();
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xplndE0pty");
      outputFormat0.setXHTML(false);
      outputFormat0.setXHTML(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-xhtml~:6kbc3Zc";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-xplndE0pty";
      outputFormat0.setIndent((String) null);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1969045228));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1969045228
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("N3Q*Ap{6))T", true, "N3Q*Ap{6))T");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "N3Q*Ap{6))T";
      stringArray0[1] = "-expandEmptyY";
      stringArray0[2] = "N3Q*Ap{6))T";
      stringArray0[3] = "N3Q*Ap{6))T";
      stringArray0[4] = "N3Q*Ap{6))T";
      stringArray0[5] = "N3Q*Ap{6))T";
      outputFormat1.parseOptions(stringArray0, 1);
      char char0 = '.';
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('.');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (.)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-omitEncoding", false, "-omitEncoding");
      outputFormat0.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-xhtmlY";
      stringArray0[2] = "-xhtmlY";
      stringArray0[3] = "iu3.8ZrFa8oo}AN";
      stringArray0[4] = "";
      stringArray0[5] = "U^AfgPBZS";
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.parseOptions(stringArray0, 39);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "-indent";
      OutputFormat outputFormat0 = new OutputFormat("-trimText", true, "-trimText");
      outputFormat0.setPadText(false);
      outputFormat0.setPadText(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-indent";
      stringArray0[3] = "-encoding";
      stringArray0[4] = "-trimText";
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.setNewLineAfterNTags((-1));
      outputFormat0.setNewlines(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-312));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -312
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setXHTML(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "cbU i";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "~^6kbc3Zc";
      stringArray0[3] = "-lineSeparator";
      stringArray0[4] = "~^6kbc3Zc";
      stringArray0[5] = "-lineSeparator";
      stringArray0[6] = "~^6kbc3Zc";
      stringArray0[7] = "cbU i";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndentSize(0);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.parseOptions(stringArray0, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-453));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -453
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("0jg^AR6x");
      String[] stringArray0 = new String[7];
      outputFormat0.setLineSeparator("Y");
      stringArray0[0] = "-suppressDeclaration";
      stringArray0[1] = "Y";
      stringArray0[2] = "0jg^AR6x";
      stringArray0[3] = "N3Q*Ap{6))T[J";
      stringArray0[4] = "N3Q*Ap{6))T[J";
      stringArray0[5] = "N3Q*Ap{6))T[J";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("Y", outputFormat0.getLineSeparator());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimText", true, "-trimText");
      assertFalse(outputFormat0.isTrimText());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "-trimText";
      stringArray0[4] = "-trimText";
      stringArray0[5] = "-trimText";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isTrimText());
      assertEquals(6, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indentSize");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmptyUTF-8";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "84W`DY:1p";
      stringArray0[3] = "";
      stringArray0[4] = "-indentSize";
      stringArray0[5] = "";
      stringArray0[6] = "-expandEmptyUTF-8";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"84W`DY:1p\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("cbU iP`,aD", false);
      outputFormat0.setAttributeQuoteCharacter('\'');
      String[] stringArray0 = new String[2];
      stringArray0[0] = "cbU iP`,aD";
      outputFormat0.setNewLineAfterDeclaration(false);
      stringArray0[1] = "cbU iP`,aD";
      outputFormat0.parseOptions(stringArray0, 1784);
      outputFormat0.parseOptions(stringArray0, 1784);
      assertEquals('\'', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setIndentSize(1);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-newlines";
      outputFormat0.parseOptions(stringArray0, 278);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('k');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (k)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = new OutputFormat("=", false, "tPDsKR<f>T^");
      outputFormat0.setNewLineAfterNTags(1);
      OutputFormat outputFormat2 = new OutputFormat("-expandEmpty", true, "-padText");
      outputFormat2.setIndentSize(2522);
      outputFormat2.setIndentSize(2616);
      outputFormat2.setXHTML(true);
      outputFormat1.setIndentSize((-1));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-expandEmpty";
      outputFormat2.setIndent(true);
      stringArray0[1] = "-padText";
      stringArray0[2] = "=";
      stringArray0[3] = "uef:";
      stringArray0[4] = "-xhtml";
      stringArray0[5] = "uef:";
      stringArray0[6] = "-padText";
      stringArray0[7] = "-xhtml";
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "-xhtml";
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray1, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
