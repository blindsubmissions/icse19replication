/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 10:54:55 GMT 2018
 */

package weka.filters.unsupervised.attribute;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.DenseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.ProtectedProperties;
import weka.core.Range;
import weka.core.SparseInstance;
import weka.filters.AllFilter;
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.Discretize;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Discretize_ESTest extends Discretize_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Discretize discretize0 = new Discretize("0a!^o/~g");
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.attributeIndicesTipText();
      int int0 = (-2);
      BinarySparseInstance binarySparseInstance0 = null;
      try {
        binarySparseInstance0 = new BinarySparseInstance((-2));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.BinarySparseInstance", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getBinRangesString(757);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getFindNumBins());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1234766763356507
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_NumBins = 2;
      double[][] doubleArray0 = new double[4][3];
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Class is not set!";
      stringArray0[1] = "-V";
      stringArray0[2] = ";rh";
      stringArray0[3] = "b.Ie4'#j(O_JD/";
      stringArray0[4] = "-)Z%'fjFmE'F>x";
      stringArray0[5] = "weka.core.Capabilities";
      stringArray0[6] = "B{ymX[";
      stringArray0[7] = ":~8$";
      stringArray0[8] = "RGMs9|4";
      discretize0.setOptions(stringArray0);
      discretize0.m_CutPoints = doubleArray0;
      discretize0.getInvertSelection();
      Locale.getISOCountries();
      int int0 = 2;
      // Undeclared exception!
      try { 
        discretize0.output();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      AllFilter allFilter0 = new AllFilter();
      discretize0.invertSelectionTipText();
      double[] doubleArray0 = new double[0];
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0.0, doubleArray0);
      Attribute attribute0 = new Attribute("Set attribute selection mode. If false, only selected (numeric) attributes in the range will be discretized; if true, only non-selected attributes will be discretized.", 2);
      // Undeclared exception!
      try { 
        binarySparseInstance0.stringValue(attribute0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute isn't nominal, string or date!
         //
         verifyException("weka.core.AbstractInstance", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.listOptions();
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getFindNumBins());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.globalInfo();
      double[] doubleArray0 = new double[1];
      Attribute attribute0 = null;
      try {
        attribute0 = new Attribute("An instance filter that discretizes a range of numeric attributes in the dataset into nominal attributes. Discretization is by simple binning. Skips the class attribute if set.", "bEk]|Z%9oOZ*`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'b'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getFindNumBins());
      
      discretize0.m_FindNumBins = true;
      discretize0.getOptions();
      assertTrue(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.desiredWeightOfInstancesPerIntervalTipText();
      assertEquals("Sets the desired weight of instances per interval for equal-frequency binning.", string0);
      
      discretize0.setAttributeIndices("Sets the desired weight of instances per interval for equal-frequency binning.");
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.makeBinaryTipText();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPoints();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getCutPoints(225);
      assertFalse(discretize0.getFindNumBins());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.input((Instance) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.binsTipText();
      assertEquals("Number of bins.", string0);
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Range range0 = discretize0.m_DiscretizeCols;
      discretize0.m_DiscretizeCols = range0;
      discretize0.useBinNumbersTipText();
      // Undeclared exception!
      try { 
        discretize0.output();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.useEqualFrequencyTipText();
      try { 
        Filter.makeCopies(discretize0, (-1840));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[2] = "nwJfQ;;e]X";
      stringArray0[4] = "nwJfQ;;e]X";
      stringArray0[2] = "o/2-VR!dUi";
      Discretize.main(stringArray0);
      assertEquals(6, stringArray0.length);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.findNumBinsTipText();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals("Optimize number of equal-width bins using leave-one-out. Doesn't work for equal-frequency binning", string0);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "p;ZXnNyZE=?F";
      stringArray0[1] = "p;ZXnNyZE=?F";
      stringArray0[2] = "Last value of copy (internal format): ";
      stringArray0[3] = "-M";
      stringArray0[4] = "There are newer versions of existing packages at the repository. Refreshing cache...";
      stringArray0[5] = "<O{XeX_<]C1.ogW{";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[] doubleArray0 = new double[6];
      doubleArray0[2] = 0.0;
      int[] intArray0 = new int[5];
      String[] stringArray0 = new String[3];
      stringArray0[0] = "|1U^";
      stringArray0[1] = "-B";
      stringArray0[2] = "JI.dv!Hz%L;v^lIX6";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"JI.dv!Hz%L;v^lIX6\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1988388664663594
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e(EZ)8\u0007+QX&?");
      discretize0.m_NumBins = 2;
      double[][] doubleArray0 = new double[4][3];
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Class is not set!";
      stringArray0[1] = "-V";
      stringArray0[2] = ";rh";
      stringArray0[3] = "b.Ie4'#j(O_JD/";
      stringArray0[4] = "-R";
      stringArray0[5] = "weka.core.Capabilities";
      stringArray0[6] = "B{ymX[";
      stringArray0[7] = "B{ymX[";
      stringArray0[8] = "RGMs9|4";
      discretize0.setOptions(stringArray0);
      discretize0.m_CutPoints = doubleArray0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      discretize0.getInvertSelection();
      Locale.getISOCountries();
      int int0 = 2;
      discretize0.getBinRangesString(2);
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setInvertSelection(true);
      Filter.makeCopies(discretize0, 158);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(747);
      String[] stringArray0 = discretize0.getOptions();
      assertEquals(7, stringArray0.length);
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[6][3];
      discretize0.m_CutPoints = doubleArray0;
      // Undeclared exception!
      try { 
        discretize0.getCutPoints((-3126));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3126
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getInvertSelection();
      discretize0.setIgnoreClass(true);
      discretize0.getOptions();
      // Undeclared exception!
      try { 
        discretize0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.PotentialClassIgnorer", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      boolean boolean0 = true;
      discretize0.setUseBinNumbers(true);
      discretize0.getOptions();
      // Undeclared exception!
      try { 
        discretize0.outputPeek();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getMakeBinary());
      
      discretize0.setMakeBinary(true);
      discretize0.getOptions();
      assertTrue(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_IgnoreClass = true;
      discretize0.setMakeBinary(true);
      Instances instances0 = null;
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't ignore class when changing the number of attributes!
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("\"position\" is date", (String) null, 0);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("real", arrayList0, 0);
      Object object0 = new Object();
      discretize0.m_MakeBinary = true;
      Object[] objectArray0 = new Object[0];
      arrayList0.toArray(objectArray0);
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // weka.filters.unsupervised.attribute.Discretize: Class attribute not set!
         //
         verifyException("weka.core.Capabilities", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.64622455382987
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getRevision();
      discretize0.m_DefaultCols = "8964";
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("kJN", "8964", (-1994091956));
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("l@mW;m&sG/0J5", arrayList0, 952);
      Instances instances1 = new Instances(instances0, 952);
      discretize0.setInputFormat(instances1);
      long long0 = 0L;
      // Undeclared exception!
      try { 
        discretize0.findNumBins(100000);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4831652713181676
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      int int0 = 5;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      Attribute attribute0 = new Attribute("oIg@@Od7]F&", (String) null, 5);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("real", arrayList0, 0);
      instances0.deleteAttributeType(2);
      Object object0 = new Object();
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      System.setCurrentTimeMillis(30122);
      discretize0.setBins(30122);
      discretize0.setOutputFormat();
      int[] intArray0 = new int[2];
      intArray0[0] = 4;
      System.setCurrentTimeMillis(0L);
      discretize0.batchFinished();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning((-173));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -173
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("\"position\" is date", (String) null, 0);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("real", arrayList0, 0);
      discretize0.setInputFormat(instances0);
      double[] doubleArray0 = new double[1];
      SparseInstance sparseInstance0 = new SparseInstance(0, doubleArray0);
      sparseInstance0.value(attribute0);
      // Undeclared exception!
      try { 
        discretize0.input(sparseInstance0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Instance has no dataset assigned!!
         //
         verifyException("weka.core.RelationalLocator", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("\"position\" is date", (String) null, 11);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("real", arrayList0, 0);
      Object object0 = new Object();
      discretize0.setInputFormat(instances0);
      attribute0.formatDate((-692.3559));
      System.setCurrentTimeMillis(4);
      Instances instances1 = new Instances("|Irf%*X@7e:rHkC_m4", arrayList0, 44);
      discretize0.setBins(0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 3;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 2;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 11;
      doubleArray0[6] = (-692.3559);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "date";
      stringArray0[1] = "numeric";
      discretize0.setOptions(stringArray0);
      doubleArray0[7] = (double) 11;
      doubleArray0[8] = (double) 3;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2, doubleArray0);
      binarySparseInstance0.dataset();
      Instances instances2 = null;
      try {
        instances2 = new Instances((Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.596577312402427
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("oIg@@Od7]F&", (String) null, 32);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("real", arrayList0, 0);
      Object object0 = new Object();
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      discretize0.setBins(30204);
      discretize0.batchFinished();
      System.setCurrentTimeMillis(0L);
      SparseInstance sparseInstance0 = new SparseInstance(3);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      System.setCurrentTimeMillis(0L);
      int int0 = 833;
      Instances instances1 = new Instances("date", arrayList0, 833);
      discretize0.setBins(2);
      Instances instances2 = new Instances(instances1);
      discretize0.calculateCutPoints();
      discretize0.calculateCutPoints();
      discretize0.convertInstance(sparseInstance0);
      // Undeclared exception!
      try { 
        discretize0.findNumBins(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_NumBins = 2;
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Properties properties0 = new Properties();
      ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
      Attribute attribute0 = new Attribute("~nz", (List<String>) null, protectedProperties0);
      arrayList0.add(attribute0);
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      ArrayList<Attribute> arrayList2 = new ArrayList<Attribute>(arrayList1);
      Instances instances0 = new Instances("~nz", arrayList0, 2);
      instances0.deleteWithMissing(2);
      discretize0.setInputFormat(instances0);
      Instances instances1 = new Instances(instances0);
      discretize0.calculateCutPoints();
      discretize0.calculateCutPoints();
      Random.setNextRandom(3);
      Random.setNextRandom(1);
      System.setCurrentTimeMillis(0);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.6380670995771967
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute((String) null, 0);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("VZe+<Q; [+R-BW", arrayList0, 0);
      discretize0.setBins(968);
      Instances instances1 = new Instances(instances0);
      Instances instances2 = new Instances(instances1, 0);
      discretize0.setInputFormat(instances0);
      System.setCurrentTimeMillis(968);
      discretize0.batchFinished();
      System.setCurrentTimeMillis((-324L));
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) (-324L);
      doubleArray0[2] = (double) 0L;
      doubleArray0[2] = 1.7976931348623157E308;
      doubleArray0[3] = (double) 3;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      Instances instances3 = new Instances(".arff", arrayList0, 339);
      discretize0.setBins(165);
      Instances instances4 = new Instances(instances2);
      discretize0.calculateCutPoints();
      discretize0.calculateCutPoints();
      discretize0.convertInstance(binarySparseInstance0);
      discretize0.findNumBins(0);
      discretize0.batchFinished();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(968);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 968
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("\"position\" is date", (String) null, 0);
      attribute0.isInRange(0);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.trimToSize();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("VZe+<Q; [+R-BW", arrayList0, 0);
      Instances instances1 = new Instances(instances0);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      discretize0.getInvertSelection();
      discretize0.getBinRangesString(0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(849);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 849
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("\"position\" is date", (String) null, 0);
      attribute0.isInRange(0);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("VZe+<Q; [+R-BW", arrayList0, 0);
      Instances instances1 = new Instances(instances0);
      Instances instances2 = new Instances(instances1, 0);
      discretize0.setInputFormat(instances0);
      System.setCurrentTimeMillis(952);
      discretize0.batchFinished();
      System.setCurrentTimeMillis((-324L));
      SparseInstance sparseInstance0 = new SparseInstance(79);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(sparseInstance0);
      binarySparseInstance0.value(attribute0);
      discretize0.input(binarySparseInstance0);
      discretize0.calculateCutPoints();
      discretize0.input(sparseInstance0);
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("\"position\" is date", (String) null, 0);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      int int0 = 952;
      Instances instances0 = new Instances("VZe+<Q; [+R-BW", arrayList0, 0);
      LinkedList<SparseInstance> linkedList0 = new LinkedList<SparseInstance>();
      instances0.addAll(0, (Collection<? extends Instance>) linkedList0);
      Instances instances1 = new Instances(instances0, 0);
      discretize0.setInputFormat(instances0);
      System.setCurrentTimeMillis(952);
      discretize0.batchFinished();
      discretize0.calculateCutPoints();
      discretize0.calculateCutPoints();
      DenseInstance denseInstance0 = new DenseInstance(1);
      discretize0.convertInstance(denseInstance0);
      // Undeclared exception!
      try { 
        discretize0.findNumBins(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute((String) null, (String) null, (-42));
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("@end", arrayList0, 1);
      Object object0 = new Object();
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      discretize0.setBins(1);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning((-3131));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setOutputFormat();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) arrayList1);
      Attribute attribute0 = new Attribute("]rWIF9>;'n-'L2Z");
      Attribute attribute1 = new Attribute("string", list0);
      arrayList0.add(attribute1);
      Instances instances0 = new Instances("@end", arrayList0, 1);
      Instances instances1 = new Instances(instances0);
      instances1.enumerateInstances();
      arrayList0.add(attribute1);
      Instances instances2 = new Instances(instances0, 1);
      discretize0.setInputFormat(instances1);
      System.setCurrentTimeMillis(0);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: 'string' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.7721393884375287
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("\"position\" is date", (String) null, 0);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("real", arrayList0, 0);
      Object object0 = new Object();
      Object[] objectArray0 = new Object[0];
      arrayList0.toArray(objectArray0);
      discretize0.setInputFormat(instances0);
      discretize0.m_DesiredWeightOfInstancesPerInterval = (double) 2;
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning((-2040));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.6812194104449643
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setUseEqualFrequency(true);
      Attribute attribute0 = new Attribute("\"position\" is date", (String) null, 0);
      attribute0.isInRange(0);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("VZe+<Q; [+R-BW", arrayList0, 0);
      Instances instances1 = new Instances(instances0);
      Instances instances2 = new Instances(instances1, 0);
      discretize0.setInputFormat(instances0);
      System.setCurrentTimeMillis(952);
      discretize0.batchFinished();
      System.setCurrentTimeMillis((-324L));
      SparseInstance sparseInstance0 = new SparseInstance(79);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) (-324L);
      doubleArray0[1] = (double) 0L;
      doubleArray0[2] = 1.7976931348623157E308;
      doubleArray0[3] = (double) 3;
      doubleArray0[4] = (double) 4;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (double) 1;
      doubleArray0[7] = (double) 1;
      doubleArray0[8] = (double) 952;
      SparseInstance sparseInstance1 = new SparseInstance(0.0, doubleArray0);
      sparseInstance1.value(attribute0);
      discretize0.input(sparseInstance1);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning((-1431655763));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1431655763
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      int[] intArray0 = new int[0];
      discretize0.setAttributeIndicesArray(intArray0);
      Attribute attribute0 = new Attribute("\"position\" is date", (String) null, 0);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("numeric", arrayList0, 1509);
      Instances instances1 = new Instances(instances0, 5160);
      instances1.remove((Object) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      Instances instances2 = new Instances(instances0, 1915);
      discretize0.setInputFormat(instances1);
      System.setCurrentTimeMillis(0);
      instances0.removeAll(instances2);
      Instances instances3 = new Instances("Make resulting attributes binary.", arrayList0, 2);
      discretize0.setBins(15000);
      Instances instances4 = new Instances(instances2);
      Instances instances5 = new Instances(instances2);
      discretize0.calculateCutPoints();
      discretize0.calculateCutPoints();
      discretize0.setOutputFormat();
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("B", (List<String>) null, 2);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      arrayList1.add(attribute0);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("u$4IP`E*.U9>m.;LWy", arrayList0, 2928);
      Instances instances1 = new Instances(instances0);
      Instances instances2 = new Instances(instances1, 952);
      instances2.deleteAttributeType((-892));
      discretize0.setInputFormat(instances2);
      System.setCurrentTimeMillis(2);
      discretize0.batchFinished();
      System.setCurrentTimeMillis(4);
      SparseInstance sparseInstance0 = new SparseInstance(1);
      double[] doubleArray0 = new double[0];
      SparseInstance sparseInstance1 = new SparseInstance(952, doubleArray0);
      // Undeclared exception!
      try { 
        discretize0.convertInstance(sparseInstance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.StringLocator", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("\"position\" is date", (String) null, 0);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("VZe+<Q; [+R-BW", arrayList0, 0);
      Instances instances1 = new Instances(instances0);
      arrayList0.add(attribute0);
      AllFilter allFilter0 = new AllFilter();
      Filter.wekaStaticWrapper(allFilter0, "@relation", instances0, instances1);
      Instances instances2 = new Instances(instances1, 0);
      discretize0.setInputFormat(instances0);
      System.setCurrentTimeMillis(1);
      discretize0.m_FindNumBins = true;
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: '\"position\" is date' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_NumBins = 2;
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      discretize0.m_FindNumBins = true;
      Properties properties0 = new Properties();
      ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
      Attribute attribute0 = new Attribute("~nz", (List<String>) null, protectedProperties0);
      arrayList0.add(attribute0);
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>(arrayList0);
      Instances instances0 = new Instances("~nz", arrayList0, 2);
      instances0.deleteWithMissing(2);
      discretize0.setInputFormat(instances0);
      discretize0.setUseEqualFrequency(true);
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      arrayList0.toArray(objectArray0);
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bin number optimization in conjunction with equal-frequency binning not implemented.
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("\"position\" is date", (String) null, 0);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("numeric", arrayList0, 1509);
      instances0.remove((Object) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
      instances0.setClass(attribute0);
      instances0.renameAttribute(attribute0, "real");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      Instances instances1 = new Instances(instances0, 1915);
      discretize0.setInputFormat(instances0);
      System.setCurrentTimeMillis(0);
      instances0.removeAll(instances1);
      Instances instances2 = new Instances("Make resulting attributes binary.", arrayList0, 2);
      discretize0.setBins(15000);
      Instances instances3 = new Instances(instances1);
      discretize0.calculateCutPoints();
      discretize0.calculateCutPoints();
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("\"position\" is date", (String) null, 0);
      attribute0.isInRange(0);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      int int0 = 953;
      Instances instances0 = new Instances("VZe+<Q; [+R-BW", arrayList0, 0);
      Instances instances1 = new Instances(instances0);
      arrayList0.add(attribute0);
      AllFilter allFilter0 = new AllFilter();
      allFilter0.getRevision();
      instances0.setClass(attribute0);
      Filter.wekaStaticWrapper(allFilter0, "\tUse bin numbers rather than ranges for discretized attributes.", instances0, instances1);
      Instances instances2 = new Instances(instances1, 0);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: '\"position\" is date' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.1903530828264888
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
      Attribute attribute0 = new Attribute("oIg@@Od7]F&");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      FileSystemHandling.createFolder(evoSuiteFile0);
      Instances instances0 = new Instances("real", arrayList0, 0);
      arrayList0.add(attribute0);
      Object object0 = new Object();
      arrayList0.add(attribute0);
      discretize0.getAttributeIndices();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Av}C1$P'&v ?~|Bp01K");
      discretize0.setInputFormat(instances0);
      discretize0.setMakeBinary(true);
      attribute0.setWeight(30365);
      discretize0.setBins(30365);
      attribute0.toString();
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: 'oIg@@Od7]F&' 
         //
         verifyException("weka.core.Instances", e);
      }
  }
}
