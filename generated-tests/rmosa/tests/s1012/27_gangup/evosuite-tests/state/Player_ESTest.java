/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 10:29:55 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, long0);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(713);
      Player player1 = new Player();
      player1.prev = (Party) player0;
      player0.setDead((long) (short)4919);
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((short)4919);
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis((-1641L));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(458);
      player0.reset(false);
      player0.isJoinOK(player0, false);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(3, "S", "S", (-1909));
      Player player1 = new Player((-4039), "S", 2042);
      player0.setJoinOK(player1, false);
      assertEquals("0.0.0.0", player1.getIP());
      
      player0.reset(false);
      player0.getIP();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-1909), player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(256);
      System.setCurrentTimeMillis(256);
      Player player1 = new Player(4388);
      player1.setY(0.2F);
      System.setCurrentTimeMillis(4388);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte) (-114);
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)1;
      player0.unpack(byteArray0);
      Player player1 = new Player(0);
      Party party0 = player1.head;
      player0.head = null;
      Player player2 = new Player(0);
      player2.boss = null;
      player0.remove(player2);
      boolean boolean0 = false;
      player0.setConnected(false);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0, 235);
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(50);
      Party party0 = new Party();
      player0.setZ(1.0F);
      player0.getName();
      player0.getX();
      player0.pack();
      player0.gangStrength();
      player0.gangStrength();
      player0.isJoinOK(player0, true);
      player0.isJoinOK(player0, false);
      Player player1 = new Player(1);
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(1392409296320L);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-657));
      player0.setConnected(true);
      player0.setMoney((-183.69266F));
      player0.id = 0;
      player0.setDead((long) (-657), false);
      assertEquals((-657L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(10, "gCK?p", "gCK?p", 10);
      byte[] byteArray0 = player0.pack();
      player0.setMoney(10);
      player0.getMoney();
      player0.setDead(1843L, false);
      player0.setZ(0.0F);
      Player player1 = new Player((-884), "gCK?p", 930);
      player0.unpack(byteArray0);
      player0.setJoinOK(player1, true);
      player1.setDead();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player1.setX(1855.2F);
      player1.next = (Party) player0;
      player0.toString();
      PipedInputStream pipedInputStream0 = new PipedInputStream(930);
      player0.setDead();
      assertEquals(10.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-1), "8/s{St9/[r}a.~_Z-", "AC!B%@}z`#f>-t\"", 0);
      player0.getPictureId();
      Party party0 = player0.boss;
      player0.getY();
      player0.getY();
      player0.toString();
      player0.toString();
      Player player1 = new Player((-1), "8/s{St9/[r}a.~_Z-", "AC!B%@}z`#f>-t\"", (short)4919);
      System.setCurrentTimeMillis((-180));
      System.setCurrentTimeMillis(1591L);
      System.setCurrentTimeMillis((-62L));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(475);
      Player player1 = new Player(475);
      player0.reset(true);
      player1.setJoinOK(player0, false);
      System.setCurrentTimeMillis(475);
      System.setCurrentTimeMillis(475);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      player0.getX();
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-103);
      byteArray0[1] = (byte) (-103);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-103);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-103);
      player0.unpack(byteArray0);
      int int0 = Packable.ACTION;
      boolean boolean0 = player0.isDead();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(458);
      Player player1 = new Player((short)4919);
      player1.setDead();
      player0.getSubparty();
      player1.setJoinOK(player0, false);
      player1.isDead();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      player0.getMoney();
      player0.remove((Party) null);
      player0.setMoney(2244.0F);
      player0.setConnected(true);
      player0.setZ(0.0F);
      player0.pack();
      player0.getZ();
      player0.setConnected(true);
      assertEquals(2244.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      System.setCurrentTimeMillis(256L);
      System.setCurrentTimeMillis((-1287L));
      Player player0 = new Player((-238), "module.ModuleBrowserDialog$ModuleFilter", (-238));
      Player player1 = new Player((-238));
      player0.setJoinOK(player1, false);
      player0.isBoss();
      System.setCurrentTimeMillis(1392409281320L);
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(790L);
      player0.isJoinOK(player1, true);
      Player player2 = new Player((-1), "6aL+", (String) null, 2147239477, (short)4919);
      player2.isJoinOK(player1, false);
      Player player3 = new Player();
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(1767L);
  }
}
