/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 17:27:12 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5743496825843103
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@108fL9 ");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
      
      xPathLexer0.consume();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7282228699714052
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a<<FF<zx2+");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("<F", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.relationalOperator();
      assertNull(token4);
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("eK:,R");
      Token token0 = xPathLexer0.at();
      assertEquals("e", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      xPathLexer1.number();
      Token token1 = xPathLexer0.not();
      assertEquals("K", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer1.colon();
      assertEquals(")", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5338561348021286
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@108fL9 ");
      Token token0 = xPathLexer0.dollar();
      assertEquals("@", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("108", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("f", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5734647813267297
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<+fXYAjM]mi+ShF");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.slashes();
      assertEquals("+", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6038680000909876
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6038680000909876
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6038680000909876
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.div();
      xPathLexer0.consume();
      xPathLexer0.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5725982024717419
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<+fXYAjM]mi+ShF");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(5, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6038680000909876
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6433473369554495
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.7656519727304018
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<+fXYAjM]mi+ShF");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9019465350414284
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C9\"dOn0WV#gQN:/S2H");
      Token token0 = new Token(100, "C9\"dOn0WV#gQN:/S2H", 100, 100);
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      assertNotSame(token1, token0);
      assertEquals("C9\"dOn0WV#gQN:/S2H", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6038680000909876
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5638474525758262
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      xPathLexer0.rightParen();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.7666472495215155
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.setXPath("j<:;");
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("j<:;");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6518736173857553
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a<<FF<zx2+");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals("<", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("FF", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.relationalOperator();
      assertEquals("<", token4.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6038680000909875
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.consume(87);
      xPathLexer0.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6518736173857553
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a<<FF<zx2+");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("<", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("FF", token3.getTokenText());
      
      Token token4 = xPathLexer0.relationalOperator();
      assertNotNull(token4);
      assertEquals(7, token4.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.7586525313654102
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      xPathLexer0.rightParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.rightParen();
      xPathLexer0.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6038680000909876
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C9\"dOn0WV#gQN:/S2H");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5->`8&*");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("5-", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1109485321202173
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.;v~CCTqZKh_+9B!P");
      Token token0 = xPathLexer0.minus();
      assertEquals("5", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(";v~CCTqZKh_+9B!P", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("v~CCTqZKh_+9B!P", token4.getTokenText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6433473369554495
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("=", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.8883262191908424
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("61orgy}9~8urmu(sou");
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1496874733100724
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m=od3#c_8*.8'LalHR~");
      xPathLexer0.number();
      xPathLexer0.leftParen();
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@I>JZz++)^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(16, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Kj&>+x");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer0.minus();
      assertEquals("K", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("&>+x", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("&>+x", token4.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0703042495398727
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("igR");
      Token token1 = xPathLexer1.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("i", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("gR", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.2210180105028485
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(2, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("igR");
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("i", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("gR", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals("", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(1, token5.getTokenType());
      assertEquals("(", token5.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.8875852640945602
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|]='AnO9");
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("|]='AnO9");
      xPathLexer1.rightParen();
      xPathLexer0.setXPath("|]='AnO9");
      xPathLexer1.doubleColon();
      xPathLexer1.nextToken();
      xPathLexer0.equals();
      xPathLexer1.colon();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.6903002506774656
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a<<FF<zx2+");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.6038680000909876
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("5", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.setXPath("5=dh%SYauA=_e(}B.");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("5", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(21, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9884331461718349
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("61orgy}9~8urmu(sou");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.2436480839509514
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(VR{RGse3cMeS");
      xPathLexer0.equals();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("VR", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.leftParen();
      xPathLexer0.setXPath(")CmVLXTA:q");
      Token token2 = xPathLexer0.not();
      token2.toString();
      String string0 = token1.toString();
      assertEquals("[ (1) ({)", string0);
      
      xPathLexer0.or();
      String string1 = token2.toString();
      assertEquals("[ (23) ())", string1);
      
      Token token3 = xPathLexer0.equals();
      assertEquals("C", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.mod();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("m", token4.getTokenText());
      
      Token token5 = xPathLexer0.not();
      token5.toString();
      xPathLexer0.number();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("LXTA", token6.getTokenText());
      
      Token token7 = xPathLexer0.at();
      assertEquals(":", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      assertEquals("", token8.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0688907874669977
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.setXPath("mhy");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9622154016046065
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.;v~CCTqZKh_+9B!P");
      Token token0 = xPathLexer0.minus();
      assertEquals("5", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("v~CCTqZKh_+9B!P", token4.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.4699135918855752
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xWo!<ze?9/t[3qb\"\r=");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("x", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("ze", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("?", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(11, token6.getTokenType());
      assertEquals("/", token6.getTokenText());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7x[O4;j");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(11, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("x", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.8997399144547691
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("eK:,R");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("e", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("K", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals(",", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("R", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token5 = xPathLexer1.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1871059653004925
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-FSeWb_F");
      xPathLexer0.currentPosition();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.2614791016956286
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("com.werken.saxpath.Token", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.8390701563665349
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a<<FF<zx2+");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("<F", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("F", token3.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.8372388390392784
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("j<:;");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("j", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.setXPath("j<:;");
      Token token1 = xPathLexer0.minus();
      assertEquals("j", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      xPathLexer0.setXPath("4Sd[V|");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("4", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("Sd[V|", token4.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.2753267491562708
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer(",P>hc*6 :gNqFp|5j");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(",", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("P", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.mod();
      Token token4 = xPathLexer3.whitespace();
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m7{vZFv{90#~E");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("m7", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.2340835158469563
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a<<FF<zx2+");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.401313504633164
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_>8on}~>F+K|jJH<, @");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("_", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.equals();
      assertEquals("o", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("n}~>F+K|jJH<, @", token4.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.6400381423895463
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("j<:6");
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.682297074428119
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      xPathLexer0.not();
      xPathLexer0.consume();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`r");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`r", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("`r", token1.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.2541541500547801
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<+fXYAjM]mi+ShF");
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.2075717531305106
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|]uW='AnO9");
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("|]uW='AnO9");
      xPathLexer1.rightParen();
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.colon();
      xPathLexer1.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">}k$e[$d\":]>'{MkJ7;");
      Token token0 = xPathLexer0.minus();
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("}k$e[$d\":]>'{MkJ7;", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("k$e[$d\":]>'{MkJ7;", token4.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5425107699645015
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m=od3#c_8*.8'LalHR~");
      xPathLexer0.number();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("m=", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.dollar();
      assertEquals("d", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.number();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("#c", token2.getTokenText());
      
      Token token3 = xPathLexer0.plus();
      assertEquals("_", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("8", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer0.not();
      assertEquals("'", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer0.equals();
      assertEquals("L", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.number();
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      assertEquals("a", token9.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token10 = xPathLexer0.nextToken();
      assertEquals((-1), token10.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.4452692549760109
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xWo!<ze?9/t[3qb\"\r=");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("x", token0.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("ze", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("?", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.3644156126429952
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_>8on}~>F+K|jJH<, @");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("_", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("_>8on}~>F+K|jJH<, @");
      xPathLexer1.currentPosition();
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("_", token4.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.9019465350414284
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C9\"dOn0WV#gQN:/S2H");
      xPathLexer0.mod();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.7281423711773658
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Kj&>+x");
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      xPathLexer0.plus();
      xPathLexer0.star();
      xPathLexer0.colon();
      xPathLexer0.dollar();
      xPathLexer0.literal();
      xPathLexer0.mod();
      xPathLexer0.pipe();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("|bk3uW=W.4Zr");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.8694853508850768
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.420397286900398
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xWo!<ze?9/t[3qb\"\r=");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("x", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Wo", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.equals();
      assertEquals("<", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w9b|~N");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("w9b", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      XPathLexer xPathLexer1 = new XPathLexer("PM");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pC_b_b;8lkW");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("pC_b_b", token0.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.8665312449943241
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C9\"dOn0WV#gQN:/S2H");
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U%5*iL|on`KO:%y9D");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.7482563391328924
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:+0M&xk");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("A>");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("A", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.9106330743463388
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a<<FF<zx2+");
      xPathLexer0.setXPath("cuZC");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.9938413859101031
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("ya\"d:6,rV\"n;Z|,s");
      xPathLexer0.currentPosition();
      xPathLexer1.nextToken();
      xPathLexer0.leftParen();
      xPathLexer1.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1334173481997036
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.equals();
      assertEquals(")", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("igR");
      Token token1 = xPathLexer1.not();
      assertEquals("i", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("gR", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(1, token4.getTokenType());
      assertEquals("(", token4.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tht4@qcma-Gw");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("tht4", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q57");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Q57", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.3441950076617875
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("61orgy}9~8urmu(sou");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("61", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("rgy}9~8urmu(sou", token2.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.2496088630716033
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m=od3#c_8*.8'LalHR~");
      xPathLexer0.number();
      xPathLexer0.leftParen();
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.8441138774034159
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("igR");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("igR", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$^/A?");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0227600972788962
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(VR{RGse3cMeS");
      Token token0 = xPathLexer0.equals();
      assertEquals("(", token0.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.leftParen();
      xPathLexer0.setXPath(")CmVLXTA:q");
      Token token2 = xPathLexer0.not();
      token2.toString();
      token2.toString();
      String string0 = token1.toString();
      assertEquals("[ (1) ({)", string0);
      
      String string1 = token2.toString();
      assertEquals("[ (23) ())", string1);
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.not();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("VLXTA", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(18, token5.getTokenType());
      assertEquals(":", token5.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      assertEquals("", token6.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("q", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.2210180105028485
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.equals();
      assertEquals(")", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("igR");
      Token token1 = xPathLexer1.not();
      assertEquals("i", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("gR", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals(" ", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("(", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token6);
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5655522103586261
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m=od3#c_8*.8'LalHR~");
      xPathLexer0.number();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.8694853508850768
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.8641924220066879
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.;v~CCTqZKh_+9B!P");
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.consume((-3192));
      xPathLexer0.plus();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.8390701563665349
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a<<FF<zx2+");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("FF", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.relationalOperator();
      assertEquals("<", token4.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.7960798442775533
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("=", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("dh", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tlie:PBT:}a*Bu$d");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Tlie", token0.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0799848992356686
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xWo!<ze?9/t[3qb\"\r=");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("x", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.setXPath("");
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.setXPath(".1I'#oR^Y*#y+w");
      Token token5 = xPathLexer0.nextToken();
      assertEquals(".1", token5.getTokenText());
      assertEquals(31, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("I", token6.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("#oR^Y*#y+w", token8.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.2210619691092395
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("eK:,R");
      xPathLexer0.dots();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer1.whitespace();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.818332105260116
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:+0M&xk");
      xPathLexer0.number();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.3798764835458996
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S.0uor(v,<nJ=c");
      xPathLexer0.star();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.rightParen();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.at();
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sR4cZwd++JWoF7");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("sR4cZwd", token0.getTokenText());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#7+G");
      Token token0 = xPathLexer0.minus();
      assertEquals("#", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("G", token3.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.875078800589709
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a<<FF<zx2+");
      Token token0 = xPathLexer0.minus();
      assertEquals("a", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("FF", token2.getTokenText());
      
      Token token3 = xPathLexer0.relationalOperator();
      assertEquals("<", token3.getTokenText());
      assertEquals(7, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("zx2", token4.getTokenText());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{./BZZA");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{./BZZA", token0.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.2541541500547801
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<+fXYAjM]mi+ShF");
      xPathLexer0.minus();
      xPathLexer0.setXPath("SL+b$qp[?AczIKJgw*3");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.2449925126869745
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_>8on}~>F+K|jJH<, @");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("_", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(">", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      XPathLexer xPathLexer1 = new XPathLexer("_>8on}~>F+K|jJH<, @");
      int int0 = xPathLexer1.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@!DDC_W");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("DDC_W", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.2541541500547801
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<+fXYAjM]mi+ShF");
      xPathLexer0.minus();
      Token token0 = xPathLexer0.star();
      assertEquals("+", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("fXYAjM", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.minus();
      Token token2 = xPathLexer0.minus();
      assertEquals("m", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("i+ShF", token3.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.6903002506774656
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a<<FF<zx2+");
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.7111930958581627
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.;v~CCTqZKh_+9B!P");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.2541541500547801
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<+fXYAjM]mi+ShF");
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.871892156017433
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("j<:;");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("j", token0.getTokenText());
      
      xPathLexer0.setXPath("j<:;");
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("j", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a<<FF<zx2+");
      Token token0 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(16, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("<", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("FJ>");
      Token token0 = xPathLexer0.minus();
      assertEquals("F", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("J", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0224103852247368
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.;v~CCTqZKh_+9B!P");
      Token token0 = xPathLexer0.minus();
      assertEquals("5", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("v~CCTqZKh_+9B!P", token3.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ooy^+ [i");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Ooy", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.6942850472199182
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("j<:;");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("j", token0.getTokenText());
      
      xPathLexer0.setXPath("j<:;");
      Token token1 = xPathLexer0.minus();
      assertEquals("j", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(";", token4.getTokenText());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("KPSMaL3L)");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("KPSMaL3L", token0.getTokenText());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.2808686636091378
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<+fXYAjM]mi+ShF");
      xPathLexer0.minus();
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.4452692549760109
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xWo!<ze?9/t[3qb\"\r=");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("x", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Wo", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("z", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("?9/t[3qb\"\r=", token7.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-FSeWb_F");
      XPathLexer xPathLexer1 = new XPathLexer("IHI!:Hk__JSD)hNUz");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("IHI", token0.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.0799848992356689
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xWo!<ze?9/t[3qb\"\r=");
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("");
      xPathLexer0.equals();
      xPathLexer0.mod();
      xPathLexer0.plus();
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.setXPath(".1I'#oR^Y*#y+w");
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.[vbYCTqZKh_#9B!P");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals("5.", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(3, token2.getTokenType());
      assertEquals("[", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("vbYCTqZKh_", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.1984963904285522
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<+fXYAjM]mi+ShF");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(5, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("fXYAjM", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.2340835158469563
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a<<FF<zx2+");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M|j9T>}y6~![");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" B/n:,x8y7/Xt5");
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer(" B/n:,x8y7/Xt5");
      xPathLexer0.slashes();
      xPathLexer1.consume((-1444));
      // Undeclared exception!
      try { 
        xPathLexer1.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.8330207673652827
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5=dh%SYauA=_e(}B.");
      Token token0 = xPathLexer0.star();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.4452692549760109
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xWo!<ze?9/t[3qb\"\r=");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("x", token0.getTokenText());
      
      xPathLexer0.setXPath("$^UdXTo$qddCC%;");
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("^UdXTo$qddCC%;", token2.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.equals();
      assertEquals("^", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N\"(mAJ]d^fd");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("N", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.6363483033431265
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mnE%");
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("mnE%");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BqwJB->89q'r=}F");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("BqwJB-", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j<:;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("j", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.and();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.2067611784504928
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a<<FF<zx2+");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer0.setXPath("mnE%");
      xPathLexer0.setXPath("mnE%");
      Token token4 = xPathLexer0.minus();
      assertEquals("m", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("nE%", token5.getTokenText());
      assertNotSame(token5, token0);
      
      XPathLexer xPathLexer1 = new XPathLexer(">=fxnh|.egx;7tz");
      Token token6 = xPathLexer1.relationalOperator();
      assertNotNull(token6);
      assertEquals(">=", token6.getTokenText());
      assertEquals(10, token6.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a<<FF<zx2+");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.minus();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S.0uor(v,<nJ=c");
      XPathLexer xPathLexer1 = new XPathLexer(")");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer1.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&!=NLdhGZ' ?");
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      xPathLexer0.mod();
      xPathLexer0.literal();
      xPathLexer0.setXPath("&!=NLdhGZ' ?");
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("ck@qA\"w~ACJcvi}h");
      xPathLexer0.div();
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.and();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":'Y.6>VAg");
      Token token0 = xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("U) (");
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.minus();
      xPathLexer1.star();
      xPathLexer1.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer1.div();
      assertNull(token1);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Kj&>+x");
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      xPathLexer0.plus();
      xPathLexer0.star();
      xPathLexer0.dollar();
      xPathLexer0.literal();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("'Rr6eqc&Go?w'");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xWo!<ze?9/t[3qb\"\r=");
      XPathLexer xPathLexer1 = new XPathLexer("xWo!<ze?9/t[3qb\"\r=");
      Token token0 = xPathLexer1.dots();
      assertEquals("x", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer1.equals();
      assertEquals("W", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("8.3)aU)&),");
      Token token2 = xPathLexer2.not();
      assertEquals("8", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("x", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("o", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals(31, token5.getTokenType());
      assertEquals(".3", token5.getTokenText());
      
      xPathLexer1.or();
      Token token6 = xPathLexer2.whitespace();
      assertEquals((-2), token6.getTokenType());
      assertEquals("", token6.getTokenText());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1.");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.6214811377682452
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S.0uor(v,<nJ=c");
      xPathLexer0.doubleColon();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.getPreviousToken();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("`2diXc.&vZ+Fp'");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }
}
