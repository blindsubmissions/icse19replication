/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 17:22:24 GMT 2018
 */

package org.quickserver.util.xmlreader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.quickserver.util.xmlreader.AdvancedSettings;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AdvancedSettings_ESTest extends AdvancedSettings_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientIdentifier(" WC$1LBAZl,sx]U<;##");
      advancedSettings0.setClientSocketReceiveBufferSize(1581);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.getPerformancePreferencesBandwidth();
      advancedSettings0.setUseDirectByteBuffer(false);
      advancedSettings0.setBacklog(4470);
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.getSocketLinger();
      int int0 = advancedSettings0.getPerformancePreferencesConnectionTime();
      assertEquals(1581, advancedSettings0.getClientSocketReceiveBufferSize());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setPerformancePreferencesLatency(0);
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setQSObjectPoolMaker("");
      advancedSettings0.setCharset("");
      advancedSettings0.setCharset("");
      advancedSettings0.setClientSocketReceiveBufferSize(1791);
      advancedSettings0.setClientSocketTrafficClass("\t<byte-buffer-size>");
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.getUseDirectByteBuffer();
      advancedSettings0.getPerformancePreferencesBandwidth();
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.setByteBufferSize(0);
      int int0 = advancedSettings0.getMaxThreadsForNioWrite();
      assertEquals(1791, advancedSettings0.getClientSocketReceiveBufferSize());
      assertEquals(10, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setClientSocketTrafficClass("\"(f9odxp,(HEOS)~");
      advancedSettings0.setPerformancePreferencesLatency(0);
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.setClientIdentifier(")");
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.setPerformancePreferencesBandwidth(1);
      advancedSettings0.setClientSocketTrafficClass(")");
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.setPerformancePreferencesConnectionTime(0);
      advancedSettings0.getDebugNonBlockingMode();
      assertEquals(")", advancedSettings0.getClientIdentifier());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketSendBufferSize((-1));
      advancedSettings0.setSocketLinger((-95));
      advancedSettings0.setMaxThreadsForNioWrite(1);
      advancedSettings0.getMaxThreadsForNioWrite();
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.getClientSocketTrafficClass();
      int int0 = advancedSettings0.getSocketLinger();
      assertEquals((-95), int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketTrafficClass("");
      int int0 = 0;
      advancedSettings0.setSocketLinger(0);
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("</qsobject-pool-maker>\n");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // </qsobject-pool-maker>
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setPerformancePreferencesLatency(425);
      advancedSettings0.getByteBufferSize();
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.getSocketLinger();
      advancedSettings0.setDebugNonBlockingMode(true);
      assertTrue(advancedSettings0.getDebugNonBlockingMode());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setQSObjectPoolMaker("0RwMVOIh-=fIdF");
      advancedSettings0.setSocketLinger((-1));
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.setQSObjectPoolMaker("");
      advancedSettings0.setSocketLinger((-124));
      advancedSettings0.setQSObjectPoolMaker("");
      advancedSettings0.setClientSocketSendBufferSize(1);
      advancedSettings0.setClientSocketReceiveBufferSize(1407);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.getBacklog();
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.setClientSocketReceiveBufferSize(1);
      advancedSettings0.getClientIdentifier();
      advancedSettings0.getMaxThreadsForNioWrite();
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.setClientSocketReceiveBufferSize(0);
      assertEquals(0, advancedSettings0.getClientSocketReceiveBufferSize());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setPerformancePreferencesBandwidth(65536);
      advancedSettings0.setByteBufferSize(65536);
      advancedSettings0.setPerformancePreferencesLatency(65536);
      advancedSettings0.setUseDirectByteBuffer(true);
      assertEquals(65536, advancedSettings0.getPerformancePreferencesBandwidth());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setPerformancePreferencesLatency(0);
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.setClientSocketTrafficClass("");
      advancedSettings0.setUseDirectByteBuffer(false);
      advancedSettings0.getCharset();
      advancedSettings0.setPerformancePreferencesConnectionTime(0);
      advancedSettings0.setSocketLinger(363);
      advancedSettings0.setPerformancePreferencesBandwidth(718);
      advancedSettings0.setDebugNonBlockingMode(false);
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.setPerformancePreferencesBandwidth(0);
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.setDebugNonBlockingMode(false);
      assertEquals(0, advancedSettings0.getSocketLinger());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setSocketLinger(2168);
      advancedSettings0.setBacklog(0);
      advancedSettings0.setQSObjectPoolMaker("w1o%xK+VLrM]NR)#9h");
      int int0 = 0;
      advancedSettings0.setBacklog(0);
      advancedSettings0.setClientSocketReceiveBufferSize(0);
      advancedSettings0.setQSObjectPoolMaker("<3.2\"mh&]mXz|8, _");
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("w1o%xK+VLrM]NR)#9h");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // w1o%xK+VLrM]NR)#9h
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketReceiveBufferSize(0);
      advancedSettings0.setPerformancePreferencesBandwidth((-1345));
      advancedSettings0.setPerformancePreferencesLatency(0);
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.getCharset();
      assertEquals((-1345), advancedSettings0.getPerformancePreferencesBandwidth());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientIdentifier("=SB1_O+gzT");
      advancedSettings0.setBacklog((-2302));
      advancedSettings0.setCharset("");
      assertEquals("=SB1_O+gzT", advancedSettings0.getClientIdentifier());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setClientSocketTrafficClass("cvxf+y`rCg_/vg");
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("@>];2Q130\"");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // @>];2Q130\"
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setPerformancePreferencesConnectionTime(1020);
      advancedSettings0.toXML("L>Z7P\"t4?1b");
      assertEquals(1020, advancedSettings0.getPerformancePreferencesConnectionTime());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setByteBufferSize((-885));
      int int0 = (-1);
      advancedSettings0.setClientSocketReceiveBufferSize((-1));
      boolean boolean0 = true;
      advancedSettings0.setDebugNonBlockingMode(true);
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("Ch*&6dY:79pq5ZAE\"");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // Ch*&6dY:79pq5ZAE\"
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketReceiveBufferSize((-1));
      advancedSettings0.setDebugNonBlockingMode(false);
      String string0 = "$K6XVjT^S<M-'V@";
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("$K6XVjT^S<M-'V@");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // $K6XVjT^S<M-'V@
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketSendBufferSize((-1362));
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.getMaxThreadsForNioWrite();
      advancedSettings0.setClientSocketTrafficClass("");
      advancedSettings0.setDebugNonBlockingMode(false);
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.setQSObjectPoolMaker(")a");
      advancedSettings0.setPerformancePreferencesBandwidth(10);
      advancedSettings0.getByteBufferSize();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setQSObjectPoolMaker("sv!^)f<d)I]");
      advancedSettings0.setPerformancePreferencesBandwidth(10);
      assertEquals((-1362), advancedSettings0.getClientSocketSendBufferSize());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setByteBufferSize(419);
      advancedSettings0.setClientSocketTrafficClass("");
      advancedSettings0.setQSObjectPoolMaker("");
      advancedSettings0.toXML("");
      advancedSettings0.setQSObjectPoolMaker("");
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.setPerformancePreferencesConnectionTime(0);
      advancedSettings0.getByteBufferSize();
      advancedSettings0.getClientSocketReceiveBufferSize();
      int int0 = advancedSettings0.getBacklog();
      assertTrue(advancedSettings0.getDebugNonBlockingMode());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.toXML((String) null);
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset(">My{$D5h(^?[");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // >My{$D5h(^?[
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setBacklog((-1766));
      advancedSettings0.setClientSocketReceiveBufferSize((-3016));
      advancedSettings0.setBacklog(2233);
      advancedSettings0.setPerformancePreferencesConnectionTime((-3016));
      advancedSettings0.toXML("</client-socket-receive-buffer-size>\n");
      advancedSettings0.setByteBufferSize((-1766));
      advancedSettings0.getClientSocketTcpNoDelay();
      int int0 = advancedSettings0.getClientSocketReceiveBufferSize();
      assertEquals((-3016), int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setQSObjectPoolMaker((String) null);
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.setPerformancePreferencesLatency(0);
      advancedSettings0.setPerformancePreferencesBandwidth(2902);
      advancedSettings0.setClientIdentifier((String) null);
      advancedSettings0.setClientSocketReceiveBufferSize(0);
      advancedSettings0.getByteBufferSize();
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.getSocketLinger();
      advancedSettings0.setDebugNonBlockingMode(false);
      advancedSettings0.setPerformancePreferencesLatency(0);
      advancedSettings0.getByteBufferSize();
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setQSObjectPoolMaker((String) null);
      advancedSettings0.setUseDirectByteBuffer(false);
      advancedSettings0.getBacklog();
      advancedSettings0.getBacklog();
      advancedSettings0.setPerformancePreferencesConnectionTime(0);
      advancedSettings0.setClientSocketTrafficClass((String) null);
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.setDebugNonBlockingMode(false);
      advancedSettings0.getByteBufferSize();
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.getClientSocketTcpNoDelay();
      boolean boolean0 = advancedSettings0.getClientSocketTcpNoDelay();
      assertEquals(2902, advancedSettings0.getPerformancePreferencesBandwidth());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      int int0 = 1006;
      advancedSettings0.setSocketLinger(1006);
      int int1 = (-1);
      advancedSettings0.setPerformancePreferencesBandwidth((-1));
      advancedSettings0.getQSObjectPoolMaker();
      String string0 = "XBC";
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("XBC");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // XBC
         //
         verifyException("org.quickserver.util.xmlreader.AdvancedSettings", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketSendBufferSize(1020);
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.setPerformancePreferencesConnectionTime(1020);
      advancedSettings0.toXML("L>Z7P\"t4?1b");
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("</qsobject-pool-maker>\n");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // </qsobject-pool-maker>
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }
}
