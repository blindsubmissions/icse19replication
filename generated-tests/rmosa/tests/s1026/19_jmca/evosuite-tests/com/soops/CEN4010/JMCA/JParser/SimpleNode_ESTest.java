/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 17:22:51 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.InputStream;
import java.io.StringWriter;
import java.io.Writer;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.8125445053464693
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.setIdentifier(")/");
      SystemInUtil.addInputLine(")/");
      JavaParser javaParser0 = new JavaParser((String) null);
      simpleNode0.toString();
      simpleNode0.setIdentifier(">=");
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("AllocationExpression : )/");
      simpleNode0.dump("2p$KXc'!wVK", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 68);
      try { 
        javaParser0.ArrayDimsAndInits();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: )
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7031315809655685
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.setIdentifier("</");
      StringWriter stringWriter0 = new StringWriter(68);
      simpleNode0.toString("</");
      StringWriter stringWriter1 = new StringWriter(3361);
      StringWriter stringWriter2 = stringWriter1.append('W');
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) "</");
      String string0 = "";
      simpleNode0.dump("", stringWriter3);
      simpleNode0.dump("</", stringWriter0);
      String string1 = "EmptyStatement";
      // Undeclared exception!
      try { 
        stringWriter3.append((CharSequence) "</", 255, 483);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(12);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5138165375168556
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("2p$KXc!wVK");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1);
      Node node0 = simpleNode0.parent;
      simpleNode0.parser = javaParser0;
      simpleNode0.jjtAddChild((Node) null, 0);
      javaParser0.token = simpleNode0.parser.token;
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("(", stringWriter0);
      simpleNode0.setIdentifier("eRT8B7<CPv'a");
      simpleNode0.setIdentifier("(");
      simpleNode0.dump("?Se?Zfh:iz3aBoiQ", stringWriter0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode1 = new SimpleNode(10);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "?Se?Zfh:iz3aBoiQ");
      simpleNode1.dump("'Aff&P*`B[|", stringWriter0);
      simpleNode1.dump("l!&b~x*q~/a", stringWriter0);
      simpleNode1.dump("#", stringWriter1);
      assertEquals("<PackageDeclaration></PackageDeclaration>\n<PackageDeclaration>\n  <identifier>eRT8B7<CPv'a</identifier>\n  <identifier>(</identifier>\n</PackageDeclaration>\n?Se?Zfh:iz3aBoiQ", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = (-1514);
      SimpleNode simpleNode0 = new SimpleNode((-1514));
      simpleNode0.jjtGetNumChildren();
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      // Undeclared exception!
      try { 
        jJTJavaParserState0.peekNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5481178804418445
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(58);
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier(" ");
      StringWriter stringWriter0 = new StringWriter(58);
      simpleNode0.setIdentifier(" ");
      StringWriter stringWriter1 = new StringWriter(58);
      simpleNode0.dump("H?", stringWriter1);
      simpleNode0.dump(" ", stringWriter0);
      assertEquals("<CastExpression>\n  <identifier> </identifier>\n  <identifier> </identifier>\n</CastExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(38);
      simpleNode0.jjtClose();
      String string0 = "|";
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) stringBuffer0, 64, 64);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 64
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9524303320983685
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(12);
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier("~");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("~", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 12);
      simpleNode0.jjtOpen();
      simpleNode0.jjtSetParent((Node) null);
      SimpleNode simpleNode1 = new SimpleNode(12);
      JavaParser javaParser0 = new JavaParser("eRT8B7<CPv'a");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode1.jjtAddChild(simpleNode0, 6);
      StringWriter stringWriter1 = new StringWriter(13);
      simpleNode1.toString();
      StringWriter stringWriter2 = new StringWriter(6);
      simpleNode1.dump("eRT8B7<CPv'a", stringWriter0);
      simpleNode1.dump("5kYDY", stringWriter2);
      simpleNode1.dump("TypeParameter", stringWriter0);
      simpleNode1.dump("Literal", stringWriter2);
      simpleNode0.dump("%:i!d", stringWriter1);
      simpleNode0.dump("~", stringWriter1);
      assertEquals(13, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "2p$KXc!wVK";
      SimpleNode simpleNode0 = new SimpleNode(3);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "2p$KXc!wVK", 0, 97);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "2p$KXc!wVK";
      SimpleNode simpleNode0 = new SimpleNode(3);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtAddChild((Node) null, 1);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "2p$KXc!wVK", 1, 97);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("2p$KXc!wVK");
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringWriter stringWriter0 = new StringWriter(1);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter1 = new StringWriter(3);
      simpleNode0.dump("2p$KXc!wVK", stringWriter0);
      simpleNode0.dump("\"...\"", stringWriter1);
      simpleNode0.dump("<=", stringWriter1);
      assertEquals("<Modifiers>\n</Modifiers>\n<Modifiers>\n</Modifiers>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.7937300551584248
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("2p$KXc!wVK");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 3);
      Node node0 = simpleNode0.parent;
      simpleNode0.parser = javaParser0;
      simpleNode0.jjtAddChild((Node) null, 0);
      javaParser0.token = simpleNode0.parser.token;
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.dump("2p$KXc!wVK", stringWriter0);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = null;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = null;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("VariableDeclaratorId", stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(58);
      simpleNode0.setIdentifier(";");
      JavaParser javaParser0 = new JavaParser((String) null);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(58);
      simpleNode0.dump("{", stringWriter0);
      stringWriter0.write(58);
      stringWriter0.close();
      simpleNode0.dump("m", stringWriter0);
      simpleNode0.dump("_.!GOFOl[", stringWriter0);
      assertEquals("<CastExpression>\n</CastExpression>\n:<CastExpression>\n</CastExpression>\n<CastExpression>\n</CastExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5481178804418445
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(58);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("@bq8K`il", stringWriter0);
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<CastExpression>\n  <identifier>*gt</identifier>\n</CastExpression>\n<CastExpression>\n  <identifier>*gt</identifier>\n</CastExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5586478569798259
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.setIdentifier(")/");
      JavaParser javaParser0 = new JavaParser((String) null);
      simpleNode0.toString();
      simpleNode0.setIdentifier(">=");
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(")/", stringWriter0);
      simpleNode0.toString();
      simpleNode0.dump("AllocationExpression : )/", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(68);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode1.dump(">=", stringWriter0);
      simpleNode0.dump("%", stringWriter1);
      simpleNode1.dump(">=", stringWriter1);
      simpleNode0.dump("::7DpLZN6SqS3`", stringWriter1);
      assertEquals("<AllocationExpression>\n  <identifier>)/</identifier>\n  <identifier>*ge</identifier>\n</AllocationExpression>\n<AllocationExpression>\n  <identifier>)/</identifier>\n  <identifier>*ge</identifier>\n</AllocationExpression>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(12);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(">>");
      simpleNode0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.dump("TypeParameter : > : >>", stringWriter0);
      simpleNode0.dump(">>", stringWriter0);
      simpleNode0.dump("1.%$(>", stringWriter0);
      simpleNode0.dump(" ", stringWriter0);
      assertEquals("<TypeParameter>\n  <identifier>*gt</identifier>\n  <identifier>*rshft</identifier>\n</TypeParameter>\n<TypeParameter>\n  <identifier>*gt</identifier>\n  <identifier>*rshft</identifier>\n</TypeParameter>\n<TypeParameter>\n  <identifier>*gt</identifier>\n  <identifier>*rshft</identifier>\n</TypeParameter>\n<TypeParameter>\n  <identifier>*gt</identifier>\n  <identifier>*rshft</identifier>\n</TypeParameter>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter(66);
      StringWriter stringWriter1 = new StringWriter(3361);
      StringWriter stringWriter2 = stringWriter0.append('W');
      stringWriter0.append((CharSequence) "</");
      stringWriter2.append('W');
      simpleNode0.dump("", stringWriter2);
      simpleNode0.dump("s9VyhcjJ  h/'o|", stringWriter1);
      assertEquals("<AllocationExpression>\n  <identifier>*lt</identifier>\n</AllocationExpression>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.setIdentifier(" ");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(59);
      simpleNode0.dump("g", stringWriter0);
      assertEquals(";<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      JavaParser javaParser0 = new JavaParser("*lt");
      simpleNode0.toString();
      simpleNode0.setIdentifier("<<");
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("</", stringWriter0);
      simpleNode0.toString();
      simpleNode0.dump("", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("o|XKW7`#A<nV9l5", stringWriter1);
      simpleNode0.dump("VmoG|tRE*,t&/s", stringWriter0);
      simpleNode0.dump("*amp", stringWriter0);
      assertEquals("<AllocationExpression>\n  <identifier>*lshft</identifier>\n</AllocationExpression>\n<AllocationExpression>\n  <identifier>*lshft</identifier>\n</AllocationExpression>\n<AllocationExpression>\n  <identifier>*lshft</identifier>\n</AllocationExpression>\n<AllocationExpression>\n  <identifier>*lshft</identifier>\n</AllocationExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(68);
      JavaParser javaParser0 = new JavaParser((String) null);
      simpleNode0.toString();
      simpleNode0.setIdentifier("{");
      simpleNode0.parser = javaParser0;
      StringWriter stringWriter0 = new StringWriter(68);
      simpleNode0.dump("*gt", stringWriter0);
      assertEquals("<AllocationExpression>\n</AllocationExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.setIdentifier("2p$KXc!wVK");
      StringWriter stringWriter0 = new StringWriter(68);
      StringWriter stringWriter1 = new StringWriter(3361);
      simpleNode0.setIdentifier("&");
      simpleNode0.setIdentifier("");
      simpleNode0.dump("&", stringWriter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode1 = new SimpleNode(3361);
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) "&");
      simpleNode0.dump("2p$KXc!wVK", stringWriter2);
      SimpleNode simpleNode2 = new SimpleNode((-259));
      simpleNode2.dump("</", stringWriter0);
      simpleNode1.dump("HAy?yJ", stringWriter2);
      assertEquals("<AllocationExpression>\n  <identifier>2p$KXc!wVK</identifier>\n  <identifier>*amp</identifier>\n</AllocationExpression>\n&<AllocationExpression>\n  <identifier>2p$KXc!wVK</identifier>\n  <identifier>*amp</identifier>\n</AllocationExpression>\n", stringWriter2.toString());
      assertEquals("<AllocationExpression>\n  <identifier>2p$KXc!wVK</identifier>\n  <identifier>*amp</identifier>\n</AllocationExpression>\n&<AllocationExpression>\n  <identifier>2p$KXc!wVK</identifier>\n  <identifier>*amp</identifier>\n</AllocationExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.setIdentifier("2p$KXc!wVK");
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter(4096);
      StringWriter stringWriter1 = new StringWriter(1);
      StringWriter stringWriter2 = stringWriter0.append('_');
      stringWriter2.append((CharSequence) "2p$KXc!wVK");
      StringWriter stringWriter3 = stringWriter2.append('p');
      simpleNode0.dump("", stringWriter3);
      simpleNode0.dump("2p$KXc!wVK", stringWriter1);
      assertEquals("<AllocationExpression>\n  <identifier>2p$KXc!wVK</identifier>\n  <identifier>*amp</identifier>\n</AllocationExpression>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(12);
      SimpleNode simpleNode1 = new SimpleNode(12);
      JavaParser javaParser0 = new JavaParser((String) null);
      simpleNode0.toString();
      simpleNode1.setIdentifier("}");
      simpleNode1.toString();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.toString();
      simpleNode1.dump("TypeParameter : }", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("bKMV2.\"bM#:$yok", stringWriter0);
      simpleNode0.dump("ve&", stringWriter1);
      simpleNode1.dump("bKMV2.\"bM#:$yok", stringWriter1);
      simpleNode1.dump("TypeParameter : }", stringWriter0);
      simpleNode0.dump("TypeParameter : }", stringWriter1);
      assertEquals("<TypeParameter>\n</TypeParameter>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 68;
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.toString();
      String string0 = "<=";
      simpleNode0.setIdentifier("<=");
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(68);
      String string1 = "*ge";
      simpleNode0.dump("*ge", stringWriter0);
      simpleNode0.toString();
      JavaParser javaParser0 = null;
      try {
        javaParser0 = new JavaParser((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("7smN^4pHr+W");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "7smN^4pHr+W");
      JavaParser javaParser0 = new JavaParser("7smN^4pHr+W");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 2990);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter(2990);
      char[] charArray0 = new char[6];
      charArray0[0] = '+';
      charArray0[3] = '+';
      charArray0[4] = '+';
      charArray0[5] = '+';
      stringWriter0.write(charArray0);
      StringWriter stringWriter1 = stringWriter0.append('+');
      simpleNode0.dump("7smN^4pHr+W", stringWriter0);
      simpleNode0.dump("7smN^4pHr+W", stringWriter1);
      assertSame(stringWriter0, stringWriter1);
  }
}
