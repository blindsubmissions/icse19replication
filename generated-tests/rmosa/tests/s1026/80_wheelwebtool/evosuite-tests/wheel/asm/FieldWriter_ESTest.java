/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 17:29:23 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1567);
      classWriter0.newMethodItem(">0Q+@p7zYc{&%|", "=ZUx<Yrbf%)+@`M", "V]e1py~,zTHCYl>6*m", false);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-106), ">0Q+@p7zYc{&%|", "4jBs7B8pg=~h/83{R", "4jBs7B8pg=~h/83{R", ">0Q+@p7zYc{&%|");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4659992569610426
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "}`id^|4", "g3&", "", "fec36_G3q");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putShort(567);
      ByteVector byteVector2 = byteVector1.putByteArray((byte[]) null, 0, (byte)68);
      ByteVector byteVector3 = byteVector2.putByteArray((byte[]) null, 2, 131072);
      ByteVector byteVector4 = byteVector3.put12((-1688), (byte)0);
      ByteVector byteVector5 = byteVector1.putByte(0);
      byteVector5.putShort((-2027));
      fieldWriter0.put(byteVector5);
      assertSame(byteVector5, byteVector4);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1049));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1049), "Signature", "Signature", "Signature", "Deprecated");
      FieldWriter fieldWriter1 = classWriter0.lastField;
      Attribute attribute0 = new Attribute("Signature");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter1.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4512));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 16, ".4%NDtv) .^vA7!Alg", ".4%NDtv) .^vA7!Alg", (String) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@1564d24c
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32767);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "h", "h", "", "h");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.getSize();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)68;
      // Undeclared exception!
      try { 
        byteVector0.putByteArray(byteArray0, 3472, 131072);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32767);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "h", "h", "", "h");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      FieldWriter fieldWriter1 = classWriter0.lastField;
      FieldWriter fieldWriter2 = classWriter0.lastField;
      fieldWriter2.visitEnd();
      assertSame(fieldWriter2, fieldWriter1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32767);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 32767, "h", "h", "h", ">0Q+@p7zYc{&%|");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("`ka!@rQQjH~-\"(#.W");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-103);
      byteArray0[3] = (byte)105;
      // Undeclared exception!
      try { 
        attribute0.write(classWriter0, byteArray0, (byte)105, 2, (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0360334832009355
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2094);
      ClassWriter classWriter1 = new ClassWriter(2);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = classWriter0.pool;
      ByteVector byteVector2 = byteVector1.putShort((-1));
      ByteVector byteVector3 = byteVector2.putShort(2233);
      ByteVector byteVector4 = byteVector0.putByte(2094);
      ByteVector byteVector5 = byteVector4.putByte(251658240);
      ByteVector byteVector6 = new ByteVector(2094);
      byteVector3.putByte(49);
      byteVector4.put11((-1172), 850);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, (-1997), "", "", "", (Object) null);
      Attribute attribute0 = new Attribute("nmJ");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1624);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "r\"G", "-J^]'@`*;=tE/.:7Qu", "", "-J^]'@`*;=tE/.:7Qu");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fieldWriter0.visitAnnotation("", false);
      FieldWriter fieldWriter1 = fieldWriter0.next;
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(1);
      FieldWriter fieldWriter2 = new FieldWriter(classWriter0, 4096, "", "!u2oo:I0,*KM()#:2!w", "r\"G", "");
      assertFalse(fieldWriter2.equals((Object)fieldWriter0));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2597);
      ClassWriter classWriter1 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, 1567, ">0Q+@p7zYc{&%|", ">0Q+@p7zYc{&%|", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1567);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-106), ">0Q+@p7zYc{&%|", ">0Q+@p7zYc{&%|", ">0Q+@p7zYc{&%|", ">0Q+@p7zYc{&%|");
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter0.next = fieldWriter1;
      classWriter0.version = (-246);
      fieldWriter0.put(byteVector0);
      classWriter0.thisName = "}#:n!.6j\"lD<0";
      fieldWriter1.visitAnnotation("3[]9n657N8", true);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter1.getSize();
      assertEquals(42, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(805);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777222, ">0Q+@p7zYc{&%|", ">0Q+@p7zYc{&%|", ">0Q+@p7zYc{&%|", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32767);
      ClassWriter classWriter1 = new ClassWriter(32767);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, (-674), ">0Q+@p7zYc{&%|", "", "", "");
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = fieldWriter0.next;
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3459);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2094, "c", "}", ">?Zb9*G@p\r@mhB>]&Z", "tMb%-\"o>A/<%q,u4r");
      fieldWriter0.visitAnnotation(">?Zb9*G@p\r@mhB>]&Z", true);
      FieldWriter fieldWriter1 = fieldWriter0.next;
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(760);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FieldWriter fieldWriter2 = null;
      try {
        fieldWriter2 = new FieldWriter(classWriter0, 760, "", "c", "c", pipedInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.PipedInputStream@4aa7390a
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1567);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-106), ">0Q+@p7zYc{&%|", ">0Q+@p7zYc{&%|", ">0Q+@p7zYc{&%|", ">0Q+@p7zYc{&%|");
      ByteVector byteVector0 = new ByteVector();
      classWriter0.version = (-246);
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
  }
}
