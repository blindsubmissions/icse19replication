/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 16:17:03 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.7434940863967637
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.setXPath("n{Z$,=Za!!#lh@NuN");
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      xPathLexer0.literal();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5281189455022457
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6923813611495135
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("FWs(bY1");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("F", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8748135783308727
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/h=.@Z -lv[t@4m");
      xPathLexer0.rightParen();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("D_:.\"3ymPR\"aj3KP");
      xPathLexer1.notEquals();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer2.mod();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5281189455022457
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6001882813317665
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<1&Q?MhJ6>PIgu+i");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      Token token1 = xPathLexer0.comma();
      assertEquals("&", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (19) (<1)", string0);
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("Q", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("?MhJ6>PIgu+i", token3.getTokenText());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6394577155127598
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LMp!?b");
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.star();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4898709102748832
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4898709102748832
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      xPathLexer0.consume((-662));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5658843209624893
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(".", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9788471318271978
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("`Z w6wkWk{<4,Z4", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      Token token2 = xPathLexer1.doubleColon();
      assertEquals("L`", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("Z", token3.getTokenText());
      
      Token token4 = xPathLexer1.plus();
      assertEquals(" ", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("w6wkWk", token5.getTokenText());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5658843209624893
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.5658843209624895
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7415573863466578
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6_Rse<dmB");
      xPathLexer0.plus();
      xPathLexer0.dots();
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.equals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.7541717757733974
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LMp!?b");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("LM", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      token1.toString();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      String string0 = token1.toString();
      assertEquals("[ (20) (p)", string0);
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("?", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6394577155127598
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LMp!?b");
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.star();
      token0.toString();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.slashes();
      xPathLexer0.or();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.5281189455022457
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6782041247436593
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LMp!?b");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("LM", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      token1.toString();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      String string0 = token1.toString();
      assertEquals("[ (20) (p)", string0);
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("?", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.7164385645510052
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LMp!?b");
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.star();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.identifier();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.7828634746272851
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      xPathLexer0.star();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.5281189455022457
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9862514691987352
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      Token token0 = xPathLexer0.slashes();
      assertEquals("v", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.div();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("IfmZQY.A", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.div();
      xPathLexer0.colon();
      Token token2 = xPathLexer1.dollar();
      assertEquals("+", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals("V", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(18, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4898709102748832
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.5281189455022457
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      xPathLexer0.rightParen();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9788471318271978
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      xPathLexer1.doubleColon();
      xPathLexer1.plus();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9369212314345162
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<1&Q?MhJ6>PIgu+i");
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("&", token1.getTokenText());
      
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      String string0 = token0.toString();
      assertEquals("[ (19) (<1)", string0);
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Q", token2.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ic8;{!'");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Ic8", token0.getTokenText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1056869996779919
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L1!Qb");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("L", token0.getTokenText());
      
      xPathLexer0.setXPath(":pV :B:8");
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("pV", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.3263237563132246
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("E", token2.getTokenText());
      
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer0.nextToken();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("ZQ", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      XPathLexer xPathLexer2 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      Token token5 = xPathLexer2.equals();
      assertEquals("M", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      Token token6 = xPathLexer3.rightBracket();
      assertEquals("M", token6.getTokenText());
      assertEquals(4, token6.getTokenType());
      
      xPathLexer3.and();
      Token token7 = xPathLexer0.div();
      assertNull(token7);
      
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer3.nextToken();
      assertEquals("PE", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("eFWs(bY1");
      Token token0 = xPathLexer0.comma();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9788471318271978
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      xPathLexer1.doubleColon();
      xPathLexer1.plus();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.590566477223199
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5?12^Gc#9jmj.U");
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.consume((-1311));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.2001071934492897
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      Token token0 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      xPathLexer1.number();
      xPathLexer1.dots();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      assertEquals("L`Z w6wkWk{<4,Z4", xPathLexer2.getXPath());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.8644669577897612
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<1&Q?MhJ6>PIgu+i");
      Token token0 = xPathLexer0.dots();
      assertEquals("<", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("1", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
      
      String string0 = token2.toString();
      assertEquals("[ (19) (&Q)", string0);
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("hJ6", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.8748624860649398
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L1!Qb");
      Token token0 = xPathLexer0.star();
      assertEquals("L", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("1", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1514873898265048
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" :pV :B:8");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("V", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals(" ", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals(":B", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(":", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(30, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("|92_B[Vr4G~/{Q|");
      Token token7 = xPathLexer2.whitespace();
      assertEquals((-2), token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      xPathLexer2.and();
      xPathLexer0.nextToken();
      Token token8 = xPathLexer2.nextToken();
      assertEquals("92", token8.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9872884976037476
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("arg[y");
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("KME");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("KME", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.3977143040208087
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      Token token0 = xPathLexer0.number();
      assertEquals(".", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(26, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("FI", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.020351658015226
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      Token token0 = xPathLexer0.number();
      assertEquals(".", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("f6D", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J%jCU(awcdbh.(G$$");
      Token token0 = xPathLexer0.minus();
      assertEquals("J", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("%jCU(awcdbh.(G$$", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"3M/!?b");
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.star();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9459812537820219
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("`Z w6wkWk{<4,Z4", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      Token token2 = xPathLexer1.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("L`", token2.getTokenText());
      
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("Z", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("w6wkWk", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("{<4,Z4", token5.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.718202348341056
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6_Rse<dmB");
      xPathLexer0.dots();
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.equals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5332433040254183
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/h=.@Z -lv[t@4m");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.minus();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(".", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals("=", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token3 = xPathLexer0.star();
      assertEquals("Z", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token4 = xPathLexer0.at();
      assertEquals(" ", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.isIdentifierStartChar('p');
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("[", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("/h=.@Z -lv[t@4m");
      Token token6 = xPathLexer1.dots();
      assertEquals("/", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer1.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("t", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0480187859203685
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("arg[y");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("g", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(3, token2.getTokenType());
      assertEquals("[", token2.getTokenText());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qGUA*r4Wu%==G)");
      XPathLexer xPathLexer1 = new XPathLexer("qGUA*r4Wu%==G)");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.nextToken();
      assertEquals("qGUA", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",DaR-,");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.4089391417466732
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("v", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.dots();
      assertEquals("I", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("f", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("m", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer1.operatorName();
      xPathLexer1.identifierOrOperatorName();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(5, token4.getTokenType());
      assertEquals("+", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("V", token5.getTokenText());
      
      Token token6 = xPathLexer1.whitespace();
      assertEquals((-2), token6.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N*>b.:a:`@^!H,11z");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.442704423534857
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dz_I<;3H0=nEr1");
      Token token0 = xPathLexer0.star();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (20) (d)", string0);
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("z_", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("I", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (20) (d)");
      Token token3 = xPathLexer1.dollar();
      assertEquals("[", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(7, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.and();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer0.mod();
      Token token6 = xPathLexer1.nextToken();
      assertEquals("(", token6.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U!}&B )]_z-*;9_K77");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("U", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token2);
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5029422536809707
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      Token token0 = xPathLexer0.number();
      assertEquals(".", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("<", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("f", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("6", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("D$FI", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e^U:k%IK4*");
      Token token0 = xPathLexer0.not();
      assertEquals("e", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("U", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.2721885542292666
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("E", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals(4, token1.getTokenType());
      assertEquals("P", token1.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(23, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.notEquals();
      assertEquals("ZQ", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("M", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      Token token6 = xPathLexer2.equals();
      assertEquals("M", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      xPathLexer3.and();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7Lv'~6S-~5D)9");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("7", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nhZI8;\"dZa7'aWUI[E");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("nhZI8", token0.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5152172843511356
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      Token token0 = xPathLexer0.at();
      assertEquals("L", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("`", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("6w", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("kWk", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("{<4,Z4", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token7 = xPathLexer2.whitespace();
      assertEquals((-2), token7.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OFH0TE?I@{e%B]N");
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8146337937790187
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">>XosX=MK=XqAO@ 9m`N");
      Token token0 = xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(9, token2.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Yx-z.T|#@>_P");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Yx-z.T", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J?T:*A*`J39-+T9");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("J", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nhZI8;\"dZa7'aWUI[E");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("n", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("hZI8", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0113330092414117
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      xPathLexer1.doubleColon();
      xPathLexer1.plus();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.3654292016799514
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dz_I<;3H0=nEr1");
      Token token0 = xPathLexer0.star();
      xPathLexer0.identifier();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("[ (20) (d)");
      xPathLexer0.nextToken();
      xPathLexer1.relationalOperator();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.and();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oqarg[y");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("oqarg", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.3529927462896743
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals(4, token1.getTokenType());
      assertEquals("P", token1.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("!", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("ZQ", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      XPathLexer xPathLexer2 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      Token token5 = xPathLexer2.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("M", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      xPathLexer3.and();
      xPathLexer0.div();
      xPathLexer2.slashes();
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer2.nextToken();
      assertEquals("E", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y)u0,");
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=1Q@{Gju#^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("=", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.1508178714182202
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dz_I<;3H0=nEr1");
      Token token0 = xPathLexer0.star();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("[ (20) (d)");
      xPathLexer0.nextToken();
      xPathLexer1.relationalOperator();
      xPathLexer1.identifierOrOperatorName();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.4653969087379082
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/h=.@Z -lv[t@4m");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("/", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("h", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.nextToken();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("@", token4.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token5 = xPathLexer0.at();
      assertEquals("Z", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('p');
      assertTrue(boolean0);
      
      xPathLexer0.and();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(6, token7.getTokenType());
      assertEquals("-", token7.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("/h=.@Z -lv[t@4m");
      xPathLexer1.number();
      Token token8 = xPathLexer1.dots();
      assertEquals("/", token8.getTokenText());
      
      Token token9 = xPathLexer1.number();
      assertEquals(30, token9.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("A']qyr\"%6(Zvj;Ps@e");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N*>b.:a:`@^!H,11z");
      Token token0 = xPathLexer0.dots();
      assertEquals("N", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("*", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.relationalOperator();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oqarg[y");
      XPathLexer xPathLexer1 = new XPathLexer("?-iL!GdWh;W");
      Token token0 = xPathLexer1.doubleColon();
      assertEquals("?-", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("iL", token1.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.4882011502450412
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/h=.@Z -lv[t@4m");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("/", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("h", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.nextToken();
      assertEquals(13, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.star();
      assertEquals("@", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token5 = xPathLexer0.at();
      assertEquals("Z", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('p');
      assertTrue(boolean0);
      
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("-", token6.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("/h=.@Z -lv[t@4m");
      Token token7 = xPathLexer1.notEquals();
      assertEquals("/h", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer1.dots();
      assertEquals(14, token8.getTokenType());
      assertEquals("=.", token8.getTokenText());
      
      xPathLexer1.number();
      Token token9 = xPathLexer1.number();
      assertEquals("", token9.getTokenText());
      assertEquals(30, token9.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1187366547538093
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dz_I<;3H0=nEr1");
      Token token0 = xPathLexer0.star();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (20) (d)", string0);
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("z_", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("I", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (20) (d)");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("<", token3.getTokenText());
      assertEquals(7, token3.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token4 = xPathLexer1.identifierOrOperatorName();
      assertEquals("", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(";3H0=nEr1", token5.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0302252420913667
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      Token token0 = xPathLexer0.at();
      token0.toString();
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.or();
      String string0 = token0.toString();
      assertEquals("[ (16) (L)", string0);
      
      Token token2 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token2);
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.setXPath("n1.)");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token3 = xPathLexer0.star();
      assertEquals("n", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.at();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(".", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(2, token5.getTokenType());
      assertEquals(")", token5.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.9788471318271978
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("L", token0.getTokenText());
      
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Z", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      Token token2 = xPathLexer1.doubleColon();
      assertEquals("L`", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("Z", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("w6wkWk", token4.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.8396534403244644
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LMp!?b");
      Token token0 = xPathLexer0.star();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Mp", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (20) (L)", string0);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("?b", token3.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.3460471632609439
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5?12^Gc#9jmj.U");
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.minus();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("5?12^Gc#9jmj.U");
      xPathLexer1.number();
      xPathLexer1.at();
      xPathLexer1.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("G0w ");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("G", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("0", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setXPath("0#Tp$A?Q");
      xPathLexer0.number();
      xPathLexer1.div();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.3460471632609439
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5?12^Gc#9jmj.U");
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.minus();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("5?12^Gc#9jmj.U");
      xPathLexer1.number();
      xPathLexer1.rightParen();
      xPathLexer1.at();
      xPathLexer1.nextToken();
      xPathLexer0.minus();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9lm-)");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("9", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("lm-)", token1.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<1&Q?MhJ6>PIgu#b+i");
      XPathLexer xPathLexer1 = new XPathLexer("vP`G[v>OK");
      xPathLexer0.div();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e^U:k%IK4*");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("^U:k%IK4*", token0.getTokenText());
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.635567825627706
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      Token token0 = xPathLexer0.comma();
      assertEquals("L", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.equals();
      assertEquals("Z", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.at();
      assertEquals("w", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("6w", token4.getTokenText());
      
      Token token5 = xPathLexer0.plus();
      assertEquals("k", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("Wk", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token7 = xPathLexer2.whitespace();
      assertEquals((-2), token7.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&TF/");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      assertNull(xPathLexer1.getXPath());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y?CAEE");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.1361206852388956
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L1!Qb");
      xPathLexer0.star();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.3412914883724656
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">>XosX=MK=XqAO@ 9m`N");
      Token token0 = xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("XosX", token3.getTokenText());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.3914345537626913
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dz_I<;3H0=nEr1");
      Token token0 = xPathLexer0.star();
      token0.toString();
      token0.toString();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("[ (20) (d)");
      xPathLexer0.nextToken();
      xPathLexer1.relationalOperator();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.5199516468030347
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.colon();
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      xPathLexer1.colon();
      xPathLexer0.operatorName();
      xPathLexer0.endPosition();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.identifierOrOperatorName();
      Token token1 = xPathLexer1.nextToken();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5?12^Gc#9jmj.U");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&TF/");
      Token token0 = xPathLexer0.not();
      assertEquals("&", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("TF", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!CTAP&xY");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.1556582408146638
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(26, token3.getTokenType());
      assertEquals("$", token3.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#tnhr2BtsE");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      xPathLexer1.plus();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<8+Rk8");
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("'>");
      Token token2 = xPathLexer1.nextToken();
      assertEquals("", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0434458837606169
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      xPathLexer1.doubleColon();
      xPathLexer1.plus();
      xPathLexer1.notEquals();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dz_I<;3H0=nEr1");
      Token token0 = xPathLexer0.star();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.getPreviousToken();
      xPathLexer0.isIdentifierStartChar('f');
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.1556582408146638
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      xPathLexer0.div();
      Token token0 = xPathLexer0.comma();
      assertEquals(".", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token2);
      assertEquals(21, token2.getTokenType());
      assertEquals("f", token2.getTokenText());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("6D", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.1283852741461817
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.setXPath("[ (");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(3, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.4969186744155887
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5?12^Gc#9jmj.U");
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.star();
      xPathLexer0.div();
      xPathLexer0.number();
      xPathLexer0.mod();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SBubGp}NiRVsLTAF-_(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("SBubGp", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("}NiRVsLTAF-_(", token1.getTokenText());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`Z w6wkWk{<4,Z4");
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("x 9B");
      token0.toString();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|&on\"n0^-5>Rl#/\"B*");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("|&on\"n0^-5>Rl#/\"B*");
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]Ur>Qt0LMU;GR;.875q");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.2721885542292666
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      xPathLexer0.star();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      XPathLexer xPathLexer2 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      xPathLexer2.equals();
      XPathLexer xPathLexer3 = new XPathLexer("MPE!ZQdi/{;KX`&}mDW");
      xPathLexer3.and();
      xPathLexer0.div();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.6209428256369032
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<1&Q?MhJ6>PIgu#b+i");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("&", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals("<", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("<1&Q?MhJ6>PIgu#b+i");
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('f');
      assertTrue(boolean0);
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("Q", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R7zgVr1(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("R7zgVr1", token0.getTokenText());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i\"vl)54W>.Aj1:{[");
      xPathLexer0.star();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(6, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("<8+Rk8");
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('f');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<f6D$FI");
      Token token0 = xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.plus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dz_I<;3H0=nEr1");
      Token token0 = xPathLexer0.slashes();
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("_I", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.888228971637015
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" :pV :B:8");
      Token token0 = xPathLexer0.literal();
      token0.toString();
      xPathLexer0.slashes();
      token0.toString();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.plus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=/eA|WrMqF4?");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(12, token0.getTokenType());
      assertEquals("=/", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("eA", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" V ::8");
      Token token0 = xPathLexer0.dollar();
      String string0 = token0.toString();
      assertEquals("[ (26) ( )", string0);
      
      xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(19, token2.getTokenType());
      assertEquals("::", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(" V ::8");
      XPathLexer xPathLexer2 = new XPathLexer(" V ::8");
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals(" ", token3.getTokenText());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.2566661822162866
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("or .wa[uF");
      Token token0 = xPathLexer0.operatorName();
      token0.toString();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("or .wa[uF");
      Token token0 = xPathLexer0.operatorName();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.plus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("[ (29) (or)");
      xPathLexer1.slashes();
      Token token1 = xPathLexer1.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l.2");
      xPathLexer0.div();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("l", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(31, token2.getTokenType());
      assertEquals(".2", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("l.2");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('f');
      assertTrue(boolean0);
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l.2");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.plus();
      assertEquals("2", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(14, token3.getTokenType());
      assertEquals("l.", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Kg5j6<a|+C/");
      XPathLexer xPathLexer2 = new XPathLexer("Kg5j6<a|+C/");
      boolean boolean0 = xPathLexer2.isIdentifierStartChar('M');
      assertTrue(boolean0);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer2.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
  }
}
