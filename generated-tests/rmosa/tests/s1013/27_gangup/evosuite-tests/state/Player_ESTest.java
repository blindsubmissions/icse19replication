/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 11:05:09 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.FileNotFoundException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(4906);
      Party party0 = player0.next;
      player0.remove((Party) null);
      player0.setY(0.0F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player4906", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      Player player1 = new Player((short)4919, "state.Player$JoinInfo", "state.Player$JoinInfo", 4906);
      assertEquals(4906, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(4, "", "", (-437));
      player0.getPictureId();
      player0.pack();
      player0.getY();
      player0.getY();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("Mv7j!OO(]HEQ2&@+n");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(0);
      player0.remove((Party) null);
      player0.id = (-26039);
      player0.setZ(1.0F);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(0, "45PEre(", "45PEre(", (-1), (-1));
      long long0 = player0.getTimeOfDeath();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals((-1), player0.getPictureId());
      assertEquals((-1), player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(4919);
      Party party0 = new Party();
      player0.prev = party0;
      player0.setDead();
      party0.getSubparty();
      party0.add(player0);
      party0.getSubparty();
      player0.toString();
      player0.pack();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(0.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.gangStrength();
      player0.getX();
      player0.setMoney((-291.8F));
      System.setCurrentTimeMillis(3085L);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(2748, "p=::{i-OK!", "", 1);
      int int0 = player0.type();
      assertEquals(5, int0);
      assertEquals("p=::{i-OK!", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = (-1220);
      Player player0 = new Player((-1220));
      player0.getMoney();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-40);
      MockFile mockFile0 = new MockFile("kSho(d)S;w", "");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(806);
      player0.getSubparty();
      player0.id = 2355;
      player0.setDead((-1365L));
      player0.setX(2355);
      Player player1 = new Player();
      player0.boss = (Party) player1;
      player0.setDead((long) 806, true);
      player0.getStrength();
      player0.getIP();
      player0.reset(false);
      player0.getName();
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      player0.getZ();
      player0.setZ(0.0F);
      player0.remove((Party) null);
      player0.setZ((-2700.456F));
      player0.reset(true);
      player0.getPictureId();
      player0.setDead((long) 0, false);
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.add(player1);
      player0.setConnected(true);
      byte[] byteArray0 = player0.pack();
      player0.setX((-170.22772F));
      player1.unpack(byteArray0);
      assertEquals((-170.22772F), player0.getX(), 0.01F);
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-310));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.isConnected();
      System.setCurrentTimeMillis(1392409281320L);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "y");
      player0.reset(true);
      Player player1 = new Player((-1817));
      player0.reset(false);
      System.setCurrentTimeMillis((short)4919);
      System.setCurrentTimeMillis((short)4919);
      player1.isJoinOK(player0, false);
      System.setCurrentTimeMillis(2413L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      boolean boolean0 = player0.isDead();
      assertFalse(player0.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(4906);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Qw_WlDP-TE");
      Player player1 = new Player(4906);
      Player player2 = new Player((-1098));
      player0.setJoinOK(player2, false);
      player1.setJoinOK(player0, true);
      player0.isJoinOK(player2, true);
      System.setCurrentTimeMillis(4906);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(4906);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Qw_WlDP-TE");
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertTrue(boolean0);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player4919", player1.toString());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-349));
      player1.setDead((-3013L), false);
      player0.setJoinOK(player1, true);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)73;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-58);
      player0.id = (int) (byte) (-58);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)114;
      player0.unpack(byteArray0);
      player1.isDead();
      assertEquals((-3013L), player1.getTimeOfDeath());
      
      player0.setDead((long) (byte)0);
      assertTrue(player0.isDead());
  }
}
