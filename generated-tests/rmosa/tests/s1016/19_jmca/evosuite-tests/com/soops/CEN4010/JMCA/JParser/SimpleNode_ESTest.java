/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 12:31:29 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.StringWriter;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6135246994120285
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtAddChild((Node) null, 17);
      simpleNode0.toString((String) null);
      SimpleNode simpleNode1 = new SimpleNode(17);
      simpleNode1.setIdentifier("PO06ZjV");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      simpleNode1.jjtAddChild(simpleNode0, 17);
      assertEquals(18, simpleNode0.jjtGetNumChildren());
      
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode2 = new SimpleNode(17);
      simpleNode2.setIdentifier("nullVariableDeclarator");
      SystemInUtil.addInputLine((String) null);
      simpleNode1.dump("t}", stringWriter0);
      simpleNode2.dump("PO06ZjV", stringWriter0);
      simpleNode1.dump("b<k}h2V(leY", stringWriter0);
      assertEquals("<VariableDeclarator>\n  <identifier>PO06ZjV</identifier>\n<VariableDeclarator></VariableDeclarator>\n</VariableDeclarator>\n<VariableDeclarator>\n  <identifier>nullVariableDeclarator</identifier>\n</VariableDeclarator>\n<VariableDeclarator>\n  <identifier>PO06ZjV</identifier>\n<VariableDeclarator></VariableDeclarator>\n</VariableDeclarator>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4349442022582592
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier("<");
      String string0 = ">=";
      simpleNode0.setIdentifier(">=");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      int int0 = 412;
      StringWriter stringWriter0 = new StringWriter(412);
      simpleNode0.dump("<", stringWriter0);
      simpleNode0.identifiers = arrayList0;
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.jjtGetParent();
      nodeArray0[3] = null;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump(">=", stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.48439011623800354
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.setIdentifier("<");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("<");
      simpleNode0.dump("", stringWriter0);
      StringWriter stringWriter1 = new StringWriter(48);
      stringWriter0.close();
      JavaParser javaParser0 = new JavaParser("<");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-1792749739));
      simpleNode1.dump("<", stringWriter0);
      simpleNode1.setIdentifier(">=");
      // Undeclared exception!
      try { 
        simpleNode1.dump("ClassOrInterfaceBodyDeclaration", stringWriter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1792749739
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("Y&r@\"3s.rVZnxl");
      try { 
        javaParser0.FieldDeclaration(0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      String string0 = "*rshft";
      simpleNode0.jjtSetParent((Node) null);
      StringWriter stringWriter0 = new StringWriter(498);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "*rshft", 498, 498);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5140966973399504
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(19);
      simpleNode0.setIdentifier("<");
      simpleNode0.setIdentifier(">=");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("io;5'311ZP|/[eti9n=", stringWriter0);
      simpleNode0.dump("<", stringWriter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.dump("io;5'311ZP|/[eti9n=", stringWriter0);
      simpleNode0.dump("io;5'311ZP|/[eti9n=", stringWriter0);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) simpleNode0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1323);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      arrayList0.add("]]n86n}XaXO");
      SimpleNode simpleNode1 = new SimpleNode(0);
      arrayList0.remove((Object) simpleNode1);
      arrayList0.iterator();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.jjtOpen();
      simpleNode0.jjtOpen();
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetNumChildren();
      String string0 = null;
      StringWriter stringWriter0 = new StringWriter();
      char char0 = '2';
      // Undeclared exception!
      try { 
        stringWriter0.write((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5634196115136338
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("jC;9");
      simpleNode0.jjtClose();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(985);
      simpleNode0.jjtAddChild((Node) null, 985);
      simpleNode0.toString();
      StringWriter stringWriter1 = stringWriter0.append('`');
      simpleNode0.dump("1a%TH_", stringWriter1);
      StringWriter stringWriter2 = new StringWriter();
      stringWriter1.append((CharSequence) "jC;9");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SimpleNode simpleNode1 = new SimpleNode((-2517));
      simpleNode1.dump("jC;9", stringWriter1);
      assertEquals("\u03D9`<VariableDeclarator>\n  <identifier>jC;9</identifier>\n</VariableDeclarator>\njC;9", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5047899870795486
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier("<");
      SimpleNode simpleNode1 = new SimpleNode(9);
      simpleNode0.jjtAddChild(simpleNode1, 9);
      simpleNode0.setIdentifier(">=");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<", stringWriter0);
      simpleNode0.identifiers = arrayList0;
      simpleNode0.dump(">=", stringWriter0);
      char[] charArray0 = new char[9];
      charArray0[0] = '&';
      charArray0[1] = 'R';
      simpleNode0.jjtAddChild(simpleNode1, 412);
      StringWriter stringWriter1 = stringWriter0.append('s');
      simpleNode1.dump("VD%/4J2R%/cWNAqeh", stringWriter0);
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = stringWriter1.append((CharSequence) "VD%/4J2R%/cWNAqeh");
      SimpleNode simpleNode2 = new SimpleNode(9);
      simpleNode2.id = 1;
      simpleNode1.dump("<=", stringWriter1);
      simpleNode1.dump("<=", stringWriter3);
      simpleNode1.dump("<=", stringWriter0);
      assertEquals("<EnumBody>\n  <identifier>*lt</identifier>\n  <identifier>*ge</identifier>\n</EnumBody>\n<EnumBody></EnumBody>\nsVD%/4J2R%/cWNAqeh", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(12);
      simpleNode0.jjtAddChild((Node) null, 12);
      SimpleNode simpleNode1 = new SimpleNode((-1));
      ArrayList<String> arrayList0 = new ArrayList<String>();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2676);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        jJTJavaParserState0.rootNode();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4349442022582592
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("jC;9");
      simpleNode0.jjtClose();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(985);
      simpleNode0.jjtAddChild((Node) null, 985);
      StringWriter stringWriter1 = stringWriter0.append('`');
      simpleNode0.dump("1a%TH_", stringWriter1);
      StringWriter stringWriter2 = new StringWriter();
      stringWriter1.append((CharSequence) "jC;9");
      SimpleNode simpleNode1 = new SimpleNode((-2517));
      Node[] nodeArray0 = new Node[0];
      simpleNode1.children = nodeArray0;
      simpleNode1.dump("jC;9", stringWriter1);
      simpleNode0.dump("1a%TH_", stringWriter0);
      assertEquals(986, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("}");
      SimpleNode simpleNode1 = new SimpleNode(1);
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("}", stringWriter0);
      SimpleNode simpleNode2 = new SimpleNode(1);
      assertFalse(simpleNode2.equals((Object)simpleNode1));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier("");
      simpleNode0.setIdentifier(">=");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">=", stringWriter0);
      simpleNode0.dump("", stringWriter0);
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<EnumBody>\n  <identifier>*ge</identifier>\n</EnumBody>\n<EnumBody>\n  <identifier>*ge</identifier>\n</EnumBody>\n<EnumBody>\n  <identifier>*ge</identifier>\n</EnumBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("\"!\"");
      simpleNode0.setIdentifier("&");
      simpleNode0.setIdentifier((String) null);
      StringWriter stringWriter0 = new StringWriter(0);
      // Undeclared exception!
      try { 
        simpleNode0.dump("gKzKF{fss_;", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("{");
      simpleNode0.setIdentifier("Q*R)?nBr");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("4N#~C@");
      simpleNode0.dump("#\"jf1uh6PI3g", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode((-1006));
      assertFalse(simpleNode1.equals((Object)simpleNode0));
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      simpleNode0.setIdentifier("<<");
      simpleNode0.setIdentifier(", column ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      JavaParser javaParser0 = new JavaParser(", column ");
      simpleNode0.parser = javaParser0;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(", column ");
      simpleNode0.dump("<", stringWriter0);
      simpleNode0.dump(", column ", stringWriter0);
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList1.add(", column ");
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals(", column <ClassOrInterfaceBody>\n  <identifier>*lshft</identifier>\n  <identifier>, column </identifier>\n</ClassOrInterfaceBody>\n<ClassOrInterfaceBody>\n  <identifier>*lshft</identifier>\n  <identifier>, column </identifier>\n</ClassOrInterfaceBody>\n<ClassOrInterfaceBody>\n  <identifier>*lshft</identifier>\n  <identifier>, column </identifier>\n  <identifier>, column </identifier>\n</ClassOrInterfaceBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier("<");
      simpleNode0.setIdentifier(">=");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.dump(">=", stringWriter0);
      simpleNode0.dump(">=", stringWriter0);
      simpleNode0.dump(">=", stringWriter0);
      simpleNode0.identifiers.add("&&");
      simpleNode0.dump("@,8NNA};@_H-", stringWriter0);
      assertEquals("<EnumBody>\n  <identifier>*amp</identifier>\n</EnumBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.355712859746894
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      simpleNode0.setIdentifier("<");
      simpleNode0.setIdentifier(">");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("<");
      simpleNode0.dump("", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.close();
      simpleNode0.dump(">", stringWriter0);
      simpleNode0.dump((String) null, stringWriter1);
      simpleNode0.dump("", stringWriter0);
      assertEquals("<<ClassOrInterfaceBody>\n  <identifier>*lt</identifier>\n  <identifier>*gt</identifier>\n</ClassOrInterfaceBody>\n<ClassOrInterfaceBody>\n  <identifier>*lt</identifier>\n  <identifier>*gt</identifier>\n</ClassOrInterfaceBody>\n<ClassOrInterfaceBody>\n  <identifier>*lt</identifier>\n  <identifier>*gt</identifier>\n</ClassOrInterfaceBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      simpleNode0.id = 17;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.setIdentifier("<=");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("CastLookahead", stringWriter0);
      simpleNode0.dump(">=", stringWriter0);
      arrayList1.add("\"static\"");
      simpleNode0.dump("\"static\"", stringWriter0);
      assertEquals("<VariableDeclarator>\n  <identifier>*le</identifier>\n</VariableDeclarator>\n<VariableDeclarator>\n  <identifier>*le</identifier>\n</VariableDeclarator>\n<VariableDeclarator>\n  <identifier>*le</identifier>\n</VariableDeclarator>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      SimpleNode simpleNode1 = new SimpleNode(17);
      simpleNode1.setIdentifier("<=");
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<=", stringWriter0);
      simpleNode0.dump("^FDdR", stringWriter0);
      JavaParser javaParser0 = new JavaParser("Java Parser Version 1.1:  Reading from standard input . . .");
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 17);
      simpleNode2.jjtAddChild(simpleNode1, 17);
      arrayList0.add(">>");
      simpleNode0.dump("*gt", stringWriter0);
      assertEquals("<VariableDeclarator>\n  <identifier>*rshft</identifier>\n</VariableDeclarator>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      simpleNode0.setIdentifier("<");
      simpleNode0.setIdentifier(";");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("<LETTER>");
      simpleNode0.dump(";", stringWriter0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) ";");
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "PrimaryPrefix");
      stringWriter0.close();
      simpleNode0.dump("^PyY%|dBD2^\"D?LB,/W", stringWriter2);
      assertEquals("<LETTER><ClassOrInterfaceBody>\n  <identifier>*lt</identifier>\n</ClassOrInterfaceBody>\n;PrimaryPrefix<ClassOrInterfaceBody>\n  <identifier>*lt</identifier>\n</ClassOrInterfaceBody>\n", stringWriter2.toString());
      assertEquals("<LETTER><ClassOrInterfaceBody>\n  <identifier>*lt</identifier>\n</ClassOrInterfaceBody>\n;PrimaryPrefix<ClassOrInterfaceBody>\n  <identifier>*lt</identifier>\n</ClassOrInterfaceBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      String string0 = ">=";
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<", stringWriter0);
      simpleNode0.dump(">=", stringWriter0);
      simpleNode0.dump("<", stringWriter0);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) ">=", 412, 63);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
