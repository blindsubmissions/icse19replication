/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 12:26:05 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.io.SyncFailedException;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.ElementHandler;
import org.dom4j.QName;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.ElementStack;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXReader;
import org.dom4j.tree.DefaultDocument;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.xml.sax.EntityResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.HandlerBase;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("", true);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class  not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      sAXReader0.setValidation(false);
      try { 
        pipedInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader(",uXs'Np");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class ,uXs'Np not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = sAXReader0.isStringInternEnabled();
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(boolean0);
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      sAXReader0.setEntityResolver(defaultHandler0);
      boolean boolean0 = sAXReader0.isIgnoreComments();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.createXMLReader();
      try { 
        parserAdapter0.parse("org.jaxen.expr.iter.IterableFollowingSiblingAxis");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // /home/ubuntu/evosuite_readability_gen/projects/62_dom4j/org.jaxen.expr.iter.IterableFollowingSiblingAxis (No such file or directory)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.70560245079815
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      MockFile mockFile0 = new MockFile("//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported");
      mockFile0.toURL();
      File file0 = MockFile.createTempFile("//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported", "I(,MY7C7?zwG!,}~h3", (File) mockFile0);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      documentFactory0.createEntity("*-e{ZN\"p#L", "http://xml.org/sax/features/string-interning");
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      StringReader stringReader0 = new StringReader("//tmp/[(DefaultXPath): 0$a><](@");
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.resolveEntity((String) null, "M-iLnS");
      try { 
        sAXReader0.read((InputSource) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader0.configureReader(parserAdapter0, defaultHandler2_0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.76162571219778
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      xMLReaderAdapter0.endPrefixMapping("//tmp/foo.bar/tmp/add(int,Object) unsupported0add(int,Object) unsupported0/tmp/add(int,Object) unsupported0add(int,Object) unsupported");
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("2:E", "//tmp/foo.bar/tmp/add(int,Object) unsupported0add(int,Object) unsupported0/tmp/add(int,Object) unsupported0add(int,Object) unsupported", 58, "2:E", uRLStreamHandler0);
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      EntityResolver entityResolver0 = sAXReader0.createDefaultEntityResolver((String) null);
      sAXReader0.setEntityResolver(entityResolver0);
      MockFile mockFile0 = new MockFile("//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported0/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/I(,MY7C7?zwG!,}~h3/[I#a0]edO$s)c8Gkw");
      try { 
        MockURI.URI("//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported", (String) null, "//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported0/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/I(,MY7C7?zwG!,}~h3/[I#a0]edO$s)c8Gkw", (-678), "//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported0/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/I(,MY7C7?zwG!,}~h3/[I#a0]edO$s)c8Gkw", (String) null, "//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 117: //tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported://[//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported0/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/I(,MY7C7?zwG!,}~h3/[I#a0]edO$s)c8Gkw]:-678//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object)%20unsupported0add(int,Object)%20unsupported/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object)%20unsupported0add(int,Object)%20unsupported/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object)%20unsupported0add(int,Object)%20unsupported0/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/I(,MY7C7%3FzwG!,%7D~h3/%5BI%23a0%5DedO$s)c8Gkw#//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object)%20unsupported0add(int,Object)%20unsupported
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertNotNull(xMLReader0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.removeHandler("N");
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.setStripWhitespaceText(false);
      String string0 = null;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      ElementStack elementStack0 = new ElementStack();
      elementStack0.getDispatchHandler();
      sAXReader0.setDispatchHandler((DispatchHandler) null);
      SAXReader sAXReader1 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      MockFile mockFile0 = new MockFile("//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported/09%F7009%F7");
      mockFile0.toURL();
      MockFile.createTempFile("//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported/09%F7009%F7", "//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported/09%F7009%F7", (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setIgnoreComments(false);
      HandlerBase handlerBase0 = new HandlerBase();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.7660742220974046
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      String string0 = "//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported";
      try { 
        sAXReader0.read("//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/g\"t{$w?7QM)_4[1@/BJ{phT{+K60_nht#");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: //home/ubuntu/evosuite_readability_gen/projects/62_dom4j/g\"t{$w?7QM)_4[1@/BJ{phT{+K60_nht# Nested exception: no protocol: //home/ubuntu/evosuite_readability_gen/projects/62_dom4j/g\"t{$w?7QM)_4[1@/BJ{phT{+K60_nht#
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.70560245079815
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported0/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/I(,MY7C7?zwG!,}~h3/[I#a0]edO$s)c8Gkw");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported");
      MockFile mockFile0 = new MockFile("//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported");
      mockFile0.toURL();
      xMLReaderAdapter0.setErrorHandler(xMLFilterImpl0);
      File file0 = MockFile.createTempFile("//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported", "//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/I(,MY7C7?zwG!,}~h3/[I#a0]edO$s)c8Gkw", (File) mockFile0);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported0/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/I(,MY7C7?zwG!,}~h3/[I#a0]edO$s)c8Gkw : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7660742220974046
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      xMLReaderAdapter0.endDocument();
      MockFile mockFile0 = new MockFile("I(,MY7C7?zwG!,}~h3");
      mockFile0.toURL();
      MockFile.createTempFile("http://xml.org/sax/features/namespace-prefixes", ">lcs|xEpG-x9}9", (File) mockFile0);
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      File file0 = MockFile.createTempFile("//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported/org.dom4j.tree.DefaultCDATA0I(,MY7C7?zwG!,}~h3", "http://xml.org/sax/features/namespace-prefixes");
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.createDefaultEntityResolver("//tmp/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported1I(,MY7C7?zwG!,}~h3");
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.createDefaultEntityResolver("");
      MockFile mockFile0 = new MockFile("//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported", "");
      MockURL.getFileExample();
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported", (File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.createDefaultEntityResolver("org.dom4j.util.UserDataAttribute");
      sAXReader0.createDefaultEntityResolver("Error on line ");
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      File file0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.jaxen.function.SubstringBeforeFunction");
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      sAXReader0.setXMLReader(parserAdapter0);
      // Undeclared exception!
      try { 
        sAXReader0.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DocumentFactory documentFactory0 = null;
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null, false);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl1);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      sAXReader0.setMergeAdjacentText(true);
      sAXReader0.getEncoding();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      try { 
        xMLFilterImpl1.getFeature(" [DocumentType: ");
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature:  [DocumentType: 
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      boolean boolean0 = true;
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, true);
      int int0 = (-3498);
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLFilterImpl1);
      try { 
        sAXReader0.configureReader(xMLFilterImpl0, sAXContentHandler0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@3d62822a Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      sAXReader0.createContentHandler(parserAdapter0);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7306332123896766
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("org.dom4j.dom.DOMText");
      try { 
        sAXReader0.read((Reader) stringReader0, "org.dom4j.dom.DOMText");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/evosuite_readability_gen/projects/62_dom4j/org.dom4j.dom.DOMText : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.setStringInternEnabled(false);
      // Undeclared exception!
      try { 
        MockFile.createTempFile("I", "//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported/I(,MY7C7?zwG!,}~h30org.dom4j.io.SAXReader$SAXEntityResolver/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported1http:/xml.org/sax/features/string-interning");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SAXReader sAXReader0 = new SAXReader(true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      sAXReader0.resetHandlers();
      try { 
        MockFile.createTempFile("kA/", "kA/");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      dispatchHandler0.removeHandler("//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported/09%F7009%F7/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported/09%F7009%F70org.dom4j.io.SAXReader$SAXEntityResolver");
      sAXReader0.addHandler("//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported/09%F7009%F7/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported/09%F7009%F70org.dom4j.io.SAXReader$SAXEntityResolver", (ElementHandler) null);
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.766074222097405
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      MockFile mockFile0 = new MockFile("//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported");
      mockFile0.toURL();
      File file0 = MockFile.createTempFile("//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported", "I(,MY7C7?zwG!,}~h3", (File) mockFile0);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.7306332123896766
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      xMLReaderAdapter0.skippedEntity("//tmp/iVc]G8Q#U\"VQSPSx 0SwL");
      StringReader stringReader0 = new StringReader("//tmp/iVc]G8Q#U\"VQSPSx 0SwL");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "F";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "F");
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      sAXReader0.getErrorHandler();
      parserAdapter0.setErrorHandler((ErrorHandler) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "F");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      // Undeclared exception!
      try { 
        xMLFilterImpl0.parse((InputSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No parent for filter
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      try { 
        sAXReader0.setProperty("Y1wgT#Qx3*J<", xMLFilterImpl0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: Y1wgT#Qx3*J<
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, false);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isValidating());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.7660742220974046
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
          ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
          SAXReader sAXReader0 = new SAXReader(parserAdapter0);
          XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
          sAXReader0.setEntityResolver(xMLFilterImpl0);
          MockFile mockFile0 = new MockFile("//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported");
          mockFile0.toURL();
          MockFile.createTempFile("//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported", "//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/I(,MY7C7?zwG!,}~h3/[I#a0]edO$s)c8Gkw", (File) mockFile0);
          try { 
            sAXReader0.read((InputStream) null, "//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported");
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"ftpClientProvider\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // sun.net.ftp.FtpClientProvider.<init>(FtpClientProvider.java:60)
             // sun.net.ftp.impl.DefaultFtpClientProvider.<init>(DefaultFtpClientProvider.java:31)
             // sun.net.ftp.FtpClientProvider$1.run(FtpClientProvider.java:151)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.ftp.FtpClientProvider.provider(FtpClientProvider.java:141)
             // sun.net.ftp.FtpClient.create(FtpClient.java:108)
             // sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:286)
             // sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:400)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.xml.sax.helpers.XMLReaderAdapter.parse(XMLReaderAdapter.java:249)
             // org.xml.sax.helpers.ParserAdapter.parse(ParserAdapter.java:430)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:371)
             // sun.reflect.GeneratedMethodAccessor305.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //  Nested exception: Security manager blocks (\"java.lang.RuntimePermission\" \"ftpClientProvider\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // sun.net.ftp.FtpClientProvider.<init>(FtpClientProvider.java:60)
             // sun.net.ftp.impl.DefaultFtpClientProvider.<init>(DefaultFtpClientProvider.java:31)
             // sun.net.ftp.FtpClientProvider$1.run(FtpClientProvider.java:151)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.ftp.FtpClientProvider.provider(FtpClientProvider.java:141)
             // sun.net.ftp.FtpClient.create(FtpClient.java:108)
             // sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:286)
             // sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:400)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.xml.sax.helpers.XMLReaderAdapter.parse(XMLReaderAdapter.java:249)
             // org.xml.sax.helpers.ParserAdapter.parse(ParserAdapter.java:430)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:371)
             // sun.reflect.GeneratedMethodAccessor305.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.dom4j.io.SAXReader", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      sAXReader0.getEntityResolver();
      DefaultDocument defaultDocument0 = new DefaultDocument("http://xml.org/sax/handlers/LexicalHandler");
      assertFalse(defaultDocument0.supportsParent());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      try { 
        sAXReader0.setXMLReaderClassName("//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class //tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
          SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver(" : ");
          InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("http://xml.org/sax/features/string-interning", "http://xml.org/sax/features/string-interning");
          // Undeclared exception!
          try { 
            xMLReaderAdapter0.parse(inputSource0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"xml.org\" \"resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1048)
             // java.net.InetAddress.getAllByName0(InetAddress.java:1268)
             // java.net.InetAddress.getAllByName(InetAddress.java:1192)
             // java.net.InetAddress.getAllByName(InetAddress.java:1126)
             // java.net.InetAddress.getByName(InetAddress.java:1076)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1010)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1008)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.www.protocol.http.HttpURLConnection.getHostAndPort(HttpURLConnection.java:1007)
             // sun.net.www.protocol.http.HttpURLConnection.URLtoSocketPermission(HttpURLConnection.java:1075)
             // sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1477)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.xml.sax.helpers.XMLReaderAdapter.parse(XMLReaderAdapter.java:249)
             // sun.reflect.GeneratedMethodAccessor131.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      DefaultDocument defaultDocument0 = new DefaultDocument("");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("@QIxW;u5a/C");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("", "");
      assertNotNull(inputSource0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      MockFile mockFile0 = new MockFile("http://www.w3.org/XML/1998/namespace");
      sAXReader0.setMergeAdjacentText(true);
      MockFile mockFile1 = null;
      try {
        mockFile1 = new MockFile(mockFile0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      try { 
        sAXReader0.setFeature("f+{!CG!2I", false);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature: f+{!CG!2I
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setDefaultHandler((ElementHandler) null);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver(" : ");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("http://xml.org/sax/features/string-interning", "//tmp/GA-<B=dAx0.tmp");
      try { 
        xMLReaderAdapter0.parse(inputSource0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol:  : //tmp/GA-<B=dAx0.tmp
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      String string0 = "I(,MY7C7?zwG!,}~h3";
      MockFile mockFile0 = new MockFile("//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      sAXReader0.setDocumentFactory(defaultDocumentFactory0);
      try { 
        MockURL.URL("//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: //home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.76162571219778
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      String string0 = "//tmp/foo.bar/tmp/add(int,Object) unsupported0add(int,Object) unsupported0/tmp/add(int,Object) unsupported0add(int,Object) unsupported";
      xMLReaderAdapter0.endPrefixMapping("//tmp/foo.bar/tmp/add(int,Object) unsupported0add(int,Object) unsupported0/tmp/add(int,Object) unsupported0add(int,Object) unsupported");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        sAXReader0.read((InputStream) pipedInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected Nested exception: Pipe not connected
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          SAXReader sAXReader0 = new SAXReader();
          DefaultHandler defaultHandler0 = new DefaultHandler();
          defaultHandler0.endDocument();
          sAXReader0.setEntityResolver(defaultHandler0);
          String string0 = "EIJs";
          XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
          XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
          sAXReader0.setXMLFilter(xMLFilterImpl1);
          DefaultDocument defaultDocument0 = new DefaultDocument("EIJs");
          URL uRL0 = MockURL.getHttpExample();
          try { 
            sAXReader0.read(uRL0);
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"www.someFakeButWellFormedURL.org\" \"resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1048)
             // java.net.InetAddress.getAllByName0(InetAddress.java:1268)
             // java.net.InetAddress.getAllByName(InetAddress.java:1192)
             // java.net.InetAddress.getAllByName(InetAddress.java:1126)
             // java.net.InetAddress.getByName(InetAddress.java:1076)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1010)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1008)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.www.protocol.http.HttpURLConnection.getHostAndPort(HttpURLConnection.java:1007)
             // sun.net.www.protocol.http.HttpURLConnection.URLtoSocketPermission(HttpURLConnection.java:1075)
             // sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1477)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.xml.sax.helpers.XMLFilterImpl.parse(XMLFilterImpl.java:357)
             // org.xml.sax.helpers.XMLFilterImpl.parse(XMLFilterImpl.java:357)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor291.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //  Nested exception: Security manager blocks (\"java.net.SocketPermission\" \"www.someFakeButWellFormedURL.org\" \"resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1048)
             // java.net.InetAddress.getAllByName0(InetAddress.java:1268)
             // java.net.InetAddress.getAllByName(InetAddress.java:1192)
             // java.net.InetAddress.getAllByName(InetAddress.java:1126)
             // java.net.InetAddress.getByName(InetAddress.java:1076)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1010)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1008)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.www.protocol.http.HttpURLConnection.getHostAndPort(HttpURLConnection.java:1007)
             // sun.net.www.protocol.http.HttpURLConnection.URLtoSocketPermission(HttpURLConnection.java:1075)
             // sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1477)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.xml.sax.helpers.XMLFilterImpl.parse(XMLFilterImpl.java:357)
             // org.xml.sax.helpers.XMLFilterImpl.parse(XMLFilterImpl.java:357)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor291.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.dom4j.io.SAXReader", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity((String) null, "lY0H&Q0?=X/}e7,");
      // Undeclared exception!
      try { 
        xMLFilterImpl0.parse(inputSource0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No parent for filter
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("", (String) null);
      assertNotNull(inputSource0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      DefaultDocumentFactory.getInstance();
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      sAXReader0.configureReader(xMLFilterImpl0, defaultHandler0);
      MockFile.createTempFile("//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/org.dom4j.util.IndexedElement/org.dom4j.util.IndexedElement0/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsuported/I(,MY7C7?zwG!,}~h30org.dom4j.io.SAXReader$SAXEntityesolver/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported0I(,MY7C7?zwG!,}~h30/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported0(,MY7C7?zwG!,}~h3", "KU25ZtdFAzoyxR8jll=");
      try { 
        MockURL.URL("v");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: v
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.82337540094768
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(parserAdapter0);
      sAXReader0.setErrorHandler(xMLFilterImpl1);
      MockFile mockFile0 = new MockFile("//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported");
      mockFile0.toURL();
      File file0 = MockFile.createTempFile("//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported", "I(,MY7C7?zwG!,}~h3", (File) mockFile0);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/(k-Oq/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported0/home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported0org.dom4j.dom.DOMText");
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      sAXReader0.setEncoding("org.jaxen.expr.DefaultXPathFactory");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      parserAdapter0.getEntityResolver();
      sAXReader0.setEntityResolver((EntityResolver) null);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      parserAdapter0.getEntityResolver();
      try { 
        sAXReader0.read("org.dom4j.dom.DOMText");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/evosuite_readability_gen/projects/62_dom4j/org.dom4j.dom.DOMText (No such file or directory) Nested exception: /home/ubuntu/evosuite_readability_gen/projects/62_dom4j/org.dom4j.dom.DOMText (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      String string0 = "^+@8n]?U5+z,8";
      sAXReader0.setEncoding("^+@8n]?U5+z,8");
      StringReader stringReader0 = new StringReader("^+@8n]?U5+z,8");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      sAXReader0.setEncoding("&zc-$5lK'sLmP'9.");
      String string0 = "I(,MY7C7?zwG!.}~h3";
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        sAXReader0.read((InputStream) pipedInputStream0, "I(,MY7C7?zwG!.}~h3");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Invalid encoding name \"&ZC-$5LK'SLMP'9.\". Nested exception: Invalid encoding name \"&ZC-$5LK'SLMP'9.\".
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      String string0 = "//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/add(int,Object) unsupported/add(int,Object) unsupported0add(int,Object) unsupported";
      String string1 = "I(,MY7C7?zwG!,}~h3";
      MockFile mockFile0 = new MockFile("//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported");
      mockFile0.getCanonicalPath();
      URL uRL0 = mockFile0.toURL();
      sAXReader0.setEncoding("/tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported");
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported (No such file or directory) Nested exception: /tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.7660742220974046
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEncoding("http://xml.org/sax/features/validation");
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      MockFile mockFile0 = new MockFile("//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported");
      mockFile0.toURL();
      xMLReaderAdapter0.setErrorHandler(xMLFilterImpl0);
      File file0 = MockFile.createTempFile("//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported", "//home/ubuntu/evosuite_readability_gen/projects/62_dom4j/I(,MY7C7?zwG!,}~h3/[I#a0]edO$s)c8Gkw", (File) mockFile0);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Invalid encoding name \"HTTP://XML.ORG/SAX/FEATURES/VALIDATION\". Nested exception: Invalid encoding name \"HTTP://XML.ORG/SAX/FEATURES/VALIDATION\".
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      sAXReader0.setEncoding("&zc-$5lK'sLmP'9.");
      String string0 = "I(,MY7C7?zwG!,}~h3";
      MockFile mockFile0 = new MockFile("//tmp/tmp/lookupNamespaceURI0lookupNamespaceURI0/tmp/http:/xml.org/sax/features/string-interning0/tmp/add(int,Object) unsupported0add(int,Object) unsupported");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        sAXReader0.read((InputStream) pipedInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Invalid encoding name \"&ZC-$5LK'SLMP'9.\". Nested exception: Invalid encoding name \"&ZC-$5LK'SLMP'9.\".
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      sAXReader0.setEncoding("org.jaxen.expr.DefaultXPathFactory");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      String string0 = "org.dom4j.dom.DOMText";
      StringReader stringReader0 = new StringReader("org.dom4j.dom.DOMText");
      try { 
        sAXReader0.read((Reader) stringReader0, "org.dom4j.dom.DOMText");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/evosuite_readability_gen/projects/62_dom4j/org.dom4j.dom.DOMText : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }
}
