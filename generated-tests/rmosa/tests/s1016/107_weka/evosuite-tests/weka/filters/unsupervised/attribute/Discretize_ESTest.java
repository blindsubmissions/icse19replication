/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 12:37:25 GMT 2018
 */

package weka.filters.unsupervised.attribute;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.DenseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.ProtectedProperties;
import weka.core.SparseInstance;
import weka.filters.AllFilter;
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.Discretize;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Discretize_ESTest extends Discretize_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.globalInfo();
      discretize0.getBinRangesString(73);
      double[][] doubleArray0 = new double[8][1];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 73;
      doubleArray1[3] = 1.0;
      doubleArray1[4] = (double) 73;
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = (double) 73;
      doubleArray2[1] = 73.0;
      doubleArray2[2] = (double) 73;
      doubleArray2[3] = (double) 73;
      double[] doubleArray3 = new double[4];
      doubleArray3[1] = 1.0;
      doubleArray3[3] = (double) 73;
      double[] doubleArray4 = new double[6];
      doubleArray4[0] = 1.0;
      doubleArray4[2] = (double) 73;
      doubleArray4[4] = (double) 73;
      doubleArray4[5] = (double) 73;
      doubleArray0[6] = doubleArray4;
      double[] doubleArray5 = new double[1];
      double[] doubleArray6 = new double[10];
      doubleArray0[7] = doubleArray6;
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0375911080918452
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getBinRangesString(3298);
      double[][] doubleArray0 = new double[15][4];
      discretize0.m_CutPoints = doubleArray0;
      discretize0.toString();
      discretize0.getBinRangesString(2);
      // Undeclared exception!
      try { 
        discretize0.getBinRangesString((-4711));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4711
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Discretize discretize0 = new Discretize("");
      discretize0.setUseEqualFrequency(false);
      // Undeclared exception!
      try { 
        discretize0.numPendingOutput();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9978527044124283
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[15][4];
      discretize0.m_CutPoints = doubleArray0;
      discretize0.getBinRangesString(2);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "(-inf-0],(0-0],(0-0],(0-0],(0-inf)";
      stringArray0[1] = "(-inf-0],(0-0],(0-0],(0-0],(0-inf)";
      stringArray0[2] = "(-inf-0],(0-0],(0-0],(0-0],(0-inf)";
      stringArray0[3] = "(-inf-0],(0-0],(0-0],(0-0],(0-inf)";
      stringArray0[4] = "(-inf-0],(0-0],(0-0],(0-0],(0-inf)";
      discretize0.setOptions(stringArray0);
      // Undeclared exception!
      try { 
        discretize0.getBinRangesString(3897);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3897
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.listOptions();
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Discretize discretize0 = new Discretize("_x*?%l{|JkV");
      String string0 = discretize0.binsTipText();
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
      assertEquals("Number of bins.", string0);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getCutPoints(0);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      int[] intArray0 = new int[3];
      int int0 = (-895);
      intArray0[0] = (-895);
      intArray0[2] = (-895);
      discretize0.setUseEqualFrequency(true);
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      DenseInstance denseInstance0 = null;
      try {
        denseInstance0 = new DenseInstance((-895));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.DenseInstance", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.setAttributeIndicesArray((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.084035845275547
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[15][4];
      discretize0.getOptions();
      discretize0.m_CutPoints = doubleArray0;
      int int0 = 2;
      discretize0.getBinRangesString(2);
      // Undeclared exception!
      try { 
        discretize0.getBinRangesString((-4711));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4711
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Discretize discretize0 = new Discretize("u`Vb+u=djP.");
      discretize0.useEqualFrequencyTipText();
      double[][] doubleArray0 = new double[20][2];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (-2112.76);
      doubleArray1[1] = (-2112.76);
      doubleArray1[2] = (-650.0);
      doubleArray1[3] = (-787.3005968446789);
      doubleArray1[4] = 1253.8433781068377;
      doubleArray1[6] = 1561.916987761734;
      doubleArray1[7] = 2936.8132486697777;
      doubleArray1[8] = (-2714.803467826);
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = 2936.8132486697777;
      doubleArray2[2] = 1561.916987761734;
      doubleArray2[3] = 1561.916987761734;
      doubleArray2[4] = (-650.0);
      doubleArray2[5] = 1253.8433781068377;
      doubleArray2[4] = (-2112.76);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[6];
      doubleArray3[0] = (-384.2177700685356);
      doubleArray3[1] = (-787.3005968446789);
      doubleArray3[2] = (-2714.803467826);
      doubleArray3[3] = 2936.8132486697777;
      doubleArray3[4] = (-787.3005968446789);
      doubleArray3[5] = (-0.1);
      doubleArray0[2] = doubleArray3;
      discretize0.m_CutPoints = doubleArray0;
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "";
      Discretize discretize0 = new Discretize("");
      discretize0.useBinNumbersTipText();
      Discretize discretize1 = new Discretize("Use bin numbers (eg BXofY) rather than ranges for for discretized attributes");
      discretize1.getDesiredWeightOfInstancesPerInterval();
      AllFilter allFilter0 = new AllFilter();
      // Undeclared exception!
      try { 
        allFilter0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "An averagable attribute must be ordered";
      stringArray0[8] = "An averagable attribute must be ordered";
      stringArray0[2] = "PU?q/1r5R6";
      stringArray0[4] = "An averagable attribute must be ordered";
      stringArray0[5] = "-M";
      stringArray0[7] = "An averagable attribute must be ordered";
      stringArray0[8] = "'dP";
      Discretize.main(stringArray0);
      System.setCurrentTimeMillis((-946L));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.input((Instance) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "pUK/";
      stringArray0[1] = "The instance: ";
      stringArray0[2] = "^V)r(K{O";
      stringArray0[3] = "-R";
      stringArray0[4] = " <file>\n";
      stringArray0[5] = "yu)>h3P";
      stringArray0[6] = "%[>^4Od) ";
      stringArray0[7] = "9G/";
      stringArray0[8] = "\tOptimize number of bins using leave-one-out estimate\n\tof estimated entropy (for equal-width discretization).\n\tIf this is set then the -B option will be ignored.";
      discretize0.setOptions(stringArray0);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Filter.makeCopies(discretize0, 3884);
      assertFalse(discretize0.getUseEqualFrequency());
      
      discretize0.m_UseEqualFrequency = true;
      discretize0.setInvertSelection(true);
      discretize0.getOptions();
      discretize0.makeBinaryTipText();
      assertTrue(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = (-1994091955);
      Discretize discretize0 = new Discretize("TQm2B[mpz\"ld%No9");
      discretize0.attributeIndicesTipText();
      // Undeclared exception!
      try { 
        discretize0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.getRevision();
      assertFalse(discretize0.getFindNumBins());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals("8964", string0);
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Discretize discretize0 = new Discretize("    // generate output format\n");
      String string0 = discretize0.invertSelectionTipText();
      assertEquals(10, discretize0.getBins());
      assertEquals("Set attribute selection mode. If false, only selected (numeric) attributes in the range will be discretized; if true, only non-selected attributes will be discretized.", string0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Discretize discretize0 = new Discretize("");
      String[] stringArray0 = discretize0.getOptions();
      assertEquals(4, stringArray0.length);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.findNumBinsTipText();
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertEquals("Optimize number of equal-width bins using leave-one-out. Doesn't work for equal-frequency binning", string0);
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-B";
      stringArray0[1] = "Set attribute selection mode. If false, only selected (numeric) attributes in the range will be discretized; if true, only non-selected attributes will be discretized.";
      stringArray0[2] = "Y";
      stringArray0[3] = "first-last";
      Filter.runFilter(discretize0, stringArray0);
      stringArray0[4] = "vyY";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"Set attribute selection mode. If false, only selected (numeric) attributes in the range will be discretized; if true, only non-selected attributes will be discretized.\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-M";
      stringArray0[1] = "_Y=uf6RF?E8t:2}sv+z";
      stringArray0[2] = "3DgA3N-";
      stringArray0[3] = "3DgA3N-";
      stringArray0[4] = "K@#7n?`|H";
      stringArray0[5] = "#zx_e5w4DJ|";
      stringArray0[6] = "R";
      stringArray0[7] = "%[.n";
      stringArray0[8] = "_Y=uf6RF?E8t:2}sv+z";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.085311145337958
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("c{L");
      arrayList0.add(attribute0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      Instances instances0 = new Instances("-----     ", arrayList0, 2);
      instances0.numDistinctValues(0);
      discretize0.setInputFormat(instances0);
      double[][] doubleArray0 = new double[3][7];
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "8t>n)g]o");
      discretize0.m_CutPoints = doubleArray0;
      discretize0.setMakeBinary(true);
      discretize0.setOutputFormat();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "-----     ");
      discretize0.setMakeBinary(false);
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // A nominal attribute (c{L) cannot have duplicate labels ('(0-0]').
         //
         verifyException("weka.core.Attribute", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 744.03038;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = 0.0;
      doubleArray1[5] = 0.0;
      doubleArray0[0] = doubleArray1;
      discretize0.m_CutPoints = doubleArray0;
      int int0 = 104;
      // Undeclared exception!
      try { 
        discretize0.getCutPoints(104);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 104
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.1575025164032584
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("c{L");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("-----     ", arrayList0, 2);
      discretize0.setInputFormat(instances0);
      double[][] doubleArray0 = new double[3][7];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
      discretize0.m_UseBinNumbers = true;
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "8t>n)g]o");
      discretize0.m_CutPoints = doubleArray0;
      discretize0.setOutputFormat();
      Random.setNextRandom(83);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setIgnoreClass(true);
      String[] stringArray0 = discretize0.getOptions();
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(7, stringArray0.length);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_FindNumBins = true;
      discretize0.getOptions();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setIgnoreClass(true);
      discretize0.m_MakeBinary = true;
      LinkedList<Attribute> linkedList0 = new LinkedList<Attribute>();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>(linkedList0);
      Instances instances0 = new Instances("n@^YcDr'v[?Cp_'5", arrayList0, 17);
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't ignore class when changing the number of attributes!
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setIgnoreClass(false);
      discretize0.m_MakeBinary = true;
      LinkedList<Attribute> linkedList0 = new LinkedList<Attribute>();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>(linkedList0);
      int int0 = 17;
      Discretize[] discretizeArray0 = new Discretize[1];
      discretizeArray0[0] = discretize0;
      linkedList0.toArray(discretizeArray0);
      Instances instances0 = new Instances("n@^YcDr'v[?Cp_'5", arrayList0, 17);
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // weka.filters.unsupervised.attribute.Discretize: No attributes!
         //
         verifyException("weka.core.Capabilities", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("q>bK\",TbpYu9Gq_Ms");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("@attribute", arrayList0, 0);
      discretize0.m_DesiredWeightOfInstancesPerInterval = (double) 2;
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getCapabilities();
      discretize0.m_NumBins = 3577;
      discretize0.m_UseEqualFrequency = true;
      Integer integer0 = new Integer(55);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.remove((Object) integer0);
      Attribute attribute0 = new Attribute("q>bK<,TbFYu9Gq_Ms");
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      arrayList1.add(attribute0);
      Instances instances0 = new Instances("Xo!l.U%Dn", arrayList1, 260);
      instances0.numDistinctValues(attribute0);
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      Random.setNextRandom(0);
      System.setCurrentTimeMillis(4);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.2928575904298043
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("PCzpcVuvp>f4");
      attribute0.getRevision();
      Attribute attribute1 = new Attribute("c{L");
      arrayList0.add(attribute1);
      Instances instances0 = new Instances("-----     ", arrayList0, 2);
      discretize0.setInputFormat(instances0);
      double[][] doubleArray0 = new double[3][7];
      double[] doubleArray1 = new double[4];
      String[] stringArray0 = new String[9];
      stringArray0[0] = "@attribute";
      stringArray0[1] = "@end";
      stringArray0[2] = "@relation";
      stringArray0[3] = "real";
      stringArray0[4] = "date";
      stringArray0[5] = "numeric";
      stringArray0[6] = "string";
      stringArray0[7] = "numeric";
      stringArray0[8] = "relational";
      discretize0.setOptions(stringArray0);
      doubleArray1[0] = (double) 2;
      doubleArray1[0] = (double) 3;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = (double) 3;
      doubleArray2[1] = (double) 2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[7];
      doubleArray3[0] = (double) 1;
      doubleArray3[1] = (double) 2;
      doubleArray3[3] = (double) 2;
      doubleArray3[4] = (double) 1;
      doubleArray3[6] = (double) 1;
      discretize0.m_CutPoints = doubleArray0;
      discretize0.getUseBinNumbers();
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // A nominal attribute (c{L) cannot have duplicate labels ('(0-0]').
         //
         verifyException("weka.core.Attribute", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.248009699724616
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("c7{<");
      arrayList0.add(attribute0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      Instances instances0 = new Instances("-----     ", arrayList0, 2);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2088.2;
      int[] intArray0 = new int[7];
      intArray0[0] = 4;
      intArray0[1] = 0;
      intArray0[2] = 4;
      intArray0[3] = 1;
      intArray0[4] = 3;
      intArray0[5] = 0;
      intArray0[6] = 1;
      SparseInstance sparseInstance0 = new SparseInstance(234.0903, doubleArray0, intArray0, 3);
      instances0.add((Instance) sparseInstance0);
      discretize0.setInputFormat(instances0);
      double[][] doubleArray1 = new double[2][7];
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "8t>n)g]o");
      discretize0.m_CutPoints = doubleArray1;
      discretize0.setMakeBinary(true);
      discretize0.setOutputFormat();
      DenseInstance denseInstance0 = new DenseInstance(3);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1);
      binarySparseInstance0.setValue(attribute0, 3466.0);
      discretize0.convertInstance(binarySparseInstance0);
      Random.setNextRandom(0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.559790691863402
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("PCzpcVuvp>f4");
      Attribute attribute1 = new Attribute("c*{h");
      arrayList0.add(attribute1);
      Instances instances0 = new Instances("-----     ", arrayList0, 2);
      discretize0.setInputFormat(instances0);
      discretize0.getUseBinNumbers();
      discretize0.setOutputFormat();
      discretize0.batchFinished();
      discretize0.setOutputFormat();
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 3;
      doubleArray0[4] = (double) 4;
      doubleArray0[5] = 1022.210750115973;
      doubleArray0[6] = (double) 2;
      SparseInstance sparseInstance0 = new SparseInstance(0, doubleArray0);
      discretize0.input(sparseInstance0);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning((-3039));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3039
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5665635186479503
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("PCzpcVuvp>f4");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("public class WekaWrapper", arrayList0, 0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      discretize0.setInputFormat(instances0);
      discretize0.isNewBatch();
      discretize0.calculateCutPoints();
      discretize0.setOutputFormat();
      discretize0.calculateCutPointsByEqualFrequencyBinning(0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (-237.2194535571);
      DenseInstance denseInstance0 = new DenseInstance(1088.0, doubleArray0);
      discretize0.input(denseInstance0);
      discretize0.convertInstance(denseInstance0);
      assertFalse(discretize0.isNewBatch());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6120386438561005
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Optimize number of bins using leave-one-out estimate\n\tof estimated entropy (for equal-width discretization).\n\tIf this is set then the -B option will be ignored.");
      Attribute attribute0 = new Attribute("c7{<");
      arrayList0.add(attribute0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("Capabilities.props");
      Instances instances0 = new Instances("-----     ", arrayList0, 2);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2088.2;
      int[] intArray0 = new int[7];
      intArray0[0] = 4;
      intArray0[1] = 0;
      intArray0[2] = 4;
      intArray0[3] = 1;
      intArray0[5] = 0;
      intArray0[6] = 1;
      SparseInstance sparseInstance0 = new SparseInstance(234.0903, doubleArray0, intArray0, 0);
      discretize0.setInputFormat(instances0);
      double[][] doubleArray1 = new double[2][7];
      FileSystemHandling.appendLineToFile(evoSuiteFile1, ".bsi");
      discretize0.m_CutPoints = doubleArray1;
      discretize0.setMakeBinary(true);
      discretize0.setOutputFormat();
      discretize0.calculateCutPoints();
      discretize0.batchFinished();
      discretize0.convertInstance(sparseInstance0);
      discretize0.calculateCutPoints();
      discretize0.isOutputFormatDefined();
      discretize0.calculateCutPoints();
      discretize0.batchFinished();
      // Undeclared exception!
      try { 
        discretize0.findNumBins(764);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 764
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_NumBins = 3509;
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("sV8r7QQ", 3509);
      SystemInUtil.addInputLine("numeric");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("@attribute", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      Random.setNextRandom(0);
      discretize0.getBinRangesString(0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      SystemInUtil.addInputLine("unknown attribute type in column ");
      discretize0.m_NumBins = 2404;
      Attribute attribute0 = new Attribute("eAg+f");
      arrayList0.add(attribute0);
      Attribute attribute1 = new Attribute("q>bK,TbpYu9Gq_Ms");
      Instances instances0 = new Instances("real", arrayList0, 121);
      discretize0.setInputFormat(instances0);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(4);
      discretize0.input((Instance) null);
      // Undeclared exception!
      try { 
        discretize0.input(binarySparseInstance0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Instance has no dataset assigned!!
         //
         verifyException("weka.core.RelationalLocator", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5585901346720081
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      ArrayList<Locale.LanguageRange> arrayList1 = new ArrayList<Locale.LanguageRange>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList1, (Collection<String>) linkedList0);
      Properties properties0 = new Properties();
      ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
      Attribute attribute0 = new Attribute("r]5:NLk$CFu|0QkE>(", list0, protectedProperties0);
      Attribute attribute1 = attribute0.copy("1uny1");
      arrayList0.add(attribute1);
      Attribute attribute2 = new Attribute("c{L");
      arrayList0.add(attribute2);
      Instances instances0 = new Instances("-----     ", arrayList0, 2);
      discretize0.setInputFormat(instances0);
      double[][] doubleArray0 = new double[3][7];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "8t>n)g]o");
      discretize0.m_CutPoints = doubleArray0;
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // A nominal attribute (c{L) cannot have duplicate labels ('(0-0]').
         //
         verifyException("weka.core.Attribute", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.9730014063936123
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "H`))b[S482S(z!");
      Discretize discretize0 = new Discretize();
      discretize0.setIgnoreClass(true);
      discretize0.setFindNumBins(true);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("$ar");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("$ar", arrayList0, 1);
      instances0.enumerateAttributes();
      discretize0.setInputFormat(instances0);
      discretize0.mayRemoveInstanceAfterFirstBatchDone();
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_FindNumBins = true;
      discretize0.m_NumBins = 3906;
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute(",?uY%b'Z", 3906);
      arrayList0.add(attribute0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Instances instances0 = new Instances("relational", arrayList0, 0);
      discretize0.setInputFormat(instances0);
      discretize0.getUseEqualFrequency();
      discretize0.m_NumBins = 4906;
      discretize0.calculateCutPoints();
      Discretize discretize1 = new Discretize();
      // Undeclared exception!
      try { 
        discretize1.calculateCutPoints();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "{?uY %b'Z");
      Discretize discretize0 = new Discretize();
      discretize0.m_NumBins = (-523);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      discretize0.isNewBatch();
      Attribute attribute0 = new Attribute("q>bK<,TbFYu9Gq_Ms");
      Object object0 = new Object();
      attribute0.equals(object0);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("relational", arrayList0, 0);
      attribute0.enumerateValues();
      instances0.setClass(attribute0);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning((-523));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.559790691863402
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("PCzpcVuvp>f4");
      Attribute attribute1 = new Attribute("c*{h");
      arrayList0.add(attribute1);
      Instances instances0 = new Instances("-----     ", arrayList0, 2);
      discretize0.setInputFormat(instances0);
      discretize0.getUseBinNumbers();
      discretize0.setOutputFormat();
      discretize0.batchFinished();
      discretize0.setOutputFormat();
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 3;
      doubleArray0[4] = (double) 4;
      doubleArray0[5] = 1022.210750115973;
      doubleArray0[6] = (double) 2;
      SparseInstance sparseInstance0 = new SparseInstance(0, doubleArray0);
      sparseInstance0.setMissing(0);
      discretize0.input(sparseInstance0);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning((-3039));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3039
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      discretize0.setInvertSelection(true);
      Attribute attribute0 = new Attribute("PCzpcVuvp>f4");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("real", arrayList0, 0);
      discretize0.setInputFormat(instances0);
      discretize0.isNewBatch();
      discretize0.calculateCutPoints();
      discretize0.setOutputFormat();
      discretize0.calculateCutPointsByEqualFrequencyBinning(0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 3;
      DenseInstance denseInstance0 = new DenseInstance(1, doubleArray0);
      discretize0.input(denseInstance0);
      discretize0.convertInstance(denseInstance0);
      discretize0.batchFinished();
      discretize0.calculateCutPoints();
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("q>bK\",TbpYu9Gq_Ms");
      Attribute attribute1 = new Attribute("@attribute");
      Attribute attribute2 = new Attribute("integer", (List<String>) null, 1);
      arrayList0.add(attribute2);
      Instances instances0 = new Instances("relational", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.getUseBinNumbers();
      discretize0.setOutputFormat();
      discretize0.batchFinished();
      discretize0.setOutputFormat();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 4;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = (double) 0;
      SparseInstance sparseInstance0 = new SparseInstance(2, doubleArray0);
      // Undeclared exception!
      try { 
        discretize0.input(sparseInstance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.StringLocator", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Object object0 = new Object();
      Attribute attribute0 = new Attribute("ez");
      arrayList0.add(attribute0);
      arrayList0.remove((Object) discretize0);
      Instances instances0 = new Instances(":Feo", arrayList0, 3);
      instances0.setClass(attribute0);
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("I71+");
      arrayList0.add(attribute0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      Instances instances0 = new Instances("-----     ", arrayList0, 2);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2088.2;
      instances0.setClass(attribute0);
      int[] intArray0 = new int[7];
      intArray0[0] = 4;
      intArray0[1] = 0;
      intArray0[2] = 4;
      intArray0[4] = 3;
      intArray0[5] = 0;
      instances0.remove((Object) evoSuiteFile0);
      intArray0[6] = 1;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1);
      instances0.add((Instance) binarySparseInstance0);
      discretize0.setInputFormat(instances0);
      double[][] doubleArray1 = new double[2][7];
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "8t>n)g]o");
      discretize0.m_CutPoints = doubleArray1;
      discretize0.setMakeBinary(true);
      discretize0.setOutputFormat();
      DenseInstance denseInstance0 = new DenseInstance(3);
      discretize0.convertInstance(binarySparseInstance0);
      System.setCurrentTimeMillis(2508L);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.1575025164032584
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("c{L");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("-----     ", arrayList0, 2);
      instances0.setClass(attribute0);
      discretize0.setInputFormat(instances0);
      double[][] doubleArray0 = new double[3][7];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "8t>n)g]o");
      discretize0.m_CutPoints = doubleArray0;
      discretize0.setOutputFormat();
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.030216795179228
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("eAg+f");
      arrayList0.add(attribute0);
      Attribute attribute1 = new Attribute("q>bK,TbpYu9Gq_Ms");
      arrayList0.add(attribute1);
      discretize0.getInvertSelection();
      Instances instances0 = new Instances("real", arrayList0, 121);
      discretize0.setInputFormat(instances0);
      discretize0.isNewBatch();
      discretize0.calculateCutPoints();
      discretize0.setMakeBinary(true);
      arrayList0.add(attribute1);
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.530465263932352
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("PCzpcVuvp>4");
      Attribute attribute1 = new Attribute("relational");
      arrayList0.add(attribute1);
      Instances instances0 = new Instances("-----     ", arrayList0, 2);
      discretize0.setInputFormat(instances0);
      discretize0.getUseBinNumbers();
      discretize0.setOutputFormat();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      discretize0.batchFinished();
      discretize0.setOutputFormat();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
      FileSystemHandling.createFolder(evoSuiteFile0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 3;
      double[][] doubleArray1 = new double[3][0];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      discretize0.calculateCutPointsByEqualWidthBinning(0);
      doubleArray1[2] = doubleArray0;
      discretize0.m_CutPoints = doubleArray1;
      doubleArray0[4] = (double) 4;
      doubleArray0[5] = 1022.210750115973;
      doubleArray0[6] = (double) 2;
      SparseInstance sparseInstance0 = new SparseInstance(0, doubleArray0);
      Attribute attribute2 = new Attribute("R^Ql-LH+UL{n)~!sw", "'All'");
      sparseInstance0.value(attribute2);
      discretize0.input(sparseInstance0);
      System.setCurrentTimeMillis(1);
      discretize0.setOutputFormat();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning((-3039));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3039
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("c7{<");
      arrayList0.add(attribute0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      Instances instances0 = new Instances("-----     ", arrayList0, 2);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2088.2;
      int[] intArray0 = new int[7];
      intArray0[0] = 4;
      intArray0[1] = 0;
      intArray0[2] = 4;
      intArray0[3] = 1;
      intArray0[5] = 0;
      intArray0[6] = 1;
      SparseInstance sparseInstance0 = new SparseInstance(234.0903, doubleArray0, intArray0, 0);
      instances0.add((Instance) sparseInstance0);
      discretize0.setInputFormat(instances0);
      double[][] doubleArray1 = new double[2][7];
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "8t>n)g]o");
      discretize0.m_CutPoints = doubleArray1;
      discretize0.setMakeBinary(true);
      discretize0.setOutputFormat();
      DenseInstance denseInstance0 = new DenseInstance(3);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1);
      discretize0.setMakeBinary(false);
      binarySparseInstance0.setValue(attribute0, 3466.0);
      discretize0.convertInstance(binarySparseInstance0);
      Random.setNextRandom(0);
      discretize0.batchFinished();
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("PCzpcVuvC>4");
      Attribute attribute1 = new Attribute("relational");
      arrayList0.add(attribute1);
      Instances instances0 = new Instances("-----     ", arrayList0, 2);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "PCzpcVuvC>4";
      objectArray0[1] = (Object) "-----     ";
      objectArray0[2] = (Object) discretize0;
      instances0.toArray(objectArray0);
      discretize0.setInputFormat(instances0);
      discretize0.getUseBinNumbers();
      discretize0.setOutputFormat();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      discretize0.batchFinished();
      discretize0.setOutputFormat();
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 2;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 3;
      double[][] doubleArray1 = new double[4][0];
      doubleArray1[2] = doubleArray0;
      discretize0.calculateCutPointsByEqualWidthBinning(0);
      doubleArray1[2] = doubleArray1[1];
      discretize0.m_CutPoints = doubleArray1;
      doubleArray0[4] = (double) 4;
      doubleArray0[5] = 1022.210750115973;
      doubleArray0[6] = (double) 2;
      SparseInstance sparseInstance0 = new SparseInstance((byte)44);
      sparseInstance0.deleteAttributeAt(83);
      discretize0.input(sparseInstance0);
      System.setCurrentTimeMillis(1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "of");
      System.setCurrentTimeMillis(455L);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "H`))b[S482S(z!");
      Discretize discretize0 = new Discretize();
      discretize0.setFindNumBins(true);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      discretize0.m_UseEqualFrequency = true;
      Attribute attribute0 = new Attribute("$ar");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("$ar", arrayList0, 1);
      discretize0.isOutputFormatDefined();
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bin number optimization in conjunction with equal-frequency binning not implemented.
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("c{L");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("-----     ", arrayList0, 2);
      discretize0.setInputFormat(instances0);
      double[][] doubleArray0 = new double[3][7];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "8t>n)g]o");
      discretize0.m_CutPoints = doubleArray0;
      discretize0.setMakeBinary(true);
      discretize0.setOutputFormat();
      DenseInstance denseInstance0 = new DenseInstance(3);
      discretize0.convertInstance(denseInstance0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("c7{<");
      arrayList0.add(attribute0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      Instances instances0 = new Instances("-----     ", arrayList0, 2);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2088.2;
      int[] intArray0 = new int[7];
      intArray0[0] = 4;
      intArray0[1] = 0;
      intArray0[2] = 4;
      discretize0.getCapabilities(instances0);
      intArray0[4] = 3;
      intArray0[5] = 0;
      intArray0[6] = 1;
      SparseInstance sparseInstance0 = new SparseInstance(1, doubleArray0, intArray0, 3);
      instances0.add((Instance) sparseInstance0);
      discretize0.setInputFormat(instances0);
      double[][] doubleArray1 = new double[2][7];
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "8t>n)g]o");
      discretize0.m_CutPoints = doubleArray1;
      sparseInstance0.isMissing(attribute0);
      discretize0.setMakeBinary(true);
      discretize0.setOutputFormat();
      DenseInstance denseInstance0 = new DenseInstance(3);
      discretize0.convertInstance(sparseInstance0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("c7{<");
      arrayList0.add(attribute0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      Instances instances0 = new Instances("-----     ", arrayList0, 2);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2088.2;
      int[] intArray0 = new int[7];
      intArray0[0] = 4;
      intArray0[1] = 0;
      intArray0[2] = 4;
      intArray0[3] = 1;
      intArray0[5] = 0;
      intArray0[6] = 1;
      arrayList0.add(attribute0);
      SparseInstance sparseInstance0 = new SparseInstance(234.0903, doubleArray0, intArray0, 0);
      discretize0.setInputFormat(instances0);
      double[][] doubleArray1 = new double[2][7];
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ".bsi");
      discretize0.m_CutPoints = doubleArray1;
      discretize0.m_UseBinNumbers = true;
      discretize0.setMakeBinary(true);
      Attribute.typeToString(attribute0);
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: 'c7{<_1' 'c7{<_2' 'c7{<_3' 'c7{<_4' 'c7{<_5' 'c7{<_6' 'c7{<_7' 
         //
         verifyException("weka.core.Instances", e);
      }
  }
}
