/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 12:30:57 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1705, "d7l", "M%,?y:", "d7l", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6263));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-6263), "value ", "", (String) null, "");
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(127);
      ClassWriter classWriter1 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, 1, ":bNPidp4@ChR", ":bNPidp4@ChR", (String) null, ":bNPidp4@ChR");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter1, (-388), (String) null, "", (String) null, ":bNPidp4@ChR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0087695236180538
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "value ", "Oa", "/s", "Oa");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(1);
      ByteVector byteVector2 = byteVector1.put12(2, 2);
      byteVector2.putByteArray((byte[]) null, 1, 1);
      ByteVector byteVector3 = new ByteVector();
      fieldWriter0.put(byteVector3);
      fieldWriter0.visitEnd();
      classWriter0.visitOuterClass(",FfR/b", "org.apache.commons.io.filefilter.WildcardFileFilter", "org.apache.commons.io.filefilter.WildcardFileFilter");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-1238), "T_28=3XDxf%,4ovp", "T_28=3XDxf%,4ovp", "value ", "value ");
      fieldWriter1.getSize();
      fieldWriter1.getSize();
      fieldWriter1.put(byteVector3);
      fieldWriter0.put(byteVector0);
      assertFalse(byteVector0.equals((Object)byteVector3));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(127);
      ClassWriter classWriter1 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, 1, ":bNPidp4@ChR", ":bNPidp4@ChR", (String) null, ":bNPidp4@ChR");
      classWriter1.newUTF8("Deprecated");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Deprecated");
      classWriter1.addType(":bNPidp4@ChR");
      ByteVector byteVector0 = classWriter1.pool;
      ByteVector byteVector1 = classWriter1.pool;
      fieldWriter0.put(byteVector1);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0360334832009355
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putLong(2750L);
      ByteVector byteVector1 = byteVector0.putShort(1);
      ByteVector byteVector2 = byteVector1.put12(2, 2);
      byteVector2.putByteArray((byte[]) null, 1, 1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteVector byteVector3 = new ByteVector();
      classWriter0.visitOuterClass(",FfR/b", "org.apache.commons.io.filefilter.WildcardFileFilter", "org.apache.commons.io.filefilter.WildcardFileFilter");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1238), "T_28=3XDxf%,4ovp", "T_28=3XDxf%,4ovp", "value ", "value ");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("value ", false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector3);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6263));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 650, "+Jp@u\"s;W{iCqxnW(", "", "+Jp@u\"s;W{iCqxnW(", "value ");
      Attribute attribute0 = new Attribute("+Jp@u\"s;W{iCqxnW(");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0751393240053733
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "value ", "Oa", "", "Oa");
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.getSize();
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0087695236180538
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1995));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 285212675, "8P>L1dr_Y&n", "8P>L1dr_Y&n", "(tXQZ&X@U", "8P>L1dr_Y&n");
      fieldWriter0.visitAnnotation("8P>L1dr_Y&n", true);
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.putByte(285212675);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      ByteVector byteVector1 = byteVector0.put11(4, 1593);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteVector0.put12((-779), 2218);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classWriter0.firstMethod = null;
      byteArray0[3] = (byte) (-11);
      byteVector0.putLong(2636L);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)112;
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 65535, "8P>L1dr_Y&n", "(tXQZ&X@U", "8P>L1dr_Y&n", "8P>L1dr_Y&n");
      fieldWriter1.getSize();
      fieldWriter1.put(byteVector1);
      fieldWriter0.put(byteVector0);
      fieldWriter1.put(byteVector0);
      int int0 = fieldWriter1.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1632);
      ClassWriter classWriter1 = new ClassWriter(4897);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1679), "", "", "", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putInt(65535);
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = "value ";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "value ", "Oa", "/s", "Oa");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt(1);
      ByteVector byteVector2 = byteVector1.put12(2, 2);
      byteVector2.putByteArray((byte[]) null, 1, 1);
      Attribute attribute0 = new Attribute("Oa");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector3 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2094));
      classWriter0.version = (-2094);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "M'Y;;n~'!*Wuj!GgE)4", "259", "value ");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }
}
