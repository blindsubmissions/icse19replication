/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 12:31:57 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "";
      Player player0 = new Player(0, "", 0);
      player0.getY();
      MockFile mockFile0 = new MockFile("");
      MockFile mockFile1 = new MockFile(mockFile0, "");
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFile1, "");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      player0.setConnected(false);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte)65;
      byteArray0[3] = (byte)18;
      byteArray0[4] = (byte)18;
      byteArray0[5] = (byte)65;
      Player player1 = new Player((byte)18);
      System.setCurrentTimeMillis(2817L);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(5);
      String string0 = player0.getName();
      assertEquals("Player5", string0);
      
      player0.reset(false);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(0.1F);
      player0.getTimeOfDeath();
      URI uRI0 = MockURI.aHttpURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(0, "HN{", (String) null, 0);
      int int0 = player0.type();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(5, int0);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-1528), "\"P/pXD;Q", "h'+sa+i:`%oQ8K<5C+", 3);
      Party party0 = new Party();
      party0.add(player0);
      party0.id = 2381;
      player0.reset(false);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      Party party1 = new Party(108);
      player0.reset(false);
      player0.setConnected(true);
      player0.getZ();
      player0.setMoney((-1.0F));
      int int0 = player0.getPictureId();
      assertEquals((-1.0F), player0.getMoney(), 0.01F);
      assertEquals(3, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(5);
      player0.reset(false);
      player0.getStrength();
      player0.setMoney(5);
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-81);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)4;
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte byte0 = (byte) (-27);
      Player player0 = new Player((byte) (-27));
      player0.setDead(0L);
      player0.setDead(1614L, false);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-2454));
      player0.head = null;
      player0.getSubparty();
      player0.getMoney();
      int int0 = 4788;
      Player player1 = new Player(4788, ".*[.]class$", ".*[.]class$", (-2454), (-2454));
      boolean boolean0 = true;
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(".*[.]class$");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(4882);
      assertEquals(0.0F, player1.getY(), 0.01F);
      
      player1.setY((-1.0F));
      player0.reset(true);
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis((short)4919);
      player0.isJoinOK(player1, false);
      player1.isJoinOK(player0, false);
      player1.isJoinOK(player0, false);
      System.setCurrentTimeMillis(913L);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getIP();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", string0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      System.setCurrentTimeMillis(4919L);
      System.setCurrentTimeMillis((-5085L));
      System.setCurrentTimeMillis(161L);
      Player player0 = new Player();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      Player player1 = new Player((short)4919);
      player0.isJoinOK(player1, true);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals("Player4919", player1.getName());
      assertFalse(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-1498), "VF[GqK)D3HB", 0);
      player0.toString();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)18;
      byteArray0[4] = (byte)0;
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte) (-22);
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte)18;
      Player player0 = new Player((byte)18, " ", "", 1891);
      player0.isConnected();
      System.setCurrentTimeMillis((-913L));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte) (-93);
      byteArray0[2] = (byte) (-93);
      byteArray0[3] = (byte) (-93);
      System.setCurrentTimeMillis(1146L);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(598.0F);
      player0.gangStrength();
      player0.getStrength();
      Party party0 = player0.prev;
      player0.boss = null;
      player0.getName();
      float float0 = player0.getZ();
      assertEquals(598.0F, player0.getMoney(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.setDead((long) (short)4919);
      player0.setZ(0.0F);
      player1.add(player0);
      Player player2 = new Player();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)65;
      byteArray0[5] = (byte)63;
      byteArray0[6] = (byte)27;
      byteArray0[7] = (byte)55;
      player2.unpack(byteArray0);
      player0.setJoinOK(player2, true);
      player1.isDead();
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)18);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      player0.isJoinOK(player2, true);
      boolean boolean0 = player2.isJoinOK(player1, true);
      assertEquals(4919L, player1.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(0);
      boolean boolean0 = player0.isDead();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player0", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(459);
      player0.setJoinOK(player0, false);
      player0.setJoinOK(player0, true);
      player0.isJoinOK(player0, false);
      player0.isJoinOK(player0, false);
      System.setCurrentTimeMillis(459);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.add(player1);
      Player player2 = new Player();
      player2.add(player0);
      byte[] byteArray0 = player2.pack();
      player0.unpack(byteArray0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }
}
