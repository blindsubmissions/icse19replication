/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 17:58:54 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      arrayList0.trimToSize();
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = ":d";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      arrayList0.trimToSize();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.getSupportingDocuments();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getFileName());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        arrayList0.addAll((Collection<? extends OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      String string0 = derivedVariable0.getAvailability();
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      
      derivedVariable0.setCategory("Unknown");
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7480673485460891
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("|05)$k:Ox9");
      derivedVariable0.isCleaned();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("|05)$k:Ox9", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add((SupportingDocument) null);
      derivedVariable0.setCleaningDescription("UNABLE_TO_GET_STUDY_YEARS");
      derivedVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.columnStart = "Gv,maAM";
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      User user0 = new User();
      user0.setEmail("variable.alias.label");
      user0.setCounty((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      rawVariable0.setColumnEnd((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("Unknown", rawVariable0.getAvailability());
      
      derivedVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      User user0 = new User();
      rawVariable0.setAvailability("");
      User user1 = new User("y0r", "y0r");
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      assertEquals(2, arrayList1.size());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      User user0 = new User();
      assertEquals("", user0.getFirstName());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      User user0 = new User("djD&;qLYI3Q`)59", "djD&;qLYI3Q`)59");
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      System.setCurrentTimeMillis((-1L));
      Object object0 = new Object();
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "");
      user0.setEmail("");
      User user1 = new User("", "");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user2 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, (Variable) null);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertNull(macawChangeEvent0);
      assertFalse(derivedVariable1.isCoded());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("v#SzP)uB");
      assertEquals("v#SzP)uB", derivedVariable0.getName());
      
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.getSourceVariables();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "variable.isCleaned.saveChanges.changedToNotClean";
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      // Undeclared exception!
      try { 
        arrayList0.addAll((-1071), (Collection<? extends ValueLabel>) arrayList1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1071, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.getCodeBookNumber();
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.form = "AluN%_+q~yh.4Xosl";
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getNotes();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setAlias((String) null);
      int int0 = (-1904);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "y|j|B~{)toPb";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("%LuP;ek\"vZYp|`:");
      rawVariable0.notes = "XZPlWE+26|v_C";
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user0 = new User("y|j|B~{)toPb", "XZPlWE+26|v_C");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("y|j|B~{)toPb", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "djD&;qLYI3Q`)59";
      User user0 = new User("macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("djD&;qLYI3Q`)59", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addValueLabel((ValueLabel) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7999587982097305
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getCleaningDescription();
      User user0 = new User("W'i_g5VqPZ%", "");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList1 = null;
      try {
        arrayList1 = new ArrayList<Variable>((-1213));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1213
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      User user0 = new User((String) null, "eoWAhudk2");
      user0.setEmail("eoWAhudk2");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setAddressLine2("eoWAhudk2");
      User user1 = new User();
      derivedVariable1.setName((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.getNotes();
      rawVariable0.getLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      derivedVariable0.setIdentifier(5885);
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable1.setAlias("%Ll|dd;>#&0{,|Wzm");
      assertEquals("%Ll|dd;>#&0{,|Wzm", derivedVariable1.getAlias());
      
      rawVariable0.setAlternativeVariable(derivedVariable2);
      rawVariable0.setName("[+%24N##hVUR8('J9{&");
      ontologyTerm0.setNameSpace("DUPLICATE_SUPPORTING_DOCUMENT_CODE");
      User user0 = new User();
      rawVariable0.getDisplayItemIdentifier();
      RawVariable.validateFields(rawVariable0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.remove((Object) derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.removeSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("=Ya", "=Ya");
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user2 = new User();
      derivedVariable1.setLabel("d+X2?+-$r6AzX");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      assertEquals("d+X2?+-$r6AzX", derivedVariable1.getLabel());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.columnStart = "d!os@v/ei?";
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.346632659445204
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "=Ya");
      user0.setEmail("DUPLICATE_VARIABLE_ASSOCIATION");
      User user1 = new User("", "macaw.businessLayer.Variable");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, derivedVariable0);
      User user2 = new User();
      derivedVariable1.setYear(" <j|?_uJ^c h");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals(" <j|?_uJ^c h", derivedVariable1.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      User user0 = new User("", "=Ya");
      User user1 = new User("", "");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable1);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user2, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCleaned(true);
      User user0 = new User((String) null, "macaw.businessLayer.Variable");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertTrue(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<ValueLabel> linkedList0 = new LinkedList<ValueLabel>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User("w/>.Tj#{K l]3N;M,", "0](*%4D V=C> ");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      derivedVariable0.getSourceVariables();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      rawVariable0.getLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      derivedVariable0.setIdentifier(8);
      ontologyTerm0.setDescription("mjx3J=/C");
      supportingDocument0.setIdentifier(8);
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setNameSpace("");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
      System.setCurrentTimeMillis(2286L);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      arrayList0.trimToSize();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getCleaningDescription();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-2461));
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      arrayList0.trimToSize();
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.2924413467837006
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "=Ya");
      user0.setEmail("DUPLICATE_VARIABLE_ASSOCIATION");
      derivedVariable0.columnEnd = "macaw.businessLayer.Variable";
      User user1 = new User("", "macaw.businessLayer.Variable");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("macaw.businessLayer.Variable", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.346632659445204
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "=Ya");
      user0.setEmail("DUPLICATE_VARIABLE_ASSOCIATION");
      User user1 = new User("", "macaw.businessLayer.Variable");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnEnd("DUPLICATE_VARIABLE_ASSOCIATION");
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      assertEquals("DUPLICATE_VARIABLE_ASSOCIATION", derivedVariable1.getColumnEnd());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm1.setIdentifier((-1049));
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("WLNujve/9M<U=Uvr73f");
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setEmail("VK?2sZcn}%PT8a:Hh");
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      User user2 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, (Variable) null);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertNotNull(macawChangeEvent0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      derivedVariable0.setCleaningStatus("Zg}(VXgqKD_8F?{0u");
      User user0 = new User("Zg}(VXgqKD_8F?{0u", "Zg}(VXgqKD_8F?{0u");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      assertEquals("Zg}(VXgqKD_8F?{0u", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(true);
      User user0 = new User((String) null, "macaw.businessLayer.Variable");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertTrue(rawVariable0.isCoded());
      
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList0.sort(comparator0);
      LinkedList<ValueLabel> linkedList0 = new LinkedList<ValueLabel>();
      derivedVariable0.getNotes();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-10));
      derivedVariable0.setIdentifier((-10));
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      arrayList2.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList2);
      assertEquals("-10", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "k";
      User user0 = new User("k", "k");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("k", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.399009296606889
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "=Ya");
      user0.setEmail("DUPLICATE_VARIABLE_ASSOCIATION");
      derivedVariable0.setColumnStart((String) null);
      User user1 = new User("", "macaw.businessLayer.Variable");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      LinkedList<ValueLabel> linkedList0 = new LinkedList<ValueLabel>();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getNotes();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      derivedVariable0.setIdentifier((-2));
      rawVariable0.setAvailability("w/>.Tj#{K l]3N;M,");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList1);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setCleaningStatus("");
      derivedVariable0.setAlias("supporingDocument.descrip-ion.7veCUang>s");
      ontologyTerm0.setNameSpace("");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.addSourceVariable(derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
