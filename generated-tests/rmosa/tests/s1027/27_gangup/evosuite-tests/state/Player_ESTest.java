/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 17:47:26 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.SequenceInputStream;
import java.io.StreamCorruptedException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-583));
      player0.setJoinOK(player0, true);
      player0.setY((-583));
      player0.isJoinOK(player0, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      System.setCurrentTimeMillis((short)4919);
      System.setCurrentTimeMillis(393L);
      System.setCurrentTimeMillis((-583));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.gangStrength();
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      Party party0 = player0.next;
      player0.next = null;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte)1;
      player0.unpack(byteArray0);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(1452);
      player0.setMoney(1452);
      player0.id = (-228);
      player0.isDead();
      int int0 = player0.type();
      assertEquals(1452.0F, player0.getMoney(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(3);
      String string0 = player0.getName();
      assertEquals("Player3", string0);
      
      float float0 = player0.getMoney();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      
      float float1 = Player.TOLERANCE;
      assertNotEquals(float1, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getName();
      assertEquals("Player-1", string0);
      
      float float0 = player0.getZ();
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0);
      player0.getY();
      player0.getMoney();
      Player player1 = new Player(3, "[-Mll#LON E1CB", "", 0);
      player0.setMoney(0.0F);
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((InputStream) null, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-753), ")xv^{", ")xv^{", (-753));
      Party party0 = new Party();
      party0.next = (Party) player0;
      int int0 = player0.gangStrength();
      party0.id = 4892;
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte) (-78);
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte) (-1);
      byteArray0[4] = (byte) (-15);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-11);
      player0.unpack(byteArray0);
      player0.head = party0;
      player0.head = party0;
      player0.getStrength();
      boolean boolean0 = player0.isConnected();
      assertTrue(boolean0);
      
      int int1 = player0.getStrength();
      assertTrue(int1 == int0);
      assertEquals(1, int1);
      assertEquals((-753), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-583));
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isConnected();
      System.setCurrentTimeMillis((short)4919);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(393L);
      Player player1 = new Player((short)4919);
      boolean boolean1 = player0.isJoinOK(player1, true);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(boolean1 == boolean0);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertEquals("Player4919", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertFalse(player1.isDead());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(1452);
      player0.setMoney(1452);
      player0.getTimeOfDeath();
      assertEquals(1452.0F, player0.getMoney(), 0.01F);
      
      Player player1 = new Player((short)4919, "", 1452);
      assertEquals(1452, player1.getPictureId());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 570;
      Player player0 = new Player(570);
      Party party0 = player0.prev;
      player0.add((Party) null);
      Party party1 = new Party(570);
      player0.prev = party1;
      player0.reset(false);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte) (-79);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(byteArrayInputStream0);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(Throwable e) {
         //
         // invalid stream header: 00000403
         //
         verifyException("java.io.ObjectInputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(4546, "", (-171));
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      Player player1 = new Player((-69));
      player0.setX(0.0F);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      System.setCurrentTimeMillis((-736L));
      Player player0 = new Player((-1603));
      player0.id = 3;
      Player player1 = new Player((short)4919, "w", "Player.unpack(): *** WARNING *** data is not of proper type!", (-2524));
      player0.setConnected(true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals((-2524), player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("w", player1.getIP());
      assertEquals("Player-1603", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(2863, "", (String) null, 2863, (-711));
      float float0 = player0.getX();
      assertEquals(2863, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals((-711), player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(1, "", "", 1);
      Party party0 = new Party(1);
      player0.prev = party0;
      party0.id = 5;
      player0.getPictureId();
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.getPictureId();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(160, "jA;YfJK X&|`;N~z&f", 160);
      player0.getIP();
      Party party0 = new Party((short)4919);
      player0.boss = party0;
      player0.setConnected(true);
      player0.getPictureId();
      party0.id = 1;
      party0.head = (Party) player0;
      party0.add(player0);
      player0.setZ(0.0F);
      boolean boolean0 = false;
      player0.setConnected(false);
      // Undeclared exception!
      party0.getSubparty();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(275, "MQeR", 275);
      Player player1 = new Player();
      player1.add(player0);
      player0.setJoinOK(player1, true);
      Player player2 = new Player(0, "MQeR", "a##RAXx_%g{8Zq", 275);
      player1.boss = (Party) player2;
      player0.setZ(275);
      MockFile mockFile0 = new MockFile("a##RAXx_%g{8Zq");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      dataOutputStream0.writeShort(275);
      player2.pack(dataOutputStream0);
      player0.head = (Party) player1;
      player0.setZ(275);
      player0.getName();
      player1.id = 0;
      player1.setX(0.2F);
      player0.getStrength();
      player0.toString();
      player1.setConnected(true);
      player0.pack();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)5;
      // Undeclared exception!
      try { 
        dataInputStream0.read(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(1452);
      player0.pack();
      player0.setY(1.0F);
      player0.getPictureId();
      Player player1 = new Player(1452, "", 2627);
      player1.getMoney();
      player1.setDead();
      byte[] byteArray0 = player0.pack();
      Player player2 = new Player();
      player2.unpack(byteArray0);
      player0.setMoney(0.2F);
      player2.getZ();
      player0.setDead();
      player1.setMoney(0.1F);
      player1.isJoinOK(player2, true);
      player1.next = (Party) player2;
      player0.isJoinOK(player2, false);
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(1452);
      player0.setMoney(1452);
      player0.id = (-228);
      player0.isDead();
      Player player1 = new Player();
      player1.setZ(1.0F);
      Player player2 = new Player();
      player2.setDead((long) (short)4919);
      player2.isDead();
      assertEquals(4919L, player2.getTimeOfDeath());
      
      Player player3 = new Player();
      Player player4 = new Player((-256));
      boolean boolean0 = player4.isJoinOK(player3, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-583));
      player0.id = (-583);
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-583", player0.toString());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }
}
