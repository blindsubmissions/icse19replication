/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 18:03:00 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5763820666248933
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3269));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3269), ",?kjXfj.nD?y", "", "@*#+l|", "");
      ByteVector byteVector0 = new ByteVector(0);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.visitAnnotation(",?kjXfj.nD?y", false);
      fieldWriter1.put(byteVector0);
      fieldWriter1.put(byteVector0);
      assertSame(fieldWriter1, fieldWriter0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6546695645285008
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(184);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 184, "9", "9", "Zz$8", "Zz$8");
      ByteVector byteVector0 = new ByteVector(184);
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(535);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "float", "M3}x*i*", "}qW1!", "float");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2428);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131072, "d^ee?X^96", "", "d^ee?X^96", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3269));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3269), ",?kjXfj.nD?y", "", "", "");
      Object object0 = new Object();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-1251), ",?kjXfj.nD?y", "", ",?kjXfj.nD?y", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@2f64b145
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3269));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-308), "", "_o.dOgsN@|F./lik%ll", (String) null, (Object) null);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      assertSame(fieldWriter1, fieldWriter0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3, "Zz$8", "Zz$8", "Zz$8", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3269));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, ",?kjXfj.nD?y", "@*#+l|", "", (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3875));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "kqwW1!", "9`<&{oHkU[ s17]w)", "9`<&{oHkU[ s17]w)", "9`<&{oHkU[ s17]w)");
      fieldWriter0.visitAnnotation("The array of names must not be null", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3269));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3269), ",?kjXfj.nD?y", "", "@*#+l|", "");
      ByteVector byteVector0 = new ByteVector(0);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.visitAnnotation(",?kjXfj.nD?y", true);
      fieldWriter1.put(byteVector0);
      assertSame(fieldWriter1, fieldWriter0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(535);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "float", "M3}x*i*", "}qW1!", "float");
      fieldWriter0.visitAnnotation("float", false);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-73), "", "Zz$8", (String) null, "");
      FieldWriter fieldWriter1 = classWriter0.firstField;
      int int0 = fieldWriter1.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-73));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 21, "", "", "", "dV2[wB[*mlb");
      ByteVector byteVector0 = new ByteVector(431);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.put(byteVector0);
      FieldWriter fieldWriter2 = classWriter0.lastField;
      fieldWriter0.next = fieldWriter2;
      fieldWriter2.visitEnd();
      String string0 = "wheel.asm.FieldWriter";
      Attribute attribute0 = new Attribute("");
      fieldWriter2.visitAttribute(attribute0);
      ByteVector byteVector1 = new ByteVector(21);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-97));
      ClassWriter classWriter1 = new ClassWriter((-3875));
      classWriter1.version = (-742);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, (-742), "", "", "dV2[wB[*mlb", "dV2[wB[*mlb");
      ByteVector byteVector0 = new ByteVector(4096);
      FieldWriter fieldWriter1 = classWriter1.lastField;
      fieldWriter0.put(byteVector0);
      FieldWriter fieldWriter2 = classWriter1.lastField;
      fieldWriter2.visitEnd();
      fieldWriter2.put(byteVector0);
      fieldWriter2.getSize();
      fieldWriter1.visitAnnotation("=H|9>[", true);
      ByteVector byteVector1 = new ByteVector();
      fieldWriter2.put(byteVector1);
      fieldWriter0.visitAnnotation("y4foU;", true);
      fieldWriter2.put(byteVector0);
      fieldWriter2.getSize();
      int int0 = fieldWriter1.getSize();
      assertEquals(46, int0);
  }
}
