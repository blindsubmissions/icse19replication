/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 18:06:49 GMT 2018
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.Hashtable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.13269142083987176
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Hashtable<InputStream, String> hashtable0 = new Hashtable<InputStream, String>();
      Enumeration<InputStream> enumeration0 = hashtable0.keys();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(sequenceInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(988);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte) (-38);
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)55);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedCustomInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(byteArrayInputStream0, 1, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis(1106L);
      System.setCurrentTimeMillis((byte)0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("S\u001E\u00DA+", false);
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, mockFileOutputStream0);
      Newzgrabber.verbose = true;
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.13269142083987176
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Hashtable<InputStream, String> hashtable0 = new Hashtable<InputStream, String>();
      Enumeration<InputStream> enumeration0 = hashtable0.keys();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(sequenceInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(988);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte)30;
      byteArray0[2] = (byte) (-38);
      byteArray0[3] = (byte)43;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)43);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedCustomInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(byteArrayInputStream0, 1, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis(1497L);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Hashtable<InputStream, String> hashtable0 = new Hashtable<InputStream, String>();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(988);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-38);
      byteArray0[3] = (byte)43;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)83;
      byteArray0[6] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, (byte)43);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 1, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.LineCount = (-1L);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      bufferedCustomInputStream0.closeTemp();
      Byte byte0 = new Byte((byte) (-38));
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis((byte)1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.13269142083987176
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Hashtable<InputStream, String> hashtable0 = new Hashtable<InputStream, String>();
      Enumeration<InputStream> enumeration0 = hashtable0.keys();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(sequenceInputStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      hashtable0.put(bufferedCustomInputStream0, "S\u001E\u0014)");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(988);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)120;
      byteArray0[1] = (byte)30;
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)0;
      sequenceInputStream0.available();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)41);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedCustomInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      dataInputStream1.mark((byte) (-97));
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(dataInputStream1, 988, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis(2716L);
      System.setCurrentTimeMillis(1670L);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(2L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Hashtable<InputStream, String> hashtable0 = new Hashtable<InputStream, String>();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte) (-26);
      byteArray0[4] = (byte)10;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, (byte)43);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 1, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      Newzgrabber.IsBatch = true;
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder1.setLineCount((byte)1);
      base64Decoder0.decodeStream();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      System.setCurrentTimeMillis((byte)10);
      System.setCurrentTimeMillis(1);
      System.setCurrentTimeMillis((byte)10);
      base64Decoder0.decodeStream();
      assertEquals(0, byteArrayInputStream0.available());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.2711893730418441
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Hashtable<InputStream, String> hashtable0 = new Hashtable<InputStream, String>();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(988);
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte) (-38);
      byteArray0[3] = (byte)43;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, (byte)43);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 1, true);
      byteArrayInputStream0.mark((byte)10);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.ABORT = true;
      byteArrayInputStream0.read();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis((byte)10);
      System.setCurrentTimeMillis(1);
      System.setCurrentTimeMillis((byte) (-38));
      System.setCurrentTimeMillis((byte)43);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.2711893730418441
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Hashtable<InputStream, String> hashtable0 = new Hashtable<InputStream, String>();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(988);
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte)43;
      byteArray0[4] = (byte)10;
      byteArray0[2] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 215);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 3001, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis(988);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0, 988);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.15407610367102942
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Hashtable<InputStream, String> hashtable0 = new Hashtable<InputStream, String>();
      Enumeration<InputStream> enumeration0 = hashtable0.keys();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(sequenceInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(988);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte)30;
      byteArray0[2] = (byte) (-97);
      byteArrayOutputStream0.flush();
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)41);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedCustomInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(byteArrayInputStream0, 7, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis((byte)30);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }
}
