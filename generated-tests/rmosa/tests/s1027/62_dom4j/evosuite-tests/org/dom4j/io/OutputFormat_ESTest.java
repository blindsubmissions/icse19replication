/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 18:03:09 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('c');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (c)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("HKG|}7a", true);
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      outputFormat0.setSuppressDeclaration(true);
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9404479886553263
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[3];
      stringArray0[1] = "-expandEmptyc?yhp\"_k";
      stringArray0[2] = "-expandEmptyc?yhp\"_k";
      int int0 = 1;
      outputFormat0.parseOptions(stringArray0, 1);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "-expandEmptyc?yhp\"_k";
      outputFormat0.setNewLineAfterNTags(0);
      stringArray1[1] = "-expandEmptyc?yhp\"_k";
      stringArray1[2] = "-expandEmptyc?yhp\"_k";
      stringArray1[3] = "-expandEmptyc?yhp\"_k";
      stringArray1[5] = "-expandEmptyc?yhp\"_k";
      stringArray1[6] = "-expandEmptyc?yhp\"_k";
      stringArray1[7] = "-expandEmptyc?yhp\"_k";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Wg5Rm";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "Wg5Rm";
      stringArray0[3] = "Wg5Rm";
      stringArray0[4] = "-omitEncoding";
      OutputFormat outputFormat0 = new OutputFormat("5LDrF{:", true);
      outputFormat0.getEncoding();
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      outputFormat0.setSuppressDeclaration(true);
      assertTrue(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-=x5BYWCE!p");
      String[] stringArray0 = new String[5];
      stringArray0[1] = "-=x5BYWCE!p";
      stringArray0[0] = "-=x5BYWCE!p";
      stringArray0[3] = "-=x5BYWCE!p";
      stringArray0[4] = "-=x5BYWCE!p";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals("-=x5BYWCE!p", outputFormat0.getIndent());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals(0, int0);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertFalse(outputFormat0.isOmitEncoding());
      assertTrue(boolean0);
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("", outputFormat0.getIndent());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-omitEncoding", false);
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("-omitEncoding", outputFormat0.getIndent());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(':');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (:)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("");
      boolean boolean0 = outputFormat0.isXHTML();
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("y;pbjS~k3Vs0HS#mk");
      String[] stringArray0 = new String[3];
      stringArray0[1] = "-expandEmptyc?yhp\"_k";
      outputFormat0.setIndentSize(1706);
      assertEquals("y;pbjS~k3Vs0HS#mk", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setEncoding("e}+UgNrj^9yj(Asc");
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertEquals("e}+UgNrj^9yj(Asc", outputFormat0.getEncoding());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[3];
      stringArray0[1] = "-expandEmptyc?yhp\"_k";
      outputFormat0.setIndent(stringArray0[2]);
      outputFormat0.parseOptions(stringArray0, 1686);
      int int0 = 317;
      outputFormat0.parseOptions(stringArray0, 317);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2870));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2870
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setNewlines(false);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.isPadText();
      outputFormat1.isNewLineAfterDeclaration();
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-193));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -193
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.isTrimText();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(']');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (])
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[3];
      String string0 = "-expandEmptyc?yhp\"_k";
      int int0 = 1;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setIndentSize(1739);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent("");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isTrimText();
      outputFormat0.setPadText(true);
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isPadText());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, ".R*wsn|xfN\"Sy7");
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(0);
      outputFormat0.isNewlines();
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat((String) null, true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = "";
      stringArray0[2] = stringArray0[0];
      stringArray0[3] = ".R*wsn|xfN\"Sy7";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.setIndentSize((-844));
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.getIndent();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "$kNO&c~K)Ad";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      int int0 = outputFormat0.parseOptions(stringArray0, 3528);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(3528, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setEncoding((String) null);
      OutputFormat outputFormat1 = new OutputFormat();
      String[] stringArray0 = new String[21];
      stringArray0[1] = "-expandEmptyc?yhp\"_k";
      stringArray0[2] = "-expandEmptyc?yhp\"_k";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[3];
      stringArray0[2] = "-expandEmptyc?yhp\"_k";
      outputFormat0.setIndent("-expandEmptyc?yhp\"_k");
      outputFormat0.parseOptions(stringArray0, 1686);
      int int0 = 351;
      outputFormat0.parseOptions(stringArray0, 351);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2870));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2870
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("|wohiaN/FI*Jd");
      outputFormat0.setLineSeparator("y;pbjS~k3Vs0HS#mk");
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals("y;pbjS~k3Vs0HS#mk", outputFormat0.getLineSeparator());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "-trimText");
      outputFormat0.setLineSeparator("$RU#P*x9?05");
      outputFormat0.setNewlines(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isOmitEncoding();
      outputFormat0.getLineSeparator();
      outputFormat0.setEncoding("1\"phrX");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "$RU#P*x9?05";
      stringArray0[1] = "$RU#P*x9?05";
      int int0 = outputFormat0.parseOptions(stringArray0, 733);
      assertEquals("$RU#P*x9?05", outputFormat0.getLineSeparator());
      assertEquals(733, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String string0 = null;
      String string1 = "-trimText";
      outputFormat0.setEncoding("-trimText");
      outputFormat0.setIndent(true);
      outputFormat0.setAttributeQuoteCharacter('\'');
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('9');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (9)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat.createCompactFormat();
      outputFormat0.setIndentSize(0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-indent";
      stringArray0[1] = "";
      stringArray0[2] = "5Z_n[2o?";
      stringArray0[3] = "";
      String string0 = "aXU3-s$hF(q.t~H";
      stringArray0[4] = "aXU3-s$hF(q.t~H";
      int int0 = 0;
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat1 = new OutputFormat("-xhtmly;pbjS~k3Vs0HS#mk");
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-1946));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1946
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-omitEncoding", true, "Wg5Rm");
      String[] stringArray0 = new String[6];
      stringArray0[1] = "-omitEncoding";
      stringArray0[3] = "Wg5Rm";
      stringArray0[4] = "-omitEncoding";
      stringArray0[5] = "-omitEncoding";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "Wg5Rm";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "P_~c^Fo7)C39";
      stringArray0[4] = "P_~c^Fo7)C39";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewLineAfterNTags(1995);
      assertEquals(1995, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmptyD0Yd{Y-";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "=yADoOe'Y<7;M\"3m<n[";
      stringArray0[3] = "y;pbjS";
      outputFormat0.setXHTML(false);
      stringArray0[4] = "g";
      stringArray0[5] = "ibk~$&pmxB<)";
      stringArray0[6] = "";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", false, "-lineSeparator");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "}O|Dr ";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "2F`P$AI'j(a";
      stringArray0[4] = "-lineSeparator";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("-lineSeparator", outputFormat0.getLineSeparator());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Wg5Rm", false, "Wg5Rm");
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setNewLineAfterNTags(677);
      outputFormat0.setIndent((String) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = null;
      outputFormat0.setOmitEncoding(false);
      stringArray0[2] = "x=K2$";
      outputFormat0.parseOptions(stringArray0, 677);
      stringArray0[3] = "Wg5Rm";
      outputFormat0.setExpandEmptyElements(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.setIndentSize(1706);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "-indentSize";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-indentSize\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.setIndentSize(1706);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-xhtml|wohiaN/FI*Jd";
      outputFormat0.getNewLineAfterNTags();
      outputFormat1.parseOptions(stringArray0, 0);
      assertTrue(outputFormat1.isXHTML());
      
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertFalse(outputFormat0.isXHTML());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterNTags(2);
      OutputFormat outputFormat1 = new OutputFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "]b*4'+0SId=0";
      stringArray0[2] = "-padText";
      stringArray0[3] = "]b*4'+0SId=0";
      outputFormat1.parseOptions(stringArray0, 2);
      OutputFormat outputFormat2 = new OutputFormat("-padText");
      outputFormat0.parseOptions(stringArray0, 3);
      assertEquals(2, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "Invalid attr";
      stringArray0[2] = "Tuz&qf0iCU.l`#[X";
      stringArray0[3] = ":+br'<@gyX/L9j";
      stringArray0[4] = "lx >d~OB";
      stringArray0[5] = "";
      stringArray0[6] = "eq";
      stringArray0[7] = "-indentSize";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.parseOptions(stringArray0, 1778);
      outputFormat1.setXHTML(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat2.isTrimText());
      
      outputFormat2.setTrimText(false);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "";
      stringArray1[1] = "-newlines";
      stringArray1[2] = "";
      int int0 = outputFormat0.parseOptions(stringArray1, 1);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize(1707);
      outputFormat1.setIndent(true);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmptyc?yhp\"_k";
      stringArray0[1] = "-expandEmptyc?yhp\"_k";
      stringArray0[2] = "-suppressDeclaration";
      stringArray0[3] = "y;pbjS~k3Vs0HS#mk";
      stringArray0[4] = "y;pbjS~k3Vs0HS#mk";
      stringArray0[5] = "y;pbjS~k3Vs0HS#mk";
      stringArray0[6] = "-expandEmptyc?yhp\"_k";
      outputFormat1.parseOptions(stringArray0, 1700);
      outputFormat2.parseOptions(stringArray0, 1707);
      outputFormat0.parseOptions(stringArray0, 1681);
      int int0 = outputFormat2.parseOptions(stringArray0, 1);
      assertTrue(outputFormat2.isExpandEmptyElements());
      assertTrue(outputFormat2.isSuppressDeclaration());
      assertEquals(3, int0);
  }
}
