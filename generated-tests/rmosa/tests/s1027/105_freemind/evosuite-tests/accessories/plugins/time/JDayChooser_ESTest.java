/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 18:08:45 GMT 2018
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import accessories.plugins.time.JYearChooser;
import java.awt.Color;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.Shape;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.beans.VetoableChangeListener;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.sql.Timestamp;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;
import javax.swing.Icon;
import javax.swing.JApplet;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JMenuItem;
import javax.swing.JWindow;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.TransferHandler;
import javax.swing.event.MenuKeyEvent;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalToolBarUI;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AsyncBoxView;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Element;
import javax.swing.text.StyleContext;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.apache.batik.gvt.ShapeNode;
import org.apache.batik.svggen.CachedImageHandlerBase64Encoder;
import org.apache.fop.pdf.PDFInfo;
import org.apache.fop.pdf.PDFState;
import org.apache.fop.svg.PDFDocumentGraphics2D;
import org.apache.wml.dom.WMLDOMImplementationImpl;
import org.apache.xerces.parsers.XML11DTDConfiguration;
import org.apache.xerces.util.SymbolTable;
import org.apache.xerces.util.XMLGrammarPoolImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import plugins.collaboration.database.DatabaseConnectionHook;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.isDecorationBackgroundVisible();
      MenuElement[] menuElementArray0 = new MenuElement[6];
      DatabaseConnectionHook databaseConnectionHook0 = new DatabaseConnectionHook();
      assertNull(databaseConnectionHook0.getName());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JYearChooser jYearChooser0 = new JYearChooser();
      jYearChooser0.repaint(0L);
      jDayChooser0.setYearChooser(jYearChooser0);
      JYearChooser jYearChooser1 = new JYearChooser();
      jDayChooser0.setYearChooser(jYearChooser1);
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.focusGained((FocusEvent) null);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getSelectedDay();
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      ActionEvent actionEvent0 = new ActionEvent(jDayChooser0, (-90), "day", (-90), 4);
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // accessories.plugins.time.JDayChooser cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.736270028811289
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jDayChooser0, 344, 97L, 48, 48, (-2268), 344, 48, 48, false, 344, 344, 48, (-1844.308));
      Color color0 = Color.darkGray;
      jDayChooser0.setWeekdayForeground(color0);
      jDayChooser0.getToolTipText((MouseEvent) mouseWheelEvent0);
      jDayChooser0.setDay((-2268));
      jDayChooser0.drawDays();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D();
      jDayChooser_DecoratorButton0.paint(pDFDocumentGraphics2D0);
      jDayChooser0.drawDays();
      MenuElement[] menuElementArray0 = new MenuElement[0];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser_DecoratorButton0, 344, 757L, (-1556), 48, 'U', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyPressed(menuKeyEvent0);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setDecorationBackgroundVisible(true);
      jDayChooser0.getDayPanel();
      jDayChooser0.getDecorationBackgroundColor();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6442551993262904
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getWidth();
      jDayChooser0.isValidateRoot();
      jDayChooser0.repaint(0L);
      jDayChooser0.setMaxDayCharacters(3);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      long long0 = 64800000L;
      // Undeclared exception!
      try { 
        jDayChooser0.getFocusTraversalKeys(7);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid focus traversal key identifier
         //
         verifyException("java.awt.Container", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setMaxDayCharacters((-16));
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Timestamp timestamp0 = new Timestamp((-6L));
      timestamp0.toLocalDateTime();
      jDayChooser0.setMinSelectableDate(timestamp0);
      jDayChooser0.setMaxDayCharacters(2);
      assertEquals(2, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.593621512459067
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jDayChooser0, 344, 97L, 48, 48, (-2268), 344, 48, 48, false, 344, 344, 48, (-1844.308));
      jDayChooser0.getToolTipText((MouseEvent) mouseWheelEvent0);
      JMonthChooser jMonthChooser0 = new JMonthChooser();
      jDayChooser0.monthChooser = jMonthChooser0;
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay((-2268));
      jDayChooser0.drawDays();
      jDayChooser0.setEnabled(true);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-2399), (-2399), 4225, 0, 'X');
      jDayChooser0.keyTyped(keyEvent0);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7244208539528407
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 22);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 12, 465, '_', (-3273), '_');
      keyEvent0.getExtendedKeyCode();
      jDayChooser0.keyPressed(keyEvent0);
      System.setCurrentTimeMillis(465);
      KeyEvent keyEvent1 = new KeyEvent(jDayChooser0, 2423, 5270400000L, (-1061), 33, 'l');
      keyEvent1.paramString();
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed(keyEvent1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setMonthChooser((JMonthChooser) null);
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getWeekdayForeground();
      jDayChooser0.getBounds();
      jDayChooser0.getHierarchyListeners();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      jDayChooser_DecoratorButton0.isBorderPainted();
      JWindow jWindow0 = null;
      try {
        jWindow0 = new JWindow();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      jDayChooser0.setMaxDayCharacters(0);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.593621512459067
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setWeekOfYearVisible(false);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jDayChooser0, 344, 97L, 48, 48, (-2268), 344, 48, 48, false, 344, 344, 48, (-1844.308));
      jDayChooser0.getToolTipText((MouseEvent) mouseWheelEvent0);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay((-2268));
      jDayChooser0.drawDays();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.7656865807530373
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.isDayBordersVisible();
      Date date0 = jDayChooser0.getMaxSelectableDate();
      Date date1 = jDayChooser0.setMaxSelectableDate(date0);
      Color color0 = Color.blue;
      jDayChooser0.setDecorationBackgroundColor(color0);
      jDayChooser0.setDay(48);
      jDayChooser0.updateUI();
      jDayChooser0.setDay(26);
      jDayChooser0.setSelectableDateRange(date1, date0);
      assertEquals(26, jDayChooser0.getDay());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = true;
      JDayChooser jDayChooser0 = new JDayChooser();
      Color color0 = Color.YELLOW;
      jDayChooser0.getVisibleRect();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      jDayChooser_DecoratorButton0.isBorderPainted();
      jDayChooser_DecoratorButton0.addMouseListener(defaultCaret0);
      jDayChooser0.getLocale();
      Frame frame0 = null;
      try {
        frame0 = new Frame("day");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.555930416870848
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jDayChooser0, 344, 97L, 48, 48, (-2268), 344, 48, 48, false, 344, 344, 48, (-1844.308));
      jDayChooser0.getToolTipText((MouseEvent) mouseWheelEvent0);
      jDayChooser0.setDay((-2268));
      jDayChooser0.drawDays();
      jDayChooser0.setDay(39);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setWeekOfYearVisible(false);
      jDayChooser0.removeVetoableChangeListener((VetoableChangeListener) null);
      jDayChooser0.updateUI();
      jDayChooser0.setDay(517);
      jDayChooser0.updateUI();
      assertFalse(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Color color0 = jDayChooser0.getSundayForeground();
      float[] floatArray0 = new float[1];
      floatArray0[0] = 0.0F;
      // Undeclared exception!
      try { 
        color0.getComponents(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("java.awt.Color", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      jDayChooser0.getMinSelectableDate();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      jDayChooser0.doLayout();
      jDayChooser0.removeMouseListener(defaultCaret0);
      jDayChooser0.setYear((-4256));
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertTrue(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.7743379459057977
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      jDayChooser0.setMonth(854);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 12, 465, '_', (-3273), '_');
      keyEvent0.setKeyCode(32);
      InputEvent.getModifiersExText(37);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setEnabled(true);
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.630470240160676
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jDayChooser0, 344, 97L, 48, 48, (-2268), 344, 48, 48, false, 344, 344, 48, (-1844.308));
      jDayChooser0.getToolTipText((MouseEvent) mouseWheelEvent0);
      jDayChooser0.setDay((-2268));
      jDayChooser0.drawDays();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.requestFocus(true);
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D();
      jDayChooser_DecoratorButton0.paint(pDFDocumentGraphics2D0);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setDecorationBackgroundVisible(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Color.getColor("mCVc$:Q");
      jDayChooser0.setMinSelectableDate((Date) null);
      jDayChooser0.init();
      MetalToolBarUI metalToolBarUI0 = new MetalToolBarUI();
      MetalToolBarUI metalToolBarUI1 = new MetalToolBarUI();
      metalToolBarUI1.getFloatingColor();
      // Undeclared exception!
      try { 
        metalToolBarUI1.installUI(jDayChooser0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // accessories.plugins.time.JDayChooser cannot be cast to javax.swing.JToolBar
         //
         verifyException("javax.swing.plaf.basic.BasicToolBarUI", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setVerifyInputWhenFocusTarget(true);
      jDayChooser0.getBorder();
      jDayChooser0.repaint();
      jDayChooser0.isDayBordersVisible();
      Date date0 = jDayChooser0.getMaxSelectableDate();
      Date date1 = jDayChooser0.setMaxSelectableDate(date0);
      Color color0 = jDayChooser0.getDecorationBackgroundColor();
      float[] floatArray0 = new float[9];
      floatArray0[0] = 373.37494F;
      floatArray0[1] = 1528.0F;
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.143F;
      color0.getRGBComponents(floatArray0);
      Color.getColor("day");
      jDayChooser0.setSundayForeground(color0);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setMinSelectableDate(date1);
      MetalToolBarUI metalToolBarUI0 = new MetalToolBarUI();
      metalToolBarUI0.getFloatingColor();
      jDayChooser1.setWeekdayForeground((Color) null);
      jDayChooser0.setMaxDayCharacters(2004);
      jDayChooser1.setEnabled(true);
      assertTrue(jDayChooser1.isDayBordersVisible());
      
      jDayChooser0.focusLost((FocusEvent) null);
      assertEquals(14, jDayChooser0.getDay());
      assertEquals(0, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.630470240160676
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setAlwaysFireDayProperty(false);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jDayChooser0, 344, 97L, 48, 48, (-2268), 344, 48, 48, false, 344, 344, 48, (-1844.308));
      jDayChooser0.getToolTipText((MouseEvent) mouseWheelEvent0);
      jDayChooser0.setDay((-2268));
      jDayChooser0.drawDays();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D();
      jDayChooser_DecoratorButton0.paint(pDFDocumentGraphics2D0);
      assertEquals(1, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.593621512459067
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jDayChooser0, 344, 97L, 48, 48, (-2268), 344, 48, 48, false, 344, 344, 48, (-1844.308));
      jDayChooser0.getToolTipText((MouseEvent) mouseWheelEvent0);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay((-2268));
      jDayChooser0.drawDays();
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getVisibleRect();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(true, bufferedOutputStream0, 0, 10);
      jDayChooser0.paint(pDFDocumentGraphics2D0);
      jDayChooser0.createImage(0, 2182);
      PDFDocumentGraphics2D pDFDocumentGraphics2D1 = new PDFDocumentGraphics2D();
      int int0 = jDayChooser0.getMaxDayCharacters();
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.593621512459067
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jDayChooser0, 344, 97L, 48, 48, (-2268), 344, 48, 48, false, 344, 344, 48, (-1844.308));
      jDayChooser0.getToolTipText((MouseEvent) mouseWheelEvent0);
      jDayChooser0.setDay((-2268));
      jDayChooser0.drawDays();
      jDayChooser0.drawDays();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      jDayChooser0.setLocale(locale0);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMaxDayCharacters(1937);
      TimeZone timeZone0 = TimeZone.getTimeZone("H&-EB/*20w%4S0");
      Calendar calendar0 = MockCalendar.getInstance(timeZone0);
      jDayChooser0.setCalendar(calendar0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      JApplet jApplet0 = null;
      try {
        jApplet0 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Date date0 = jDayChooser0.getMaxSelectableDate();
      jDayChooser0.setMaxSelectableDate(date0);
      jDayChooser0.transferFocusBackward();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 16, 16, (-1690), 960, 'm');
      keyEvent0.setKeyCode(35);
      jDayChooser0.keyReleased(keyEvent0);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay((-1690));
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.660187820854415
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      jDayChooser0.decorationBordersVisible = true;
      jDayChooser0.removeMouseListener(defaultCaret0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "day");
      defaultCaret0.getMark();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 0, 40L, 0, 38, '7');
      KeyEvent.getExtendedKeyCodeForChar(223);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.keyPressed(keyEvent0);
      assertEquals(7, jDayChooser0.getDay());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setAlwaysFireDayProperty(true);
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.updateUI();
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser0.drawDays();
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(517);
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7978196315633803
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.isDayBordersVisible();
      Date date0 = jDayChooser0.getMaxSelectableDate();
      jDayChooser0.setMaxSelectableDate(date0);
      Color color0 = Color.blue;
      jDayChooser0.setDecorationBackgroundColor(color0);
      jDayChooser0.setDay(48);
      jDayChooser0.updateUI();
      jDayChooser0.setFocus();
      jDayChooser0.setMonth(48);
      assertEquals(31, jDayChooser0.getDay());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      PDFInfo pDFInfo0 = new PDFInfo();
      pDFInfo0.getCreationDate();
      jDayChooser0.setSelectableDateRange((Date) null, (Date) null);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      CachedImageHandlerBase64Encoder cachedImageHandlerBase64Encoder0 = new CachedImageHandlerBase64Encoder();
      assertEquals("", cachedImageHandlerBase64Encoder0.getRefPrefix());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.6665081787162883
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jDayChooser0, 344, 97L, 48, 48, (-2268), 344, 48, 48, false, 344, 344, 48, (-1844.308));
      jDayChooser0.getToolTipText((MouseEvent) mouseWheelEvent0);
      jDayChooser0.setDay((-2268));
      jDayChooser0.drawDays();
      jDayChooser0.getGraphics();
      jDayChooser0.drawDays();
      JCheckBox jCheckBox0 = new JCheckBox();
      KeyEvent keyEvent0 = new KeyEvent(jCheckBox0, 48, 0L, 1772, 39, 'K');
      jDayChooser0.keyPressed(keyEvent0);
      assertEquals(2, jDayChooser0.getDay());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 250, 250, 250, 40, 'F');
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setDayBordersVisible(true);
      assertEquals(21, jDayChooser0.getDay());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setDay(3180);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.paintImmediately(14, 7, 3152, 1);
      defaultTreeCellRenderer0.getBackgroundSelectionColor();
      Color.getColor("8IeQoi1h>k2");
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      MockDate mockDate0 = new MockDate(14);
      MockDate mockDate1 = (MockDate)mockDate0.clone();
      mockDate0.setTime(1173L);
      KeyEvent keyEvent0 = new KeyEvent(defaultTreeCellRenderer0, 2113, 2113, 11, 18, 't');
      InputEvent.getModifiersExText(18);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setSelectableDateRange(mockDate0, mockDate1);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.isValidateRoot();
      jDayChooser0.repaint(0L);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 10146, 0L, 34, 4235, '');
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getExpandedIcon();
      JButton jButton0 = new JButton("Windows", (Icon) null);
      jDayChooser0.selectedDay = jButton0;
      KeyEvent.getKeyText(736);
      System.setCurrentTimeMillis(1176L);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      JDayChooser jDayChooser2 = new JDayChooser(false);
      jDayChooser2.getPropertyChangeListeners("day");
      jDayChooser0.getMaximumSize();
      KeyEvent keyEvent1 = new KeyEvent(jDayChooser2, 428, 0L, 34, 14, '');
      jDayChooser0.keyPressed(keyEvent1);
      assertEquals(14, jDayChooser0.getDay());
      
      System.setCurrentTimeMillis(0L);
      jDayChooser1.updateUI();
      assertTrue(jDayChooser1.isDayBordersVisible());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jDayChooser0, (-2268), 97L, (-2268), (-2268), (-2268), (-2268), (-2268), (-2268), false, (-2268), (-2268), (-2268), (-1844.308));
      jDayChooser0.getToolTipText((MouseEvent) mouseWheelEvent0);
      JButton jButton0 = new JButton();
      jButton0.getAccessibleContext();
      jDayChooser0.selectedDay = jButton0;
      jDayChooser0.setDay((-2268));
      jDayChooser0.drawDays();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.710079913333388
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      int int0 = (-5277);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-5277), 35, 35, 35, '{');
      InputEvent.getModifiersExText(47);
      jDayChooser0.keyPressed(keyEvent0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = null;
      try {
        defaultStyledDocument0 = new DefaultStyledDocument((AbstractDocument.Content) null, styleContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.698555534979563
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      jDayChooser0.setDay(228);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.paintImmediately(3, 164, 8882, 8882);
      Color.getColor("TNvq.F1>jw#");
      MockDate mockDate0 = new MockDate(0L);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 8882, 164, 8882, 1, '2');
      defaultTreeCellRenderer0.getVisibleRect();
      MenuElement[] menuElementArray0 = new MenuElement[2];
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.getRolloverSelectedIcon();
      JMenuItem jMenuItem0 = new JMenuItem("`XZ", (Icon) null);
      menuElementArray0[0] = (MenuElement) jMenuItem0;
      jMenuItem0.getFocusListeners();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("`XZ", (Icon) null);
      menuElementArray0[1] = (MenuElement) jCheckBoxMenuItem0;
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(defaultTreeCellRenderer0, 1, 1916L, 211, 39, '!', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyPressed(menuKeyEvent0);
      Locale locale0 = Locale.KOREAN;
      jDayChooser0.setLocale(locale0);
      Element element0 = defaultStyledDocument0.getCharacterElement(3);
      AsyncBoxView asyncBoxView0 = new AsyncBoxView(element0, 1);
      // Undeclared exception!
      try { 
        asyncBoxView0.getGraphics();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.text.View", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMaxSelectableDate((Date) null);
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6789477095792162
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(4);
      jDayChooser0.setYear(29);
      System.setCurrentTimeMillis((-403L));
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      jDayChooser0.decorationBordersVisible = true;
      jDayChooser0.removeMouseListener(defaultCaret0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "day");
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 1261, 0, 3210, 36, '7');
      KeyEvent.getExtendedKeyCodeForChar(38);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.keyPressed(keyEvent0);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.7245232524096474
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.isValidateRoot();
      jDayChooser0.repaint(0L);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 34, 0L, 10146, 34, '');
      KeyEvent.getExtendedKeyCodeForChar(336);
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.weekOfYearVisible = false;
      jDayChooser0.getActionMap();
      jDayChooser0.getComponentPopupMenu();
      jDayChooser0.initialized = false;
      jDayChooser0.setOpaque(false);
      jDayChooser0.setDayBordersVisible(true);
      jDayChooser0.initialized = false;
      jDayChooser0.updateUI();
      jDayChooser0.updateUI();
      jDayChooser0.setDayBordersVisible(true);
      jDayChooser0.drawDays();
      SymbolTable symbolTable0 = new SymbolTable();
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
      char[] charArray0 = new char[9];
      charArray0[0] = '!';
      charArray0[1] = 'u';
      charArray0[2] = '*';
      charArray0[3] = '_';
      charArray0[4] = 'y';
      charArray0[5] = '[';
      charArray0[6] = '=';
      charArray0[7] = '{';
      charArray0[8] = 'H';
      XML11DTDConfiguration xML11DTDConfiguration0 = new XML11DTDConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      Locale locale0 = xML11DTDConfiguration0.getLocale();
      jDayChooser0.setLocale(locale0);
      assertEquals("eng", locale0.getISO3Language());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.weekOfYearVisible = true;
      jDayChooser0.getActionMap();
      jDayChooser0.getComponentPopupMenu();
      jDayChooser0.initialized = false;
      jDayChooser0.setOpaque(true);
      jDayChooser0.setDayBordersVisible(true);
      jDayChooser0.initialized = false;
      jDayChooser0.updateUI();
      jDayChooser0.updateUI();
      Color color0 = new Color(1751);
      jDayChooser0.setDecorationBackgroundColor(color0);
      jDayChooser0.drawDays();
      SymbolTable symbolTable0 = new SymbolTable();
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      jDayChooser0.decorationBordersVisible = true;
      jDayChooser0.removeMouseListener(defaultCaret0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 0, 40L, 0, 37, '7');
      KeyEvent.getExtendedKeyCodeForChar(223);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.keyPressed(keyEvent0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      jDayChooser0.decorationBordersVisible = true;
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.isRequestFocusEnabled();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 1354, 200L, (-630), (-630), '7');
      keyEvent0.paramString();
      jDayChooser0.maxDayCharacters = 9999;
      defaultCaret0.getBlinkRate();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("unknown type,keyCode=-630,keyText=\uFD8A,keyChar='7',modifiers=Ctrl+Alt,extModifiers=Meta+Ctrl+Alt Graph+Button1+Button2+Button3+Button4+Button5+Button6+Button7+Button8+Button9+Button10+Button11+Button12+Button13+Button14+Button15+Button16+Button17+Button18+Button19+Button20,keyLocation=KEY_LOCATION_UNKNOWN,rawCode=0,primaryLevelUnicode=0,scancode=0,extendedKeyCode=0x0", true);
      jCheckBoxMenuItem0.getAccelerator();
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.keyPressed(keyEvent0);
      System.setCurrentTimeMillis(0L);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(true);
      PDFState pDFState0 = new PDFState();
      pDFDocumentGraphics2D0.setPDFState(pDFState0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton1 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton1.paint(pDFDocumentGraphics2D0);
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser1.setEnabled(true);
      JMonthChooser jMonthChooser0 = new JMonthChooser(true);
      Locale locale0 = Locale.JAPAN;
      jDayChooser1.setLocale(locale0);
      jDayChooser0.setLocale(locale0);
      jDayChooser1.drawDays();
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.783944583305172
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 35, 538L, 10, 344, 'M');
      keyEvent0.paramString();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("day", false);
      jCheckBoxMenuItem0.getAccelerator();
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.keyPressed(keyEvent0);
      jDayChooser0.keyPressed(keyEvent0);
      System.setCurrentTimeMillis((-9223372036854775808L));
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser1.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false);
      PDFState pDFState0 = new PDFState();
      pDFDocumentGraphics2D0.setPDFState(pDFState0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton1 = jDayChooser0.new DecoratorButton();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton2 = jDayChooser1.new DecoratorButton();
      jDayChooser_DecoratorButton2.paint(pDFDocumentGraphics2D0);
      JDayChooser jDayChooser2 = new JDayChooser(false);
      jDayChooser2.setEnabled(false);
      jDayChooser0.drawDays();
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser2.updateUI();
      jDayChooser0.keyPressed(keyEvent0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      System.setCurrentTimeMillis(9223372036854775807L);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false);
      PDFState pDFState0 = new PDFState();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton1 = jDayChooser0.new DecoratorButton();
      JDayChooser jDayChooser1 = new JDayChooser(false);
      jDayChooser0.drawDays();
      jDayChooser1.setDay(0);
      jDayChooser0.drawDays();
  }
}
