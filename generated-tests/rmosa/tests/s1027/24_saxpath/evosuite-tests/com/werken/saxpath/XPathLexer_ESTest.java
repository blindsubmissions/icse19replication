/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 18:07:48 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.8518403811430223
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2 ");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.pipe();
      xPathLexer0.div();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7598660751898215
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.endPosition();
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("!:");
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5658843209624893
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.>{*(6");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("H", token0.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("{*(6", token2.getTokenText());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6031766877975011
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.>{*(6");
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.7181767835954866
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">9kz#oCSe");
      Token token0 = xPathLexer0.relationalOperator();
      xPathLexer0.endPosition();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("$mmKL\"71ItL,;");
      XPathLexer xPathLexer2 = new XPathLexer(">9kz#oCSe");
      xPathLexer1.and();
      xPathLexer2.at();
      xPathLexer2.setPreviousToken(token0);
      xPathLexer1.nextToken();
      Token token1 = xPathLexer1.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6419475867225972
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@:,+2{U");
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("@:,+2{U");
      xPathLexer1.plus();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.nextToken();
      Token token1 = xPathLexer1.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.8309372687620074
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.endPosition();
      xPathLexer0.setXPath("!H");
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.whitespace();
      Token token1 = xPathLexer0.nextToken();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6641633710312738
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":9f>sICv3");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer(":9f>sICv3");
      XPathLexer xPathLexer2 = new XPathLexer(":9f>sICv3");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer2.comma();
      assertEquals(":", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5658843209624895
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.>{*(6");
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("H", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8538765137493306
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("JR2t>");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("J", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("JR2t>");
      xPathLexer1.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("R2t", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer1.and();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.753965423304403
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_%");
      XPathLexer xPathLexer1 = new XPathLexer("_%");
      XPathLexer xPathLexer2 = new XPathLexer("_%");
      XPathLexer xPathLexer3 = new XPathLexer("_%");
      xPathLexer2.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5281189455022457
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.>{*(6");
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8762256111560017
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_%");
      XPathLexer xPathLexer1 = new XPathLexer("_%");
      XPathLexer xPathLexer2 = new XPathLexer("_%");
      XPathLexer xPathLexer3 = new XPathLexer("_%");
      xPathLexer2.star();
      xPathLexer0.leftParen();
      xPathLexer2.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6641633710312738
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":9f>sICv3");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer(":9f>sICv3");
      Token token0 = xPathLexer1.not();
      assertEquals(":", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(":9f>sICv3");
      xPathLexer2.mod();
      Token token1 = xPathLexer2.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("9", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5658843209624893
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.>{*(6");
      Token token0 = xPathLexer0.dollar();
      assertEquals("H", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.and();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(">", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("{*(6", token2.getTokenText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.641947586722597
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@:,+2{U");
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("@:,+2{U");
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      Token token1 = xPathLexer1.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6031766877975011
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.>{*(6");
      Token token0 = xPathLexer0.equals();
      assertEquals("H", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(".", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      xPathLexer0.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("{*(6", token3.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.7179950305590567
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@:,+2{U");
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("@:,+2{U");
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.doubleColon();
      xPathLexer1.nextToken();
      xPathLexer1.mod();
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5433749326685169
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",y> Zx1D");
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6901484657011141
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ai");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer(">9kz#oCSe");
      xPathLexer1.consume(0);
      xPathLexer1.minus();
      xPathLexer1.nextToken();
      xPathLexer0.consume();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.792089199190528
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@:,+2{U");
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("@:,+2{U");
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.nextToken();
      Token token1 = xPathLexer1.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iC");
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.5725982024717419
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ai");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer(">9kz#oCSe");
      xPathLexer1.nextToken();
      xPathLexer0.consume();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";t/Mf%2_.zG5tW@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(";t/Mf%2_.zG5tW@", token0.getTokenText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0449548942651063
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.>{*(6");
      xPathLexer0.dots();
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.329993092516931
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YM4M\"alzxc.WH");
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.170095068202145
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">9kz#oCSe");
      xPathLexer0.relationalOperator();
      xPathLexer0.endPosition();
      xPathLexer0.rightBracket();
      xPathLexer0.setXPath(":82zPOuD(,");
      xPathLexer0.identifier();
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4961489227485183
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",y> Zx1D");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4517782758837896
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G:V}f0/B#-!PZ=o(,#");
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.at();
      token1.toString();
      xPathLexer0.endPosition();
      token1.toString();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.number();
      token2.toString();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.mod();
      assertNull(token3);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hug6`'cR67)%s_[{#V(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("hug6", token0.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4868503774540949
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`djBBx");
      Token token0 = xPathLexer0.number();
      xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.rightBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.170095068202145
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">9kz#oCSe");
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      xPathLexer0.endPosition();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("9", token1.getTokenText());
      
      xPathLexer0.setXPath(":82zPOuD(,");
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.identifier();
      assertEquals("82zPOuD", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.and();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(1, token5.getTokenType());
      assertEquals("(", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(32, token6.getTokenType());
      assertEquals(",", token6.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.2832558494786026
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",y> Zx1D");
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4273727955935784
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.>{*(6");
      xPathLexer0.setXPath("@V(H@Se{W|Iss%c-@");
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F[^q");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("F", token0.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hug6`'cR67)%s_[{#V");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("h", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("ug6", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9295774419014158
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G:V}f0/B#-!PZ=o(,#");
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.endPosition();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.nextToken();
      Token token1 = new Token(18, "G:V}f0/B#-!PZ=o(,#", 18, 18);
      xPathLexer0.at();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.relationalOperator();
      assertNull(token2);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.3985894803522438
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G:V}f0/B#-!PZ=o(,#");
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.at();
      token0.toString();
      xPathLexer0.endPosition();
      token0.toString();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      xPathLexer0.comma();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nOB<0w;U<lp");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("nOB", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5868826621691603
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'F]<> X=G");
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.setXPath("'F]<> X=G");
      xPathLexer0.identifier();
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&8@b?achi%;Bd");
      XPathLexer xPathLexer1 = new XPathLexer("&8@b?achi%;Bd");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.2504789195750428
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";&%\"x>+[\"zH2;9sFZ?Q");
      xPathLexer0.colon();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S^)v&F,1^XC");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("S", token0.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w");
      XPathLexer xPathLexer1 = new XPathLexer("w");
      xPathLexer0.consume();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.9652019767761357
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$e:.<s");
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      token0.toString();
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.380294030466222
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.>{*(6");
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4868503774540949
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`djBBx");
      Token token0 = xPathLexer0.number();
      xPathLexer0.dollar();
      xPathLexer0.rightBracket();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.2775177539638247
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YM4M\"alzxc.WH");
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.number();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.4515935515249196
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">9kz#oCSe");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("kz", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("U5>0us");
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("U5>0us", token2.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("I", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C|`:jIz=r\"ROqq");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("C", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.5281189455022457
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.>{*(6");
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("H", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.relationalOperator();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.2775177539638247
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YM4M\"alzxc.WH");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.mod();
      assertNull(token2);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0890907707639654
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.consume(1024);
      xPathLexer0.setXPath(")");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.consume();
      assertEquals(")", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("JR2t>");
      XPathLexer xPathLexer1 = new XPathLexer("JR2t>");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("JR2t", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.1947580227344927
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";&%\"x>+[\"zH2;9sFZ?Q");
      xPathLexer0.colon();
      xPathLexer0.comma();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.9679698252357243
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.endPosition();
      xPathLexer0.setXPath("!H");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("H", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yxDVwqbz:k");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("yxDVwqbz", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.4868503774540949
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`djBBx");
      Token token0 = xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.13142854696191
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&8@b?achi%;Bd");
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("64-@L^])Q>");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("64-", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ryH5z2jkc?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("ryH5z2jkc", token0.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YM4M\"alzxc.WH");
      XPathLexer xPathLexer1 = new XPathLexer("YM4M\"alzxc.WH");
      XPathLexer xPathLexer2 = new XPathLexer("!t0'J;DI@cA3q$*}");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ez5h8GNw6");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Ez5h8GNw6", token0.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O9uA\"!g=`q+m");
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.3293239267338717
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V'oq1|Jv@%R lOq1M(");
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.equals();
      xPathLexer0.identifier();
      xPathLexer1.consume();
      xPathLexer1.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5550785138840821
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">9kz#oCSe");
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      xPathLexer0.endPosition();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("9", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.setXPath(":82zPOuD(,");
      xPathLexer0.identifier();
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(":8", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("(", token4.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.and();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(",", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.326956673842015
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iC");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("i", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("$+4x}]enHd*l2");
      xPathLexer0.identifier();
      xPathLexer0.identifier();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(26, token3.getTokenType());
      assertEquals("$", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.and();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(5, token5.getTokenType());
      assertEquals("+", token5.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D7Y#IxkfV1V");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("D7Y", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-g$0\")");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("g", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("myh> Zx1D");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.866155865655676
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">9kz#oCSe");
      Token token0 = xPathLexer0.relationalOperator();
      xPathLexer0.endPosition();
      XPathLexer xPathLexer1 = new XPathLexer("$mmKL\"71ItL,;");
      XPathLexer xPathLexer2 = new XPathLexer(">9kz#oCSe");
      xPathLexer1.and();
      Token token1 = xPathLexer2.at();
      assertEquals(">", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer2.setPreviousToken(token0);
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(26, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
      
      xPathLexer1.mod();
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("mmKL", token3.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.254420716502724
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".58v*G2X\"i8'>V_1");
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.div();
      xPathLexer0.number();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1800450633502244
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("M;Al}");
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.2775177539638247
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YM4M\"alzxc.WH");
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qdm9@OhDs'AP");
      Token token0 = xPathLexer0.identifier();
      assertEquals("Qdm9", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(16, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("OhDs", token2.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5701704417112425
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'F]<9> XR=G");
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("'", token0.getTokenText());
      
      xPathLexer0.number();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.not();
      assertEquals("]", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("9", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("XR", token6.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("76oI{t2V?oyr:8");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Wyj)/8&\"];#");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Wyj", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.016351948490226
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V'oq1|JvG%R lOq1M(");
      Token token0 = xPathLexer0.not();
      assertEquals("V", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("V'oq1|JvG%R lOq1M(");
      Token token1 = xPathLexer1.doubleColon();
      assertEquals("V'", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      xPathLexer1.consume(0);
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("'o", token2.getTokenText());
      
      xPathLexer1.number();
      xPathLexer1.operatorName();
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.3028713335207291
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V'oq1|Jv@%R lOq1M(");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.identifier();
      xPathLexer1.consume();
      xPathLexer1.or();
      xPathLexer1.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1F,/]X91KL[H2jVRK");
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      xPathLexer0.endPosition();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.9001450290774196
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",y> Zx1D");
      xPathLexer0.setXPath("S3i*.,q'T*-{");
      Token token0 = xPathLexer0.identifier();
      assertEquals("S3i", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.nextToken();
      assertEquals(20, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(".", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.and();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(",", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("q", token5.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.3537385294190496
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iC");
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("$+4x}]enHd*l2");
      xPathLexer0.identifier();
      xPathLexer0.minus();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.2435076825748417
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">9kz#oCSe");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(">9", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("kz", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.6419475867225972
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@:,+2{U");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals(",", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("+2", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("@:,+2{U");
      xPathLexer1.setPreviousToken(token1);
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("@", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      xPathLexer1.mod();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("{U", token5.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("TD2");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qdm9@OhDs'AP");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Qdm9", token0.getTokenText());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.3403786926736316
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&8@b?achi%;Bd");
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      xPathLexer0.consume();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i{");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.3537385294190496
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iC");
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      xPathLexer0.literal();
      xPathLexer0.setXPath("$+4x}]enHd*l2");
      xPathLexer0.setXPath("<F6/ =S}AS'");
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`deBBx");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`deBBx", token0.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.5934326699319592
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'F]<9> XR=G");
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("'", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("]", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("9", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("> ", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals("XR", token6.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.whitespace();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.whitespace();
      assertEquals("", token8.getTokenText());
      assertEquals((-2), token8.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.4479289748352342
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G:V}f0/B#-!PZ=o(,#");
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.at();
      token0.toString();
      xPathLexer0.endPosition();
      token0.toString();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.comma();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.9652019767761357
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$e:.<s");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.minus();
      assertEquals("$", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (15) (e)", string0);
      
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(7, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("s", token4.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M;Al}");
      XPathLexer xPathLexer1 = new XPathLexer("NsT0/0N");
      xPathLexer0.consume();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3Bn|) 6 [jWJ19u");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3O");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.number();
      assertEquals("3", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.9373399625265407
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">9kz#oCSe");
      Token token0 = xPathLexer0.relationalOperator();
      xPathLexer0.endPosition();
      XPathLexer xPathLexer1 = new XPathLexer("$mmKL\"71ItL,;");
      XPathLexer xPathLexer2 = new XPathLexer(">9kz#oCSe");
      xPathLexer1.and();
      xPathLexer1.consume(9);
      xPathLexer2.at();
      xPathLexer2.setPreviousToken(token0);
      xPathLexer1.nextToken();
      Token token1 = xPathLexer1.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.0574478650161778
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H.>{*(6");
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.2792307374940701
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".58v*G2X\"i8'>V_1");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".58", token0.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.div();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("v*G2X\"i8'>V_1", token2.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.6253129562173195
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":9f>sICv3");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer(":9f>sICv3");
      XPathLexer xPathLexer2 = new XPathLexer(":9f>sICv3");
      Token token0 = xPathLexer1.rightParen();
      assertEquals(":", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer2.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".|)xN");
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.9002831398484176
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.endPosition();
      xPathLexer0.consume();
      xPathLexer0.setXPath("!H");
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.mod();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.5821649742938535
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-g$0\")");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(6, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YKEu7Q1G!SD<7!Z");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("KEu7Q1G", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("LX7E]'v9Dd");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("LX7E", token0.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("^hyu@a\"$f: O1");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.3523641638188484
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".58v*G2X\"i8'>V_1");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(".58v", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(20, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("G2X", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.div();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("p.*fn^>");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("p.", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5.v*G2X\"i8'>V_1");
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I>=^P8h9");
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("I>=^P8h9");
      Token token0 = xPathLexer1.colon();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.endPosition();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("!=H");
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".08v*G2X\"i8'>V1");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".08", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.minus();
      assertEquals("v", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }
}
