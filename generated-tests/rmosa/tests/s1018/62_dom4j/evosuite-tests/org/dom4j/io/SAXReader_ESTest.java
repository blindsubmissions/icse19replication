/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 13:54:15 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.net.URLStreamHandler;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.Document;
import org.dom4j.DocumentFactory;
import org.dom4j.Element;
import org.dom4j.ElementHandler;
import org.dom4j.dom.DOMDocument;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.ElementStack;
import org.dom4j.io.PruningDispatchHandler;
import org.dom4j.io.PruningElementStack;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXReader;
import org.dom4j.tree.DefaultDocument;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.Parser;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "http://xml.org/sax/features/validation";
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("http://xml.org/sax/features/validation", false);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class http://xml.org/sax/features/validation not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "'wk;?jR;dSG.0:\"ujS");
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      dispatchHandler0.removeHandler((String) null);
      sAXReader0.addHandler("'wk;?jR;dSG.0:\"ujS", (ElementHandler) null);
      URI uRI0 = MockURI.aFTPURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.setValidation(true);
      DefaultDocument defaultDocument0 = new DefaultDocument();
      assertFalse(defaultDocument0.isReadOnly());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.setEntityResolver((EntityResolver) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.createXMLReader();
      DOMDocument dOMDocument0 = new DOMDocument();
      assertEquals((short)9, dOMDocument0.getNodeType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      xMLFilterImpl0.getContentHandler();
      MockFile mockFile0 = new MockFile("http://xml.org/sax/features/namespace-prefixes", "http://xml.org/sax/features/namespace-prefixes");
      mockFile0.setLastModified(0L);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      SAXParseException sAXParseException0 = new SAXParseException("http://xml.org/sax/features/namespace-prefixes", locatorImpl0);
      try { 
        sAXReader0.setProperty("http://xml.org/sax/features/namespace-prefixes", sAXParseException0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: http://xml.org/sax/features/namespace-prefixes
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.resetHandlers();
      String string0 = "//tmp/http:/xml.org/sax/features/use-locator20uw!yq}F3;^3";
      // Undeclared exception!
      try { 
        MockURI.create("//tmp/http:/xml.org/sax/features/use-locator20uw!yq}F3;^3");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 51: //tmp/http:/xml.org/sax/features/use-locator20uw!yq}F3;^3
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.72840754003429
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      File file0 = MockFile.createTempFile("shr.BJwcX~6", (String) null);
      xMLFilterImpl0.setEntityResolver((EntityResolver) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      // Undeclared exception!
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      sAXReader0.setDefaultHandler(dispatchHandler0);
      MockFile mockFile0 = new MockFile("org.dom4j.dom.DOMEntityReference", "org.dom4j.dom.DOMEntityReference");
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      sAXReader0.setStripWhitespaceText(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "IG,=\"?|^Z)d-";
      String string0 = "bi#^#zAY)/*eNZK\"yl";
      stringArray0[1] = "bi#^#zAY)/*eNZK\"yl";
      stringArray0[1] = "n}w+-+v,<";
      stringArray0[3] = "2OZ$v)hP k5O@ $IY1D";
      stringArray0[4] = "Y^OZB3>C}`(6";
      stringArray0[5] = "";
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, pruningDispatchHandler0, 0);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      sAXReader0.setDispatchHandler(dispatchHandler0);
      sAXReader0.isMergeAdjacentText();
      sAXReader0.isMergeAdjacentText();
      sAXReader0.addHandler("", dispatchHandler0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      ParserAdapter parserAdapter1 = null;
      try {
        parserAdapter1 = new ParserAdapter((Parser) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Parser argument must not be null
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      ElementStack elementStack0 = new ElementStack(0);
      Element[] elementArray0 = new Element[0];
      elementStack0.stack = elementArray0;
      elementStack0.getDispatchHandler();
      sAXReader0.setDispatchHandler((DispatchHandler) null);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'G';
      charArray0[1] = '&';
      charArray0[3] = 'Z';
      charArray0[4] = '&';
      charArray0[5] = 'G';
      charArray0[6] = 'O';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(parserAdapter0);
      sAXReader0.configureReader(parserAdapter0, sAXContentHandler0);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      sAXReader0.getEncoding();
      sAXReader0.addHandler((String) null, dispatchHandler0);
      boolean boolean0 = sAXReader0.isIncludeInternalDTDDeclarations();
      assertFalse(boolean0);
      
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      sAXReader0.setDocumentFactory(documentFactory0);
      sAXReader0.getDispatchHandler();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockFile.createTempFile("hr.BJw@cX~6", (String) null);
      xMLFilterImpl0.setEntityResolver((EntityResolver) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      try { 
        sAXReader0.read((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7914209200851943
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.endPrefixMapping("Fz)<1TFa6%c0FEKA");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, false);
      StringReader stringReader0 = new StringReader("Fz)<1TFa6%c0FEKA");
      char[] charArray0 = new char[9];
      charArray0[0] = 'G';
      charArray0[1] = 'M';
      charArray0[2] = 'a';
      charArray0[3] = '8';
      charArray0[4] = ')';
      charArray0[5] = '*';
      charArray0[6] = 'd';
      charArray0[7] = 'e';
      charArray0[8] = 'T';
      parserAdapter0.characters(charArray0, 58, (-3141));
      stringReader0.read();
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8033740429893714
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.uriPrefix = "org.dom4j.dom.DOMComment";
      sAXReader_SAXEntityResolver0.resolveEntity("add(Object) unsupported", "<Qdg{l%");
      sAXReader_SAXEntityResolver0.resolveEntity("", "");
      sAXReader_SAXEntityResolver0.uriPrefix = "";
      sAXReader_SAXEntityResolver0.resolveEntity("", "[G8A4nEXb8");
      SAXReader sAXReader0 = new SAXReader(false);
      StringReader stringReader0 = new StringReader("[G8A4nEXb8");
      try { 
        sAXReader0.read((Reader) stringReader0, " attributes: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  attributes:  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, false);
      sAXReader0.createDefaultEntityResolver("//tmp/],q>0.tmp");
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      xMLFilterImpl0.setDocumentLocator(locator2Impl0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockFile.createTempFile("uw!yq}F3;^3/", "uw!yq}F3;^3/");
      xMLFilterImpl0.setEntityResolver(xMLFilterImpl0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      // Undeclared exception!
      try { 
        sAXReader0.read("");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile.createTempFile("shr.BJwcX~6", "shr.BJwcX~6");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      MockFile mockFile0 = new MockFile("shr.BJwcX~6");
      sAXReader0.createDefaultEntityResolver("shr.BJwcX~6");
      mockFile0.setReadable(false, true);
      try { 
        MockURL.URL("shr.BJwcX~6");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: shr.BJwcX~6
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      sAXReader0.setXMLReader(xMLFilterImpl0);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = ".9N`";
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader(".9N`");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class .9N` not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.getEntityResolver();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      sAXReader0.getDocumentFactory();
      sAXReader0.getDocumentFactory();
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      assertFalse(sAXReader0.isStripWhitespaceText());
      
      sAXReader0.setStripWhitespaceText(true);
      assertTrue(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      assertFalse(sAXReader0.isMergeAdjacentText());
      
      sAXReader0.setMergeAdjacentText(true);
      assertTrue(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      Document document0 = defaultDocumentFactory0.createDocument();
      assertEquals((short)9, document0.getNodeType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      File file0 = MockFile.createTempFile("shr.BJwcX~6", (String) null);
      xMLFilterImpl0.setEntityResolver((EntityResolver) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      String string0 = null;
      URL uRL0 = file0.toURL();
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getErrorHandler();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockFile.createTempFile("shr.BJwcX~6", (String) null);
      xMLFilterImpl0.setEntityResolver((EntityResolver) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("shr.BJwcX~6");
      try { 
        sAXReader0.read((Reader) stringReader0, (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null, false);
      String string0 = null;
      sAXReader0.setIgnoreComments(false);
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockFile.createTempFile("shr.BJwcX~6", (String) null);
      xMLFilterImpl0.setEntityResolver((EntityResolver) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("shr.BJwcX~6");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      File file0 = MockFile.createTempFile("rD*68'0}-9jj\"[lb", "~$)HHqAF");
      sAXReader0.removeHandler("[ type: ");
      // Undeclared exception!
      try { 
        MockFile.createTempFile(".z", ".z", file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      try { 
        sAXReader0.setXMLReaderClassName("{r0R90");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class {r0R90 not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      URL uRL0 = MockURL.getFtpExample();
      sAXReader0.setStringInternEnabled(true);
      URI uRI0 = MockURL.toURI(uRL0);
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLFilterImpl0.setEntityResolver((EntityResolver) null);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, false);
      try { 
        sAXReader0.setFeature("org.dom4j.bean.BeanDocumentFactory", false);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature: org.dom4j.bean.BeanDocumentFactory
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("&@yMQfGlZnJ7\"");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("Ie~_fFLS3Io(M", (String) null);
      InputSource inputSource1 = sAXReader_SAXEntityResolver0.resolveEntity("&@yMQfGlZnJ7\"", "aKQBdy");
      assertNotSame(inputSource1, inputSource0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      String string0 = "shr.BJwcX~6";
      xMLFilterImpl0.skippedEntity("uw!yq}F3;^3/");
      MockFile.createTempFile("shr.BJwcX~6", "uw!yq}F3;^3/");
      xMLFilterImpl0.setEntityResolver((EntityResolver) null);
      StringReader stringReader0 = new StringReader("4g");
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      try { 
        MockURL.URL("shr.BJwcX~6", "//tmp/tmp/%iB*'y|Np0%iB*'y|Np0/tmp/%iB*'y|Np0%iB*'y|Np", "//tmp/tmp/%iB*'y|Np0%iB*'y|Np0/tmp/%iB*'y|Np0%iB*'y|Np");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: shr.bjwcx~6
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("<Qdg{l%");
      InputSource inputSource0 = new InputSource("<Qdg{l%");
      sAXReader_SAXEntityResolver0.resolveEntity("", "//tmp/http:/xml.org/sax/properties/declaration-handler0http:/xml.org/sax/properties/declaration-handler");
      sAXReader_SAXEntityResolver0.resolveEntity(")WZM)-a^", "<Qdg{l%");
      char[] charArray0 = new char[1];
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.getEncoding();
      URI uRI0 = MockURI.aFTPURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.798652206252129
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      File file0 = MockFile.createTempFile("shr.BJwcX~6", (String) null);
      xMLFilterImpl0.setEntityResolver((EntityResolver) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.821563807860364
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        sAXReader0.read((InputStream) pipedInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("<Qdg{l%");
      sAXReader_SAXEntityResolver0.uriPrefix = null;
      InputSource inputSource0 = new InputSource("<Qdg{l%");
      sAXReader_SAXEntityResolver0.resolveEntity("", "//tmp/http:/xml.org/sax/properties/declaration-handler0http:/xml.org/sax/properties/declaration-handler");
      char[] charArray0 = new char[1];
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      try { 
        sAXReader0.read((Reader) null, ")-{");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = null;
      MockFile.createTempFile("shr.BJwcX~6", (String) null);
      xMLFilterImpl0.setEntityResolver((EntityResolver) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      try { 
        sAXReader0.read((InputStream) mockFileInputStream0, "K9<_p]G#fw");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setEncoding("~x");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        sAXReader0.read((InputStream) pipedInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@61f43c50 Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@61f43c50 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      String string0 = "uw!yq}F3;^3/";
      String string1 = "shr.BJwcX~6";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockFile.createTempFile("shr.BJwcX~6", "uw!yq}F3;^3/");
      xMLFilterImpl0.setEntityResolver((EntityResolver) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      StringReader stringReader0 = new StringReader("");
      try { 
        sAXReader0.read((Reader) stringReader0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setEncoding("~x");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DOMDocument dOMDocument0 = new DOMDocument("~x");
      StringReader stringReader0 = new StringReader("Z^sl}i.RF");
      try { 
        sAXReader0.read((Reader) stringReader0, "*)'hj3(x  ~Ju*CU2");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@2faa5e5d Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@2faa5e5d Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      xMLFilterImpl0.setDocumentLocator(locator2Impl0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      File file0 = MockFile.createTempFile("shr.BJwcX~6", "uw!yq}F3;^3/");
      xMLFilterImpl0.setEntityResolver((EntityResolver) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      // Undeclared exception!
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setEncoding("http://xml.org/sax/properties/lexical-handler");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        sAXReader0.read((InputStream) pipedInputStream0, "Validation not supported for XMLReader: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Invalid encoding name \"HTTP://XML.ORG/SAX/PROPERTIES/LEXICAL-HANDLER\". Nested exception: Invalid encoding name \"HTTP://XML.ORG/SAX/PROPERTIES/LEXICAL-HANDLER\".
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      xMLFilterImpl0.setDocumentLocator(locator2Impl0);
      StringReader stringReader0 = new StringReader("org.jaxen.DefaultNavigator");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.setErrorHandler(xMLFilterImpl0);
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      MockFile mockFile0 = new MockFile("shr.BJwcX~6", "shr.BJwcX~6");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setEncoding("shr.BJwcX~6");
      URL uRL0 = mockFile0.toURL();
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "=v5<4u0q";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      sAXReader0.setEncoding("=v5<4u0q");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=v5<4u0q");
      String string1 = "JvVMl2+39QP";
      try { 
        sAXReader0.read("JvVMl2+39QP");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: JvVMl2+39QP Nested exception: no protocol: JvVMl2+39QP
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      String string0 = "Error on line ";
      defaultDocumentFactory0.createQName("Error on line ", "Error on line ", "Error on line ");
      Reader reader0 = null;
      sAXReader0.setEncoding("Error on line ");
      try { 
        sAXReader0.read((Reader) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      File file0 = MockFile.createTempFile("shr.BJwcX~6", (String) null);
      xMLFilterImpl0.setEntityResolver((EntityResolver) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      sAXReader0.setEncoding("shr.BJwcX~6");
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }
}
