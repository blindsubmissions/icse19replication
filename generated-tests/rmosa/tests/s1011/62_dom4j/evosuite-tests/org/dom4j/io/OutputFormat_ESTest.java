/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 10:05:33 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(" .");
      outputFormat0.setPadText(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('N');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (N)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.328515191203992
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-eHxpandEmpty-xhm9Xl";
      outputFormat0.setIndent("-eHxpandEmpty-xhm9Xl");
      stringArray0[1] = "-eHxpandEmpty-xhm9Xl";
      outputFormat0.setSuppressDeclaration(true);
      stringArray0[2] = "W)3<M>XQ~";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat.createCompactFormat();
      outputFormat0.parseOptions(stringArray0, 9);
      outputFormat0.parseOptions(stringArray0, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1842920302));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1842920302
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("C!qWyT%}ZOdkowv");
      outputFormat0.setIndent("-padText");
      assertEquals("-padText", outputFormat0.getIndent());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.509137344082687
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".s}mJ\"ub(Pu~~:";
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.8717814824679821
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "^9g/\"YaggK;kA";
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.setNewLineAfterNTags((-1737430600));
      outputFormat0.setEncoding(",+xM/]NfiQE40Q@@");
      outputFormat0.parseOptions(stringArray0, 738);
      outputFormat0.parseOptions(stringArray0, 2619);
      outputFormat0.parseOptions(stringArray0, 3);
      assertEquals((-1737430600), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat1 = new OutputFormat();
      int int0 = 3;
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".s}mJ\"ub(Pu~~:";
      stringArray0[1] = ".s}mJ\"ub(Pu~~:";
      outputFormat1.parseOptions(stringArray0, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setXHTML(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getEncoding();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setOmitEncoding(true);
      boolean boolean0 = outputFormat0.isXHTML();
      assertTrue(outputFormat0.isOmitEncoding());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("V3]lDqHjh2nis", false);
      outputFormat0.setEncoding("V3]lDqHjh2nis");
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.isNewLineAfterDeclaration();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "V3]lDqHjh2nis";
      stringArray0[1] = "V3]lDqHjh2nis";
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setPadText(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isOmitEncoding();
      outputFormat0.setNewlines(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.getIndent();
      outputFormat0.setOmitEncoding(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('$');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ($)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty6!", true, "-expandEmpty6!");
      String[] stringArray0 = new String[0];
      outputFormat0.parseOptions(stringArray0, 14);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("-expandEmpty6!", outputFormat0.getEncoding());
      assertEquals("-expandEmpty6!", outputFormat0.getIndent());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewlines(false);
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isTrimText());
      assertEquals("\n", string0);
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".s}mJ\"ub(Pu~~:";
      outputFormat0.setEncoding((String) null);
      outputFormat0.parseOptions(stringArray0, 1619);
      outputFormat0.parseOptions(stringArray0, 1619);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-4116));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4116
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmpty";
      outputFormat0.setPadText(false);
      stringArray0[1] = "-trimText";
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isPadText());
      
      outputFormat1.setPadText(false);
      outputFormat0.setIndent("6!");
      stringArray0[2] = "+4s2G.,<6";
      stringArray0[3] = "G`-ag6=DOY|'|n%";
      stringArray0[4] = "";
      stringArray0[5] = "";
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent(false);
      outputFormat0.isNewlines();
      outputFormat0.isTrimText();
      outputFormat0.isNewLineAfterDeclaration();
      boolean boolean0 = outputFormat0.isTrimText();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("", outputFormat0.getIndent());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertEquals(0, int0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      outputFormat0.setPadText(false);
      outputFormat0.isPadText();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setPadText(false);
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "B";
      stringArray0[4] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("qW5mL@{RGW>QLcEl8", false, "qW5mL@{RGW>QLcEl8");
      outputFormat0.isNewlines();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "qW5mL@{RGW>QLcEl8";
      stringArray0[1] = "";
      stringArray0[2] = "qW5mL@{RGW>QLcEl8";
      stringArray0[3] = "qW5mL@{RGW>QLcEl8";
      stringArray0[4] = "qW5mL@{RGW>QLcEl8";
      stringArray0[5] = "qW5mL@{RGW>QLcEl8";
      stringArray0[6] = "qW5mL@{RGW>QLcEl8";
      stringArray0[7] = "qW5mL@{RGW>QLcEl8";
      stringArray0[8] = "qW5mL@{RGW>QLcEl8";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      assertEquals("", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.7201248812718097
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(".oRwfxiF]r|", true);
      String[] stringArray0 = new String[7];
      outputFormat0.setNewlines(true);
      assertEquals(".oRwfxiF]r|", outputFormat0.getIndent());
      
      stringArray0[0] = "C";
      stringArray0[1] = ".oRwfxiF]r|";
      outputFormat0.setIndent(true);
      stringArray0[2] = "C";
      stringArray0[3] = ".oRwfxiF]r|";
      stringArray0[4] = ".oRwfxiF]r|";
      outputFormat0.parseOptions(stringArray0, 3);
      assertEquals("  ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4354735656251962
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-eHxpandEmpty-xhm9Xl";
      outputFormat0.setTrimText(false);
      assertTrue(outputFormat0.isNewlines());
      
      stringArray0[1] = "-eHxpandEmpty-xhm9Xl";
      stringArray0[2] = "W)3<M>XQ~";
      outputFormat0.setNewlines(false);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setPadText(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(false);
      outputFormat0.isPadText();
      outputFormat0.getLineSeparator();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setXHTML(false);
      outputFormat0.setPadText(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setTrimText(false);
      outputFormat0.isXHTML();
      outputFormat0.getIndent();
      outputFormat0.getIndent();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setIndent("\n");
      outputFormat2.setNewlines(true);
      outputFormat2.isNewLineAfterDeclaration();
      outputFormat1.setNewLineAfterNTags((-537));
      char char0 = outputFormat2.getAttributeQuoteCharacter();
      assertEquals("\n", outputFormat2.getIndent());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1165107682127633
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.setPadText(true);
      outputFormat0.setIndent("-xhtml");
      String[] stringArray0 = new String[12];
      stringArray0[0] = "";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-xhtml";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "J1^.pIcI6<Yy0uikIH";
      String[] stringArray0 = new String[4];
      stringArray0[1] = "C";
      stringArray0[2] = ".oRwfxiF]r|";
      OutputFormat outputFormat0 = new OutputFormat("C", false);
      outputFormat0.setXHTML(false);
      outputFormat0.isOmitEncoding();
      String[] stringArray1 = new String[3];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-990));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -990
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("J1^.pIcI6<Yy0uikIH", false);
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".oRwfxiF]r|";
      stringArray0[1] = "C";
      stringArray0[2] = ".oRwfxiF]r|";
      stringArray0[3] = ".oRwfxiF]r|";
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.setAttributeQuoteCharacter('\'');
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[9];
      outputFormat0.setTrimText(false);
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-xhtmlC";
      stringArray0[3] = "\"B&]AA";
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getNewLineAfterNTags();
      int int0 = 884;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty", false, "oX_}Wd");
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "-expandEmpty";
      stringArray0[2] = "-expandEmpty";
      stringArray0[3] = "oX_}Wd";
      stringArray0[4] = "-expandEmpty";
      stringArray0[5] = "oX_}Wd";
      stringArray0[6] = "oX_}Wd";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("fgj{", false);
      outputFormat0.setPadText(false);
      OutputFormat outputFormat1 = new OutputFormat("fgj{");
      outputFormat1.setOmitEncoding(true);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setExpandEmptyElements(false);
      outputFormat2.setNewLineAfterNTags(2);
      outputFormat2.setOmitEncoding(false);
      outputFormat2.setPadText(false);
      outputFormat1.setOmitEncoding(true);
      outputFormat0.setPadText(true);
      outputFormat2.setNewLineAfterDeclaration(false);
      outputFormat2.isOmitEncoding();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat1.setNewlines(true);
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertTrue(outputFormat0.isPadText());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.setIndent((String) null);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.setPadText(true);
      OutputFormat outputFormat1 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmpty-trimText";
      stringArray0[1] = "-padText";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "-trimText";
      stringArray0[4] = "-expandEmpty-trimText";
      stringArray0[5] = "-trimText";
      outputFormat1.parseOptions(stringArray0, 2808);
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.setLineSeparator("");
      OutputFormat outputFormat3 = new OutputFormat("-padText");
      outputFormat3.parseOptions(stringArray0, 2808);
      outputFormat3.parseOptions(stringArray0, 0);
      outputFormat1.parseOptions(stringArray0, 6);
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, (-2688));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2688
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "-trimText";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.setEncoding("-trimText");
      outputFormat0.parseOptions(stringArray0, 738);
      assertEquals("-trimText", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "-eHxpandEmpty-xhm9Xl";
      OutputFormat outputFormat0 = new OutputFormat("-eHxpandEmpty-xhm9Xl", true);
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[5];
      outputFormat0.setIndent("-eHxpandEmpty-xhm9Xl");
      String string1 = "}N";
      outputFormat0.setLineSeparator("}N");
      String string2 = "-indentSize";
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "-eHxpandEmpty-xhm9Xl";
      stringArray0[2] = "-eHxpandEmpty-xhm9Xl";
      stringArray0[3] = "-eHxpandEmpty-xhm9Xl";
      outputFormat0.setSuppressDeclaration(true);
      stringArray0[4] = "-eHxpandEmpty-xhm9Xl";
      int int0 = 2132;
      outputFormat0.parseOptions(stringArray0, 2132);
      outputFormat0.parseOptions(stringArray0, 2132);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-eHxpandEmpty-xhm9Xl\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indent", false, "O.J_|\"[)");
      assertEquals("-indent", outputFormat0.getIndent());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "O.J_|\"[)";
      stringArray0[1] = "-indent";
      stringArray0[2] = "O.J_|\"[)";
      stringArray0[3] = "u%'yCB;NH;'W]n57<4";
      stringArray0[4] = "-indent";
      stringArray0[5] = "-indent";
      stringArray0[6] = "O.J_|\"[)";
      stringArray0[7] = "-indent";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("O.J_|\"[)", outputFormat0.getIndent());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setTrimText(false);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setOmitEncoding(true);
      outputFormat0.setNewlines(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "W)3<M>XQ~";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-omitEncoding";
      stringArray0[3] = "W)3<M>XQ~";
      stringArray0[4] = "-omitEncoding";
      outputFormat1.parseOptions(stringArray0, 1);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-1192));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1192
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.setPadText(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-xhtml";
      stringArray0[1] = "-xhtml";
      stringArray0[2] = "-xhtml";
      stringArray0[3] = "-xhtml";
      stringArray0[4] = "-xhtml";
      stringArray0[5] = "-suppressDeclaration";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isXHTML());
      assertEquals(6, int0);
  }
}
