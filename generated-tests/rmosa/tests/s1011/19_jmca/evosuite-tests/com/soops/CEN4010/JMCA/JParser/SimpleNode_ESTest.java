/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 10:14:47 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.7653029452149065
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*ge");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 34);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 34);
      simpleNode1.jjtGetParent();
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter(34);
      simpleNode0.jjtSetParent(simpleNode1);
      stringWriter0.close();
      simpleNode1.setIdentifier("=");
      simpleNode0.dump("*ge", stringWriter0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
      
      simpleNode1.dump("*ge", stringWriter0);
      assertEquals("<PrimitiveType><PrimitiveType>\n  <identifier>=</identifier>\n</PrimitiveType>\n</PrimitiveType>\n<PrimitiveType>\n  <identifier>=</identifier>\n</PrimitiveType>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 2154;
      SimpleNode simpleNode0 = new SimpleNode(2154);
      simpleNode0.jjtClose();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 2154);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2154
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6264744012605674
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter(2062);
      simpleNode0.dump("1g`nQO!6Uq`r'33g(:{", stringWriter0);
      simpleNode0.setIdentifier("=");
      simpleNode0.setIdentifier("AndExpression");
      StringWriter stringWriter1 = new StringWriter(5223);
      simpleNode0.dump(".%f", stringWriter0);
      simpleNode0.toString();
      simpleNode0.dump("1g`nQO!6Uq`r'33g(:{", stringWriter1);
      SimpleNode simpleNode1 = new SimpleNode(971);
      simpleNode1.dump("1g`nQO!6Uq`r'33g(:{", stringWriter1);
      simpleNode1.dump("EHD3X^$pg@!g", stringWriter1);
      simpleNode1.dump("", stringWriter1);
      simpleNode0.dump("AndExpression", stringWriter0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.7752107668722757
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*ge");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      StringWriter stringWriter0 = new StringWriter(16);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 18);
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      simpleNode0.setIdentifier("&");
      simpleNode0.toString("");
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter1 = new StringWriter(305);
      stringWriter1.flush();
      simpleNode0.dump("<=", stringWriter1);
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.dump(".%f", stringWriter0);
      simpleNode0.dump("sNh", stringWriter1);
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      simpleNode0.dump("*ge", stringWriter1);
      simpleNode0.dump("MXE |5'/V>m%A*31h", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n  <identifier>*le</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n  <identifier>*le</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n  <identifier>*le</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n  <identifier>*le</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      simpleNode0.dump("vO7MJ$n", stringWriter1);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n  <identifier>*le</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n  <identifier>*le</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n  <identifier>*le</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n  <identifier>*le</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "";
      JavaParser javaParser0 = new JavaParser("");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      Writer writer0 = null;
      simpleNode0.dump("", (Writer) null);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.toString("c{x9v(WhX'\"6py_9,");
      simpleNode0.setIdentifier("ExclusiveOrExpression");
      StringWriter stringWriter0 = new StringWriter(63);
      simpleNode0.dump("c{x9v(WhX'\"6py_9,", stringWriter0);
      simpleNode0.dump("c{x9v(WhX'\"6py_9,", stringWriter0);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5634196115136338
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 88);
      StringWriter stringWriter0 = new StringWriter(88);
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("&", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 88);
      assertEquals(89, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      String string0 = "";
      StringWriter stringWriter0 = new StringWriter(334);
      simpleNode0.setIdentifier("");
      simpleNode0.dump("", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(334);
      int int0 = 351;
      // Undeclared exception!
      try { 
        stringWriter0.write("", (-4177984), (-1612921304));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(158);
      SimpleNode simpleNode0 = new SimpleNode(2035);
      SimpleNode simpleNode1 = new SimpleNode(2035);
      simpleNode0.jjtAddChild(simpleNode1, 39);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(40, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6542552578629924
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*ge");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 1);
      simpleNode1.jjtGetParent();
      simpleNode1.parent = (Node) simpleNode0;
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter(34);
      stringWriter0.close();
      simpleNode1.setIdentifier(">=");
      simpleNode0.dump("*ge", stringWriter0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6852557260599839
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      simpleNode0.jjtGetParent();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      simpleNode0.jjtAddChild((Node) null, 88);
      StringWriter stringWriter0 = new StringWriter(88);
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      simpleNode0.setIdentifier(">");
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 395);
      simpleNode0.dump(")", stringWriter0);
      assertEquals(396, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5500569563964232
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 45);
      StringWriter stringWriter0 = new StringWriter(48);
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter1 = new StringWriter(385);
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter1);
      simpleNode0.dump(">", stringWriter1);
      assertEquals(46, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "*ge";
      StringReader stringReader0 = new StringReader("/$KBsm3:=HDQI#(Y<");
      JavaParser javaParser0 = new JavaParser("*ge");
      int int0 = 16;
      StringWriter stringWriter0 = new StringWriter(16);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 18);
      simpleNode0.dump("<<", stringWriter0);
      simpleNode0.setIdentifier("*ge");
      String string1 = "<=";
      simpleNode0.setIdentifier("<<");
      int int1 = 305;
      StringWriter stringWriter1 = new StringWriter(47);
      stringWriter1.flush();
      String string2 = "/5\\EQ~aq^";
      simpleNode0.dump("/5EQ~aq^", stringWriter1);
      Writer writer0 = null;
      // Undeclared exception!
      try { 
        simpleNode0.dump("IyaPm|$jAh;", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&&");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 48);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 48);
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<h619$SM", stringWriter0);
      assertEquals("<RelationalExpression>\n  <identifier>*amp</identifier>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*ge");
      SimpleNode simpleNode0 = new SimpleNode(19);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter(21);
      CharBuffer.wrap((CharSequence) ";");
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "*ge");
      simpleNode0.dump(":v", stringWriter1);
      simpleNode0.setIdentifier("JZ");
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "M");
      StringWriter stringWriter3 = new StringWriter(59);
      stringWriter3.close();
      simpleNode0.setIdentifier("<3,ZcVIRSp!");
      simpleNode0.dump("*lshft", stringWriter3);
      simpleNode0.dump("VariableDeclaratorId", stringWriter0);
      simpleNode0.dump("~u", stringWriter2);
      assertEquals("*ge<VariableInitializer>\n</VariableInitializer>\nM<VariableInitializer>\n  <identifier>JZ</identifier>\n  <identifier><3,ZcVIRSp!</identifier>\n</VariableInitializer>\n<VariableInitializer>\n  <identifier>JZ</identifier>\n  <identifier><3,ZcVIRSp!</identifier>\n</VariableInitializer>\n", stringWriter2.toString());
      assertEquals("*ge<VariableInitializer>\n</VariableInitializer>\nM<VariableInitializer>\n  <identifier>JZ</identifier>\n  <identifier><3,ZcVIRSp!</identifier>\n</VariableInitializer>\n<VariableInitializer>\n  <identifier>JZ</identifier>\n  <identifier><3,ZcVIRSp!</identifier>\n</VariableInitializer>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*ge");
      JavaParser javaParser0 = new JavaParser("*ge");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 30);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 30);
      simpleNode0.jjtAddChild(simpleNode1, 34);
      StringWriter stringWriter0 = new StringWriter(30);
      simpleNode0.id = 30;
      simpleNode0.setIdentifier(">>");
      simpleNode1.dump(">=", stringWriter0);
      simpleNode0.dump("*ge", stringWriter0);
      assertEquals(35, simpleNode0.jjtGetNumChildren());
      
      simpleNode1.dump("*ge", stringWriter0);
      simpleNode1.dump("#g&E&*cS3&!/", stringWriter0);
      assertEquals("<ClassOrInterfaceType>\n  <identifier>*rshft</identifier>\n</ClassOrInterfaceType>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.537368801781397
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 43);
      StringWriter stringWriter0 = new StringWriter(48);
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      simpleNode0.setIdentifier("{");
      simpleNode0.setIdentifier("n;t:H=(d(*75[[");
      StringWriter stringWriter1 = new StringWriter(43);
      simpleNode0.dump("{", stringWriter0);
      simpleNode0.dump("n;t:H=(d(*75[[", stringWriter0);
      simpleNode0.dump("{", stringWriter1);
      StringWriter stringWriter2 = stringWriter0.append('{');
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) "n;t:H=(d(*75[[");
      simpleNode0.dump("}", stringWriter3);
      assertEquals(44, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2);
      simpleNode0.jjtGetParent();
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(2);
      SimpleNode simpleNode1 = new SimpleNode(2);
      simpleNode1.dump("ImportDeclaration", stringWriter0);
      String string0 = "{";
      simpleNode0.setIdentifier("ThrowStatement");
      StringWriter stringWriter1 = new StringWriter(1594);
      simpleNode0.setIdentifier("ThrowStatement");
      simpleNode0.setIdentifier("}");
      simpleNode0.dump("{", stringWriter1);
      simpleNode1.dump("NormalAnnotation", stringWriter1);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "*a$P:]9?mB:_9[6G0)", 10, 39);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*ge");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      StringWriter stringWriter0 = new StringWriter(16);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 18);
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      simpleNode0.setIdentifier("&");
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter1 = new StringWriter(305);
      stringWriter1.flush();
      simpleNode0.dump("sx<Dr", stringWriter0);
      simpleNode0.dump("", stringWriter1);
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump("g5", stringWriter1);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 10);
      Node[] nodeArray0 = new Node[0];
      simpleNode1.children = nodeArray0;
      simpleNode1.dump("sx<Dr", stringWriter1);
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      simpleNode0.dump("Annotation", stringWriter1);
      simpleNode0.dump("O_l eKq{Mn%", stringWriter1);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n  <identifier>*le</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n  <identifier>*le</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n  <identifier>*le</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n  <identifier>*le</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*ge");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      StringWriter stringWriter0 = new StringWriter(16);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 18);
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      simpleNode0.setIdentifier(")");
      simpleNode0.setIdentifier("*a$P:]9?mB:_9[6G0)");
      StringWriter stringWriter1 = new StringWriter(305);
      stringWriter1.flush();
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-1633));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      simpleNode1.dump(" GL`$(D#|Qr;|^~#n", stringWriter1);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 16);
      stringWriter1.append((CharSequence) ";");
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump(";", stringWriter1);
      simpleNode0.dump("", stringWriter2);
      simpleNode2.dump("VariableDeclaratorId", stringWriter0);
      SimpleNode simpleNode3 = new SimpleNode(16);
      try { 
        javaParser0.AnnotationTypeDeclaration((-1219));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: *
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 2);
      StringWriter stringWriter0 = new StringWriter(2051);
      simpleNode0.setIdentifier("<");
      simpleNode0.setIdentifier("</identifier>");
      StringWriter stringWriter1 = new StringWriter(420);
      String string0 = "Ac";
      simpleNode0.dump("Ac", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(420);
      StringWriter stringWriter2 = new StringWriter();
      simpleNode1.dump(".%f", stringWriter2);
      SimpleNode simpleNode2 = new SimpleNode(2);
      simpleNode2.dump("O", stringWriter1);
      simpleNode0.dump("@JLhndaSd_T1*C!o8#u", stringWriter2);
      // Undeclared exception!
      try { 
        stringWriter1.append((CharSequence) "1g`nQO!6Uq`r'33g(:{", (-1733830551), (-1085897390));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
