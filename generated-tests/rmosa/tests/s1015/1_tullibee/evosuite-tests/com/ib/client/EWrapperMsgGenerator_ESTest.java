/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 11:54:24 GMT 2018
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.TagValue;
import com.ib.client.UnderComp;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.scannerParameters((String) null);
      assertEquals("SCANNER PARAMETERS:\nnull", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Contract contract0 = new Contract(498, "U@0SYiqnbb+}g<b", (String) null, "", (-1218.6963451318), "&b", "", "&b", (String) null, (String) null, (Vector) null, "OptionImpliedVolatility", false, "13WeekHigh", "Vl");
      Vector<Integer> vector0 = new Vector<Integer>();
      contract0.m_primaryExch = "6";
      OrderState orderState0 = new OrderState();
      Order order0 = new Order();
      EWrapperMsgGenerator.updateAccountTime("&b");
      EWrapperMsgGenerator.currentTime(498);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.updateAccountValue((String) null, (String) null, "", (String) null);
      assertEquals("updateAccountValue: null null  null", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract((-1495), "U", "a-cfGkVrj1V`", "", (-1495), "N>7", " designatedLocation=", "U", "kVr=rfk*A}R'F[rRaD", (String) null, vector0, "", true, (String) null, (String) null);
      Execution execution0 = new Execution();
      String string0 = EWrapperMsgGenerator.execDetails((-1495), contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = -1495\norderId = 0\nclientId = 0\nsymbol = U\nsecType = a-cfGkVrj1V`\nexpiry = \nstrike = -1495.0\nright = N>7\ncontractExchange = U\ncurrency = kVr=rfk*A}R'F[rRaD\nlocalSymbol = null\nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.execDetailsEnd(0);
      assertEquals("reqId = 0 =============== end ===============", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Order order0 = new Order();
      EWrapperMsgGenerator.tickGeneric(0, 3, 1.7976931348623157E308);
      System.setCurrentTimeMillis(442L);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Contract contract0 = new Contract();
      OrderState orderState0 = new OrderState((String) null, (String) null, (String) null, (String) null, 0, 0, 0.0, (String) null, (String) null);
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.scannerDataEnd(0);
      assertEquals("id = 0 =============== end ===============", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      contractDetails0.m_putable = false;
      contractDetails0.m_descAppend = null;
      contractDetails0.m_putable = true;
      EWrapperMsgGenerator.bondContractDetails(1938, contractDetails0);
      EWrapperMsgGenerator.managedAccounts((String) null);
      EWrapperMsgGenerator.updatePortfolio(contractDetails0.m_summary, 0, 0, (-1.0), (-1.0), (-1296.56887963), 0.0, "contractExchange = ");
      System.setCurrentTimeMillis(1938);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Contract contract0 = new Contract();
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.historicalData(0, (String) null, 0.0, 0, 0, 0.0, Integer.MAX_VALUE, 2, 1.7976931348623157E308, false);
      assertEquals("id=0 date = null open=0.0 high=0.0 low=0.0 close=0.0 volume=2147483647 count=2 WAP=1.7976931348623157E308 hasGaps=false", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EWrapperMsgGenerator.openOrderEnd();
      Order order0 = new Order();
      assertFalse(order0.m_blockOrder);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.nextValidId(3592);
      assertEquals("Next Valid Order ID: 3592", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.orderStatus(0, (String) null, 0, 'c', 2, 0, '?', 0, Integer.MAX_VALUE, (String) null);
      assertEquals("order status: orderId=0 clientId=2147483647 permId=0 status=null filled=0 remaining=99 avgFillPrice=2.0 lastFillPrice=0.0 parent Id=63 whyHeld=null", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.updateMktDepth(0, 0, 1, 0, 0, 'y');
      assertEquals("updateMktDepth: 0 0 1 0 0.0 121", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(Integer.MAX_VALUE, (-3230), 1.7976931348623157E308, 0, 0, 266.9515811);
      assertEquals("id=2147483647  unknown: vol = N/A delta = 0.0", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.tickPrice(0, 0, 1.7976931348623157E308, 'c');
      assertEquals("id=0  bidSize=1.7976931348623157E308  canAutoExecute", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, (String) null, 0.0, ";#S~%aO9.^<t", (String) null, 0, "", (String) null, (String) null, (String) null, "=", " permId=", "t('=KH2x3;wyN;", "");
      String string0 = EWrapperMsgGenerator.contractDetails((-1015), contractDetails0);
      assertEquals("reqId = -1015 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 0.0\nprice magnifier = 0\norderTypes = ;#S~%aO9.^<t\nvalidExchanges = null\nunderConId = 0\nlongName = \ncontractMonth = null\nindustry = null\ncategory = null\nsubcategory = =\ntimeZoneId =  permId=\ntradingHours = t('=KH2x3;wyN;\nliquidHours = \n ---- Contract Details End ----\n", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      Contract contract0 = new Contract();
      String string0 = EWrapperMsgGenerator.contractDetailsEnd(0);
      assertEquals("reqId = 0 =============== end ===============", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation(Integer.MAX_VALUE, (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.tickString(0, Integer.MAX_VALUE, "O");
      assertEquals("id=0  unknown=O", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.SCANNER_PARAMETERS;
      String string1 = EWrapperMsgGenerator.updateNewsBulletin(22, (-1160), "vw$iB8I/{AJy", "SCANNER PARAMETERS:");
      assertEquals("MsgId=22 :: MsgType=-1160 :: Origin=SCANNER PARAMETERS: :: Message=vw$iB8I/{AJy", string1);
      
      String string2 = EWrapperMsgGenerator.realtimeBar(22, (-1016L), (-1160), (-1160), (-55.317728229908504), (-1016L), 0L, (-1016L), (-16));
      assertEquals("id=22 time = -1016 open=-1160.0 high=-1160.0 low=-55.317728229908504 close=-1016.0 volume=0 count=-16 WAP=-1016.0", string2);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      assertEquals(" =============== end ===============", eWrapperMsgGenerator0.openOrderEnd());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Contract contract0 = new Contract();
      Integer integer0 = new Integer(0);
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      Contract contract1 = new Contract(0, (String) null, "BAG", (String) null, 0.0, (String) null, (String) null, (String) null, " volatilityType=", "BAG", (Vector) null, " volatilityType=", false, (String) null, (String) null);
      EWrapperMsgGenerator.tickPrice(0, 0, 1.7976931348623157E308, 0);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.fundamentalData(0, "");
      assertEquals("id  = 0 len = 0\n", string0);
      
      String string1 = EWrapperMsgGenerator.tickSnapshotEnd(0);
      assertEquals("id=0 =============== end ===============", string1);
      
      ContractDetails contractDetails0 = new ContractDetails();
      contractDetails0.m_longName = "V.j:!IX1E7;O{r";
      contractDetails0.m_industry = null;
      contractDetails0.m_maturity = "";
      String string2 = EWrapperMsgGenerator.scannerData(0, 0, contractDetails0, (String) null, "K>2&jLwD>", "-", (String) null);
      assertEquals("id = 0 rank=0 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=null benchmark=K>2&jLwD> projection=- legsStr=null", string2);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.SCANNER_PARAMETERS;
      Vector<Integer> vector0 = new Vector<Integer>();
      Contract contract0 = new Contract();
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      Order order1 = new Order();
      OrderState orderState1 = new OrderState();
      order1.m_orderType = null;
      order1.m_algoStrategy = "category = ";
      String string1 = EWrapperMsgGenerator.tickEFP('m', 0, 'y', (String) null, 0, 0, (String) null, 0, 0);
      EWrapperMsgGenerator.openOrder((-947), contract0, order0, orderState0);
      Order order2 = new Order();
      String string2 = EWrapperMsgGenerator.openOrder(0, contract0, order2, orderState1);
      assertFalse(string2.equals((Object)string1));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(0, 0, (String) null, 0, 0, 0.0, 0);
      assertEquals("updateMktDepth: 0 0 null 0 0 0.0 0", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.accountDownloadEnd("w/gdDFip?pMbA\"k<G");
      assertEquals("accountDownloadEnd: w/gdDFip?pMbA\"k<G", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.receiveFA(0, (String) null);
      assertEquals("FA: null null", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Contract contract0 = new Contract();
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      Order order0 = new Order();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract0, order0, (OrderState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 13, 0, 1.7976931348623157E308, 0, Integer.MAX_VALUE);
      assertEquals("id=0  modelOptComp: vol = 0.0 delta = N/A: modelPrice = 0.0: pvDividend = 2.147483647E9", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1557, 13, (-1748.463792), 1557, (-3059.3), 133.9128050440497);
      assertEquals("id=1557  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = 133.9128050440497", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.SCANNER_PARAMETERS;
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(38);
      vector0.add(integer0);
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.tickOptionComputation(2, 0, 0.0, (-1223.0), (-1.0), Integer.MAX_VALUE);
      EWrapperMsgGenerator.tickOptionComputation(0, 13, 1.7976931348623157E308, Integer.MAX_VALUE, 'm', 1.7976931348623157E308);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-2132), 13, (-2132), (-4852.946533685573), (-2132), (-2132));
      assertEquals("id=-2132  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(13, (-6745), (-6745), 1.7976931348623157E308, 1.7976931348623157E308, (-1.0));
      assertEquals("id=13  unknown: vol = N/A delta = N/A", string1);
      
      System.setCurrentTimeMillis(1L);
      String string2 = EWrapperMsgGenerator.tickOptionComputation(13, (-1645), (-6745), 0.0, (-2132), 1.0);
      assertEquals("id=13  unknown: vol = N/A delta = 0.0", string2);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Order order0 = new Order();
      Contract contract0 = new Contract();
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      OrderState orderState1 = new OrderState();
      EWrapperMsgGenerator.openOrder(1, contract0, order0, orderState1);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 13, 1.7976931348623157E308, 13, 1.7976931348623157E308, 0);
      assertEquals("id=0  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = 0.0", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Contract contract0 = new Contract();
      Integer integer0 = new Integer(0);
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      Contract contract1 = new Contract(0, (String) null, "BAG", (String) null, 0.0, (String) null, (String) null, (String) null, " volatilityType=", "BAG", (Vector) null, " volatilityType=", false, (String) null, (String) null);
      String string0 = EWrapperMsgGenerator.openOrder((-2132), contract1, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Contract contract0 = new Contract();
      Integer integer0 = new Integer(0);
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      Contract contract1 = new Contract(0, (String) null, "BAG", (String) null, 2160.7416, (String) null, "/{Z >Fx{", (String) null, " volatilityType=", "BAG", (Vector) null, " volatilityType=", false, (String) null, (String) null);
      contract1.m_comboLegsDescrip = "O";
      String string0 = EWrapperMsgGenerator.openOrder((-2132), contract1, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Contract contract0 = new Contract();
      Integer integer0 = new Integer(0);
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      contract0.m_secIdType = null;
      order0.m_algoStrategy = "?N`n|# /C\"";
      Contract contract1 = new Contract(0, (String) null, "BAG", (String) null, 2160.7416, (String) null, (String) null, (String) null, " volatilityType=", "BAG", (Vector) null, " volatilityType=", false, (String) null, (String) null);
      EWrapperMsgGenerator.openOrder((-2132), contract1, order0, orderState0);
      order0.m_basisPoints = 961.516014576;
      Contract contract2 = new Contract(19, (String) null, "OptionPutOpenInterest", (String) null, 658.4920839465756, " volatilityType=", "?N`n|# /C\"", (String) null, (String) null, "\"gstF4", (Vector) null, "contractMonth = ", true, "R3]q%lC3;XJlYd|J0c", "OptionPutOpenInterest");
      String string0 = EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract1, order0, orderState0);
      EWrapperMsgGenerator.openOrder((-1983237063), contract2, order0, orderState0);
      String string1 = EWrapperMsgGenerator.openOrder(19, contract0, order0, orderState0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Contract contract0 = new Contract();
      Integer integer0 = new Integer(0);
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      order0.m_algoStrategy = "?N`n|# /Cx\"";
      Contract contract1 = new Contract(0, (String) null, "BAG", (String) null, 2160.7416, (String) null, (String) null, (String) null, " volatilityType=", "BAG", (Vector) null, " volatilityType=", false, (String) null, (String) null);
      Vector<TagValue> vector0 = new Vector<TagValue>();
      order0.m_algoParams = vector0;
      String string0 = EWrapperMsgGenerator.openOrder((-2132), contract1, order0, orderState0);
      TagValue tagValue0 = new TagValue();
      vector0.add(tagValue0);
      Contract contract2 = new Contract(0, "  It does not support current time requests.", (String) null, (String) null, (-1.0), "!Bz4a+0%a.|QG0", "l)GG&6%t7x BX7+,w$", "", (String) null, (String) null, (Vector) null, (String) null, false, "<mnVEGmFRp", (String) null);
      EWrapperMsgGenerator.openOrder(25, contract0, order0, orderState0);
      System.setCurrentTimeMillis(3);
      String string1 = EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract1, order0, orderState0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Contract contract0 = new Contract();
      Integer integer0 = new Integer(0);
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      orderState0.m_warningText = null;
      order0.m_algoStrategy = "?N`n|# /Cx\"";
      Contract contract1 = new Contract(0, (String) null, (String) null, (String) null, 2160.7416, (String) null, (String) null, (String) null, "gI8\u0007", (String) null, (Vector) null, "gI8\u0007", false, (String) null, (String) null);
      Vector<TagValue> vector0 = new Vector<TagValue>();
      order0.m_algoParams = vector0;
      EWrapperMsgGenerator.tickSize(Integer.MAX_VALUE, 0, 'y');
      order0.m_eTradeOnly = true;
      System.setCurrentTimeMillis(1532L);
      contract1.m_secId = null;
      TagValue tagValue0 = new TagValue();
      vector0.add(tagValue0);
      Contract contract2 = new Contract((-1628612547), (String) null, ":]3l?yxF[3", "mt;", Integer.MAX_VALUE, (String) null, (String) null, "currency = ", "!X[S)0emh", (String) null, order0.m_algoParams, "OptionBidExchStr", false, "", (String) null);
      String string0 = EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract2, order0, orderState0);
      vector0.add(tagValue0);
      System.setCurrentTimeMillis(97L);
      System.setCurrentTimeMillis(0);
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      String string1 = EWrapperMsgGenerator.openOrder(698, contract1, order0, orderState0);
      assertFalse(string1.equals((Object)string0));
  }
}
