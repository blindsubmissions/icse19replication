/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 12:20:27 GMT 2018
 */

package org.jsecurity.authc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetAddress;
import java.net.UnknownHostException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.jsecurity.authc.UsernamePasswordToken;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UsernamePasswordToken_ESTest extends UsernamePasswordToken_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      char[] charArray0 = new char[5];
      charArray0[0] = 'W';
      charArray0[1] = '[';
      charArray0[2] = '+';
      charArray0[3] = 'Z';
      charArray0[4] = 'f';
      usernamePasswordToken0.setPassword(charArray0);
      String string0 = "O;P@N[#'jF~V#U!>ok,";
      byte[] byteArray0 = new byte[2];
      usernamePasswordToken0.setRememberMe(false);
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      try { 
        MockInetAddress.getByAddress("O;P@N[#'jF~V#U!>ok,", byteArray0);
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Not IPv4: [-1, 0]
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.setUsername((String) null);
      char[] charArray0 = new char[8];
      charArray0[0] = '*';
      charArray0[1] = 'C';
      charArray0[2] = '(';
      charArray0[3] = '*';
      charArray0[4] = 'M';
      charArray0[5] = 'k';
      charArray0[6] = '+';
      charArray0[7] = 'S';
      usernamePasswordToken0.setPassword(charArray0);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      char[] charArray0 = new char[0];
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("@b", charArray0);
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.clear();
      String string0 = "C<";
      usernamePasswordToken0.setUsername("C<");
      usernamePasswordToken0.clear();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-51);
      byteArray0[2] = (byte) (-7);
      byteArray0[3] = (byte) (-78);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)119;
      byteArray0[6] = (byte)74;
      try { 
        MockInetAddress.getByAddress(">ztt8E^,4M!", byteArray0);
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Not IPv4: [-1, -51, -7, -78, -1, 119, 74]
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)54;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-24);
      byteArray0[3] = (byte)0;
      InetAddress inetAddress0 = MockInetAddress.getByAddress(byteArray0);
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("ZC?", "ZC?", true, inetAddress0);
      assertTrue(usernamePasswordToken0.isRememberMe());
      
      usernamePasswordToken0.clear();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false", string0);
      
      usernamePasswordToken0.isRememberMe();
      char[] charArray0 = new char[9];
      charArray0[0] = 'S';
      charArray0[1] = ';';
      charArray0[2] = '$';
      charArray0[3] = '*';
      charArray0[4] = 'm';
      charArray0[5] = 'k';
      charArray0[6] = '>';
      charArray0[7] = '[';
      charArray0[8] = '{';
      usernamePasswordToken0.setPassword(charArray0);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("*CI2XLism9m:'$^T~#1", "", true);
      boolean boolean0 = usernamePasswordToken0.isRememberMe();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      char[] charArray0 = new char[7];
      charArray0[0] = ' ';
      charArray0[1] = 't';
      charArray0[2] = '_';
      charArray0[3] = 'M';
      charArray0[4] = 'Y';
      charArray0[5] = '?';
      charArray0[6] = '*';
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.getPassword();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      usernamePasswordToken0.getPrincipal();
      char[] charArray0 = new char[1];
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.clear();
      charArray0[0] = '1';
      usernamePasswordToken0.setPassword(charArray0);
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false", string0);
      
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.clear();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'c';
      charArray0[1] = '&';
      charArray0[2] = '|';
      charArray0[3] = '9';
      charArray0[4] = 'y';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, charArray0);
      usernamePasswordToken0.setInetAddress((InetAddress) null);
      usernamePasswordToken0.getCredentials();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("EB%W<|6F\"c=wtY'Oz", "EB%W<|6F\"c=wtY'Oz", false, inetAddress0);
      usernamePasswordToken0.getUsername();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '';
      charArray0[1] = '';
      charArray0[2] = '%';
      charArray0[3] = 'G';
      charArray0[4] = 'V';
      charArray0[5] = '1';
      charArray0[6] = '}';
      charArray0[7] = 'Y';
      charArray0[8] = '9';
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, charArray0, inetAddress0);
      usernamePasswordToken0.toString();
      usernamePasswordToken0.clear();
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'q';
      charArray0[1] = '\\';
      charArray0[2] = '>';
      charArray0[3] = ';';
      charArray0[4] = 'N';
      charArray0[5] = 't';
      charArray0[6] = ')';
      charArray0[7] = 'g';
      charArray0[8] = '$';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("<%", charArray0, true);
      assertTrue(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("o(\"($iO'jv#T03n-", " (", inetAddress0);
      usernamePasswordToken0.setRememberMe(false);
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - o(\"($iO'jv#T03n-, rememberMe=false (/127.0.0.1)", string0);
      
      usernamePasswordToken0.setUsername("o(\"($iO'jv#T03n-");
      usernamePasswordToken0.clear();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setUsername("");
      char[] charArray0 = new char[0];
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.setUsername(")");
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.setUsername("]");
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.setUsername("2JWdd|I");
      usernamePasswordToken0.toString();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("&3GsY", (String) null);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.clear();
      char[] charArray0 = new char[8];
      charArray0[0] = '9';
      usernamePasswordToken0.clear();
      charArray0[1] = 'v';
      charArray0[2] = ',';
      charArray0[3] = 'J';
      charArray0[4] = 'G';
      charArray0[5] = 'c';
      charArray0[6] = 'k';
      usernamePasswordToken0.setPassword(charArray0);
      charArray0[7] = 'i';
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.setPassword(charArray0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-43);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-36);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)6;
      try { 
        MockInetAddress.getByAddress("&3GsY", byteArray0);
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Not IPv4: [-43, 0, -36, 0, 6]
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("", "");
      usernamePasswordToken0.clear();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.getInetAddress();
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.setInetAddress((InetAddress) null);
      char[] charArray0 = new char[5];
      charArray0[0] = 'A';
      usernamePasswordToken0.setPassword(charArray0);
      charArray0[1] = '4';
      charArray0[2] = '7';
      charArray0[3] = 'Y';
      charArray0[4] = '!';
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getInetAddress();
      usernamePasswordToken0.setInetAddress((InetAddress) null);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }
}
