/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 12:25:34 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4483113032721554
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<,MJk]9v7dS");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4483113032721554
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<,MJk]9v7dS");
      xPathLexer0.nextToken();
      xPathLexer0.consume(31);
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<,MJk]9v7dS");
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4483113032721554
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<,MJk]9v7dS");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4483113032721554
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<,MJk]9v7dS");
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":9K8I3=");
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.or();
      xPathLexer0.at();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<,MJk]9v7dS");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4483113032721554
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<,MJk]9v7dS");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!?(0G0|0");
      XPathLexer xPathLexer1 = new XPathLexer("_j!Y_{Q/gF!1");
      xPathLexer0.nextToken();
      xPathLexer1.comma();
      xPathLexer0.mod();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":9K8I3=");
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.48970870385881915
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<,MJk]9v7dS");
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":9K8I3=");
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.or();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4483113032721554
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<,MJk]9v7dS");
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.7997509955592941
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",Bp]x4>nMq]Ya;d");
      Token token0 = xPathLexer0.number();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (30) ()", string0);
      
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath(") (");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(2, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!?(0G0|0");
      XPathLexer xPathLexer1 = new XPathLexer("_j!Y_{Q/gF!1");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer1.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6105337616386314
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":9K8I3=");
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4483113032721554
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<,MJk]9v7dS");
      xPathLexer0.nextToken();
      xPathLexer0.or();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":9K8I3=");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.48970870385881915
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<,MJk]9v7dS");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":9K8I3=");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.equals();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":9K8I3=");
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<,MJk]9v7dS");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.2706312151404229
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("$)AZr!x0b16U>^CM");
      xPathLexer1.nextToken();
      xPathLexer1.minus();
      xPathLexer0.rightBracket();
      xPathLexer1.dollar();
      xPathLexer1.nextToken();
      xPathLexer1.isIdentifierStartChar('7');
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.726557501493486
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<,MJk]9v7dS");
      xPathLexer0.consume(10);
      xPathLexer0.and();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<,MJk]9v7dS");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("");
      xPathLexer0.identifier();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4483113032721554
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<,MJk]9v7dS");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":9K8I3=");
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.or();
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.7733256897274288
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-;W:0=GH,&;");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(";", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(":", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("?gs>[XG.C1Ww>|Vg/");
      Token token4 = xPathLexer1.at();
      assertEquals("?", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("gs", token5.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^lYk5k=KLtq\"o$wFv=");
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1029478720928143
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{_Jw: !2W$G-$");
      xPathLexer0.and();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer1.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3089482604778024
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.7G.:rhG<16#ST>#7");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("-.7G.", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("r", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("h", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("G", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("<", token5.getTokenText());
      assertEquals(7, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertNull(token7);
      
      xPathLexer0.nextToken();
      Token token8 = xPathLexer0.nextToken();
      assertEquals("#ST>#7", token8.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.887658410942952
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[!~.6");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.plus();
      token0.toString();
      token0.toString();
      xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":9K8I3=");
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.8525704191441257
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.7G.:rhG<16#ST>#7");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9940850623910144
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.7G.:rhG<16#ST>#7");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.number();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1565678945949591
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.7G.:rhG<16#ST>#7");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".7", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("G", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.nextToken();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('S');
      assertTrue(boolean0);
      
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.mod();
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer1.whitespace();
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0237522529244703
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.7G.:rhG<16#ST>#7");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(".7G.", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("r", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("h", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4652342823287006
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qd/V+kTq(TqY\"<");
      Token token0 = xPathLexer0.identifier();
      assertEquals("Qd", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("/", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("V", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(5, token3.getTokenType());
      assertEquals("+", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("(", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("dGPGcAB+iTT0aBf");
      xPathLexer1.div();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      Token token7 = xPathLexer1.whitespace();
      assertEquals("", token7.getTokenText());
      assertEquals((-2), token7.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0367205645799735
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BS65mz");
      xPathLexer0.leftBracket();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.isIdentifierStartChar(';');
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0462674768441909
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.7G.:rhG<16#ST>#7");
      xPathLexer0.consume();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1693500310823022
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X\"69h+L& /$%\"V/?4");
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2090));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1893808552397753
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X\"69h+L& /$%\"V/?4");
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("X\"69h+L& /$%\"V/?4");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2090));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1331951895436305
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qd/V+kTq(TqY7\"<");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.9744898191068194
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?f#IL9>?sy&=");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("f", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("#", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("I", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("L9", token4.getTokenText());
      
      xPathLexer0.setXPath("qF87DRfl`GDk$FJ0F");
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("qF87DRfl", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("`GDk$FJ0F", token6.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1750684128502988
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{_Jw: !2W$G-$");
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("{", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("_", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Jw", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer0.equals();
      assertEquals("!", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer1.whitespace();
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.21261219893429
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n#?Zmo&/wi");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      int int0 = (-2753);
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.6623480762082727
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-;W:0=GH,&;");
      xPathLexer0.or();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals(";", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("W", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("?gs>[XG.C1Ww>|Vg/");
      Token token5 = xPathLexer1.nextToken();
      assertEquals("?gs>[XG.C1Ww>|Vg/", token5.getTokenText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.9114277364721688
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WPxKy<>P");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.dollar();
      token0.toString();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.478605245715288
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BS65mz");
      Token token0 = xPathLexer0.not();
      assertEquals("B", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("S", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.setXPath("os");
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("BS65mz");
      xPathLexer2.or();
      xPathLexer0.number();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer1.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("BS65mz", token6.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.375790678934555
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werkec.sAxpath!XPathLexer");
      xPathLexer0.or();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werkec.sAxpath", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("!", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("X", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("P", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("athLexer", token4.getTokenText());
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.3394774355955312
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m.OEg:=uW+|Mw");
      Token token0 = xPathLexer0.equals();
      assertEquals("m", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      xPathLexer0.plus();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("E", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(":", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(5, token6.getTokenType());
      assertEquals("+", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("|", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1612895157947363
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qd/V+kTq(TqY7\"<");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.494535910008804
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werkec.sAxpath!XPathLexer");
      xPathLexer0.or();
      Token token0 = xPathLexer0.literal();
      assertEquals("om.werke", token0.getTokenText());
      assertEquals(27, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("s", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals("A", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("x", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("path!XPathLexer", token5.getTokenText());
      
      xPathLexer0.and();
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      assertEquals("", token6.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.356544054258473
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BS65mz");
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.isIdentifierStartChar(';');
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.004230488046179
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BS65mz");
      xPathLexer0.leftBracket();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.isIdentifierStartChar(';');
      xPathLexer0.pipe();
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}HPV-Dtmxh`h/");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("}HPV-Dtmxh`h/", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("}", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.nextToken();
      assertNotSame(token4, token3);
      
      Token token5 = xPathLexer0.minus();
      assertEquals("H", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.2775177539638247
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&ID=djC9N^mS{$2]0");
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1467));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0262131436000497
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m.OEg:=uW+|Mw");
      xPathLexer0.equals();
      xPathLexer0.minus();
      xPathLexer0.plus();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.2271786386994434
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ydf+dTq(|DmqYU<");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("ai");
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1786));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m.OEg:=uW+|Mw");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1415));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.1750684128502988
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{_Jw: !2W$G-$");
      xPathLexer0.and();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.1999380114241764
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ydf+dTq(|DmqYU<");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("ai");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1786));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.8328136861147264
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.7G.:rhG<16#ST>#7");
      xPathLexer0.colon();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1985343948614677
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qd/V+kTq(TqY7\"<");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("4_VV9Q=XZw\u0007%}NuEl");
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GlQ3ck(,>\\");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("G", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("lQ3ck", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v$17M~]cJMz");
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.7G.:rhG<16#ST>#7");
      XPathLexer xPathLexer1 = new XPathLexer("%;KxuYn>");
      xPathLexer1.relationalOperator();
      xPathLexer1.relationalOperator();
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.7G.:rhG<16#ST>#7");
      xPathLexer0.setXPath("x");
      Token token0 = xPathLexer0.leftBracket();
      String string0 = token0.toString();
      assertEquals("[ (3) (x)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.007863802057206
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?f#IL9>?sy&=");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("f", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("#", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("I", token3.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals(">?", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("sy", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("&=", token6.getTokenText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.356544054258473
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BS65mz");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("B", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("S", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar(';');
      assertFalse(boolean0);
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("z", token4.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" xPg$OQ>6");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("xPg", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X\"69h+L& /$%\"V/?4");
      XPathLexer xPathLexer1 = new XPathLexer("e(5d`.Gc");
      xPathLexer1.nextToken();
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.1275760403044912
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.7G.:rhG<16#ST>#7");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2090));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.7G.:rhG<16#ST>#7");
      XPathLexer xPathLexer1 = new XPathLexer("-.7G.:rhG<16#ST>#7");
      Token token0 = xPathLexer0.dots();
      assertEquals(14, token0.getTokenType());
      assertEquals("-.", token0.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.2053735679879365
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{_Jw: !2W$G-$");
      xPathLexer0.and();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer1.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!?(0G0|0");
      XPathLexer xPathLexer1 = new XPathLexer("_j!Y_{Q/gF!1");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer1.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.8328136861147264
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.7G.:rhG<16#ST>#7");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".7", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("G", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(".", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(":", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.2399025635412246
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n#?Zmo&/wi");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      int int0 = (-2753);
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.8722494246599358
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.7G.:rhG<16#ST>#7");
      xPathLexer0.consume();
      xPathLexer0.setXPath(".*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("*", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RzFK2EY1wvz(4p@");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("RzFK2EY1wvz", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5379581660519026
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{_Jw: !2W$G-$");
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.setXPath("{_Jw: !2W$G-$");
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.number();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.9114277364721688
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WPxKy<>P");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.8766633820161076
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WPxKy<>P");
      Token token0 = xPathLexer0.minus();
      token0.toString();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.4456719964969724
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werkec.sAxpath!XPathLexer");
      xPathLexer0.or();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werkec.sAxpath", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("X", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals("P", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      assertEquals("thLexer", token5.getTokenText());
      
      xPathLexer0.and();
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CP9_");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("CP9_", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i@\"]lmpJ5Hh>~s$/");
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.consume(22);
      xPathLexer0.setXPath("");
      assertEquals("", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.2271786386994434
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&ID=djC9N^mS{$2]0");
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1467));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.5065020650186773
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0,J.&mnYXW/VPpY>");
      xPathLexer0.and();
      xPathLexer0.number();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(",", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("&", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("mnYXW/VPpY>", token3.getTokenText());
      
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("mnYXW", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(11, token6.getTokenType());
      assertEquals("/", token6.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1985343948614677
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qd/V+kTq(TqY7\"<");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("L|~L**rTD>GAwz");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]}5= Y 2EeUHlwe)");
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("fV80aUm2=EQwI%ZX");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("{_Jw: !2W$G-$");
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-1786));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U<3YY&R.lDq*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("U", token0.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.2361970571739904
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8#-Yq");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      assertEquals(15, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("#", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("&$G4Z");
      xPathLexer1.isIdentifierChar('y');
      Token token3 = xPathLexer0.notEquals();
      assertEquals("Yq", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("&", token4.getTokenText());
      
      String string0 = token2.toString();
      assertEquals(6, token2.getTokenType());
      assertEquals("[ (6) (-)", string0);
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token5 = xPathLexer2.literal();
      assertNull(token5);
      
      xPathLexer2.consume();
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.2433902031309094
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("$)AZr!x0b16U>^CM");
      xPathLexer1.nextToken();
      xPathLexer1.minus();
      xPathLexer0.rightBracket();
      xPathLexer1.nextToken();
      xPathLexer1.isIdentifierStartChar('7');
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YHJ5hE1uoP&[ii F)");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qdq+dTq(TqYF<");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("Q", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("q", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RzFK2EY1wvz(4p@");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("R", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("FK2EY1wvz", token2.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1891041013366253
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qd/V+kTq(TqY7\"<");
      XPathLexer xPathLexer1 = new XPathLexer("Qd/V+kTq(TqY7\"<");
      Token token0 = xPathLexer1.rightBracket();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.7642173870858603
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":9K8I3=");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("9", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("K8I3", token2.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X\"69h+L& /$%\"V/?4");
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2090));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+M;YiKUe3Z:pvlL");
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2090));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.6105337616386314
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":9K8I3=");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("9", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("K", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":9K8I3=");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.or();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.9744898191068194
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?f#IL9>?sy&=");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("?", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("f", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("#", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.identifier();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("sy", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("&=", token6.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.3493827167303294
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_n#?ZmoN/wi");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.equals();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      int int0 = (-2753);
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.5379581660519026
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{_Jw: !2W$G-$");
      xPathLexer0.and();
      xPathLexer0.number();
      Token token0 = xPathLexer0.at();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.number();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.4954300467945338
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("$)AZr!x0b16U>^CM");
      xPathLexer1.nextToken();
      xPathLexer1.minus();
      xPathLexer0.div();
      xPathLexer1.nextToken();
      xPathLexer0.setXPath("$)AZr!x0b16U>^CM");
      xPathLexer1.star();
      xPathLexer1.dots();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x3ya}-h");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("x", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.2830532949702111
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.7G.:rhG<16#ST>#7");
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("r", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("16", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("#", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(">", token6.getTokenText());
      assertEquals(9, token6.getTokenType());
      
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      assertEquals("", token7.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";/l TIktq=34MQm%6@");
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.324314366889313
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("$)AZr!x0b16U>^CM");
      xPathLexer1.not();
      xPathLexer1.nextToken();
      xPathLexer1.minus();
      xPathLexer0.rightBracket();
      xPathLexer1.nextToken();
      xPathLexer1.isIdentifierStartChar('7');
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.3760553784402174
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{_Jw: !2W$G-$");
      xPathLexer0.rightBracket();
      xPathLexer0.number();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("_J", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("w", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("!", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("{_Jw: !2W$G-$");
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("{_", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("W$G-$", token6.getTokenText());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals("J", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      xPathLexer0.setXPath("{_Jw: !2W$G-$");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer2.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      xPathLexer2.or();
      Token token9 = xPathLexer1.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer1.identifierOrOperatorName();
      assertEquals("w", token10.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.2508999459681878
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&ID=djC9N^mS{$2]0");
      xPathLexer0.at();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1467));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.9189598204966587
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[!~.6");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.plus();
      token0.toString();
      xPathLexer0.leftParen();
      token0.toString();
      xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">8f!M3aIOJ");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("ai");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1467));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w'jk0y@");
      Token token0 = xPathLexer0.minus();
      assertEquals("w", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.4006668710610797
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_n#?ZmoN/wi");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      int int0 = (-2753);
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.170895057878038
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qd/V+kTq(TqY7\"<");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("<Ad6U5pp%p?Bg$4jN");
      Token token0 = xPathLexer1.relationalOperator();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WPxKy<>P");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.comma();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?f#IL9>?sy&=");
      Token token0 = xPathLexer0.equals();
      xPathLexer0.equals();
      token0.toString();
      xPathLexer0.nextToken();
      token0.toString();
      Token token1 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3*[Zb7P->;");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(20, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-549));
      Token token0 = xPathLexer0.star();
      xPathLexer0.setPreviousToken(token0);
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("E", token0.getTokenText());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.7.:rh<16#ST>#7");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.at();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qd/V+kTq(TqY7\"<");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2753));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">=}9.vP6%>Fq6");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2762));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{_Jw: !2W$G-$");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      Token token1 = xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.setPreviousToken(token1);
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer("<=rGDBWYU+Wn{7");
      xPathLexer3.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer2.LA((-1538));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{_Jw: !2W$G-$");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      Token token1 = xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.setPreviousToken(token1);
      XPathLexer xPathLexer2 = new XPathLexer("<=rGDBWYU+Wn{7");
      xPathLexer2.nextToken();
      xPathLexer2.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-1538));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
