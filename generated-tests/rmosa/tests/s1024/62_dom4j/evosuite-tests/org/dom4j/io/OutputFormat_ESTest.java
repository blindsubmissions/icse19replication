/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 16:37:50 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.509137344082687
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "X$Wax/^f 7+28";
      outputFormat0.setPadText(false);
      stringArray0[1] = "X$Wax/^f 7+28";
      stringArray0[2] = "X$Wax/^f 7+28";
      stringArray0[3] = "X$Wax/^f 7+28";
      stringArray0[4] = "";
      stringArray0[5] = "";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals(0, int0);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8717814824679821
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtmllx29psXy5dUir";
      stringArray0[1] = "-omri(Encoding";
      outputFormat0.setSuppressDeclaration(false);
      stringArray0[2] = "]Wdn3#4Y'F<V";
      outputFormat0.getNewLineAfterNTags();
      assertFalse(outputFormat0.isXHTML());
      
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      int int0 = outputFormat0.parseOptions(stringArray0, 1916);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(1916, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.2337673247041645
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isTrimText());
      assertTrue(outputFormat1.isPadText());
      assertTrue(outputFormat1.isNewlines());
      assertEquals("  ", outputFormat1.getIndent());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "XWax/^f7+28";
      outputFormat0.parseOptions(stringArray0, 0);
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals(0, int0);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6885673693022827
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertFalse(outputFormat0.isNewlines());
      
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "_Y$WaubF[ZG";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent(true);
      outputFormat0.parseOptions(stringArray0, 4008);
      outputFormat0.parseOptions(stringArray0, 4008);
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2337673247041645
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat.createCompactFormat();
      outputFormat0.setNewlines(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtmllx2LpsXy5dUir";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String string0 = ".m^J\\";
      outputFormat0.setEncoding(".m^J");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent(false);
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.getEncoding();
      outputFormat0.setIndent(false);
      outputFormat0.isXHTML();
      OutputFormat.createCompactFormat();
      outputFormat1.isXHTML();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "\n";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2106));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2106
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0441868483113734
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "lx29psXy5dUir";
      outputFormat0.setOmitEncoding(false);
      stringArray0[2] = "-trimText";
      outputFormat0.setIndent(true);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "-trimText";
      stringArray1[1] = "-trimText";
      stringArray1[2] = "-expandEmptyd_F8";
      stringArray1[3] = "lx29psXy5dUir";
      stringArray1[4] = "lx29psXy5dUir";
      stringArray1[5] = "lx29psXy5dUir";
      outputFormat0.parseOptions(stringArray1, 2);
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.setIndent(false);
      String[] stringArray2 = new String[9];
      stringArray2[0] = "lx29psXy5dUir";
      stringArray2[1] = "-expandEmptyd_F8";
      stringArray2[2] = "-trimText";
      stringArray2[3] = "I^ ";
      stringArray2[4] = "I^ ";
      stringArray2[5] = "-trimText";
      stringArray2[6] = "lx29psXy5dUir";
      stringArray2[7] = "I^ ";
      stringArray2[8] = "lx29psXy5dUir";
      outputFormat0.parseOptions(stringArray2, 4008);
      outputFormat0.parseOptions(stringArray2, 0);
      String[] stringArray3 = new String[3];
      stringArray3[0] = "HWt0{lwD0r>b%IPr+@$";
      stringArray3[1] = "lx29psXy5dUir";
      stringArray3[2] = "-expandEmptyd_F8";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray3, (-2108));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2108
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0441868483113734
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewlines(false);
      int int0 = 0;
      String string0 = "_Y$WaubF[ZG";
      String string1 = "-indent";
      String[] stringArray0 = new String[8];
      String string2 = "-xhtmllx]29psXy5dUr";
      stringArray0[0] = "-xhtmllx]29psXy5dUr";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-indent";
      stringArray0[3] = "-indent";
      outputFormat0.setNewlines(true);
      stringArray0[4] = "-indent";
      stringArray0[5] = "-indent";
      String string3 = "#6%uMk8Agr>CC";
      stringArray0[6] = "#6%uMk8Agr>CC";
      stringArray0[7] = "_Y$WaubF[ZG";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.parseOptions(stringArray0, 0);
      int int1 = (-2678);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2678));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2678
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("7=N3?]99P+Ss.{$", true);
      outputFormat0.setIndentSize(276);
      assertEquals("                                                                                                                                                                                                                                                                                    ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6598720137848266
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtmllx29psXy5dUir";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "]Wdn3#4Y'F<V";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("bUwP+$l");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('%');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (%)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml", false, "-xhtml");
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtml";
      stringArray0[1] = "-xhtml";
      stringArray0[2] = "-xhtml";
      stringArray0[3] = "I*";
      stringArray0[5] = "I*";
      outputFormat0.parseOptions(stringArray0, 6925);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.isXHTML();
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("5kJ[+hGyI[o5tO6", false);
      boolean boolean0 = outputFormat0.isPadText();
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("5kJ[+hGyI[o5tO6", outputFormat0.getIndent());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newlines");
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      
      outputFormat0.setNewLineAfterDeclaration(false);
      boolean boolean0 = outputFormat0.isNewlines();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "XWax/^f 7+28";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setLineSeparator("lQ-");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('C');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (C)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      int int0 = 0;
      outputFormat0.setEncoding((String) null);
      boolean boolean0 = false;
      outputFormat0.setNewlines(false);
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[1];
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(boolean0);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("YCdWwxoHdIt");
      outputFormat0.setIndent("");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('g');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (g)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setLineSeparator("i@)#DkUA$");
      outputFormat0.setIndentSize(1959);
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "i@)#DkUA$";
      stringArray0[1] = "i@)#DkUA$";
      stringArray0[2] = "i@)#DkUA$";
      stringArray0[3] = "i@)#DkUA$";
      outputFormat0.parseOptions(stringArray0, 1959);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewlines(true);
      assertEquals("i@)#DkUA$", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xtml", false, "-xtml");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewLineAfterNTags(4023);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isXHTML();
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertEquals(4023, outputFormat0.getNewLineAfterNTags());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "r{%DC@v1}T<Sz;y");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setXHTML(true);
      outputFormat0.setEncoding("");
      outputFormat0.setIndent(true);
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat0.setXHTML(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setLineSeparator("UIy:Ot4.Z5+.{sJ4p\u0005");
      outputFormat0.isTrimText();
      outputFormat2.setExpandEmptyElements(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat1.isNewlines();
      outputFormat1.setNewlines(false);
      outputFormat2.isOmitEncoding();
      outputFormat2.isOmitEncoding();
      outputFormat2.isSuppressDeclaration();
      outputFormat2.isSuppressDeclaration();
      outputFormat0.getIndent();
      assertEquals("UIy:Ot4.Z5+.{sJ4p\u0005", outputFormat0.getLineSeparator());
      
      outputFormat2.setNewLineAfterDeclaration(false);
      outputFormat1.setOmitEncoding(false);
      assertFalse(outputFormat1.isNewlines());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml");
      outputFormat0.setXHTML(false);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setExpandEmptyElements(true);
      OutputFormat outputFormat1 = new OutputFormat("-xhtml", false);
      outputFormat1.setAttributeQuoteCharacter('\'');
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2403));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2403
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimText");
      assertEquals("-trimText", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "XWax/^f 7+28";
      stringArray0[1] = "XWax/^f 7+28";
      stringArray0[2] = "XWax/^f 7+28";
      stringArray0[3] = "XWax/^f 7+28";
      stringArray0[4] = "XWax/^f 7+28";
      stringArray0[5] = "XWax/^f 7+28";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat1 = new OutputFormat("");
      outputFormat1.setSuppressDeclaration(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.isSuppressDeclaration();
      outputFormat0.setIndent("org.dom4j.io.OutputFormat");
      outputFormat1.setAttributeQuoteCharacter('\"');
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, (-2261));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2261
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "_Y$WaubF[ZG";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent(true);
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray1 = new String[5];
      stringArray1[0] = "-padText";
      stringArray1[1] = "_Y$WaubF[ZG";
      stringArray1[2] = "_Y$WaubF[ZG";
      stringArray1[3] = "_Y$WaubF[ZG";
      stringArray1[4] = "_Y$WaubF[ZG";
      outputFormat0.parseOptions(stringArray1, 0);
      String[] stringArray2 = new String[8];
      stringArray2[0] = "_Y$WaubF[ZG";
      stringArray2[1] = "-padText";
      stringArray2[2] = "_Y$WaubF[ZG";
      stringArray2[3] = "-padText";
      stringArray2[4] = "-padText";
      stringArray2[5] = "_Y$WaubF[ZG";
      stringArray2[6] = "_Y$WaubF[ZG";
      stringArray2[7] = "-padText";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray2, (-202));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -202
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat0.isNewlines());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "lx29psXy5dUir";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "XWax/^";
      stringArray0[4] = "tz./w";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1089);
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(outputFormat0.isNewlines());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("-encoding");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-expandEmptyXWax/^f 7+28";
      stringArray0[1] = "-encoding";
      OutputFormat outputFormat2 = new OutputFormat();
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setIndent(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat2 = new OutputFormat("-lineSeparator", false);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "";
      outputFormat2.setXHTML(true);
      outputFormat2.parseOptions(stringArray0, 0);
      outputFormat2.parseOptions(stringArray0, 1408);
      outputFormat0.setIndent("");
      outputFormat2.setPadText(true);
      outputFormat1.parseOptions(stringArray0, 2);
      outputFormat2.parseOptions(stringArray0, 2);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-3044));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3044
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = true;
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "Os15(@A<3qoV\nCV";
      stringArray0[2] = "iOt(V8t/]g1:";
      outputFormat0.parseOptions(stringArray0, 4008);
      outputFormat0.setNewLineAfterDeclaration(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"Os15(@A<3qoV
         // CV\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
