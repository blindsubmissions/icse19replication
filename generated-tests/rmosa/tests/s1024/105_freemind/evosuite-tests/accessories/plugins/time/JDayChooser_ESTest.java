/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 16:26:04 GMT 2018
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.ClonePlugin;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import accessories.plugins.time.JYearChooser;
import freemind.controller.Controller;
import freemind.modes.ControllerAdapter;
import freemind.modes.common.CommonToggleFoldedAction;
import java.awt.BorderLayout;
import java.awt.Button;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.SystemColor;
import java.awt.TextArea;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.beans.PropertyChangeListener;
import java.io.DataOutputStream;
import java.sql.Time;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;
import java.util.Enumeration;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.swing.AbstractButton;
import javax.swing.Icon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JColorChooser;
import javax.swing.JComponent;
import javax.swing.JLayeredPane;
import javax.swing.JList;
import javax.swing.JPopupMenu;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuKeyEvent;
import javax.swing.plaf.basic.BasicScrollBarUI;
import javax.swing.plaf.metal.MetalComboBoxUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.apache.batik.css.parser.Parser;
import org.apache.batik.ext.awt.g2d.GraphicContext;
import org.apache.batik.gvt.RootGraphicsNode;
import org.apache.batik.gvt.text.GVTAttributedCharacterIterator;
import org.apache.batik.svggen.DefaultImageHandler;
import org.apache.batik.svggen.ExtensionHandler;
import org.apache.batik.svggen.SVGGraphics2D;
import org.apache.fop.svg.PDFDocumentGraphics2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;
import plugins.map.MapDialog;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.608820614830946
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getInputContext();
      jDayChooser0.setMaxDayCharacters(95);
      jDayChooser0.setForeground((Color) null);
      jDayChooser0.setMaxDayCharacters(4);
      jDayChooser0.setDay(4);
      jDayChooser0.drawDays();
      assertEquals(4, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6789477095792162
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setAlignmentY(1274.5288F);
      jDayChooser0.setMaxDayCharacters(3);
      jDayChooser0.setMonth(3);
      jDayChooser0.setMonth(3);
      jDayChooser0.setMonth(29);
      assertEquals(3, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getTopLevelAncestor();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "day");
      int int0 = 43;
      System.setCurrentTimeMillis((-1L));
      MenuSelectionManager.defaultManager();
      // Undeclared exception!
      try { 
        jDayChooser0.setCalendar((Calendar) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JYearChooser jYearChooser0 = new JYearChooser();
      JDayChooser jDayChooser0 = jYearChooser0.dayChooser;
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser1.getLocale();
      assertTrue(jDayChooser1.isWeekOfYearVisible());
      assertFalse(jDayChooser1.isDecorationBordersVisible());
      assertEquals(14, jDayChooser1.getDay());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getDayPanel();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JYearChooser jYearChooser0 = new JYearChooser();
      styleContext0.removeStyle("");
      styleContext0.addChangeListener(jYearChooser0);
      defaultStyledDocument0.getUndoableEditListeners();
      MouseEvent mouseEvent0 = null;
      try {
        mouseEvent0 = new MouseEvent(jYearChooser0, 1804, 0L, 1392, 0, 6, (-721), (-1443), (-1443), false, 1392);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("day", false);
      MenuElement[] menuElementArray0 = new MenuElement[1];
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jCheckBoxMenuItem0, 363, 363, 363, 363, 'a', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyTyped(menuKeyEvent0);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jDayChooser0.setWeekdayForeground((Color) null);
      jDayChooser0.getInputContext();
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      Parser parser0 = new Parser();
      assertEquals("http://www.w3.org/TR/REC-CSS2", parser0.getParserVersion());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      ActionEvent actionEvent0 = new ActionEvent(jDayChooser1, 10127, "day");
      // Undeclared exception!
      try { 
        jDayChooser1.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // accessories.plugins.time.JDayChooser cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JYearChooser jYearChooser0 = new JYearChooser();
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setAlwaysFireDayProperty(false);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getInputContext();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextSelectionColor();
      jDayChooser0.setSundayForeground(color0);
      jDayChooser0.setDay(4);
      assertEquals(4, jDayChooser0.getDay());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.578283520247992
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis(9223372036854775793L);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      JDayChooser jDayChooser2 = new JDayChooser(false);
      jDayChooser0.getAccessibleContext();
      jDayChooser0.setRequestFocusEnabled(false);
      jDayChooser2.repaint();
      jDayChooser0.setDayBordersVisible(false);
      GraphicContext graphicContext0 = new GraphicContext();
      graphicContext0.getBackground();
      jDayChooser1.drawDays();
      Locale locale0 = new Locale("|r7BES(QgJT");
      Locale.getISOLanguages();
      jDayChooser2.setLocale(locale0);
      assertEquals(17, jDayChooser2.getDay());
      
      jDayChooser2.setDay(1695);
      assertEquals(31, jDayChooser2.getDay());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JComponent.isLightweightComponent(jDayChooser0);
      jDayChooser0.getMouseWheelListeners();
      jDayChooser0.isValidateRoot();
      jDayChooser0.getMinSelectableDate();
      jDayChooser0.setEnabled(true);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 0, 2000L, 1178, 0, 'k', 0);
      jDayChooser0.keyReleased(keyEvent0);
      JMonthChooser jMonthChooser0 = new JMonthChooser(false);
      Locale locale0 = jMonthChooser0.getLocale();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("day", locale0);
      CommonToggleFoldedAction commonToggleFoldedAction0 = null;
      try {
        commonToggleFoldedAction0 = new CommonToggleFoldedAction((ControllerAdapter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.common.CommonToggleFoldedAction", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.662701752014223
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JCheckBox jCheckBox0 = new JCheckBox("9*;#O8fb{]!{Qn06Z", (Icon) null, true);
      JComponent.isLightweightComponent(jCheckBox0);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setSelectableDateRange((Date) null, (Date) null);
      jCheckBox0.getTopLevelAncestor();
      jDayChooser0.setEnabled(false);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      MetalComboBoxUI.MetalComboBoxLayoutManager metalComboBoxUI_MetalComboBoxLayoutManager0 = metalComboBoxUI0.new MetalComboBoxLayoutManager();
      jDayChooser0.setLayout(metalComboBoxUI_MetalComboBoxLayoutManager0);
      jDayChooser0.setYear(0);
      Time time0 = new Time(1865L);
      jDayChooser0.setSelectableDateRange(time0, time0);
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      System.setCurrentTimeMillis((-2102L));
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JButton[] jButtonArray0 = new JButton[1];
      jDayChooser0.getSelectedDay();
      jButtonArray0[0] = null;
      jDayChooser0.days = jButtonArray0;
      jDayChooser0.getAccessibleContext();
      jDayChooser0.repaint();
      // Undeclared exception!
      try { 
        jDayChooser0.setDayBordersVisible(false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.593621512459067
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getTopLevelAncestor();
      jDayChooser0.getMouseWheelListeners();
      jDayChooser0.setDay((-127));
      jDayChooser0.setFocus();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6440131694248166
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      System.setCurrentTimeMillis((-9223372036854775808L));
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JMonthChooser jMonthChooser0 = new JMonthChooser(false);
      jDayChooser0.setMonthChooser(jMonthChooser0);
      jDayChooser0.repaint();
      jDayChooser0.setDayBordersVisible(false);
      JYearChooser jYearChooser0 = new JYearChooser();
      Color color0 = jYearChooser0.darkGreen;
      jDayChooser0.setDecorationBackgroundColor(color0);
      assertEquals(2, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      JYearChooser jYearChooser0 = jDayChooser0.yearChooser;
      jDayChooser0.setYearChooser((JYearChooser) null);
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMaxDayCharacters(0);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(0);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JDayChooser jDayChooser1 = new JDayChooser(false);
      jDayChooser1.getToolkit();
      jDayChooser1.setYear(3470);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 3470);
      jDayChooser0.focusLost(focusEvent0);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.6440131694248166
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      System.setCurrentTimeMillis((-9223372036854775808L));
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.repaint();
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.setEnabled(false);
      Color color0 = jDayChooser0.getSundayForeground();
      try { 
        Controller.showCommonJColorChooserDialog(jDayChooser0, "day", color0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 476);
      jDayChooser0.focusGained(focusEvent0);
      jDayChooser0.setDay(476);
      TextArea textArea0 = null;
      try {
        textArea0 = new TextArea("day", 476, 49);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JPopupMenu jPopupMenu0 = new JPopupMenu();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Color color0 = Color.orange;
      JMonthChooser jMonthChooser0 = new JMonthChooser();
      int int0 = (-290);
      jMonthChooser0.createImage((-290), 251);
      java.sql.Date date0 = new java.sql.Date(240000L);
      jDayChooser0.setMaxSelectableDate(date0);
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.updateUI();
      jDayChooser0.setDayBordersVisible(true);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("day");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(dataOutputStream0, true, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      System.setCurrentTimeMillis(240000L);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setAutoscrolls(true);
      Date date0 = jDayChooser0.defaultMinSelectableDate;
      jDayChooser0.setMinSelectableDate(date0);
      System.setCurrentTimeMillis(10);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setMinSelectableDate((Date) null);
      SystemColor systemColor0 = SystemColor.menuText;
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6442551993262904
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getInputContext();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "day");
      jDayChooser0.setMonth(46);
      jDayChooser0.setForeground((Color) null);
      jDayChooser0.setMaxDayCharacters(4);
      jDayChooser0.setDay(4);
      jDayChooser0.setDayBordersVisible(false);
      assertFalse(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      JComponent.getDefaultLocale();
      boolean boolean0 = jDayChooser_DecoratorButton0.isFocusable();
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(boolean0);
      assertFalse(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMaxSelectableDate((Date) null);
      jDayChooser0.getInputContext();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getTextSelectionColor();
      jDayChooser0.setEnabled(false);
      jDayChooser0.setDay(10);
      assertEquals(10, jDayChooser0.getDay());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6414352168502915
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      System.setCurrentTimeMillis((-9223372036854775808L));
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.repaint();
      jDayChooser0.setDayBordersVisible(false);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 42, 365L, 42, 3, '');
      jDayChooser0.keyPressed(keyEvent0);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertEquals(2, jDayChooser0.getDay());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      boolean boolean0 = false;
      System.setCurrentTimeMillis((-9223372036854775808L));
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getRootPane();
      Color color0 = jDayChooser0.getDecorationBackgroundColor();
      try { 
        JColorChooser.showDialog((Component) null, "day", color0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "day");
      jDayChooser0.firePropertyChange("accessories.plugins.time.JDayChooser$DecoratorButton", (short)1309, (short)1309);
      JComponent.isLightweightComponent(jDayChooser0);
      boolean boolean0 = jDayChooser0.isDecorationBackgroundVisible();
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.drawWeeks();
      jDayChooser0.setDay(728);
      jDayChooser0.setAutoscrolls(true);
      int int0 = jDayChooser0.getMaxDayCharacters();
      assertEquals(28, jDayChooser0.getDay());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.755639177784437
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setYear(0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "day");
      System.setCurrentTimeMillis(1079L);
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("day", false);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuElement[] menuElementArray0 = new MenuElement[4];
      menuElementArray0[0] = (MenuElement) jCheckBoxMenuItem0;
      menuElementArray0[1] = (MenuElement) jCheckBoxMenuItem0;
      menuElementArray0[2] = (MenuElement) jCheckBoxMenuItem0;
      menuElementArray0[3] = (MenuElement) jCheckBoxMenuItem0;
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser_DecoratorButton0, 26, 1322L, 38, 1073, 'x', menuElementArray0, menuSelectionManager0);
      menuKeyEvent0.getExtendedKeyCode();
      menuKeyEvent0.getExtendedKeyCode();
      MenuKeyEvent menuKeyEvent1 = new MenuKeyEvent(jCheckBoxMenuItem0, 1073, 0, 47, 0, 'a', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyPressed(menuKeyEvent1);
      jDayChooser0.setFocus();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser_DecoratorButton0, 38, (-968L), 3028, 33, 'e');
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMaxDayCharacters((-6));
      jDayChooser0.setDay((-6));
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getWeekdayForeground();
      assertTrue(jDayChooser0.isDayBordersVisible());
      
      jDayChooser0.setDayBordersVisible(false);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.720056693498162
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      GVTAttributedCharacterIterator.TextAttribute gVTAttributedCharacterIterator_TextAttribute0 = GVTAttributedCharacterIterator.TextAttribute.GVT_FONT;
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      jDayChooser0.setEnabled((boolean) gVTAttributedCharacterIterator_TextAttribute0.OVERLINE_ON);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "day");
      jDayChooser0.setFocus();
      jDayChooser0.firePropertyChange("GZ )#|6I[L$<", (-491.32), (double) gVTAttributedCharacterIterator_TextAttribute0.WRITING_MODE_TTB);
      jDayChooser0.setWeekOfYearVisible(true);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      DefaultImageHandler defaultImageHandler0 = new DefaultImageHandler();
      SVGGraphics2D sVGGraphics2D0 = null;
      try {
        sVGGraphics2D0 = new SVGGraphics2D((Document) null, defaultImageHandler0, (ExtensionHandler) null, (boolean) gVTAttributedCharacterIterator_TextAttribute0.OVERLINE_ON);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // domFactory should not be null
         //
         verifyException("org.apache.batik.svggen.SVGGeneratorContext", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5782835202479926
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      System.setCurrentTimeMillis(9223372036854775793L);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      JDayChooser jDayChooser2 = new JDayChooser(false);
      jDayChooser0.getAccessibleContext();
      jDayChooser2.repaint();
      jDayChooser0.setDayBordersVisible(false);
      assertFalse(jDayChooser0.isDayBordersVisible());
      
      GraphicContext graphicContext0 = new GraphicContext();
      graphicContext0.getBackground();
      jDayChooser1.drawDays();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser1.new DecoratorButton();
      jDayChooser2.getGraphics();
      jDayChooser_DecoratorButton0.paint((Graphics) null);
      assertTrue(jDayChooser1.isDayBordersVisible());
      assertFalse(jDayChooser1.isDecorationBordersVisible());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.648358997331873
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      System.setCurrentTimeMillis(9223372036854775793L);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      System.setCurrentTimeMillis((-724L));
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("day", true);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      jCheckBoxMenuItem0.repaint(2092L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MenuElement[] menuElementArray0 = new MenuElement[4];
      menuElementArray0[0] = (MenuElement) jCheckBoxMenuItem0;
      menuElementArray0[1] = (MenuElement) jCheckBoxMenuItem0;
      menuElementArray0[2] = (MenuElement) jCheckBoxMenuItem0;
      menuElementArray0[3] = (MenuElement) jCheckBoxMenuItem0;
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 38, 15L, 1228, 38, ':', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyPressed(menuKeyEvent0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      KeyEvent.getKeyText(100);
      KeyEvent.getKeyModifiersText(38);
      jDayChooser0.keyPressed(menuKeyEvent0);
      jDayChooser0.keyPressed(menuKeyEvent0);
      jDayChooser0.updateUI();
      assertEquals(3, jDayChooser0.getDay());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getFocusListeners();
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      
      Color color0 = Color.lightGray;
      jDayChooser0.setWeekOfYearVisible(true);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Locale locale0 = Locale.US;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale0.getDisplayVariant(locale1);
      jDayChooser0.isDayBordersVisible();
      jDayChooser0.setDayBordersVisible(true);
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JCheckBox jCheckBox0 = new JCheckBox("9*;#O8fb{]!{Qn06Z", (Icon) null, true);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setWeekOfYearVisible(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      DefaultImageHandler defaultImageHandler0 = new DefaultImageHandler();
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 14, 14, 48, 43, 'O');
      KeyEvent.getKeyModifiersText((-3392));
      jDayChooser0.setDay(43);
      jDayChooser0.setMonth(8);
      assertEquals(30, jDayChooser0.getDay());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JComponent.isLightweightComponent(jDayChooser0);
      Date date0 = jDayChooser0.defaultMaxSelectableDate;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultLeafIcon();
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("1", icon0);
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      JDayChooser jDayChooser1 = new JDayChooser(false);
      BasicScrollBarUI basicScrollBarUI0 = new BasicScrollBarUI();
      BorderLayout borderLayout0 = new BorderLayout();
      jDayChooser1.setLayout(borderLayout0);
      JDayChooser jDayChooser2 = new JDayChooser(false);
      jDayChooser2.setYear(336);
      Time time0 = new Time(0L);
      Date date1 = jDayChooser1.minSelectableDate;
      jDayChooser0.setSelectableDateRange(date1, time0);
      assertEquals(14, jDayChooser1.getDay());
      assertTrue(jDayChooser1.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.706697613279902
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.isPaintingForPrint();
      Vector<MapDialog.ResultTableModel> vector0 = new Vector<MapDialog.ResultTableModel>();
      JList<MapDialog.ResultTableModel> jList0 = new JList<MapDialog.ResultTableModel>(vector0);
      KeyEvent keyEvent0 = new KeyEvent(jList0, (-827), 0L, (-827), 35, 'b');
      KeyEvent.getKeyModifiersText(35);
      jDayChooser0.keyPressed(keyEvent0);
      System.setCurrentTimeMillis(0L);
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "day";
      stringArray0[1] = "day";
      stringArray0[2] = "Ctrl+Shift+Alt Graph";
      stringArray0[3] = "Z`}IN>&kYdn/=";
      stringArray0[4] = "Ctrl+Shift+Alt Graph";
      stringArray0[5] = "j";
      stringArray0[6] = "Ctrl+Shift+Alt Graph";
      stringArray0[7] = "Ctrl+Shift+Alt Graph";
      stringArray0[8] = "Ctrl+Shift+Alt Graph";
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      System.setCurrentTimeMillis(9223372036854775793L);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      JDayChooser jDayChooser2 = new JDayChooser(false);
      jDayChooser0.getAccessibleContext();
      jDayChooser2.repaint();
      jDayChooser0.setDayBordersVisible(false);
      GraphicContext graphicContext0 = new GraphicContext();
      graphicContext0.getBackground();
      jDayChooser1.drawDays();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-2798), 300000L, (-724), 39, 'Q');
      jDayChooser1.keyPressed(keyEvent0);
      assertEquals(18, jDayChooser1.getDay());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.7569120345667457
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      boolean boolean0 = false;
      JDayChooser jDayChooser0 = new JDayChooser(false);
      ClonePlugin clonePlugin0 = new ClonePlugin();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("28", false);
      MockPrintStream mockPrintStream0 = new MockPrintStream("28");
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      jDayChooser0.removePropertyChangeListener((PropertyChangeListener) defaultTableColumnModel0);
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false, mockFileOutputStream0, 43, 42);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.paint(pDFDocumentGraphics2D0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser_DecoratorButton0, 43, 5270400000L, 1269, 34, 'B');
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getInputContext();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("day");
      jCheckBoxMenuItem0.repaint(886L);
      MenuElement[] menuElementArray0 = new MenuElement[1];
      menuElementArray0[0] = (MenuElement) jCheckBoxMenuItem0;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jCheckBoxMenuItem0, 4, 4, 1298, 37, ':', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyPressed(menuKeyEvent0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      KeyEvent.getKeyText(37);
      jDayChooser0.keyPressed(menuKeyEvent0);
      jDayChooser0.keyPressed(menuKeyEvent0);
      assertEquals(11, jDayChooser0.getDay());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      ClonePlugin clonePlugin0 = new ClonePlugin();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultLeafIcon();
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("d?^8rL?qCa}qli-rVr", icon0);
      JRadioButtonMenuItem jRadioButtonMenuItem1 = new JRadioButtonMenuItem("d?^8rL?qCa}qli-rVr", icon0);
      JRadioButtonMenuItem jRadioButtonMenuItem2 = new JRadioButtonMenuItem(icon0, false);
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jRadioButtonMenuItem2, (-2), (-1704L), 'e', 40, 'e', menuElementArray0, menuSelectionManager0);
      menuKeyEvent0.getExtendedKeyCode();
      jDayChooser0.keyPressed(menuKeyEvent0);
      jDayChooser0.setFocus();
      assertEquals(21, jDayChooser0.getDay());
      
      jDayChooser0.keyPressed(menuKeyEvent0);
      jDayChooser0.updateUI();
      jDayChooser0.keyPressed(menuKeyEvent0);
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      System.setCurrentTimeMillis(47);
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("17", true);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      jCheckBoxMenuItem0.repaint(1017L);
      MenuElement[] menuElementArray0 = new MenuElement[0];
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jCheckBoxMenuItem0, 43, 1017L, 15, 36, ':', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyPressed(menuKeyEvent0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      KeyEvent.getKeyText(47);
      jDayChooser0.keyPressed(menuKeyEvent0);
      KeyEvent keyEvent0 = null;
      try {
        keyEvent0 = new KeyEvent(jDayChooser0, 2597, 2597, 15, 36, 'I', 38);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid keyLocation
         //
         verifyException("java.awt.event.KeyEvent", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.609981273402886
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      System.setCurrentTimeMillis((-9223372036854775808L));
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getAccessibleContext();
      jDayChooser0.repaint();
      jDayChooser0.isValidateRoot();
      jDayChooser0.setDayBordersVisible(false);
      GraphicContext graphicContext0 = new GraphicContext();
      Color color0 = graphicContext0.getBackground();
      jDayChooser0.setDecorationBackgroundColor(color0);
      jDayChooser0.setDay((-5124));
      assertFalse(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      System.setCurrentTimeMillis((-9223372036854775808L));
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getAccessibleContext();
      jDayChooser0.repaint();
      jDayChooser0.setDayBordersVisible(true);
      jDayChooser0.setDay((-386));
      jDayChooser0.updateUI();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      System.setCurrentTimeMillis(9223372036854775793L);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getTopLevelAncestor();
      jDayChooser0.getMouseWheelListeners();
      jDayChooser0.setDay((-127));
      jDayChooser0.setFocus();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getMouseWheelListeners();
      boolean boolean0 = true;
      jDayChooser0.setAlwaysFireDayProperty(true);
      jDayChooser0.setDay(12);
      jDayChooser0.getMaxSelectableDate();
      jDayChooser0.updateUI();
      // Undeclared exception!
      try { 
        jDayChooser0.setLocale((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      System.setCurrentTimeMillis((-9223372036854775808L));
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setForeground((Color) null);
      jDayChooser0.getComponents();
      jDayChooser0.setMaxDayCharacters((-897));
      jDayChooser0.setDay((-897));
      jDayChooser0.setDay((-897));
      System.setCurrentTimeMillis((-897));
      jDayChooser0.drawDays();
      jDayChooser0.updateUI();
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setYear(0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "day");
      System.setCurrentTimeMillis(47);
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("day", false);
      MenuElement[] menuElementArray0 = new MenuElement[18];
      jCheckBoxMenuItem0.repaint((long) 43);
      menuElementArray0[1] = (MenuElement) jCheckBoxMenuItem0;
      menuElementArray0[2] = (MenuElement) jCheckBoxMenuItem0;
      menuElementArray0[3] = (MenuElement) jCheckBoxMenuItem0;
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      String string0 = AbstractButton.DISABLED_SELECTED_ICON_CHANGED_PROPERTY;
      KeyEvent.getKeyText((-2035));
      jDayChooser0.setEnabled(false);
      jDayChooser0.setDay(560);
      KeyEvent.getKeyText(3);
      jDayChooser0.initialized = false;
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton1 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton1.paint((Graphics) null);
      jDayChooser0.setLocale(locale0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      System.setCurrentTimeMillis((-9223372036854775808L));
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.initialized = false;
      jDayChooser0.repaint();
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.drawDays();
  }
}
