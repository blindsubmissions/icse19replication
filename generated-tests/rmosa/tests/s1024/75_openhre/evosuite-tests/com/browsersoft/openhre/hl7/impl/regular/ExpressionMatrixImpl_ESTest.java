/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 16:38:45 GMT 2018
 */

package com.browsersoft.openhre.hl7.impl.regular;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.browsersoft.openhre.hl7.api.config.HL7MessageGroupItem;
import com.browsersoft.openhre.hl7.api.regular.Expression;
import com.browsersoft.openhre.hl7.api.regular.ExpressionElementMapper;
import com.browsersoft.openhre.hl7.api.regular.ExpressionPart;
import com.browsersoft.openhre.hl7.impl.config.HL7MessageGroupImpl;
import com.browsersoft.openhre.hl7.impl.regular.ExpressionElementMapperImpl;
import com.browsersoft.openhre.hl7.impl.regular.ExpressionImpl;
import com.browsersoft.openhre.hl7.impl.regular.ExpressionMatrixImpl;
import com.browsersoft.openhre.hl7.impl.regular.MessageTracerImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExpressionMatrixImpl_ESTest extends ExpressionMatrixImpl_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      expressionMatrixImpl0.setValue(0, 0, 0);
      expressionMatrixImpl0.toString();
      expressionMatrixImpl0.setValue((-2979), (-1), (-2979));
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2493920911768415
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      expressionMatrixImpl0.creatMatrix(2197);
      expressionMatrixImpl0.addNewNode();
      expressionMatrixImpl0.addNewNode();
      expressionMatrixImpl0.setValue(0, 20, 2197);
      expressionMatrixImpl0.getValue(0, 2197);
      expressionMatrixImpl0.toString();
      // Undeclared exception!
      expressionMatrixImpl0.toString();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      int int0 = expressionMatrixImpl0.getValue(93, (-1372));
      assertEquals((-1), int0);
      
      expressionMatrixImpl0.setValue((-1), 93, (-1));
      int int1 = expressionMatrixImpl0.addNewNode();
      assertEquals(0, int1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      expressionMatrixImpl0.toString();
      expressionMatrixImpl0.setValue(988, 988, (-1));
      expressionMatrixImpl0.getValue(345, 345);
      expressionMatrixImpl0.addNewNode();
      expressionMatrixImpl0.toString();
      expressionMatrixImpl0.setValue(0, (-1), 0);
      expressionMatrixImpl0.creatMatrix(1014);
      expressionMatrixImpl0.setValue(0, 0, (-1));
      expressionMatrixImpl0.creatMatrix((-1));
      int int0 = expressionMatrixImpl0.getValue((-1), (-1));
      assertEquals((-1), expressionMatrixImpl0.getNumberOfElements());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertNotNull(expressionMatrixImpl0);
      
      int int0 = expressionMatrixImpl0.addNewNode();
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, int0);
      
      expressionMatrixImpl0.setValue(0, 2197, 2197);
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      
      int int1 = expressionMatrixImpl0.getValue(0, 2197);
      assertFalse(int1 == int0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals((-1), int1);
      
      String string0 = expressionMatrixImpl0.toString();
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals("MATRIX\n-----------------------\n | \n0| \n\nCONNECTIONS\n-----------------------\n", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertNotNull(expressionMatrixImpl0);
      
      int int0 = (-1180);
      int int1 = (-227);
      expressionMatrixImpl0.creatMatrix((-227));
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals((-227), expressionMatrixImpl0.getNumberOfElements());
      
      int int2 = (-1365);
      int int3 = expressionMatrixImpl0.getValue((-1180), (-1365));
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals((-227), expressionMatrixImpl0.getNumberOfElements());
      assertEquals((-1), int3);
      
      MessageTracerImpl messageTracerImpl0 = new MessageTracerImpl();
      assertNotNull(messageTracerImpl0);
      
      messageTracerImpl0.reset();
      ExpressionElementMapper expressionElementMapper0 = messageTracerImpl0.getMapper();
      assertNull(expressionElementMapper0);
      
      String string0 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals((-227), expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string0);
      assertNotNull(string0);
      
      // Undeclared exception!
      try { 
        expressionMatrixImpl0.addNewNode();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.regular.ExpressionMatrixImpl", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertNotNull(expressionMatrixImpl0);
      
      expressionMatrixImpl0.creatMatrix(2183);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2183, expressionMatrixImpl0.getNumberOfElements());
      
      int int0 = expressionMatrixImpl0.addNewNode();
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2183, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, int0);
      
      boolean boolean0 = false;
      ExpressionElementMapperImpl expressionElementMapperImpl0 = new ExpressionElementMapperImpl();
      assertEquals(0, expressionElementMapperImpl0.size());
      assertNotNull(expressionElementMapperImpl0);
      
      // Undeclared exception!
      try { 
        expressionMatrixImpl0.outNoStandardConnections(true, expressionElementMapperImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertNotNull(expressionMatrixImpl0);
      
      String string0 = expressionMatrixImpl0.toString();
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("MATRIX\n-----------------------\n | \n\nCONNECTIONS\n-----------------------\n", string0);
      assertNotNull(string0);
      
      expressionMatrixImpl0.creatMatrix(0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      
      int int0 = expressionMatrixImpl0.addNewNode();
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, int0);
      
      int int1 = expressionMatrixImpl0.getValue(0, (-4442));
      assertFalse(int1 == int0);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals((-1), int1);
      
      ExpressionElementMapperImpl expressionElementMapperImpl0 = new ExpressionElementMapperImpl();
      assertEquals(0, expressionElementMapperImpl0.size());
      assertNotNull(expressionElementMapperImpl0);
      
      String string1 = expressionMatrixImpl0.outNoStandardConnections(false, expressionElementMapperImpl0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionElementMapperImpl0.size());
      assertEquals("", string1);
      assertNotNull(string1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertNotNull(expressionMatrixImpl0);
      
      expressionMatrixImpl0.creatMatrix(2183);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2183, expressionMatrixImpl0.getNumberOfElements());
      
      int int0 = expressionMatrixImpl0.addNewNode();
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2183, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, int0);
      
      expressionMatrixImpl0.setValue(0, 20, 2183);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2183, expressionMatrixImpl0.getNumberOfElements());
      
      MessageTracerImpl messageTracerImpl0 = new MessageTracerImpl();
      assertNotNull(messageTracerImpl0);
      
      ExpressionElementMapper expressionElementMapper0 = messageTracerImpl0.getMapper();
      assertNull(expressionElementMapper0);
      
      String string0 = expressionMatrixImpl0.outNoStandardConnections(true, (ExpressionElementMapper) null);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2183, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("0 --- U ---> 2183\n", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertNotNull(expressionMatrixImpl0);
      
      expressionMatrixImpl0.creatMatrix(2183);
      assertEquals(2183, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      
      int int0 = expressionMatrixImpl0.addNewNode();
      assertEquals(2183, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, int0);
      
      expressionMatrixImpl0.setValue(0, 20, 2183);
      assertEquals(2183, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      
      int int1 = expressionMatrixImpl0.addNewNode();
      assertFalse(int1 == int0);
      assertEquals(2, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2183, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(1, int1);
      
      MessageTracerImpl messageTracerImpl0 = new MessageTracerImpl();
      assertNotNull(messageTracerImpl0);
      
      ExpressionElementMapper expressionElementMapper0 = messageTracerImpl0.getMapper();
      assertNull(expressionElementMapper0);
      
      String string0 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertEquals(2, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2183, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertNotNull(expressionMatrixImpl0);
      
      expressionMatrixImpl0.creatMatrix(337);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(337, expressionMatrixImpl0.getNumberOfElements());
      
      int int0 = expressionMatrixImpl0.getNumberOfElements();
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(337, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(337, int0);
      
      int int1 = expressionMatrixImpl0.getNumberOfNodes();
      assertFalse(int1 == int0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(337, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, int1);
      
      String string0 = expressionMatrixImpl0.toString();
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(337, expressionMatrixImpl0.getNumberOfElements());
      assertNotNull(string0);
      
      MessageTracerImpl messageTracerImpl0 = new MessageTracerImpl();
      assertNotNull(messageTracerImpl0);
      
      HL7MessageGroupImpl hL7MessageGroupImpl0 = new HL7MessageGroupImpl();
      assertFalse(hL7MessageGroupImpl0.isRequired());
      assertFalse(hL7MessageGroupImpl0.isRepeatable());
      assertEquals(0, hL7MessageGroupImpl0.getType());
      assertEquals(0, hL7MessageGroupImpl0.size());
      assertEquals("", hL7MessageGroupImpl0.getAdditional());
      assertNotNull(hL7MessageGroupImpl0);
      
      MessageTracerImpl messageTracerImpl1 = new MessageTracerImpl();
      assertFalse(messageTracerImpl1.equals((Object)messageTracerImpl0));
      assertNotNull(messageTracerImpl1);
      
      messageTracerImpl1.processGroupContent((Expression) null, hL7MessageGroupImpl0);
      assertFalse(messageTracerImpl1.equals((Object)messageTracerImpl0));
      assertNotSame(messageTracerImpl1, messageTracerImpl0);
      assertFalse(hL7MessageGroupImpl0.isRequired());
      assertFalse(hL7MessageGroupImpl0.isRepeatable());
      assertEquals(0, hL7MessageGroupImpl0.getType());
      assertEquals(0, hL7MessageGroupImpl0.size());
      assertEquals("", hL7MessageGroupImpl0.getAdditional());
      
      int int2 = expressionMatrixImpl0.addNewNode();
      assertFalse(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(337, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, int2);
      
      ExpressionElementMapper expressionElementMapper0 = messageTracerImpl1.getMapper();
      assertFalse(messageTracerImpl1.equals((Object)messageTracerImpl0));
      assertNotSame(messageTracerImpl1, messageTracerImpl0);
      assertNull(expressionElementMapper0);
      
      String string1 = expressionMatrixImpl0.outNoStandardConnections(true, (ExpressionElementMapper) null);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(337, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string1);
      assertNotNull(string1);
      
      ExpressionMatrixImpl expressionMatrixImpl1 = new ExpressionMatrixImpl();
      assertFalse(expressionMatrixImpl1.equals((Object)expressionMatrixImpl0));
      assertEquals(0, expressionMatrixImpl1.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl1.getNumberOfNodes());
      assertNotNull(expressionMatrixImpl1);
      
      expressionMatrixImpl0.creatMatrix(920);
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(920, expressionMatrixImpl0.getNumberOfElements());
      
      expressionMatrixImpl0.setValue(0, 30, 0);
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(920, expressionMatrixImpl0.getNumberOfElements());
      
      int int3 = expressionMatrixImpl0.getNumberOfNodes();
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(920, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(1, int3);
      
      int int4 = expressionMatrixImpl0.getValue(0, 17);
      assertFalse(int4 == int2);
      assertFalse(int4 == int1);
      assertFalse(int4 == int0);
      assertFalse(int4 == int3);
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(920, expressionMatrixImpl0.getNumberOfElements());
      assertEquals((-1), int4);
      
      int int5 = expressionMatrixImpl0.addNewNode();
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertFalse(int5 == int4);
      assertTrue(int5 == int3);
      assertFalse(int5 == int0);
      assertFalse(int5 == int2);
      assertFalse(int5 == int1);
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
      assertEquals(2, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(920, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(1, int5);
      
      MessageTracerImpl messageTracerImpl2 = new MessageTracerImpl();
      assertFalse(messageTracerImpl2.equals((Object)messageTracerImpl0));
      assertFalse(messageTracerImpl2.equals((Object)messageTracerImpl1));
      assertNotNull(messageTracerImpl2);
      
      MessageTracerImpl messageTracerImpl3 = new MessageTracerImpl();
      assertFalse(messageTracerImpl3.equals((Object)messageTracerImpl1));
      assertFalse(messageTracerImpl3.equals((Object)messageTracerImpl2));
      assertFalse(messageTracerImpl3.equals((Object)messageTracerImpl0));
      assertNotNull(messageTracerImpl3);
      
      ExpressionElementMapper expressionElementMapper1 = messageTracerImpl3.getMapper();
      assertFalse(messageTracerImpl3.equals((Object)messageTracerImpl1));
      assertFalse(messageTracerImpl3.equals((Object)messageTracerImpl2));
      assertFalse(messageTracerImpl3.equals((Object)messageTracerImpl0));
      assertNotSame(messageTracerImpl3, messageTracerImpl1);
      assertNotSame(messageTracerImpl3, messageTracerImpl2);
      assertNotSame(messageTracerImpl3, messageTracerImpl0);
      assertNull(expressionElementMapper1);
      
      String string2 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
      assertEquals(2, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(920, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("0 --- _ ---> 0\n", string2);
      assertNotNull(string2);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertNotNull(expressionMatrixImpl0);
      
      String string0 = expressionMatrixImpl0.outNoStandardConnections(true, (ExpressionElementMapper) null);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string0);
      assertNotNull(string0);
      
      expressionMatrixImpl0.creatMatrix(2197);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2197, expressionMatrixImpl0.getNumberOfElements());
      
      int int0 = expressionMatrixImpl0.addNewNode();
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2197, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, int0);
      
      String string1 = expressionMatrixImpl0.outNoStandardConnections(true, (ExpressionElementMapper) null);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2197, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string1);
      assertNotNull(string1);
      
      expressionMatrixImpl0.setValue(0, 0, 2197);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2197, expressionMatrixImpl0.getNumberOfElements());
      
      int int1 = expressionMatrixImpl0.getValue(0, 2197);
      assertFalse(int1 == int0);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2197, expressionMatrixImpl0.getNumberOfElements());
      assertEquals((-1), int1);
      
      String string2 = expressionMatrixImpl0.toString();
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2197, expressionMatrixImpl0.getNumberOfElements());
      assertNotNull(string2);
      
      String string3 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertFalse(string3.equals((Object)string2));
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2197, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string3);
      assertNotNull(string3);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertNotNull(expressionMatrixImpl0);
      
      expressionMatrixImpl0.creatMatrix(337);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(337, expressionMatrixImpl0.getNumberOfElements());
      
      int int0 = expressionMatrixImpl0.getNumberOfElements();
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(337, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(337, int0);
      
      int int1 = expressionMatrixImpl0.getNumberOfNodes();
      assertFalse(int1 == int0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(337, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, int1);
      
      String string0 = expressionMatrixImpl0.toString();
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(337, expressionMatrixImpl0.getNumberOfElements());
      assertNotNull(string0);
      
      MessageTracerImpl messageTracerImpl0 = new MessageTracerImpl();
      assertNotNull(messageTracerImpl0);
      
      HL7MessageGroupImpl hL7MessageGroupImpl0 = new HL7MessageGroupImpl();
      assertEquals(0, hL7MessageGroupImpl0.getType());
      assertFalse(hL7MessageGroupImpl0.isRepeatable());
      assertEquals(0, hL7MessageGroupImpl0.size());
      assertEquals("", hL7MessageGroupImpl0.getAdditional());
      assertFalse(hL7MessageGroupImpl0.isRequired());
      assertNotNull(hL7MessageGroupImpl0);
      
      MessageTracerImpl messageTracerImpl1 = new MessageTracerImpl();
      assertFalse(messageTracerImpl1.equals((Object)messageTracerImpl0));
      assertNotNull(messageTracerImpl1);
      
      messageTracerImpl1.processGroupContent((Expression) null, hL7MessageGroupImpl0);
      assertFalse(messageTracerImpl1.equals((Object)messageTracerImpl0));
      assertNotSame(messageTracerImpl1, messageTracerImpl0);
      assertEquals(0, hL7MessageGroupImpl0.getType());
      assertFalse(hL7MessageGroupImpl0.isRepeatable());
      assertEquals(0, hL7MessageGroupImpl0.size());
      assertEquals("", hL7MessageGroupImpl0.getAdditional());
      assertFalse(hL7MessageGroupImpl0.isRequired());
      
      int int2 = expressionMatrixImpl0.addNewNode();
      assertFalse(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(337, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, int2);
      
      ExpressionElementMapper expressionElementMapper0 = messageTracerImpl1.getMapper();
      assertFalse(messageTracerImpl1.equals((Object)messageTracerImpl0));
      assertNotSame(messageTracerImpl1, messageTracerImpl0);
      assertNull(expressionElementMapper0);
      
      String string1 = expressionMatrixImpl0.outNoStandardConnections(true, (ExpressionElementMapper) null);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(337, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string1);
      assertNotNull(string1);
      
      ExpressionMatrixImpl expressionMatrixImpl1 = new ExpressionMatrixImpl();
      assertFalse(expressionMatrixImpl1.equals((Object)expressionMatrixImpl0));
      assertEquals(0, expressionMatrixImpl1.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl1.getNumberOfElements());
      assertNotNull(expressionMatrixImpl1);
      
      expressionMatrixImpl0.creatMatrix(920);
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(920, expressionMatrixImpl0.getNumberOfElements());
      
      expressionMatrixImpl0.setValue(0, 30, 0);
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(920, expressionMatrixImpl0.getNumberOfElements());
      
      int int3 = expressionMatrixImpl0.getNumberOfNodes();
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(920, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(1, int3);
      
      int int4 = expressionMatrixImpl0.getValue(0, 17);
      assertFalse(int4 == int2);
      assertFalse(int4 == int1);
      assertFalse(int4 == int3);
      assertFalse(int4 == int0);
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(920, expressionMatrixImpl0.getNumberOfElements());
      assertEquals((-1), int4);
      
      int int5 = expressionMatrixImpl0.addNewNode();
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertFalse(int5 == int1);
      assertFalse(int5 == int0);
      assertTrue(int5 == int3);
      assertFalse(int5 == int4);
      assertFalse(int5 == int2);
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
      assertEquals(2, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(920, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(1, int5);
      
      MessageTracerImpl messageTracerImpl2 = new MessageTracerImpl();
      assertFalse(messageTracerImpl2.equals((Object)messageTracerImpl0));
      assertFalse(messageTracerImpl2.equals((Object)messageTracerImpl1));
      assertNotNull(messageTracerImpl2);
      
      MessageTracerImpl messageTracerImpl3 = new MessageTracerImpl();
      assertFalse(messageTracerImpl3.equals((Object)messageTracerImpl0));
      assertFalse(messageTracerImpl3.equals((Object)messageTracerImpl1));
      assertFalse(messageTracerImpl3.equals((Object)messageTracerImpl2));
      assertNotNull(messageTracerImpl3);
      
      ExpressionElementMapper expressionElementMapper1 = messageTracerImpl3.getMapper();
      assertFalse(messageTracerImpl3.equals((Object)messageTracerImpl0));
      assertFalse(messageTracerImpl3.equals((Object)messageTracerImpl1));
      assertFalse(messageTracerImpl3.equals((Object)messageTracerImpl2));
      assertNotSame(messageTracerImpl3, messageTracerImpl0);
      assertNotSame(messageTracerImpl3, messageTracerImpl1);
      assertNotSame(messageTracerImpl3, messageTracerImpl2);
      assertNull(expressionElementMapper1);
      
      String string2 = expressionMatrixImpl0.outNoStandardConnections(true, (ExpressionElementMapper) null);
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertFalse(string2.equals((Object)string0));
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
      assertEquals(2, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(920, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string2);
      assertNotNull(string2);
      
      String string3 = expressionMatrixImpl1.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertFalse(string3.equals((Object)string0));
      assertFalse(expressionMatrixImpl1.equals((Object)expressionMatrixImpl0));
      assertNotSame(expressionMatrixImpl1, expressionMatrixImpl0);
      assertEquals(0, expressionMatrixImpl1.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl1.getNumberOfElements());
      assertEquals("", string3);
      assertNotNull(string3);
  }
}
