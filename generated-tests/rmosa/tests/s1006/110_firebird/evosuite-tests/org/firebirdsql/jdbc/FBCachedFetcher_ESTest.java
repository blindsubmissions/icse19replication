/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 08:05:23 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.math.BigDecimal;
import java.math.MathContext;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.concurrent.LinkedBlockingQueue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.AbstractIscStmtHandle;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5403058252265167
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertTrue(fBCachedFetcher0.isEmpty());
      
      fBCachedFetcher0.afterLast();
      boolean boolean0 = fBCachedFetcher0.last();
      assertFalse(boolean0);
      
      fBCachedFetcher0.isEmpty();
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][9];
      linkedList0.offerFirst(byteArray0);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5229550675313184
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[][] byteArray0 = new byte[3][5];
      byte[] byteArray1 = new byte[4];
      byte byte0 = (byte)0;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.absolute((-449));
      try { 
        fBCachedFetcher0.absolute((-1));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7214023220140036
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative(335544404);
      fBCachedFetcher0.relative(1);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.796494167249981
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArrayArray0 = null;
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      int int0 = 1;
      fBCachedFetcher0.relative(1);
      fBCachedFetcher0.last();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.last();
      GDSHelper gDSHelper0 = null;
      int int1 = 379;
      char[] charArray0 = new char[2];
      charArray0[0] = 'K';
      charArray0[1] = '&';
      MathContext mathContext0 = MathContext.DECIMAL64;
      BigDecimal bigDecimal0 = null;
      try {
        bigDecimal0 = new BigDecimal(charArray0, mathContext0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.874640740535752
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.last();
      fBCachedFetcher0.afterLast();
      assertEquals(3, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.iterator();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize((-5821));
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[9][9];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-4);
      byteArray1[1] = (byte) (-3);
      byteArray1[2] = (byte) (-6);
      byteArray1[3] = (byte) (-78);
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte)59;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte) (-3);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte)0;
      byteArray3[1] = (byte)59;
      byteArray3[2] = (byte) (-3);
      byteArray3[3] = (byte) (-3);
      byteArray3[4] = (byte)59;
      byteArray3[5] = (byte)59;
      byteArray3[6] = (byte) (-112);
      byteArray3[7] = (byte) (-6);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[9];
      byteArray4[0] = (byte) (-3);
      byteArray4[1] = (byte)59;
      byteArray4[2] = (byte) (-78);
      byteArray4[3] = (byte)3;
      byteArray4[4] = (byte) (-4);
      byteArray4[5] = (byte)0;
      byteArray4[6] = (byte) (-112);
      byteArray4[7] = (byte) (-3);
      byteArray4[8] = (byte) (-3);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[9];
      byteArray5[0] = (byte) (-3);
      byteArray5[1] = (byte) (-3);
      byteArray5[2] = (byte)3;
      byteArray5[3] = (byte)3;
      byteArray5[4] = (byte)3;
      byteArray5[5] = (byte)3;
      byteArray5[6] = (byte) (-3);
      byteArray5[7] = (byte)0;
      byteArray5[8] = (byte)0;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[4];
      byteArray6[0] = (byte)59;
      byteArray6[1] = (byte) (-3);
      byteArray6[2] = (byte) (-112);
      byteArray6[3] = (byte) (-6);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[2];
      byteArray7[0] = (byte)3;
      byteArray7[1] = (byte) (-4);
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[9];
      byteArray8[0] = (byte)59;
      byteArray8[1] = (byte) (-78);
      byteArray8[2] = (byte)3;
      byteArray8[3] = (byte)0;
      byteArray8[4] = (byte)0;
      byteArray8[5] = (byte)125;
      byteArray8[6] = (byte)0;
      byteArray8[7] = (byte) (-2);
      byteArray8[8] = (byte) (-4);
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[3];
      byteArray9[0] = (byte) (-78);
      byteArray9[1] = (byte) (-112);
      byteArray9[2] = (byte)125;
      byteArray0[8] = byteArray9;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6094379124341003
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      linkedList0.iterator();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((-356));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = (-1461);
      byte[][] byteArray0 = new byte[0][7];
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6094379124341003
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.iterator();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.beforeFirst();
      boolean boolean0 = fBCachedFetcher0.first();
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][6];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-2);
      byteArray1[1] = (byte)127;
      byteArray1[2] = (byte)33;
      byteArray1[4] = (byte)87;
      linkedList0.add(byteArray0);
      boolean boolean0 = linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray2 = new byte[9][1];
      byteArray0[0] = byteArray1;
      byte[] byteArray3 = new byte[16];
      byteArray3[0] = (byte)127;
      byteArray1[0] = (byte)127;
      byteArray2[1] = byteArray1;
      byte[] byteArray4 = new byte[4];
      byteArray4[1] = (byte)33;
      byteArray4[2] = (byte)33;
      byteArray2[2] = byteArray4;
      byteArray2[3] = byteArray1;
      byteArray2[4] = byteArray1;
      byteArray2[5] = byteArray1;
      byte[] byteArray5 = new byte[7];
      byteArray5[2] = (byte)127;
      byteArray5[3] = (byte) (-2);
      byteArray2[1] = byteArray5;
      byteArray2[7] = byteArray1;
      byteArray0[0] = byteArray1;
      fBCachedFetcher0.updateRow(byteArray2);
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.796494167249981
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      int int0 = 1;
      fBCachedFetcher0.relative(1);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.last();
      GDSHelper gDSHelper0 = null;
      int int1 = 379;
      char[] charArray0 = new char[2];
      charArray0[0] = 'K';
      charArray0[1] = '&';
      MathContext mathContext0 = MathContext.DECIMAL64;
      BigDecimal bigDecimal0 = null;
      try {
        bigDecimal0 = new BigDecimal(charArray0, mathContext0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArrayArray0 = null;
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBResultSet0.isAfterLast();
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      // Undeclared exception!
      try { 
        linkedList0.set((byte)42, (byte[][]) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 42, Size: 2
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      int int0 = 1;
      fBCachedFetcher0.relative(1);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.updateRow((byte[][]) null);
      int int1 = (-3062);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(enumeration0).hasMoreElements();
      doReturn((Object) null).when(enumeration0).nextElement();
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream(enumeration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative(1);
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8862280377200702
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArrayArray0 = null;
      linkedList0.add((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.absolute(1381);
      fBCachedFetcher0.relative(1381);
      fBCachedFetcher1.last();
      linkedList0.listIterator();
      fBCachedFetcher0.previous();
      FBCachedFetcher fBCachedFetcher2 = null;
      try {
        fBCachedFetcher2 = new FBCachedFetcher((GDSHelper) null, 0, 973, (AbstractIscStmtHandle) null, fBResultSet0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }
}
