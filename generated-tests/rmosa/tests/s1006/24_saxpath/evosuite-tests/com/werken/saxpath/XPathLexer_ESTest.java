/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 07:39:10 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6381328466730934
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("5T!:)");
      xPathLexer0.leftParen();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.and();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4791263041556139
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("!");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5603844402896829
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("JCU+`!E/mC!)`");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("J", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (22) (CU)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.not();
      assertEquals("+", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("`!E/mC!)`", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5623920555747515
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.setXPath("<:z&B7jL6#d");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.75276169958429
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("<:z&B7jL6#d");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("z", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5623920555747515
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      xPathLexer0.mod();
      String string0 = token0.toString();
      assertEquals("[ (18) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("<:z&B7jL6#d");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(18, token2.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5623920555747515
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("<:z&B7jL6#d");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5623920555747515
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("<:z&B7jL6#d");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.7502778794756502
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*!;Fb2BbCTh");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer0.mod();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.7283787659297728
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5IB");
      xPathLexer0.at();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5623920555747515
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.colon();
      Token token1 = xPathLexer0.minus();
      String string0 = token1.toString();
      assertEquals("[ (6) (o)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      token0.toString();
      token0.toString();
      String string1 = token0.toString();
      assertEquals("[ (18) (c)", string1);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("<:z&B7jL6#d");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6014718389526734
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.slashes();
      xPathLexer0.setXPath("<:z&B7jL6#d");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8802343788644886
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".12Pg2gn.cR");
      Token token0 = xPathLexer0.literal();
      assertNotNull(token0);
      assertEquals("12Pg2gn", token0.getTokenText());
      assertEquals(27, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath(".12Pg2gn.cR");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(".12", token3.getTokenText());
      assertEquals(31, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5623920555747515
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("om", token1.getTokenText());
      
      xPathLexer0.setXPath("<:z&B7jL6#d");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6014718389526734
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("<:z&B7jL6#d");
      xPathLexer0.consume(3779);
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.7951352514753474
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5IB");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".5", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("IB", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.5623920555747515
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("<:z&B7jL6#d");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.5623920555747515
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      xPathLexer0.star();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("<:z&B7jL6#d");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6253129562173195
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*!;Fb2BbCTh");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(";Fb2BbCTh", token2.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.7282957205379674
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tt0<?bH(2");
      xPathLexer0.minus();
      xPathLexer0.rightBracket();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.7865004845610785
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*!;Fb2BbCTh");
      Token token0 = xPathLexer0.plus();
      assertEquals("*", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals(";", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.8222713606126515
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*!;Fb2BbCTh");
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.2820755185042543
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Kj$78G&s");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("Kj", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.isIdentifierChar('+');
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("78", token2.getTokenText());
      
      Token token3 = xPathLexer0.plus();
      assertEquals("G", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.setXPath("tlFSbaTFAnj-)qN%}");
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.75276169958429
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.colon();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("<:z&B7jL6#d");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9664230610115735
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n*_ho(opafL`vzQ");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("_ho", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("p", token3.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.div();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("afL`vzQ", token4.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.7485335944229294
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n*_ho(opafL`vzQ");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.minus();
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.8798846890844252
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("A");
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("A");
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.2959034685583384
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5IB");
      Token token0 = xPathLexer0.comma();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("5", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("JjU?w)l`6");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("JjU?w)l`6", token3.getTokenText());
      
      xPathLexer0.number();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9173225404601595
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftParen();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.8956514903603544
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n*_ho(opafL`vzQ");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("_", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("h", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("o", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("(", token3.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.div();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertNotNull(token4);
      assertEquals("opafL", token4.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.6641633710312738
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("5T!7)");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("5", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals("T", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer1.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      assertEquals("7", token4.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1745898086846551
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("'@R@xW:'c';;");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.7776764798943621
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.mod();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath(":=pG%=$4I");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.6944230652122783
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5IB");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("5", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.8603977537425277
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5IB");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1816757279770715
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<l-xb#-16e#Q");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals("l-xb", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.125683817599054
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<l-xb#-16e#Q");
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.at();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.7283787659297727
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8IB");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.9223212316595589
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("=p", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath(":=pG%=$4I");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals("=", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("pG", token4.getTokenText());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.9118869525103237
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".12Pg2gn.cR");
      Token token0 = xPathLexer0.plus();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath(".12Pg2gn.cR");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".12", token2.getTokenText());
      assertEquals(31, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      assertEquals("Pg2gn.cR", token3.getTokenText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.9369212314345162
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7 NnZ<w");
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.setXPath("zebri/gG[oi\"V\"");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.2845834981568398
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7 NnZ<w");
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.setXPath("zebri/gG[oi\"V\"");
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.7865750932058257
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("<:z&B7jL6#d");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0047993601806853
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".12Pg2gn.cR");
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath(".12Pg2gn.cR");
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.8268910291736981
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("5T!:)");
      xPathLexer0.leftParen();
      xPathLexer0.doubleColon();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.and();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1538198736942964
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<l-xb#-16e#Q");
      xPathLexer0.setXPath("'@R@xW:'c';;");
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.7619471569286802
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8IB");
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4124926042749948
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.plus();
      token0.toString();
      token0.toString();
      xPathLexer0.dots();
      xPathLexer0.setXPath("[ (13) (c)");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("m", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.setXPath("/!K]i{|=t{");
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.4028008100122475
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("JCU+`!E/mC!)`");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0516873566135958
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.plus();
      token0.toString();
      token0.toString();
      xPathLexer0.setXPath("[ (13) (c)");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0s5w^kd5/3FH e");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("0", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.815870063446011
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".12Pg2gn.cR");
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath(".12Pg2gn.cR");
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.7283787659297728
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath(".2Pg~n.cR");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".2", token0.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("if^otD%.e:t!\"6$jU");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("if", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0011446578918908
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n*_ho(opafL`vzQ");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.slashes();
      xPathLexer0.minus();
      xPathLexer0.dots();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NTQK*W!)#b)F`mt");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("NTQK", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.6944135781518235
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zwpF$okLeg{VeAW4y");
      xPathLexer0.pipe();
      xPathLexer0.or();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dollar();
      xPathLexer0.setXPath(":U8T&>>-p<$eR");
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("zwpF$okLeg{VeAW4y");
      xPathLexer0.div();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.div();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5631810004678317
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u*_ho(ov+fL`vzQ");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("u", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("_", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.identifier();
      assertEquals("", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.pipe();
      assertEquals("(", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      Token token6 = xPathLexer0.at();
      assertEquals("o", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("v+fL`vzQ", token7.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.9117364017931511
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tt0<?bH(2");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.9470343286882184
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tt0<?bH(2");
      xPathLexer0.minus();
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.9664230610115735
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n*_ho(opafL`vzQ");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5631810004678317
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u*_ho(ov+fL`vzQ");
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.8279498916841109
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".6Oy");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.9934227193775893
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j}JB?");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("j", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("}J", token1.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.setXPath("Ws8;J]*_oM,`f5WSQ ");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.plus();
      assertEquals("W", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("s8", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(";J]*_oM,`f5WSQ ", token5.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.1636321541040107
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Kj$78G&s");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("Kj", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(26, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("78G", token2.getTokenText());
      
      xPathLexer0.setXPath("Kj$78G&s");
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.290329933229836
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.identifier();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.setXPath("d[%!:]ojzs5");
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.1998063689652811
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.identifier();
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.setXPath("<<Dx$wr~0xnQC=?5");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token2 = xPathLexer0.dots();
      assertEquals("<", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Dx", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.8025977619261593
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">F!J~ul}DXNx~*;");
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("F!", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath(">F!J~ul}DXNx~*;");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("F", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.125683817599054
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<l-xb#-16e#Q");
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5860362975123459
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u*_ho(ov+fL`vzQ");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("*", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.equals();
      assertEquals("h", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("(", token4.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("+", token5.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("`vzQ", token7.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.2484456238211161
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Kj$78G&s");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("Kj", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("$", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("78", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("G&s", token3.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.2873764651055273
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5IB");
      Token token0 = xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.3691222874880307
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("'@R@xW:'c';;");
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.9664230610115735
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n*_ho(opafL`vzQ");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer0.consume();
      xPathLexer0.minus();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/}HITjQOl%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(11, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.7282957205379674
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tt0<?bH(2");
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("\"");
      xPathLexer1.and();
      xPathLexer0.setXPath("Ln=L0_IpBL:a]");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Ln=L0_IpBL:a]", token1.getTokenText());
      assertNotSame(token1, token0);
      
      Token token2 = xPathLexer1.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.291325644496478
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("'@R@xW:'c';;");
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0972630115546445
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<l-xb#-16e#Q");
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.4015723410278793
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("om.rkensaxpath.XPat9Lexer");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("mqR8^.s-");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.setXPath("'@R@xW:'c';;");
      xPathLexer0.setXPath("#XOyW(0AXAI?Blf#OC7");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("#", token1.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("XOyW(0AXAI?Blf#OC7", token2.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.479619506567032
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("om.rkensaxpath.XPat9Lexer");
      Token token0 = xPathLexer0.comma();
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("m.rkensaxpath.XPat9Lexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("djnL\"cO_)Nhw1C/gQ");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.number();
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.8279498916841109
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5IB");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".5", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("IB", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q2*)d_1PRq5o}{Cs ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Q2", token0.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1816757279770715
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<l-xb#-16e#Q");
      xPathLexer0.setXPath(")l %qW");
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.and();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.setXPath("C_x_b#}Y(f|");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("C_x_b", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("#}Y(f|", token2.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.6558833350462918
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      Token token1 = xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.plus();
      token2.toString();
      String string0 = token1.toString();
      assertEquals("[ (4) (o)", string0);
      
      String string1 = token2.toString();
      assertEquals("[ (5) (m)", string1);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(13, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.colon();
      assertEquals(".", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.XPathLexer", token4.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.8644669577897612
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("JCU+`!E/mC!)`");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.pipe();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.plus();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1179517477724885
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nS6?|");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.comma();
      xPathLexer0.and();
      xPathLexer0.setXPath(".=5IB");
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0257667539949242
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.plus();
      token0.toString();
      token0.toString();
      xPathLexer0.setXPath("[ (13) (c)");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.9818905695430036
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tt0<?bH(2");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.nextToken();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{OH(LBM[W4AfL");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",*Z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(32, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.1721701241738613
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.plus();
      token0.toString();
      token0.toString();
      xPathLexer0.setXPath("[ (13) (c)");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.8924853529456784
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".6Oy");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".6", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Oy", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.2230718080599117
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("m.", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.not();
      Token token3 = xPathLexer0.not();
      assertEquals("r", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      assertEquals("ken.saxpath.XPathLexer", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.setXPath("YRy");
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertNotSame(token2, token0);
      assertEquals("YRy", token2.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gV)rcbs0t'm");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("g", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.8759877405572355
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tt0<?bH(2");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("T", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("t", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(7, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.479619506567032
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("om.rkensaxpath.XPat9Lexer");
      Token token0 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("m.rkensaxpath.XPat9Lexer", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("djnL\"cO_)Nhw1C/gQ");
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.7708594988928998
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("JCU+`!E/mC!)`");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("C", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      Token token3 = xPathLexer0.notEquals();
      assertEquals("`!", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals(22, token2.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("E", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("/", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("<:z&B7jL6#d");
      xPathLexer0.setXPath("ZgY 3!A\"ezLSi");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("ZgY 3!A\"ezLSi", token1.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("=", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("//G9nF");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("//", token2.getTokenText());
      assertEquals(12, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.2230718080599117
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("m.", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.XPathLexer", token4.getTokenText());
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.8603977537425277
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5IB");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".5", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("I", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("B", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.4015723410278793
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("om.rkensaxpath.XPat9Lexer");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("om.rkensaxpath.XPat9Lexer", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.setXPath("mqR8^.s-");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("qR8^.s-", token3.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.1347735179126333
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Kj$78G&s");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.4015723410278793
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("om.rkensaxpath.XPat9Lexer");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("om.rkensaxpath.XPat9Lexer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.setXPath("mnR8O.s-");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("mnR8O.s-", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.or();
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("nR8O.s-", token4.getTokenText());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.22275920960915
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.setXPath("'@R@xW:'c';;");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(16, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("R", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.3702153609866436
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.star();
      xPathLexer0.setXPath("E_6Q]Uamd");
      xPathLexer0.leftParen();
      xPathLexer0.star();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H/2Y?Y");
      xPathLexer0.setXPath("/ctx%fyRPpu>*k<");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(11, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("ctx", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M*XKPFp}]:Cj@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"MT");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&..n`|");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4cvFDGjh%J#pl;li>");
      xPathLexer0.number();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.209255830509408
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<l-xb#-16e#Q");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("l", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("-", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("xb", token3.getTokenText());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4cvFDGjh%J#pl;li>");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("4", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9S");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("y", token0.getTokenText());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~Y@::t");
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.colon();
      assertEquals("@", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("::", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer0.comma();
      assertEquals("t", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".12Pg2gn.cR");
      xPathLexer0.plus();
      Token token0 = xPathLexer0.minus();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("6..P1G|");
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.setXPath(".0Pg~wcg");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".0", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!.3?lMwr`");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token1.getTokenText());
      
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer("//M");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(12, token2.getTokenType());
      assertEquals("//", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer1.nextToken();
      xPathLexer1.div();
      Token token4 = xPathLexer1.nextToken();
      assertEquals("", token4.getTokenText());
  }
}
