/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 07:44:17 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-omitEncoding", false, "JX]:%l_/j0F");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "JX]:%l_/j0F";
      stringArray0[2] = "-trimText";
      stringArray0[4] = "-omitEncoding";
      stringArray0[5] = "";
      outputFormat0.setTrimText(false);
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("JX]:%l_/j0F", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("-omitEncoding", outputFormat0.getIndent());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("d");
      OutputFormat outputFormat2 = new OutputFormat("-newlines");
      OutputFormat outputFormat3 = new OutputFormat("-xhtml?SsvyI");
      outputFormat3.setLineSeparator("d");
      assertEquals("d", outputFormat3.getLineSeparator());
      
      String[] stringArray0 = new String[0];
      int int0 = outputFormat1.getNewLineAfterNTags();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("C^lu^q 5B|");
      outputFormat0.setLineSeparator("3Ur%wR]{*5z$d{");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "N Vtj|_Qd@)~+}1wLoF";
      stringArray0[1] = "N Vtj|_Qd@)~+}1wLoF";
      stringArray0[2] = "-indent";
      stringArray0[3] = "C^lu^q 5B|";
      stringArray0[4] = "N Vtj|_Qd@)~+}1wLoF";
      stringArray0[1] = "qrdY0~OFIe-";
      stringArray0[6] = "qrdY0~OFIe-";
      stringArray0[7] = "qrdY0~OFIe-";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent((String) null);
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertEquals("3Ur%wR]{*5z$d{", outputFormat0.getLineSeparator());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.setOmitEncoding(true);
      outputFormat1.setOmitEncoding(true);
      OutputFormat outputFormat2 = new OutputFormat("", true);
      outputFormat2.setIndent(true);
      OutputFormat outputFormat3 = new OutputFormat("", true, (String) null);
      outputFormat0.getLineSeparator();
      outputFormat1.isOmitEncoding();
      outputFormat0.setPadText(true);
      assertTrue(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isPadText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setOmitEncoding(false);
      String string0 = outputFormat0.getEncoding();
      assertEquals("UTF-8", string0);
      
      outputFormat0.setXHTML(false);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setExpandEmptyElements(true);
      OutputFormat outputFormat1 = new OutputFormat("G");
      OutputFormat outputFormat2 = new OutputFormat("-newlines");
      OutputFormat outputFormat3 = new OutputFormat("G");
      assertEquals("\n", outputFormat3.getLineSeparator());
      
      outputFormat3.setLineSeparator("");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "";
      stringArray0[3] = "C)H[|D#oq4RPH";
      stringArray0[4] = "";
      outputFormat2.parseOptions(stringArray0, 1);
      int int0 = outputFormat3.parseOptions(stringArray0, 2);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "JX]:%l_/j0F");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "JX]:%l_/j0F";
      stringArray0[3] = "";
      stringArray0[4] = "JX]:%l_/j0F";
      outputFormat0.setIndent(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-960));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -960
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      int int0 = (-1338);
      outputFormat0.setSuppressDeclaration(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('Y');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (Y)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isNewlines());
      
      outputFormat1.setNewlines(false);
      outputFormat0.isPadText();
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat1.getLineSeparator();
      boolean boolean0 = outputFormat0.isNewlines();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, "T");
      outputFormat0.setIndent("");
      outputFormat0.setEncoding((String) null);
      outputFormat0.isNewlines();
      outputFormat0.setIndentSize((-1079));
      outputFormat0.setNewlines(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewlines(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.getEncoding();
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent("wr[[o");
      assertTrue(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, (String) null);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setPadText(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setPadText(true);
      outputFormat0.setNewLineAfterNTags((-1028));
      assertEquals((-1028), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("..I: PNcu^A ^", false);
      outputFormat0.getEncoding();
      outputFormat0.setNewLineAfterNTags((-2346));
      assertEquals((-2346), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-padText");
      outputFormat0.setLineSeparator((String) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "qrdY0~OFIe-";
      stringArray0[1] = "-padText";
      stringArray0[2] = "qrdY0~OFIe-";
      stringArray0[3] = "qrdY0~OFIe-";
      outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isPadText());
      
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setIndent((String) null);
      outputFormat0.parseOptions(stringArray0, 2631);
      assertTrue(outputFormat0.isPadText());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = false;
      OutputFormat outputFormat0 = new OutputFormat("", false, "JX]:%l_/j0F");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "JX]:%l_/j0F";
      outputFormat0.setIndent("");
      stringArray0[3] = "";
      stringArray0[4] = "JX]:%l_/j0F";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-960));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -960
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('H');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (H)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml");
      outputFormat0.setIndent("-xhtml");
      int int0 = (-1890);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewLineAfterNTags((-1890));
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('`');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (`)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setLineSeparator("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      outputFormat0.parseOptions(stringArray0, 1008);
      outputFormat0.setLineSeparator(":}Zr'N*Cu");
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals(":}Zr'N*Cu", outputFormat0.getLineSeparator());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat();
      OutputFormat outputFormat2 = new OutputFormat("qAbfj-1#0", true);
      outputFormat1.setLineSeparator("-encoding");
      outputFormat2.setIndent("[I4jjO#mQ5%<c8,Gh92");
      outputFormat2.setEncoding((String) null);
      String[] stringArray0 = new String[7];
      stringArray0[1] = "qAbfj-1#0";
      stringArray0[2] = null;
      stringArray0[3] = "X.~g<=UK*M";
      stringArray0[4] = "[I4jjO#mQ5%<c8,Gh92";
      stringArray0[5] = "Y}WqCd!";
      stringArray0[6] = "]R39(B?*+O0TK- ";
      outputFormat0.setIndent("]R39(B?*+O0TK- ");
      boolean boolean0 = outputFormat1.isExpandEmptyElements();
      assertEquals("-encoding", outputFormat1.getLineSeparator());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("VE6l", true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isXHTML();
      outputFormat0.setIndent(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getIndent();
      outputFormat0.setOmitEncoding(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('9');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (9)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "qrdY0~OFIe-";
      stringArray0[1] = "-padText";
      stringArray0[2] = "qrdY0~OFIe-";
      stringArray0[3] = "qrdY0~OFIe-";
      OutputFormat outputFormat0 = new OutputFormat("qrdY0~OFIe-", false, (String) null);
      assertFalse(outputFormat0.isPadText());
      
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isPadText());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("QXhr@xq");
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      boolean boolean0 = outputFormat0.isXHTML();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(":=pG?%=$4I", true);
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = ":=pG?%=$4I";
      stringArray0[1] = ":=pG?%=$4I";
      stringArray0[2] = ":=pG?%=$4I";
      stringArray0[3] = ":=pG?%=$4I";
      outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(outputFormat0.isOmitEncoding());
      
      OutputFormat outputFormat1 = new OutputFormat(":=pG?%=$4I");
      outputFormat1.getAttributeQuoteCharacter();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.setIndent(false);
      outputFormat2.setAttributeQuoteCharacter('\"');
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("qrdY0~OFIe-");
      OutputFormat outputFormat1 = new OutputFormat("-newlines");
      OutputFormat outputFormat2 = new OutputFormat("-xhtml:=pG?%=$4I");
      outputFormat0.setPadText(false);
      outputFormat1.setPadText(false);
      outputFormat0.isTrimText();
      OutputFormat outputFormat3 = new OutputFormat((String) null, false);
      outputFormat3.setAttributeQuoteCharacter('\'');
      outputFormat3.isTrimText();
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat3.getIndent();
      outputFormat3.setIndent(false);
      OutputFormat outputFormat4 = new OutputFormat("-expandEmpty-encoding");
      OutputFormat outputFormat5 = new OutputFormat("-newlines", false);
      String[] stringArray0 = new String[0];
      outputFormat5.parseOptions(stringArray0, 1771);
      outputFormat5.parseOptions(stringArray0, 3970);
      OutputFormat.createPrettyPrint();
      outputFormat2.parseOptions(stringArray0, 1771);
      // Undeclared exception!
      try { 
        outputFormat4.parseOptions(stringArray0, (-313865615));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -313865615
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = new OutputFormat("-expandEmptyqrdY0~");
      outputFormat1.setLineSeparator("-expandEmptyqrdY0~");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-expandEmptyqrdY0~";
      stringArray0[1] = "-indent";
      stringArray0[2] = "-indent";
      outputFormat1.parseOptions(stringArray0, 1);
      outputFormat1.parseOptions(stringArray0, 3);
      outputFormat0.setEncoding("U$SS&7GZTdO~KV3");
      outputFormat1.setPadText(false);
      assertEquals("-expandEmptyqrdY0~", outputFormat1.getLineSeparator());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newlines");
      outputFormat0.setLineSeparator("-xhtml:=pG?%=$4I");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-xhtml:=pG?%=$4I";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "-xhtml:=pG?%=$4I";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.setOmitEncoding(true);
      outputFormat1.setLineSeparator("-encoding");
      outputFormat1.setIndent("[I4jjO#mQ5%<c8,Gh92");
      outputFormat1.setEncoding((String) null);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmpty3Ur%wR]{*5z$d{";
      stringArray0[1] = "qAbfj-1#0";
      stringArray0[2] = null;
      stringArray0[3] = "X.~g<=UK*M";
      stringArray0[4] = "[I4jjO#mQ5%<c8,Gh92";
      stringArray0[5] = "Y}WqCd!";
      stringArray0[6] = "]R39(B?*+O0TK- ";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.parseOptions(stringArray0, 1);
      outputFormat0.setIndent("]R39(B?*+O0TK- ");
      boolean boolean0 = outputFormat1.isExpandEmptyElements();
      assertEquals("-encoding", outputFormat1.getLineSeparator());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setNewlines(true);
      String[] stringArray0 = new String[3];
      String string0 = "[yoU";
      stringArray0[0] = "[yoU";
      stringArray0[1] = "-suppressDeclaration";
      stringArray0[2] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 1365);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize(0);
      outputFormat0.setLineSeparator("");
      String[] stringArray0 = new String[8];
      outputFormat0.setTrimText(false);
      stringArray0[0] = "-indentSize";
      stringArray0[1] = null;
      stringArray0[2] = "12HO2{@sDvCJq";
      stringArray0[3] = "";
      stringArray0[4] = "12HO2{@sDvCJq";
      stringArray0[5] = "12HO2{@sDvCJq";
      stringArray0[6] = "";
      stringArray0[7] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("$&r,C");
      outputFormat0.setLineSeparator("-encoding");
      outputFormat0.setIndent("[I4jjO#mQ5%<c8,Gh92");
      outputFormat0.setEncoding("-expandEmpty3Ur%wR]{*5z$d{");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "]R39(B?*+O0TK- ";
      stringArray0[2] = "X.~g<=UK*M";
      stringArray0[3] = null;
      stringArray0[4] = "]R39(B?*+O0TK- ";
      stringArray0[5] = "-newlines";
      stringArray0[6] = "";
      stringArray0[7] = "qrdY0~OFIe-";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.setIndent((String) null);
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertEquals("-encoding", outputFormat0.getLineSeparator());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat0.isNewlines());
      
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[yoU";
      stringArray0[1] = "[yoU";
      stringArray0[2] = "-suppressDeclaration";
      stringArray0[3] = "-suppressDeclaration";
      int int0 = outputFormat1.parseOptions(stringArray0, 2);
      assertEquals(4, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-omitEncoding");
      OutputFormat outputFormat1 = new OutputFormat("F");
      outputFormat1.setLineSeparator("qrdY0~OFIe-");
      assertEquals("qrdY0~OFIe-", outputFormat1.getLineSeparator());
      
      String[] stringArray0 = new String[2];
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      stringArray0[0] = "qrdY0~OFIe-";
      stringArray0[1] = "-omitEncoding";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      int int1 = outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat((String) null);
      outputFormat1.isTrimText();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-padText";
      stringArray0[1] = "-trimText";
      stringArray0[2] = null;
      stringArray0[4] = "";
      stringArray0[5] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
