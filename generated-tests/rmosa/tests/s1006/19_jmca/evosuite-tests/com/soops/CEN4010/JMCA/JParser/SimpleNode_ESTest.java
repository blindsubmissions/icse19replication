/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 07:45:10 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(6);
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      simpleNode0.parser = javaParser0;
      simpleNode0.jjtClose();
      String string0 = "}";
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "}", (-2034806447), 6);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.48439011623800354
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("&*");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter(47);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(0);
      StringWriter stringWriter3 = new StringWriter(0);
      SimpleNode simpleNode1 = new SimpleNode(187);
      stringWriter1.append('_');
      StringWriter stringWriter4 = new StringWriter(0);
      simpleNode0.dump("CompilationUnit", stringWriter4);
      simpleNode1.dump("*lt", stringWriter0);
      simpleNode1.dump("&*", stringWriter0);
      simpleNode0.dump("InstanceOfExpression", stringWriter0);
      StringWriter stringWriter5 = stringWriter1.append('Y');
      simpleNode0.dump("InstanceOfExpression", stringWriter5);
      StringWriter stringWriter6 = new StringWriter(0);
      simpleNode0.dump("Qi08 fga8|?", stringWriter6);
      StringWriter stringWriter7 = new StringWriter();
      simpleNode0.dump("KfqXOI@at8O2L", stringWriter5);
      assertEquals("_Y<InstanceOfExpression>\n  <identifier>&*</identifier>\n</InstanceOfExpression>\n<InstanceOfExpression>\n  <identifier>&*</identifier>\n</InstanceOfExpression>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.7031315809655685
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      String string0 = "*qAfh!t";
      simpleNode0.setIdentifier("*qAfh!t");
      StringWriter stringWriter0 = new StringWriter(2366);
      int int0 = 2663;
      stringWriter0.flush();
      simpleNode0.toString("*qAfh!t");
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "*qAfh!tNameList : *qAfh!t", 37, 37);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6081583698769648
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("q");
      simpleNode0.jjtOpen();
      simpleNode0.setIdentifier("6");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      stringWriter0.write((-3572));
      simpleNode0.dump("F@tk<f_,vHR2lwvB", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode((-1982317362));
      simpleNode1.jjtSetParent(simpleNode0);
      simpleNode1.dump((String) null, stringWriter0);
      simpleNode1.dump("F@tk<f_,vHR2lwvB", stringWriter0);
      simpleNode0.dump("==", stringWriter0);
      assertEquals("\uF20C<VariableDeclaratorId>\n  <identifier>q</identifier>\n  <identifier>6</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>q</identifier>\n  <identifier>6</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.48509409130221154
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-957));
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.parent = (Node) simpleNode0;
      JavaParser javaParser0 = new JavaParser((String) null);
      Node node0 = javaParser0.currNode;
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode1.dump((String) null, stringWriter0);
      SimpleNode simpleNode2 = new SimpleNode((-957));
      simpleNode2.dump((String) null, stringWriter0);
      simpleNode0.dump("", stringWriter0);
      simpleNode2.dump("_p?j", stringWriter0);
      simpleNode1.dump("_p?j", stringWriter0);
      assertEquals(1, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6081583698769648
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.toString();
      simpleNode0.setIdentifier("y");
      StringWriter stringWriter0 = new StringWriter(18);
      stringWriter0.write(18);
      simpleNode0.dump("VariableDeclaratorId", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(6);
      JavaParser javaParser0 = new JavaParser("y");
      SimpleNode simpleNode2 = new SimpleNode(6);
      simpleNode1.dump("<", stringWriter0);
      StringReader stringReader0 = new StringReader("<");
      stringReader0.markSupported();
      JavaParser javaParser1 = new JavaParser(stringReader0);
      SimpleNode simpleNode3 = new SimpleNode(javaParser1, 6);
      simpleNode3.toString();
      simpleNode2.dump("y", stringWriter0);
      simpleNode2.dump("y", stringWriter0);
      assertEquals("\u0012<VariableDeclaratorId>\n  <identifier>y</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4709001279172663
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.toString();
      simpleNode0.setIdentifier("s");
      StringWriter stringWriter0 = new StringWriter(18);
      stringWriter0.flush();
      stringWriter0.write((-1));
      simpleNode0.dump("s", stringWriter0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) null);
      simpleNode0.dump("VariableDeclaratorId", stringWriter1);
      simpleNode0.dump((String) null, stringWriter1);
      SimpleNode simpleNode1 = new SimpleNode(2);
      simpleNode1.dump((String) null, stringWriter0);
      simpleNode1.dump("em4t@K", stringWriter0);
      assertEquals("\uFFFF<VariableDeclaratorId>\n  <identifier>s</identifier>\n</VariableDeclaratorId>\nnull<VariableDeclaratorId>\n  <identifier>s</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>s</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0254316870339695
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(19);
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier("EgxPQ9~N\"f.ZJ?");
      simpleNode0.toString();
      simpleNode0.setIdentifier("}");
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(2919);
      stringWriter0.flush();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "EgxPQ9~N\"f.ZJ?");
      simpleNode0.toString();
      simpleNode0.dump("$", stringWriter1);
      simpleNode0.dump("NA", stringWriter0);
      assertEquals("EgxPQ9~N\"f.ZJ?<VariableInitializer>\n  <identifier>EgxPQ9~N\"f.ZJ?</identifier>\n</VariableInitializer>\n<VariableInitializer>\n  <identifier>EgxPQ9~N\"f.ZJ?</identifier>\n</VariableInitializer>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5481178804418445
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.setIdentifier("*qAfh!t");
      StringWriter stringWriter0 = new StringWriter(2366);
      simpleNode0.toString();
      stringWriter0.flush();
      stringWriter0.write(2663);
      simpleNode0.dump("XINZf", stringWriter0);
      simpleNode0.dump("XINZf", stringWriter0);
      simpleNode0.dump("XINZf", stringWriter0);
      simpleNode0.dump("ZtFqN@'o!,(0gfn:", stringWriter0);
      assertEquals("\u0A67<NameList>\n  <identifier>*qAfh!t</identifier>\n</NameList>\n<NameList>\n  <identifier>*qAfh!t</identifier>\n</NameList>\n<NameList>\n  <identifier>*qAfh!t</identifier>\n</NameList>\n<NameList>\n  <identifier>*qAfh!t</identifier>\n</NameList>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1743));
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) simpleNode0;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("_yfJi61c3.o4|c<");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "CompilationUnit");
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      SimpleNode simpleNode1 = new SimpleNode((-1743));
      nodeArray0[3] = (Node) simpleNode1;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode2 = new SimpleNode((-1846));
      simpleNode2.jjtGetNumChildren();
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-1994657977));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8531903058911254
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.toString();
      simpleNode0.setIdentifier("s");
      simpleNode0.jjtOpen();
      StringWriter stringWriter0 = new StringWriter(1);
      stringWriter0.flush();
      stringWriter0.write(6);
      simpleNode0.dump("s", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode1.jjtAddChild(simpleNode0, 1);
      JavaParser javaParser0 = new JavaParser(" : ");
      SimpleNode simpleNode2 = new SimpleNode(1);
      simpleNode2.setIdentifier("s");
      Node[] nodeArray0 = new Node[1];
      simpleNode1.jjtGetParent();
      nodeArray0[0] = null;
      simpleNode1.children = nodeArray0;
      simpleNode2.jjtAddChild((Node) null, 842);
      simpleNode2.jjtAddChild(simpleNode0, 37);
      SimpleNode simpleNode3 = new SimpleNode(javaParser0, 6);
      simpleNode3.jjtAddChild(simpleNode1, 57);
      simpleNode2.dump("4b", stringWriter0);
      simpleNode3.dump(" : ", stringWriter0);
      simpleNode0.dump("4b", stringWriter0);
      String string0 = "_p?j";
      Writer writer0 = null;
      // Undeclared exception!
      try { 
        simpleNode0.dump("", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1465);
      SimpleNode simpleNode1 = new SimpleNode(2591);
      JavaParser javaParser0 = new JavaParser("");
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, (-1994197846));
      simpleNode2.jjtAddChild(simpleNode0, 1465);
      simpleNode2.jjtAddChild(simpleNode0, 2591);
      assertEquals(2592, simpleNode2.jjtGetNumChildren());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.toString();
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      stringWriter0.write(2663);
      SimpleNode simpleNode1 = new SimpleNode(18);
      simpleNode0.dump("\" at line ", stringWriter0);
      simpleNode1.dump("A", stringWriter0);
      simpleNode1.dump("VariableDeclaratorId", stringWriter0);
      simpleNode0.dump("p", stringWriter0);
      stringWriter0.append('~');
      simpleNode1.dump(">~<c]", stringWriter0);
      assertEquals("\u0A67<VariableDeclaratorId>\n  <identifier>*lshft</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>*lshft</identifier>\n</VariableDeclaratorId>\n~", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0254316870339695
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier(">");
      simpleNode0.toString();
      simpleNode0.setIdentifier("");
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetNumChildren();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter(8);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.flush();
      stringWriter1.append((CharSequence) "CompilationUnit : >");
      stringWriter0.append('h');
      simpleNode0.dump("EgxPQ9~N\"f.ZJ?", stringWriter0);
      assertEquals("h<CompilationUnit>\n  <identifier>*gt</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5924028775138872
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.toString();
      simpleNode0.setIdentifier("q");
      simpleNode0.jjtOpen();
      simpleNode0.setIdentifier("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter(2396);
      stringWriter0.write(18);
      stringWriter0.flush();
      stringWriter0.write(18);
      simpleNode0.dump("", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(384);
      simpleNode1.dump("VariableDeclaratorId", stringWriter0);
      simpleNode1.dump("VariableDeclaratorId", stringWriter0);
      assertEquals("\u0012\u0012<VariableDeclaratorId>\n  <identifier>q</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("&");
      simpleNode0.toString();
      simpleNode0.setIdentifier("Kgg!a");
      simpleNode0.jjtOpen();
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(2919);
      stringWriter0.flush();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "CompilationUnit : & : Kgg!a");
      stringWriter0.append('@');
      simpleNode0.dump("&", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.dump((String) null, stringWriter1);
      assertEquals("CompilationUnit : & : Kgg!a@<CompilationUnit>\n  <identifier>*amp</identifier>\n  <identifier>Kgg!a</identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier>*amp</identifier>\n  <identifier>Kgg!a</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
      assertEquals("CompilationUnit : & : Kgg!a@<CompilationUnit>\n  <identifier>*amp</identifier>\n  <identifier>Kgg!a</identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier>*amp</identifier>\n  <identifier>Kgg!a</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      String string0 = "<<";
      String string1 = ">>";
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter(90);
      simpleNode0.dump("<<", stringWriter0);
      simpleNode0.dump("<<", stringWriter0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      stringWriter0.flush();
      simpleNode0.identifiers = arrayList0;
      JavaParser javaParser0 = new JavaParser(">=");
      simpleNode0.parser = javaParser0;
      stringWriter0.flush();
      String string2 = "PB=";
      JavaParser javaParser1 = new JavaParser((String) null);
      JJTJavaParserState jJTJavaParserState0 = javaParser1.jjtree;
      // Undeclared exception!
      try { 
        jJTJavaParserState0.popNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier(";");
      simpleNode0.jjtOpen();
      simpleNode0.setIdentifier("6");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      stringWriter0.write(134);
      simpleNode0.dump((String) null, stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(134);
      simpleNode1.dump(";", stringWriter0);
      simpleNode1.dump("<identifier>Literal Value</identifier>", stringWriter0);
      SimpleNode simpleNode2 = new SimpleNode(0);
      simpleNode2.dump("q", stringWriter0);
      assertEquals("\u0086<CompilationUnit>\n  <identifier>6</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      SimpleNode simpleNode1 = new SimpleNode(6);
      simpleNode0.setIdentifier("<");
      simpleNode1.jjtOpen();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.append((CharSequence) "d");
      stringWriter0.write("</");
      simpleNode0.parent = (Node) simpleNode1;
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.append('6');
      simpleNode0.dump("</", stringWriter2);
      assertEquals("6<PackageDeclaration>\n  <identifier>*lt</identifier>\n</PackageDeclaration>\n", stringWriter2.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      stringWriter0.write(88);
      simpleNode1.dump("*qAfh!t", stringWriter0);
      simpleNode1.dump("*qAfh!t", stringWriter0);
      simpleNode0.dump("X", stringWriter0);
      assertEquals("X<CompilationUnit>\n  <identifier>*le</identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier>*le</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.jjtOpen();
      simpleNode0.setIdentifier("6");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.setIdentifier("&&");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.dump("6", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode((-1));
      simpleNode0.dump("&&", stringWriter0);
      simpleNode0.dump("6", stringWriter0);
      simpleNode0.dump("PackageDeclaration", stringWriter1);
      assertEquals("<VariableDeclaratorId>\n  <identifier>6</identifier>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.toString();
      simpleNode0.setIdentifier("q");
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(2663);
      stringWriter1.write(2663);
      SimpleNode simpleNode1 = new SimpleNode(2663);
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>q</identifier>\n  <identifier>*ge</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.setIdentifier("*qAfh!t");
      StringWriter stringWriter0 = new StringWriter(2366);
      stringWriter0.flush();
      stringWriter0.write(899);
      simpleNode0.setIdentifier("{");
      simpleNode0.dump("*qAfh!t", stringWriter0);
      simpleNode0.dump(">sVu3&uzHd'M,", stringWriter0);
      assertEquals("\u0383<NameList>\n  <identifier>*qAfh!t</identifier>\n</NameList>\n<NameList>\n  <identifier>*qAfh!t</identifier>\n</NameList>\n", stringWriter0.toString());
  }
}
