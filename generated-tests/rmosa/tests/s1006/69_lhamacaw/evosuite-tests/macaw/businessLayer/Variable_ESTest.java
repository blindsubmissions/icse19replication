/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 07:57:26 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.070234310587674
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1891));
      supportingDocument0.setIdentifier((-1891));
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      User user0 = new User(";z?", "(VtrqQkpGDN@rB-cH}u");
      user0.setPostCode("aTqoc`\"Hu+G$}x,");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      user0.setCity(")c`1^Eq{0Z");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList1);
      derivedVariable2.cloneAttributes(rawVariable0);
      derivedVariable2.hasSameDisplayName(rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList2);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "UNABLE_TO_GET_CHANGES_FOR_VARIABLE";
      rawVariable0.setName("UNABLE_TO_GET_CHANGES_FOR_VARIABLE");
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList0.toArray((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      Object object0 = new Object();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      User user0 = new User();
      assertEquals("", user0.getLastName());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.iterator();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add((OntologyTerm) null);
      rawVariable0.setOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(rawVariable0.isCoded());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.add((ValueLabel) null);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.questionNumber = "NN_EX`STENT_ONTOLOGY_TERM_ASSOCIATON";
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.addSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.191013317336941
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setCategory(" type=");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals(" type=", rawVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.338948689692007
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setLastName((String) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable1);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      Variable.detectChangesInAlternativeVariable(user1, rawVariable1, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("UNABLE_TO_GET_AVAILABILITY_STATE_IDENTIFIER");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear((String) null);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.1286665613687226
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertTrue(arrayList0.isEmpty());
      
      derivedVariable0.hasSameDisplayName(rawVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4963964637768603
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1891));
      rawVariable0.setForm("Tp1 _4IyUQ(&i=i{\u0002");
      supportingDocument0.setIdentifier((-1013));
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("2*x*{FEjNj2", "2*x*{FEjNj2");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Tp1 _4IyUQ(&i=i{\u0002", rawVariable0.getForm());
      
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm1.setIdentifier((-632));
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.191013317336941
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd(" type=");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals(" type=", derivedVariable0.getColumnEnd());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      User user0 = new User(" type=", " type=");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.2522392503365087
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertTrue(rawVariable0.isCoded());
      
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(755);
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.191013317336941
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("D`");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("D`", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_DUPLICATE";
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      int int0 = (-1013);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("2*x*{FEjNj2", "2*x*{FEjNj2");
      rawVariable0.setLabel((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(860);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      assertEquals("", user0.getLastName());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.191013317336941
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("UNABLE_TO_DELETE_ALIAS_FILE_PATH", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.191013317336941
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      System.setCurrentTimeMillis(1231L);
      derivedVariable0.setCleaningStatus(" type=");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals(" type=", derivedVariable0.getCleaningStatus());
      assertFalse(arrayList1.equals((Object)arrayList0));
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.4770521326784625
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1891));
      supportingDocument0.setIdentifier((-1013));
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("2*x*{FEjNj2", "2*x*{FEjNj2");
      user0.setPostCode("%UMN<$|%=#q~");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      User user1 = new User("2*x*{FEjNj2", "?72}ToHm");
      derivedVariable0.setColumnStart("O");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable0);
      derivedVariable1.getSourceVariables();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      derivedVariable1.removeSourceVariables(arrayList1);
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      System.setCurrentTimeMillis((-1013));
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      assertEquals("O", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.42243350410975
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setIdentifier((-1891));
      supportingDocument0.setIdentifier((-1013));
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.codeBookNumber = "d,Qo6.K*l`|64*Z";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("8", (String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      derivedVariable0.removeSourceVariables(arrayList1);
      rawVariable0.questionNumber = "p)o3U1j<v(+7?M?>_";
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addSourceVariables(arrayList1);
      derivedVariable1.hasSameDisplayName(rawVariable0);
      assertEquals("p)o3U1j<v(+7?M?>_", rawVariable0.getQuestionNumber());
      
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      ArrayList<Variable> arrayList2 = derivedVariable1.getSourceVariables();
      derivedVariable2.removeSourceVariables(arrayList2);
      derivedVariable2.addSourceVariables(arrayList2);
      assertEquals("Unknown", derivedVariable2.getAvailability());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.4500670154520785
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1891));
      supportingDocument0.setIdentifier((-1013));
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("2*x*{FEjNj2", "2*x*{FEjNj2");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.questionNumber = "MacawProperties";
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("MacawProperties", rawVariable0.getQuestionNumber());
      
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      derivedVariable1.removeSourceVariable(derivedVariable0);
      derivedVariable0.getSourceVariables();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnStart("UNABLE_TO_GET_ORIGINAL_ONTOLOGY_TERM");
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.4963964637768603
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1891));
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("2*x*{FEjNj2", "2*x*{FEjNj2");
      user0.setPostCode("%UMN<$|%=#q~");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      User user1 = new User(";W1<)2pHMq6ZNU(<|R?", "%UMN<$|%=#q~");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlias("?5#\t!AIelM(6+jI.");
      User user2 = new User("[+PWAA=`", "soC");
      Variable.detectFieldChanges(user2, rawVariable1, rawVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.hasSameDisplayName(rawVariable1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.hasSameDisplayName(derivedVariable0);
      ArrayList<Variable> arrayList1 = null;
      try {
        arrayList1 = new ArrayList<Variable>((-2021161078));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2021161078
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.1272886853327275
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.columnStart = null;
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      User user1 = new User("r}.tdZsL=Cq0 OdN", " type=");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, (Variable) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable2.setSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      arrayList0.stream();
      derivedVariable2.removeSourceVariables(arrayList0);
      derivedVariable2.addSourceVariables(arrayList0);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.removeSourceVariables(arrayList0);
      System.setCurrentTimeMillis(466L);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("{u@#K9iWaY[+)-&dF");
      rawVariable0.setCleaningStatus("");
      boolean boolean0 = true;
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("2*x*{FEjNj2", "2*x*{FEjNj2");
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.5245174917689686
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-736));
      supportingDocument1.setIdentifier((-736));
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.setIdentifier((-736));
      User user0 = new User("2*x*{FEjNj2", "2*x*{FEjNj2");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable1.removeSourceVariables(arrayList1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addSourceVariables(arrayList1);
      derivedVariable1.hasSameDisplayName(rawVariable0);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable2);
      derivedVariable1.getSourceVariables();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }
}
