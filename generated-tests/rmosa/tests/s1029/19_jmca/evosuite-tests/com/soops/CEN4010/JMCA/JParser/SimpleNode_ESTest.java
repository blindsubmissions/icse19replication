/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 19:04:20 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.EmptyStackException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.7031315809655685
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      String string0 = ";@.";
      String string1 = "PrimaryExpression";
      simpleNode0.setIdentifier("PrimaryExpression");
      simpleNode0.setIdentifier(";@.");
      String string2 = "}:\\Fe*(dp*l";
      simpleNode0.id = 1800;
      // Undeclared exception!
      try { 
        simpleNode0.toString("KH9%Ve_)<b_f");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1800
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("wwQ5o");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-2999));
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3153962874226617
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("ow2|]fY");
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(18);
      SimpleNode simpleNode2 = new SimpleNode(18);
      char[] charArray0 = new char[4];
      charArray0[0] = 'p';
      charArray0[1] = '0';
      charArray0[2] = 't';
      charArray0[3] = 'f';
      stringWriter0.write(charArray0);
      StringReader stringReader0 = new StringReader("0000");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 18, 77);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.flush();
      simpleNode0.dump(">o/uPJ0{Q\"J3M", stringWriter1);
      simpleNode2.dump("ZW4D^?4UXv", stringWriter0);
      assertEquals("p0tf", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6248603116943127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(91);
      SimpleNode simpleNode1 = new SimpleNode(91);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.setIdentifier(" : ");
      SimpleNode simpleNode2 = new SimpleNode(91);
      simpleNode1.setIdentifier(" : ");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(">=");
      simpleNode2.toString();
      simpleNode0.setIdentifier(" : ");
      simpleNode1.dump((String) null, stringWriter0);
      simpleNode1.id = 0;
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) " : ");
      simpleNode1.dump("SynchronizedStatement", stringWriter1);
      simpleNode2.dump("SynchronizedStatement", stringWriter0);
      simpleNode1.dump(">=", stringWriter0);
      simpleNode0.dump("*Jd\"3i2r\"Z-", stringWriter0);
      assertEquals("<SynchronizedStatement>\n  <identifier> : </identifier>\n</SynchronizedStatement>\n : <CompilationUnit>\n  <identifier> : </identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier> : </identifier>\n</CompilationUnit>\n<SynchronizedStatement>\n  <identifier> : </identifier>\n  <identifier>*ge</identifier>\n  <identifier> : </identifier>\n</SynchronizedStatement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5305096302300272
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 91;
      SimpleNode simpleNode0 = new SimpleNode(91);
      simpleNode0.setIdentifier(";@.");
      simpleNode0.setIdentifier(";@.");
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter(91);
      simpleNode0.setIdentifier("cA0");
      simpleNode0.dump("\"!=\"", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(91);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1361));
      simpleNode0.jjtGetParent();
      String string0 = "+QJIK! ^4+/^01<q`";
      StringReader stringReader0 = new StringReader("+QJIK! ^4+/^01<q`");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      // Undeclared exception!
      try { 
        jJTJavaParserState0.popNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("wwQ5o");
      try { 
        javaParser0.MemberValueArrayInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 533;
      SimpleNode simpleNode0 = new SimpleNode(533);
      simpleNode0.jjtGetNumChildren();
      String string0 = "\"package\"";
      StringWriter stringWriter0 = new StringWriter();
      String string1 = "\\f";
      // Undeclared exception!
      try { 
        stringWriter0.write("\f", 0, (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(717);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 717);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(718, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5481178804418445
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.setIdentifier("PrimaryExpression");
      simpleNode0.toString();
      simpleNode0.setIdentifier(";@.");
      SystemInUtil.addInputLine(";@.");
      simpleNode0.setIdentifier("}:Fe*(dp*l");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("PrimaryExpression");
      SimpleNode simpleNode1 = new SimpleNode(48);
      simpleNode0.dump("ForInit", stringWriter0);
      Writer writer0 = null;
      // Undeclared exception!
      try { 
        simpleNode0.dump(";@.", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(119);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild(simpleNode0, (-1264));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1264
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode((-2013282269));
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("  <identifier>");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)79;
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte)34;
      byteArray0[5] = (byte)112;
      byteArray0[6] = (byte)73;
      byteArray0[7] = (byte) (-86);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.dump(" ", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(91);
      Node[] nodeArray0 = new Node[6];
      Node node0 = simpleNode0.parent;
      nodeArray0[0] = null;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier(";@.");
      simpleNode0.setIdentifier(";@.");
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter(91);
      SimpleNode simpleNode1 = new SimpleNode(1863);
      simpleNode1.dump("cA0", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.dump("\"!=\"", stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(119);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      char[] charArray0 = new char[2];
      charArray0[0] = ')';
      charArray0[0] = ')';
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("*le", stringWriter0);
      simpleNode1.dump("*le", stringWriter0);
      assertEquals(1, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(709);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.dump("{", stringWriter0);
      String string0 = "=\\lnP%o2;nF";
      simpleNode0.dump("=lnP%o2;nF", stringWriter0);
      JavaParser javaParser0 = new JavaParser("  <identifier>");
      simpleNode0.parser = javaParser0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode1 = new SimpleNode((-2013282269));
      Node[] nodeArray0 = new Node[0];
      simpleNode1.children = nodeArray0;
      simpleNode1.jjtAddChild(simpleNode0, 709);
      // Undeclared exception!
      try { 
        simpleNode1.dump(" ", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2013282269
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("(d?&V~p;!{H7] ?y2,", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter(119);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("LocalVariableDeclaration", stringWriter1);
      simpleNode0.dump("LocalVariableDeclaration", stringWriter1);
      assertEquals("<CompilationUnit>\n  <identifier>*lshft</identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier>*lshft</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(91);
      simpleNode0.setIdentifier(";@.");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("");
      StringWriter stringWriter1 = new StringWriter(91);
      simpleNode0.dump("VariableDeclaratorId", stringWriter1);
      assertEquals("<SynchronizedStatement>\n  <identifier>;@.</identifier>\n</SynchronizedStatement>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(9);
      SimpleNode simpleNode1 = new SimpleNode(68);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.setIdentifier("=C/>");
      simpleNode1.setIdentifier("VariableDeclaratorId");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ClassOrInterfaceBodyDeclaration");
      simpleNode1.setIdentifier(">>");
      StringWriter stringWriter2 = new StringWriter();
      simpleNode1.setIdentifier("VariableDeclaratorId");
      simpleNode1.dump("VariableDeclaratorId", stringWriter2);
      simpleNode0.dump("VariableDeclaratorId", stringWriter1);
      simpleNode1.dump("Wxs", stringWriter0);
      assertEquals("<AllocationExpression>\n  <identifier>VariableDeclaratorId</identifier>\n  <identifier>*rshft</identifier>\n  <identifier>VariableDeclaratorId</identifier>\n</AllocationExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.dump("ClassOrInterfaceBodyDeclaration", stringWriter0);
      simpleNode0.dump("$efaultValue", stringWriter0);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter1 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(84);
      simpleNode1.setIdentifier("$efaultValue");
      StringWriter stringWriter2 = stringWriter0.append('0');
      simpleNode1.dump((String) null, stringWriter2);
      simpleNode0.dump("Q-EXfH`cRc8+*+8", stringWriter0);
      simpleNode0.dump(";", stringWriter1);
      simpleNode1.dump((String) null, stringWriter1);
      assertEquals("<EnumBody>\n</EnumBody>\n<ForInit>\n  <identifier>$efaultValue</identifier>\n</ForInit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      SimpleNode simpleNode1 = new SimpleNode(68);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.setIdentifier("=./>");
      simpleNode1.setIdentifier("VariableDeclaratorId");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ClassOrInterfaceBodyDeclaration");
      stringWriter1.append('j');
      StringWriter stringWriter2 = stringWriter1.append('j');
      simpleNode0.setIdentifier("=./>");
      StringWriter stringWriter3 = new StringWriter();
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter4 = stringWriter2.append('j');
      simpleNode0.dump("^e{", stringWriter4);
      simpleNode0.dump("ClassOrInterfaceBodyDeclaration", stringWriter2);
      simpleNode0.dump("Cla7sOrInterfacBodyXeclaration", stringWriter4);
      assertEquals("jjj<EnumBody>\n  <identifier>=./></identifier>\n  <identifier>=./></identifier>\n</EnumBody>\n<EnumBody>\n  <identifier>=./></identifier>\n  <identifier>=./></identifier>\n</EnumBody>\n<EnumBody>\n  <identifier>=./></identifier>\n  <identifier>=./></identifier>\n</EnumBody>\n", stringWriter4.toString());
      assertEquals("jjj<EnumBody>\n  <identifier>=./></identifier>\n  <identifier>=./></identifier>\n</EnumBody>\n<EnumBody>\n  <identifier>=./></identifier>\n  <identifier>=./></identifier>\n</EnumBody>\n<EnumBody>\n  <identifier>=./></identifier>\n  <identifier>=./></identifier>\n</EnumBody>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(91);
      SimpleNode simpleNode1 = new SimpleNode(91);
      simpleNode1.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump((String) null, stringWriter0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) ">");
      simpleNode1.dump((String) null, stringWriter1);
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<SynchronizedStatement>\n  <identifier>*gt</identifier>\n</SynchronizedStatement>\n><SynchronizedStatement>\n  <identifier>*gt</identifier>\n</SynchronizedStatement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(91);
      simpleNode0.setIdentifier(";@.");
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("\"!=\"", stringWriter0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) ";@.");
      stringWriter1.write((String) null);
      simpleNode0.dump((String) null, stringWriter1);
      simpleNode0.dump(";@.", stringWriter0);
      assertEquals("<SynchronizedStatement>\n  <identifier>;@.</identifier>\n</SynchronizedStatement>\n;@.null<SynchronizedStatement>\n  <identifier>;@.</identifier>\n</SynchronizedStatement>\n<SynchronizedStatement>\n  <identifier>;@.</identifier>\n</SynchronizedStatement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(91);
      SimpleNode simpleNode1 = new SimpleNode(91);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.setIdentifier(" : ");
      SimpleNode simpleNode2 = new SimpleNode(91);
      SimpleNode simpleNode3 = new SimpleNode(91);
      simpleNode1.setIdentifier("RUNSIGNEDSHIFT");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode2.setIdentifier("<=");
      simpleNode3.dump("i", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode2.dump("2F){{", stringWriter1);
      stringWriter1.append((CharSequence) "K@!");
      StringWriter stringWriter2 = new StringWriter();
      simpleNode2.dump((String) null, stringWriter2);
      StringWriter stringWriter3 = new StringWriter();
      simpleNode0.dump("xuDc':Rjnm|3uCsJ", stringWriter3);
      assertEquals("<SynchronizedStatement>\n  <identifier> : </identifier>\n</SynchronizedStatement>\n", stringWriter3.toString());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(91);
      simpleNode0.setIdentifier(";@.");
      simpleNode0.setIdentifier(";@.");
      simpleNode0.setIdentifier(";@.");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("&&");
      stringWriter0.append('V');
      simpleNode0.dump(";@.", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(91);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 91);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream0);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 1);
      simpleNode2.dump("&&", stringWriter1);
      simpleNode2.dump(" :OK", stringWriter1);
      simpleNode2.dump("&&", stringWriter1);
      assertEquals("", stringWriter1.toString());
  }
}
