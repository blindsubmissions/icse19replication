/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 19:02:22 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4898709102748832
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.,cuz<5mqrx");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("{.,cuz<5mqrx");
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6001882813317665
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`!;shcR0M");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6394577155127598
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`!;shcR0M");
      xPathLexer0.minus();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6763797097695825
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.,cuz<5mqrx");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.comma();
      assertEquals("{", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("{.,cuz<5mqrx");
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.769741742182527
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.star();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5725982024717419
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<:e*lM'/wCg#8G1IQ]");
      xPathLexer0.consume(1333);
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("<:e*lM'/wCg#8G1IQ]");
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6394577155127598
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`!;shcR0M");
      Token token0 = xPathLexer0.minus();
      assertEquals("`", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(";", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.7527205486376999
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2916772047933371
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Toke");
      xPathLexer0.at();
      Token token0 = xPathLexer0.literal();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9796931985960264
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.setXPath("eCwC$E5!");
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.7558973990277015
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">.ROV+{");
      XPathLexer xPathLexer1 = new XPathLexer(">.ROV+{");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("mOc`4,C0p");
      xPathLexer2.mod();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals(".ROV", token1.getTokenText());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6001882813317665
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`!;shcR0M");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("`!;shcR0M");
      Token token0 = xPathLexer1.number();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.slashes();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6001882813317665
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`!;shcR0M");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8058291815547127
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.dots();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`s!@sh,R0|");
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6394577155127598
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`!;shcR0M");
      xPathLexer0.equals();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.7541717757733974
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.div();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer(")");
      XPathLexer xPathLexer2 = new XPathLexer(")");
      xPathLexer2.setXPath("*:?zEW-}ClB<>@(n");
      xPathLexer2.pipe();
      xPathLexer2.and();
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer("*:?zEW-}ClB<>@(n");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.whitespace();
      xPathLexer2.slashes();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6518736173857553
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";P>>>W1#9bpq)");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals(";", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("P", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(9, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer(".%wb#");
      xPathLexer1.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(">", token3.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.7914141957568401
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`!;shcR0M");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(";shcR0M", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(";", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.mod();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      assertNotSame(token4, token2);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1511783737157935
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">.ROV+{");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("Hk]g'#)C{'UEZjX");
      xPathLexer1.and();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("O", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("V+{", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("V", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("+", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.974163536791651
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1BiyF=yxH:GdB");
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("=", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("yxH", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4_tUH`");
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.716438564551005
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`!;shcR0M");
      Token token0 = xPathLexer0.minus();
      assertEquals("`", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals(";", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("shcR0M", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bmR");
      Token token0 = xPathLexer0.number();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      Token token1 = xPathLexer1.div();
      assertNull(token1);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.8397790431467935
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      xPathLexer1.setXPath("\"gg1>?N)*8,+Me&?n{");
      Token token0 = xPathLexer1.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("\"", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("\"", token1.getTokenText());
      
      xPathLexer0.rightParen();
      xPathLexer1.or();
      Token token2 = xPathLexer0.at();
      assertEquals("g", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("1", token3.getTokenText());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(">", token4.getTokenText());
      assertEquals(9, token4.getTokenType());
      
      xPathLexer0.rightParen();
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(")", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4,8tmrVc7&JWEgrEM");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5348803856691888
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".|KX5V4<<,.,NDFV");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("|", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("K", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("X", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("V", token5.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("<", token7.getTokenText());
      assertEquals(7, token7.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">.ROV+{");
      XPathLexer xPathLexer1 = new XPathLexer("vE]");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5110507215462008
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".|KX5V4<<,.,NDFV");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(17, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("K", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("X", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("V4<<,.,NDFV", token5.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("86JgZ>rj*;yA");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("t8 r~Zt_Y}G");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("t", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("8", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.8177174986975012
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("eq0WsdlWv6Z@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("eq0WsdlWv6Z", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("@", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5476368908398512
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.,cuz<5mqrx");
      xPathLexer0.leftBracket();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.378264162837151
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".r<.5IV#$QYP,iF");
      xPathLexer0.identifier();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("I", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.dollar();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("#", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("$", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("Q", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("YP", token5.getTokenText());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals(",", token6.getTokenText());
      
      Token token7 = xPathLexer0.whitespace();
      assertEquals("", token7.getTokenText());
      assertEquals((-2), token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      assertEquals("F", token8.getTokenText());
      
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.8063352486673347
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<:e*lM'/wCg#8G1IQ]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("<:e*lM'/wCg#8G1IQ]");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.mod();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.3335307400674183
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2=T?^7;rdeK%cuwZBd<");
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("IY-");
      xPathLexer0.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("Z!y<");
      xPathLexer2.comma();
      xPathLexer2.endPosition();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%YN");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("<:5&");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S7/oY<yRvv8P|hB");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("S", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">.3OV+{");
      Token token0 = xPathLexer0.dots();
      assertEquals(14, token0.getTokenType());
      assertEquals(">.", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.9667949746977419
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".r<.5IV#$QYP,iF");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals("r", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("<", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(".5", token3.getTokenText());
      assertEquals(31, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("IV#$QYP,iF", token4.getTokenText());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.2187841411754585
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lQ*T0E");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.identifier();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("K", token0.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7n4e0P7Rt3H7LCDMN;");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("n4e0P7Rt3H7LCDMN", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.805829181554713
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.3609176530160756
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".r<.5IV#$QYP,iF");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("r", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("I", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("#", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("$", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals(3, token2.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("QYP", token6.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      assertEquals("", token7.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.8118922880174875
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.setXPath("*X[.99&ort61");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("*", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("X", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(".99", token3.getTokenText());
      assertEquals(31, token3.getTokenType());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("&ort61", token4.getTokenText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.9118869525103237
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1BiyF=yxH:GdB");
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.803100745182839
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      xPathLexer1.setXPath("\"gg1>?N)*8,+Me&?n{");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("\"", token0.getTokenText());
      
      Token token1 = xPathLexer1.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("\"", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("g", token2.getTokenText());
      
      xPathLexer0.rightParen();
      xPathLexer1.or();
      Token token3 = xPathLexer0.at();
      assertEquals("1", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(">", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("?N)*8,+Me&?n{", token5.getTokenText());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.8644669577897612
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(")");
      XPathLexer xPathLexer2 = new XPathLexer(")");
      xPathLexer2.setXPath("*:?zEW-}ClB<>@(n");
      Token token1 = xPathLexer2.pipe();
      assertEquals("*", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer2.and();
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer("*:?zEW-}ClB<>@(n");
      Token token2 = xPathLexer2.nextToken();
      assertEquals(18, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token3 = xPathLexer4.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer2.slashes();
      assertEquals("?", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer2.identifierOrOperatorName();
      assertEquals("zEW-", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.9118869525103237
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1BiyF=yxH:GdB");
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.2735062049413268
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lQ*T0E");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("lQ", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("T", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("E", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.8466584464538925
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z-vs2B1A?k5`q=");
      xPathLexer0.at();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("7n4e0P7Rt3H7LCDMN;");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("MLpv8bZQZr", token0.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N6N,#Nc&.0,RZ]k&d");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("N", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5562646041347639
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x/>~SLOo{.*#i;v");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("x", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      String string0 = token1.toString();
      assertEquals("[ (23) (/)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      xPathLexer0.and();
      xPathLexer0.div();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N6N,#Nc&.0,RZ]k&d");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("N", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals("6", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.604511521345347
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.literal();
      xPathLexer0.dollar();
      xPathLexer0.leftBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.consume();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      xPathLexer0.whitespace();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.6096379209300693
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.,cuz<5mqrx");
      xPathLexer0.leftBracket();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("pB#N+Z");
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      XPathLexer xPathLexer1 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      XPathLexer xPathLexer2 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      Token token0 = xPathLexer2.nextToken();
      assertEquals("", token0.getTokenText());
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.8802343788644886
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1BiyF=yxH:GdB");
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("2'$)1b");
      xPathLexer0.div();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("2", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0240896070651042
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".|KX5V4<<,.,NDFV");
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.028118699240396
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".r<.5IV#$QYP,iF");
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.setXPath(".r<.5IV#$QYP,iF");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1931096222913182
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("moc`c,Mp");
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("moc", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("`", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(32, token4.getTokenType());
      assertEquals(",", token4.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.2539809801627224
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("*X[.%9&@ort61");
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.star();
      xPathLexer0.consume();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      token0.toString();
      xPathLexer0.or();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.1625772303988497
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("moc`c,Mp");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.number();
      String string0 = token0.toString();
      assertEquals("[ (30) ()", string0);
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("moc`c,Mp", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.386162804623542
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Toke");
      xPathLexer0.at();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.literal();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.number();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.004799360180685
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1BiyF=yxH:GdB");
      Token token0 = xPathLexer0.number();
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals("B", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("iyF", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.028118699240396
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".r<.5IV#$QYP,iF");
      xPathLexer0.setXPath("'/[o(ktQR=R");
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0881395719481388
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".r<.5IV#$QYP,iF");
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.246281076853366
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lQ*T0E");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("l", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("Q", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(20, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("T", token3.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("E", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G~ZgW@3T-P(m+$-+#{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("G", token0.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_/");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.8956537157300785
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BQX\"a");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("BQX\"a");
      xPathLexer0.plus();
      xPathLexer0.getPreviousToken();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.and();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.4118692280827922
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".r<.5IV#$QYP,iF");
      xPathLexer0.leftBracket();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.8441138774034159
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S5teH");
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.whitespace();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("S", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("teH", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!L]5xlw{^K");
      Token token0 = xPathLexer0.minus();
      assertEquals("!", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("L", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":^%");
      Token token0 = xPathLexer0.dots();
      assertEquals(":", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("^%", token1.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.9976225126121985
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".r<.5IV#$QYP,iF");
      xPathLexer0.minus();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer0.identifier();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.9118869525103237
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1BiyF=yxH:GdB");
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".1", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("BiyF=yxH:GdB", token2.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5872355476059632
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.,cuz<5mqrx");
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("1`a5|G{!pUhv");
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.9114277364721686
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.dots();
      xPathLexer0.setXPath("y9rU^G@n'TKk6tZ");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0898788199496328
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("moc`c,Mp");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("moc", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      assertNotNull(token1);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("`c,Mp", token2.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N]F#<J}b%QR");
      XPathLexer xPathLexer1 = new XPathLexer("AG@/");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("AG", token0.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.28407226816522
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`!;shcR0M");
      xPathLexer0.minus();
      xPathLexer0.setXPath(") (");
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?W\"$A");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("W", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("\"", token2.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.9818905695430036
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      xPathLexer1.setXPath("\"gg1>?N)*8,+Me&?n{");
      Token token0 = xPathLexer1.pipe();
      assertEquals("\"", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("\"", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer1.or();
      Token token2 = xPathLexer0.at();
      assertEquals("g", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("1", token3.getTokenText());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(">", token4.getTokenText());
      assertEquals(9, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals("?", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("N", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.9818905695430036
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      xPathLexer0.identifier();
      xPathLexer1.setXPath("\"gg1>?N)*8,+Me&?n{");
      Token token0 = xPathLexer1.pipe();
      assertEquals("\"", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("\"", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer1.or();
      Token token2 = xPathLexer0.at();
      assertEquals("g", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("1", token3.getTokenText());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(">", token4.getTokenText());
      assertEquals(9, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals("?", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals("gg1", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_/");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jOB");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("jOB", token0.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.1714570013217578
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`!;shcR0M");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.070250381853813
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">.ROV+{");
      Token token0 = xPathLexer0.minus();
      assertEquals(">", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Hk]g'#)C{'UEZjX");
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.slashes();
      assertEquals("R", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("OV+{", token3.getTokenText());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.9667949746977419
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".r<.5IV#$QYP,iF");
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.192275021917539
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S*5teH");
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.plus();
      token0.toString();
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.nextToken();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-xepV1;i%x8`");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("(_7fO!K^");
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">.ROV+{");
      Token token0 = xPathLexer0.minus();
      String string0 = token0.toString();
      assertEquals("[ (6) (>)", string0);
      
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(".ROV", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.8414667562477092
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.dots();
      assertEquals("[", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2oYcQ6,)M+9SyHQ}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("2", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S5teH");
      Token token0 = xPathLexer0.number();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (30) ()", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("S5teH", token1.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.2514871039011732
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".r<.5IV#$QYP,iF");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("r", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(".", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.dollar();
      Token token2 = xPathLexer0.not();
      assertEquals("I", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.equals();
      assertEquals("#", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(26, token4.getTokenType());
      assertEquals("$", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("QYP", token5.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.whitespace();
      assertEquals("", token6.getTokenText());
      assertEquals((-2), token6.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.9500904900888917
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S5teH");
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Yb0J,8g{51F");
      xPathLexer0.consume();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.0582892056487476
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".r<.5IV#$QYP,iF");
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.dots();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.0582892056487476
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".r<.5IV#$QYP,iF");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("IV", token5.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("#$QYP,iF", token6.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.5646431849547278
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.,cuz<5mqrx");
      xPathLexer0.leftBracket();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.number();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z-vs2B1A?k5`q=");
      Token token0 = xPathLexer0.at();
      Token token1 = xPathLexer0.identifier();
      String string0 = token1.toString();
      assertEquals("[ (15) (-vs2B1A)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("Z", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.7697417421825269
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.whitespace();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.63185286484427
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.,cuz<5mqrx");
      xPathLexer0.leftBracket();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.8956537157300785
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BQX\"a");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("BQX\"a");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.plus();
      xPathLexer0.getPreviousToken();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fkhlJ}");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(".?q{9");
      assertEquals(".?q{9", xPathLexer1.getXPath());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.450121527662065
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("amR");
      Token token0 = xPathLexer0.number();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("amR");
      String string0 = token0.toString();
      assertEquals("[ (30) ()", string0);
      
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("amR", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertNull(token2);
      
      xPathLexer0.whitespace();
      xPathLexer1.div();
      Token token3 = xPathLexer1.whitespace();
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      assertEquals("[ ", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("(", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      String string0 = token1.toString();
      assertEquals("[ (11) (o)", string0);
      
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D[dY|1;X*dRFj>");
      XPathLexer xPathLexer1 = new XPathLexer("D[dY|1;X*dRFj>");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("D", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.mod();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("uc&U,4E");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("uc", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x/>~SLOo{.*#i;v");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("x", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("x/>~SLOo{.*#i;v");
      xPathLexer1.or();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("/", token1.getTokenText());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.1776494444701617
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">.ROV+{");
      Token token0 = xPathLexer0.minus();
      assertEquals(">", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Hk]g'#)C{'UEZjX");
      Token token2 = xPathLexer1.identifier();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("ROV+{", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("R", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(4, token5.getTokenType());
      assertEquals("]", token5.getTokenText());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      XPathLexer xPathLexer1 = new XPathLexer(".3T");
      Token token0 = xPathLexer0.comma();
      assertEquals("\"", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals(".3", token1.getTokenText());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">.ROV+{");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer(">.ROV+{");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer1.dots();
      xPathLexer2.setPreviousToken(token0);
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.number();
      xPathLexer2.and();
      Token token1 = xPathLexer3.div();
      assertNull(token1);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<:e*lM'/wCg#8G1IQ]");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*X[.%9&@ort61");
      xPathLexer0.setXPath("!=0D'/<7}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(22, token0.getTokenType());
      assertEquals("!=", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("!=0D'/<7}");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(7, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      String string0 = token2.toString();
      assertEquals("[ (20) (')", string0);
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer2.leftBracket();
      assertEquals(3, token5.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.133381930264545
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("div");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("div");
      Token token0 = xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("div");
      Token token0 = xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer2 = new XPathLexer("div");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.mod();
      Token token1 = xPathLexer1.div();
      assertNull(token1);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("::sp,dd60_R");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }
}
