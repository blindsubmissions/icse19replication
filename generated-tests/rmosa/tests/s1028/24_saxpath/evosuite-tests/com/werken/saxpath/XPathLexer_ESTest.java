/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 18:17:35 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6763797097695825
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k.Y%=4_zL5ddD");
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.equals();
      xPathLexer0.star();
      xPathLexer0.setXPath(".;Yb1'2ugb.8");
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8190898933941883
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bk7e9e1I&(TBo");
      XPathLexer xPathLexer1 = new XPathLexer("v");
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6539590508171721
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:Q/66vEo1Fy(7eu");
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6031766877975011
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k.Y%=4_zL5ddD");
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      xPathLexer0.setXPath(".;Yb1'2ugb.8");
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.7593604843720446
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      Token token2 = xPathLexer2.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals(")", token2.getTokenText());
      
      Token token3 = xPathLexer2.plus();
      assertEquals(" ", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.48970870385881915
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4898709102748832
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".Or0UNX6c1e8\"mF#?");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.48970870385881915
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6400054373224076
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".Or0UNX6c1e8\"mF#?");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("Or0UNX6c1e8", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.and();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.7478001789632737
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".Or0UNX6c1e8\"mF#?");
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.48970870385881915
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.consume(1050);
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.48970870385881915
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.48970870385881915
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.and();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("!", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(";0k\"b2Mbi1Kaid7_", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6763797097695825
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k.Y%=4_zL5ddD");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("k", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("k.Y%=4_zL5ddD");
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("k", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      xPathLexer1.and();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("Y%=4_zL5ddD", token3.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("64WG\t|N");
      Token token0 = xPathLexer0.not();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.8822117420464161
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("amLt9sk.");
      xPathLexer0.nextToken();
      xPathLexer0.not();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0047993601806853
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5{3>~*");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(".", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("5", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("{3>~*", token2.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.number();
      Token token3 = xPathLexer0.colon();
      assertEquals("{", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      assertEquals("3", token5.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q=\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("q", token0.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.6900392346671561
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:Q/66vEo1Fy(7eu");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("Q", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("/", token3.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      assertEquals("66", token4.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.8600118905439936
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("amLt9sk.");
      xPathLexer0.or();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.isIdentifierStartChar(']');
      xPathLexer0.equals();
      xPathLexer0.consume(100);
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.9038738447733412
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bk7e9e1I&(TBo");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("Bk", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("7", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.328704439371459
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U$2I{-ZJ");
      Token token0 = xPathLexer0.colon();
      assertEquals("U", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(26, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals("2I", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("{", token3.getTokenText());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("-ZJ", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.2546847285004725
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:Q/66vEo1Fy(7eu");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.consume(123);
      xPathLexer0.setXPath("orB6k.e[arPF5%_");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.3187194348877758
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:Q/66vEo1Fy(7eu");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.or();
      xPathLexer0.setXPath(".1xl~(T5c(2lQ");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9118869525103237
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5{3>~*");
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4131332298137498
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'.b@,>;z'|k*U");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("orB6k.e[arPF5%_");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k.Y%=4_zL5dD");
      XPathLexer xPathLexer1 = new XPathLexer("k.Y%=4_zL5dD");
      xPathLexer1.dots();
      xPathLexer1.number();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m8}79E~`qfi\"GXm");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.7256804684531775
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:Q/66vEo1Fy(7eu");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("Q", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("/", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.8197181261825682
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9");
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.3147395499121488
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<v7iSe1J)Rbs");
      xPathLexer0.colon();
      xPathLexer0.setXPath("<v7iSe1J)Rbs");
      xPathLexer0.leftParen();
      xPathLexer0.div();
      xPathLexer0.plus();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0635267062729559
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("^`Yr");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pv]_OW/5p?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("pv", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.equals();
      assertEquals("]", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0351078508438283
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5{3>~*");
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.8950700204811085
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bk7e9e1I&(TBo");
      xPathLexer0.setXPath("gW2x@$:&Nyx;'<A");
      xPathLexer0.identifier();
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1259559301485307
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bk7e9e1I&(TBo");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Bk", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("7", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.at();
      assertEquals("e", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("e1I&(TBo", token4.getTokenText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.7593604843720446
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.at();
      assertEquals(")", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      Token token2 = xPathLexer2.plus();
      assertEquals(")", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(")", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.137798073656937
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.167786111083723
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("64jMWG\t|N");
      Token token0 = xPathLexer0.not();
      xPathLexer0.slashes();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.dollar();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.7816434134058926
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".M3>~*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("#)i!07");
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.4814536624059491
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w3 >+o$(6LDh@lT8z$");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("w3", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("o", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("$(6LDh@lT8z$", token5.getTokenText());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.4166661716194153
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-I");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (11) (I)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.2159171782773763
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w3 >+o$(6LDh@lT8z$");
      Token token0 = xPathLexer0.minus();
      assertEquals("w", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(" ", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(">", token3.getTokenText());
      assertEquals(9, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("o", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0566963387516757
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("amLt9sk.");
      XPathLexer xPathLexer1 = new XPathLexer("amLt9sk.");
      xPathLexer0.nextToken();
      xPathLexer1.operatorName();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h*c}}SB");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k.Y%=4_zL5ddD");
      Token token0 = xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.slashes();
      assertEquals(".", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("k.Y%=4_zL5ddD");
      xPathLexer0.setPreviousToken(token0);
      assertEquals("k", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('_');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("amLt9sqk.");
      xPathLexer0.setXPath("amLt9sqk.");
      xPathLexer0.setXPath("S(2su>|");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("S", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("2", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("su>|", token2.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CX+$%=0aXty15");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("CX", token0.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.3588775702030624
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:Q/66vEo1Fy(7eu");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.consume(123);
      xPathLexer0.setXPath("orB6k.e[arPF5%_");
      xPathLexer0.setXPath("*/<3e4qO");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.154842927018119
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("amLt9sk.");
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("amLt9sk.");
      xPathLexer0.nextToken();
      xPathLexer1.operatorName();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1608975708034897
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'.b@,>;z'|k*U");
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.5357713583436152
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'.b@,>;z'|k*U");
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.setXPath("Xdfqoo3");
      xPathLexer0.or();
      xPathLexer0.at();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0635267062729559
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.consume(10);
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.1931883257219058
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("FZz,,/F^/U^ct;3kMKP");
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.not();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.1220296869561064
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.8700728437300755
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("It:2)UP)^5`+GyGd|8");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("It:2)UP)^5`+GyGd|8");
      Token token0 = xPathLexer1.colon();
      assertEquals("I", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("t", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      xPathLexer1.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("2", token3.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.2110201729046588
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k.Y%=4_zL5ddD");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("k", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("k.Y%=4_zL5ddD");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.colon();
      assertEquals("%", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("=", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      xPathLexer1.and();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(30, token4.getTokenType());
      assertEquals("4", token4.getTokenText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.1804368084386345
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w><4@N6`Fo 9");
      Token token0 = xPathLexer0.colon();
      assertEquals("w", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.consume();
      xPathLexer1.div();
      xPathLexer1.mod();
      Token token2 = xPathLexer0.number();
      assertEquals("4", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      xPathLexer1.div();
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertNotNull(token3);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U$2I{-ZJ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("U", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.3287044393714589
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U$2I{-ZJ");
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J'!");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("J", token0.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1848323168075705
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k.Y%=4_zL5ddD");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("k", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("k.Y%=4_zL5ddD");
      Token token1 = xPathLexer1.colon();
      assertEquals("k", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer1.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("Y", token3.getTokenText());
      
      Token token4 = xPathLexer1.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      xPathLexer1.and();
      Token token5 = xPathLexer1.nextToken();
      assertEquals(21, token5.getTokenType());
      assertEquals("=", token5.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("VLB|$");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("VLB", token0.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.2457029238126938
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("64jMWG\t|N");
      Token token0 = xPathLexer0.not();
      token0.toString();
      xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.comma();
      xPathLexer0.dollar();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.8130902680918648
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hPgQ%%L[;UJbv})#bN");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("h", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("PgQ", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.6539590508171721
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:Q/66vEo1Fy(7eu");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(":", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("Q", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0420648102947427
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hPgQ%%L[;UJbv})#bN");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("h", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("P", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("gQ", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.154842927018119
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("amLt9sk.");
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("amLt9sk.");
      xPathLexer0.nextToken();
      xPathLexer1.operatorName();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".M3>~*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("M3>~*", token1.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.2846740315767318
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:Q/66vEo1Fy(7eu");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.consume(123);
      xPathLexer0.setXPath("orB6k.e[arPF5%_");
      xPathLexer0.plus();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.260069026403385
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.nextToken();
      xPathLexer0.consume(10);
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.904153281805784
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ziV%ypv>I!3:*W2rj,,");
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.3635901811166986
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3G-X");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("64jMWG\t|N");
      Token token0 = xPathLexer0.not();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5l>5p");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("l>5p", token1.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c?6/ke.|Z@0i");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("?", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(12, token2.getTokenType());
      assertEquals("6/", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("c?6/ke.|Z@0i");
      xPathLexer1.div();
      Token token3 = xPathLexer0.slashes();
      assertEquals("k", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("e", token4.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.9439917075213051
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">#bS:>,A");
      xPathLexer0.leftBracket();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer(">#bS:>,A");
      Token token0 = xPathLexer0.comma();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.or();
      Token token1 = xPathLexer1.div();
      assertNull(token1);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0338129335028616
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.setXPath("%wN-~B");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.8441138774034159
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-I");
      Token token0 = xPathLexer0.rightBracket();
      String string0 = token0.toString();
      assertEquals("[ (4) (-)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (4) (-)");
      xPathLexer1.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("I", token1.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nD;on\"KT~o|/&|Mlu%");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.4935035384360862
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3G-X");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.consume(57);
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.4469763690162285
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.setXPath("do9>+:IPT;0");
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("do9", token2.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<4DY");
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.8013875364843214
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.notEquals();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.8594673962032043
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      Token token2 = xPathLexer2.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals(")", token2.getTokenText());
      
      xPathLexer0.whitespace();
      Token token3 = xPathLexer1.whitespace();
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertNotNull(token4);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.8621612435379509
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5l>5p");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.or();
      Token token3 = xPathLexer0.number();
      assertEquals("5", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.815870063446011
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5{3>~*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".5", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.colon();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("3", token2.getTokenText());
      
      Token token3 = xPathLexer0.relationalOperator();
      assertEquals(">", token3.getTokenText());
      assertEquals(9, token3.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.097158381209806
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'.b@,>;z'|k*U");
      Token token0 = xPathLexer0.star();
      assertEquals("'", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(".", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("b", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(32, token4.getTokenType());
      assertEquals(",", token4.getTokenText());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(">", token5.getTokenText());
      assertEquals(9, token5.getTokenType());
      
      xPathLexer0.or();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.0318574490245025
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bk7e9e1I&(TBo");
      xPathLexer0.setXPath("gW2x@$:&Nyx;'<A");
      xPathLexer0.consume(12);
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("'<", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("A", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ypO@l|*~&U$z");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("y", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("ypO@l|*~&U$z");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("ypO", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`}lHA_wcy]@'Nap");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`}lHA_wcy]@'Nap", token0.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-I");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (-)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.2380640795563576
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("moR+ZFMI_G=0bW3J");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1%M=M;,spm");
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (22) (1%)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("M", token1.getTokenText());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.8300541406729214
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:Q/66vEo1Fy(7eu");
      Token token0 = xPathLexer0.pipe();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("/", token3.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("66vEo1Fy", token4.getTokenText());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.328704439371459
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U$2I{-ZJ");
      Token token0 = xPathLexer0.colon();
      assertEquals("U", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("$", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals("2", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.and();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("I", token4.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QN%(6Z>qOC1t$p`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("QN", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.3187194348877758
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:Q/66vEo1Fy(7eu");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.setXPath(".1xl~(T5c(2lQ");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ea}ke`ruF/");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Ea", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.1862623146694193
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w3 >+o$(6LDh@lT8z$");
      Token token0 = xPathLexer0.minus();
      assertEquals("w", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("3", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals(" ", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(">", token3.getTokenText());
      assertEquals(9, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(5, token4.getTokenType());
      assertEquals("+", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u=/^OK&!9+aFeaU");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("=", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.114062477984153
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("64jMWG\t|N");
      Token token0 = xPathLexer0.not();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.dollar();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.3113640956129076
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("moR+ZFMI_G=0bW3J");
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.9439917075213051
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">#bS:>,A");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(">", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("S", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer(">#bS:>,A");
      Token token4 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@]jt");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.9643017045935489
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bk7e9e1I&(TBo");
      xPathLexer0.identifier();
      xPathLexer0.setXPath("gW2x@$:&Nyx;'<A");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("@$", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("Nyx", token3.getTokenText());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.99005943928918
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<4DY");
      XPathLexer xPathLexer1 = new XPathLexer("<4DY");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      
      xPathLexer1.operatorName();
      Token token1 = xPathLexer1.relationalOperator();
      assertEquals("<", token1.getTokenText());
      
      xPathLexer1.mod();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("DY", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.9779285622948823
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">#bS:>,A");
      xPathLexer0.leftBracket();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer(">#bS:>,A");
      Token token0 = xPathLexer0.star();
      xPathLexer0.rightBracket();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.or();
      Token token1 = xPathLexer1.div();
      assertNull(token1);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BH");
      Token token0 = xPathLexer0.at();
      assertEquals("B", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("H", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.33707207979511
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      xPathLexer0.consume(10);
      Token token0 = xPathLexer0.nextToken();
      assertEquals("1", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(19, token1.getTokenType());
      assertEquals("Ka", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("id7_", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.8482308386632507
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5{3>~*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".5", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("{3>~*", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("{", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("3", token4.getTokenText());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Li?Z][");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Li", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("?Z][", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("?", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.4166153973367768
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bk7e9e1I&(TBo");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("k7", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("e9e1I", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("&", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      assertEquals("TBo", token4.getTokenText());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.at();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.6539590508171722
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:Q/66vEo1Fy(7eu");
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u=/^OK&!9+aFeaU");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("u", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.9118869525103237
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5{3>~*");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.9566787452125876
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'.b@,>;z'|k*U");
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.setXPath("Xdfqoo3");
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.number();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<=DY");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(8, token1.getTokenType());
      assertEquals("<=", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U$2I{-ZJ");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("U", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("$", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.setXPath("::&-d)`}gr!&f~");
      xPathLexer0.and();
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(19, token2.getTokenType());
      assertEquals("::", token2.getTokenText());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!;0k\"b2Mbi1Kaid7_");
      Token token0 = new Token(29, "!;0k\"b2Mbi1Kaid7_", 4, 4);
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.401197381662154
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.comma();
      xPathLexer0.leftParen();
      xPathLexer0.whitespace();
      xPathLexer0.consume();
      xPathLexer0.setXPath("M^/`[  j2Z&ny");
      xPathLexer0.leftBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      xPathLexer0.identifier();
      xPathLexer0.setXPath("Ib@!=QPGcE4CW");
      xPathLexer0.dollar();
      xPathLexer0.setXPath("Ib@!=QPGcE4CW");
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.number();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".0wB");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("w", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("B", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken((Token) null);
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.mod();
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      Token token10 = xPathLexer0.whitespace();
      assertEquals((-2), token10.getTokenType());
      
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
  }
}
