/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 18:20:09 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "4!", "4!", (Object) null);
      FieldWriter fieldWriter1 = fieldWriter0.next;
      assertNull(fieldWriter1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-59));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2461, "ConstantValue", "VtyQ?7zR+Qq\"=o", (String) null, "ConstantValue");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-59));
      String string0 = "ConstantValue";
      classWriter0.visitField(1650, "}^I", "}^I", "}^I", "ConstantValue");
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 0, "ConstantValue", "VtyQ?7zR+Qq\"=o", "", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@5d242524
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 132, "$", "SrS!RgR", "$", "SrS!RgR");
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1551));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1551), "3yG%Ev}~?", "8WOTtTBiE`*{P]jEL", (String) null, (Object) null);
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6108643020548935
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(131072);
      classWriter0.addType("SrS!RgR");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 132, "SrS!RgR", "SrS!RgR", "SrS!RgR", "SrS!RgR");
      classWriter0.version = 131072;
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1551));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-238), "3yG%Ev}~?", "3yG%Ev}~?", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter");
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6546695645285008
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      Object object0 = new Object();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "wheel.asm.FieldWriter";
      stringArray0[1] = "ConstantValue";
      stringArray0[2] = "ConstantValue";
      classWriter0.visit((-1635), (-2763), "wheel.asm.FieldWriter", "", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "ConstantValue", "Synthetic", "", "");
      fieldWriter0.visitAnnotation("", false);
      ClassWriter classWriter1 = new ClassWriter(1);
      ByteVector byteVector0 = classWriter1.pool;
      ByteVector byteVector1 = byteVector0.putInt(1);
      fieldWriter0.put(byteVector1);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1551));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-58), "", "LineNumberTable", "SrS!RgR", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("LineNumberTable", false);
      ByteVector byteVector1 = byteVector0.putInt((-1551));
      byteVector0.putUTF8("LineNumberTable");
      String[] stringArray0 = new String[0];
      classWriter0.visit(11, (-58), "o[^LTP>BdO{e", "InnerClasses", "C_B_aQLx&\"yHkBT", stringArray0);
      byteVector0.putUTF8("C_B_aQLx&\"yHkBT");
      byteVector1.putLong(1);
      byteVector1.putInt(2);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1099);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1099, "2k:('fXe7k71W", "2k:('fXe7k71W", "2k:('fXe7k71W", "SrS!RgR");
      Attribute attribute0 = new Attribute("2k:('fXe7k71W");
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      FieldWriter fieldWriter2 = classWriter0.firstField;
      fieldWriter2.visitAnnotation(";*&/Uk\"F_/'4vK", true);
      fieldWriter2.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      ClassWriter classWriter1 = new ClassWriter(0);
      classWriter1.newClass("SrS!RgR");
      classWriter1.addType("SrS!RgR");
      classWriter1.addType("SrS!RgR");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2389), "kM=2cl;bZ34! .", "SrS!RgR", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putShort(285212682);
      ByteVector byteVector1 = byteVector0.putInt(0);
      fieldWriter0.put(byteVector1);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1099);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1099, "2k:('fXe7k71W", "2k:('fXe7k71W", "2k:('fXe7k71W", "SrS!RgR");
      Attribute attribute0 = new Attribute("2k:('fXe7k71W");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putUTF8("*$");
      byteVector1.putInt(131072);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1099);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1535), "", "*$", "", "");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classWriter0.lastMethod = null;
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteVector byteVector1 = byteVector0.putInt(191);
      ByteVector byteVector2 = byteVector1.putUTF8("IBBI*,nD4#i5P^");
      ByteVector byteVector3 = byteVector2.put12(2, (-14));
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector4 = new ByteVector();
      byteVector3.putShort(191);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector2);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1551));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-238), "3yG%Ev}~?", "3yG%Ev}~?", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter");
      Attribute attribute0 = new Attribute("3yG%Ev}~?");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1551));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-238), "3yG%Ev}~?", "3yG%Ev}~?", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter");
      ClassWriter classWriter1 = new ClassWriter((-1));
      FieldWriter fieldWriter1 = new FieldWriter(classWriter1, (-32768), "sHF'7CVW04(8f", "?.wpaA0k1V", "wheel.asm.FieldWriter", "sHF'7CVW04(8f");
      fieldWriter1.getSize();
      fieldWriter1.visitEnd();
      FieldWriter fieldWriter2 = classWriter0.firstField;
      fieldWriter2.visitAnnotation("wheel.asm.FieldWriter", true);
      fieldWriter0.visitAnnotation("wheel.asm.FieldWriter", true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "wheel.asm.FieldWriter";
      classWriter0.visit((-32768), (-1), "wheel.asm.FieldWriter", "E]", (String) null, stringArray0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector();
      ByteVector byteVector2 = byteVector1.putShort(1);
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector1);
      fieldWriter2.put(byteVector2);
      fieldWriter2.put(byteVector0);
      assertFalse(byteVector0.equals((Object)byteVector2));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1551));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1551), "", "0gw7", (String) null, "LineNumberTable");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt(13);
      ByteVector byteVector2 = classWriter0.pool;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "0gw7";
      classWriter0.visit(13, (-1551), "wheel.asm.ClassReader", (String) null, "LineNumberTable", stringArray0);
      byteVector0.putInt(2);
      classWriter0.visit((-1551), (-1551), "Xj+b`(NE6(_[eX&", "Xj+b`(NE6(_[eX&", "", (String[]) null);
      byteVector1.putUTF8("ggf#(8eH<?Q}$kuTK[");
      ByteVector byteVector3 = byteVector2.putLong(0L);
      byteVector3.putInt(1171);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }
}
