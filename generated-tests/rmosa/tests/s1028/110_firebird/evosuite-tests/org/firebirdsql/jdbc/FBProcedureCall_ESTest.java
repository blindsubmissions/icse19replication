/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 18:45:17 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.2868359830561607
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1496, "uoq");
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(13, "OUtL@P&-");
      assertEquals("OUtL@P&-", fBProcedureParam0.getParamValue());
      
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(929, "int");
      assertEquals("int", fBProcedureParam1.getParamValue());
      
      fBProcedureCall0.addParam(1496, "OUT");
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(1496, "E$^ 3yltT");
      assertEquals(1496, fBProcedureParam2.getPosition());
      assertEquals("E$^ 3yltT", fBProcedureParam2.getParamValue());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.2868359830561607
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1496, "uoq");
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(13, "OUtL@P&-");
      assertEquals("OUtL@P&-", fBProcedureParam0.getParamValue());
      
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(929, "int");
      assertEquals("int", fBProcedureParam1.getParamValue());
      
      fBProcedureCall0.addParam(1496, "OUT");
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(929, "^?");
      assertEquals(929, fBProcedureParam2.getPosition());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.7549967581308246
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(16);
      fBProcedureCall0.addParam(1496, "uoq");
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(13, "OUtL@P&-");
      assertEquals("OUtL@P&-", fBProcedureParam0.getParamValue());
      
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(929, "int");
      assertEquals("int", fBProcedureParam1.getParamValue());
      
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(1496, "OUT");
      assertEquals(1496, fBProcedureParam2.getPosition());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5359610497090694
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1496, "uoq");
      fBProcedureCall0.setName("uoq");
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(13, "OUtL@P&-");
      assertEquals("OUtL@P&-", fBProcedureParam0.getParamValue());
      
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(929, "int");
      assertEquals("int", fBProcedureParam1.getParamValue());
      
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(1496, "OUT");
      assertEquals(1496, fBProcedureParam2.getPosition());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1240357221909014
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1496, "uoq");
      fBProcedureCall0.addParam(13, "OUtL@P&-");
      fBProcedureCall0.addParam(929, "int");
      try { 
        fBProcedureCall0.registerOutParam(195, 195);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.hashCode();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5359610497090694
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1496, "uoq");
      fBProcedureCall0.addParam(13, "OUtL@P&-");
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(OUtL@P&-, uoq)", string0);
      
      fBProcedureCall0.addParam(929, "int");
      String string1 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(OUtL@P&-, int, uoq)", string1);
      
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1496, "OUT");
      assertEquals(1496, fBProcedureParam0.getPosition());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5359610497090694
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null", string0);
      
      fBProcedureCall0.addParam(1496, "uoq");
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(13, "OUtL@P&-");
      assertEquals("OUtL@P&-", fBProcedureParam0.getParamValue());
      
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(929, "int");
      assertEquals("int", fBProcedureParam1.getParamValue());
      
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(1496, "OUT");
      assertEquals(1496, fBProcedureParam2.getPosition());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5359610497090694
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1496, "uoq");
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(13, "OUtL@P&-");
      assertEquals("OUtL@P&-", fBProcedureParam0.getParamValue());
      
      fBProcedureCall0.addParam(187, "uoq");
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
      
      fBProcedureCall0.addParam(929, "int");
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(1496, "OUT");
      assertNotSame(fBProcedureCall0, object0);
      assertEquals(1496, fBProcedureParam1.getPosition());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = fBProcedureCall0.getName();
      assertNull(string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.7549967581308246
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1496, "uoq");
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(1496);
      assertEquals(1496, int0);
      
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(13, "OUtL@P&-");
      assertEquals("OUtL@P&-", fBProcedureParam0.getParamValue());
      
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(929, "int");
      assertEquals("int", fBProcedureParam1.getParamValue());
      
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(1496, "OUT");
      assertEquals(1496, fBProcedureParam2.getPosition());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5359610497090694
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 1496;
      fBProcedureCall0.addParam(1496, "uoq");
      fBProcedureCall0.addParam(13, "OUtL@P&-");
      fBProcedureCall0.addParam(929, "int");
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition((-39), false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5359610497090694
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1496, "uoq");
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(13, "OUtL@P&-");
      assertEquals("OUtL@P&-", fBProcedureParam0.getParamValue());
      
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(929, "int");
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      assertEquals(929, fBProcedureParam1.getPosition());
      assertEquals("int", fBProcedureParam1.getParamValue());
      
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(1496, "OUT");
      assertEquals(1496, fBProcedureParam2.getPosition());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      List<FBProcedureParam> list0 = fBProcedureCall0.getOutputParams();
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = new Object();
      boolean boolean0 = fBProcedureCall0.equals(object0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.5359610497090694
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1496, "uoq");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(13, "OUtL@P&-");
      assertEquals("OUtL@P&-", fBProcedureParam1.getParamValue());
      
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(929, "int");
      assertEquals("int", fBProcedureParam2.getParamValue());
      
      FBProcedureParam fBProcedureParam3 = fBProcedureCall0.addParam(1496, "OUT");
      assertEquals(1496, fBProcedureParam3.getPosition());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(38);
      try { 
        fBProcedureParam0.setValue(fBProcedureCall0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setIndex(236);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(1957, true);
      assertEquals(1957, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam((-3467), "hy0");
      // Undeclared exception!
      try { 
        fBProcedureCall0.addOutputParam(fBProcedureParam0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3467
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0335620542068176
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
      
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(38, "iNt9_1ZxKn'|9r,V");
      assertEquals(38, fBProcedureParam1.getPosition());
      assertEquals("iNt9_1ZxKn'|9r,V", fBProcedureParam1.getParamValue());
      assertNotSame(fBProcedureCall0, object0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      boolean boolean0 = fBProcedureCall1.equals(fBProcedureCall0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals(0, fBProcedureParam0.getPosition());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1240357221909014
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(1349, "72f");
      fBProcedureParam0.setIndex(1349);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.addParam(1496, "uoq");
      fBProcedureCall0.addParam(13, "OUtL@P&-");
      fBProcedureCall0.addParam(929, "int");
      fBProcedureCall0.addParam(1496, "OUT");
      fBProcedureCall0.registerOutParam((-1), 929);
      assertTrue(FBProcedureCall.OLD_CALLABLE_STATEMENT_COMPATIBILITY);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("EXECUTE PROCEDURE");
      fBProcedureCall0.hashCode();
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1496, "OUt L@P&-");
      assertEquals("L@P&-", fBProcedureParam0.getParamValue());
      
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
      
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(1049, "\"%37^U{r");
      assertEquals(1049, fBProcedureParam1.getPosition());
      assertNotSame(fBProcedureCall0, object0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(1568, true);
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(1568, "org.firebirdsql.jdbc.FBSQLException");
      fBProcedureParam0.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(887, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall0.setName("d#");
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
      assertFalse(fBProcedureCall1.equals((Object)fBProcedureCall0));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.6837389058487535
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = "PvU\"-D:,z?9<O";
      fBProcedureCall0.addParam(0, "PvU\"-D:,z?9<O");
      fBProcedureCall0.getSQL(true);
      int int0 = (-2173);
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-2173), "PvU\"-D:,z?9<O");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2173
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.3402473172527138
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getSQL(true);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(528, "SELECT * FROM null");
      fBProcedureParam0.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(528, "{a^pGu?%*+vZiZg");
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      fBProcedureCall0.getSQL(false);
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      int int0 = (-1530);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam((-1530));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1531
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("IN");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      boolean boolean0 = fBProcedureCall1.equals(fBProcedureCall0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2291, "Ip-p&zN{S\"W0`!w?");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(2291, true);
      assertEquals(2291, int0);
      
      fBProcedureParam0.setIndex(2291);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(2291, " ");
      assertEquals(2291, fBProcedureParam1.getPosition());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4088131112702587
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(4353, "iNt9_1ZxKn'|9r,V");
      fBProcedureParam0.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int0 = 0;
      fBProcedureCall0.addParam(0, "OUtL@P&-");
      int int1 = (-1);
      fBProcedureCall0.registerOutParam((-1), 4353);
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.addParam(4353, "OUtL@P&-");
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2291, "Ip-p&zN{S\"W0`!w?");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2291);
      assertEquals(2291, fBProcedureParam0.getPosition());
      
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(2291);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 528;
      fBProcedureCall0.getSQL(true);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(528, "SELECT * FROM null");
      fBProcedureParam0.clone();
      fBProcedureParam0.setType(528);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(528, "{a^pGu?%*+vZiZg");
      fBProcedureParam1.setValue(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-1), "sJ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(37, "iNt9_1ZxKn'|9r,V");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int0 = 0;
      fBProcedureCall0.addParam(0, "lbJDw;?e2 iC]=D");
      boolean boolean0 = false;
      try { 
        fBProcedureCall0.getSQL(false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Value of parameter -1 not set and it was not registered as output parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(16, "Ip-p&zN{S0`!w?");
      Object object0 = new Object();
      fBProcedureParam0.setValue(object0);
      fBProcedureCall0.registerOutParam((-1), 4402);
      assertTrue(FBProcedureCall.OLD_CALLABLE_STATEMENT_COMPATIBILITY);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(13, "OUt L@P&-");
      assertEquals("L@P&-", fBProcedureParam0.getParamValue());
      assertEquals(13, fBProcedureParam0.getPosition());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1496, "uoq");
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1496, "in t");
      assertEquals("t", fBProcedureParam0.getParamValue());
      assertEquals(1496, fBProcedureParam0.getPosition());
  }
}
