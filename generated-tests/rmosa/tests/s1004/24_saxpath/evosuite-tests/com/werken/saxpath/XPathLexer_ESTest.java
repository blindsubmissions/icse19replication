/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 06:54:50 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer(":;c;e>");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(18, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.48970870385881915
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.doubleColon();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5281189455022457
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      XPathLexer xPathLexer1 = new XPathLexer(".:^)2@Yp3 WlaCs.Q");
      xPathLexer1.rightParen();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.literal();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer(":;c;e>");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.7642173870858603
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.or();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      xPathLexer1.setXPath("com.werken.saxpath.Token");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("com.werken.saxpath.Token", token1.getTokenText());
      
      xPathLexer1.or();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      xPathLexer1.nextToken();
      xPathLexer1.operatorName();
      xPathLexer1.nextToken();
      xPathLexer1.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6497265626321663
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer1.or();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6105337616386313
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.identifier();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      xPathLexer1.nextToken();
      xPathLexer1.or();
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.notEquals();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4898709102748832
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      XPathLexer xPathLexer1 = new XPathLexer(".:^)2@Yp3 WlaCs.Q");
      xPathLexer0.at();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.48970870385881915
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" !@r qDc*");
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      xPathLexer1.consume((-184));
      // Undeclared exception!
      try { 
        xPathLexer1.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      xPathLexer1.nextToken();
      xPathLexer1.or();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5281189455022457
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      XPathLexer xPathLexer1 = new XPathLexer(".:^)2@Yp3 WlaCs.Q");
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer1.or();
      Token token1 = xPathLexer1.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer1.or();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer(":;c;e>");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer(":;c;e>");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer1.or();
      Token token1 = xPathLexer1.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      xPathLexer1.pipe();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      xPathLexer1.leftBracket();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.48970870385881915
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.star();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8089780183613584
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mi gl");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3140193958559885
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".R\b1b@~dhqly");
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6400054373224076
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer(".:^)2@Yp3 WlaCs.Q");
      xPathLexer1.consume(97);
      xPathLexer1.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.5281189455022457
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      xPathLexer0.and();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("?F1y*+n3d", token2.getTokenText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      xPathLexer1.minus();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.48970870385881915
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.plus();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6497265626321663
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer1.or();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.6623480762082726
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kT!?%pvRup.C!j\"~");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.div();
      xPathLexer0.div();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.6497265626321663
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      xPathLexer1.identifier();
      xPathLexer1.or();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.6623480762082726
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kT!?%pvRup.C!j\"~");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("kT!?%pvRup.C!j\"~");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.div();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3834970895583538
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jr<>H}YufQ]6L&h0r");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.number();
      token0.toString();
      xPathLexer0.setXPath("jr<>H}YufQ]6L&h0r");
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.8587339061696538
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YY]>cp1@z :Ia");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("YY", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      assertEquals("cp1", token3.getTokenText());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.slashes();
      assertEquals("@", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("z ", token5.getTokenText());
      
      xPathLexer0.getXPath();
      int int0 = xPathLexer0.endPosition();
      assertEquals(13, int0);
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(18, token6.getTokenType());
      assertEquals(":", token6.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sNM|iQ-ggA@0g");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("sNM", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.8846145210320129
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*QOBnz=p~Mb");
      Token token0 = xPathLexer0.equals();
      assertEquals("*", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("QO", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Bnz", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("p~Mb", token4.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1624325761145877
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kT!?%pvRup.C!j\"~");
      xPathLexer0.identifier();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("kT!?%pvRup.C!j\"~");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.div();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oq");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1792054194870234
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kT!?%pvRup.C!j\"~");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("pXh(W");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("oq");
      xPathLexer1.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.comma();
      xPathLexer1.mod();
      xPathLexer1.or();
      xPathLexer0.or();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0928220096800365
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y9.,V'CN NI:]V");
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.setXPath("A\"#2'(jW:7");
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.3976467561334565
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      XPathLexer xPathLexer1 = new XPathLexer("N\"\"-#R7tv#~!&+mYglH");
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer1.identifier();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dollar();
      xPathLexer1.identifierOrOperatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.7478001789632737
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      XPathLexer xPathLexer1 = new XPathLexer(".:^)2@Yp3 WlaCs.Q");
      xPathLexer1.nextToken();
      xPathLexer0.and();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.3976467561334565
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      XPathLexer xPathLexer1 = new XPathLexer("N\"\"-#R7tv#~!&+mYglH");
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dollar();
      xPathLexer1.identifierOrOperatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.8078856237959416
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hvy");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ao4YeOde@_");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("ao4YeOde", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.28363667063826
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*QOBnz=p~Mb");
      xPathLexer0.slashes();
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7:3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("7", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9l[&9YA{tP}");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("09/+c6nCZ}Pwr%hD");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("09", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oq");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("oq", token0.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.5658843209624895
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      XPathLexer xPathLexer1 = new XPathLexer(".:^)2@Yp3 WlaCs.Q");
      Token token0 = xPathLexer1.notEquals();
      assertEquals(".:", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("^)2@Yp3 WlaCs.Q", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer1.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b*SGpAS>?%a[jTMC");
      XPathLexer xPathLexer1 = new XPathLexer("8P|@3f3CrlRP1201");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("P|@3f3CrlRP1201", token1.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=v");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5241058574184343
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b*SGpAS>?%a[jTMC");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("S", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("b*SGpAS>?%a[jTMC");
      xPathLexer1.setPreviousToken(token4);
      assertEquals("G", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals("", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      xPathLexer1.or();
      Token token6 = xPathLexer1.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("b", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0307949585184781
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jr<>H}YufQ]6L&h0r");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (19) (jr)", string0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("H", token3.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3Gzyx");
      Token token0 = xPathLexer0.number();
      assertEquals("3", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5479643940785097
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b*SGpAS>?%a[jTMC");
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.minus();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("b*SGpAS>?%a[jTMC");
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.plus();
      xPathLexer0.number();
      xPathLexer1.or();
      xPathLexer1.equals();
      xPathLexer1.nextToken();
      Token token1 = xPathLexer1.or();
      assertNull(token1);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.8936219781337106
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" !@r qDc*");
      XPathLexer xPathLexer1 = new XPathLexer(" !@r qDc*");
      Token token0 = xPathLexer1.literal();
      assertEquals(27, token0.getTokenType());
      assertEquals("!@r", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("qDc", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.4450776366889548
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f/zW0c*m`!+6A(y^d2i");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("f/", token0.getTokenText());
      
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("0c", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("*", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("m", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("!", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      token4.toString();
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      assertEquals("+", token6.getTokenText());
      
      String string0 = token4.toString();
      assertEquals("[ (-2) ()", string0);
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertNull(token7);
      
      Token token8 = xPathLexer0.whitespace();
      assertEquals("", token8.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.8104093922397677
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.3326722080487972
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jr<>H}YufQ]6L&h0r");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.7478001789632737
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals(".?", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("F", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("1", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("y*+n3d", token4.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("[ ", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.9055802027064598
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hvy");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("h", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("vy", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3361641526041206
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.and();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("F1", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("y", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(20, token3.getTokenType());
      assertEquals("*", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("+", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`JH");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`JH", token0.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tz_k2Wi");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("T", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("z_k2Wi", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.9630491186975786
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      xPathLexer0.doubleColon();
      xPathLexer0.doubleColon();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer(".2KxW&+");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.nextToken();
      xPathLexer1.number();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.8589267109059476
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" !@r qDc*");
      XPathLexer xPathLexer1 = new XPathLexer(" !@r qDc*");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(16, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      assertNotNull(token2);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M!6XJWy:R6]tKi<Rbj)");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("M", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BIHd4FFFnoxy");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("B", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("IHd4FFFnoxy", token1.getTokenText());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.9242190485476333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$lDk.1RZ=~_W");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("$", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("lD", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("k", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(".1", token3.getTokenText());
      assertEquals(31, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("RZ=~_W", token5.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.3121075471706238
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(".?", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.equals();
      assertEquals("F", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("1", token3.getTokenText());
      
      xPathLexer0.setXPath(")");
      Token token4 = xPathLexer0.nextToken();
      assertEquals(2, token4.getTokenType());
      assertEquals(")", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lWixuaA:m]rV%i");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("l", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("WixuaA", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.2592008437276156
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kT!?%pvRup.C!j\"~");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("pXh(W");
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("oq");
      xPathLexer1.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.comma();
      xPathLexer1.mod();
      xPathLexer1.or();
      xPathLexer0.or();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.1047789705037396
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".R\b1b@~dhqly");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("R\b1b", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("@", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.4484474198558361
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$lDk.1RZ=~_W");
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.setXPath("$lDk.1RZ=~_W");
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.8603977537425277
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8quU|tV");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".8", token0.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("quU|tV", token1.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.9278968847823721
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" !@r qDc*");
      XPathLexer xPathLexer1 = new XPathLexer(" !@r qDc*");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer1.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("r qDc*", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{NjP'C(b");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{NjP'C(b", token0.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gj-qk2ZjV%9FeYM");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("gj-qk2ZjV%9FeYM");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.3836612104126347
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(".?", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("+", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("n3d", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.8078856237959416
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wd");
      XPathLexer xPathLexer1 = new XPathLexer("wd");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer(".4t");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".4", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("t", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer2.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.4085582894152082
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jr<>H}YufQ]6L&h0r");
      xPathLexer0.consume(9);
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")Mv.%2B(]");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/ylZo2=*6p]3nSI%s");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("/", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.8177174986975012
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E4wABkf^p$$");
      Token token0 = xPathLexer0.star();
      assertEquals("E", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.7619471569286802
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer(".4t");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(".4", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer2.leftBracket();
      assertEquals(3, token1.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.8684506967368968
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("c.", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("?F", token1.getTokenText());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer(".2KxW&+");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(31, token2.getTokenType());
      
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("KxW&+", token4.getTokenText());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.7619471569286802
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8quU|tV");
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer(":;c;e>");
      xPathLexer1.rightBracket();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T");
      XPathLexer xPathLexer1 = new XPathLexer("O");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("O", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("T", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.8078856237959416
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wd");
      XPathLexer xPathLexer1 = new XPathLexer("wd");
      Token token0 = xPathLexer1.not();
      assertEquals("w", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("d", token1.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.8603977537425277
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8quU|taV");
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.3674368482755466
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ao4YeOde@_");
      xPathLexer0.colon();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(17, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("D", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.3733623059714435
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Jw");
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.star();
      xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token0);
      token0.toString();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" !@r qDc*");
      XPathLexer xPathLexer1 = new XPathLexer(" !@r qDc*");
      xPathLexer1.setXPath("#L_{0?%2ZU`6oX(.`oA");
      xPathLexer1.nextToken();
      Token token0 = new Token(256, "", 256, 256);
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q}vT!63^,");
      XPathLexer xPathLexer1 = new XPathLexer("Q}vT!63^,");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Q", token0.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.8087637505262861
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y9.,V'CN NI:]V");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("9.", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("V", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals(",", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jr<>H}YufQ]6L&h0r");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("jr", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.1067246304867622
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kT!?%pvRup.C!j\"~");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("kT", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.setXPath("kT!?%pvRup.C!j\"~");
      Token token2 = xPathLexer0.nextToken();
      Token token3 = xPathLexer0.at();
      assertEquals("k", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.div();
      xPathLexer0.div();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("T!?%pvRup.C!j\"~", token4.getTokenText());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C=ntt}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("C", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E4wABkf^p$$");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("E4wABkf", token0.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-/N");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("-/", token1.getTokenText());
      assertEquals(12, token1.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.3633054531072313
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$lDk.1RZ=~_W");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("$", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("lD", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.equals();
      assertEquals("k", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(31, token3.getTokenType());
      assertEquals(".1", token3.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("$lDk.1RZ=~_W");
      xPathLexer0.number();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("$", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals("lDk.1RZ", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.8924853529456784
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8quU|tV");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".8", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("q", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("uU|tV", token2.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.2292244532082992
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("aan\u0006Rj3lgd");
      Token token0 = xPathLexer0.rightBracket();
      String string0 = token0.toString();
      assertEquals("[ (4) (a)", string0);
      
      xPathLexer0.or();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer1.whitespace();
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.6689386002909566
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y9.,V'CN NI:]V");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("Y9", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(",", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("V'CN NI:]V", token3.getTokenText());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.726557501493486
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":>J\"5V&2L");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(":>J\"5V&2L");
      xPathLexer1.doubleColon();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.2700483041794293
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ao4YeOde@_");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.5241058574184343
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b*SGpAS>?%a[jTMC");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("S", token3.getTokenText());
      
      Token token4 = xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("b*SGpAS>?%a[jTMC");
      xPathLexer1.setPreviousToken(token4);
      assertEquals("G", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer1.or();
      Token token6 = xPathLexer1.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("*", token6.getTokenText());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.7706499454626512
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("c.", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer(".2KxW&+");
      Token token2 = xPathLexer1.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("2", token3.getTokenText());
      
      Token token4 = xPathLexer1.number();
      assertEquals(30, token4.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.3395617423468766
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$lDk.1RZ=~_W");
      Token token0 = xPathLexer0.pipe();
      assertEquals("$", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.equals();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(22, token1.getTokenType());
      assertEquals("lD", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.number();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("RZ", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(21, token5.getTokenType());
      assertEquals("=", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.9639515635108055
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jr<>H}YufQ]6L&h0r");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (19) (jr)", string0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("H", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.3180851841699088
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("DV?/4cm%!");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      Token token2 = xPathLexer1.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer1.isIdentifierStartChar('2');
      xPathLexer1.dots();
      xPathLexer1.number();
      xPathLexer1.setXPath("{0LnBI-2u=a9h[B");
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer1.operatorName();
      xPathLexer1.relationalOperator();
      xPathLexer1.dots();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('/');
      assertFalse(boolean0);
      
      xPathLexer0.dots();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(30, token4.getTokenType());
      assertEquals("0", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("/", token5.getTokenText());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".wwRO.*{=5:D\"N");
      XPathLexer xPathLexer1 = new XPathLexer("-2lp");
      xPathLexer1.nextToken();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.9278968847823722
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" !@r qDc*");
      XPathLexer xPathLexer1 = new XPathLexer(" !@r qDc*");
      Token token0 = xPathLexer1.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals(" !", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("@", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("r", token2.getTokenText());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.332769292653438
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("[ (");
      xPathLexer0.div();
      xPathLexer0.div();
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("UDKaW");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("UDKaW", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".R\b1b@~dhqly");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setPreviousToken(token0);
      assertEquals(3, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(".R\b1b@~dhqly");
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("R\b1b", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8i]oG3K?N");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("i]oG3K?N", token1.getTokenText());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.2670926311502755
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$lDk.1RZ=~_W");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("$", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("lD", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.equals();
      assertEquals("k", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(31, token3.getTokenType());
      assertEquals(".1", token3.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("Z=~_W", token5.getTokenText());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6KUuzG.TkgY~/p");
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setPreviousToken(token0);
      assertEquals(21, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("6KUuzG.TkgY~/p");
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("KUuzG.TkgY", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3{u'Pf:uG4nbBYA9");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.9318617213951985
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("c.", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer(".2KxW&+");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(31, token2.getTokenType());
      assertEquals(".2", token2.getTokenText());
      
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer1.dots();
      assertEquals("K", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.div();
      xPathLexer1.mod();
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("..w[L!0Ks&=");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("\"x<mtPXyWk}r>=Lf{P");
      xPathLexer0.star();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("x<", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("mtPXyWk", token1.getTokenText());
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals("}", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("r", token3.getTokenText());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token4 = xPathLexer0.relationalOperator();
      assertEquals(">=", token4.getTokenText());
      assertEquals(10, token4.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"x<mtPXyWk}r>=Lf{P");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("\"x", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.dollar();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("mt", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.dollar();
      String string0 = token2.toString();
      assertEquals("[ (26) (})", string0);
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(10, token3.getTokenType());
      assertEquals(">=", token3.getTokenText());
      
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("f", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.?F1y*+n3d");
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("!=~C[#(Jl}*~;9");
      xPathLexer1.operatorName();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("::;cHe>");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(19, token1.getTokenType());
      assertEquals("::", token1.getTokenText());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".3U|E tV");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.811706680724325
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".58quU|tV");
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.literal();
      xPathLexer0.div();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }
}
