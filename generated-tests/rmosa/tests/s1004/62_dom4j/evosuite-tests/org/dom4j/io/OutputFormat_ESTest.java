/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 06:59:57 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9998704205025659
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlhTFC8", false, "");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-xhtmlhTFC8";
      outputFormat0.setNewLineAfterDeclaration(false);
      stringArray0[1] = "q[>";
      stringArray0[2] = "";
      outputFormat0.setTrimText(true);
      outputFormat0.setIndent(false);
      stringArray0[3] = "#>'$N";
      stringArray0[4] = "-xhtmlhTFC8";
      outputFormat0.parseOptions(stringArray0, 862);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 34);
      int int0 = outputFormat0.parseOptions(stringArray0, 34);
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertEquals(34, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7201248812718097
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-xhtmlhTFC8";
      stringArray0[2] = "-xhtmlZ%/mlniCG8Dy";
      stringArray0[3] = "UTF-8";
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlZ%/mlniCG8Dy", false, "-omitEncoding");
      outputFormat0.setSuppressDeclaration(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.908908734898781
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-xhtmlhTFC8";
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlhTFC8", false, (String) null);
      outputFormat0.setPadText(false);
      OutputFormat outputFormat1 = new OutputFormat("-xhtmlhTFC8", true, (String) null);
      int int0 = 0;
      outputFormat1.setIndent("=");
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-xhtmlUTF-8";
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5047882836811908
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-xhtmlhTFC8";
      stringArray0[2] = "-xhtmlZ%/mlniCG8Dy";
      stringArray0[3] = "UTF-8";
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlZ%/mlniCG8Dy", false, "-omitEncoding");
      int int0 = 0;
      OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String string0 = null;
      outputFormat0.setIndent((String) null);
      outputFormat0.setNewLineAfterNTags(1383);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      int int0 = 1;
      outputFormat1.setNewLineAfterNTags(1);
      outputFormat0.setIndent(false);
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat1.setNewlines(false);
      outputFormat1.getEncoding();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('X');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (X)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setIndent(false);
      outputFormat0.setLineSeparator("UkhXN<-6oUpYs");
      outputFormat0.setXHTML(false);
      outputFormat0.getEncoding();
      outputFormat0.setIndent("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "UkhXN<-6oUpYs";
      stringArray0[5] = "UkhXN<-6oUpYs";
      stringArray0[6] = "";
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "-Cxpa)9EmptyG[=";
      OutputFormat outputFormat0 = new OutputFormat("-Cxpa)9EmptyG[=", true);
      String string1 = "-xhtmlhTF-8";
      String string2 = null;
      outputFormat0.setIndent((String) null);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('i');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (i)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlhTFC8", false, "-omitEncoding");
      outputFormat0.setIndentSize(34);
      String[] stringArray0 = new String[0];
      int int0 = outputFormat0.parseOptions(stringArray0, 34);
      assertEquals("                                  ", outputFormat0.getIndent());
      assertEquals(34, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.7201248812718097
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-xhtmlhTFC8";
      stringArray0[2] = "-xhtmlZ%/mlniCG8Dy";
      stringArray0[3] = "UTF-8";
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlZ%/mlniCG8Dy", false, "-omitEncoding");
      outputFormat0.setExpandEmptyElements(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, (String) null);
      outputFormat0.setPadText(false);
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertFalse(boolean0);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("|57Bm", false);
      outputFormat0.setTrimText(false);
      outputFormat0.setEncoding("|57Bm");
      outputFormat0.isTrimText();
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertEquals("|57Bm", outputFormat0.getEncoding());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-xhtmlhTFC8";
      OutputFormat outputFormat0 = new OutputFormat(stringArray0[2], false, "-omitExncodixg");
      outputFormat0.getNewLineAfterNTags();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setEncoding(".g)#r{Apw=7gE");
      outputFormat0.setOmitEncoding(true);
      boolean boolean0 = outputFormat0.isPadText();
      assertEquals(".g)#r{Apw=7gE", outputFormat0.getEncoding());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("\n");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setEncoding("");
      outputFormat0.isXHTML();
      outputFormat0.setTrimText(true);
      assertTrue(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-Cxpa)9EmptyG[=", true);
      outputFormat0.getAttributeQuoteCharacter();
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1114));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1114
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmptyM[=", true);
      outputFormat0.setPadText(false);
      String string0 = "-xhtmlUTF-8";
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat1 = new OutputFormat("-xhtmlUTF-8", true);
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('}');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (})
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("JEBtWqa1%m1j\"TEdL;", false);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "JEBtWqa1%m1j\"TEdL;";
      stringArray0[1] = "JEBtWqa1%m1j\"TEdL;";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals(0, int0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("JEBtWqa1%m1j\"TEdL;", outputFormat0.getIndent());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("$R");
      outputFormat0.getLineSeparator();
      String[] stringArray0 = new String[0];
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("_.Jy&5Y4;/UK");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "_.Jy&5Y4;/UK";
      outputFormat0.parseOptions(stringArray0, 1803);
      int int0 = outputFormat0.parseOptions(stringArray0, 1803);
      assertFalse(outputFormat0.isPadText());
      assertEquals(1803, int0);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("_.Jy&5Y4;/UK", outputFormat0.getIndent());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals(0, int0);
      
      outputFormat0.setPadText(false);
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertFalse(boolean0);
      
      outputFormat0.setPadText(false);
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewlines(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setTrimText(true);
      outputFormat0.setNewLineAfterNTags((-1428));
      outputFormat0.setLineSeparator("");
      outputFormat0.setEncoding("");
      outputFormat0.getIndent();
      outputFormat0.setIndent((String) null);
      boolean boolean0 = true;
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[6];
      outputFormat0.setIndent("");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setLineSeparator((String) null);
      stringArray0[0] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertEquals("", outputFormat0.getIndent());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isXHTML());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setOmitEncoding(false);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-trimText";
      stringArray0[2] = "-xhtmlZ%/mlniCG8Dy";
      stringArray0[3] = "UTF-8";
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlZ%/mlniCG8Dy", false, "-xhtmlZ%/mlniCG8Dy");
      outputFormat0.parseOptions(stringArray0, 441);
      outputFormat0.parseOptions(stringArray0, 441);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("_", true);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("7O;4gFZ8kLoYj");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setIndent(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setXHTML(true);
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.getNewLineAfterNTags();
      assertEquals("  ", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setOmitEncoding(true);
      assertFalse(outputFormat1.isSuppressDeclaration());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterNTags((-1779));
      outputFormat0.setNewLineAfterNTags((-1));
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setLineSeparator("-newlines");
      outputFormat1.setTrimText(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.isOmitEncoding();
      outputFormat1.setLineSeparator("D+O&");
      outputFormat1.setIndentSize((-1779));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "sk&9H*64O.WL)!fDcc";
      stringArray0[1] = "D+O&";
      stringArray0[4] = "imU";
      stringArray0[5] = "sk&9H*64O.WL)!fDcc";
      outputFormat2.parseOptions(stringArray0, 0);
      outputFormat1.setIndentSize(0);
      outputFormat2.isNewlines();
      outputFormat0.isTrimText();
      OutputFormat outputFormat3 = new OutputFormat((String) null, true);
      outputFormat3.setNewLineAfterNTags((-3254));
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-1913643429));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1913643429
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-xhtmlhTFC8";
      OutputFormat outputFormat0 = new OutputFormat("ynPih(uI/J", false, "-lineSeparator");
      String[] stringArray1 = new String[1];
      stringArray1[0] = "-encoding";
      outputFormat0.parseOptions(stringArray1, 1);
      outputFormat0.parseOptions(stringArray1, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-omitEncoding", true, "-xtm,hTC8");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-expandEmpty-newlines";
      stringArray0[1] = "8Cg$7GWxSZv";
      stringArray0[2] = "-xhtmlhTFC8";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-462));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -462
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = new OutputFormat("lS=|sN5I]omqxv", true, "");
      OutputFormat outputFormat2 = new OutputFormat("lS=|sN5I]omqxv", false);
      outputFormat2.setNewlines(false);
      outputFormat1.setLineSeparator(",b5");
      assertEquals(",b5", outputFormat1.getLineSeparator());
      
      outputFormat2.setIndent(",b5");
      outputFormat0.setIndent(",b5");
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-xhtml";
      stringArray0[1] = "-indent";
      stringArray0[2] = "-xhtml";
      stringArray0[3] = ":_ukRa'H4}t\"<1";
      int int0 = outputFormat3.parseOptions(stringArray0, 1);
      assertEquals(3, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-omitEncoding", true, "-xhtmlhTFC8");
      assertFalse(outputFormat0.isOmitEncoding());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-omitEncoding";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 1);
      int int0 = outputFormat0.parseOptions(stringArray0, 642);
      assertTrue(outputFormat0.isOmitEncoding());
      assertEquals(642, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("-padText");
      OutputFormat outputFormat1 = new OutputFormat("-xhtml", true, "vV=Uq5b/(%");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-xhtml";
      stringArray0[1] = "_";
      stringArray0[2] = "-padText";
      stringArray0[3] = "-omitEncoding";
      stringArray0[4] = null;
      stringArray0[5] = "-xhtml";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-xhtmlhTF-8";
      stringArray0[1] = "-xhtmlhTF-8";
      stringArray0[2] = "-suppressDeclaration";
      stringArray0[3] = "W>KD";
      stringArray0[4] = "-xhtmlhTF-8";
      String[] stringArray1 = new String[6];
      stringArray1[0] = "-omitEncoding";
      stringArray1[1] = "-xhtmlhTF-8";
      stringArray1[3] = "-omitEncoding";
      stringArray1[4] = "-xhtmlhTF-8";
      stringArray1[5] = "";
      OutputFormat outputFormat0 = new OutputFormat("W>KD", false);
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("-Cxpa)9EmptyG[=", false, "-indent");
      OutputFormat outputFormat2 = new OutputFormat("o}jR86zfdKcWP", false);
      outputFormat1.setLineSeparator("");
      outputFormat1.setIndent("-lineSeparator");
      outputFormat1.setIndent("o}jR86zfdKcWP");
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "-xhtmlUTF-8";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "-indent";
      stringArray0[4] = "6qo |";
      int int0 = outputFormat3.parseOptions(stringArray0, 1);
      assertEquals("-indent", outputFormat3.getLineSeparator());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = "UTF-8";
      String string1 = "?\"9I4ClC ";
      String[] stringArray0 = new String[15];
      stringArray0[0] = "?\"9I4ClC ";
      String string2 = ":eF";
      OutputFormat outputFormat0 = new OutputFormat(":eF", true, "-xhtmlZ%/mlniCG8Dy");
      String string3 = "q[>";
      OutputFormat outputFormat1 = new OutputFormat("q[>", true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setSuppressDeclaration(true);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "-indentSize";
      stringArray1[1] = "q[>";
      stringArray1[2] = "-xhtmlZ%/mlniCG8Dy";
      stringArray1[3] = "UTF-8";
      stringArray1[4] = "?\"9I4ClC ";
      stringArray1[5] = "q[>";
      stringArray1[6] = "q[>";
      stringArray1[7] = "q[>";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"q[>\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
