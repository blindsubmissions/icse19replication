/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 06:59:08 GMT 2018
 */

package weka.filters.unsupervised.attribute;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Properties;
import java.util.StringTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.DenseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.ProtectedProperties;
import weka.core.SparseInstance;
import weka.filters.AllFilter;
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.Discretize;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Discretize_ESTest extends Discretize_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      int int0 = 0;
      int int1 = (-260);
      discretize0.binsTipText();
      AllFilter allFilter0 = new AllFilter();
      // Undeclared exception!
      try { 
        allFilter0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.useBinNumbersTipText();
      assertEquals("Use bin numbers (eg BXofY) rather than ranges for for discretized attributes", string0);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.useEqualFrequencyTipText();
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getMakeBinary());
      assertEquals(10, discretize0.getBins());
      assertEquals("If set to true, equal-frequency binning will be used instead of equal-width binning.", string0);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.input((Instance) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setOutputFormat();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.setAttributeIndicesArray((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.globalInfo();
      int int0 = 6;
      int[] intArray0 = new int[7];
      intArray0[0] = 6;
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      // Undeclared exception!
      try { 
        discretize0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2420052954825502
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getOptions();
      double[][] doubleArray0 = new double[12][8];
      discretize0.getRevision();
      discretize0.setMakeBinary(true);
      discretize0.m_CutPoints = doubleArray0;
      discretize0.getBinRangesString(9);
      assertTrue(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0840358452755474
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[12][8];
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Set attribute selection mode. If false, only selected (numeric) attributes in the range will be discretized; if true, only non-selected attributes will be discretized.";
      discretize0.setOptions(stringArray0);
      discretize0.getRevision();
      discretize0.setMakeBinary(true);
      discretize0.m_CutPoints = doubleArray0;
      discretize0.getBinRangesString(9);
      assertTrue(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      discretize0.getRevision();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8964");
      discretize0.findNumBinsTipText();
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      int[] intArray0 = new int[5];
      intArray0[2] = 5;
      discretize0.m_FindNumBins = true;
      intArray0[3] = 5;
      intArray0[4] = 5;
      SparseInstance sparseInstance0 = null;
      try {
        sparseInstance0 = new SparseInstance(1.0, (double[]) null, intArray0, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.SparseInstance", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getBinRangesString(1121);
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[4];
      Discretize.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.makeBinaryTipText();
      int int0 = 0;
      // Undeclared exception!
      try { 
        discretize0.numPendingOutput();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 9;
      String string0 = "+WDk";
      Discretize discretize0 = new Discretize("+WDk");
      discretize0.invertSelectionTipText();
      // Undeclared exception!
      try { 
        discretize0.numPendingOutput();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getCutPoints((-1550));
      assertFalse(discretize0.getFindNumBins());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setAttributeIndices("");
      String[] stringArray0 = discretize0.getOptions();
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.attributeIndicesTipText();
      discretize0.setAttributeIndices("Specify range of attributes to act on. This is a comma separated list of attribute indices, with \"first\" and \"last\" valid values. Specify an inclusive range with \"-\". E.g: \"first-3,5,6-10,last\".");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      int int0 = 0;
      Instances instances0 = new Instances("Specify range of attributes to act on. This is a comma separated list of attribute indices, with \"first\" and \"last\" valid values. Specify an inclusive range with \"-\". E.g: \"first-3,5,6-10,last\".", arrayList0, 0);
      int int1 = (-260);
      // Undeclared exception!
      try { 
        instances0.subList((-260), (-260));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -260
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getUseBinNumbers());
      
      discretize0.m_UseBinNumbers = true;
      discretize0.getOptions();
      assertTrue(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setInvertSelection(true);
      String[] stringArray0 = discretize0.getOptions();
      assertEquals(7, stringArray0.length);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[1][8];
      String[] stringArray0 = new String[9];
      stringArray0[0] = ".D\"1E7a7r";
      stringArray0[1] = "xpGR_)LXQ=]:8";
      stringArray0[2] = "-F";
      stringArray0[3] = "-M";
      stringArray0[4] = "ftp://";
      stringArray0[5] = "ftp://";
      stringArray0[6] = "Filter options";
      stringArray0[7] = "  /**\n";
      stringArray0[8] = "Y=;ct";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Wq%";
      stringArray0[1] = "hLca@nN:rXXBhfZbb";
      stringArray0[2] = "M2as#F_'q64iRSHy8";
      stringArray0[3] = "-B";
      stringArray0[4] = "fYv'0!K9";
      stringArray0[5] = "Z,";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[6] = "-B";
      Filter.runFilter(discretize0, stringArray0);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0840358452755474
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[12][8];
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-R";
      stringArray0[1] = "_";
      stringArray0[2] = "^oR9z";
      stringArray0[3] = "inf";
      stringArray0[4] = "f3cB;";
      discretize0.setDesiredWeightOfInstancesPerInterval(4.6);
      stringArray0[5] = "Getting output instance";
      discretize0.setOptions(stringArray0);
      discretize0.setUseEqualFrequency(false);
      discretize0.getRevision();
      discretize0.setMakeBinary(true);
      discretize0.m_CutPoints = doubleArray0;
      discretize0.getBinRangesString(9);
      assertTrue(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SystemInUtil.addInputLine("0>G?:KJy8,6#'XH'B1");
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[16][8];
      discretize0.m_CutPoints = doubleArray0;
      int int0 = 66;
      // Undeclared exception!
      try { 
        discretize0.getCutPoints(66);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 66
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setMakeBinary(true);
      discretize0.setIgnoreClass(true);
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't ignore class when changing the number of attributes!
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setIgnoreClass(true);
      String[] stringArray0 = discretize0.getOptions();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(7, stringArray0.length);
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute(".ycf", (-1816));
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("=\"D>o[8X:(P;+", arrayList0, 0);
      Discretize discretize1 = new Discretize();
      assertFalse(discretize1.getMakeBinary());
      
      boolean boolean0 = discretize1.setInputFormat(instances0);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      discretize1.setOptions(stringArray0);
      assertEquals((-1.0), discretize1.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize1.getUseBinNumbers());
      assertFalse(discretize1.getUseEqualFrequency());
      assertFalse(discretize1.getFindNumBins());
      assertEquals(10, discretize1.getBins());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4629999850978033
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\"has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("date", arrayList0, 2);
      instances0.toString();
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      discretize0.setOutputFormat();
      discretize0.isNewBatch();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 3;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(4, doubleArray0);
      SparseInstance sparseInstance0 = new SparseInstance((SparseInstance) binarySparseInstance0);
      discretize0.convertInstance(sparseInstance0);
      // Undeclared exception!
      try { 
        discretize0.getBinRangesString(68);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 68
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\"has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("date", arrayList0, 2);
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      discretize0.setOutputFormat();
      DenseInstance denseInstance0 = new DenseInstance(2);
      discretize0.input(denseInstance0);
      Random.setNextRandom(123);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\"has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("date", arrayList0, 2);
      discretize0.m_UseEqualFrequency = true;
      instances0.setClass(attribute0);
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      discretize0.isNewBatch();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4487856639398786
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\" has unknown type");
      attribute0.addRelation((Instances) null);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("date", arrayList0, 2);
      boolean boolean0 = discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      discretize0.setOutputFormat();
      boolean boolean1 = discretize0.batchFinished();
      assertTrue(boolean1 == boolean0);
      assertTrue(discretize0.isNewBatch());
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5168175796007866
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      discretize0.setFindNumBins(true);
      Attribute attribute0 = new Attribute("\"position\" has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("real", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      int[] intArray0 = new int[0];
      SparseInstance sparseInstance0 = new SparseInstance(1.7976931348623157E308, doubleArray0, intArray0, 1);
      instances0.add((Instance) sparseInstance0);
      SparseInstance sparseInstance1 = new SparseInstance((Instance) sparseInstance0);
      instances0.add((Instance) sparseInstance1);
      Filter.useFilter(instances0, discretize0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute(".ycf");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("string", arrayList0, 2);
      boolean boolean0 = discretize0.setInputFormat(instances0);
      assertFalse(boolean0);
      
      discretize0.calculateCutPoints();
      String string0 = discretize0.getBinRangesString(0);
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getFindNumBins());
      assertEquals("All", string0);
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.039662697720845
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\" has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("real", arrayList0, 1);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
      binarySparseInstance0.insertAttributeAt(0);
      discretize0.m_MakeBinary = true;
      instances0.add((Instance) binarySparseInstance0);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(0);
      boolean boolean0 = discretize0.m_FindNumBins;
      instances0.add((Instance) binarySparseInstance1);
      try { 
        Filter.useFilter(instances0, discretize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: '\"position\" has unknown type' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("vjsx8!w");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) arrayList1);
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      Properties properties0 = new Properties();
      ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
      Attribute attribute1 = new Attribute("@attribute", list1, protectedProperties0);
      arrayList0.add(attribute1);
      Instances instances0 = new Instances("string", arrayList0, 4);
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[6];
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      SystemInUtil.addInputLine(".ycf");
      Attribute attribute0 = new Attribute(".ycf", 62);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances(") can't be established.", arrayList0, 4);
      discretize0.setInputFormat(instances0);
      discretize0.m_DesiredWeightOfInstancesPerInterval = 0.1111111111111111;
      stringArray0[0] = ") can't be established.";
      stringArray0[1] = ") can't be established.";
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.783073469038219
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      discretize0.setFindNumBins(true);
      discretize0.m_UseEqualFrequency = true;
      Attribute attribute0 = new Attribute("\"position\" has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("real", arrayList0, 1);
      instances0.indexOf(discretize0);
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bin number optimization in conjunction with equal-frequency binning not implemented.
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\"has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("date", arrayList0, 2);
      instances0.setClass(attribute0);
      instances0.toString();
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      discretize0.setOutputFormat();
      discretize0.isNewBatch();
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 3028.0588383496;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (double) 4;
      doubleArray0[5] = (-2717.819518388677);
      doubleArray0[6] = (double) 2;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(3028.0588383496, doubleArray0);
      SparseInstance sparseInstance0 = new SparseInstance((SparseInstance) binarySparseInstance0);
      // Undeclared exception!
      try { 
        discretize0.convertInstance(sparseInstance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.SparseInstance", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Attribute attribute0 = new Attribute("L(&4", linkedList0, (-679));
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("string", arrayList0, 1);
      instances0.toString();
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      discretize0.setOutputFormat();
      discretize0.numPendingOutput();
      attribute0.equalsMsg("@relation string\n\n@attribute L(&4 {}\n\n@data\n");
      discretize0.isNewBatch();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 3;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-3103.837), doubleArray0);
      SparseInstance sparseInstance0 = new SparseInstance((SparseInstance) binarySparseInstance0);
      discretize0.convertInstance(binarySparseInstance0);
      // Undeclared exception!
      try { 
        discretize0.getBinRangesString(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.0468103456274505
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\" has unknown type");
      attribute0.enumerateValues();
      Instances instances0 = new Instances("real", arrayList0, 1);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      double[] doubleArray0 = new double[1];
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
      binarySparseInstance0.insertAttributeAt(0);
      instances0.add((Instance) binarySparseInstance0);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(1, doubleArray0);
      BinarySparseInstance binarySparseInstance2 = new BinarySparseInstance(0);
      binarySparseInstance2.isMissing(attribute0);
      instances0.add((Instance) binarySparseInstance2);
      try { 
        Filter.useFilter(instances0, discretize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: '\"position\" has unknown type' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5231957398094504
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\"has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("relational", arrayList0, 1);
      String[] stringArray0 = new String[7];
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1);
      instances0.add((Instance) binarySparseInstance0);
      stringArray0[0] = "@data";
      stringArray0[2] = "relational";
      stringArray0[3] = "relational";
      stringArray0[4] = "integer";
      stringArray0[5] = "real";
      stringArray0[6] = "date";
      discretize0.setInputFormat(instances0);
      discretize0.setUseEqualFrequency(true);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      SparseInstance sparseInstance0 = new SparseInstance(527.34601, doubleArray0);
      instances0.add((Instance) sparseInstance0);
      sparseInstance0.setValue(attribute0, (-2393.229239409172));
      SparseInstance sparseInstance1 = new SparseInstance(sparseInstance0);
      sparseInstance0.toString(attribute0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      instances0.add((Instance) sparseInstance1);
      Filter.useFilter(instances0, discretize0);
      discretize0.setOutputFormat();
      System.setCurrentTimeMillis((-2594L));
      discretize0.convertInstance(sparseInstance0);
      assertTrue(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)47;
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)67;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Attribute attribute0 = new Attribute("\"position\"has unknown type");
      Attribute attribute1 = new Attribute("string");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("string", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.m_NumBins = 1;
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("1000.1000.1000");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("<e", arrayList0, 2);
      LinkedList<SparseInstance> linkedList0 = new LinkedList<SparseInstance>();
      instances0.addAll((Collection<? extends Instance>) linkedList0);
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      SparseInstance sparseInstance0 = new SparseInstance(3);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(sparseInstance0);
      binarySparseInstance0.isMissing(attribute0);
      instances0.add((Instance) sparseInstance0);
      try { 
        Filter.useFilter(instances0, discretize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: '1000.1000.1000' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.5257154330597102
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\"has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("relational", arrayList0, 1);
      String[] stringArray0 = new String[7];
      SparseInstance sparseInstance0 = new SparseInstance(2);
      instances0.add((Instance) sparseInstance0);
      stringArray0[0] = "@data";
      stringArray0[2] = "relational";
      stringArray0[3] = "relational";
      stringArray0[4] = "integer";
      stringArray0[5] = "real";
      stringArray0[6] = "date";
      discretize0.setInputFormat(instances0);
      discretize0.setUseEqualFrequency(true);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      SparseInstance sparseInstance1 = new SparseInstance(527.34601, doubleArray0);
      instances0.add((Instance) sparseInstance1);
      sparseInstance1.setValue(attribute0, (-2393.229239409172));
      SparseInstance sparseInstance2 = new SparseInstance(sparseInstance1);
      sparseInstance1.toString(attribute0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      instances0.add((Instance) sparseInstance2);
      Filter.useFilter(instances0, discretize0);
      discretize0.setOutputFormat();
      System.setCurrentTimeMillis((-2594L));
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      discretize0.setFindNumBins(true);
      Attribute attribute0 = new Attribute("\"position\" has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("real", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SystemInUtil.addInputLine("db<f|o'7QM.(=F");
      SparseInstance sparseInstance0 = new SparseInstance(2);
      instances0.add((Instance) sparseInstance0);
      Instances instances1 = Filter.useFilter(instances0, discretize0);
      assertTrue(discretize0.getFindNumBins());
      assertEquals("real-weka.filters.unsupervised.attribute.Discretize-O-B10-M-1.0-Rfirst-last", instances1.relationName());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\" has unknown type");
      Instances instances0 = new Instances("real", arrayList0, 1);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      double[] doubleArray0 = new double[1];
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
      instances0.add((Instance) binarySparseInstance0);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(1, doubleArray0);
      BinarySparseInstance binarySparseInstance2 = new BinarySparseInstance(2);
      instances0.add((Instance) binarySparseInstance2);
      try { 
        Filter.useFilter(instances0, discretize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: '\"position\" has unknown type' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.591072262674145
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\" has unknown type");
      StringTokenizer stringTokenizer0 = new StringTokenizer("@attribute", "string");
      Instances instances0 = new Instances("real", arrayList0, 1);
      arrayList0.add(attribute0);
      boolean boolean0 = discretize0.m_MakeBinary;
      discretize0.setInputFormat(instances0);
      discretize0.setMakeBinary(true);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
      binarySparseInstance0.insertAttributeAt(0);
      instances0.add((Instance) binarySparseInstance0);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(0);
      binarySparseInstance1.isMissing(attribute0);
      attribute0.value(1);
      instances0.add((Instance) binarySparseInstance1);
      Filter.useFilter(instances0, discretize0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // weka.filters.unsupervised.attribute.Discretize: Class attribute not set!
         //
         verifyException("weka.core.Capabilities", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\" has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("real", arrayList0, 1);
      arrayList0.add(attribute0);
      discretize0.m_UseBinNumbers = true;
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
      MockRandom mockRandom0 = new MockRandom(0);
      instances0.randomize(mockRandom0);
      binarySparseInstance0.insertAttributeAt(0);
      discretize0.m_MakeBinary = true;
      instances0.add((Instance) binarySparseInstance0);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(0);
      boolean boolean0 = discretize0.m_FindNumBins;
      System.setCurrentTimeMillis(0L);
      instances0.add((Instance) binarySparseInstance1);
      try { 
        Filter.useFilter(instances0, discretize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: '\"position\" has unknown type' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\" has unknown type");
      StringTokenizer stringTokenizer0 = new StringTokenizer("@attribute", "string");
      Instances instances0 = new Instances("real", arrayList0, 1);
      arrayList0.add(attribute0);
      boolean boolean0 = discretize0.m_MakeBinary;
      discretize0.setInputFormat(instances0);
      discretize0.setMakeBinary(true);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
      binarySparseInstance0.insertAttributeAt(0);
      instances0.add((Instance) binarySparseInstance0);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(0);
      binarySparseInstance1.isMissing(attribute0);
      attribute0.value(1);
      instances0.add((Instance) binarySparseInstance1);
      Filter.useFilter(instances0, discretize0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 1;
      BinarySparseInstance binarySparseInstance2 = new BinarySparseInstance((-2770.8229), doubleArray0);
      DenseInstance denseInstance0 = new DenseInstance(2);
      discretize0.convertInstance(denseInstance0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\"has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("date", arrayList0, 2);
      discretize0.m_UseEqualFrequency = true;
      instances0.toString();
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      discretize0.isNewBatch();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\"has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("relational", arrayList0, 1);
      String[] stringArray0 = new String[7];
      SparseInstance sparseInstance0 = new SparseInstance(2);
      instances0.add((Instance) sparseInstance0);
      stringArray0[2] = "relational";
      stringArray0[3] = "relational";
      stringArray0[5] = "real";
      stringArray0[6] = "date";
      discretize0.setInputFormat(instances0);
      discretize0.setUseEqualFrequency(true);
      SparseInstance sparseInstance1 = new SparseInstance(sparseInstance0);
      Instance instance0 = instances0.instance(0);
      instances0.add(instance0);
      Filter.useFilter(instances0, discretize0);
      DenseInstance denseInstance0 = new DenseInstance(1);
      StringReader stringReader0 = new StringReader("length");
      Instances instances1 = null;
      try {
        instances1 = new Instances(stringReader0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // keyword @relation expected, read Token[length], line 1
         //
         verifyException("weka.core.converters.ArffLoader$ArffReader", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\" has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("real", arrayList0, 1);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
      binarySparseInstance0.insertAttributeAt(0);
      instances0.add((Instance) binarySparseInstance0);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(0);
      discretize0.setUseEqualFrequency(true);
      double[] doubleArray0 = new double[0];
      SparseInstance sparseInstance0 = new SparseInstance(3, doubleArray0);
      instances0.add((Instance) binarySparseInstance1);
      sparseInstance0.setValue(attribute0, (double) 1);
      binarySparseInstance0.toString(attribute0);
      instances0.add((Instance) sparseInstance0);
      try { 
        Filter.useFilter(instances0, discretize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: '\"position\" has unknown type' '\"position\" has unknown type' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\"has unknown type");
      arrayList0.add(attribute0);
      discretize0.setFindNumBins(true);
      Attribute attribute1 = new Attribute("real");
      arrayList0.add(attribute1);
      Instances instances0 = new Instances("\"position\"has unknown type", arrayList0, 2670);
      discretize0.setInputFormat(instances0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      double[] doubleArray0 = new double[1];
      SparseInstance sparseInstance0 = new SparseInstance(2670, doubleArray0);
      instances0.add((Instance) sparseInstance0);
      sparseInstance0.setValue(attribute1, (-668.88));
      sparseInstance0.toString(attribute0);
      instances0.add((Instance) sparseInstance0);
      Filter filter0 = Filter.makeCopy(discretize0);
      Filter.useFilter(instances0, filter0);
      Discretize discretize1 = new Discretize();
      DenseInstance denseInstance0 = null;
      try {
        denseInstance0 = new DenseInstance((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.DenseInstance", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5768327841706005
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "1]ucba&\"wjW~2a");
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\" has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("HuI)L44;vn ", arrayList0, 1);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1);
      instances0.add((Instance) binarySparseInstance0);
      discretize0.setInputFormat(instances0);
      discretize0.setUseEqualFrequency(true);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 3800.84988;
      SparseInstance sparseInstance0 = new SparseInstance(3800.84988, doubleArray0);
      instances0.add((Instance) sparseInstance0);
      sparseInstance0.setValue(attribute0, (double) 1);
      SparseInstance sparseInstance1 = new SparseInstance(sparseInstance0);
      sparseInstance1.toString(attribute0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      instances0.add((Instance) sparseInstance1);
      Filter.useFilter(instances0, discretize0);
      discretize0.setOutputFormat();
      System.setCurrentTimeMillis(2);
      discretize0.convertInstance(sparseInstance1);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        discretize0.findNumBins(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\" has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("HuI)L44;vn ", arrayList0, 1);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1);
      instances0.add((Instance) binarySparseInstance0);
      discretize0.setInputFormat(instances0);
      discretize0.setUseEqualFrequency(true);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 3800.84988;
      SparseInstance sparseInstance0 = new SparseInstance(3800.84988, doubleArray0);
      instances0.add((Instance) sparseInstance0);
      sparseInstance0.setValue(attribute0, (double) 1);
      SparseInstance sparseInstance1 = new SparseInstance(sparseInstance0);
      sparseInstance1.toString(attribute0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      binarySparseInstance0.isMissing(attribute0);
      instances0.add((Instance) sparseInstance1);
      Filter.useFilter(instances0, discretize0);
      discretize0.calculateCutPoints();
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\"has unknown type");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("date", arrayList0, 2);
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      discretize0.setOutputFormat();
      discretize0.isNewBatch();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      discretize0.setInvertSelection(true);
      doubleArray0[4] = (double) 2;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1.2, doubleArray0);
      binarySparseInstance0.setDataset(instances0);
      discretize0.convertInstance(binarySparseInstance0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\" has unknown type");
      Instances instances0 = new Instances("real", arrayList0, 1);
      discretize0.setInvertSelection(true);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      double[] doubleArray0 = new double[1];
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
      instances0.add((Instance) binarySparseInstance0);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(1, doubleArray0);
      BinarySparseInstance binarySparseInstance2 = new BinarySparseInstance(0);
      binarySparseInstance2.isMissing(attribute0);
      attribute0.copy();
      Random.setNextRandom(1);
      boolean boolean0 = discretize0.m_UseEqualFrequency;
      try { 
        Filter.useFilter(instances0, discretize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: '\"position\" has unknown type' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("\"position\" has unknown type");
      attribute0.enumerateValues();
      Instances instances0 = new Instances("real", arrayList0, 1);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      double[] doubleArray0 = new double[1];
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
      binarySparseInstance0.insertAttributeAt(0);
      discretize0.m_UseBinNumbers = true;
      instances0.add((Instance) binarySparseInstance0);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(0);
      binarySparseInstance1.isMissing(attribute0);
      instances0.add((Instance) binarySparseInstance1);
      try { 
        Filter.useFilter(instances0, discretize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: '\"position\" has unknown type' 
         //
         verifyException("weka.core.Instances", e);
      }
  }
}
