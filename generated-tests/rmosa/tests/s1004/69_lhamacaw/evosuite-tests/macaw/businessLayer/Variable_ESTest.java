/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 06:52:59 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getCodeBookNumber();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setColumnEnd("lHhSl");
      derivedVariable0.addSourceVariable(rawVariable1);
      assertEquals("lHhSl", rawVariable1.getColumnEnd());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "";
      rawVariable0.form = "}lbIaKP";
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      rawVariable0.setAvailability("}lbIaKP");
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      rawVariable0.setForm("}lbIaKP");
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      assertEquals(0, arrayList1.size());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      int int0 = 40;
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      UnaryOperator<SupportingDocument> unaryOperator0 = UnaryOperator.identity();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      unaryOperator0.apply(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      arrayList0.replaceAll(unaryOperator0);
      // Undeclared exception!
      try { 
        arrayList0.addAll(40, (Collection<? extends SupportingDocument>) arrayList1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 40, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.060884963119022
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "J*Y&8v";
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertEquals("J*Y&8v", derivedVariable0.getColumnEnd());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(boolean0);
      
      derivedVariable0.getSourceVariables();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = null;
      rawVariable0.addValueLabel((ValueLabel) null);
      User user0 = new User();
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.1286665613687226
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCleaningStatus((String) null);
      derivedVariable0.hasSameDisplayName(derivedVariable2);
      DerivedVariable derivedVariable3 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable3.getCleaningStatus());
      assertEquals("Unknown", derivedVariable3.getAvailability());
      assertEquals(0, derivedVariable3.getIdentifier());
      assertEquals("Unknown", derivedVariable3.getCategory());
      assertFalse(derivedVariable3.isCoded());
      assertFalse(derivedVariable3.isCleaned());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getDisplayItemIdentifier();
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      User user0 = new User();
      user0.setLastName("P_Pj.mpVJopS[D/%r?");
      user0.setPhone("e[ \"6/");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.columnEnd = "variable.form.label";
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      assertEquals(0, arrayList1.size());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.1272886853327275
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.notes = "9PHa";
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.addSourceVariable(derivedVariable0);
      assertEquals("9PHa", derivedVariable1.getNotes());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      linkedList0.add(ontologyTerm0);
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.setName((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable1);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setCounty("variable.availability.label");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.addSourceVariable((Variable) null);
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4205719259467042
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      derivedVariable0.codeBookNumber = "MISSING_DISPLAY_LIST_ADDER";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.1272886853327275
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.codeBookNumber = "O>1S8Z:@]#3*a";
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.addSourceVariable(derivedVariable0);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("O>1S8Z:@]#3*a", derivedVariable1.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5751006598945603
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(false);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      linkedList0.add(ontologyTerm0);
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      User user0 = new User();
      derivedVariable0.setAlias("?");
      user0.setAddressLine1("Sm'(e<r");
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      SupportingDocument supportingDocument0 = null;
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument1);
      // Undeclared exception!
      try { 
        rawVariable1.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.191013317336941
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setQuestionNumber("supportingDocument.documentCode.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("supportingDocument.documentCode.label", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      User user0 = new User();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4785735676437404
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      linkedList0.add(ontologyTerm0);
      linkedList0.add(ontologyTerm0);
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      User user0 = new User();
      rawVariable1.columnStart = "#^1skctZP%=?B";
      user0.setAddressLine1("Sy'(e_r");
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument0 = null;
      // Undeclared exception!
      try { 
        rawVariable2.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setAvailability((String) null);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(false);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      linkedList0.add(ontologyTerm0);
      rawVariable0.setCleaned(true);
      User user0 = new User();
      user0.setAddressLine1("Sm'(e<r");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.6661022550876021
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlias("x3");
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      assertEquals("x3", derivedVariable1.getAlias());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      linkedList0.add(ontologyTerm0);
      derivedVariable0.setYear((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.1272886853327275
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.form = "variable.label.label";
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("variable.label.label", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5751006598945603
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable1.setColumnStart((String) null);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      linkedList0.add(ontologyTerm0);
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      User user0 = new User();
      user0.setAddressLine1("Sm'(e<r");
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument0 = null;
      rawVariable2.addSupportingDocument((SupportingDocument) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      // Undeclared exception!
      try { 
        rawVariable2.containsSupportingDocument(supportingDocument1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.9470047701612976
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "variable.form.label";
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      System.setCurrentTimeMillis((-424L));
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("variable.form.label", rawVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.3754649339525886
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      linkedList0.add(ontologyTerm0);
      rawVariable0.setCleaned(true);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      Variable.validateFields(rawVariable0);
      User user1 = new User();
      user1.setAddressLine1("Sm'(e<r");
      Variable.detectFieldChanges(user1, rawVariable1, derivedVariable0);
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertFalse(rawVariable1.isCleaned());
      assertTrue(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setSourceVariables((ArrayList<Variable>) null);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertTrue(derivedVariable0.isCoded());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.cbdeBookNumber.label");
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getSourceVariables();
      assertEquals("variable.cbdeBookNumber.label", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      derivedVariable0.setAlias("x3");
      derivedVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("x3", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.191013317336941
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaningStatus("variabl4.forqm.label");
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("variabl4.forqm.label", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      Variable.validateFields(rawVariable0);
      derivedVariable0.setCategory((String) null);
      User user0 = new User();
      user0.setAddressLine1((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      user0.setAddressLine2((String) null);
      rawVariable1.setIdentifier((-5380));
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals("-5380", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("NON_EXISTENT_ONTOLOGY_TERM");
      arrayList0.add(ontologyTerm0);
      user0.clone();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setIdentifier(161);
      User user1 = new User();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm2, ontologyTerm1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable2);
      User user2 = new User("\"!", "\"!");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      user1.setPhone("\"!");
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      User user0 = new User();
      user0.setAddressLine1((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument1.setIdentifier((-2028178998));
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      boolean boolean1 = rawVariable1.containsSupportingDocument(supportingDocument3);
      assertFalse(boolean1 == boolean0);
      
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.hasSameDisplayName(rawVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable3.hasSameDisplayName(rawVariable2);
      assertFalse(rawVariable3.isCoded());
      assertFalse(rawVariable3.isCleaned());
      assertEquals("0", rawVariable3.getDisplayItemIdentifier());
      assertFalse(rawVariable3.isNewRecord());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSourceVariable(rawVariable0);
      User user0 = new User("", "");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAvailability("");
      RawVariable rawVariable3 = new RawVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setIdentifier((-884));
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      // Undeclared exception!
      try { 
        linkedList0.subList(0, (-884));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-884)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("");
      rawVariable0.columnEnd = "variable.form.label";
      rawVariable0.setCleaningStatus("");
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      System.setCurrentTimeMillis((-424L));
  }
}
