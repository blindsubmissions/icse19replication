/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 05:44:22 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4709001279172663
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      ArrayList<String> arrayList1 = new ArrayList<String>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=");
      arrayList1.add("8nP");
      simpleNode0.setIdentifier(" not found.");
      ArrayList<String> arrayList2 = simpleNode0.identifiers;
      ArrayList<String> arrayList3 = new ArrayList<String>();
      simpleNode0.setIdentifier("{");
      arrayList1.add("try");
      arrayList1.add("f");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("VariableDeclaratorId", stringWriter1);
      simpleNode0.dump("0J(yl,DgQrnA", stringWriter1);
      simpleNode0.dump((String) null, stringWriter1);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      JavaParser javaParser0 = new JavaParser(dataInputStream0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 47);
      simpleNode1.dump("=", stringWriter1);
      simpleNode1.dump(" not found.", stringWriter0);
      simpleNode0.dump("<<", stringWriter0);
      simpleNode1.dump(">>", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>=</identifier>\n  <identifier> not found.</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7031315809655685
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(66);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'}HA");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "W*1/kp9w:bF~");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      SimpleNode simpleNode1 = new SimpleNode((-1934276392));
      simpleNode1.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      arrayList0.add("c[n");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(66);
      simpleNode0.dump("lI6", stringWriter1);
      arrayList0.add("c[n");
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      simpleNode0.setIdentifier("lI6");
      ArrayList<String> arrayList2 = simpleNode0.identifiers;
      arrayList0.add("729.P_4PcFd(i/f");
      arrayList0.add("W*1/kp9w:bF~");
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump("47b", stringWriter2);
      simpleNode0.dump("?/*.", stringWriter1);
      assertEquals("<Arguments>\n  <identifier>c[n</identifier>\n</Arguments>\n<Arguments>\n  <identifier>c[n</identifier>\n  <identifier>c[n</identifier>\n  <identifier>lI6</identifier>\n  <identifier>729.P_4PcFd(i/f</identifier>\n  <identifier>W*1/kp9w:bF~</identifier>\n</Arguments>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4709001279172663
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "lI6");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(47);
      simpleNode0.dump("c[n", stringWriter0);
      arrayList0.add("A}%/kRS?#G");
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList0.add("*vEKZv8");
      arrayList1.add("<<");
      simpleNode0.dump("C5LX[Hw&D>laq>*m^{", stringWriter0);
      arrayList1.add("*vEKZv8");
      ArrayList<String> arrayList2 = simpleNode0.identifiers;
      SimpleNode simpleNode1 = new SimpleNode(3);
      simpleNode1.setIdentifier("lI6");
      ArrayList<String> arrayList3 = simpleNode1.identifiers;
      arrayList1.add("%'b>dFL:$bo(7FgrH!}");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.write(3);
      stringWriter1.close();
      simpleNode1.dump("CM", stringWriter1);
      simpleNode1.dump("<<", stringWriter0);
      simpleNode1.dump("PackageDeclaration", stringWriter0);
      simpleNode1.dump("lI6", stringWriter1);
      simpleNode1.dump("*vEKZv8", stringWriter0);
      simpleNode0.dump("*gt", stringWriter1);
      assertEquals("<Modifiers>\n  <identifier>lI6</identifier>\n</Modifiers>\n<Modifiers>\n  <identifier>lI6</identifier>\n</Modifiers>\n<InstanceOfExpression>\n  <identifier>*lshft</identifier>\n  <identifier>*vEKZv8</identifier>\n  <identifier>%'b>dFL:$bo(7FgrH!}</identifier>\n</InstanceOfExpression>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 17;
      SimpleNode simpleNode0 = new SimpleNode(17);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      String string0 = "gp!/rK1[KEa";
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-64);
      byteArray0[2] = (byte) (-122);
      byteArray0[3] = (byte) (-41);
      simpleNode0.children = nodeArray0;
      byteArray0[4] = (byte) (-14);
      byte byte0 = (byte) (-2);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(nodeArray0[4], (byte) (-122));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -122
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.48439011623800354
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "lI6");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add("c[n");
      StringWriter stringWriter0 = new StringWriter(47);
      simpleNode0.dump("c[n", stringWriter0);
      arrayList0.parallelStream();
      arrayList1.add("A}%/kRS?#G");
      simpleNode0.toString(" not found.");
      ArrayList<String> arrayList2 = simpleNode0.identifiers;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      arrayList2.add("|");
      arrayList0.add("try");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("f>P4_Wd*]4", stringWriter0);
      simpleNode0.dump("A}%/kRS?#G", stringWriter0);
      simpleNode0.dump("zH.f'n!P6C[} soA ", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>|</identifier>\n  <identifier>try</identifier>\n</InstanceOfExpression>\n<InstanceOfExpression>\n  <identifier>|</identifier>\n  <identifier>try</identifier>\n</InstanceOfExpression>\n<InstanceOfExpression>\n  <identifier>|</identifier>\n  <identifier>try</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5305096302300272
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList0.add("c[n");
      arrayList1.add("c[n");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.toString("c[n");
      simpleNode0.dump("c[n", stringWriter0);
      arrayList1.add("A}/kS?#G");
      ArrayList<String> arrayList2 = simpleNode0.identifiers;
      FileSystemHandling.shouldAllThrowIOExceptions();
      arrayList0.add("c[n");
      stringWriter0.write(18);
      stringWriter0.close();
      arrayList0.add("*");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.close();
      arrayList0.add("*");
      StringWriter stringWriter2 = new StringWriter();
      stringWriter1.write(18);
      arrayList2.add("-T");
      simpleNode0.dump("*", stringWriter0);
      StringWriter stringWriter3 = new StringWriter();
      simpleNode0.dump("A}/kS?#G", stringWriter1);
      assertEquals("\u0012<VariableDeclaratorId>\n  <identifier>c[n</identifier>\n  <identifier>c[n</identifier>\n  <identifier>*</identifier>\n  <identifier>*</identifier>\n  <identifier>-T</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1553));
      simpleNode0.jjtGetNumChildren();
      simpleNode0.setIdentifier((String) null);
      Node node0 = simpleNode0.parent;
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = null;
      nodeArray0[1] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = null;
      nodeArray0[4] = null;
      nodeArray0[5] = null;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      nodeArray0[8] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.parent = null;
      simpleNode0.jjtAddChild((Node) null, 74);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtClose();
      simpleNode0.jjtClose();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-329));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -329
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList1.add("");
      StringWriter stringWriter0 = new StringWriter(47);
      simpleNode0.dump("nF-!AQeMOC", stringWriter0);
      arrayList0.add("}TCwhrmNWZ`}I\"$B");
      ArrayList<String> arrayList2 = simpleNode0.identifiers;
      arrayList2.add("|");
      arrayList0.add("A}%/kRS?#G");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("}TCwhrmNWZ`}I\"$B", stringWriter1);
      assertEquals("<InstanceOfExpression>\n  <identifier>}TCwhrmNWZ`}I\"$B</identifier>\n  <identifier>|</identifier>\n  <identifier>A}%/kRS?#G</identifier>\n</InstanceOfExpression>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(70);
      String string0 = "%Yd";
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList1.add("@");
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter(17);
      // Undeclared exception!
      try { 
        simpleNode0.dump("@", stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "lI6");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add("&");
      StringWriter stringWriter0 = new StringWriter(47);
      simpleNode0.dump("&", stringWriter0);
      arrayList1.add("A}%/kRS?#G");
      arrayList1.add("|");
      StringWriter stringWriter1 = new StringWriter();
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.dump("|", stringWriter0);
      simpleNode0.dump("A}%/kRS?#G", stringWriter0);
      simpleNode0.dump("zH.f'n!P6C[} soA ", stringWriter0);
      simpleNode0.dump("C@z#tTV", stringWriter1);
      simpleNode0.dump("zH.f'n!P6C[} soA ", stringWriter1);
      assertEquals("", stringWriter1.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9339820733337609
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("*lt", stringWriter0);
      javaParserTokenManager0.defaultLexState = 0;
      simpleNode0.jjtOpen();
      simpleNode0.toString();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "*lt");
      StringWriter stringWriter3 = stringWriter1.append('4');
      simpleNode0.dump("", stringWriter1);
      javaParserTokenManager0.jjmatchedKind = (-565);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.dump("$", stringWriter2);
      StringReader stringReader0 = new StringReader(" ");
      char[] charArray0 = new char[5];
      charArray0[0] = '4';
      charArray0[1] = '4';
      charArray0[2] = '4';
      charArray0[3] = '4';
      charArray0[4] = '4';
      stringReader0.read(charArray0);
      simpleNode0.setIdentifier("*lt");
      stringWriter0.write(charArray0);
      simpleNode0.dump("\"\t\"", stringWriter2);
      simpleNode0.dump((String) null, stringWriter3);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "lI6");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      ArrayList<String> arrayList2 = new ArrayList<String>();
      arrayList1.add(">>");
      arrayList1.add("\"~\"");
      StringWriter stringWriter0 = new StringWriter(47);
      simpleNode0.dump("N(Nq'{", stringWriter0);
      arrayList0.add("\"~\"");
      ArrayList<String> arrayList3 = simpleNode0.identifiers;
      arrayList1.add(" not found.");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("f", stringWriter1);
      simpleNode0.dump("lI6", stringWriter0);
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump(" not found.", stringWriter2);
      simpleNode0.dump("9WEE :omb", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*rshft</identifier>\n  <identifier>\"~\"</identifier>\n</InstanceOfExpression>\n<InstanceOfExpression>\n  <identifier>*rshft</identifier>\n  <identifier>\"~\"</identifier>\n  <identifier> not found.</identifier>\n</InstanceOfExpression>\n<InstanceOfExpression>\n  <identifier>*rshft</identifier>\n  <identifier>\"~\"</identifier>\n  <identifier> not found.</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.setIdentifier("&&");
      simpleNode0.setIdentifier("%)");
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      ArrayList<String> arrayList2 = new ArrayList<String>();
      simpleNode0.setIdentifier("@,>gtzZz");
      arrayList0.add("&&");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("-%GF", stringWriter0);
      simpleNode0.dump("%)", stringWriter0);
      StringWriter stringWriter2 = stringWriter1.append('T');
      simpleNode0.dump("Arguments", stringWriter2);
      assertEquals("T<InstanceOfExpression>\n  <identifier>=</identifier>\n  <identifier>*amp</identifier>\n  <identifier>%)</identifier>\n  <identifier>@,>gtzZz</identifier>\n  <identifier>*amp</identifier>\n</InstanceOfExpression>\n", stringWriter2.toString());
      assertEquals("T<InstanceOfExpression>\n  <identifier>=</identifier>\n  <identifier>*amp</identifier>\n  <identifier>%)</identifier>\n  <identifier>@,>gtzZz</identifier>\n  <identifier>*amp</identifier>\n</InstanceOfExpression>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3805062184775959
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(70);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter(17);
      stringWriter0.write((-1));
      char[] charArray0 = new char[9];
      stringWriter0.append((CharSequence) "%Ycdz");
      charArray0[0] = ']';
      charArray0[1] = '4';
      charArray0[2] = '\'';
      charArray0[3] = '/';
      simpleNode0.dump("%Ycdz", stringWriter0);
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("\uFFFF%Ycdz<Statement>\n  <identifier>*le</identifier>\n</Statement>\n<Statement>\n  <identifier>*le</identifier>\n</Statement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add(";");
      StringWriter stringWriter0 = new StringWriter(1146);
      simpleNode0.dump("c[n", stringWriter0);
      arrayList1.add("A}%/kRS?#G");
      ArrayList<String> arrayList2 = simpleNode0.identifiers;
      arrayList2.add("A}%/kRS?#G");
      SystemInUtil.addInputLine("A}%/kRS?#G");
      arrayList2.add(">");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump(")", stringWriter1);
      simpleNode0.dump("UnaryExpressionNotPlusMinus", stringWriter1);
      assertEquals("<InstanceOfExpression>\n  <identifier>A}%/kRS?#G</identifier>\n  <identifier>*gt</identifier>\n</InstanceOfExpression>\n<InstanceOfExpression>\n  <identifier>A}%/kRS?#G</identifier>\n  <identifier>*gt</identifier>\n</InstanceOfExpression>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(66);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("&");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("lI6", stringWriter0);
      simpleNode0.dump("_G $]uD63b|?Rq?4&", stringWriter0);
      assertEquals("<Arguments>\n  <identifier>*amp</identifier>\n</Arguments>\n<Arguments>\n  <identifier>*amp</identifier>\n</Arguments>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(66);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.spliterator();
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList1.add("");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(66);
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump("instanceof", stringWriter2);
      StringWriter stringWriter3 = new StringWriter();
      arrayList0.add(">=");
      StringWriter stringWriter4 = new StringWriter();
      simpleNode0.dump("ShiftExpression", stringWriter2);
      stringWriter3.close();
      SimpleNode simpleNode2 = new SimpleNode((-1381));
      StringWriter stringWriter5 = stringWriter1.append((CharSequence) "instanceof");
      simpleNode0.dump("", stringWriter5);
      simpleNode2.dump(".", stringWriter2);
      assertEquals("<Arguments>\n</Arguments>\n<Arguments>\n  <identifier>*ge</identifier>\n</Arguments>\n", stringWriter2.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList1.add(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("nF-!AQeMOC", stringWriter0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ArrayList<String> arrayList2 = simpleNode0.identifiers;
      arrayList2.add("|");
      arrayList0.add("A}%/kRS?#G");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("|", stringWriter0);
      simpleNode0.dump("}TCwhrmNWZ`}I\"$B", stringWriter1);
      assertEquals("<InstanceOfExpression>\n  <identifier>|</identifier>\n  <identifier>A}%/kRS?#G</identifier>\n</InstanceOfExpression>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      SimpleNode simpleNode1 = new SimpleNode(47);
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList0.add("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("class", stringWriter0);
      simpleNode1.dump("", stringWriter0);
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*lt</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("A}%/kRS?#G");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "lI6");
      SimpleNode simpleNode1 = new SimpleNode(3);
      ArrayList<String> arrayList1 = simpleNode1.identifiers;
      arrayList1.add("}");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("A}%/kRS?#G", stringWriter0);
      simpleNode1.dump((String) null, stringWriter0);
      simpleNode1.dump("ThrowStatement", stringWriter0);
      SimpleNode simpleNode2 = new SimpleNode(47);
      simpleNode2.dump("qh0", stringWriter0);
      assertEquals("<Modifiers>\n</Modifiers>\n<Modifiers>\n</Modifiers>\n", stringWriter0.toString());
  }
}
