/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 05:58:18 GMT 2018
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.SequenceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.13269142083987176
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte) (-27);
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)102;
      byteArray0[7] = (byte)68;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(byteArrayInputStream0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("iDDi\u0000\u0000");
      BufferedCustomInputStream bufferedCustomInputStream2 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)68, true);
      bufferedCustomInputStream0.available();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream2, mockFileOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream2, mockPrintStream0);
      base64Decoder0.decodeStream();
      base64Decoder1.decodeStream();
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder1.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder3 = new Base64Decoder(bufferedCustomInputStream1, mockPrintStream0);
      base64Decoder3.decodeStream();
      base64Decoder3.decodeStream();
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis((byte)26);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.14999492361041503
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte)102;
      byteArray0[5] = (byte)102;
      byteArray0[6] = (byte)102;
      byteArray0[7] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(byteArrayInputStream1);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("\u0000\u0001\u0001D\u0001DD");
      BufferedCustomInputStream bufferedCustomInputStream2 = new BufferedCustomInputStream(byteArrayInputStream1, (byte)10, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream2, mockFileOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("\u0000\u0001\u0001D\u0001DD");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Newzgrabber.verbose = true;
      base64Decoder0.decodeStream();
      FileSystemHandling.createFolder(evoSuiteFile0);
      base64Decoder1.decodeStream();
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream1, mockFileOutputStream0);
      base64Decoder2.decodeStream();
      base64Decoder0.ProgressSet = false;
      base64Decoder1.decodeStream();
      base64Decoder2.decodeStream();
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis(811L);
      base64Decoder1.decodeStream();
      assertEquals(3L, base64Decoder1.getLineCount());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.25731864054383163
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte)63;
      byteArray0[5] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      bufferedCustomInputStream0.setRemoveCarriages(true);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("\u0000\u0001\u0001D\u0001DD");
      bufferedCustomInputStream0.readLine();
      mockFileOutputStream0.write(byteArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder0.decodeStream();
      bufferedCustomInputStream0.setTempfile("\u0000\u0001\u0001D\u0001DD");
      MockFileOutputStream mockFileOutputStream1 = new MockFileOutputStream("?t&<");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        mockPrintStream0.print((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.1425058673927378
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)68;
      byteArray0[4] = (byte)63;
      byteArray0[5] = (byte)63;
      byteArray0[6] = (byte)68;
      byteArray0[7] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("\u0000\u0001\u0001D\u0001DD");
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder0.decodeStream();
      MockFileOutputStream mockFileOutputStream1 = null;
      try {
        mockFileOutputStream1 = new MockFileOutputStream((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.1461447460085638
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)68;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)68;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)68;
      byteArray0[5] = (byte)68;
      byteArray0[5] = (byte)68;
      byteArray0[7] = (byte)105;
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)10;
      byteArray1[1] = (byte)105;
      byteArray1[2] = (byte)68;
      byteArray1[3] = (byte)68;
      byteArray1[4] = (byte)105;
      byteArray1[5] = (byte)10;
      byteArray1[7] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("\u0000\u0001\u0001D\u0001DD");
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder0.decodeStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      // Undeclared exception!
      try { 
        mockPrintStream0.print((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)102;
      byteArray0[3] = (byte)46;
      byteArray0[4] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("\u0000\u0001\u0001D\u0001DD");
      BufferedCustomInputStream bufferedCustomInputStream2 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)55, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream1, mockFileOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream2, mockFileOutputStream0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("\u0000\u0001\u0001D\u0001DD");
      FileSystemHandling.createFolder(evoSuiteFile0);
      base64Decoder1.decodeStream();
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder1.decodeStream();
      base64Decoder1.decodeStream();
      Base64Decoder base64Decoder3 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      base64Decoder1.decodeStream();
      assertEquals(1L, base64Decoder1.getLineCount());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("\u0000\u0001\u0001D\u0001DD");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "\"");
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)68;
      byteArray0[1] = (byte)63;
      byteArray0[5] = (byte)63;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("\u0000\u0001\u0001D\u0001DD");
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(byteArrayInputStream1);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      Newzgrabber.IsBatch = true;
      base64Decoder0.decodeStream();
      mockFileOutputStream0.write(byteArray0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);
      char[] charArray0 = new char[0];
      mockPrintStream0.print(charArray0);
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis(6L);
      System.setCurrentTimeMillis((byte)68);
      System.setCurrentTimeMillis(13L);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte)10;
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)43;
      byteArray1[2] = (byte)43;
      byteArray1[3] = (byte)43;
      byteArray1[4] = (byte)10;
      byte byte0 = (byte) (-79);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(bufferedInputStream0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("tD~RqnzB1&`RYWUo*");
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder0.decodeStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);
      // Undeclared exception!
      try { 
        mockPrintStream0.print((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(sequenceInputStream0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("$K($y[n`");
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "$K($y[n`");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("\u0000\u0001\u0001D\u0001DD");
      FileSystemHandling.createFolder(evoSuiteFile0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(sequenceInputStream0, false);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream1, mockFileOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      byteArrayInputStream0.mark((byte)46);
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream1, mockFileOutputStream0);
      base64Decoder1.decodeStream();
      assertFalse(base64Decoder1.equals((Object)base64Decoder0));
  }
}
