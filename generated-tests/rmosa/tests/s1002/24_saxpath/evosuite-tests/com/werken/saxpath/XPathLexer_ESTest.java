/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 05:30:07 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.7530539077753735
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<A75pU6Aa?!");
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<A75pU6Aa?!");
      xPathLexer0.consume(61);
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<A75pU6Aa?!");
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<A75pU6Aa?!");
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<A75pU6Aa?!");
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.7164516354046382
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6nx<;K5rwE/TY7<D$&");
      Token token0 = xPathLexer0.equals();
      assertEquals("6", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("nx", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("!<");
      xPathLexer1.and();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(23, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!A%K");
      Token token0 = xPathLexer0.plus();
      assertEquals("!", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals("A", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("%K", token2.getTokenText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<A75pU6Aa?!");
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6105337616386314
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":4z{");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.literal();
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<A75pU6Aa?!");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<A75pU6Aa?!");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("<A", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("75", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6105337616386313
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<A75pU6Aa?!");
      xPathLexer0.doubleColon();
      xPathLexer0.consume((-43));
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!A%K");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.7884645317810453
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.726557501493486
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!A%K");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("A", token1.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.7172048010679642
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<A75pU6Aa?!");
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!A%K");
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.747812487748201
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[w?/++U)");
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1436953069440143
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Fq0{<4(Ku>A@8");
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.minus();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (6) (q)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("0{", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.rightParen();
      assertEquals("K", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      char char0 = xPathLexer0.LA(3221);
      assertEquals('\uFFFF', char0);
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("u", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(">", token5.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(13, int0);
      
      xPathLexer0.consume(3221);
      boolean boolean0 = xPathLexer0.hasMoreChars();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      
      boolean boolean1 = xPathLexer0.isIdentifierStartChar('Q');
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6497265626321663
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":0z{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("0z", token1.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.48970870385881915
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!A%K");
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3759040520550323
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.7619471569286802
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mq0:o,*[");
      XPathLexer xPathLexer1 = new XPathLexer(".8nZ");
      XPathLexer xPathLexer2 = new XPathLexer(".8nZ");
      XPathLexer xPathLexer3 = new XPathLexer("mq0:o,*[");
      xPathLexer3.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer("{A");
      Token token0 = xPathLexer4.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("{", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(".8", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1804498034990776
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("osV>?");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("osV>?");
      xPathLexer1.and();
      xPathLexer0.number();
      xPathLexer1.or();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.8589267109059479
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("an<n");
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.literal();
      xPathLexer0.literal();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v)`)(du(`9sY");
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("v)`)(du(`9sY");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("v", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LY6dbm_`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("LY6dbm_", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("`", token1.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7;gFYB}");
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.88040269380459
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":.3El%Q");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer(":.3El%Q");
      XPathLexer xPathLexer2 = new XPathLexer(":.3El%Q");
      Token token0 = xPathLexer2.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals(":.", token1.getTokenText());
      
      Token token2 = xPathLexer2.nextToken();
      assertEquals(31, token2.getTokenType());
      assertEquals(".3", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("3", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aMnn");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&y<d IL#_");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("&y<d IL#_", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("&", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.9667484185981872
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ooV>>");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.8924853529456784
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mq0:o,*[");
      XPathLexer xPathLexer1 = new XPathLexer(".8nZ");
      XPathLexer xPathLexer2 = new XPathLexer(".8nZ");
      XPathLexer xPathLexer3 = new XPathLexer("mq0:o,*[");
      Token token0 = xPathLexer3.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      xPathLexer3.consume(55);
      XPathLexer xPathLexer4 = new XPathLexer("{A");
      Token token1 = xPathLexer4.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("{", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(31, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      assertEquals("nZ", token3.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9Ma");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("9", token0.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.401635230796762
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0313928754067714
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ier>%=1t>i6V=Ix");
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer(" 3Xn3@xY`/'ELeS7t");
      xPathLexer1.setXPath("Ier>%=1t>i6V=Ix");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer(" 3Xn3@xY`/'ELeS7t");
      xPathLexer2.rightParen();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("Ier>%=1t>i6V=Ix");
      Token token0 = xPathLexer3.div();
      assertNull(token0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.3215187929453711
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".4G\"oB?VUK[^");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("4", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("G", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.8466584464538927
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HtX/*rp>HWA0s7>jw");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("H", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("tX/*rp>HWA0s7>jw", token2.getTokenText());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.9173225404601595
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0281841050243032
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".4G\"oB`VOK[^");
      xPathLexer0.colon();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.8997632779707627
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1KfSk");
      XPathLexer xPathLexer1 = new XPathLexer("0w!");
      XPathLexer xPathLexer2 = new XPathLexer(".1KfSk");
      xPathLexer1.consume();
      xPathLexer2.and();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      Token token1 = xPathLexer2.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals(".1", token1.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[w?/++U)");
      Token token0 = xPathLexer0.not();
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("?/", token2.getTokenText());
      assertEquals(12, token2.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!F.");
      xPathLexer0.slashes();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.minus();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.8234451931032151
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(2, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("(", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.8397790431467934
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("+<7/})");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dots();
      assertEquals("+", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("<7", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(11, token2.getTokenType());
      assertEquals("/", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.6363167161861817
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<:(2");
      Token token0 = xPathLexer0.dollar();
      assertEquals("<", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(1, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("2", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.5859405801126796
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":?+zL");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.8683462265946106
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1KfSk");
      XPathLexer xPathLexer1 = new XPathLexer("0w!");
      XPathLexer xPathLexer2 = new XPathLexer(".1KfSk");
      xPathLexer2.and();
      xPathLexer2.nextToken();
      xPathLexer1.nextToken();
      xPathLexer2.nextToken();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.4042247850735619
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".4G\"oB`VOK[^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".4", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      xPathLexer0.whitespace();
      xPathLexer0.or();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("o", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("B`VOK[^", token3.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("`VOK[^", token5.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.170745385193572
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@Nr'~ EcC");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("}$6wZs:{1fjE");
      XPathLexer xPathLexer2 = new XPathLexer("@Nr'~ EcC");
      Token token1 = xPathLexer2.notEquals();
      assertEquals("@N", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer2.nextToken();
      Token token2 = xPathLexer2.nextToken();
      assertEquals("", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Nr", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1220296869561062
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!A%K");
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.setXPath("RHJ");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X(M7)ev*1:')B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("X", token0.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CVO5");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("CVO5", token0.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":4z{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("4", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h/^ceK*^h2thZE~s(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.3032302878660915
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":.3El%Q");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer(":.3El%Q");
      XPathLexer xPathLexer2 = new XPathLexer(":.3El%Q");
      Token token0 = xPathLexer2.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(":.", token1.getTokenText());
      
      xPathLexer2.consume();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("3", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("l", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("%Q", token5.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^-%]+S`]cC<f>");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("^-%]+S`]cC<f>", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("^-%]+S`]cC<f>", token1.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.747812487748201
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[w?/++U)");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("w", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("IIa'IR`@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("IIa", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")S q");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("S q", token1.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0173580627080328
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+<7/})");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.setXPath(") (");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("|$;#jio$MT#N7`{t`");
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer(".7*d:gMeoNVS%");
      Token token2 = xPathLexer2.identifierOrOperatorName();
      assertEquals(".7", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals(20, token3.getTokenType());
      assertEquals("*", token3.getTokenText());
      
      Token token4 = xPathLexer1.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.7391735003405273
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1KfSk");
      XPathLexer xPathLexer1 = new XPathLexer("0w!");
      XPathLexer xPathLexer2 = new XPathLexer(".1KfSk");
      Token token0 = xPathLexer2.rightBracket();
      assertEquals(".", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer2.and();
      xPathLexer1.nextToken();
      Token token1 = xPathLexer2.nextToken();
      assertEquals("1", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0849871545661693
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@Nr'~ EcC");
      XPathLexer xPathLexer1 = new XPathLexer("}$6wZs:{1fjE");
      XPathLexer xPathLexer2 = new XPathLexer("@Nr'~ EcC");
      xPathLexer2.nextToken();
      Token token0 = xPathLexer2.nextToken();
      assertEquals("Nr", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(16, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("eA{rTX7Bx5L+li]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("eA", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_H&F|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("_H", token0.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.8580041886729601
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.setXPath("iSG");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("iSG", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.9038738447733414
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7;gFYB}");
      xPathLexer0.leftParen();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.1714490349447673
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`@[9irAX0Lz");
      XPathLexer xPathLexer1 = new XPathLexer("!AK");
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("AK", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("d", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.9556050484378131
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+<7/})");
      xPathLexer0.leftParen();
      xPathLexer0.setXPath(") (");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("|$;#jio$MT#N7`{t`");
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer(".7*d:gMeoNVS%");
      xPathLexer2.nextToken();
      xPathLexer2.whitespace();
      Token token0 = xPathLexer2.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.8822117420464161
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("o", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#d`3@[1urAX0Lz");
      XPathLexer xPathLexer1 = new XPathLexer("#d`3@[1urAX0Lz");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#d`3@[1urAX0Lz", token0.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]PH)EshR}F=@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("PH)EshR}F=@", token1.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=kL");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("kL", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!w=#;9TjK1|Wy");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("w", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("=", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.9449568586861706
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":?+zL");
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-{7R}5hLb");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("-", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$.un?mS+OJ5yJ0{{");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D");
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("D", token0.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U5liS<CvR@o");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("U5liS", token0.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.273896095774466
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HtX/*rp>HWA0s7>jw");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("t", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token2);
      assertEquals("X", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("/", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("HtX/*rp>HWA0s7>jw");
      xPathLexer0.mod();
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("HtX", token5.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.474323529773132
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mq0:o,*[");
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("q0", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p4 &E");
      XPathLexer xPathLexer1 = new XPathLexer("u+!3.1BO)QYp)r");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.nextToken();
      Token token0 = xPathLexer2.nextToken();
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T0o5YtVaY%");
      XPathLexer xPathLexer1 = new XPathLexer("T0o5YtVaY%");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("T0o5YtVaY", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("%", token1.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("osV>?");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.101833500726617
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7;gFYB}");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("g", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("FYB", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("}", token4.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.5223173615714372
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Fq0{<4(Ku>A@8");
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.minus();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.nextToken();
      Token token2 = xPathLexer0.dots();
      xPathLexer0.nextToken();
      token2.toString();
      Token token3 = xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      token3.toString();
      token3.toString();
      token1.toString();
      xPathLexer0.number();
      token1.toString();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.and();
      assertNull(token4);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.2726562911733093
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-{7R}5hLb");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.9952178252036665
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("an<n");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.literal();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fn-kZ");
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.919963638596316
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6nx<;K5rwE/TY7<D$&");
      Token token0 = xPathLexer0.identifier();
      assertEquals("6nx", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("!<");
      xPathLexer1.relationalOperator();
      xPathLexer1.and();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      xPathLexer0.div();
      xPathLexer1.div();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MSZpg%{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("MSZpg", token0.getTokenText());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.4042247850735616
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".4G\"oB`VOK[^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.at();
      assertEquals("G", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.and();
      Token token2 = xPathLexer0.colon();
      assertEquals("\"", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("B`VOK[^", token4.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("69x<;K5rwE/TY7<D$&");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("69x<;K5rwE/TY7<D$&");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("69", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("x<;K5rwE/TY7<D$&", token1.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.2097189424266088
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("osV>?");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("osV>?");
      xPathLexer1.and();
      xPathLexer1.notEquals();
      xPathLexer1.nextToken();
      xPathLexer0.number();
      xPathLexer1.or();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.7164516354046382
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6nx<;K5rwE/TY7<D$&");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("6", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("nx", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("!<");
      xPathLexer1.and();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.892149599639465
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.3959483433078577
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dots();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(13, token0.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.3532773437581187
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".4G\"oB`VOK[^");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.at();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.888228971637015
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      Token token0 = xPathLexer0.star();
      assertEquals("c", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("o", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals("", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.6477141116801064
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cFWCU");
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (22) (cF)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.minus();
      assertEquals("W", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.identifier();
      assertEquals("CU", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.and();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.number();
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.whitespace();
      Token token9 = xPathLexer0.whitespace();
      assertEquals((-2), token9.getTokenType());
      assertEquals("", token9.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume(48);
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.542249642897501
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("+<7/})");
      xPathLexer0.setXPath("(2;,UxAV~s");
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals("(", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("2;", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(",", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("UxAV", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.8729997925294618
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!F.");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("F.", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("iyY|WV");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(17, token4.getTokenType());
      assertEquals("|", token4.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.1220296869561062
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!A%K");
      xPathLexer0.div();
      xPathLexer0.setXPath("|6,`lt|c9}(n=SW ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("|", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.7172048010679642
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y^8t^Hs`DW6>FQpB");
      XPathLexer xPathLexer1 = new XPathLexer("Y^8t^Hs`DW6>FQpB");
      XPathLexer xPathLexer2 = new XPathLexer("0w!");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("Y", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.273896095774466
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HtX/*rp>HWA0s7>jw");
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("HtX/*rp>HWA0s7>jw");
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.3759040520550325
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8WwS$&&7RTc8tRM%yaX");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("WwS$&&7RTc8tRM%yaX", token1.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.9615880684586899
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1KfSk");
      XPathLexer xPathLexer1 = new XPathLexer("0w!");
      XPathLexer xPathLexer2 = new XPathLexer(".1KfSk");
      Token token0 = xPathLexer2.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals(".1", token0.getTokenText());
      
      Token token1 = xPathLexer2.leftBracket();
      assertEquals("K", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer2.and();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("0", token2.getTokenText());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("fSk", token3.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.6105337616386313
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<A75pU6Aa?!");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("<A", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("5", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.2097189424266088
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("osV>?");
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("osV>?");
      xPathLexer1.and();
      xPathLexer0.number();
      xPathLexer1.or();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J^]3VEUSJR_?}7Ez::");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("J", token0.getTokenText());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~j{@_%V7p5zfpft");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("~j{@_%V7p5zfpft", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("~", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("j{@_%V7p5zfpft", token2.getTokenText());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.8589267109059479
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("an<n");
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.42677466305161
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("anQ7");
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.div();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.7283787659297727
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mq0:o,*[");
      XPathLexer xPathLexer1 = new XPathLexer(".8nZ");
      XPathLexer xPathLexer2 = new XPathLexer(".8nZ");
      Token token0 = xPathLexer1.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("mq0:o,*[");
      XPathLexer xPathLexer4 = new XPathLexer("{A");
      Token token1 = xPathLexer4.leftBracket();
      assertEquals("{", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("8", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O:'bY,k#`IV");
      XPathLexer xPathLexer1 = new XPathLexer("O:'bY,k#`IV");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("O", token0.getTokenText());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.943539808274277
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Zf'&Z~>[");
      Token token0 = xPathLexer0.literal();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.dollar();
      token0.toString();
      xPathLexer1.setPreviousToken(token1);
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("[ (27) (f'&)");
      xPathLexer1.number();
      xPathLexer1.identifierOrOperatorName();
      Token token2 = xPathLexer1.div();
      assertNull(token2);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mq0:o,*[");
      XPathLexer xPathLexer1 = new XPathLexer(".8nZ");
      XPathLexer xPathLexer2 = new XPathLexer("b");
      xPathLexer0.and();
      xPathLexer2.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.497695106125707
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("anQ7");
      xPathLexer0.and();
      xPathLexer0.at();
      xPathLexer0.consume(0);
      xPathLexer0.setXPath("qmo1KywSYY KY(P");
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("anQ7");
      xPathLexer1.whitespace();
      xPathLexer1.mod();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HtX/*rp>HWA0s7>jw");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("t", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token2);
      assertEquals("X/", token2.getTokenText());
      assertEquals(12, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("*", token4.getTokenText());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("r", token5.getTokenText());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".4G\"oB`VOK[^");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("<=");
      XPathLexer xPathLexer2 = new XPathLexer(".4G\"oB`VOK[^");
      xPathLexer2.and();
      Token token0 = xPathLexer2.nextToken();
      assertEquals(".4", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("<=", token1.getTokenText());
      assertEquals(8, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<=H-@*");
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("<=H-@*");
      xPathLexer1.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer1.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Zf'&Z~>[");
      XPathLexer xPathLexer1 = new XPathLexer("m!=7+-nD");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.nextToken();
      assertEquals("!=", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Zf", token1.getTokenText());
      
      xPathLexer1.number();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("m!=7+-nD");
      xPathLexer1.and();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("m!=7+-nD");
      XPathLexer xPathLexer4 = new XPathLexer("m!=7+-nD");
      Token token3 = xPathLexer4.star();
      assertEquals("m", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      xPathLexer4.or();
      xPathLexer2.identifierOrOperatorName();
      Token token4 = xPathLexer4.nextToken();
      assertEquals(22, token4.getTokenType());
  }
}
