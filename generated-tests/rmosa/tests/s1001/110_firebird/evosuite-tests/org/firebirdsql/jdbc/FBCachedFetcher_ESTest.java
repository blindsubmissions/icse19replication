/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 05:33:17 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.NoSuchElementException;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.SynchronousQueue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.GDS;
import org.firebirdsql.gds.XSQLDA;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.AbstractIscTrHandle;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.jni.isc_db_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBDriverNotCapableException;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][9];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)112;
      byteArray1[1] = (byte)107;
      byteArray1[2] = (byte)17;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte)107;
      byteArray2[1] = (byte)17;
      byteArray2[2] = (byte)112;
      byteArray2[3] = (byte)112;
      byteArray2[4] = (byte)107;
      byteArray2[5] = (byte)112;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte)107;
      byteArray3[1] = (byte)112;
      byteArray3[2] = (byte)112;
      byteArray3[3] = (byte)112;
      byteArray3[4] = (byte)107;
      byteArray3[5] = (byte)17;
      byteArray3[6] = (byte)107;
      byteArray0[2] = byteArray3;
      linkedList0.addLast(byteArray0);
      byte[][] byteArray4 = new byte[0][0];
      linkedList0.add(byteArray4);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(fBCachedFetcher0.isFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][9];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)112;
      byteArray1[1] = (byte)107;
      byteArray1[2] = (byte)17;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte)107;
      byteArray2[1] = (byte)17;
      byteArray2[2] = (byte)112;
      byteArray2[3] = (byte)112;
      byteArray2[4] = (byte)107;
      byteArray2[5] = (byte)112;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte)107;
      byteArray3[1] = (byte)112;
      byteArray3[2] = (byte)112;
      byteArray3[3] = (byte)112;
      byteArray3[4] = (byte)107;
      byteArray3[5] = (byte)17;
      byteArray3[6] = (byte)107;
      byteArray0[2] = byteArray3;
      linkedList0.addLast(byteArray0);
      byte[][] byteArray4 = new byte[0][0];
      linkedList0.add(byteArray4);
      LinkedBlockingDeque<String> linkedBlockingDeque0 = new LinkedBlockingDeque<String>();
      linkedList0.retainAll(linkedBlockingDeque0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      assertTrue(fBCachedFetcher0.isLast());
      
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher1.isFirst());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4102580990073954
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      GDSHelper gDSHelper0 = null;
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      int int0 = 417;
      int int1 = (-218);
      isc_stmt_handle_impl0.setRsrId((-218));
      XSQLDA xSQLDA0 = new XSQLDA(417);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[1];
      int[] intArray0 = new int[8];
      intArray0[0] = 417;
      intArray0[1] = 417;
      intArray0[2] = (-218);
      intArray0[3] = 417;
      intArray0[4] = 417;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.previous();
      intArray0[5] = 417;
      intArray0[6] = (-2082);
      byte[][] byteArray0 = new byte[7][8];
      byteArray0[0] = null;
      byteArray0[1] = null;
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)52;
      byteArray1[1] = (byte)95;
      byteArray1[2] = (byte)123;
      byteArray1[3] = (byte)29;
      byteArray1[4] = (byte) (-49);
      byteArray0[2] = byteArray1;
      byteArray0[3] = null;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte) (-49);
      byteArray2[1] = (byte)29;
      byteArray2[2] = (byte)52;
      byteArray0[4] = byteArray2;
      byteArray0[5] = null;
      byteArray0[6] = null;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA(394);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[1];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLDA0.sqlvar = xSQLVARArray0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-79);
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte)38;
      byteArray0[4] = (byte)100;
      byteArray0[5] = (byte)112;
      byteArray0[6] = (byte)34;
      byteArray0[8] = (byte) (-112);
      xSQLVAR0.sqldata = byteArray0;
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, fBConnectionRequestInfo0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(gDSHelper0, 394, (-2308), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: FBDriverNotCapableException");
      
      } catch(FBDriverNotCapableException e) {
         //
         // Result set is TYPE_FORWARD_ONLY
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9507489270509151
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setRsrId((-218));
      XSQLDA xSQLDA0 = new XSQLDA(417);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[1];
      int[] intArray0 = new int[8];
      intArray0[0] = 417;
      intArray0[1] = 417;
      intArray0[2] = (-218);
      intArray0[3] = 417;
      intArray0[4] = 417;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.previous();
      intArray0[5] = 417;
      intArray0[6] = (-2082);
      intArray0[7] = 417;
      xSQLDA0.ioLength = intArray0;
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLDA0.sqlvar = xSQLVARArray0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher((GDSHelper) null, (-218), (-218), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.first();
      // Undeclared exception!
      try { 
        linkedList0.remove();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.absolute(1770);
      try { 
        fBCachedFetcher0.absolute((-1));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA(394);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[1];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLDA0.sqlvar = xSQLVARArray0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, fBConnectionRequestInfo0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(gDSHelper0, 394, (-2308), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2052156773503675
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA(382);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[1];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLVAR0.deepCopy();
      xSQLVAR0.sqlname = null;
      xSQLDA0.version = 0;
      xSQLDA0.sqlvar = xSQLVARArray0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_stmt_handle_impl0.setInSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.last();
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher((GDSHelper) null, (-208), (-208), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.698782989513801
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.last();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      byte[][] byteArray0 = new byte[2][3];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-65);
      byteArray1[1] = (byte)67;
      byteArray1[2] = (byte)68;
      byteArray1[3] = (byte) (-21);
      byteArray1[4] = (byte) (-61);
      byteArray1[5] = (byte)10;
      byteArray1[6] = (byte) (-2);
      byteArray1[7] = (byte)29;
      byteArray1[8] = (byte) (-107);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[0];
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      boolean boolean0 = fBCachedFetcher0.relative((-1241));
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4270610433807245
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[2][3];
      byte[] byteArray1 = new byte[9];
      linkedList0.pollFirst();
      byteArray1[0] = (byte) (-65);
      byteArray1[1] = (byte)67;
      byteArray1[2] = (byte)68;
      byteArray1[3] = (byte) (-21);
      byteArray1[4] = (byte) (-61);
      byteArray1[5] = (byte)10;
      byteArray1[6] = (byte) (-2);
      byteArray1[7] = (byte)29;
      byteArray1[8] = (byte) (-107);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[0];
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative((-1241));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5247073930301436
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize(86);
      assertEquals(86, fBCachedFetcher0.getFetchSize());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4102580990073956
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      GDSHelper gDSHelper0 = null;
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      int int0 = (-218);
      isc_stmt_handle_impl0.setRsrId((-218));
      XSQLDA xSQLDA0 = new XSQLDA(417);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[1];
      int[] intArray0 = new int[8];
      intArray0[0] = 417;
      intArray0[1] = 417;
      intArray0[2] = (-218);
      intArray0[3] = 417;
      intArray0[4] = 417;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.previous();
      intArray0[5] = 417;
      intArray0[6] = (-2082);
      intArray0[7] = 417;
      xSQLDA0.ioLength = intArray0;
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      byte[][] byteArray0 = new byte[9][5];
      byteArray0[0] = null;
      byteArray0[1] = null;
      byteArray0[2] = null;
      byteArray0[3] = null;
      byteArray0[4] = null;
      byteArray0[5] = null;
      byte[] byteArray1 = new byte[0];
      byteArray0[6] = byteArray1;
      byteArray0[7] = null;
      byteArray0[8] = null;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1185405956431658
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      GDSHelper gDSHelper0 = null;
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      int int0 = 417;
      int int1 = (-218);
      isc_stmt_handle_impl0.setRsrId((-218));
      XSQLDA xSQLDA0 = new XSQLDA(417);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[1];
      int[] intArray0 = new int[8];
      intArray0[0] = 417;
      intArray0[1] = 417;
      intArray0[2] = (-218);
      intArray0[3] = 417;
      intArray0[4] = 417;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(58);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      XSQLDA xSQLDA1 = new XSQLDA(0);
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA1);
      xSQLDA1.version = 263;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_stmt_handle_impl0.setExecutionPlan("You cannot position to the row 0 with absolute() method.");
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLDA1.sqlvar, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6681739719973967
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[4];
      byte[][] byteArray1 = new byte[5][7];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte)76;
      byteArray2[1] = (byte)76;
      byteArray2[2] = (byte)76;
      byteArray1[2] = byteArray2;
      byteArray1[3] = byteArray0;
      linkedList0.add(byteArray1);
      linkedList0.add(byteArray1);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      SynchronousQueue<String> synchronousQueue0 = new SynchronousQueue<String>();
      linkedList0.removeAll(synchronousQueue0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isEmpty();
      assertEquals(1, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[4];
      byte[][] byteArray1 = new byte[3][7];
      byte[] byteArray2 = new byte[4];
      byteArray2[1] = (byte)76;
      linkedList0.add(byteArray1);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.updateRow(byteArray1);
      assertTrue(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[4];
      byte[][] byteArray1 = new byte[5][7];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byte[] byteArray2 = new byte[4];
      byteArray2[1] = (byte)76;
      byteArray2[3] = (byte)76;
      byteArray1[2] = byteArray2;
      byteArray1[1] = byteArray0;
      linkedList0.add(byteArray1);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      SynchronousQueue<String> synchronousQueue0 = new SynchronousQueue<String>();
      synchronousQueue0.parallelStream();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.next();
      boolean boolean0 = fBCachedFetcher0.previous();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      XSQLDA xSQLDA1 = new XSQLDA(0);
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA1);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 1, 1, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[1];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLDA0.sqlvar = xSQLVARArray0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 0, 1, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      XSQLDA xSQLDA1 = new XSQLDA(0);
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA1);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 1, 0, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      XSQLDA xSQLDA1 = new XSQLDA(0);
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA1);
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 0, 1, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA(394);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[1];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLDA0.sqlvar = xSQLVARArray0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, fBConnectionRequestInfo0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(gDSHelper0, 394, (-2308), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: FBDriverNotCapableException");
      
      } catch(FBDriverNotCapableException e) {
         //
         // Result set is TYPE_FORWARD_ONLY
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA(394);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[1];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLDA0.sqlvar = xSQLVARArray0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, fBConnectionRequestInfo0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(gDSHelper0, 394, (-2308), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.isEmpty();
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: FBDriverNotCapableException");
      
      } catch(FBDriverNotCapableException e) {
         //
         // Result set is TYPE_FORWARD_ONLY
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      int int0 = 394;
      XSQLDA xSQLDA0 = new XSQLDA(394);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[1];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      xSQLDA0.sqlvar = xSQLVARArray0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, fBConnectionRequestInfo0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(gDSHelper0, 394, (-2308), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.isEmpty();
      try { 
        fBCachedFetcher0.relative(0);
        fail("Expecting exception: FBDriverNotCapableException");
      
      } catch(FBDriverNotCapableException e) {
         //
         // Result set is TYPE_FORWARD_ONLY
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA(394);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[1];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLDA0.sqlvar = xSQLVARArray0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_stmt_handle_impl0.getTransaction();
      isc_stmt_handle_impl0.registerTransaction((AbstractIscTrHandle) null);
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, fBConnectionRequestInfo0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(gDSHelper0, 394, (-2308), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.isEmpty();
      try { 
        fBCachedFetcher0.absolute((-1607));
        fail("Expecting exception: FBDriverNotCapableException");
      
      } catch(FBDriverNotCapableException e) {
         //
         // Result set is TYPE_FORWARD_ONLY
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }
}
