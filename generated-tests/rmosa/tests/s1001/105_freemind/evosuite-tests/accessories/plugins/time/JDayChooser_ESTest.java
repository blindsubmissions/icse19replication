/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 05:20:32 GMT 2018
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import accessories.plugins.time.JYearChooser;
import freemind.controller.Controller;
import freemind.modes.browsemode.BrowseController;
import freemind.modes.browsemode.BrowseMode;
import freemind.modes.common.plugins.MapNodePositionHolderBase;
import freemind.modes.filemode.FileController;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.HierarchyListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseWheelEvent;
import java.time.LocalDate;
import java.time.Month;
import java.util.Date;
import java.util.Locale;
import javax.swing.DebugGraphics;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.JWindow;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuKeyEvent;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import javax.swing.text.DefaultCaret;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import javax.xml.transform.stream.StreamSource;
import org.apache.batik.svggen.DefaultExtensionHandler;
import org.apache.batik.svggen.ExtensionHandler;
import org.apache.batik.svggen.ImageHandlerBase64Encoder;
import org.apache.batik.svggen.ImageHandlerJPEGEncoder;
import org.apache.batik.svggen.SVGGeneratorContext;
import org.apache.batik.svggen.SVGGraphics2D;
import org.apache.fop.fonts.FontInfo;
import org.apache.fop.pdf.PDFDocument;
import org.apache.fop.pdf.PDFICCStream;
import org.apache.fop.pdf.PDFPage;
import org.apache.fop.pdf.PDFResources;
import org.apache.fop.svg.PDFDocumentGraphics2D;
import org.apache.fop.svg.PDFGraphics2D;
import org.apache.xalan.templates.StylesheetRoot;
import org.apache.xalan.templates.WhiteSpaceInfo;
import org.apache.xalan.transformer.TransformerImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.parsers.CachingParserPool;
import org.apache.xerces.parsers.NonValidatingConfiguration;
import org.apache.xerces.parsers.SecurityConfiguration;
import org.apache.xerces.util.SymbolTable;
import org.apache.xerces.util.XMLGrammarPoolImpl;
import org.apache.xml.dtm.DTMManager;
import org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM;
import org.apache.xml.utils.DefaultErrorHandler;
import org.apache.xml.utils.XMLStringFactoryDefault;
import org.apache.xpath.XPathContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.openstreetmap.gui.jmapviewer.JMapViewer;
import org.openstreetmap.gui.jmapviewer.MemoryTileCache;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.630470240160676
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(0);
      jDayChooser0.drawDays();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      ImageHandlerBase64Encoder imageHandlerBase64Encoder0 = new ImageHandlerBase64Encoder();
      jDayChooser0.setAlwaysFireDayProperty(false);
      DefaultExtensionHandler defaultExtensionHandler0 = new DefaultExtensionHandler();
      SVGGeneratorContext sVGGeneratorContext0 = SVGGraphics2D.buildSVGGeneratorContext(pSVIDocumentImpl0, imageHandlerBase64Encoder0, defaultExtensionHandler0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(sVGGeneratorContext0, false);
      jDayChooser_DecoratorButton0.paint(sVGGraphics2D0);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6717601208463124
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setDecorationBordersVisible(true);
      jDayChooser0.getLocale();
      jDayChooser0.setYear(1090);
      assertTrue(jDayChooser0.isDayBordersVisible());
      
      jDayChooser0.setDayBordersVisible(false);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6653015383886753
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "zIKj%`");
      JDayChooser jDayChooser0 = new JDayChooser(false);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(0);
      jDayChooser0.drawDays();
      jDayChooser0.setEnabled(true);
      JDayChooser jDayChooser1 = new JDayChooser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser1.new DecoratorButton();
      assertFalse(jDayChooser1.isWeekOfYearVisible());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6266116706270757
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jDayChooser_DecoratorButton0, 343, 0L, 343, 12, 12, 12, 12, 343, true, 343, 12, 343);
      jDayChooser0.getToolTipLocation(mouseWheelEvent0);
      jDayChooser0.setMaxDayCharacters(23);
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = false;
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      ActionEvent actionEvent0 = new ActionEvent(jDayChooser_DecoratorButton0, 4571, " \t\n\r\f", 10108);
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7072400880413086
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      jDayChooser_DecoratorButton0.paint(debugGraphics0);
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.day = 31;
      Color color0 = jDayChooser0.getDecorationBackgroundColor();
      jDayChooser0.setDecorationBackgroundColor(color0);
      jDayChooser0.setEnabled(false);
      assertFalse(jDayChooser0.isDayBordersVisible());
      
      jDayChooser0.updateUI();
      assertFalse(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6304702401606765
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "9VArhK[-P4NO4EY");
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JButton[] jButtonArray0 = new JButton[5];
      JButton jButton0 = jDayChooser0.selectedDay;
      jButtonArray0[0] = null;
      JButton jButton1 = new JButton();
      jButtonArray0[1] = jButton1;
      JButton jButton2 = new JButton();
      jButtonArray0[2] = jButton2;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      JButton jButton3 = new JButton("day", (Icon) null);
      jButtonArray0[3] = jButton3;
      jDayChooser0.getSelectedDay();
      jButtonArray0[4] = null;
      jDayChooser0.weeks = jButtonArray0;
      jDayChooser0.maxDayCharacters = (-2158);
      // Undeclared exception!
      try { 
        jDayChooser0.setMonth((-2569));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.842258305555011
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setAutoscrolls(false);
      JMonthChooser jMonthChooser0 = new JMonthChooser();
      jDayChooser0.setMonthChooser(jMonthChooser0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 35, 35, 35, 35, 'C');
      jDayChooser0.keyPressed(keyEvent0);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(39, 39, 447, 1102, 43);
      jDayChooser0.setCalendar(mockGregorianCalendar0);
      KeyEvent keyEvent1 = new KeyEvent(jDayChooser0, 17, 39, 1949, 39, 'u');
      keyEvent1.paramString();
      jDayChooser0.keyPressed(keyEvent1);
      jDayChooser0.setYear(39);
      jDayChooser0.setEnabled(false);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      locale0.getExtension('C');
      jDayChooser0.setLocale(locale0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      jDayChooser_DecoratorButton0.paint(debugGraphics0);
      jDayChooser0.drawDays();
      jDayChooser0.setDay((-668));
      System.setCurrentTimeMillis(10L);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "14");
      JDayChooser jDayChooser0 = new JDayChooser(false);
      MemoryTileCache memoryTileCache0 = new MemoryTileCache();
      JMapViewer jMapViewer0 = new JMapViewer(memoryTileCache0, (-1773));
      jDayChooser0.weekPanel = (JPanel) jMapViewer0;
      SystemColor systemColor0 = SystemColor.infoText;
      systemColor0.getColorSpace();
      Color.getColor("day", (Color) systemColor0);
      jDayChooser0.setSundayForeground(systemColor0);
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed((KeyEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.hasFocus();
      JYearChooser jYearChooser0 = new JYearChooser();
      JDayChooser jDayChooser1 = jYearChooser0.dayChooser;
      jDayChooser0.setWeekOfYearVisible(false);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getSundayForeground();
      jDayChooser0.isPaintingTile();
      int int0 = jDayChooser0.getDaysInMonth();
      assertEquals(28, int0);
      
      Locale locale0 = Locale.GERMANY;
      jDayChooser0.setLocale(locale0);
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.593621512459067
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.maxDayCharacters = (-2158);
      jDayChooser0.setMonth((-2569));
      jDayChooser0.setDay(0);
      jDayChooser0.drawDays();
      jDayChooser0.drawDays();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      int int0 = 1334;
      jDayChooser0.repaint(1334, 1334, 1334, 1334);
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.getDaysInMonth();
      jDayChooser0.getPropertyChangeListeners("Windows");
      int int1 = (-433);
      KeyEvent keyEvent0 = null;
      try {
        keyEvent0 = new KeyEvent(jDayChooser0, 28, 1334, (-433), 28, '\\', 1334);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid keyLocation
         //
         verifyException("java.awt.event.KeyEvent", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.repaint(0, 0, 0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)20;
      byteArray0[2] = (byte)20;
      byteArray0[2] = (byte)121;
      byteArray0[3] = (byte)121;
      byteArray0[5] = (byte)19;
      byteArray0[6] = (byte)121;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      jDayChooser0.getMaximumSize();
      jDayChooser0.getDaysInMonth();
      jDayChooser0.getPropertyChangeListeners("Windows");
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 28, (-2003L), (-433), 28, '\\', 0);
      jDayChooser0.keyTyped(keyEvent0);
      Color color0 = jDayChooser0.getDecorationBackgroundColor();
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) '\\';
      floatArray0[1] = (float) 0;
      floatArray0[2] = (float) (-433);
      // Undeclared exception!
      try { 
        color0.getComponents(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("java.awt.Color", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      SystemColor systemColor0 = SystemColor.inactiveCaptionText;
      jDayChooser0.setWeekdayForeground(systemColor0);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      boolean boolean0 = jDayChooser0.isDayBordersVisible();
      assertTrue(boolean0);
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.drawWeeks();
      jDayChooser0.getMouseWheelListeners();
      jDayChooser0.getDayPanel();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JColorChooser jColorChooser0 = Controller.getCommonJColorChooser();
      FocusEvent focusEvent0 = new FocusEvent(jColorChooser0, (-804), true);
      jDayChooser0.focusGained(focusEvent0);
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertFalse(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JYearChooser jYearChooser0 = jDayChooser0.yearChooser;
      jDayChooser0.setYearChooser((JYearChooser) null);
      SystemColor systemColor0 = SystemColor.textHighlight;
      JDayChooser jDayChooser1 = new JDayChooser(false);
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      ImageHandlerBase64Encoder imageHandlerBase64Encoder0 = new ImageHandlerBase64Encoder();
      System.setCurrentTimeMillis(2215L);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6994507830053567
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(0);
      jDayChooser0.drawDays();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.requestFocusInWindow();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      ImageHandlerBase64Encoder imageHandlerBase64Encoder0 = new ImageHandlerBase64Encoder();
      DefaultExtensionHandler defaultExtensionHandler0 = new DefaultExtensionHandler();
      SVGGeneratorContext sVGGeneratorContext0 = SVGGraphics2D.buildSVGGeneratorContext(pSVIDocumentImpl0, imageHandlerBase64Encoder0, defaultExtensionHandler0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(sVGGeneratorContext0, false);
      jDayChooser_DecoratorButton0.paint(sVGGraphics2D0);
      SystemColor systemColor0 = SystemColor.scrollbar;
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) 3;
      floatArray0[1] = (float) 3;
      floatArray0[2] = 200.0F;
      floatArray0[3] = (-4115.4727F);
      floatArray0[4] = (float) 0;
      floatArray0[5] = (float) 3;
      floatArray0[6] = (float) 0;
      floatArray0[7] = (float) 0;
      floatArray0[8] = (float) 3;
      systemColor0.getComponents(floatArray0);
      jDayChooser0.setDecorationBackgroundColor(systemColor0);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getMaxSelectableDate();
      BrowseMode browseMode0 = new BrowseMode();
      BrowseController browseController0 = null;
      try {
        browseController0 = new BrowseController(browseMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.ControllerAdapter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = "";
      stringArray0[0] = "";
      String string1 = "M_p|[_N/_";
      stringArray0[1] = "M_p|[_N/_";
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6665081787162883
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(0);
      jDayChooser0.drawDays();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      ImageHandlerBase64Encoder imageHandlerBase64Encoder0 = new ImageHandlerBase64Encoder();
      DefaultExtensionHandler defaultExtensionHandler0 = new DefaultExtensionHandler();
      SVGGeneratorContext sVGGeneratorContext0 = SVGGraphics2D.buildSVGGeneratorContext(pSVIDocumentImpl0, imageHandlerBase64Encoder0, defaultExtensionHandler0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(sVGGeneratorContext0, false);
      jDayChooser_DecoratorButton0.paint(sVGGraphics2D0);
      System.setCurrentTimeMillis(0L);
      JDayChooser jDayChooser1 = new JDayChooser(true);
      Color color0 = jDayChooser1.getWeekdayForeground();
      jDayChooser0.setDecorationBackgroundColor(color0);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.isPaintingForPrint();
      jDayChooser0.getInputContext();
      SystemColor systemColor0 = SystemColor.textHighlight;
      jDayChooser0.oldDayBackgroundColor = (Color) systemColor0;
      jDayChooser_DecoratorButton0.getDisabledSelectedIcon();
      float[] floatArray0 = new float[7];
      floatArray0[1] = 352.79703F;
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (-1059.0763F);
      floatArray0[5] = 0.0F;
      JColorChooser jColorChooser0 = Controller.getCommonJColorChooser();
      jColorChooser0.setPreviewPanel(jDayChooser_DecoratorButton0);
      jColorChooser0.getPreviewPanel();
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser_DecoratorButton0, (-1596), false);
      jDayChooser0.setFocus();
      jDayChooser0.focusLost(focusEvent0);
      jDayChooser0.setDayBordersVisible(true);
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JMonthChooser jMonthChooser0 = new JMonthChooser(false);
      jDayChooser0.isDecorationBackgroundVisible();
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.724854342364232
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setAutoscrolls(false);
      JMonthChooser jMonthChooser0 = new JMonthChooser();
      jDayChooser0.setMonthChooser(jMonthChooser0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 35, 35, 35, 35, 'C');
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.keyPressed(keyEvent0);
      KeyEvent keyEvent1 = new KeyEvent(jDayChooser0, 17, 39, 1949, 39, 'u');
      keyEvent1.paramString();
      jDayChooser0.keyPressed(keyEvent1);
      keyEvent1.setKeyCode((-283));
      Locale locale0 = new Locale("unknown type,keyCode=39,keyText=Right,keyChar='u',modifiers=Meta+Alt+Shift+Button1,extModifiers=Meta+Ctrl+Alt+Button1,keyLocation=KEY_LOCATION_UNKNOWN,rawCode=0,primaryLevelUnicode=0,scancode=0,extendedKeyCode=0x0");
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.paint((Graphics) null);
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.setFocus();
      jDayChooser0.setLocale(locale0);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.608820614830946
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setAutoscrolls(false);
      jDayChooser0.setVisible(false);
      jDayChooser0.setDay(3);
      jDayChooser0.setMaxDayCharacters(3);
      jDayChooser0.drawDays();
      jDayChooser0.drawDays();
      assertEquals(3, jDayChooser0.getDay());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.630431805133275
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      boolean boolean0 = false;
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getBackground();
      jDayChooser0.setDay(0);
      jDayChooser0.drawDays();
      jDayChooser0.setEnabled(true);
      jDayChooser0.setDay(1655);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      DefaultErrorHandler defaultErrorHandler0 = new DefaultErrorHandler(true);
      StylesheetRoot stylesheetRoot0 = new StylesheetRoot(defaultErrorHandler0);
      XPathContext xPathContext0 = null;
      int int0 = (-748);
      StreamSource streamSource0 = new StreamSource();
      TransformerImpl transformerImpl0 = new TransformerImpl(stylesheetRoot0);
      XMLStringFactoryDefault xMLStringFactoryDefault0 = new XMLStringFactoryDefault();
      SAX2RTFDTM sAX2RTFDTM0 = null;
      try {
        sAX2RTFDTM0 = new SAX2RTFDTM((DTMManager) null, streamSource0, 1655, transformerImpl0, xMLStringFactoryDefault0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.dtm.ref.DTMDefaultBase", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getLocale();
      boolean boolean0 = jDayChooser0.isDecorationBordersVisible();
      assertFalse(boolean0);
      
      jDayChooser0.drawDays();
      jDayChooser0.updateUI();
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.hasFocus();
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      
      JYearChooser jYearChooser0 = new JYearChooser();
      JDayChooser jDayChooser1 = jYearChooser0.dayChooser;
      jDayChooser0.setWeekOfYearVisible(true);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Date date0 = jDayChooser0.getMinSelectableDate();
      jDayChooser0.setMinSelectableDate(date0);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setYear(5);
      Month month0 = Month.MAY;
      LocalDate localDate0 = MockLocalDate.of(441, month0, 14);
      java.sql.Date date0 = java.sql.Date.valueOf(localDate0);
      jDayChooser0.setSelectableDateRange(date0, date0);
      BrowseMode browseMode0 = new BrowseMode();
      BrowseController browseController0 = null;
      try {
        browseController0 = new BrowseController(browseMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.ControllerAdapter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7039446318508737
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      SystemColor systemColor0 = SystemColor.textHighlight;
      jDayChooser0.selectedColor = (Color) systemColor0;
      jDayChooser0.setYear(5);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) 2205;
      jDayChooser0.setMaxDayCharacters((-871));
      floatArray0[1] = (float) 5;
      floatArray0[2] = (float) 228;
      floatArray0[3] = (float) 228;
      floatArray0[4] = (float) 2205;
      floatArray0[5] = (float) 1253;
      floatArray0[6] = (float) 1253;
      floatArray0[7] = (float) 1253;
      Color.RGBtoHSB(228, 1253, 2205, floatArray0);
      jDayChooser0.setEnabled(false);
      jDayChooser0.drawDays();
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertEquals(0, jDayChooser0.getMaxDayCharacters());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.drawWeeks();
      jDayChooser0.setSelectableDateRange((Date) null, (Date) null);
      jDayChooser0.setMinSelectableDate((Date) null);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.drawWeeks();
      jDayChooser0.getMouseWheelListeners();
      jDayChooser0.setSelectableDateRange((Date) null, (Date) null);
      jDayChooser0.keyReleased((KeyEvent) null);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JDayChooser jDayChooser0 = new JDayChooser(false);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      DefaultCaret defaultCaret0 = new DefaultCaret();
      jDayChooser0.addMouseMotionListener(defaultCaret0);
      jDayChooser0.scrollRectToVisible(defaultCaret0);
      defaultCaret0.setBlinkRate(337);
      jDayChooser0.getActionMap();
      jDayChooser0.getMaxDayCharacters();
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(1794);
      Date date0 = jDayChooser0.defaultMinSelectableDate;
      jDayChooser0.setSelectableDateRange(date0, date0);
      jDayChooser0.setEnabled(false);
      jDayChooser0.updateUI();
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Date date0 = jDayChooser0.minSelectableDate;
      jDayChooser1.setMaxSelectableDate(date0);
      jDayChooser1.setDay(0);
      jDayChooser1.drawDays();
      jDayChooser1.setFocus();
      jDayChooser1.setDayBordersVisible(false);
      assertFalse(jDayChooser1.isDayBordersVisible());
      
      jDayChooser0.drawDays();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JDayChooser jDayChooser0 = new JDayChooser(false);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      DefaultCaret defaultCaret0 = new DefaultCaret();
      jDayChooser0.addMouseMotionListener(defaultCaret0);
      AWTEventMulticaster.remove(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      jDayChooser0.addHierarchyListener((HierarchyListener) null);
      defaultCaret0.setBlinkRate(312);
      jDayChooser0.getActionMap();
      jDayChooser0.setDay(1794);
      System.setCurrentTimeMillis((-4557L));
      Date date0 = jDayChooser0.maxSelectableDate;
      jDayChooser0.setMaxSelectableDate(date0);
      defaultCaret0.equals(jDayChooser0);
      jDayChooser0.setFocus();
      jDayChooser0.setMonth(0);
      MockSimpleDateFormat mockSimpleDateFormat0 = null;
      try {
        mockSimpleDateFormat0 = new MockSimpleDateFormat((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.6665081787162883
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(0);
      jDayChooser0.drawDays();
      JRadioButton jRadioButton0 = new JRadioButton();
      KeyEvent keyEvent0 = new KeyEvent(jRadioButton0, 5, 5, 5, 25, 'E');
      jDayChooser0.keyPressed(keyEvent0);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.transferFocus();
      jDayChooser0.setMaxSelectableDate((Date) null);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      
      jDayChooser0.updateUI();
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setAutoscrolls(true);
      jDayChooser0.getRootPane();
      jDayChooser0.setDay(37);
      jDayChooser0.setMaxDayCharacters(0);
      jDayChooser0.drawDays();
      StyleContext styleContext0 = new StyleContext();
      JTextPane jTextPane0 = new JTextPane();
      Style style0 = jTextPane0.getStyle("day");
      assertNull(style0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.6729526849488328
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setAutoscrolls(false);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 35, 35, 35, 35, 'C');
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.keyPressed(keyEvent0);
      KeyEvent keyEvent1 = new KeyEvent(jDayChooser0, 17, 39, 1949, 39, 'u');
      keyEvent1.paramString();
      jDayChooser0.keyPressed(keyEvent1);
      Locale locale0 = Locale.FRENCH;
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.paint((Graphics) null);
      jDayChooser0.setDayBordersVisible(false);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.7205968383010655
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      jDayChooser0.setDay((-1702));
      SystemColor systemColor0 = SystemColor.controlLtHighlight;
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-1702), (-1702), 23, 23, 'X');
      KeyEvent keyEvent1 = new KeyEvent(jDayChooser0, 3264, 3370L, 23, 33, 'X');
      KeyEvent.getExtendedKeyCodeForChar(33);
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed(keyEvent1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.710079913333388
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-2246), 26, (-2246), 37, 'M');
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.keyPressed(keyEvent0);
      assertEquals(12, jDayChooser0.getDay());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.608820614830946
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setAutoscrolls(false);
      jDayChooser0.setVisible(false);
      jDayChooser0.setMaxDayCharacters(4);
      jDayChooser0.drawDays();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      JWindow jWindow0 = null;
      try {
        jWindow0 = new JWindow();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.706697613279902
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      jDayChooser0.setDay((-1702));
      SystemColor systemColor0 = SystemColor.desktop;
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-1702), 0L, (-1702), 23, 'X');
      MenuElement[] menuElementArray0 = new MenuElement[0];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 38, 0L, (-2031), 38, 'R', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyPressed(menuKeyEvent0);
      Locale locale0 = Locale.TAIWAN;
      jDayChooser0.setLocale(locale0);
      jDayChooser0.drawDays();
      jDayChooser0.setFocus();
      jDayChooser0.setDayBordersVisible(true);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setAutoscrolls(true);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 40, 35, 2444, 40, 'C');
      jDayChooser0.keyPressed(keyEvent0);
      KeyEvent keyEvent1 = null;
      try {
        keyEvent1 = new KeyEvent(jDayChooser0, 283, 0L, 40, (-1617), 'v', 1983);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid keyLocation
         //
         verifyException("java.awt.event.KeyEvent", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Month month0 = Month.MAY;
      LocalDate localDate0 = MockLocalDate.of((-15), month0, 26);
      java.sql.Date date0 = java.sql.Date.valueOf(localDate0);
      jDayChooser0.setSelectableDateRange((Date) null, date0);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setEnabled(false);
      assertEquals(14, jDayChooser1.getDay());
      
      SymbolTable symbolTable0 = new SymbolTable();
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool0 = new CachingParserPool.SynchronizedGrammarPool(xMLGrammarPoolImpl0);
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool0 = new CachingParserPool.ShadowedGrammarPool(cachingParserPool_SynchronizedGrammarPool0);
      SymbolTable symbolTable1 = new SymbolTable();
      NonValidatingConfiguration nonValidatingConfiguration0 = new NonValidatingConfiguration(symbolTable0, cachingParserPool_SynchronizedGrammarPool0);
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration(symbolTable1, cachingParserPool_SynchronizedGrammarPool0, nonValidatingConfiguration0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      jDayChooser0.setDay(49);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      SystemColor systemColor0 = SystemColor.textHighlight;
      long long0 = (-1536L);
      int int0 = 34;
      char char0 = '2';
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 794, (-1536L), 2800, 34, '2');
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.82477150825939
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      SystemColor systemColor0 = SystemColor.menu;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.setAlwaysFireDayProperty(true);
      jDayChooser0.setDecorationBackgroundColor(systemColor0);
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.setVisible(false);
      assertEquals(14, jDayChooser0.getDay());
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-78);
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte) (-95);
      byteArray0[3] = (byte) (-6);
      byteArray0[4] = (byte) (-76);
      byteArray0[5] = (byte)95;
      byteArray0[6] = (byte)116;
      byteArray0[7] = (byte)18;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      jDayChooser0.setDay(33);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-1851), (-1851), (-4198), 39, '0');
      KeyEvent.getExtendedKeyCodeForChar((-1851));
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setEnabled(false);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-2382), 0, 36, 36, '^');
      KeyEvent keyEvent1 = new KeyEvent(jDayChooser0, 8222, (-2382), 11, (-2382), '^');
      KeyEvent.getExtendedKeyCodeForChar(64);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.updateUI();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.getUI();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      jDayChooser0.maxDayCharacters = 35;
      jDayChooser_DecoratorButton0.paint(debugGraphics0);
      assertTrue(jDayChooser0.isDayBordersVisible());
      
      jDayChooser0.setDayBordersVisible(false);
      Locale locale0 = Locale.CANADA_FRENCH;
      jDayChooser0.setLocale(locale0);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser();
      ImageIcon imageIcon0 = MapNodePositionHolderBase.sMapLocationIcon;
      JButton jButton0 = new JButton("e9Ohf^Y7gj[S{", (Icon) null);
      jDayChooser0.selectedDay = jButton0;
      jDayChooser0.setFocus();
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("24", 18);
      jDayChooser0.setWeekOfYearVisible(false);
      jDayChooser0.getUIClassID();
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      jDayChooser0.setDay(11);
      System.setCurrentTimeMillis(702L);
      Color color0 = new Color(11, 11, 100);
      jDayChooser0.setDecorationBackgroundColor(color0);
      JButton[] jButtonArray0 = new JButton[1];
      jDayChooser0.getSelectedDay();
      jButtonArray0[0] = null;
      jDayChooser0.weeks = jButtonArray0;
      jDayChooser0.getRootPane();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 11, (-1038L), 14, 100, 'W');
      keyEvent0.getExtendedKeyCode();
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setEnabled(false);
      JDayChooser jDayChooser1 = new JDayChooser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser1.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(true);
      FontInfo fontInfo0 = pDFDocumentGraphics2D0.getFontInfo();
      PDFDocument pDFDocument0 = pDFDocumentGraphics2D0.getPDFDocument();
      PDFResources pDFResources0 = new PDFResources(100);
      PDFICCStream pDFICCStream0 = new PDFICCStream();
      PDFPage pDFPage0 = new PDFPage(pDFResources0, pDFICCStream0, 5313, 100);
      PDFGraphics2D pDFGraphics2D0 = new PDFGraphics2D(true, fontInfo0, pDFDocument0, pDFPage0, "day", "8", 0);
      // Undeclared exception!
      try { 
        pDFGraphics2D0.create();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.batik.ext.awt.g2d.AbstractGraphics2D", e);
      }
  }
}
