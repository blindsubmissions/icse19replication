/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 08:54:01 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = new OutputFormat();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "D\u0006_&_pSN";
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-1806236086));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1806236086
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-e<wihqes", true, "-e<wihqes");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-e<wihqes";
      stringArray0[1] = "-e<wihqes";
      stringArray0[2] = "-e<wihqes";
      stringArray0[3] = "-e<wihqes";
      outputFormat0.setIndentSize(3);
      stringArray0[4] = "-e<wihqes";
      stringArray0[5] = "-e<wihqes";
      OutputFormat outputFormat1 = new OutputFormat("dvh#q3mz~V jW*<");
      String[] stringArray1 = new String[4];
      stringArray1[0] = "-e<wihqes";
      stringArray1[1] = "dvh#q3mz~V jW*<";
      stringArray1[2] = "-e<wihqes";
      stringArray1[3] = "dvh#q3mz~V jW*<";
      outputFormat0.parseOptions(stringArray1, 3);
      assertEquals("   ", outputFormat0.getIndent());
      
      outputFormat1.parseOptions(stringArray1, 0);
      int int0 = outputFormat1.parseOptions(stringArray1, 3);
      assertEquals(3, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6885673693022827
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-e<wihqes", true, "-e<wihqes");
      int int0 = 0;
      outputFormat0.setExpandEmptyElements(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-e<wihqes";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 39);
      String string0 = "!qfm<qT^";
      OutputFormat outputFormat1 = new OutputFormat("!qfm<qT^", false, "!qfm<qT^");
      String[] stringArray1 = new String[2];
      stringArray1[0] = "!qfm<qT^";
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('(');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (()
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setEncoding("");
      outputFormat0.getEncoding();
      assertFalse(outputFormat0.isTrimText());
      
      outputFormat0.setTrimText(true);
      outputFormat0.setNewlines(true);
      outputFormat0.isTrimText();
      outputFormat0.isNewLineAfterDeclaration();
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertTrue(outputFormat0.isTrimText());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2337673247041645
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("9^:W>':Ir7@b");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "9^:W>':Ir7@b";
      stringArray0[1] = "9^:W>':Ir7@b";
      outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isNewlines());
      
      outputFormat0.setNewlines(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isNewlines());
      
      int int0 = outputFormat1.parseOptions(stringArray0, 2);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("");
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isXHTML();
      outputFormat0.isNewlines();
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('e');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (e)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.509137344082687
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("9^:W>':Ir7@b");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "D\u0006_&_pSN";
      stringArray0[1] = "9^:W>':Ir7@b";
      stringArray0[2] = "D\u0006_&_pSN";
      stringArray0[3] = "9^:W>':Ir7@b";
      stringArray0[4] = "D\u0006_&_pSN";
      stringArray0[5] = "9^:W>':Ir7@b";
      stringArray0[6] = "D\u0006_&_pSN";
      stringArray0[7] = "9^:W>':Ir7@b";
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setExpandEmptyElements(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("9^:W>':Ir7@b");
      outputFormat0.setIndent("9^:W>':Ir7@b");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "9^:W>':Ir7@b";
      stringArray0[1] = "9^:W>':Ir7@b";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, int0);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[2] = "-newlines";
      OutputFormat outputFormat0 = new OutputFormat("-newlines", true, "-newlines");
      outputFormat0.setNewLineAfterDeclaration(true);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("-newlines", outputFormat0.getEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewlines());
      assertEquals("-newlines", outputFormat0.getIndent());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      outputFormat0.setSuppressDeclaration(false);
      stringArray0[1] = "%/k}~ml:o>";
      stringArray0[2] = ")";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "73}";
      outputFormat0.setIndent("");
      stringArray0[6] = "";
      stringArray0[7] = "-omitEncoding";
      stringArray0[8] = "\n";
      outputFormat0.setIndent("-trimText");
      outputFormat0.getIndent();
      outputFormat0.isXHTML();
      outputFormat0.isNewlines();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('&');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (&)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setLineSeparator("");
      outputFormat0.isSuppressDeclaration();
      String[] stringArray0 = new String[0];
      outputFormat0.setIndentSize(1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-792));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -792
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.509137344082687
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("9^:W>':Ir7@b");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "D\u0006_&_pSN";
      stringArray0[1] = "9^:W>':Ir7@b";
      stringArray0[2] = "D\u0006_&_pSN";
      stringArray0[3] = "9^:W>':Ir7@b";
      stringArray0[4] = "D\u0006_&_pSN";
      stringArray0[5] = "9^:W>':Ir7@b";
      stringArray0[6] = "D\u0006_&_pSN";
      stringArray0[7] = "9^:W>':Ir7@b";
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterNTags((-226));
      boolean boolean0 = outputFormat0.isPadText();
      assertEquals((-226), outputFormat0.getNewLineAfterNTags());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("9^:W>':Ir7@b");
      outputFormat0.getNewLineAfterNTags();
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isPadText());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals(0, int0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat("7U{J8", true, "]'7uFm17w(9)");
      outputFormat0.getLineSeparator();
      outputFormat0.setLineSeparator("\n");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(')');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ())
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("D\u0006_&_", true);
      outputFormat0.setNewLineAfterNTags(1229);
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[0];
      outputFormat0.setIndent(true);
      outputFormat0.setPadText(true);
      outputFormat0.parseOptions(stringArray0, 2443);
      outputFormat0.setNewLineAfterNTags(2443);
      outputFormat0.parseOptions(stringArray0, 570);
      int int0 = 1556;
      outputFormat0.parseOptions(stringArray0, 1556);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.parseOptions(stringArray0, 2443);
      int int1 = (-98);
      outputFormat0.setPadText(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-98));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -98
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indent", true);
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("-indent", outputFormat0.getIndent());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals('\"', char0);
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newlines", true, "-newlines");
      outputFormat0.setXHTML(false);
      outputFormat0.setLineSeparator("-xhtml");
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndentSize((-559));
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "@y* vF$#J";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "-xhtml";
      stringArray0[5] = "";
      stringArray0[6] = "-newlines";
      stringArray0[7] = "@y* vF$#J";
      stringArray0[8] = "-xhtml";
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat outputFormat1 = new OutputFormat("t}R. IY#^qR");
      outputFormat1.parseOptions(stringArray0, 11);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setAttributeQuoteCharacter('\'');
      outputFormat2.setPadText(false);
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, (-349318810));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -349318810
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("9^:W>':Ir7@b");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "D\u0006_&_pSN";
      stringArray0[1] = "9^:W>':Ir7@b";
      stringArray0[2] = "D\u0006_&_pSN";
      stringArray0[3] = "9^:W>':Ir7@b";
      stringArray0[4] = "D\u0006_&_pSN";
      stringArray0[5] = "9^:W>':Ir7@b";
      stringArray0[6] = "D\u0006_&_pSN";
      stringArray0[7] = "9^:W>':Ir7@b";
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newlnes", true, "-newlnes");
      int int0 = 0;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-newlnes";
      stringArray0[2] = "D\u0006_&_pSN";
      outputFormat0.setIndent("");
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1842874019));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1842874019
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty", true, "-ewinqes");
      outputFormat0.setExpandEmptyElements(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "-expandEmpty";
      stringArray0[2] = "-expandEmpty";
      stringArray0[3] = "-ewinqes";
      stringArray0[4] = "-ewinqes";
      stringArray0[5] = "-expandEmpty";
      outputFormat0.setEncoding("-expandEmpty");
      stringArray0[6] = "-expandEmpty";
      stringArray0[7] = "-ewinqes";
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewlines(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1879938312));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1879938312
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(false);
      OutputFormat outputFormat1 = new OutputFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-indent";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "D\u0006_&_pSN";
      stringArray1[2] = "-indent";
      stringArray1[3] = "D\u0006_&_pSN";
      stringArray1[4] = "-indent";
      stringArray1[5] = "-indent";
      stringArray1[6] = "D\u0006_&_pSN";
      stringArray1[7] = "D\u0006_&_pSN";
      outputFormat0.parseOptions(stringArray1, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(true);
      OutputFormat outputFormat1 = new OutputFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-indent";
      stringArray0[1] = "D\u0006_&_pSN";
      stringArray0[2] = "-indent";
      stringArray0[3] = "D\u0006_&_pSN";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "u*>dW5R";
      stringArray0[4] = "u*>dW5R";
      stringArray0[5] = "u*>dW5R";
      outputFormat0.parseOptions(stringArray0, 2160);
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1954149356));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1954149356
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(true);
      OutputFormat outputFormat1 = new OutputFormat();
      int int0 = 0;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "j2,U_.O0fXuLa";
      stringArray0[0] = "-xhtmlD\u0006_&_pSN";
      stringArray0[2] = "j2,U_.O0fXuLa";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("K:a_l!w&LH-Z9");
      OutputFormat outputFormat1 = new OutputFormat((String) null, false, "-indentSize");
      OutputFormat outputFormat2 = new OutputFormat("K:a_l!w&LH-Z9", true);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[8];
      stringArray0[0] = null;
      stringArray0[1] = "-xhtmlwSKO^";
      stringArray0[2] = "-indentSize";
      stringArray0[3] = "tGEZ,loO\"A";
      stringArray0[4] = "K:a_l!w&LH-Z9";
      stringArray0[5] = null;
      stringArray0[6] = "wSKO^";
      stringArray0[7] = "+XmP*{ j(yMn";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"tGEZ,loO\"A\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(true);
      OutputFormat outputFormat1 = new OutputFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-suppressDeclaration";
      stringArray0[1] = "D\u0006_&_pSN";
      stringArray0[2] = "-suppressDeclaration";
      stringArray0[3] = "D\u0006_&_pSN";
      stringArray0[4] = "j2,U_.O0fXuLa";
      stringArray0[5] = "D\u0006_&_pSN";
      stringArray0[6] = "-suppressDeclaration";
      stringArray0[7] = "D\u0006_&_pSN";
      stringArray0[8] = "D\u0006_&_pSN";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat1.parseOptions(stringArray0, 1);
      int int0 = (-1210);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-1210));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1210
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty", true, "-ewinqes");
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setNewlines(true);
      outputFormat0.setLineSeparator("u8N,)9");
      outputFormat0.setIndent(false);
      outputFormat0.setTrimText(true);
      assertTrue(outputFormat0.isTrimText());
      
      OutputFormat outputFormat2 = new OutputFormat("1+(3j&<jC2bz", false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-ewinqes";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "1+(3j&<jC2bz";
      stringArray0[3] = "1+(3j&<jC2bz";
      stringArray0[4] = "-ewinqes";
      stringArray0[5] = "1+(3j&<jC2bz";
      outputFormat2.parseOptions(stringArray0, 3);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat3.setNewlines(false);
      OutputFormat outputFormat4 = new OutputFormat("hiItd2");
      outputFormat3.parseOptions(stringArray0, 3);
      int int0 = outputFormat3.parseOptions(stringArray0, 1);
      assertEquals(3, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("0^:WV':Ir7@b");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "0^:WV':Ir7@b";
      stringArray0[1] = "0^:WV':Ir7@b";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = new OutputFormat("0^:WV':Ir7@b", true);
      outputFormat0.setNewLineAfterNTags((-1));
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat2 = new OutputFormat("  ", true, "-omitEncoding");
      outputFormat0.setTrimText(true);
      outputFormat2.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[6];
      stringArray1[0] = "-omitEncoding";
      stringArray1[1] = "  ";
      stringArray1[2] = "-omitEncoding";
      stringArray1[3] = "-omitEncoding";
      stringArray1[4] = "}bR_qeCMvJ*uH Nx@";
      stringArray1[5] = "<: [^ GL0s:$og{2Ko";
      outputFormat2.parseOptions(stringArray1, 0);
      outputFormat0.parseOptions(stringArray1, 1925);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1110740924));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1110740924
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-e<wihqes", false, "-e<wihqes");
      outputFormat0.setExpandEmptyElements(false);
      String[] stringArray0 = new String[2];
      outputFormat0.setIndent("-e<wihqes");
      stringArray0[0] = "-e<wihqes";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat1 = new OutputFormat("", false, "gUUe?mkT");
      outputFormat0.setXHTML(true);
      String[] stringArray1 = new String[6];
      stringArray1[0] = "!qfm<qT^";
      stringArray1[1] = "-e<wihqes";
      stringArray1[2] = "-e<wihqes";
      stringArray1[3] = "-padText";
      stringArray1[4] = "gUUe?mkT";
      stringArray1[5] = "";
      outputFormat0.parseOptions(stringArray1, 3);
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      outputFormat0.parseOptions(stringArray1, 1629);
      assertTrue(outputFormat0.isPadText());
      
      outputFormat1.parseOptions(stringArray0, 34);
      assertFalse(outputFormat1.isNewlines());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-e<wihqes", true, "-e<wihqes");
      int int0 = 0;
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setEncoding("-trimText");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-suppressDeclaration";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-trimText";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat1 = new OutputFormat("c8(Xb06]no!r*lh,>cM", true, "stSZg8p]F?MaB)&0m");
      outputFormat1.setXHTML(false);
      outputFormat1.parseOptions(stringArray0, 674);
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('V');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (V)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
