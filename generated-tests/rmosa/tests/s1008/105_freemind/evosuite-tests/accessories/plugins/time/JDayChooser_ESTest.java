/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 08:40:29 GMT 2018
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import accessories.plugins.time.JYearChooser;
import java.awt.AWTEventMulticaster;
import java.awt.Button;
import java.awt.Color;
import java.awt.Component;
import java.awt.ComponentOrientation;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.SystemColor;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.HierarchyListener;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.ComponentColorModel;
import java.awt.image.DirectColorModel;
import java.awt.image.ImageObserver;
import java.io.IOException;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.UnsupportedEncodingException;
import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp;
import java.text.DecimalFormat;
import java.time.DateTimeException;
import java.time.Instant;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.Calendar;
import java.util.Collection;
import java.util.List;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import javax.swing.Action;
import javax.swing.DefaultButtonModel;
import javax.swing.Icon;
import javax.swing.JApplet;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JTabbedPane;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuKeyEvent;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import javax.swing.plaf.basic.BasicLabelUI;
import javax.swing.text.StringContent;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.apache.batik.bridge.UserAgentAdapter;
import org.apache.batik.ext.awt.color.ICCColorSpaceExt;
import org.apache.batik.ext.awt.color.NamedProfileCache;
import org.apache.batik.gvt.CanvasGraphicsNode;
import org.apache.batik.gvt.ImageNode;
import org.apache.batik.gvt.renderer.StrokingTextPainter;
import org.apache.batik.gvt.text.GVTAttributedCharacterIterator;
import org.apache.batik.svggen.SVGGeneratorContext;
import org.apache.fop.image.FopImage;
import org.apache.fop.image.JpegImage;
import org.apache.fop.svg.PDFDocumentGraphics2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.evosuite.runtime.mock.java.time.MockLocalTime;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.openstreetmap.gui.jmapviewer.Tile;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getWeekdayForeground();
      KeyEvent keyEvent0 = null;
      try {
        keyEvent0 = new KeyEvent(jDayChooser0, 2007, 2007, 2007, 2007, 'y', (-265));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid keyLocation
         //
         verifyException("java.awt.event.KeyEvent", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = true;
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getInheritsPopupMenu();
      int int0 = 10161;
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 0, (-3992L), 916, 10161, '\"');
      KeyEvent.getKeyText((-5399));
      jDayChooser0.keyReleased(keyEvent0);
      Instant instant0 = MockInstant.now();
      ComponentOrientation componentOrientation0 = ComponentOrientation.UNKNOWN;
      JMonthChooser jMonthChooser0 = new JMonthChooser();
      jDayChooser0.applyComponentOrientation(componentOrientation0);
      Timestamp.from(instant0);
      String string0 = "mqx6lPYV6ZIl";
      // Undeclared exception!
      try { 
        Timestamp.valueOf("mqx6lPYV6ZIl");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Timestamp format must be yyyy-mm-dd hh:mm:ss[.fffffffff]
         //
         verifyException("java.sql.Timestamp", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6272804972751373
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System.setCurrentTimeMillis(9223372036854775788L);
      JDayChooser jDayChooser0 = new JDayChooser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.setFocusTraversalPolicyProvider(true);
      jDayChooser0.init();
      jDayChooser0.firePropertyChange("", (double) 4, 0.0);
      jDayChooser0.setMaxDayCharacters(4);
      assertEquals(4, jDayChooser0.getMaxDayCharacters());
      
      JDayChooser jDayChooser1 = new JDayChooser(false);
      jDayChooser1.setDayBordersVisible(true);
      jDayChooser1.drawDays();
      assertEquals(17, jDayChooser1.getDay());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.drawDays();
      jDayChooser0.drawDays();
      Class<BasicLabelUI> class0 = BasicLabelUI.class;
      jDayChooser0.getListeners(class0);
      JYearChooser jYearChooser0 = new JYearChooser();
      jDayChooser0.setYearChooser(jYearChooser0);
      assertTrue(jDayChooser0.isDayBordersVisible());
      
      jDayChooser0.setDayBordersVisible(false);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7886730895804845
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = false;
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(3);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.getAutoscrolls();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 39, 3, 1, 33, '{');
      KeyEvent.getExtendedKeyCodeForChar(1091);
      java.util.Date date0 = jDayChooser0.getMinSelectableDate();
      jDayChooser0.setSelectableDateRange(date0, date0);
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Timestamp timestamp0 = new Timestamp((-1L));
      timestamp0.getTime();
      jDayChooser0.setMaxSelectableDate(timestamp0);
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      MockLocalDate.now((ZoneId) zoneOffset0);
      jDayChooser0.drawDays();
      // Undeclared exception!
      try { 
        MockLocalTime.of(2655, (-201));
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for HourOfDay (valid values 0 - 23): 2655
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.60625553136712
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis((-9223372036854775771L));
      JDayChooser jDayChooser0 = new JDayChooser(true);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("Setting note html content to:", 1552);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      jDayChooser0.getMouseWheelListeners();
      jDayChooser0.isFocusOwner();
      SystemColor systemColor0 = SystemColor.textHighlightText;
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getDecorationBackgroundColor();
      JDayChooser jDayChooser1 = new JDayChooser(false);
      jDayChooser1.getDaysInMonth();
      assertEquals(14, jDayChooser1.getDay());
      assertFalse(jDayChooser1.isDecorationBordersVisible());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      boolean boolean0 = false;
      JDayChooser jDayChooser0 = new JDayChooser(false);
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed((ActionEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 4458, false);
      focusEvent0.getOppositeComponent();
      jDayChooser0.focusGained(focusEvent0);
      GVTAttributedCharacterIterator.TextAttribute gVTAttributedCharacterIterator_TextAttribute0 = GVTAttributedCharacterIterator.TextAttribute.DY;
      jDayChooser0.setMonth((int) gVTAttributedCharacterIterator_TextAttribute0.ARABIC_TERMINAL);
      System.setCurrentTimeMillis((long) gVTAttributedCharacterIterator_TextAttribute0.WRITING_MODE_RTL);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getMaxSelectableDate();
      JButton jButton0 = jDayChooser0.selectedDay;
      assertNull(jButton0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.validate();
      jDayChooser0.drawWeeks();
      jDayChooser0.setWeekOfYearVisible(false);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(905);
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.getLocale();
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6442551993262904
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser1.setFocusTraversalPolicyProvider(false);
      jDayChooser0.init();
      jDayChooser0.firePropertyChange("day", 0.017453292519943295, 0.017453292519943295);
      jDayChooser0.setAlwaysFireDayProperty(false);
      jDayChooser0.setMaxDayCharacters(4);
      jDayChooser0.updateUI();
      jDayChooser1.setDayBordersVisible(false);
      jDayChooser0.drawDays();
      assertEquals(4, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.794384563563956
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(2351);
      jDayChooser0.getMinSelectableDate();
      jDayChooser0.drawDays();
      jDayChooser0.setFocus();
      SystemColor systemColor0 = SystemColor.info;
      NamedProfileCache namedProfileCache0 = NamedProfileCache.getDefaultCache();
      ICCColorSpaceExt iCCColorSpaceExt0 = namedProfileCache0.request("");
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) iCCColorSpaceExt0.AUTO;
      float float0 = 2242.0F;
      floatArray0[1] = float0;
      systemColor0.getColorComponents((ColorSpace) iCCColorSpaceExt0, floatArray0);
      jDayChooser0.setDecorationBackgroundColor(systemColor0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = false;
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.drawDays();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      CanvasGraphicsNode canvasGraphicsNode0 = new CanvasGraphicsNode();
      canvasGraphicsNode0.getRenderingHints();
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[4];
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo0);
      jpegImage0.getICCProfile();
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.initialized = true;
      Locale locale0 = Locale.ROOT;
      ImageNode imageNode0 = new ImageNode();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) imageNode0, (Collection<Locale>) imageNode0, locale_FilteringMode0);
      locale0.getExtensionKeys();
      JComponent.setDefaultLocale(locale0);
      jDayChooser0.setWeekOfYearVisible(false);
      jDayChooser0.validate();
      jDayChooser0.drawWeeks();
      jDayChooser0.setMaxDayCharacters(8736);
      jDayChooser0.setWeekOfYearVisible(true);
      JYearChooser jYearChooser0 = new JYearChooser();
      jDayChooser0.setYearChooser(jYearChooser0);
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.getDecorationBackgroundColor();
      jDayChooser0.getLocale();
      jDayChooser0.setAlwaysFireDayProperty(false);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.7736275476159054
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getDebugGraphicsOptions();
      jDayChooser0.getAlignmentX();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 1056, (-1663L), 0, 46, 'N');
      jDayChooser0.keyPressed(keyEvent0);
      java.util.Date date0 = jDayChooser0.defaultMinSelectableDate;
      java.util.Date date1 = jDayChooser0.setMinSelectableDate(date0);
      jDayChooser0.setEnabled(true);
      jDayChooser0.setSelectableDateRange(date1, date1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8275382208687905
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Date date0 = new Date((-15L));
      Point point0 = jDayChooser0.getLocation();
      jDayChooser0.getLocation(point0);
      jDayChooser0.setMonth(45);
      Timestamp timestamp0 = new Timestamp(0);
      timestamp0.getTime();
      jDayChooser0.setSelectableDateRange(timestamp0, date0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 0, 0, 0, 45, '6', 0);
      jDayChooser0.keyPressed(keyEvent0);
      SVGGeneratorContext.GraphicContextDefaults sVGGeneratorContext_GraphicContextDefaults0 = new SVGGeneratorContext.GraphicContextDefaults();
      sVGGeneratorContext_GraphicContextDefaults0.getBackground();
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setDay(0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      int int0 = (-3677);
      jDayChooser0.isDecorationBordersVisible();
      int int1 = (-3226);
      Locale locale0 = Locale.PRC;
      // Undeclared exception!
      try { 
        locale0.getExtension('5');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ill-formed extension key: 5
         //
         verifyException("java.util.Locale", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6789477095792162
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser1.setFocusTraversalPolicyProvider(false);
      jDayChooser0.init();
      jDayChooser0.firePropertyChange("day", 0.017453292519943295, 0.017453292519943295);
      jDayChooser0.getToolkit();
      jDayChooser1.setWeekdayForeground((Color) null);
      jDayChooser0.setMaxDayCharacters(4);
      jDayChooser0.updateUI();
      jDayChooser1.setDayBordersVisible(false);
      jDayChooser1.setEnabled(false);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getDayPanel();
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getMaxDayCharacters();
      String[] stringArray0 = new String[4];
      float float0 = Component.RIGHT_ALIGNMENT;
      stringArray0[1] = "day";
      stringArray0[2] = "2n";
      stringArray0[3] = "day";
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.setDayBordersVisible(true);
      jDayChooser0.updateUI();
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getSelectedDay();
      jDayChooser0.setDecorationBackgroundVisible(true);
      jDayChooser0.drawWeeks();
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      MenuElement[] menuElementArray0 = new MenuElement[9];
      JMenu jMenu0 = new JMenu((Action) null);
      JMenuItem jMenuItem0 = jMenu0.add((Action) null);
      menuElementArray0[0] = (MenuElement) jMenuItem0;
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("day");
      JMenu jMenu1 = new JMenu("\nAll=");
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser0.isDayBordersVisible();
      GVTAttributedCharacterIterator.TextAttribute gVTAttributedCharacterIterator_TextAttribute0 = (GVTAttributedCharacterIterator.TextAttribute)StrokingTextPainter.BIDI_LEVEL;
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMaxDayCharacters((-38));
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setWeekOfYearVisible(true);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6414352168502915
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      System.setCurrentTimeMillis((-9223372036854775771L));
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.isFocusOwner();
      SystemColor systemColor0 = SystemColor.textHighlightText;
      jDayChooser0.setDay((-477));
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-477), (-477), (-477), (-477), '-');
      jDayChooser0.keyPressed(keyEvent0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener1 = AWTEventMulticaster.add(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.remove(hierarchyListener1, hierarchyListener1);
      jDayChooser0.removeHierarchyListener((HierarchyListener) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.createToolTip();
      jDayChooser0.drawWeeks();
      Color color0 = Color.getHSBColor((-764.245F), (-764.245F), (-764.245F));
      jDayChooser0.setDecorationBackgroundColor(color0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("day");
      Locale locale0 = Locale.ENGLISH;
      DecimalFormat decimalFormat0 = new DecimalFormat();
      mockSimpleDateFormat0.setNumberFormat(decimalFormat0);
      mockSimpleDateFormat0.get2DigitYearStart();
      MockDate mockDate0 = new MockDate();
      Timestamp timestamp0 = new Timestamp(1L);
      jDayChooser0.setSelectableDateRange(timestamp0, mockDate0);
      jDayChooser0.setAlwaysFireDayProperty(false);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 2104, true, jDayChooser0);
      jDayChooser0.focusLost(focusEvent0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6440131694248166
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      System.setCurrentTimeMillis((-9223372036854775771L));
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getComponentPopupMenu();
      jDayChooser0.setYear(1);
      jDayChooser0.isFocusOwner();
      SystemColor systemColor0 = SystemColor.textHighlightText;
      jDayChooser0.setEnabled(true);
      System.setCurrentTimeMillis((-9223372036854775771L));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.isDecorationBackgroundVisible();
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.createToolTip();
      jDayChooser0.drawWeeks();
      jDayChooser0.setMaxSelectableDate((java.util.Date) null);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "day");
      JMonthChooser jMonthChooser0 = new JMonthChooser();
      jDayChooser0.setMonthChooser(jMonthChooser0);
      jDayChooser0.setName("month");
      jDayChooser0.setDay(5);
      jDayChooser0.createToolTip();
      jDayChooser0.drawWeeks();
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JYearChooser jYearChooser0 = new JYearChooser();
      Boolean boolean0 = new Boolean("day");
      KeyEvent.getExtendedKeyCodeForChar(38);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem();
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      menuSelectionManager0.clearSelectedPath();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getBackgroundSelectionColor();
      jDayChooser0.setSundayForeground(color0);
      jDayChooser0.setDay(35);
      jDayChooser0.setDay(46);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.669576756952125
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(42);
      jDayChooser0.drawWeeks();
      jDayChooser0.setDay(3);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.paint((Graphics) null);
      SystemColor systemColor0 = SystemColor.activeCaption;
      Color color0 = Color.getColor("|}s\"", (Color) systemColor0);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) 3;
      floatArray0[1] = (float) 42;
      floatArray0[2] = (float) 3;
      floatArray0[3] = (float) 42;
      floatArray0[4] = (float) 42;
      floatArray0[5] = (float) 42;
      floatArray0[6] = (float) 3;
      floatArray0[7] = (float) 3;
      color0.getComponents(floatArray0);
      jDayChooser0.setDecorationBackgroundColor(color0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        JDayChooser.main((String[]) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5703209512407335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      System.setCurrentTimeMillis((-9223372036854775771L));
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getMouseWheelListeners();
      jDayChooser0.isFocusOwner();
      SystemColor systemColor0 = SystemColor.textHighlightText;
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.paint((Graphics) null);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener1 = AWTEventMulticaster.add(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.remove(hierarchyListener1, hierarchyListener1);
      jDayChooser0.removeHierarchyListener((HierarchyListener) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.createToolTip();
      jDayChooser0.drawWeeks();
      jDayChooser0.getSundayForeground();
      jDayChooser0.drawDays();
      jDayChooser0.updateUI();
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.6442551993262904
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.isValidateRoot();
      jDayChooser0.init();
      jDayChooser0.setMaxDayCharacters(3);
      jDayChooser0.updateUI();
      jDayChooser0.setDay(3);
      Locale locale0 = Locale.FRANCE;
      jDayChooser0.setLocale(locale0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getDebugGraphicsOptions();
      jDayChooser0.setMaxDayCharacters(0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Timestamp timestamp0 = new Timestamp(300000L);
      jDayChooser0.setSelectableDateRange(timestamp0, (java.util.Date) null);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getDebugGraphicsOptions();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.setDay(3);
      DefaultButtonModel defaultButtonModel0 = new DefaultButtonModel();
      jDayChooser_DecoratorButton0.setModel(defaultButtonModel0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser_DecoratorButton0, 0, 0, 0, 2971, 'V');
      jDayChooser0.keyTyped(keyEvent0);
      jDayChooser0.updateUI();
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setName("M\"rp&OCrR");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.setDayBordersVisible(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.requestFocus(true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      System.setCurrentTimeMillis((-9223372036854775771L));
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.isFocusOwner();
      JDayChooser jDayChooser1 = new JDayChooser(false);
      Time time0 = new Time((-9223372036854775771L));
      jDayChooser1.setSelectableDateRange((java.util.Date) null, time0);
      KeyEvent keyEvent0 = null;
      try {
        keyEvent0 = new KeyEvent(jDayChooser1, '6', '6', '6', (-2155), '6', 12311);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid keyLocation
         //
         verifyException("java.awt.event.KeyEvent", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      int int0 = ImageObserver.WIDTH;
      float float0 = Component.RIGHT_ALIGNMENT;
      MockDate mockDate0 = new MockDate(1, 100, 100, 100, 100);
      jDayChooser0.setMinSelectableDate((java.util.Date) null);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("day", "day");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // day
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(685);
      StringContent stringContent0 = new StringContent();
      Locale locale0 = Locale.US;
      Locale.getISOCountries();
      jDayChooser0.setLocale(locale0);
      jDayChooser0.setMonth(21);
      jDayChooser0.setFocus();
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6691033443253644
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.drawWeeks();
      JMonthChooser jMonthChooser0 = new JMonthChooser(true);
      jDayChooser0.monthChooser = jMonthChooser0;
      jDayChooser0.setDay(3);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(true);
      jDayChooser0.paintAll(pDFDocumentGraphics2D0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 3, (-2229L), 38, 38, '{');
      KeyEvent.getExtendedKeyCodeForChar(1391);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.drawDays();
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.6741970408327744
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JYearChooser jYearChooser0 = new JYearChooser();
      Boolean boolean0 = new Boolean("day");
      KeyEvent.getExtendedKeyCodeForChar(38);
      MenuElement[] menuElementArray0 = new MenuElement[1];
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem();
      menuElementArray0[0] = (MenuElement) jRadioButtonMenuItem0;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      menuSelectionManager0.clearSelectedPath();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jYearChooser0, 1792, 150, 6, 35, '\\', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyPressed(menuKeyEvent0);
      jDayChooser0.setDay(35);
      jDayChooser0.setDay(46);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.7076569975017657
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      System.setCurrentTimeMillis(9223372036854775788L);
      JYearChooser jYearChooser0 = new JYearChooser();
      jYearChooser0.getMouseWheelListeners();
      SystemColor systemColor0 = SystemColor.inactiveCaption;
      JDayChooser jDayChooser0 = jYearChooser0.dayChooser;
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser1.requestFocus();
      SystemColor systemColor1 = SystemColor.textHighlightText;
      KeyEvent.getExtendedKeyCodeForChar(39);
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu((Action) null);
      JMenuItem jMenuItem0 = jMenu0.add((Action) null);
      menuElementArray0[0] = (MenuElement) jMenuItem0;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)78;
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      JMenuItem jMenuItem1 = new JMenuItem((Icon) null);
      menuElementArray0[1] = (MenuElement) jMenuItem1;
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("day", (Icon) null);
      menuElementArray0[2] = (MenuElement) jRadioButtonMenuItem0;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jYearChooser0, 1173, 0L, 1173, 34, 'x', menuElementArray0, menuSelectionManager0);
      // Undeclared exception!
      try { 
        jDayChooser1.keyPressed(menuKeyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.add(hierarchyListener0, hierarchyListener0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 1015, 39, 1, 39, '{');
      KeyEvent.getExtendedKeyCodeForChar((-1073741822));
      jDayChooser0.keyPressed(keyEvent0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener1 = AWTEventMulticaster.add(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.remove(hierarchyListener1, hierarchyListener1);
      jDayChooser0.removeHierarchyListener((HierarchyListener) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.createToolTip();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 2054, 2054, (-3369), 40, '{');
      KeyEvent.getExtendedKeyCodeForChar((-976));
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.drawDays();
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.7421583343393316
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Point point0 = jDayChooser0.getLocation();
      jDayChooser0.getLocation(point0);
      jDayChooser0.setMonth(36);
      Timestamp timestamp0 = new Timestamp(0);
      timestamp0.getTime();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 0, 0, 0, 36, '6', 0);
      jDayChooser0.keyPressed(keyEvent0);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.677371952581733
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      boolean boolean0 = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.drawWeeks();
      jDayChooser0.setDay(3);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 3, (-2229L), 38, 38, '{');
      KeyEvent.getExtendedKeyCodeForChar(1391);
      jDayChooser0.keyPressed(keyEvent0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 16778607);
      PropertyResourceBundle propertyResourceBundle0 = null;
      try {
        propertyResourceBundle0 = new PropertyResourceBundle(pushbackInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Stream closed
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener1 = AWTEventMulticaster.add(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.remove(hierarchyListener1, hierarchyListener1);
      jDayChooser0.setDay(76);
      jDayChooser0.removeHierarchyListener((HierarchyListener) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.createToolTip();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 2054, 2054, (-3369), 40, '{');
      KeyEvent.getExtendedKeyCodeForChar((-976));
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.drawDays();
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.initialized = false;
      Boolean boolean0 = new Boolean(false);
      jDayChooser0.init();
      jDayChooser0.setMaxDayCharacters(3);
      jDayChooser0.updateUI();
      jDayChooser0.setDay(3);
      Locale locale0 = Locale.FRANCE;
      jDayChooser0.setLocale(locale0);
      jDayChooser0.setDayBordersVisible(false);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      System.setCurrentTimeMillis(9223372036854775788L);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?'d `hGUYT%ody");
      JDayChooser jDayChooser0 = new JDayChooser(true);
      JDayChooser jDayChooser1 = new JDayChooser(true);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser1.new DecoratorButton();
      jDayChooser1.setFocusTraversalPolicyProvider(true);
      JMonthChooser jMonthChooser0 = new JMonthChooser(false);
      jDayChooser1.setDay(34);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton1 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(true);
      jDayChooser1.paintAll(pDFDocumentGraphics2D0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser1, 38, 38, 38, 37, 'W');
      KeyEvent.getExtendedKeyCodeForChar(43);
      jDayChooser1.keyPressed(keyEvent0);
      jDayChooser1.drawDays();
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      System.setCurrentTimeMillis((-9223372036854775771L));
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setAlignmentX((-9223372036854775771L));
      jDayChooser0.isFocusOwner();
      SystemColor systemColor0 = SystemColor.textHighlightText;
      jDayChooser0.setDay(0);
      jDayChooser0.drawDays();
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setAlwaysFireDayProperty(true);
      SystemColor systemColor0 = SystemColor.window;
      jDayChooser0.setDecorationBackgroundColor(systemColor0);
      jDayChooser0.setDecorationBackgroundColor(systemColor0);
      jDayChooser0.setDay(14);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      System.setCurrentTimeMillis(9223372036854775788L);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      JYearChooser jYearChooser0 = new JYearChooser();
      jDayChooser0.drawWeeks();
      jDayChooser0.setDay(3);
      MockDate mockDate0 = new MockDate(3, 638, 638, 638, 638);
      jDayChooser0.minSelectableDate = (java.util.Date) mockDate0;
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      JDayChooser jDayChooser1 = new JDayChooser(false);
      jDayChooser1.isFocusOwner();
      SystemColor systemColor0 = SystemColor.scrollbar;
      jDayChooser0.drawDays();
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      System.setCurrentTimeMillis((-9223372036854775771L));
      JDayChooser jDayChooser0 = new JDayChooser(true);
      UserAgentAdapter userAgentAdapter0 = new UserAgentAdapter();
      Point point0 = new Point();
      Locale locale0 = Locale.FRENCH;
      locale0.getDisplayScript();
      Calendar calendar0 = MockCalendar.getInstance(locale0);
      jDayChooser0.setCalendar(calendar0);
      jDayChooser0.getLocation(point0);
      jDayChooser0.setMonth(0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 2576, 2576, 2576, 0, 'O');
      jDayChooser0.keyPressed(keyEvent0);
      JTabbedPane jTabbedPane0 = new JTabbedPane();
      jDayChooser0.drawWeeks();
      jDayChooser0.setEnabled(true);
      jDayChooser0.setDayBordersVisible(true);
      jDayChooser0.setDayBordersVisible(true);
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setEnabled(true);
  }
}
