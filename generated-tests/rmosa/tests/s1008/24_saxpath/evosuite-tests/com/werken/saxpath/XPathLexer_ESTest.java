/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 08:57:49 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.8309372687620074
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;{='knrg&4Ku!=L:L");
      xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.number();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5281189455022457
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.<xqgF");
      xPathLexer0.div();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("{", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.7035835193346374
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8Z0p`c1`'P<IQ1");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6782041247436593
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.number();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.7373078552806841
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8Z0p`c1`'P<IQ1");
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6394577155127598
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("g", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("5", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.716438564551005
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("g", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("V:", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("5", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("p", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("[", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6394577155127598
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      Token token0 = xPathLexer0.slashes();
      assertEquals("a", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("V", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(":", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("5", token3.getTokenText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6782041247436593
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      xPathLexer0.dollar();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.7035835193346373
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8Z0p`c1`'P<IQ1");
      Token token0 = xPathLexer0.star();
      assertEquals(".", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.7035835193346374
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8Z0p`c1`'P<IQ1");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.7035835193346373
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8Z0p`c1`'P<IQ1");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6001882813317665
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.7541717757733974
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      xPathLexer0.literal();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8729472617958496
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6001882813317665
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      Token token0 = xPathLexer0.slashes();
      assertEquals("a", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6001882813317665
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.7914141957568401
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.identifier();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Qp", token2.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.7035835193346374
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8Z0p`c1`'P<IQ1");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("8", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.7035835193346374
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8Z0p`c1`'P<IQ1");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6394577155127598
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("g", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("5", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6001882813317665
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("g", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.at();
      assertEquals(":", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("5", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.7541717757733974
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("5Qp", token3.getTokenText());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.8036166683174563
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8Z0p`c1`'P<IQ1");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".8", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Z0p`c1`'P<IQ1", token2.getTokenText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.716438564551005
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      xPathLexer0.consume((-1));
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.consume();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6394577155127598
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      Token token0 = xPathLexer0.slashes();
      assertEquals("a", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(18, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.7164385645510052
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(":", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("5", token3.getTokenText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.342047825930753
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gThknB/y;lgpH1J?d_");
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4664361478862686
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("?X3aop->@E");
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.8036166683174563
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8Z0p`c1`'P<IQ1");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals(".8Z0p", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("`c1`'P<IQ1", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3678496156059594
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gThknB/y;lgpH1J?d_");
      xPathLexer0.getPreviousToken();
      xPathLexer0.doubleColon();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.182995977034132
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0#osenN,5/");
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.werken.saxpath.XPathLexer", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0645655530944926
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":Z mpA6");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4295901178103994
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("agV", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(":", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("5", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("p", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("[", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("zR_I", token5.getTokenText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l>,57H");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("l", token0.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.230268540386065
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("?X3aop->@E");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      xPathLexer0.setXPath("?X3aop->@E");
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("X", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("aop->@E", token4.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.7123373844195681
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68Z0p`c1`'P<IQ1");
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.number();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.8476521847776651
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V<c");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.3255623073205465
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9g-4>ih7@");
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0034490942573897
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tl.MfHtX3-9wbs0@");
      xPathLexer0.relationalOperator();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.equals();
      xPathLexer1.rightParen();
      xPathLexer0.operatorName();
      xPathLexer1.consume();
      xPathLexer1.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.913357046427591
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NdjN6b!+NJ&oAWT2e");
      XPathLexer xPathLexer1 = new XPathLexer("NdjN6b!+NJ&oAWT2e");
      xPathLexer1.equals();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer1.div();
      xPathLexer1.relationalOperator();
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1474929523748032
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("puGw{");
      xPathLexer0.div();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.star();
      xPathLexer0.star();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.consume((-56));
      xPathLexer0.setXPath("puGw{");
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("p", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("u", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Gw", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      char char0 = xPathLexer0.LA(3373);
      assertEquals('\uFFFF', char0);
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.2610950135610226
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b!>i_H");
      xPathLexer0.or();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1TKh$>y$1'VA%m]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("TKh$>y$1'VA%m]", token1.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.137892644543157
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"s8m ;wJD_^\"G}o");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("\"s8m ;wJD_^\"G}o");
      Token token0 = xPathLexer1.pipe();
      assertEquals("\"", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(27, token1.getTokenType());
      assertEquals("s8m ;wJD_^", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer1.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.9556050484378131
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.0eqlF");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals(14, token0.getTokenType());
      assertEquals("{.", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("0", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("eqlF", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.6221350157583385
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("?X3aop->@E");
      xPathLexer0.slashes();
      xPathLexer0.setXPath("?X3aop->@E");
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.2554691542004137
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("A:3?");
      xPathLexer0.getPreviousToken();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4u.f70G{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4:u#>Z\"_wN\"6QkjxqU");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1688074319411166
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sFeben5DzI!+w}JU");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("sFeben5DzI", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("w}JU", token3.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.8281759690738374
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      Token token0 = xPathLexer0.slashes();
      assertEquals("a", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("gV", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("5", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Qp[zR_I]", token3.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".JZ0p`Y*1`'PXIQ1");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.501959300755325
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NdjN6b!+NJ&oAWT2e");
      XPathLexer xPathLexer1 = new XPathLexer("NdjN6b!+NJ&oAWT2e");
      xPathLexer1.equals();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer1.div();
      xPathLexer1.relationalOperator();
      xPathLexer1.relationalOperator();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0127025336804416
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b!>i_H");
      xPathLexer0.or();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("b!", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("_H", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.number();
      assertEquals("", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^s`y]@79n75[jke");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("^s`y]@79n75[jke", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.865821653842094
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;{='knrg&4Ku!=L:L");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals(";", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("{", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(21, token4.getTokenType());
      assertEquals("=", token4.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.1986572248099534
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C3[q9AqY]AfN.#NC1=)");
      XPathLexer xPathLexer1 = new XPathLexer("C3[q9AqY]AfN.#NC1=)");
      xPathLexer1.dots();
      xPathLexer1.rightParen();
      xPathLexer0.relationalOperator();
      xPathLexer1.doubleColon();
      xPathLexer1.rightParen();
      xPathLexer0.rightParen();
      xPathLexer1.operatorName();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.3311127394998663
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!k$?>R}-W}KIrXP] ");
      xPathLexer0.comma();
      xPathLexer0.getPreviousToken();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.consume(8);
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.4252861224593705
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/.2S<55U<L@k{");
      xPathLexer0.minus();
      xPathLexer0.setXPath("ci|wml(_\u0007mZGh|`Xg");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.3470471556612704
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;}c0qz_tGx2j#");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals(";}", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("c0qz_tGx2j", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("#", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4u.F70G{");
      Token token0 = xPathLexer0.not();
      assertEquals("4", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("u.F70G", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.2978959498144782
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      xPathLexer0.slashes();
      xPathLexer0.setXPath("czeCrIuM20");
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.consume();
      xPathLexer0.at();
      Token token1 = xPathLexer0.nextToken();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.402187885495295
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/.2S<55U<L@k{");
      xPathLexer0.setXPath("dt4wa3SI|2A<i}~l`");
      xPathLexer0.minus();
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("&,_.wIu7Z|Ru");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("&,_.wIu7Z|Ru", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3159996929078208
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gThknB/y;lgpH1J?d_");
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.217603877282151
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1OKh$>y*Y'U:A%]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("O", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Kh$>y*Y'U:A%]", token2.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.9386953705924931
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/.2S<55U<L@k{");
      xPathLexer0.minus();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.8281759690738374
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      Token token0 = xPathLexer0.slashes();
      assertEquals("a", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.at();
      assertEquals("Q", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("p", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.986649413649575
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.0eqlF");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals(".0", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("e", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("qlF", token3.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.8309372687620074
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;{='knrg&4Ku!=L:L");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.number();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.7035835193346374
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8Z0p`c1`'P<IQ1");
      xPathLexer0.setXPath("1(pT[");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.909639091513866
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NjN6b!J&oAW5Ye");
      XPathLexer xPathLexer1 = new XPathLexer("NjN6b!J&oAW5Ye");
      Token token0 = xPathLexer1.equals();
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("jN6b", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("N", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(23, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer1.or();
      xPathLexer1.or();
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.8017647286373932
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b!>i_H");
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1719552072554666
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<C;}c0qz_`t2j#");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.3078186749142164
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/.2S<55U<L@k{");
      xPathLexer0.minus();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("XhpA");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.453729713044849
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.at();
      xPathLexer0.equals();
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.3159996929078208
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gThknB/y;lgpH1J?d_");
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=h\"or");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("h", token1.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.2959034685583384
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1OKh$>y*Y'U:A%]");
      Token token0 = xPathLexer0.dollar();
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("OKh", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(26, token3.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'viS&EK;7|$$VuP");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("", token0.getTokenText());
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.8748624860649398
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b!>i_H");
      XPathLexer xPathLexer1 = new XPathLexer("RNj<M+MvtDfK19");
      xPathLexer1.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.3045554813480351
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!k$?>R}-W}KIrXP] ");
      xPathLexer0.comma();
      xPathLexer0.getPreviousToken();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.4449038536191219
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"s8m ;wJD_^\"G}o");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("\"s8m ;wJD_^\"G}o");
      xPathLexer1.pipe();
      xPathLexer1.whitespace();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.number();
      xPathLexer1.whitespace();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Yfp0,_");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      assertEquals(") (", xPathLexer1.getXPath());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.3078186749142164
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/.2S<55U<L@k{");
      xPathLexer0.minus();
      xPathLexer0.or();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.3680868239725454
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b!>i_H");
      xPathLexer0.setXPath(") (");
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.138224055637716
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C3[q9AqY]AfN.#NC1=)");
      XPathLexer xPathLexer1 = new XPathLexer("C3[q9AqY]AfN.#NC1=)");
      xPathLexer1.rightParen();
      xPathLexer0.relationalOperator();
      xPathLexer1.doubleColon();
      xPathLexer1.rightParen();
      xPathLexer0.doubleColon();
      xPathLexer0.rightParen();
      xPathLexer1.operatorName();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.9294253809531003
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D");
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"s8m ;wJD_^\"G}o");
      XPathLexer xPathLexer1 = new XPathLexer("*|,%om%!J~LCt");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("*", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.1876500911131787
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1OKh$>y*Y'U:A%]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("1", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("OKh$>y*Y'U:A%]", token1.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.7619471569286802
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.0eqlF");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{.0eqlF", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("{", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".0", token2.getTokenText());
      assertEquals(31, token2.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.7914141957568401
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      Token token0 = xPathLexer0.slashes();
      assertEquals("a", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("g", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("5", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("Qp[zR_I]", token4.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!vWcKMDeb->B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("vWcKMDeb->B", token1.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0842336636799605
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d?;O;.;PvB=");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.star();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("O;", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(".", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals(";", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("PvB", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("", token5.getTokenText());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.944138447210579
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b!>i_H");
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.setXPath("b!>i_H");
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.3126919652943068
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sFeben5DzI!+w}JU");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("sFeben5DzI", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("w", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("}J", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("U", token5.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7I3_HF}nv.");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.1084468986883382
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sFeben5DzI!+w}JU");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("sFeben5DzI", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(5, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("w", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("}JU", token4.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.745835540044417
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68Z0p`c1`'P<IQ1");
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2HANr[46");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.9003309451206125
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8Z0p`c1`'P<IQ1");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(".8Z0p", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("`", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("c1", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.3045554813480351
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!k$?>R}-W}KIrXP] ");
      xPathLexer0.comma();
      xPathLexer0.getPreviousToken();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("!k$?>R}-W}KIrXP] ");
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.9092138703714914
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b!>i_H");
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.342047825930753
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gThknB/y;lgpH1J?d_");
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.3383717048035724
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l>,57H");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("l", token0.getTokenText());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertNotNull(token1);
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("A:3?");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(",", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.3239301177850333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("agV:5Qp[zR_I]");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("gV", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.leftParen();
      assertEquals(":", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.notEquals();
      assertEquals("Qp", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.7283787659297728
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.0eqlF");
      xPathLexer0.div();
      Token token0 = xPathLexer0.at();
      assertEquals("{", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("0", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.star();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.2615548187978791
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sFeben5DzI!+w}JU");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("sFeben5DzI", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("+w", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("}", token3.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("JU", token4.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.8603977537425277
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.0eqlF");
      xPathLexer0.div();
      Token token0 = xPathLexer0.at();
      assertEquals("{", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals(".0", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("eqlF", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.154023443440409
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tl.MfHtX3-9wbs0@");
      xPathLexer0.relationalOperator();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.equals();
      xPathLexer0.dots();
      xPathLexer1.rightParen();
      xPathLexer0.operatorName();
      xPathLexer1.or();
      xPathLexer1.consume();
      xPathLexer1.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      xPathLexer1.div();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.3078186749142164
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/.2S<55U<L@k{");
      xPathLexer0.minus();
      xPathLexer0.or();
      xPathLexer0.setXPath("-7pCTblEs@");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.235628800244279
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sFeben5DzI!+w}JU");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("sFeben5DzI", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      xPathLexer0.setXPath("sFeben5DzI!+w}JU");
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("s", token2.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Feben5DzI!+w}JU", token3.getTokenText());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!vWcKMDeb->B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("v", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("WcKMDeb->B", token2.getTokenText());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.114072128878611
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d?;O;.;PvB=");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.notEquals();
      Token token2 = xPathLexer0.slashes();
      assertEquals("O", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(";", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals(22, token1.getTokenType());
      assertEquals("?;", token1.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(".;", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("PvB", token5.getTokenText());
      
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("", token6.getTokenText());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.4469763690162285
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NdjN6b!+NJ&oAWT2e");
      XPathLexer xPathLexer1 = new XPathLexer("NdjN6b!+NJ&oAWT2e");
      Token token0 = xPathLexer1.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer1.div();
      xPathLexer1.relationalOperator();
      xPathLexer1.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("NdjN6b", token2.getTokenText());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.2610950135610226
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b!>i_H");
      xPathLexer0.or();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("b", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("i_H", token3.getTokenText());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.636846264973458
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.not();
      Token token0 = xPathLexer0.dollar();
      assertEquals("o", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.number();
      assertEquals(".", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("rk", token4.getTokenText());
      
      Token token5 = xPathLexer0.at();
      token5.toString();
      Token token6 = xPathLexer0.whitespace();
      assertEquals("", token6.getTokenText());
      
      xPathLexer0.leftParen();
      Token token7 = xPathLexer0.comma();
      assertEquals("s", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      String string0 = token5.toString();
      assertEquals("[ (16) (e)", string0);
      
      xPathLexer0.operatorName();
      Token token8 = xPathLexer0.leftParen();
      assertEquals("a", token8.getTokenText());
      assertEquals(1, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("xpath.XPathLexer", token9.getTokenText());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.402187885495295
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/.2S<55U<L@k{");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.or();
      Token token1 = xPathLexer0.pipe();
      assertEquals(".", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("2", token2.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(6, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("S", token3.getTokenText());
      
      Token token4 = xPathLexer0.relationalOperator();
      assertEquals("<", token4.getTokenText());
      assertEquals(7, token4.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.9441384472105789
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b!>i_H");
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.8658216538420939
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;{='knrg&4Ku!=L:L");
      xPathLexer0.setXPath("-([>Umj?ft7aunR?)bp");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.star();
      xPathLexer0.number();
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifier();
      xPathLexer0.leftParen();
      xPathLexer0.star();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O%LzY[");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("O", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("+&px-");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("%LzY[", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Lg{iuq9TnW,");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(": ze<");
      xPathLexer0.setXPath("-/)/H$8Dn:9w");
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+GUkB8>=");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.equals();
      assertEquals("G", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.slashes();
      token2.toString();
      token2.toString();
      token2.toString();
      token2.toString();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (11) (U)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.or();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("kB8", token3.getTokenText());
      
      Token token4 = xPathLexer0.relationalOperator();
      assertEquals(10, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.number();
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".9e>04J%;VtPa");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".9", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("e>04J%;VtPa", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wUG<=nYQqF{~AeIC");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O8K.7.wh1pN");
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.whitespace();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }
}
