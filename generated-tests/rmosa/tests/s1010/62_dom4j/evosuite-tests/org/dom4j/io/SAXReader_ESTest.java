/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 09:38:31 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.Enumeration;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.ElementHandler;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.dom.DOMDocument;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.ElementModifier;
import org.dom4j.io.ElementStack;
import org.dom4j.io.PruningDispatchHandler;
import org.dom4j.io.PruningElementStack;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXModifyElementHandler;
import org.dom4j.io.SAXReader;
import org.dom4j.tree.DefaultDocument;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.xml.sax.EntityResolver;
import org.xml.sax.HandlerBase;
import org.xml.sax.InputSource;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLFilter;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DefaultDocumentFactory.getInstance();
      sAXReader0.createDefaultEntityResolver("O");
      String string0 = "D!m";
      MockFile mockFile0 = new MockFile("//tmp/khKV4iDOJ?lx0", "D!m");
      // Undeclared exception!
      try { 
        MockFile.createTempFile("d=", "org.jaxen.function.ext.UpperFunction", (File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader();
      String string0 = "";
      EntityResolver entityResolver0 = sAXReader0.createDefaultEntityResolver("");
      sAXReader0.setEntityResolver(entityResolver0);
      boolean boolean0 = false;
      try { 
        MockURL.URL("");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: 
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("org.dom4j.io.JAXPHelper");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class org.dom4j.io.JAXPHelper found but cannot be loaded
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      boolean boolean0 = sAXReader0.isStringInternEnabled();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(boolean0);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      boolean boolean0 = sAXReader0.isIncludeExternalDTDDeclarations();
      assertFalse(boolean0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      PruningDispatchHandler pruningDispatchHandler1 = new PruningDispatchHandler();
      pruningDispatchHandler0.addHandler((String) null, pruningDispatchHandler1);
      ElementModifier elementModifier0 = mock(ElementModifier.class, new ViolatedAssumptionAnswer());
      SAXModifyElementHandler sAXModifyElementHandler0 = new SAXModifyElementHandler(elementModifier0);
      pruningDispatchHandler0.setDefaultHandler(sAXModifyElementHandler0);
      PruningDispatchHandler pruningDispatchHandler2 = new PruningDispatchHandler();
      DocumentFactory documentFactory0 = sAXReader0.getDocumentFactory();
      assertNotNull(documentFactory0);
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = sAXReader0.isIgnoreComments();
      assertFalse(boolean0);
      
      sAXReader0.setDefaultHandler(pruningDispatchHandler1);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, true);
      sAXReader0.createXMLReader();
      try { 
        MockURL.URL("-rQ-$Tz", "//tmp/E}jy_0-QO?G>Vu@a0sY`./HD]", 478, " Ntz$3<)X");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: -rq-$tz
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      sAXReader0.isMergeAdjacentText();
      ElementStack elementStack0 = new ElementStack();
      // Undeclared exception!
      try { 
        elementStack0.reallocate((-3775));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.ElementStack", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = new QName("", (Namespace) null, "");
      qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null, false);
      boolean boolean0 = sAXReader0.isStripWhitespaceText();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      sAXReader0.isIncludeInternalDTDDeclarations();
      DefaultHandler defaultHandler0 = new DefaultHandler();
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.getXMLFilter();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      String string0 = "-QO?G>Vu@a0sY`./HD]";
      try { 
        sAXReader0.read((InputSource) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7562205021103585
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(parserAdapter0);
      sAXReader0.configureReader(parserAdapter0, sAXContentHandler0);
      sAXReader0.configureReader(parserAdapter0, sAXContentHandler0);
      String string0 = "file://";
      File file0 = MockFile.createTempFile("file://", "file://");
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7810370800861843
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl0.setParent(xMLFilterImpl1);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      defaultHandler0.startElement("k>e", "!KxKe\"7", "//tmp/Error on line 0org.dom4j.io.SAXReader", attributesImpl0);
      sAXReader0.configureReader(xMLFilterImpl0, defaultHandler0);
      MockFile mockFile0 = new MockFile("0=l-TB3u ", "//tmp/http:/xml.org/sax/features/validation0");
      File file0 = MockFile.createTempFile("2,`62<)RI", "2,`62<)RI", (File) mockFile0);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      sAXReader0.createDefaultEntityResolver((String) null);
      sAXReader0.setValidation(false);
      ElementModifier elementModifier0 = mock(ElementModifier.class, new ViolatedAssumptionAnswer());
      SAXModifyElementHandler sAXModifyElementHandler0 = new SAXModifyElementHandler(elementModifier0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      String string0 = "-QO?G>Vu@a0sY`./HD]";
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      xMLFilterImpl0.setContentHandler(xMLFilterImpl2);
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "-QO?G>Vu@a0sY`./HD]", uRLStreamHandler0);
      try { 
        sAXReader0.read(uRL1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      sAXReader0.getDocumentFactory();
      File file0 = null;
      MockFile.createTempFile("a*[n", "//tmp/.;JZ#L$}HA >&0/tmp/wKV0<ciy?e=`D#u!Cv^wS3", (File) null);
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = true;
      SAXReader sAXReader0 = new SAXReader(true);
      EvoSuiteFile evoSuiteFile0 = null;
      sAXReader0.createDefaultEntityResolver("//tmp/g}#f&XeEijv}J!0$N&=P(^HzJmLEk;!B6");
      URI uRI0 = MockURI.aFTPURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setValidation(true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      MockURL.getFileExample();
      sAXReader0.getErrorHandler();
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      sAXReader0.setStripWhitespaceText(true);
      String string0 = "http://xml.org/sax/features/validation";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "http://xml.org/sax/features/validation");
      String string1 = "//tmp/(d#&$0ER0/tmp/tmp/tmp/http:/xml.org/sax/properties/lexical-handler0http:/xml.org/sax/properties/lexical-handler0>03\\G~k0'31t*hzG<EFTth(I=d";
      try { 
        MockURL.URL("http://xml.org/sax/features/validation", "//tmp/(d#&$0ER0/tmp/tmp/tmp/http:/xml.org/sax/properties/lexical-handler0http:/xml.org/sax/properties/lexical-handler0>03G~k0'31t*hzG<EFTth(I=d", 356, "//tmp/(d#&$0ER0/tmp/tmp/tmp/http:/xml.org/sax/properties/lexical-handler0http:/xml.org/sax/properties/lexical-handler0>03G~k0'31t*hzG<EFTth(I=d");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: http://xml.org/sax/features/validation
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setIncludeInternalDTDDeclarations(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      sAXReader0.setIgnoreComments(true);
      HandlerBase handlerBase0 = new HandlerBase();
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((XMLReader) null);
      sAXReader0.resetHandlers();
      MockFile mockFile0 = new MockFile("O");
      // Undeclared exception!
      try { 
        mockFile0.setLastModified((-638L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative time
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLReader(xMLFilterImpl0);
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      try { 
        sAXReader0.setFeature("jVr`79fj", false);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature: jVr`79fj
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.removeHandler("//tmp/YS@T=^HR0<ciy?e=`D#u!Cv^wS3");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.endElement("Qw*C3@*B/-", "//tmp/wKV0.tmp", "B|Vr_B");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      MockURL.getFileExample();
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.unparsedEntityDecl("//tmp/wKV0.tmp", "//tmp/<ciy?e=`D#u!Cv^wS305C4?Kf(+Cd", "B|Vr_B", "Qw*C3@*B/-");
      StringReader stringReader0 = new StringReader("//tmp/wKV0.tmp");
      try { 
        sAXReader0.read((Reader) stringReader0, "L,J-");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("org.dom4j.io.JAXPHelper", true);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class org.dom4j.io.JAXPHelper found but cannot be loaded
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      ElementModifier elementModifier0 = mock(ElementModifier.class, new ViolatedAssumptionAnswer());
      SAXModifyElementHandler sAXModifyElementHandler0 = new SAXModifyElementHandler(elementModifier0);
      sAXReader0.setDefaultHandler(sAXModifyElementHandler0);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-3182));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      DispatchHandler dispatchHandler1 = sAXReader0.getDispatchHandler();
      dispatchHandler1.setDefaultHandler(dispatchHandler0);
      dispatchHandler1.resetHandlers();
      PruningElementStack pruningElementStack0 = null;
      try {
        pruningElementStack0 = new PruningElementStack((String[]) null, dispatchHandler1, 990);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.PruningElementStack", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = "Error on line ";
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("Error on line ", "Error on line ");
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("s.oQ{SKga\f");
      sAXReader_SAXEntityResolver0.resolveEntity("s.oQ{SKga\f", "");
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "");
      sAXReader_SAXEntityResolver0.resolveEntity("*d:TEYWf?5yLywy", (String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("Invalid path of length: ", "org.dom4j.io.SAXReader$SAXEntityResolver");
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("s.oQ{SKga\f");
      sAXReader_SAXEntityResolver0.uriPrefix = "//tmp/http:/xml.org/sax/features/string-interning0-QO?G>Vu@a0sY`./HD]";
      sAXReader_SAXEntityResolver0.resolveEntity("s.oQ{SKga\f", "//tmp/http:/xml.org/sax/features/string-interning0-QO?G>Vu@a0sY`./HD]");
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "{6");
      sAXReader_SAXEntityResolver0.resolveEntity("*d:TEYWf?5yLywy", (String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("Invalid pth of lengt^ ", "org.dom4j.io.SAXReader$SAXEntityResolver");
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      ElementModifier elementModifier0 = mock(ElementModifier.class, new ViolatedAssumptionAnswer());
      SAXModifyElementHandler sAXModifyElementHandler0 = new SAXModifyElementHandler(elementModifier0);
      sAXReader0.addHandler("4~Dk$t", sAXModifyElementHandler0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      try { 
        sAXReader0.read((InputStream) pipedInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected Nested exception: Pipe not connected
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.7810370800861843
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("0=l-TB3u /tmp/http:/xml.org/sax/features/validation0/2,`62<)RI02,`62<)RI");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Error on line ");
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      String string0 = "k>e";
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl0.setParent(xMLFilterImpl1);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      defaultHandler0.startElement("k>e", "!KxKe\"7", "//tmp/Error on line 0org.dom4j.io.SAXReader", attributesImpl0);
      sAXReader0.configureReader(xMLFilterImpl0, defaultHandler0);
      MockFile mockFile0 = new MockFile("0=l-TB3u ", "//tmp/http:/xml.org/sax/features/validation0");
      File file0 = MockFile.createTempFile("2,`62<)RI", "2,`62<)RI", (File) mockFile0);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/evosuite_readability_gen/projects/62_dom4j/0=l-TB3u /tmp/http:/xml.org/sax/features/validation0/2,`62<)RI02,`62<)RI : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      try { 
        sAXReader0.setXMLReaderClassName("//tmp/http:/xml.org/sax/features/string-interning0http:/xml.org/sax/features/string-interning");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class //tmp/http:/xml.org/sax/features/string-interning0http:/xml.org/sax/features/string-interning not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, false);
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      MockFile mockFile0 = new MockFile("http://xml.org/sax/features/string-interning");
      mockFile0.mkdir();
      mockFile0.toPath();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      sAXReader0.setDocumentFactory(defaultDocumentFactory0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "//tmp/-QO?G>Vu@a0sY`./HD]0[(DefaultTruthExpr): ");
      // Undeclared exception!
      try { 
        MockFile.createTempFile("/i", "hiVg|}]i5s2a~?q");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.getDocumentFactory();
      String string0 = "2.0";
      sAXReader0.getDocumentFactory();
      sAXReader0.getEncoding();
      sAXReader0.getDispatchHandler();
      sAXReader0.getXMLReader();
      String string1 = "43VE#";
      // Undeclared exception!
      try { 
        MockURI.create("//tmp/tmp/tmp/tmp/http:/xml.org/sax/properties/lexical-handler0http:/xml.org/sax/properties/lexical-handler0>03G~k0'V1t*hzG<EFTth(I=d0-QO?G>Vu@a0sY`./HD]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 108: //tmp/tmp/tmp/tmp/http:/xml.org/sax/properties/lexical-handler0http:/xml.org/sax/properties/lexical-handler0>03G~k0'V1t*hzG<EFTth(I=d0-QO?G>Vu@a0sY`./HD]
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("http://xml.org/sax/properties/lexical-handler");
      String string0 = "-QO?G>Vu@a0sY`./HD]";
      stringReader0.markSupported();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-QO?G>Vu@a0sY`./HD]");
      stringReader0.ready();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      xMLFilterImpl0.setContentHandler(xMLFilterImpl2);
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.URL(uRL0, "-QO?G>Vu@a0sY`./HD]", uRLStreamHandler0);
      try { 
        sAXReader0.read("http://xml.org/sax/properties/lexical-handler");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setStringInternEnabled(true);
      DefaultHandler defaultHandler0 = new DefaultHandler();
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getEntityResolver();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("http://xml.org/sax/properties/lexical-handler");
      StringReader stringReader1 = new StringReader("-QO?G>Vu@a0sY`./HD]");
      stringReader1.ready();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      StringReader stringReader2 = new StringReader("//tmp/<ciy?e=`D#u!Cv^wS30http:/xml.org/sax/features/string-interning");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getXMLFilter();
      sAXReader0.setEncoding(" attributes: ");
      StringReader stringReader0 = new StringReader(" attributes: ");
      try { 
        sAXReader0.read((Reader) stringReader0, " attributes: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  attributes:  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sCadh@EIe[u$4sl.");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      try { 
        sAXReader0.setProperty("", xMLFilterImpl1);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: 
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      assertFalse(sAXReader0.isMergeAdjacentText());
      
      sAXReader0.setMergeAdjacentText(true);
      assertTrue(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      sAXReader0.setDispatchHandler(dispatchHandler0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      String string0 = "-QO?G>Vu@a0sY`./HD]";
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      xMLFilterImpl0.setContentHandler(xMLFilterImpl2);
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.URL(uRL0, "-QO?G>Vu@a0sY`./HD]", uRLStreamHandler0);
      File file0 = MockFile.createTempFile("//tmp/tmp/tmp/http:/xml.org/sax/properties/lexical-handler0http:/xml.org/sax/properties/lexical-handler0>03G~k0'31t*hzG<EFTth(I=d", "-QO?G>Vu@a0sY`./HD]");
      MockFile mockFile0 = new MockFile(file0, "//tmp/guZ>N1zf)=QhzEjo0n6R<e)s>c;_*");
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      MockURL.getFileExample();
      PipedInputStream pipedInputStream0 = new PipedInputStream(42);
      HandlerBase handlerBase0 = new HandlerBase();
      pipedInputStream0.mark(42);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, locatorImpl0);
      sAXParseException0.getCause();
      xMLFilterImpl0.fatalError(sAXParseException0);
      String string0 = "guZ>N1zf)=QhzEjo";
      try { 
        sAXReader0.read((InputStream) pipedInputStream0, "guZ>N1zf)=QhzEjo");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      String string0 = "-QO?G>Vu@a0sY`./HD]";
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      MockURL.getFileExample();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        sAXReader0.read((InputStream) pipedInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      sAXReader0.setErrorHandler(defaultHandler0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      HandlerBase handlerBase0 = new HandlerBase();
      sAXReader0.setErrorHandler(defaultHandler0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        sAXReader0.read((InputStream) sequenceInputStream0, "//tmp/http:/xml.org/sax/features/namespaces0<ciy?e=#u!Cv^wS3");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SAXReader sAXReader0 = new SAXReader();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      try { 
        sAXReader0.read((InputStream) sequenceInputStream1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.8782183066708504
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setEncoding("http://xml.org/sax/features/namespace-prefixes");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      String string0 = null;
      try { 
        sAXReader0.read((InputStream) sequenceInputStream0, (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl0.setContentHandler(xMLFilterImpl2);
      MockURL.getFileExample();
      sAXReader0.setEncoding("");
      StringReader stringReader0 = new StringReader("-QO?G>Vu@a0sY`./HD]");
      sAXReader0.setMergeAdjacentText(true);
      // Undeclared exception!
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setEncoding("http://xml.org/sax/features/namespace-prefixes");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      String string0 = null;
      try { 
        sAXReader0.read((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "sBkScxPm_Dh");
      String string0 = "a7=1!cA";
      StringReader stringReader0 = new StringReader("a7=1!cA");
      stringReader0.ready();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, true);
      sAXReader0.getXMLFilter();
      xMLFilterImpl1.setParent((XMLReader) null);
      sAXReader0.setEncoding("//tmp/Named access unsupported0Tb{'-Lfkz&74'Jf|");
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "//tmp/)LO%4MKE7e\u0001.tmp", uRLStreamHandler0);
      DOMDocument dOMDocument0 = new DOMDocument("//tmp/)LO%4MKE7e\u0001.tmp");
      try { 
        sAXReader0.read(uRL1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@461b8c40 Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@461b8c40 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setEncoding("{?cdADp`3R}");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DefaultDocument defaultDocument0 = new DefaultDocument();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      try { 
        sAXReader0.read((InputStream) pipedInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Invalid encoding name \"{?CDADP`3R}\". Nested exception: Invalid encoding name \"{?CDADP`3R}\".
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.9722469794234416
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      String string0 = "-QO?G>Vu@a0sY`./HD]";
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      sAXReader0.setEncoding("-QO?G>Vu@a0sY`./HD]");
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      xMLFilterImpl0.setContentHandler(xMLFilterImpl2);
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.URL(uRL0, "-QO?G>Vu@a0sY`./HD]", uRLStreamHandler0);
      File file0 = MockFile.createTempFile("//tmp/tmp/tmp/http:/xml.org/sax/properties/lexical-handler0http:/xml.org/sax/properties/lexical-handler0>03G~k0'31t*hzG<EFTth(I=d", "-QO?G>Vu@a0sY`./HD]");
      MockFile mockFile0 = new MockFile(file0, "//tmp/guZ>N1zf)=QhzEjo0n6R<e)s>c;_*");
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I8},Hno4oa<[q;j&n");
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      File file0 = MockFile.createTempFile("Tyq4g", "http://xml.org/sax/properties/lexical-handler");
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@2c150a42 Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@2c150a42 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }
}
