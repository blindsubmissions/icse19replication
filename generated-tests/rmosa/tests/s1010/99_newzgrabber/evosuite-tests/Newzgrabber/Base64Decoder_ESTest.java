/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 09:42:30 GMT 2018
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.13906079845474112
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[15];
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)102;
      byteArray0[5] = (byte)102;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      String[] stringArray0 = new String[1];
      byteArrayInputStream0.read();
      stringArray0[0] = "1^\"$t6DMi";
      BufferedCustomInputStream.main(stringArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.read();
      Byte byte0 = new Byte((byte)102);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.setOutputStream(pipedOutputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (byte)10);
      try { 
        pipedOutputStream0.connect(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.15407610367102942
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)95;
      byteArray0[5] = (byte)95;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "1^\"$t6DMi";
      BufferedCustomInputStream.main(stringArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.read();
      Byte byte0 = new Byte((byte)95);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.setOutputStream(pipedOutputStream0);
      bufferedCustomInputStream0.mark((byte)95);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      Newzgrabber.verbose = true;
      base64Decoder1.decodeStream();
      base64Decoder1.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(7L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.1461447460085638
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)10;
      byteArray0[3] = (byte) (-25);
      byteArray0[6] = (byte) (-25);
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)10;
      byteArray1[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1, (-4753), 30);
      byteArrayInputStream0.read();
      byteArrayInputStream0.read();
      bufferedCustomInputStream0.read();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      base64Decoder0.setOutputStream((OutputStream) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArrayInputStream0.reset();
      byteArrayInputStream1.close();
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder1.decodeStream();
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder2.decodeStream();
      base64Decoder2.decodeStream();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      base64Decoder0.decodeStream();
      base64Decoder2.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(5L, base64Decoder0.getLineCount());
      
      base64Decoder1.decodeStream();
      assertEquals(0L, base64Decoder1.getLineCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)10;
      byteArray0[1] = (byte) (-25);
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)10;
      byteArray1[1] = (byte)0;
      byteArrayInputStream0.read();
      bufferedCustomInputStream0.read();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.setOutputStream((OutputStream) null);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray1);
      Newzgrabber.IsBatch = true;
      byteArrayInputStream0.reset();
      byteArrayInputStream1.close();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(0, byteArrayInputStream0.available());
      
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(0L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[5] = (byte)10;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "1^\"$t6DMi";
      BufferedCustomInputStream.main(stringArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.read();
      Byte byte0 = new Byte((byte)0);
      bufferedCustomInputStream0.mark((byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      Newzgrabber.verbose = true;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(5L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.13906079845474112
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[15];
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)102;
      byteArray0[5] = (byte)102;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      String[] stringArray0 = new String[1];
      byteArrayInputStream0.read();
      stringArray0[0] = "1^\"$t6DMi";
      BufferedCustomInputStream.main(stringArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.read();
      Byte byte0 = new Byte((byte)102);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.ABORT = true;
      base64Decoder0.setOutputStream(pipedOutputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (byte)10);
      try { 
        pipedOutputStream0.connect(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)43;
      byteArray0[5] = (byte)43;
      byteArray0[6] = (byte)43;
      byteArray0[7] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((byte)10);
      BufferedCustomInputStream.main((String[]) null);
      byteArrayInputStream0.read();
      byteArrayInputStream0.read();
      Byte byte0 = new Byte((byte)10);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArrayInputStream0.reset();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.decodeStream();
      assertEquals(3L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)75;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)75;
      byteArray0[5] = (byte)75;
      byteArray0[6] = (byte)75;
      byteArray0[7] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0);
      bufferedCustomInputStream1.ready();
      BufferedCustomInputStream.main((String[]) null);
      byteArrayInputStream0.read();
      byteArrayInputStream0.read();
      Byte byte0 = new Byte((byte)10);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream1, pipedOutputStream0);
      bufferedCustomInputStream1.read();
      base64Decoder0.decodeStream();
      base64Decoder0.setOutputStream(pipedOutputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      FileSystemHandling.shouldAllThrowIOExceptions();
      BufferedCustomInputStream.main((String[]) null);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (byte)75);
      base64Decoder1.decodeStream();
      assertFalse(base64Decoder1.ProgressSet);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)49;
      byteArray0[5] = (byte)49;
      byteArray0[6] = (byte)49;
      byteArray0[7] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      BufferedCustomInputStream.main((String[]) null);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.setOutputStream(pipedOutputStream0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      base64Decoder0.LineCount = (long) (byte)49;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(52L, base64Decoder0.getLineCount());
  }
}
