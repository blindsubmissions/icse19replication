/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 09:49:59 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.43764750049431006
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&]I");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("b$5>");
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8450012700333709
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;Z<E8q~*9]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals(";", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Z", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(7, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6433473369554495
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ieO@");
      xPathLexer0.or();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("i", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("eO", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("@", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.or();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.7207284883728764
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ieO@");
      xPathLexer0.or();
      xPathLexer0.star();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6433473369554495
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ieO@");
      xPathLexer0.or();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("i", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("eO", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(16, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.7207284883728765
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ieO@");
      xPathLexer0.or();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("i", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("eO", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(16, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.or();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.8798846890844252
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EDh");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("E", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("D", token1.getTokenText());
      
      xPathLexer0.literal();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8177174986975012
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ieO@");
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.7799427602175752
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      Token token0 = xPathLexer1.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer(":4");
      Token token2 = xPathLexer3.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer3.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("4", token3.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8911674701306824
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("PU.0");
      xPathLexer0.relationalOperator();
      xPathLexer0.consume(61);
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.8155607832190567
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      xPathLexer1.nextToken();
      xPathLexer0.notEquals();
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer(":4");
      xPathLexer3.nextToken();
      xPathLexer2.or();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6433473369554495
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ieO@");
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8598512162623069
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("PU.0");
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9309691885562035
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&]I");
      Token token0 = xPathLexer0.plus();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6038680000909876
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ieO@");
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8956537157300786
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6038680000909876
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ieO@");
      xPathLexer0.or();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("i", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("eO", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(16, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.or();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.8876679159602999
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?8f,{Bn+=");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(".1@1U|XtTG");
      xPathLexer1.not();
      xPathLexer0.comma();
      xPathLexer1.nextToken();
      xPathLexer1.number();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.7158441153935895
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(" ", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("(", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6998151492707608
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;Z<E8q~*9]");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?8f,{Bn+=");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("B7_jGO");
      xPathLexer1.comma();
      xPathLexer1.nextToken();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer(".1@1U|XtTG");
      Token token0 = xPathLexer2.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token2);
      assertEquals(26, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("7LR(\"");
      Token token3 = xPathLexer1.number();
      assertEquals("7", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.355816602693639
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.setXPath("jd{GG8!.P_|f|QU#)+8");
      xPathLexer0.number();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("j", token2.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("d{GG8!.P_|f|QU#)+8", token4.getTokenText());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.6565441118209348
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Wv!=NFY!2");
      xPathLexer0.doubleColon();
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("->e/L>/g~3|!(wk(zC");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      xPathLexer1.and();
      xPathLexer0.nextToken();
      xPathLexer1.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0387276841299962
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?8f,{Bn+=");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(".1@1U|XtTG");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer1.nextToken();
      xPathLexer1.number();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9185219369049166
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?8f,{Bn+=");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(".1@1U|XtTG");
      xPathLexer0.comma();
      xPathLexer1.literal();
      xPathLexer1.nextToken();
      xPathLexer1.number();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.8302225966034773
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?8f,{Bn+=");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("<?", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("8", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("f,{Bn+=", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(")");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(")", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer1.div();
      Token token4 = xPathLexer1.nextToken();
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4683503768391688
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token1 = xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.at();
      token1.toString();
      xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.mod();
      assertNull(token2);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0969782846704883
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?8f,{Bn+=");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer(".1@1U|XtTG");
      xPathLexer1.pipe();
      xPathLexer1.literal();
      xPathLexer0.comma();
      xPathLexer1.nextToken();
      xPathLexer1.number();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1169592584419976
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(15, token0.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.9409949206988368
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v'bE}XLZpLi,&.0}8");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1700579842211185
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;Z<E8q~*9]");
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0091470567826997
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?8f,{Bn+=");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(".1@1U|XtTG");
      xPathLexer0.comma();
      xPathLexer1.nextToken();
      xPathLexer1.equals();
      xPathLexer1.number();
      xPathLexer1.relationalOperator();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4366453711477531
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.setXPath("!ovH");
      xPathLexer0.number();
      Token token3 = xPathLexer0.colon();
      assertEquals("!", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.setXPath("a?j9;oLt22");
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      assertEquals("", token6.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.3179819204154193
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v'bE}XLZpLi,&.0}8");
      xPathLexer0.and();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("v", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("'", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("b", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("E", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("}X", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals("L", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("ZpLi", token6.getTokenText());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0697010477172642
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" (");
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.dollar();
      xPathLexer0.setXPath("d^-y!O[");
      xPathLexer0.operatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer(" (");
      xPathLexer0.mod();
      xPathLexer1.nextToken();
      xPathLexer1.mod();
      xPathLexer0.and();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.8598512162623069
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("PU.0");
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Wv!=NFY!2");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("Wv", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!=", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W!");
      XPathLexer xPathLexer1 = new XPathLexer("<?8f,{Bn+=");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("W", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.3504302134319666
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?8f,{Bn+=");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("<?", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("<?8f,{Bn+=");
      xPathLexer0.comma();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
      
      Token token3 = xPathLexer1.number();
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer1.identifierOrOperatorName();
      assertEquals("", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(",", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.973555808520861
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.setXPath("`bpbtGV]TTo?/B49w]");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9GGe9KdK");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("GGe9KdK", token1.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_OT-#JBIm 2SN>");
      Token token0 = xPathLexer0.equals();
      assertEquals("_", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("O", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("T-#JBIm 2SN>", token2.getTokenText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}M");
      XPathLexer xPathLexer1 = new XPathLexer("R-A#\"LG.5Q7 2-V<");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("R-A", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("#\"LG.5Q7 2-V<", token1.getTokenText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=3R`~_!8bbU6&c!");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.8459458415311583
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mr\"xOD");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("m", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (23) (r)", string0);
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertNotSame(token4, token1);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jSQg!OQXPsKeG)K");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("jSQg", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("53g,s'`R[T`");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0375687965478468
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertNotNull(token1);
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("(", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.9149141616348964
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;Z<E8q~*9]");
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.div();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V[opE(*D!%T*S_4C");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("V", token0.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5x+r)'f,`t7+6(4I");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("5x", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(5, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r[]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("r", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z9.i`!Fypu@");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("z", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("9.", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$woB|4}0(,{T$");
      Token token0 = xPathLexer0.colon();
      assertEquals("$", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("woB", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.8007376003052609
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v'bE}XLZpLi,&.0}8");
      xPathLexer0.and();
      xPathLexer0.div();
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (26) (v)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("'", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("bE", token2.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.8923194908669846
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dip1O2tYbB1A");
      Token token0 = xPathLexer0.not();
      assertEquals("d", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("ip1O2tYbB1A", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}u");
      Token token0 = xPathLexer0.colon();
      assertEquals("}", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("u", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Q", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!s$");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.9845431176802956
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h_^Yz");
      xPathLexer0.or();
      Token token0 = xPathLexer0.star();
      assertEquals("h", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.pipe();
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer1.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("_", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.311376549274762
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Wv!=NFY!2");
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("!=", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("->>/g~3|!(wk(zC");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("-", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(">", token4.getTokenText());
      assertEquals(9, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("Wv!=NFY!2");
      Token token5 = xPathLexer2.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("Wv", token6.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4Fo9A?j\"JY/qxu+4");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Fo9A?j\"JY/qxu+4", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2zJfm1[ex)0J");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("zJfm1[ex)0J", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p>");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("p", token0.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("al=GWsnoYtS");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("al", token0.getTokenText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.4366453711477531
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.setXPath("!ovH");
      xPathLexer0.number();
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.4145304077897112
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zhld|.SA\"e>5wEBx");
      Token token0 = xPathLexer0.slashes();
      assertEquals("z", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("h", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.minus();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      xPathLexer0.or();
      String string0 = token3.toString();
      assertEquals("[ (6) (d)", string0);
      
      xPathLexer0.setPreviousToken(token3);
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      assertEquals("|", token5.getTokenText());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals(".", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("SA", token7.getTokenText());
      
      xPathLexer0.identifier();
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y-|");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Y-", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("al=GWsnoYtS");
      Token token0 = xPathLexer0.whitespace();
      String string0 = token0.toString();
      assertEquals("[ (-2) ()", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      assertEquals("l=GWsnoYtS", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Nsut?nb7J)!?r}_");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Nsut", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.8876679159602999
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?8f,{Bn+=");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(".1@1U|XtTG");
      xPathLexer0.comma();
      xPathLexer1.pipe();
      xPathLexer1.nextToken();
      xPathLexer1.number();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.8895790552461028
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h_^Yz");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("h_", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tN}@'@>37`]R5*lV@E4");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("tN", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]%iGaeTB.!'u");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tn|7|>TYb5Iz8su");
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("n|7|>TYb5Iz8su", token1.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ktVB3BW");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("ktVB3BW", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dy");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Dy", token0.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^-9x(GW=");
      XPathLexer xPathLexer1 = new XPathLexer("^-9x(GW=");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("^-9x(GW=", token0.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.061728253432223
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2f`3.@");
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.div();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1664707413929105
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?8f,{Bn+=");
      xPathLexer0.whitespace();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer(":4");
      XPathLexer xPathLexer2 = new XPathLexer("\"l&=/;E\"UtV<");
      xPathLexer2.nextToken();
      xPathLexer2.mod();
      Token token0 = xPathLexer2.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.8895790552461028
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ieO@");
      xPathLexer0.setXPath("ti`q{_UX`Q^`S+^");
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.8007376003052609
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v'bE}XLZpLi,&.0}8");
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("v", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (26) (')", string0);
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("}", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("XLZpLi", token3.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.5147043048673234
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Wv!=NFY!2");
      xPathLexer0.doubleColon();
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("->e/L>/g~3|!(wk(zC");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      xPathLexer1.and();
      xPathLexer0.nextToken();
      xPathLexer1.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.rightParen();
      Token token1 = xPathLexer0.dots();
      assertEquals(14, token1.getTokenType());
      assertEquals("m.", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2n|nsW\"_hJ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.4090984679184881
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2f`3.@");
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("f", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("`", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("3.", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("@", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.number();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      assertNull(xPathLexer1.getXPath());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K)T^dF~MTNj+D~d<\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("K", token0.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*mMq#vS~v[eQ0 L");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(20, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("mMq", token1.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$woB|4}0(,{T$");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(26, token0.getTokenType());
      assertEquals("$", token0.getTokenText());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.973555808520861
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(" ", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.setXPath("|-2F");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(17, token2.getTokenType());
      assertEquals("|", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6/jkzucv)g");
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.star();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("6/jkzucv)g");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.678300082082129
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Wv!=NFY!2");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("Wv", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("->e/L>/g~3|!(wk(zC");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer1.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("-", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer1.whitespace();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(">", token3.getTokenText());
      assertEquals(9, token3.getTokenType());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("e", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(11, token6.getTokenType());
      assertEquals("/", token6.getTokenText());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      assertEquals("", token9.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.563395921391432
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2nCIv}ed%=!X}Ux");
      xPathLexer0.isIdentifierStartChar('e');
      xPathLexer0.leftParen();
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("->`/L>/g~3|!(wk(zC");
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("6OVQO;");
      xPathLexer1.and();
      xPathLexer1.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer1.nextToken();
      xPathLexer0.or();
      xPathLexer0.whitespace();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.rightBracket();
      xPathLexer1.div();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]N_D5]<N||uO!UQ4W");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.4231305856827574
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y9v");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.3850226418830227
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2f`3.@");
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.colon();
      assertEquals("2", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("f", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("`3", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.number();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token5);
      assertEquals("@", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OC&:");
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("C&:", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.9895902960579848
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.whitespace();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (-2) ()", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.div();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertNotNull(token5);
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B?[");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("B", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=3R`~_!8bbU6&c!");
      Token token0 = xPathLexer0.dollar();
      assertEquals("=", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("% [CIo,~@&QO5rB$Fe:");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("% [CIo,~@&QO5rB$Fe:", token0.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3M[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("M[ (", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3Ps;Q&!,9++Sp0JsjH");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Ps;Q&!,9++Sp0JsjH", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.9490494920306792
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?8f,{Bn+=");
      xPathLexer0.setXPath("<?8f,{Bn+=");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(".1@1U|XtTG");
      xPathLexer0.comma();
      xPathLexer1.nextToken();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.number();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("JIM;[^}<n");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.star();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gv.mnoue<D],j");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("gv.mnoue", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("A+(");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("A", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.plus();
      xPathLexer0.setXPath(".. p4");
      xPathLexer0.number();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dip1O2WYm]=1A");
      xPathLexer0.setXPath("dip1O2WYm]=1A");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gv.moueCD]?j");
      XPathLexer xPathLexer1 = new XPathLexer("<=");
      xPathLexer1.relationalOperator();
      xPathLexer1.div();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("<=J%ZtLE,:(");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer2.whitespace();
      xPathLexer1.nextToken();
      xPathLexer1.or();
      xPathLexer2.number();
      xPathLexer1.whitespace();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.whitespace();
      xPathLexer0.nextToken();
      xPathLexer2.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }
}
