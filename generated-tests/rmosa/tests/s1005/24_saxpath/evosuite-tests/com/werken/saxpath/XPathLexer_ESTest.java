/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 07:30:43 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9295244951786928
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(".", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("0", token2.getTokenText());
      
      xPathLexer0.number();
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9295244951786928
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.not();
      assertEquals("0", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals(".0", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9295244951786928
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("0", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.number();
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.7863721925375565
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a^S|m");
      Token token0 = xPathLexer0.star();
      String string0 = token0.toString();
      assertEquals("[ (20) (a)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("^S|m", token2.getTokenText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.8177174986975012
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Jny}'/");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("J", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("ny", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("}", token2.getTokenText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8177174986975012
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a^S|m");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("a", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.plus();
      assertEquals("^", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.literal();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9295244951786928
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".0", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9295244951786928
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9295244951786928
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("0", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.number();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9295244951786928
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.not();
      assertEquals("0", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("0", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.number();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9173225404601595
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.minus();
      xPathLexer1.or();
      xPathLexer1.notEquals();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.7810099304797371
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.?w<F.cCJNa");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("?", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      xPathLexer0.whitespace();
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9431085308987346
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$3OKu}:AsOE{>jPK[P");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.consume(1940);
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.7810099304797371
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.?w<F.cCJNa");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("?", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9019465350414284
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oq{Lx4a");
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8152985113550895
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.?w<F.cCJNa");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("?", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      xPathLexer0.whitespace();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals(31, token5.getTokenType());
      assertEquals(".", token5.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8924853529456784
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.not();
      xPathLexer0.or();
      Token token1 = xPathLexer0.dollar();
      assertEquals(".", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("0", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("0", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("w<F.cNa", token3.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9909970819126804
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0997284668072311
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fM 6pH`?X");
      Token token0 = xPathLexer0.dots();
      assertEquals("f", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("6", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("pH`?X", token3.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0406280536712775
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$3OKu}:AsOE{>jPK[P");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("OK", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("u", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("}", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(":A", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.getPreviousToken();
      assertEquals("sOE{>jPK[P", token5.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1308054281671573
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fM 6pH`?X");
      xPathLexer0.dots();
      xPathLexer0.setXPath("&j\"S&jt");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.541765971967379
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$3OKu}:AsOE{>jPK[P");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i{?@[gT");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("i", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1037973656586355
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$3OKu}:AsOE{>jPK[P");
      xPathLexer0.colon();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.2861152662562954
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"+YpZ>>IS20v");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.notEquals();
      String string0 = token1.toString();
      assertEquals("[ (22) (\"+)", string0);
      
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.pipe();
      assertEquals(">", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(">", token3.getTokenText());
      assertEquals(9, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("IS20v", token4.getTokenText());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer0.number();
      assertEquals("", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4190767270176359
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fb.6pH`?X");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("f", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("b.6pH", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0559609987873508
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AG687BS~!%");
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=g@/]$=dt9,/=;G]P|");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("=", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.617045009707787
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c0@*Sp\"]Tam|");
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.minus();
      xPathLexer0.mod();
      xPathLexer0.identifier();
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0406280536712775
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$3OKu}:AsOE{>jPK[P");
      xPathLexer0.consume();
      xPathLexer0.setXPath("26S6SA|&krof:");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("26", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("S", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.pipe();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("SA", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(17, token3.getTokenType());
      assertEquals("|", token3.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r-2<");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertEquals("r-2", token0.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5013892726792921
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y4SWOp F:dot");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("K_Ff[utR*@(Df52,:");
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("[", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("u", token2.getTokenText());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^R_LN");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("^", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("R_LN", token1.getTokenText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D9\"8R^%ls^A");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@*|NcPM");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("*", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.3344221042066258
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AG687BS~!%");
      Token token0 = xPathLexer0.not();
      token0.toString();
      token0.toString();
      xPathLexer0.or();
      xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4351840340027358
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("0.0w", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.dots();
      assertEquals("<", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("F.", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("c", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.or();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9359146804525654
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fb.6pH`?X");
      Token token0 = xPathLexer0.dots();
      assertEquals("f", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(":4!1,&uw=b<jg=d@");
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer1.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("6", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.8476521847776651
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oq{Lx4a");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
      
      xPathLexer0.setXPath("oq{Lx4a");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("oq", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("{Lx4a", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0084971161386789
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$3OKu}:AsOE{>jPK[P");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.4190767270176359
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fb.6pH`?X");
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      xPathLexer0.not();
      xPathLexer0.or();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.nextToken();
      xPathLexer1.setXPath("yE&)<:t?gC");
      xPathLexer0.or();
      xPathLexer1.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0406280536712775
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$3OKu}:AsOE{>jPK[P");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.110087109071441
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertEquals(27, token1.getTokenType());
      assertEquals("0w<F", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("Na", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0807829885648692
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.identifier();
      assertEquals("0.0w", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("F.", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("cNa", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals("", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("UHWGD6nkVj|?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("UHWGD6nkVj", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.465942353763066
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"+YpZ>>IS20v");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.notEquals();
      token1.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.number();
      Token token2 = xPathLexer0.or();
      assertNull(token2);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.300691680478125
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y4SWOp F:dot");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Y4SWOp", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("F:dot", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("F", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(>nN.op -<");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(1, token0.getTokenType());
      assertEquals("(", token0.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1347735179126333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$3OKu}:AsOE{>jPK[P");
      xPathLexer0.or();
      xPathLexer0.setXPath(") (");
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.4653553509893926
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y4SWOp F:dot");
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#?&-SUOH3Q0m4");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#?&-SUOH3Q0m4", token0.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("TX=Z'+xjo(-_vSkD%q");
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.617045009707787
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c0@*Sp\"]Tam|");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("0", token1.getTokenText());
      
      xPathLexer0.minus();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.minus();
      assertEquals("S", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.number();
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("]", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("T", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.and();
      Token token7 = xPathLexer0.leftParen();
      assertEquals(1, token7.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      assertEquals("", token8.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.2903867584071145
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals("0.0", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      xPathLexer0.or();
      token1.toString();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      String string0 = token1.toString();
      assertEquals("[ (23) (w)", string0);
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("F", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token1);
      Token token4 = xPathLexer0.nextToken();
      assertEquals(".", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      assertEquals("cNa", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      assertEquals("", token6.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Vg/g4EWING&p");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("Vg", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"+YpZ>>IS20v");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(11, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.9295244951786928
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.not();
      assertEquals("0", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".0", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(7, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QrY#8MVvd");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("QrY", token0.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Fx;d!zyUoVnqUr>*");
      XPathLexer xPathLexer1 = new XPathLexer("Fx;d!zyUoVnqUr>*");
      Token token0 = xPathLexer1.rightParen();
      xPathLexer1.setPreviousToken(token0);
      assertEquals(2, token0.getTokenType());
      assertEquals("F", token0.getTokenText());
      
      xPathLexer1.consume();
      xPathLexer1.nextToken();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(";d!zyUoVnqUr>*", token1.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.021243284234048
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      xPathLexer0.number();
      Token token3 = xPathLexer0.dots();
      assertEquals("F.", token3.getTokenText());
      assertEquals(14, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals("", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0997284668072311
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fM 6pH`?X");
      Token token0 = xPathLexer0.dots();
      assertEquals("f", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("H`?X", token3.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7=`5 ");
      XPathLexer xPathLexer1 = new XPathLexer("7=`5 ");
      Token token0 = xPathLexer1.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer1.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer1.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("5", token3.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("5!yCSdm')\"#h@|hPL+^");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.076145268495466
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$3OKu}:AsOE{>jPK[P");
      xPathLexer0.or();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals("$", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("3OKu", token1.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.4892242353216587
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y4SWOp F:dot");
      xPathLexer0.operatorName();
      xPathLexer0.identifier();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.4892242353216587
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y4SWOp F:dot");
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.574892848697953
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.equals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]vn&dL!L@=%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(4, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.119693228892948
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AG687BS~!%");
      Token token0 = xPathLexer0.not();
      token0.toString();
      xPathLexer0.or();
      xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.4536720134556151
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AGG.7BS~!%");
      Token token0 = xPathLexer0.not();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.number();
      xPathLexer0.consume((-1));
      xPathLexer0.whitespace();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.465942353763066
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"+YpZ>>IS20v");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      Token token1 = xPathLexer0.notEquals();
      String string0 = token1.toString();
      assertEquals("[ (22) (\"+)", string0);
      
      token0.toString();
      String string1 = token0.toString();
      assertEquals("[ (15) ()", string1);
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.pipe();
      assertEquals(">", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(">", token3.getTokenText());
      assertEquals(9, token3.getTokenType());
      
      xPathLexer0.setXPath("[ (15) ()");
      Token token4 = xPathLexer0.nextToken();
      assertEquals(3, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.1341605165579571
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AG687BS~!%");
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      xPathLexer0.whitespace();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5013892726792926
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y4SWOp F:dot");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("S", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("F:dot", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals("F", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0406280536712775
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$3OKu}:AsOE{>jPK[P");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("3", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("O", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("K", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("u}", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals(":", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("AsOE", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Vg/g4EWING&p");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@*|NcPM");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(16, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0511701297263065
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("0.0w", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("<", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("F.cNa", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0807829885648692
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      xPathLexer0.setXPath("$YO6;[~%2%,jmb");
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$,I&k{TWQ>");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y4SWOp F:dot");
      xPathLexer0.setXPath("L8]G7TZ'");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(".GsTF>Z");
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertEquals(".GsTF", token1.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0406280536712775
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$3OKu}:AsOE{>jPK[P");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0546219213218295
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fb.6pH`?X");
      Token token0 = xPathLexer0.dots();
      assertEquals("f", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer(":4!1,&uw=b<jg=d@");
      xPathLexer1.setPreviousToken(token2);
      assertEquals(3, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(":", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("pH`?X", token5.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Jny}'/");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Jny", token0.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.star();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r_~}\"GN");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("r_", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+4YXHFy8)");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(5, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Vg/g4EWING&p");
      Token token0 = xPathLexer0.plus();
      String string0 = token0.toString();
      assertEquals("[ (5) (V)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("g", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2&aFr@p");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("&aFr@p", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("&", token2.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.1615351604461586
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fM 6pH`?X");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U-{?w5975h]\"");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("U", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("-", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.or();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(6, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals(".0w", token1.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z7eAA/l%am<oi0M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("z7eAA", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.335531240715242
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AGG.7BS~!%");
      Token token0 = xPathLexer0.not();
      token0.toString();
      token0.toString();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.not();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.021243284234048
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AGG.7BS~!%");
      Token token0 = xPathLexer0.not();
      token0.toString();
      token0.toString();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.4779479612103674
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y4SWOp F:dot");
      xPathLexer0.number();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Y4SWOp", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.setXPath("0D9(8V&-}Du|1dkj");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("D", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("9", token3.getTokenText());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0807829885648692
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_c0w<Foc}a");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.1655535139702162
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$3OKu}:AsOE{>jPK[P");
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'M)n(y0*LH&V!B-#*m");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("", token0.getTokenText());
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Va{^iLl]=:?<c~gtVUi");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Va", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.1308054281671573
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fM 6pH`?X");
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Fx;d!zyUoVnqUr>*");
      XPathLexer xPathLexer1 = new XPathLexer("Fx;d!zyUoVnqUr>*");
      Token token0 = xPathLexer1.rightParen();
      String string0 = token0.toString();
      assertEquals("[ (2) (F)", string0);
      
      xPathLexer1.setPreviousToken(token0);
      Token token1 = xPathLexer1.nextToken();
      assertEquals("x;d!zyUoVnqUr>*", token1.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1T4y&~L#R#nJD5G");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("1T4y&~L#R#nJD5G");
      assertEquals("1T4y&~L#R#nJD5G", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.1959174030515576
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$3OKu}:AsOE{>jPK[P");
      xPathLexer0.not();
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.consume(17);
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\fi0*wmkj Gu1OMD_w6");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("\fi0*wmkj Gu1OMD_w6", token0.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.9958844660302033
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fb.6pH`?X");
      Token token0 = xPathLexer0.dots();
      assertEquals("f", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(":4!1,&uw=b<jg=d@");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(":", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer1.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("4", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("6", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals("!", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oq{Lx4a");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.0406280536712775
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$3OKu}:AsOE{>jPK[P");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.equals();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.2703705392368394
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.not();
      xPathLexer0.or();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      xPathLexer0.setXPath("*hS]3mdb");
      Token token2 = xPathLexer0.dollar();
      assertEquals("*", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("0", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("hS]3mdb", token3.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AG687BS~!%");
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("6vNw:z");
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.1348488964007402
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$3OKu}:AsOE{>jPK[P");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lF3A;4vS");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("lF3A", token0.getTokenText());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.1429073973858832
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.not();
      xPathLexer0.not();
      xPathLexer0.or();
      token0.toString();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Vg/g4EWING&p");
      Token token0 = xPathLexer0.doubleColon();
      String string0 = token0.toString();
      assertEquals("[ (19) (Vg)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.1615351604461586
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fM 6pH`?X");
      xPathLexer0.rightParen();
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y}/");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("y", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(12, token1.getTokenType());
      assertEquals("}/", token1.getTokenText());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1824805140209846
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.literal();
      assertNotNull(token0);
      
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      String string0 = token0.toString();
      assertEquals("[ (27) (.)", string0);
      
      xPathLexer0.or();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("w<F.cNa", token1.getTokenText());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P!=*iAc");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("P", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.0w<F.cNa");
      Token token0 = xPathLexer0.comma();
      String string0 = token0.toString();
      assertEquals("[ (32) (0)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(".0w", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fM 6pH`?X");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("f", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token2);
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P!=*iAc");
      xPathLexer0.pipe();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = new Token(12, "", 12, 12);
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!RC}n'?GP");
      Token token0 = xPathLexer0.not();
      token0.toString();
      xPathLexer0.or();
      xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.0361336054158803
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fb.6pH`?X");
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("koQ*g<=I}H;FV");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.minus();
      xPathLexer0.identifier();
      xPathLexer1.notEquals();
      xPathLexer1.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }
}
