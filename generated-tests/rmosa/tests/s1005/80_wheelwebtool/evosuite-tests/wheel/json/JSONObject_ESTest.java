/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 07:20:15 GMT 2018
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.Set;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1318131525634698
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      String string0 = "nuUl";
      hashMap0.put(",:]}/\"[{;=#", ",:]}/\"[{;=#");
      hashMap0.put(",:]}/\"[{;=#", "nuUl");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optDouble(",:]}/\"[{;=#");
      Object object0 = new Object();
      try { 
        jSONObject0.getBoolean(",:]}/\"[{;=#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",:]}/\\\"[{;=#\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.388967268189945
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optDouble((String) null);
      jSONObject0.optString((String) null);
      try { 
        jSONObject0.getLong("getparseByte");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"getparseByte\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0102750119258221
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optBoolean("getformat");
      try { 
        jSONObject0.get("~eO0O$\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"~eO0O$\\\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6096274235960984
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String string0 = JSONObject.quote("yNRd##({7VL04^m U-");
      assertEquals("\"yNRd##({7VL04^m U-\"", string0);
      
      HashMap<Byte, Integer> hashMap0 = new HashMap<Byte, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.toString(3, (-634));
      String string1 = jSONObject0.toString(1, 1);
      assertEquals("{}", string1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0102750119258221
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString(536);
      try { 
        jSONObject0.get("~eO0O$\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"~eO0O$\\\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0746142917293842
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JSONObject.quote(",% -q?:");
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "\",% -q?:\"";
      stringArray0[1] = "\",% -q?:\"";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      try { 
        jSONObject1.getBoolean("' and instead saw '");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"' and instead saw '\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.137808159182962
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.putOpt("~eO0O$\"", "~eO0O$\"");
      jSONObject0.get("~eO0O$\"");
      try { 
        jSONObject0.getBoolean("tr");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"tr\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      String string0 = ",:]}/\\\"[{;=#";
      hashMap0.put(",:]}/\"[{;=#", ",:]}/\"[{;=#");
      hashMap0.put(",:]}/\"[{;=#", "nuUl");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getJSONArray(",:]}/\"[{;=#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",:]}/\\\"[{;=#\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9320738874454946
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = JSONObject.quote("yNtV##({VL0A^m U-");
      assertEquals("\"yNtV##({VL0A^m U-\"", string0);
      
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = jSONObject0.names();
      assertNull(jSONArray0);
      
      String string1 = jSONObject0.toString(2752, 2752);
      assertEquals("{}", string1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("gettoString", "gettoString");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      hashMap0.clone();
      JSONArray jSONArray0 = jSONObject0.names();
      assertNotNull(jSONArray0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2333097430555646
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      hashMap0.put((String) null, "A JSONObject text must begin with '{'");
      String string0 = ",:]}/\\\"[{;=#";
      String string1 = "nuUl";
      hashMap0.put(",:]}/\"[{;=#", ",:]}/\"[{;=#");
      hashMap0.put(",:]}/\"[{;=#", "nuUl");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      // Undeclared exception!
      try { 
        jSONObject0.toString(2777, 60);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.329661348854758
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String string0 = JSONObject.quote("yNtV##({VL0A^m U-");
      assertEquals("\"yNtV##({VL0A^m U-\"", string0);
      
      Long long0 = new Long((-1753L));
      Long.getLong("yNtV##({VL0A^m U-");
      JSONObject jSONObject0 = new JSONObject(long0);
      jSONObject0.toString((-710), (-710));
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>)hashMap0.entrySet();
      String string0 = JSONObject.valueToString(set0, (-1687), (-1687));
      assertEquals("[]", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.7261928332614538
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      JSONObject.quote("Nul poinr");
      JSONObject.quote("\"Nul poinr\"");
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getBoolean((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.7776612957621659
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = "0\\";
      hashMap0.keySet();
      JSONObject.quote("JS.NOb+-t[");
      hashMap0.entrySet();
      hashMap0.entrySet();
      hashMap0.put("JS.NOb+-t[", "0");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getJSONObject("JS.NOb+-t[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"JS.NOb+-t[\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.7261928332614538
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optDouble("sh", (-138.574777271));
      try { 
        jSONObject0.get("~eO0O$\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"~eO0O$\\\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.7261928332614538
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "~eO0O$\"";
      try { 
        jSONObject0.getString("JSONArray[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"JSONArray[\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Double double0 = new Double(2914.0047663085);
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.put((String) null, 2914.0047663085);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.5670609309552819
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JSONObject.quote("Nul poinr");
      JSONObject.quote("\"Nul poinr\"");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("Nul poinr");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of Nul poinr
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.36764947740014225
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JSONObject.quote("/XSFg[mKB&O.{i9W");
      JSONTokener jSONTokener0 = new JSONTokener("\"/XSFg[mKB&O.{i9\\W\"");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of \"/XSFg[mKB&O.{i9\\W\"
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject("tr", stringArray0);
      assertEquals(0, jSONObject0.length());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.39439769144744274
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String string0 = JSONObject.quote("t\n");
      Byte byte0 = new Byte((byte)47);
      String string1 = JSONObject.numberToString(byte0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6096274235960984
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String string0 = JSONObject.quote("_R@8CF.!k;HW");
      Long long0 = new Long(0L);
      String string1 = JSONObject.valueToString(long0, (-532), (-532));
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.put((String) null, 2552);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.put((String) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = ",:]}/u\\\"[{;=#";
      String string1 = "nuUl";
      hashMap0.put(",:]}/u\"[{;=#", ",:]}/u\"[{;=#");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.append(",:]}/u\"[{;=#", (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[,:]}/u\"[{;=#] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.2333097430555646
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>)hashMap0.entrySet();
      String string0 = "nuUl";
      hashMap0.put(",:]}/\"[{;=#", ",:]}/\"[{;=#");
      hashMap0.put(",:]}/\"[{;=#", "nuUl");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.accumulate("mTy", set0);
      Object object0 = new Object();
      try { 
        jSONObject0.getBoolean(",:]}/\"[{;=#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",:]}/\\\"[{;=#\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.2333097430555646
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("9]^)~PnMV33J'%#:", "8");
      hashMap0.entrySet();
      String string0 = "nuUl";
      hashMap0.put(",:]}/\"[{;=#", ",:]}/\"[{;=#");
      hashMap0.put(",:]}/\"[{;=#", "nuUl");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.toString();
      Object object0 = new Object();
      try { 
        jSONObject0.getBoolean(",:]}/\"[{;=#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",:]}/\\\"[{;=#\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.5670609309552819
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JSONObject.quote("t\n");
      String string0 = JSONObject.valueToString("t\n");
      Short short0 = new Short((short)9);
      String string1 = JSONObject.valueToString(short0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.39439769144744274
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JSONObject.quote("t\n");
      short short0 = (short)300;
      Short short1 = new Short((short)300);
      JSONObject.numberToString(short1);
      JSONTokener jSONTokener0 = new JSONTokener("toH");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of toH
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      String string0 = ",:]}/\\\"[{;=#";
      hashMap0.put(",:]}/\"[{;=#", ",:]}/\"[{;=#");
      hashMap0.put(",:]}/\"[{;=#", "nuUl");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.put((String) null, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.7776612957621659
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      String string0 = JSONObject.quote("yNtV##({VL0A^m U-");
      assertEquals("\"yNtV##({VL0A^m U-\"", string0);
      
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertNull(stringArray0);
      
      String string1 = jSONObject0.toString(12, 48);
      assertEquals("{}", string1);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      linkedList0.push((Byte) null);
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      try { 
        jSONObject0.toJSONArray(jSONArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[0] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0247766235961073
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>)hashMap0.entrySet();
      String string0 = "nuUl";
      hashMap0.put(",:]}/\"[{;=#", ",:]}/\"[{;=#");
      hashMap0.put(",:]}/\"[{;=#", "nuUl");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONArray jSONArray0 = new JSONArray((Collection) set0);
      jSONObject0.toJSONArray(jSONArray0);
      Object object0 = new Object();
      try { 
        jSONObject0.getBoolean(",:]}/\"[{;=#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",:]}/\\\"[{;=#\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String string0 = JSONObject.valueToString((Object) null, 893, 893);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.join("\n");
      String string0 = JSONObject.valueToString(jSONArray0, 1856, 1856);
      assertEquals("[]", string0);
      
      Object object0 = JSONObject.NULL;
      String string1 = JSONObject.valueToString(object0, 1856, (-626));
      assertEquals("null", string1);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.42584844923858145
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JSONObject.quote("_R@8CF.!k;HW");
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      jSONArray0.optJSONObject(267);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "_R@8CF.!k;HW";
      stringArray0[1] = "\"_R@8CF.!k;HW\"";
      Byte byte0 = new Byte((byte)69);
      linkedList0.add(byte0);
      stringArray0[2] = "\"_R@8CF.!k;HW\"";
      stringArray0[3] = "_R@8CF.!k;HW";
      stringArray0[4] = "\"_R@8CF.!k;HW\"";
      stringArray0[5] = "_R@8CF.!k;HW";
      stringArray0[6] = "_R@8CF.!k;HW";
      stringArray0[7] = "\"_R@8CF.!k;HW\"";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0247766235961073
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      String string0 = "nuUl";
      hashMap0.put(",:]}/\"[{;=#", ",:]}/\"[{;=#");
      hashMap0.put(",:]}/\"[{;=#", "nuUl");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.toJSONArray((JSONArray) null);
      Object object0 = new Object();
      try { 
        jSONObject0.getBoolean(",:]}/\"[{;=#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",:]}/\\\"[{;=#\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = "*[m(*KcjbG";
      hashMap0.put("*[m(*KcjbG", "nuUl");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.put((String) null, (Map) hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.2333097430555646
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      String string0 = "nuUl";
      hashMap0.put(",:]}/\"[{;=#", ",:]}/\"[{;=#");
      hashMap0.put(",:]}/\"[{;=#", "nuUl");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optInt(",:]}/\"[{;=#", 3094);
      Object object0 = new Object();
      try { 
        jSONObject0.getBoolean(",:]}/\"[{;=#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",:]}/\\\"[{;=#\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.2333097430555648
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      String string0 = "nuUl";
      hashMap0.put(",:]}/\"[{;=#", ",:]}/\"[{;=#");
      hashMap0.put(",:]}/\"[{;=#", "nuUl");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optInt(":d1");
      Object object0 = new Object();
      try { 
        jSONObject0.getBoolean(",:]}/\"[{;=#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",:]}/\\\"[{;=#\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.42584844923858145
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = JSONObject.quote("yNt##({V+0A^m U-");
      assertEquals("\"yNt##({V+0A^m U-\"", string0);
      
      HashMap<Object, Short> hashMap0 = new HashMap<Object, Short>();
      hashMap0.put("\"yNt##({V+0A^m U-\"", (Short) null);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject.valueToString(jSONObject0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Set<String> set0 = hashMap0.keySet();
      String string0 = JSONObject.valueToString(set0);
      assertEquals("[]", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String string0 = JSONObject.quote("");
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.3639196397750313
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = " %'";
      hashMap0.putIfAbsent(" %'", "pCw5");
      hashMap0.entrySet();
      hashMap0.entrySet();
      String string1 = "Expected '";
      hashMap0.put("Expected '", " %'");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Object object0 = new Object();
      jSONObject0.append("pCw5", (Object) null);
      try { 
        jSONObject0.getBoolean(" %'");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\" %'\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.toArray();
      try { 
        jSONObject0.put((String) null, (Collection) linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = " %'";
      hashMap0.entrySet();
      hashMap0.entrySet();
      hashMap0.put("Expected '", " %'");
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.put((String) null, 1625L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0823563847381665
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      hashMap0.put(",\n", ",\n");
      hashMap0.put(",\n", ",\n");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Object object0 = new Object();
      jSONObject0.isNull(",\n");
      JSONObject.quote(",\n");
      try { 
        jSONObject0.getBoolean((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.981102200701706
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.replace("5DL%T!d8MoHv/(RS", ")q", "' and instead saw '");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optLong("w'I=7/sJ,k tUWg)O[J", (long) (short)116);
      JSONArray jSONArray0 = new JSONArray();
      LinkedList<JSONArray> linkedList0 = new LinkedList<JSONArray>();
      JSONArray jSONArray1 = new JSONArray((Collection) linkedList0);
      jSONArray0.toJSONObject(jSONArray1);
      JSONArray jSONArray2 = new JSONArray();
      String string0 = JSONObject.valueToString(jSONArray2);
      assertNotNull(string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String string0 = JSONObject.quote("jO]c[A^9Y/1W61[");
      assertEquals("\"jO]c[A^9Y/1W61[\"", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      String string0 = JSONObject.quote("\r");
      assertEquals("\"\\r\"", string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = new JSONObject();
      String string0 = "";
      jSONObject0.has("");
      Object object0 = JSONObject.NULL;
      try { 
        jSONObject0.put((String) null, object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String string0 = JSONObject.doubleToString(1.0);
      assertEquals("1", string0);
      
      HashMap<Integer, Byte> hashMap0 = new HashMap<Integer, Byte>();
      Integer integer0 = new Integer(446);
      Byte byte0 = new Byte((byte)61);
      hashMap0.put(integer0, byte0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optJSONObject("\n");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.9404479886553263
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject();
      StringWriter stringWriter0 = new StringWriter();
      Writer writer0 = jSONArray0.write(stringWriter0);
      Writer writer1 = jSONObject0.write(writer0);
      jSONArray0.write(writer1);
      String string0 = JSONObject.valueToString(jSONArray0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = jSONObject0.optJSONArray("isvalueOf");
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.7776612957621659
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = JSONObject.quote("yNtV##({VL0A^(Um U-");
      assertEquals("\"yNtV##({VL0A^(Um U-\"", string0);
      
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string1 = JSONObject.valueToString(jSONObject0, 1, (-1101));
      assertEquals("{}", string1);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String string0 = JSONObject.doubleToString((-899.10502361));
      assertEquals("-899.10502361", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5089209382461037
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      String string0 = "nuUl";
      hashMap0.put(",:]}/\"[{;=#", ",:]}/\"[{;=#");
      hashMap0.put(",:]}/\"[{;=#", "nuUl");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.keys();
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      jSONObject0.accumulate(",:]}/\"[{;=#", jSONObject1);
      Object object0 = new Object();
      try { 
        jSONObject0.getBoolean(",:]}/\"[{;=#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",:]}/\\\"[{;=#\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.keySet();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>)hashMap1.entrySet();
      hashMap1.entrySet();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Object object0 = new Object();
      JSONArray jSONArray0 = new JSONArray((Collection) set0);
      try { 
        jSONObject0.accumulate((String) null, jSONArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.2570699364010602
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = JSONObject.quote("t\n");
      assertEquals("\"t\\n\"", string0);
      
      JSONObject.testValidity("\"t\n\"");
      Float float0 = new Float((-1.0F));
      JSONObject jSONObject0 = new JSONObject(float0);
      JSONObject.valueToString(jSONObject0, (-553), (-553));
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      Float float0 = new Float((float) 13);
      JSONObject.getNames((Object) null);
      String[] stringArray0 = JSONObject.getNames(object0);
      assertNull(stringArray0);
      
      Integer integer0 = new Integer(13);
      JSONObject.doubleToString((-302.262522));
      String string0 = JSONObject.doubleToString((-1920.921587015228));
      assertEquals("-1920.921587015228", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5379930157196084
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = " %'";
      hashMap0.putIfAbsent(" %'", "PGI5");
      hashMap0.entrySet();
      hashMap0.entrySet();
      String string1 = "Expected '";
      hashMap0.put("Expected '", " %'");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Object object0 = new Object();
      jSONObject0.optLong((String) null);
      jSONObject0.optJSONObject((String) null);
      try { 
        jSONObject0.getBoolean(" %'");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\" %'\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.2333097430555646
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      String string0 = "nuUl";
      hashMap0.put(",:]}/\"[{;=#", ",:]}/\"[{;=#");
      BiFunction<Object, String, String> biFunction0 = (BiFunction<Object, String, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.computeIfPresent("Missing value", biFunction0);
      hashMap0.put(",:]}/\"[{;=#", "nuUl");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject.getNames(jSONObject0);
      Object object0 = new Object();
      try { 
        jSONObject0.getBoolean(",:]}/\"[{;=#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",:]}/\\\"[{;=#\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (-794));
      jSONObject1.put("] is not a Boolean.", false);
      jSONObject0.get("] is not a Boolean.");
      jSONObject0.optDouble((String) null, (-1564.05967264729));
      jSONObject0.optString("] is not a Boolean.", "1yqm^;3q|g\"7FK_");
      JSONObject.valueToString((Object) null);
      jSONObject0.keys();
      jSONObject0.has("java.lang.Boolean@0000000002");
      jSONObject0.optDouble("null", (-1564.05967264729));
      try { 
        jSONObject0.getJSONArray("iscompare");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"iscompare\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.6528213268992737
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      JSONObject.quote("yNtV##({VL0A^m U-");
      JSONObject jSONObject0 = new JSONObject((Object) "yNtV##({VL0A^m U-");
      jSONObject0.toString();
      try { 
        jSONObject0.getBoolean("yNtV##({VL0A^m U-");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"yNtV##({VL0A^m U-\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.2570699364010605
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      JSONObject.quote("Nul poinr");
      String string0 = JSONObject.quote("\"Nul poinr\"");
      assertEquals("\"\\\"Nul poinr\\\"\"", string0);
      
      Byte byte0 = Byte.valueOf((byte)92);
      JSONObject.valueToString(byte0);
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      StringWriter stringWriter0 = new StringWriter((byte)92);
      StringWriter stringWriter1 = stringWriter0.append('_');
      jSONObject0.write(stringWriter1);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      String string0 = "{";
      JSONTokener jSONTokener0 = new JSONTokener("{");
      jSONTokener0.nextTo("{");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must end with '}' at character 1 of {
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("{opxT.;b-E]]BN");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected a ':' after a key at character 7 of {opxT.;b-E]]BN
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("{}");
      JSONObject jSONObject0 = new JSONObject(jSONTokener0);
      assertEquals(0, jSONObject0.length());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = JSONObject.doubleToString(Double.NaN);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Object object0 = jSONObject0.remove("in");
      assertNull(object0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.accumulate("nEr_YIN)APT", (Object) null);
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Double double0 = new Double(Double.NaN);
      try { 
        JSONObject.testValidity(double0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSON does not allow non-finite numbers.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = new JSONObject();
      JSONObject jSONObject2 = jSONObject0.put("wheel.json.JSONObject$Null", 13);
      jSONObject2.put("'5E|", 13);
      assertEquals(2, jSONObject2.length());
      
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JSONObject jSONObject3 = new JSONObject((Map) hashMap0);
      jSONObject2.getInt("'5E|");
      String string0 = jSONObject3.toString(13, 13);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      assertEquals(0, jSONObject0.length());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.159588814308626
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject.valueToString(jSONArray0);
      HashMap<JSONArray, String> hashMap0 = new HashMap<JSONArray, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.toString((-2363), (-2363));
      String string0 = JSONObject.valueToString(hashMap0, 65, (-2363));
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.39439769144744274
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String string0 = JSONObject.quote(",\n");
      assertEquals("\",\\n\"", string0);
      
      Object object0 = JSONObject.NULL;
      String string1 = JSONObject.valueToString(object0);
      assertEquals("null", string1);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("'0 ", (-745.466723));
      Double double0 = new Double((-745.466723));
      double double1 = jSONObject1.optDouble("'0 ", 1922.70992);
      assertEquals((-745.466723), double1, 0.01);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.3689223607402194
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      String string0 = JSONObject.quote("I,\n");
      assertEquals("\"I,\\n\"", string0);
      
      JSONObject jSONObject0 = new JSONObject((Object) "\"I,\n\"");
      jSONObject0.toString(46, 6);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.3184871094029973
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.keySet();
      hashMap0.putIfAbsent("0\u0003|", "JSONObject[");
      hashMap0.entrySet();
      hashMap0.entrySet();
      hashMap0.put("JSONObject[", ",\n");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Object object0 = JSONObject.NULL;
      jSONObject0.accumulate("JSONObject[", object0);
      String string0 = "tri";
      try { 
        jSONObject0.get("tri");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"tri\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = JSONObject.valueToString(jSONObject0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject1 = jSONObject0.put("wheel.json.JSONObject@0000000001", (Collection) linkedList0);
      jSONObject1.getJSONArray("wheel.json.JSONObject@0000000001");
      String string1 = JSONObject.quote("wheel.json.JSONObject@0000000001");
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.putIfAbsent("V8v6/.7zOMNify$@q4pq", (String) null);
      hashMap0.entrySet();
      hashMap0.entrySet();
      hashMap0.put("gettoString", (String) null);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      hashMap0.clone();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "gettoString");
      Writer writer0 = jSONObject0.write(stringWriter0);
      assertSame(writer0, stringWriter0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.keySet();
      hashMap0.entrySet();
      hashMap0.entrySet();
      hashMap0.put("JSONObject[", ",\n");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject1 = jSONObject0.accumulate("JSONObject[", object0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('d');
      Writer writer0 = jSONObject1.write(stringWriter1);
      assertSame(stringWriter1, writer0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.6114623421520908
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Double.isFinite(0.0);
      Boolean boolean0 = Boolean.TRUE;
      Double double0 = new Double(0.0);
      Double.min(0.0, 0.0);
      jSONObject0.append("getgetBytes", double0);
      long long0 = jSONObject0.optLong("getgetBytes", (-878L));
      assertEquals((-878L), long0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Double.isFinite(0.0);
      Double double0 = new Double(0.0);
      JSONObject jSONObject1 = jSONObject0.append("su", double0);
      JSONObject jSONObject2 = jSONObject0.append("su", "");
      assertSame(jSONObject2, jSONObject1);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.979204517434325
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.keySet();
      hashMap0.putIfAbsent("0\u0003|", "JSONObject[");
      hashMap0.entrySet();
      hashMap0.entrySet();
      hashMap0.put("JSONObject[", ",\n");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Object object0 = JSONObject.NULL;
      jSONObject0.accumulate("JSONObject[", object0);
      jSONObject0.optDouble("] is not a JSONObject.");
      JSONArray jSONArray0 = jSONObject0.optJSONArray("JSONObject[");
      assertEquals(2, jSONArray0.length());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Float float0 = new Float(Double.NaN);
      try { 
        JSONObject.testValidity(float0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSON does not allow non-finite numbers.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("getsplit", 0L);
      double double0 = jSONObject1.getDouble("getsplit");
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = JSONObject.valueToString(hashMap0);
      assertNotNull(string0);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String string0 = JSONObject.quote("D6&l?pM</Ic4&");
      assertEquals("\"D6&l?pM<\\/Ic4&\"", string0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.03195622385697
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject.valueToString(jSONArray0);
      JSONObject jSONObject0 = new JSONObject((Object) "wheel.json.JSONArray@0000000001");
      String string0 = jSONObject0.toString((-3474), (-3474));
      Float float0 = new Float((double) (-3474));
      String string1 = JSONObject.numberToString(float0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "6:O4$?D{<G+";
      JSONObject jSONObject1 = jSONObject0.put("6:O4$?D{<G+", 0.0);
      jSONObject1.getLong("6:O4$?D{<G+");
      String string1 = null;
      try { 
        jSONObject1.get((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Double, Byte> hashMap0 = new HashMap<Double, Byte>();
      jSONObject0.put("~eO$\"", (Map) hashMap0);
      StringWriter stringWriter0 = new StringWriter();
      jSONObject0.write(stringWriter0);
      jSONObject0.get("~eO$\"");
      try { 
        jSONObject0.getLong("'fE3OEtZfC!T3");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"'fE3OEtZfC!T3\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.3126964147163025
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Float float0 = new Float(362.87405F);
      JSONObject jSONObject0 = new JSONObject(float0);
      JSONObject.testValidity(jSONObject0);
      Integer integer0 = new Integer((-1287));
      jSONObject0.putOpt(" at character ", integer0);
      jSONObject0.names();
      Object object0 = JSONObject.NULL;
      jSONObject0.toString((-619));
      JSONObject.valueToString(jSONObject0, (-221), (-221));
      JSONObject jSONObject1 = new JSONObject("{\n\"java.lang.String@0000000003\": java.lang.Boolean@0000000004,\n\"java.lang.String@0000000005\": java.lang.Boolean@0000000006,\n\"java.lang.String@0000000007\": java.lang.Integer@0000000008,\n\"java.lang.String@0000000009\": \"java.lang.Class@0000000010\"\n}");
      JSONObject.numberToString(float0);
      try { 
        jSONObject1.getJSONObject("%!]dp(_8<aNz^C@");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"%!]dp(_8<aNz^C@\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("false", "false");
      hashMap0.put("false", "false");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Object object0 = new Object();
      boolean boolean0 = jSONObject0.getBoolean("false");
      assertFalse(boolean0);
      
      String string0 = JSONObject.quote(",:]}/\"[{;=#");
      assertEquals("\",:]}/\\\"[{;=#\"", string0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Float float0 = new Float(362.87405F);
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.testValidity(jSONObject0);
      Integer integer0 = new Integer((-1287));
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject1 = jSONObject0.accumulate("V>!9b+i}(", integer0);
      jSONObject0.toString((-619));
      JSONObject.valueToString(jSONObject0, (-221), (-221));
      jSONObject0.put("{\"java.lang.String@0000000002\": java.lang.Integer@0000000003}", (Object) jSONObject0);
      jSONObject0.optJSONObject("{\"java.lang.String@0000000002\": java.lang.Integer@0000000003}");
      Float float1 = new Float(0.0F);
      // Undeclared exception!
      jSONObject1.toString(58, (-1287));
  }

  /**
  //Test case number: 96
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String string0 = JSONObject.doubleToString((-44510525));
      assertEquals("-4.4510525E7", string0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.keySet();
      hashMap0.entrySet();
      hashMap0.entrySet();
      hashMap0.put("JSONObject[", ",\n");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject1 = jSONObject0.accumulate("JSONObject[", object0);
      Float float0 = new Float(0.0F);
      jSONObject1.accumulate("JSONObject[", float0);
      try { 
        jSONObject0.get("0\u0003|");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"0\\u0003|\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      hashMap0.put(",:]}/\"[{;=#", ",:]}/\"[{;=#");
      hashMap0.put(",:]}/\"[{;=#", "nuUl");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put(",:]}/\"[{;=#", false);
      Object object0 = new Object();
      boolean boolean0 = jSONObject0.getBoolean(",:]}/\"[{;=#");
      assertFalse(boolean0);
      
      Boolean boolean1 = Boolean.TRUE;
      JSONObject.testValidity(boolean1);
      Byte byte0 = new Byte((byte) (-50));
      JSONObject.testValidity(byte0);
      String string0 = JSONObject.quote("nuUl");
      assertEquals("\"nuUl\"", string0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Integer integer0 = new Integer((-234));
      Integer.min((-234), (-234));
      Integer.min((-234), 114);
      Integer integer1 = Integer.getInteger("A JSONArray text must start with '['", (-234));
      JSONObject jSONObject0 = new JSONObject(integer0);
      HashMap<Byte, String> hashMap0 = new HashMap<Byte, String>();
      JSONObject jSONObject1 = jSONObject0.put("A JSONArray text must start with '['", (Map) hashMap0);
      JSONObject.getNames((Object) "A JSONArray text must start with '['");
      JSONObject jSONObject2 = jSONObject0.getJSONObject("A JSONArray text must start with '['");
      jSONObject2.put("A JSONArray text must start with '['", (Map) hashMap0);
      JSONObject.numberToString(integer0);
      jSONObject2.toString(114, 114);
      JSONObject.doubleToString((-234));
      jSONObject1.optDouble("me/sT|^Tjb!g!uW{");
      Byte byte0 = new Byte((byte) (-110));
      JSONObject.valueToString(byte0, (-1), (-234));
      JSONObject.numberToString(integer1);
      try { 
        jSONObject1.getJSONObject("java.lang.Integer@0000000007");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"java.lang.Integer@0000000007\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      double double0 = (-2196.886468978);
      JSONObject.doubleToString((-2196.886468978));
      JSONObject jSONObject0 = new JSONObject((Object) "-2196.886468978");
      jSONObject0.put("-2196.886468978", true);
      jSONObject0.getBoolean("-2196.886468978");
      JSONArray jSONArray0 = new JSONArray();
      jSONObject0.toJSONArray(jSONArray0);
      Number number0 = null;
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }
}
