/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 16:59:41 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.48970870385881915
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X}:CA(;:4L/9F");
      xPathLexer0.colon();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7721969684369422
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ndh)|]9C@VshI?&");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.7541717757733974
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l&n");
      xPathLexer0.getPreviousToken();
      xPathLexer0.colon();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5708077061627648
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" 7Ou");
      XPathLexer xPathLexer1 = new XPathLexer(" 7Ou");
      XPathLexer xPathLexer2 = new XPathLexer(" 7Ou");
      XPathLexer xPathLexer3 = new XPathLexer("P:,.7{?xi [nKK8tz R");
      xPathLexer3.consume();
      xPathLexer3.div();
      Token token0 = xPathLexer3.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer3.and();
      xPathLexer0.or();
      Token token1 = xPathLexer2.number();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.7541717757733973
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l&n");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("l", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("&", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("n", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.7721969684369422
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ndh)|]9C@VshI?&");
      xPathLexer0.consume();
      xPathLexer0.comma();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.7721969684369422
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ndh)|]9C@VshI?&");
      xPathLexer0.doubleColon();
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.7345953279639188
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ndh)|]9C@VshI?&");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("dh", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(")", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("|", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("]", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.8279498916841109
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P:,.1{?xi [hKK8tz R");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(22, token0.getTokenType());
      assertEquals(":,", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals("1", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("{?xi [hKK8tz R", token3.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.7317395345845785
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;EZ|Lq;2Z[");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(";E", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("Z", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(17, token3.getTokenType());
      assertEquals("|", token3.getTokenText());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("L", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.7317395345845786
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;EZ|Lq;2Z[");
      xPathLexer0.plus();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.7721969684369422
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ndh)|]9C@VshI?&");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume(55);
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1758571084532128
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-\\H2V=CO");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.at();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.7951352514753474
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P:,.1{?xi [hKK8tz R");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(":,", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(".", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("1", token2.getTokenText());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.7317395345845786
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;EZ|Lq;2Z[");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals(";E", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("Z", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(17, token3.getTokenType());
      assertEquals("|", token3.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.7357905324028096
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-\\H2V=CO");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.845943658985046
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ndh)|]9C@VshI?&");
      xPathLexer0.consume(120);
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.and();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6263433754587004
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G3-");
      XPathLexer xPathLexer1 = new XPathLexer("]`Y7EL?M^/0");
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("]`Y7EL?M^/0");
      XPathLexer xPathLexer3 = new XPathLexer("'>KI");
      xPathLexer3.consume();
      xPathLexer3.nextToken();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.7011636809893881
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-\\H2V=CO");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.setXPath(".-\\H2V=CO");
      xPathLexer0.dots();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9530696169214723
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ndh)|]9C@VshI?&");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.7721969684369422
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ndh)|]9C@VshI?&");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.7619471569286802
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P:,.7{?xi [nKK8tz R");
      xPathLexer0.setXPath("P:,.7{?xi [nKK8tz R");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals(",.", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("7", token2.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.2528903526021222
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-\\H2V=CO");
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.at();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.017296428615491
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CQc:Dvd");
      xPathLexer0.comma();
      xPathLexer0.identifier();
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("CQc:Dvd");
      xPathLexer1.setXPath(")");
      xPathLexer0.nextToken();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.8946930874149315
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7mGgmifm?Ztb,!MjC)");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("7", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.or();
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.7721969684369422
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ndh)|]9C@VshI?&");
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.7951352514753474
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P:,.1{?xi [hKK8tz R");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9529834709992403
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P:,.7{?xi [nKK8tz R");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(":,", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.consume(7);
      xPathLexer0.div();
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(3, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.7345953279639189
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ndh)|]9C@VshI?&");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.8922111291013216
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/J /KBIKD9gD");
      xPathLexer0.pipe();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("r,N19 Y7F]no,)-Z=G");
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer1.consume();
      assertEquals("r,N19 Y7F]no,)-Z=G", xPathLexer1.getXPath());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.014720265779943
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K7i`[.)4'V}BF");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("K7", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("i", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1627604069879998
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P:,.4{?xi [nKK8tz R");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(":,", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals(".4", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("{", token2.getTokenText());
      
      xPathLexer0.whitespace();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.whitespace();
      xPathLexer0.mod();
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("[", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("nKK8tz", token6.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.8732997204093297
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" 7Ou");
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.9604260271487567
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P:,.4{?xi [nKK8tz R");
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9843367814063257
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CQc:Dvd");
      Token token0 = xPathLexer0.comma();
      assertEquals("C", token0.getTokenText());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("CQc:Dvd");
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(":", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer1.or();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("Dvd", token4.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mtFV~7E,(;[lkR6");
      XPathLexer xPathLexer1 = new XPathLexer("sRafm");
      XPathLexer xPathLexer2 = new XPathLexer("mtFV~7E,(;[lkR6");
      xPathLexer2.mod();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("sRafm", token0.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1220296869561064
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<@Zi96SDu4kN!?U50");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      XPathLexer xPathLexer2 = new XPathLexer("!<@Zi96SDu4kN!?U50");
      Token token2 = xPathLexer2.literal();
      assertEquals(27, token2.getTokenType());
      assertNotNull(token2);
      assertEquals("<@Zi96SDu4kN", token2.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token3 = xPathLexer2.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1758571084532128
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-\\H2V=CO");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.at();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.6050566196579796
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Q.H*G 5aneW?`Gj");
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      xPathLexer0.consume(9);
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('_');
      assertTrue(boolean0);
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0091241132512736
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.number();
      xPathLexer1.whitespace();
      Token token0 = xPathLexer1.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("c", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer1.dots();
      assertEquals("m.", token2.getTokenText());
      assertEquals(14, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer1.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.3822670385902742
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<@Zi96SDu4kN!?U50");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("!<@Zi96SDu4kN!?U50");
      xPathLexer0.mod();
      xPathLexer1.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer1.or();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K7i`[.)4'V}BF");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("K7i", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U}==7DxO'{");
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals("U", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.7980537488943823
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;EZ|Lq;2Z[");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Z", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0442882781283502
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P:,.7{?xi [nKK8tz R");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals(":,", token0.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.setXPath("P:,.7{?xi [nKK8tz R");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("P", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1123817783248353
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<@Zi96SDu4kN!?U50");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.dollar();
      String string0 = token0.toString();
      assertEquals("[ (23) (!)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals("<", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Zi96SDu4kN", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-#naVP;UX7(n");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("-", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("#naVP;UX7(n", token1.getTokenText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b@;k~PG>G9X@#");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("b", token0.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1533085657153441
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>|{mn");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      xPathLexer0.pipe();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("{", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("mn", token4.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.8441138774034159
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EtwD4u");
      XPathLexer xPathLexer1 = new XPathLexer("EtwD4u");
      xPathLexer1.pipe();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.9465624502523535
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fq>d{");
      xPathLexer0.div();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.217116937694113
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9kCLj>>A`@)");
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("TqF/v500Zf|kt+");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("TqF", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zK gCU&&k&m99/");
      XPathLexer xPathLexer1 = new XPathLexer("zK gCU&&k&m99/");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.4170523034657543
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6aaMFN");
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("MFN", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.5187106891301787
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ndkh)|]9Cg@VshI?&");
      xPathLexer0.doubleColon();
      xPathLexer0.consume();
      xPathLexer0.literal();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.1605070899594587
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9kCLj>>A`@)");
      Token token0 = xPathLexer0.pipe();
      assertEquals("9", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("kCLj", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.setXPath("+^[6Xdm{#1:");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(5, token3.getTokenType());
      assertEquals("+", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("_$Z7|-h&DnjLP-%Ctnf");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("_", token0.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.125279282666598
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6\"L/J+PWW");
      Token token0 = xPathLexer0.number();
      String string0 = token0.toString();
      assertEquals("[ (30) (6)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3-");
      XPathLexer xPathLexer1 = new XPathLexer("3-");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("367qHib^s*3]6JZh0");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("367", token0.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$Zj(oiZouxx");
      XPathLexer xPathLexer1 = new XPathLexer("$Zj(oiZouxx");
      xPathLexer0.nextToken();
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^a5nw`#_H3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("^a5nw`#_H3", token0.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.8177174986975012
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ON$(!:iXAj' ?c9K`#}");
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.9909970819126804
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P:,.4{?xi [nKK8tz R");
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6\"L/J+PWW");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.8603977537425277
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P:,.1{?xi [hKK8tz R");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume((-1));
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.div();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("rW`&0Xq4F&8E2R6mF");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("rW", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.9530696169214723
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ndh)|]9C@VshI?&");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X}:CA(;:4L/9F");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("X", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.9118478870235155
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w\"aEP/+2");
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.315115851177108
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CQc:vd");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("C", token0.getTokenText());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("vd", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.and();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*rwe_W8j");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("*", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.7951352514753474
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P:,.1{?xi [hKK8tz R");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(":,", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(31, token1.getTokenType());
      assertEquals(".1", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("{?xi [hKK8tz R", token2.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.9119999195001491
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;EZ|Lq;2Z[");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.2781049667862787
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-\\H2V=CO");
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.rightParen();
      xPathLexer0.at();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.1758571084532128
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-\\H2V=CO");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.at();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5596781782058797
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Q.H*G 5aneW?`Gj");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.2512986844198162
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l&n");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertEquals("l", token0.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals("&n", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("&", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertNotSame(token3, token1);
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("S", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.8292382814649755
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9kCLj>>A`@)");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("9", token0.getTokenText());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      
      Token token2 = xPathLexer0.relationalOperator();
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("A", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.8821086357157839
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ndh)|]9C@VshI?&");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u(t0c~q");
      Token token0 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("u(t0c~q", token1.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.9638308102463249
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EtwD4u");
      XPathLexer xPathLexer1 = new XPathLexer("EtwD4u");
      xPathLexer0.at();
      xPathLexer1.pipe();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y7EL?M^/0");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Y7EL", token0.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pvE]");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.5824641049288184
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Q.H*G 5aneW?`Gj");
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.9178141920562168
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ndh)|]9C@VshI?&");
      xPathLexer0.identifier();
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.not();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.1267602557096281
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/J /KBIKD9gD");
      Token token0 = xPathLexer0.slashes();
      assertEquals("/", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("J", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("KBIKD9gD", token3.getTokenText());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("%", token0.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.7700124796181741
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-\\H2V=CO");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.at();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.9009387081846612
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9kCLj>>A`@)");
      Token token0 = xPathLexer0.colon();
      assertEquals("9", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("kCLj", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(">", token4.getTokenText());
      assertEquals(9, token4.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R9]\"=(dCT*{az");
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.1267602557096281
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/J /KBIKD9gD");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("J", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0w2vZUH]sFRotEQ9");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("0", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0141784367176
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P:,.7{?xi [nKK8tz R");
      xPathLexer0.dollar();
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0141784367176
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P:,.7{?xi [nKK8tz R");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals(":,", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".7", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("xi [nKK8tz R", token3.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ndh)|]9C@VshI?&");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Ndh", token0.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.literal();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.2528903526021222
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-\\H2V=CO");
      xPathLexer0.setXPath("Wib=E,CLr{)v\">p&");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.or();
      xPathLexer0.at();
      xPathLexer0.or();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7mGgmifm?Ztb,!MjC)");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("mG", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals("gmifm?Ztb,!MjC)", token2.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.5596781782058797
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Q.H*G 5aneW?`Gj");
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.0091241132512736
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.number();
      xPathLexer1.whitespace();
      xPathLexer1.operatorName();
      Token token0 = xPathLexer1.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer1.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'??btp");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=3Yiq>{3vbU:plw");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("=", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.1123817783248353
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<@Zi96SDu4kN!?U50");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.dollar();
      token1.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.mod();
      assertNull(token2);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8](=gD6:0xAR3Bj)M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("8", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.9878839460524158
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ndh)|]9C@VshI?&");
      xPathLexer0.consume();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.6822291441078243
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Q.H*G 5anvW?`Gu");
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.at();
      xPathLexer0.setXPath("y(2+hcN&EDG");
      xPathLexer0.getPreviousToken();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P:,.7{?xi [nKK8tz R");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.rightParen();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.5337642774850517
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Q.H*G 5aneW?`Gj");
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.at();
      xPathLexer0.getPreviousToken();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.855187830398688
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6aaMFN");
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.number();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B&092%IR;x&fza\"f");
      XPathLexer xPathLexer1 = new XPathLexer("C");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("B", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertEquals("C", token1.getTokenText());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.8768521584408504
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;EZ|Lq;2Z[");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(";E", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("Z", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("|", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("Lq", token4.getTokenText());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.star();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(20, token0.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.395329854391083
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7mGgmifm?Ztb,!MjC)");
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.literal();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.8279498916841109
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P:,.1{?xi [hKK8tz R");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.div();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.0170247297465094
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<@Zi96SDu4kN!?U50");
      Token token0 = xPathLexer0.dollar();
      assertEquals("!", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      XPathLexer xPathLexer2 = new XPathLexer(":>F9H(<");
      Token token4 = xPathLexer2.nextToken();
      assertEquals(18, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals(">", token5.getTokenText());
      assertEquals(9, token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals("F9H", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]:,.6{?xi I[nKK8tz R");
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.whitespace();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }
}
