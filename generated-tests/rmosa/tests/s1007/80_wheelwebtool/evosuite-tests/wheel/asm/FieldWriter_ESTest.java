/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 08:27:27 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Label;
import wheel.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4659992569610426
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "NX", "NX", "T@{8RXP<9>,", "T@{8RXP<9>,");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putInt(131072);
      fieldWriter0.put(byteVector1);
      Attribute attribute0 = new Attribute("T@{8RXP<9>,");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "T@{8RXP<9>,";
      stringArray0[1] = "T@{8RXP<9>,";
      stringArray0[2] = "";
      stringArray0[3] = "T@{8RXP<9>,";
      stringArray0[4] = "T@{8RXP<9>,";
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(0, "", (String) null, "_=t", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1831);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "", "", "");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = "kr";
      String string1 = "{|Y\"0!";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "kr", "kr", "{|Y\"0!", "[XQ<");
      Attribute attribute0 = new Attribute("kr");
      char[] charArray0 = new char[9];
      charArray0[0] = '3';
      charArray0[1] = 'M';
      charArray0[2] = '$';
      charArray0[3] = '^';
      charArray0[4] = '@';
      charArray0[5] = 'F';
      charArray0[6] = '<';
      classWriter0.addType("^4$bTCw[`C_I");
      charArray0[7] = '[';
      char char0 = 'R';
      fieldWriter0.getSize();
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-59);
      byteArray0[0] = (byte) (-59);
      int int0 = 49;
      int int1 = (-488);
      // Undeclared exception!
      try { 
        attribute0.write(classWriter0, byteArray0, (-446), 0, (-3830));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5579));
      classWriter0.newClass("Mj[g%a7_f,Zu$vr5bz");
      classWriter0.newConstItem("Mj[g%a7_f,Zu$vr5bz");
      classWriter0.invalidFrames = true;
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(0, "Mj[g%a7_f,Zu$vr5bz", "Mj[g%a7_f,Zu$vr5bz", "f2J=h\"GsXyoR", (Object) null);
      FieldWriter fieldWriter1 = fieldWriter0.next;
      fieldWriter0.next = null;
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.7301668894884847
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2449);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "", ">J}&f6", "", "");
      FieldWriter fieldWriter1 = fieldWriter0.next;
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.put12(2, 1);
      fieldWriter0.put(byteVector1);
      fieldWriter0.visitAnnotation("THIr{H~&", true);
      fieldWriter0.getSize();
      ByteVector byteVector2 = new ByteVector();
      byteVector2.putUTF8("LocalVariableTable");
      fieldWriter0.put(byteVector2);
      fieldWriter0.put(byteVector2);
      assertNotSame(byteVector2, byteVector1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassWriter classWriter1 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "ConstantValue", "+\"VP/[O`OXn", "RuntimeVisibleAnnotations", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByteArray((byte[]) null, 2, 1);
      byteVector1.putInt(236);
      byteVector1.put11(2, 2);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      classWriter0.visitAnnotation("", true);
      Attribute attribute0 = new Attribute("`qs/Ig6{");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter1.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "EyQQWN";
      stringArray0[1] = "EyQQWN";
      stringArray0[2] = "EyQQWN";
      stringArray0[3] = "9^edfWdv+5?yZ";
      stringArray0[4] = "4u:>#t=$";
      stringArray0[5] = "EyQQWN";
      classWriter0.visitMethod(127, "9^edfWdv+5?yZ", "EyQQWN", "4u:>#t=$", stringArray0);
      Attribute attribute0 = new Attribute("9^edfWdv+5?yZ");
      Attribute attribute1 = attribute0.next;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "9P^\"2<i^f:e&", "EyQQWN", "EyQQWN", "9P^\"2<i^f:e&");
      fieldWriter0.visitAttribute(attribute0);
      Attribute attribute2 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute2);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1452));
      ClassWriter classWriter1 = new ClassWriter(287);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, 1, "", "", (String) null, "NX");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putInt(4);
      ByteVector byteVector2 = byteVector1.putUTF8("`/B/@");
      ByteVector byteVector3 = byteVector1.putInt(954);
      fieldWriter0.put(byteVector3);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector2);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      ClassWriter classWriter1 = new ClassWriter(3);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, (-2554), "Deprecated", "Deprecated", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "The list of suffixes must not be null", "EyQQWN", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "EyQQWN", "The list of suffixes must not be null", "", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter1 = new ClassWriter(46);
      FieldWriter fieldWriter2 = classWriter1.lastField;
      fieldWriter1.put(byteVector0);
      assertNotSame(fieldWriter1, fieldWriter0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "T@{8RXP<9>,", "Signature");
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt(8);
      byteVector1.putLong(777L);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0025953536096894
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1907), "Eye%QQWN", "", "The list of suffixes must not be null", "The list of suffixes must not be null");
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      Attribute attribute0 = new Attribute("The list of suffixes must not be null");
      fieldWriter0.getSize();
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "kr", "kr", "{|Y\"0!", "[XQ<");
      Attribute attribute0 = new Attribute("kr");
      char[] charArray0 = new char[9];
      charArray0[0] = '3';
      charArray0[1] = 'M';
      charArray0[2] = '$';
      String[] stringArray0 = new String[5];
      stringArray0[0] = "[XQ<";
      stringArray0[1] = "kr";
      stringArray0[2] = "[XQ<";
      stringArray0[3] = "kr";
      stringArray0[4] = "kr";
      classWriter0.visit(1789, 0, "[XQ<", "kr", "kr", stringArray0);
      charArray0[3] = '^';
      charArray0[4] = '@';
      charArray0[5] = 'F';
      charArray0[6] = '<';
      classWriter0.addType("^4$bTCw[`C_I");
      charArray0[7] = '[';
      fieldWriter0.getSize();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-59);
      // Undeclared exception!
      try { 
        attribute0.write(classWriter0, byteArray0, (-446), 0, (-3830));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5763820666248933
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2449);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "", ">J}&f6", "", "");
      FieldWriter fieldWriter1 = fieldWriter0.next;
      classWriter0.version = (-1);
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.put12(2, 1);
      fieldWriter0.put(byteVector1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7gCd Gp");
      fieldWriter0.visitAnnotation("THIr{H~&", true);
      ByteVector byteVector2 = new ByteVector();
      fieldWriter0.put(byteVector2);
      fieldWriter0.put(byteVector2);
      assertNotSame(byteVector2, byteVector0);
  }
}
