/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 08:11:39 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5660857389596289
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 2;
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat("-trimText", true, "-trimText");
      String[] stringArray0 = new String[9];
      stringArray0[2] = "-trimText";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8717814824679821
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expandEcmpty~D%Ds3T";
      stringArray0[1] = "DjK[{%@P<Bj";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "-trimText";
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setPadText(true);
      outputFormat0.setXHTML(true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 545);
      outputFormat0.setExpandEmptyElements(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2639));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2639
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7887062617229461
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("k", false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setEncoding("-expandEcmpty~D%Ds3T");
      outputFormat0.setNewLineAfterNTags((-751));
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expandEcmpty~D%Ds3T";
      stringArray0[1] = "DjK[{%@P<Bj";
      OutputFormat.createPrettyPrint();
      stringArray0[2] = "-trimText";
      stringArray0[3] = "-trimText";
      stringArray0[4] = ";y-X&Mo`6Ur`C-FM/";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 34);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getEncoding();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1577));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1577
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.908908734898781
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-2680));
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterNTags(39);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "~D%Ds3T";
      stringArray0[1] = "ebQ`E/bQ";
      stringArray0[2] = "~D%Ds3T";
      stringArray0[8] = "ebQ`E/bQ";
      stringArray0[4] = null;
      stringArray0[5] = "~D%Ds3T";
      stringArray0[6] = "~D%Ds3T";
      outputFormat0.parseOptions(stringArray0, 2);
      boolean boolean0 = outputFormat0.isNewlines();
      assertEquals(39, outputFormat0.getNewLineAfterNTags());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6885673693022827
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expandEcmpty~D%Ds3T";
      stringArray0[1] = "DjK[{%@P<Bj";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "-trimText";
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 545);
      outputFormat0.setIndentSize(545);
      outputFormat0.setExpandEmptyElements(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2639));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2639
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1894736293243366
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("k", false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setEncoding("-expandEcmpty~D%Ds3T");
      outputFormat0.setEncoding("-expandEcmpty~D%Ds3T");
      outputFormat0.setNewLineAfterNTags((-751));
      outputFormat0.setNewLineAfterNTags((-1));
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expandEcmpty~D%Ds3T";
      stringArray0[1] = "DjK[{%*P<Bj";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "-trimText";
      outputFormat0.setIndent(false);
      stringArray0[4] = ";y-X&Mo`6Ur`C-FM/";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 34);
      outputFormat0.isNewlines();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-960));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -960
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6885673693022827
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expandEcmpty~D%Ds3T";
      stringArray0[1] = "DjK[{%@P<Bj";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "-trimText";
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setEncoding("-expandEcmpty~D%Ds3T");
      outputFormat0.setIndent("DjK[{%@P<Bj");
      outputFormat0.parseOptions(stringArray0, 545);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2639));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2639
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.328515191203992
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(true);
      int int0 = 0;
      int int1 = 638;
      outputFormat0.setNewLineAfterNTags(638);
      String string0 = "Iq=},R&[0]^m<jGOd%9";
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "Iq=},R&[0]^m<jGOd%9";
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1969238246));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1969238246
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("");
      String string0 = outputFormat0.getEncoding();
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", string0);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expandEcmpty~D%Ds3T";
      stringArray0[3] = "-trimText";
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 545);
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals(0, int0);
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-2680));
      outputFormat0.setNewLineAfterNTags((-2680));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "~D%Ds3T";
      stringArray0[1] = "ebQ`E/bQ";
      stringArray0[2] = "~D%Ds3T";
      outputFormat0.isXHTML();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.getIndent();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2680));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2680
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      outputFormat0.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 1612);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndent("");
      outputFormat0.setIndentSize((-4544));
      outputFormat0.setNewLineAfterNTags(1713);
      outputFormat0.setLineSeparator("");
      outputFormat0.isOmitEncoding();
      outputFormat0.isXHTML();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertEquals(1713, outputFormat0.getNewLineAfterNTags());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimText", false, "-trimText");
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[5];
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "-trimText";
      stringArray0[4] = "-trimText";
      int int0 = (-1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6885673693022827
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expanVEcmpty~`%Ds3T";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "-trimText";
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setSuppressDeclaration(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", true, "-lineSeparator");
      assertEquals("-lineSeparator", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize((-1384));
      outputFormat0.setIndentSize(1632);
      outputFormat0.setXHTML(true);
      boolean boolean0 = outputFormat0.isTrimText();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-Xrim~ext", false);
      outputFormat0.setOmitEncoding(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("dQF}B3+^cTjHe", true, "-trimText");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "dQF}B3+^cTjHe";
      stringArray0[1] = "dQF}B3+^cTjHe";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "-trimText";
      stringArray0[4] = "-trimText";
      stringArray0[6] = "-trimText";
      stringArray0[7] = "";
      stringArray0[8] = "dQF}B3+^cTjHe";
      String string0 = outputFormat0.getEncoding();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("-trimText", string0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("dQF}B3+^cTjHe", outputFormat0.getIndent());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterNTags((-1811));
      outputFormat0.setXHTML(false);
      outputFormat0.setIndentSize(39);
      outputFormat0.setIndent(false);
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.isPadText();
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterNTags((-1811));
      assertEquals((-1811), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(">h/VQ4", true, "");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "Ea~|m]GrGD";
      stringArray0[2] = "4ifwBrFnroS";
      stringArray0[3] = "";
      stringArray0[4] = "Ea~|m]GrGD";
      stringArray0[5] = "";
      stringArray0[6] = "Ea~|m]GrGD";
      outputFormat0.parseOptions(stringArray0, 1963);
      outputFormat0.isNewlines();
      assertEquals(">h/VQ4", outputFormat0.getIndent());
      
      outputFormat0.setIndent(true);
      outputFormat0.getLineSeparator();
      assertEquals("  ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewlines(true);
      String[] stringArray0 = new String[9];
      stringArray0[1] = "ebQ`E/bQ";
      stringArray0[8] = "ebQ`E/bQ";
      stringArray0[4] = null;
      OutputFormat outputFormat1 = new OutputFormat();
      assertFalse(outputFormat1.isNewlines());
      
      outputFormat0.getIndent();
      outputFormat0.parseOptions(stringArray0, 39);
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      boolean boolean1 = outputFormat0.isSuppressDeclaration();
      assertTrue(boolean1 == boolean0);
      
      outputFormat0.setTrimText(false);
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("b Gdu");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.isTrimText();
      outputFormat0.setEncoding((String) null);
      outputFormat0.getLineSeparator();
      outputFormat0.setXHTML(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setTrimText(true);
      outputFormat0.setEncoding("");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.getEncoding();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndentSize(0);
      outputFormat0.isNewlines();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.isTrimText();
      boolean boolean0 = outputFormat0.isPadText();
      assertEquals("", outputFormat0.getIndent());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indentSize", true, "");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-indentSize";
      outputFormat0.setEncoding((String) null);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("LYS`", false, "LYS`");
      outputFormat0.setIndentSize((-1));
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndentSize(675);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat1.setIndent(false);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.isXHTML();
      outputFormat0.setIndent("-omitEncoding");
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.setTrimText(false);
      outputFormat0.isXHTML();
      outputFormat0.getAttributeQuoteCharacter();
      assertEquals("-omitEncoding", outputFormat0.getIndent());
      
      outputFormat1.setExpandEmptyElements(true);
      outputFormat1.setTrimText(false);
      assertTrue(outputFormat1.isPadText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-1811));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-padText";
      stringArray0[1] = "-padText";
      stringArray0[2] = "-padText";
      stringArray0[3] = "-padText";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setNewLineAfterNTags((-1811));
      outputFormat0.isNewlines();
      String[] stringArray1 = new String[2];
      stringArray1[0] = "-padText";
      stringArray1[1] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray1, 4);
      assertEquals((-1811), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "-expandEmpty-expandEmpty'";
      int int0 = 2;
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty-expandEmpty'", true, "-expandEmpty-expandEmpty'");
      String[] stringArray0 = new String[9];
      stringArray0[2] = "-expandEmpty-expandEmpty'";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setNewLineAfterNTags(45);
      outputFormat0.setIndent((String) null);
      assertEquals(45, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "-lineSeparator");
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "-lineSeparator";
      stringArray0[4] = "#)%in+A";
      stringArray0[5] = "";
      stringArray0[6] = "C!${fn.|i";
      stringArray0[7] = "-lineSeparator";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("", outputFormat0.getLineSeparator());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("-xhtml", false, "-xhtml");
      outputFormat1.isSuppressDeclaration();
      assertFalse(outputFormat1.isXHTML());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Ea~|m]GrGD";
      stringArray0[1] = "-xhtml";
      stringArray0[2] = "Ea~|m]GrGD";
      stringArray0[3] = "-xhtml";
      stringArray0[4] = "-expandEmpty'";
      stringArray0[5] = "-xhtml";
      outputFormat1.parseOptions(stringArray0, 1);
      boolean boolean0 = outputFormat1.isNewlines();
      assertTrue(outputFormat1.isXHTML());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat0.isNewlines());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expaLndcmpt";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "grc";
      stringArray0[3] = "-eS{andEcmpty~DIDs3T";
      stringArray0[4] = "Cm>ME";
      stringArray0[5] = "zs}u&jzaP|zd0GQ";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isNewlines());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setNewlines(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setAttributeQuoteCharacter('\"');
      String string0 = "-padText";
      outputFormat0.setIndent("-padText");
      outputFormat0.setNewLineAfterNTags((-2242));
      OutputFormat outputFormat1 = new OutputFormat("e5n@u_P[_)(2{", false, "-lineSepalator");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-lineSepalator";
      outputFormat1.parseOptions(stringArray0, 1282);
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.isNewlines();
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('D');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (D)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty~D%Ds3T", false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-expandEmpty~D%Ds3T";
      stringArray0[1] = "-expandEmpty~D%Ds3T";
      stringArray0[2] = "-expandEmpty~D%Ds3T";
      stringArray0[3] = "-indent";
      stringArray0[4] = "-expandEmpty~D%Ds3T";
      stringArray0[5] = "-expandEmpty~D%Ds3T";
      stringArray0[6] = "-expandEmpty~D%Ds3T";
      stringArray0[7] = "-expandEmpty~D%Ds3T";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setExpandEmptyElements(false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-expandEmpty'";
      stringArray0[1] = "-omitEncoding";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-encoding", false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "-encoding";
      OutputFormat.createCompactFormat();
      stringArray0[3] = "-encoding";
      stringArray0[4] = "-encoding";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expanVEcmpty~`%Ds3T";
      stringArray0[1] = "DjK[{%@P<Bj";
      stringArray0[2] = "-trimText";
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray1 = new String[1];
      stringArray1[0] = "-suppressDeclaration";
      outputFormat0.setIndentSize(0);
      int int0 = 3003;
      outputFormat0.parseOptions(stringArray1, 3003);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.parseOptions(stringArray1, 3003);
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray1, 3177);
      OutputFormat outputFormat1 = new OutputFormat("DjK[{%@P<Bj");
      outputFormat1.setLineSeparator("DjK[{%@P<Bj");
      outputFormat0.setTrimText(false);
      outputFormat1.setNewLineAfterNTags(1101);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray1, (-1534));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1534
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
