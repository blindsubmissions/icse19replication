/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 08:15:52 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.520034471866936
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B?|xTQZg(U@R2Fnk1a(");
      Token token0 = xPathLexer0.pipe();
      assertEquals("B", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(17, token2.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7914141957568401
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B?|xTQZg(U@R2Fnk1a(");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("B", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("x", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("TQZg", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.716438564551005
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B?|xTQZg(U@R2Fnk1a(");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("B?", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("xTQZg", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8045934358274813
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath(".68");
      xPathLexer0.nextToken();
      xPathLexer0.consume((-1953));
      xPathLexer0.equals();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.795621609732589
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?Yy{!T{'O7Y");
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer(":;@%{v/&");
      xPathLexer1.nextToken();
      xPathLexer1.div();
      xPathLexer0.number();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.7687633535972705
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8T!CLpdX[aphuH");
      xPathLexer0.equals();
      Token token0 = xPathLexer0.dots();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.literal();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8180033793687786
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      XPathLexer xPathLexer1 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer1.dollar();
      token0.toString();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("z", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (26) (z)", string0);
      
      Token token2 = xPathLexer0.dots();
      assertEquals("j", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer1.setPreviousToken(token0);
      Token token3 = xPathLexer1.plus();
      assertEquals("j", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.or();
      Token token4 = xPathLexer1.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("7p", token4.getTokenText());
      
      xPathLexer1.literal();
      Token token5 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals("7", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8045934358274813
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".68", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.setXPath(".68");
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("68", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.795621609732589
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?Yy{!T{'O7Y");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("?", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(":;@%{v/&");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer1.div();
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8045934358274813
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.setXPath(".68");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".68", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.8045934358274813
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".68", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.setXPath(".68");
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("68", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6394577155127598
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B?|xTQZg(U@R2Fnk1a(");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8045934358274813
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath(".68");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8078856237959416
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b%");
      Token token0 = xPathLexer0.plus();
      assertEquals("b", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.setXPath("yqKdnm");
      XPathLexer xPathLexer1 = new XPathLexer("b%");
      xPathLexer1.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("yqKdnm", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.7706960436297623
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.plus();
      xPathLexer0.setXPath("!?27#v");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightParen();
      xPathLexer1.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("!?27#v");
      xPathLexer0.nextToken();
      xPathLexer1.operatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8363922404417595
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath(".68");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".68", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8309372687620074
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?Yy{!T{'O7Y");
      Token token0 = xPathLexer0.equals();
      assertEquals("?", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(":;@%{v/&");
      Token token1 = xPathLexer1.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals(":;", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(16, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
      
      xPathLexer1.div();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.7706960436297623
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.setXPath("!?27#v");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.notEquals();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("!?", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.setXPath("!?27#v");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(23, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      xPathLexer1.operatorName();
      Token token4 = xPathLexer1.number();
      assertEquals(30, token4.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.337335025771432
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fDzhWo>6M");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.7335207456692825
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.plus();
      xPathLexer0.setXPath("!?27#v");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("!?27#v");
      xPathLexer0.nextToken();
      xPathLexer1.operatorName();
      xPathLexer0.and();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.2480725021971888
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.setXPath("IF.|%5^]YDY3Z1j)*");
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.2061718171753208
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.not();
      String string0 = token0.toString();
      assertEquals("[ (23) (o)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      assertEquals("werken.saxpath.XPathLexer", token3.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0218041013389874
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.setXPath("IF.|%5^]YDY3Z1j)*");
      xPathLexer0.not();
      xPathLexer0.dots();
      xPathLexer0.setXPath("m:86i4");
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.8204162834946392
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.setXPath("IF.|%5^]YDY3Z1j)*");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("IF.", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.8045934358274813
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.setXPath(".68");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".68", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1947580227344927
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#/N-o0'U");
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.setXPath("'#/N-o0'U");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4907548834353825
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mr)*h");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.equals();
      assertEquals("m", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      String string0 = token1.toString();
      assertEquals("[ (22) (r))", string0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(20, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("odg>.Uy/Ii");
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("dg", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("[ (22) (r))");
      Token token6 = xPathLexer1.whitespace();
      assertEquals((-2), token6.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.2353003961547222
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%|!>y:,oe,Udpbc_f\"");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(23, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(">", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(":", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals(",o", token6.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer(".8");
      xPathLexer1.setPreviousToken(token4);
      assertEquals(15, token4.getTokenType());
      assertEquals("y", token4.getTokenText());
      
      xPathLexer1.operatorName();
      xPathLexer1.and();
      xPathLexer0.or();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("e,Udpbc_f\"", token7.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("_lx;W9e#f:*");
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("_", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("lx;W9e#f:*", token2.getTokenText());
      assertNotSame(token2, token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.2847547389830036
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".4skq>O-`YC+yC");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.081060572341779
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (31) (.8)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.setXPath("IF.|%5^]YDY3Z1j)*");
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("I", token1.getTokenText());
      
      xPathLexer0.setXPath("m:86i4");
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v(S9 2?0/]asp_oJ");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("(S", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("2?", token2.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.or();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("0", token3.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("fDzhWo>6M");
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.equals();
      assertEquals("f", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("DzhWo>6M", token2.getTokenText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.233738434201295
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.setXPath(") (");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(23, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("A");
      Token token1 = xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertNotSame(token2, token1);
      assertEquals("A", token2.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*b&VYeIc");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(23, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("b&VYeIc", token1.getTokenText());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3Eo%Yq7pY}_zG");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("3", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.2847547389830034
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".4skq>O-`YC+yC");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.literal();
      xPathLexer0.consume((-7613));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.2785833345118494
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v(S9 2?/]ap_o2");
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      xPathLexer0.identifier();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.3662248050374342
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("odg>.Uy/Ii");
      xPathLexer0.equals();
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`o&.JB");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.2061718171753208
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("='Zm:P-p_% ID");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.873758016709369
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      XPathLexer xPathLexer1 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer1.dollar();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("z", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer1.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      assertEquals("z", token0.getTokenText());
      
      Token token2 = xPathLexer1.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("j", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer1.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("7p", token3.getTokenText());
      
      xPathLexer1.literal();
      Token token4 = xPathLexer1.identifierOrOperatorName();
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("j7pVn", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1664707413929107
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#/N-o0'U");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.setXPath("'#/N-o0'U");
      xPathLexer0.not();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.566708499346575
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("orp`m%4Lech#_~");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("o", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token2 = xPathLexer0.dollar();
      assertEquals("r", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("p", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("`", token4.getTokenText());
      
      Token token5 = xPathLexer0.equals();
      assertEquals("m", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("%4Lech#_~", token6.getTokenText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1448539829858246
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token1.getTokenText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mr)*h");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("m", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("r)*h", token1.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7Pjn 0Ke<>=,i'DI7");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.star();
      assertEquals("P", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("j", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      assertEquals("n 0Ke<>=,i'DI7", token3.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1676660016689022
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8");
      xPathLexer0.setXPath("VY.XN3&");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.setXPath("IF.|%5^]YDY3Z1j)*");
      xPathLexer0.dots();
      xPathLexer0.setXPath("m:86i4");
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.795621609732589
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?Yy{!T{'O7Y");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(":;@%{v/&");
      xPathLexer1.consume();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(";@%{v/&", token1.getTokenText());
      
      xPathLexer1.div();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.61183854660755
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      String string0 = token0.toString();
      assertEquals("[ (31) (.8)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.setXPath("IF.|%5^]YDY3Z1j)*");
      Token token1 = xPathLexer0.dots();
      assertEquals("I", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (31) (.8)");
      xPathLexer0.leftParen();
      Token token2 = xPathLexer1.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("[", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("(", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals(".", token4.getTokenText());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token6 = xPathLexer1.identifierOrOperatorName();
      assertEquals("31", token6.getTokenText());
      
      xPathLexer1.or();
      xPathLexer0.whitespace();
      Token token7 = xPathLexer1.whitespace();
      assertEquals("", token7.getTokenText());
      
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      assertNotNull(token8);
      
      Token token9 = xPathLexer0.number();
      assertEquals("5", token9.getTokenText());
      assertEquals(30, token9.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.8045934358274813
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(".6", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
      
      xPathLexer0.setXPath(".68");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(31, token2.getTokenType());
      assertEquals(".68", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.3226658931566948
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("amK>1Q3CaI");
      xPathLexer0.and();
      Token token0 = new Token(24, "amK>1Q3CaI", (-1544), (-1544));
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("am", token1.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("K", token3.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.2847547389830036
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".4skq>O-`YC+yC");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.137892644543157
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#/N-o0'U");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.setXPath("'#/N-o0'U");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("C.68");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("C.68", token1.getTokenText());
      assertNotSame(token1, token0);
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1824829105354069
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68");
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.2091358920587802
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".4skq>O-`YC+yC");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".4", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("s", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("kq>O-`YC+yC", token2.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.4705255797477703
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v(S9 2?/]asp_o2");
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.setXPath("v(S9 2?/]asp_o2");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.identifier();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5jn_X[(y?Q<b~19ea}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("5", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4108671178295664
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2fmi,cw9\"QSY(]");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("2", token1.getTokenText());
      
      xPathLexer0.setXPath(".2fmi,cw9\"QSY(]");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(31, token2.getTokenType());
      assertEquals(".2", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("f", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("m", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertNotSame(token5, token2);
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals("", token6.getTokenText());
      assertEquals((-2), token6.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("OJ20@jtqt2^");
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1969978572239506
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#/N-o0'U");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("[ (");
      xPathLexer0.whitespace();
      xPathLexer0.not();
      xPathLexer0.setXPath("'#/N-o0'U");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R8|VH}XiVR8 aP;`R");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("R8", token0.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.288058250826776
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(23, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.setXPath("&>J");
      Token token4 = xPathLexer0.nextToken();
      assertEquals("&>J", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("NXI");
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("N", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("XI", token2.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("].Q_");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.1990567865365525
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fDzhWo>6M");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.2893957083742742
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kfb/Yfg");
      xPathLexer0.doubleColon();
      xPathLexer0.dots();
      xPathLexer0.isIdentifierStartChar('H');
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("$9jCJ/:1fIv[NnBc}?");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.8678481310709717
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".68", token0.getTokenText());
      
      xPathLexer0.setXPath(".68");
      xPathLexer0.setXPath("~Pt~^(t~~P{J_Tye)");
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("~", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Pt~^(t~~P{J_Tye)", token2.getTokenText());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.2091358920587802
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".4skq>O-`YC+yC");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tV?u:VZ7ByQ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("tV", token0.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.217640595376125
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v(S9 2?/]ap_o2");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("S9", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("/]", token5.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      assertEquals("ap_o2", token6.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5249421822743459
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mr)*h");
      xPathLexer0.at();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("odg>.Uy/Ii");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("[ (22) ()*)");
      xPathLexer1.whitespace();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      Token token1 = xPathLexer1.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(5, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("%", token1.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.9002831398484176
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?Yy{!T{'O7Y");
      Token token0 = xPathLexer0.equals();
      assertEquals("?", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(":;@%{v/&");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer1.div();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer1.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("Yy", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.310811584392816
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fDzhWo>6M");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("fDzhWo>6M");
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.873758016709369
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      XPathLexer xPathLexer1 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer1.dollar();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("z", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("j", token2.getTokenText());
      
      xPathLexer1.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      assertEquals("z", token0.getTokenText());
      
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("j", token3.getTokenText());
      
      xPathLexer0.or();
      Token token4 = xPathLexer1.doubleColon();
      assertEquals("7p", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer1.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(30, token7.getTokenType());
      assertEquals("7", token7.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.354879655909273
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("amK>1Q3CaI");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("am", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = new Token(24, "amK>1Q3CaI", (-1544), (-1544));
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("K>", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer0.number();
      assertEquals("1", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("Q3CaI", token4.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.233738434201295
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertFalse(token2.equals((Object)token1));
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.3765845147353846
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("FWWEB/.1 J|6]HgT*SU");
      xPathLexer0.consume();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer1.whitespace();
      Token token5 = xPathLexer1.literal();
      assertEquals("", token5.getTokenText());
      assertEquals(27, token5.getTokenType());
      
      Token token6 = xPathLexer1.identifierOrOperatorName();
      assertEquals("EB", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals(31, token8.getTokenType());
      
      Token token9 = xPathLexer1.whitespace();
      assertEquals((-2), token9.getTokenType());
      assertEquals("", token9.getTokenText());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals("J|6]HgT*SU", token10.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.1697324701377827
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("mq@T^cm6)G0pOiCc");
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.3508289414576886
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("FWWEB/.1 J|6]HgT*SU");
      xPathLexer0.consume();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer1.whitespace();
      Token token5 = xPathLexer1.literal();
      assertEquals(27, token5.getTokenType());
      
      Token token6 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      assertEquals("EB", token6.getTokenText());
      
      xPathLexer1.slashes();
      Token token7 = xPathLexer1.slashes();
      assertEquals(".", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer1.whitespace();
      assertEquals((-2), token9.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.2044173582534277
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%|!>y:,oe,Udpbc_f\"");
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.identifier();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer(".8");
      xPathLexer1.setPreviousToken(token1);
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.operatorName();
      xPathLexer1.and();
      xPathLexer0.or();
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertNull(token2);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.9343298824398616
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?Yy{!T{'O7Y");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(":;@%{v/&");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer1.div();
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.602672494025685
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7Pjn 0Ke<>=,i'DI7");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("Pj", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("0", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Ke<>=,i'DI7", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("7Pjn 0Ke<>=,i'DI7");
      Token token4 = xPathLexer1.rightBracket();
      assertEquals("7", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer1.identifierOrOperatorName();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("<", token6.getTokenText());
      assertEquals(7, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.and();
      xPathLexer1.whitespace();
      Token token8 = xPathLexer0.relationalOperator();
      assertEquals(">=", token8.getTokenText());
      assertEquals(10, token8.getTokenType());
      
      Token token9 = xPathLexer1.identifierOrOperatorName();
      assertEquals("0Ke", token9.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5432849086571367
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mr)n)*h");
      xPathLexer0.operatorName();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.colon();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("odg>.Uy/Ii");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("[ (18) (r)");
      xPathLexer1.whitespace();
      xPathLexer1.div();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      xPathLexer1.identifierOrOperatorName();
      Token token1 = xPathLexer1.div();
      assertNull(token1);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.3506788859349823
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kfb/Yfg");
      xPathLexer0.doubleColon();
      xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer0.isIdentifierStartChar('H');
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.081060572341779
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      String string0 = token0.toString();
      assertEquals("[ (31) (.8)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.setXPath("IF.|%5^]YDY3Z1j)*");
      Token token1 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("I", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.setXPath("m:86i4");
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.setXPath("z\"js(Leg,d*aaC488z");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("z\"js(Leg,d*aaC488z", token1.getTokenText());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B?|xTQZg(U@R2Fnk1a(");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("B?", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("|", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("xTQZg", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.4108671178295664
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2fmi,cw9\"QSY(]");
      Token token0 = xPathLexer0.pipe();
      assertEquals(".", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.setXPath(".2fmi,cw9\"QSY(]");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals(".2", token1.getTokenText());
      
      xPathLexer0.comma();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("i,cw9\"QSY(]", token3.getTokenText());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(",", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{/&o|~'iwxe[");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{/&o|~'iwxe[", token0.getTokenText());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.4454765687913305
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v(S9 2?/]asp_o2");
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.setXPath("^<0V*kWP!.\"_5%l_");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.identifier();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.6810886870666535
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fDzhWo>6M");
      Token token0 = xPathLexer0.not();
      String string0 = token0.toString();
      assertEquals("[ (23) (f)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.notEquals();
      assertEquals("Dz", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Wo>6M", token3.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.4787204502193443
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2fmi,cw9\"QSY(]");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.setXPath(".2fmi,cw9\"QSY(]");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals(".2", token1.getTokenText());
      
      xPathLexer0.comma();
      Token token2 = xPathLexer0.equals();
      assertEquals("m", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("i", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(",", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("w9", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.1947580227344925
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#/N-o0'U");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.setXPath("'#/N-o0'U");
      xPathLexer0.comma();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-M*J.Wjz,>*53");
      XPathLexer xPathLexer1 = new XPathLexer("-M*J.Wjz,>*53");
      xPathLexer1.mod();
      Token token0 = xPathLexer1.equals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("-M*J.Wjz,>*53");
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("_GJ");
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("_", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("GJ", token3.getTokenText());
      assertNotSame(token3, token1);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(";B", token0.getTokenText());
      
      xPathLexer0.setXPath(";B");
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals(";", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("B", token2.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath(".68");
      xPathLexer0.setXPath("u2!p!V");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D\"FnPKYM)7W=z");
      xPathLexer0.not();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("y2IsKdk%y$");
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.setXPath("L]4J{fL}opqj6");
      Token token2 = xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("L]4J{fL}opqj6", token3.getTokenText());
      assertNotSame(token3, token2);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.3405225616617682
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8");
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("(M~(loRU9m.hJ>5,G\"m");
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (22) ((M)", string0);
      
      xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("loRU9m.hJ", token1.getTokenText());
      
      xPathLexer0.setXPath("odg>.Uy/Ii");
      Token token2 = xPathLexer0.equals();
      assertEquals("o", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("dg>.Uy/Ii", token3.getTokenText());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.3340532409007033
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".4skq>O-`YC+yC");
      xPathLexer0.comma();
      Token token0 = xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?Yy{!T{'O7Y");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("?Yy{!T{'O7Y", token0.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.not();
      assertEquals("?", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.setXPath("ZfB[");
      Token token2 = xPathLexer0.nextToken();
      assertNotSame(token2, token0);
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("Z", token3.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.137892644543157
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#/N-o0'U");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("U", token0.getTokenText());
      
      xPathLexer0.setXPath("'#/N-o0'U");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(27, token1.getTokenType());
      assertEquals("#/N-o0", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("U", token2.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("N2XI");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("N2XI", token1.getTokenText());
      assertNotSame(token1, token0);
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.6245969228133736
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7Pjn 0Ke<>=,i'DI7");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("Pj", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("0", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("7Pjn 0Ke<>=,i'DI7");
      Token token3 = xPathLexer1.rightBracket();
      assertEquals("7", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals("K", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer1.identifierOrOperatorName();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("<", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(10, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      xPathLexer0.and();
      Token token8 = xPathLexer1.whitespace();
      assertEquals("", token8.getTokenText());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.3405225616617682
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("odg>.Uy/Ii");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mM(<[2@BM");
      XPathLexer xPathLexer1 = new XPathLexer("EeP");
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("H", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.3491461486362248
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("mq@T^cm6)G0pOiCc");
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.pipe();
      assertEquals("m", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("q", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("@", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals("T", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("..fm^,cw9\"QSY(2");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.setXPath("..fm^,cw9\"QSY(2");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.167666001668902
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8");
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("[ (31) (.8)");
      xPathLexer0.div();
      xPathLexer0.setXPath("IF.|%5^]YDY3Z1j)*");
      xPathLexer0.dots();
      xPathLexer0.setXPath("druy");
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kfb/Yfg");
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.077101574886211
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("orp`m%4Lech#_~");
      xPathLexer0.operatorName();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(".9pq/q#^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".9", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("or`?m%4Lech#_~");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("o", token0.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("or`?m%4Lech#_~");
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("r", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer1.operatorName();
      assertEquals("or", token4.getTokenText());
      assertEquals(29, token4.getTokenType());
      assertNotNull(token4);
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("FWWEB/.0 J|6]HgV*SU");
      xPathLexer0.whitespace();
      xPathLexer0.literal();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.457621462842828
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".68", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.setXPath(".68");
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(".6", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("aan4+wEXJ\"^T43eQR");
      Token token4 = xPathLexer0.pipe();
      assertEquals("a", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("an4+wEXJ\"^T43eQR", token5.getTokenText());
      
      xPathLexer0.div();
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      assertEquals("", token6.getTokenText());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pjn 0Ke<=,Si'DI7");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("P", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("jn", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("0", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Ke<=,Si'DI7", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals("K", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer1.identifierOrOperatorName();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(8, token7.getTokenType());
      assertEquals("<=", token7.getTokenText());
      
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      xPathLexer0.and();
      Token token9 = xPathLexer1.whitespace();
      assertEquals((-2), token9.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68");
      Token token0 = xPathLexer0.colon();
      assertEquals(".", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.setXPath(".68");
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(".6", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      xPathLexer0.setXPath("..46Y@CHr2|");
      xPathLexer0.number();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(31, token3.getTokenType());
      
      xPathLexer0.setXPath("aan4+wEXJ\"^T43eQR");
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("a", token4.getTokenText());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("an4+wEXJ\"^T43eQR", token5.getTokenText());
  }
}
