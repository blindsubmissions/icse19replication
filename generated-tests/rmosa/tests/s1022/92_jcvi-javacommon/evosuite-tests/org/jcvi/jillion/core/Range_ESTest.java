/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 15:23:34 GMT 2018
 */

package org.jcvi.jillion.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jcvi.jillion.core.Range;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Range_ESTest extends Range_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      // Undeclared exception!
      try { 
        Range.parseRange("p60Q9cYxS[@");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse p60Q9cYxS[@ into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      // Undeclared exception!
      try { 
        Range.of(range_CoordinateSystem0, 9223372036854775807L, (-2147483648L));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // given length -2147483649 would make range [9223372036854775807 - ? ] beyond max allowed end offset
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      // Undeclared exception!
      try { 
        Range.of((Range.CoordinateSystem) null, 624L, 624L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // CoordinateSystem can not be null
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Range range0 = Range.ofLength(4242L);
      assertFalse(range0.isEmpty());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      long long0 = (-9223372036854775800L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      // Undeclared exception!
      try { 
        Range.of(range_CoordinateSystem0, 65535L, (-9223372036854775800L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range coordinates 65535, -9223372036854775800 are not valid Residue Based coordinates
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range.Builder range_Builder0 = null;
      try {
        range_Builder0 = new Range.Builder((-22L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must be >=0
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      long long0 = 776L;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, 776L, 776L);
      // Undeclared exception!
      try { 
        range_Builder0.contractEnd(776L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      long long0 = (-758L);
      range_Builder0.shift(215L);
      range_Builder0.expandBegin((-758L));
      range_Builder0.contractEnd((-758L));
      range_Builder0.expandBegin((-758L));
      // Undeclared exception!
      try { 
        range_Builder0.copy();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      // Undeclared exception!
      try { 
        Range.ofLength((-2718L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must be >=0
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7170694212538375
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Range range0 = Range.of(9223372036854775716L);
      String string0 = range0.toString();
      assertEquals("[ 9223372036854775716 .. 9223372036854775716 ]/0B", string0);
      
      Long long0 = new Long(9223372036854775716L);
      Long.compareUnsigned(9223372036854775716L, 9223372036854775716L);
      Long.max((-338L), (-338L));
      Object object0 = new Object();
      Range range1 = Range.of(9223372036854775807L);
      range1.getEnd();
      boolean boolean0 = range1.equals(range0);
      assertTrue(boolean0);
      
      range0.getEnd();
      range1.equals("Z1|XGCY<+I't");
      assertTrue(range1.equals((Object)range0));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      // Undeclared exception!
      try { 
        Range.of(1491L, (-1467L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.737140718477015
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Range range0 = Range.of(2880L);
      Range range1 = Range.of(1846L);
      long long0 = range1.getBegin();
      assertEquals(1846L, long0);
      
      range0.equals(range1);
      boolean boolean0 = range1.equals(range0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      range0.startsBefore(range0);
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.}
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.867922460395077
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Range range0 = Range.of((-32768L));
      Long long0 = new Long((-32768L));
      range0.equals(long0);
      Range.Comparators[] range_ComparatorsArray0 = Range.Comparators.values();
      assertEquals(4, range_ComparatorsArray0.length);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      long long0 = 0L;
      Range.Builder range_Builder0 = new Range.Builder(0L, 0L);
      range_Builder0.contractBegin(0L);
      // Undeclared exception!
      try { 
        range_Builder0.contractBegin(2001L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.8613706721745853
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Range range0 = Range.ofLength(9223372036854775676L);
      Object object0 = new Object();
      Range range1 = Range.ofLength(9223372036854775676L);
      boolean boolean0 = range1.intersects(range0);
      boolean boolean1 = range0.equals("org.jcvi.jillion.internal.core.util.Caches$AbstractReferencedCache");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8114194983013414
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = Range.ofLength(0L);
      range0.intersection(range1);
      range0.equals("");
      // Undeclared exception!
      try { 
        range0.complement((Range) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null Range used in intersection operation.
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Range range0 = Range.ofLength(9223372036854775664L);
      Range range1 = Range.ofLength(9223372036854775664L);
      Range range2 = range1.intersection(range0);
      assertFalse(range2.isEmpty());
      
      range0.toString();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      String string0 = range0.toString(range_CoordinateSystem0);
      assertEquals("[ 0 .. 9223372036854775663 ]/0B", string0);
      
      long long0 = range1.getEnd();
      assertSame(range1, range2);
      assertEquals(9223372036854775663L, long0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.2467352892725776
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-2841L), 32767L);
      Object object0 = new Object();
      Object object1 = new Object();
      Range range1 = Range.of((-2841L), (-400L));
      range0.toString();
      range0.equals(range1);
      range0.complement(range1);
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("number of entries must be <= Integer.MAX_VALUE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.number of entries must be <= Integer.MAX_VALUE
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.380177717418273
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Object object0 = new Object();
      Object object1 = new Object();
      Range range0 = Range.of((-514L));
      Range range1 = Range.of(range_CoordinateSystem0, (-644L), (-514L));
      range1.getBegin();
      Range range2 = range1.intersection(range0);
      range1.complement(range2);
      range2.equals(range1);
      range1.getEnd();
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.8914393850137774
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range.of(range_CoordinateSystem0, (-12L), 32312L);
      // Undeclared exception!
      try { 
        Range.of(range_CoordinateSystem0, 32312L, (-12L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 624L, 624L);
      range0.isEmpty();
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      long long0 = 0L;
      range_Builder0.contractEnd(0L);
      Range range0 = Range.ofLength(0L);
      Range range1 = range0.asRange();
      range1.getBegin();
      Range.ofLength(0L);
      // Undeclared exception!
      try { 
        range0.split(0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // max splitLength must be >= 1
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      long long0 = range0.getEnd(range_CoordinateSystem0);
      assertEquals(0L, long0);
      
      long long1 = range0.getEnd();
      assertTrue(range0.isEmpty());
      assertEquals((-1L), long1);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.966943486189354
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Range range0 = Range.of((-1L));
      Consumer<Long> consumer0 = (Consumer<Long>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      range0.forEach(consumer0);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      String string0 = range0.toString(range_CoordinateSystem0);
      assertEquals("[ -1 .. -1 ]/0B", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.89465783299428
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      long long0 = 2147483647L;
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      Long long1 = new Long(2147483647L);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      range0.forEach(consumer0);
      Object object0 = new Object();
      range0.equals(object0);
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("3A(p,!6(QbH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.3A(p,!6(QbH
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.7920474405363453
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      range0.getLength();
      Long long0 = new Long(2147483647L);
      Object object0 = new Object();
      range0.equals(object0);
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("3A(p,!6(QbH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.3A(p,!6(QbH
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        range0.intersects((Range) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null Range used in intersection operation.
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      long long0 = 776L;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, 776L, 776L);
      range_Builder0.expandEnd(776L);
      range_Builder0.contractEnd(776L);
      range_Builder0.expandEnd(776L);
      range_Builder0.contractBegin(776L);
      String string0 = "given length %d would make range [%d - ? ] beyond max allowed end offset";
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("given length %d would make range [%d - ? ] beyond max allowed end offset");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.given length %d would make range [%d - ? ] beyond max allowed end offset
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      long long0 = (-758L);
      range_Builder0.shift((-758L));
      Range.Builder range_Builder1 = range_Builder0.expandBegin((-758L));
      range_Builder0.expandBegin((-758L));
      Range.Builder range_Builder2 = null;
      try {
        range_Builder2 = new Range.Builder(range_Builder1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      range0.toString(range_CoordinateSystem0);
      range0.split(2750L);
      // Undeclared exception!
      try { 
        range0.split(0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // max splitLength must be >= 1
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Range range0 = Range.ofLength(9223372036854775676L);
      // Undeclared exception!
      try { 
        range0.split(9223372036854775676L);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // given length -265 would make range [9223372036854775676 - ? ] beyond max allowed end offset
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem1, 0L, 668L);
      range0.split(668L);
      range0.equals(range_CoordinateSystem0);
      Range.CoordinateSystem.values();
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Range range0 = Range.of(0L);
      Range.Builder range_Builder0 = new Range.Builder(range0);
      Range.Comparators[] range_ComparatorsArray0 = Range.Comparators.values();
      assertEquals(4, range_ComparatorsArray0.length);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      range0.equals("");
      Object object0 = new Object();
      boolean boolean0 = range0.endsBefore(range0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.867922460395077
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Range range0 = Range.of((-32768L));
      Range range1 = Range.of((-32768L));
      range0.endsBefore(range1);
      Range.Comparators[] range_ComparatorsArray0 = Range.Comparators.values();
      assertEquals(4, range_ComparatorsArray0.length);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      boolean boolean0 = range0.intersects(range0);
      assertFalse(boolean0);
      assertTrue(range0.isEmpty());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.967867468534036
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Range range0 = Range.of((-32768L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      range0.getEnd(range_CoordinateSystem0);
      Range range1 = Range.of((-2113L));
      range0.intersects(range1);
      Range.Comparators[] range_ComparatorsArray0 = Range.Comparators.values();
      assertEquals(4, range_ComparatorsArray0.length);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.2905023549825994
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 32767L, 9223372036854775784L);
      Long long0 = new Long(32767L);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range1 = Range.of(range_CoordinateSystem1, 32767L, 9223372036854775784L);
      range1.getEnd();
      range0.complement(range1);
      range0.equals(range1);
      range1.equals(range_CoordinateSystem1);
      range0.equals(range_CoordinateSystem0);
      Range.CoordinateSystem.values();
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf(".}-L'1V0YQvLd");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem..}-L'1V0YQvLd
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.7920474405363453
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      LinkedList<Range> linkedList0 = new LinkedList<Range>();
      range0.complementFrom(linkedList0);
      Long long0 = new Long(2147483647L);
      Object object0 = new Object();
      range0.equals(object0);
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("3A(p,!6(QbH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.3A(p,!6(QbH
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      range0.toString(range_CoordinateSystem0);
      List<Range> list0 = range0.split(2724L);
      range0.complementFrom(list0);
      String string0 = "";
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("bitset can not be null");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.bitset can not be null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.8351341733487994
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Object object0 = new Object();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-1706L), (-1706L));
      Integer integer0 = new Integer(32);
      range0.equals(integer0);
      range0.equals(range_CoordinateSystem0);
      Object object1 = new Object();
      range0.equals(object1);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("LONGEST_TO_SHORTEST", range_CoordinateSystem1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse LONGEST_TO_SHORTEST into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.867922460395077
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Range range0 = Range.of((-32768L));
      Range range1 = Range.of((-1762L));
      range0.startsBefore(range1);
      Range.Comparators.values();
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.867922460395077
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Range range0 = Range.of((-32768L));
      Range.Comparators.values();
      boolean boolean0 = range0.equals((Object) null);
      assertFalse(boolean0);
      
      long long0 = range0.getEnd();
      assertEquals((-32768L), long0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-32768L), 4294967295L);
      range0.getEnd();
      long long0 = range0.getEnd();
      assertFalse(range0.isEmpty());
      assertEquals(4294967294L, long0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.9172450519893096
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-169L), 32769L);
      Object object0 = new Object();
      Object object1 = new Object();
      Range range1 = Range.of(range_CoordinateSystem0, (-392L), 32769L);
      Long long0 = new Long((-169L));
      boolean boolean0 = range0.equals(range1);
      assertFalse(boolean0);
      
      Range.Comparators.values();
      Range.CoordinateSystem.values();
      long long1 = range1.getEnd();
      assertEquals(32769L, long1);
      
      range0.equals(long0);
      long long2 = range0.getBegin();
      assertEquals((-169L), long2);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.767923626502885
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Range range0 = Range.ofLength(4294967285L);
      Object object0 = new Object();
      range0.equals(object0);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("xO8K>1@=yv/oP$}{h7");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.xO8K>1@=yv/oP$}{h7
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Range range0 = Range.of(2880L);
      boolean boolean0 = range0.equals(range0);
      assertTrue(boolean0);
      
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      String string0 = range0.toString(range_CoordinateSystem1);
      assertEquals("[ 2881 .. 2881 ]/RB", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.7810370800861843
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Range range0 = Range.of(1846L);
      Object object0 = new Object();
      range0.equals(object0);
      range0.equals(object0);
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("T#LC,+ 9py)pu7<vT");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.T#LC,+ 9py)pu7<vT
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.8097834780040483
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Range range0 = Range.of((-1L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      String string0 = range0.toString(range_CoordinateSystem0);
      assertEquals("[ -1 .. -1 ]/0B", string0);
      
      boolean boolean0 = range0.equals("[ -1 .. -1 ]/0B");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      range0.isSubRangeOf(range0);
      Range.Comparators[] range_ComparatorsArray0 = Range.Comparators.values();
      assertEquals(4, range_ComparatorsArray0.length);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.0795451398092477
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 624L, 624L);
      Range range1 = Range.of(624L);
      range1.isSubRangeOf(range0);
      range1.endsBefore(range0);
      range0.equals(range1);
      Range.CoordinateSystem.values();
      Range.Comparators.values();
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Range range0 = Range.ofLength(624L);
      range0.equals("invalid startOffset %d: file is only %d bytes");
      assertTrue(range0.isEmpty());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.8754478444593765
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 65535L, 2147483647L);
      Object object0 = new Object();
      Object object1 = new Object();
      range0.equals(object1);
      long long0 = range0.getEnd();
      assertEquals(2147483646L, long0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Range range0 = Range.of(3426L);
      Long long0 = new Long((-1913L));
      Long.compareUnsigned(0L, 32767L);
      Long.max((-1), (-1));
      Object object0 = new Object();
      Integer integer0 = new Integer((-1420));
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Range range1 = Range.of(32767L);
      List<Range> list0 = range0.complement(range1);
      assertFalse(range1.isEmpty());
      assertTrue(list0.contains(range0));
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Range range0 = Range.of(2858L);
      Range range1 = Range.of(1889L);
      range0.intersects(range1);
      range0.getEnd();
      Range.CoordinateSystem.values();
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.7920474405363453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      range0.getBegin(range_CoordinateSystem0);
      Long long0 = new Long(2147483647L);
      Object object0 = new Object();
      range0.equals(object0);
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("3A(p,!6(QbH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.3A(p,!6(QbH
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 6116L, 2147483647L);
      range0.getLength();
      range0.equals((Object) null);
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Range range0 = Range.ofLength(163L);
      Range range1 = Range.ofLength(2080L);
      boolean boolean0 = range1.equals(range0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      // Undeclared exception!
      try { 
        range0.startsBefore((Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null Range used in range comparison operation.
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Range range0 = Range.of((-9223372036854775808L));
      long long0 = range0.getBegin();
      assertEquals((-9223372036854775808L), long0);
      
      Object object0 = new Object();
      boolean boolean0 = range0.equals(object0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      Long long0 = new Long(2147483647L);
      Object object0 = new Object();
      range0.toString();
      // Undeclared exception!
      try { 
        Range.parseRange("[ 2147483647 .. 2147483646 ]/0B", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = Range.of(0L);
      Range range2 = range1.intersection(range0);
      assertTrue(range2.isEmpty());
      
      long long0 = range1.getBegin();
      assertFalse(range1.isEmpty());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.867025459818853
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Range range0 = Range.ofLength(9223372036854775664L);
      Consumer<Long> consumer0 = (Consumer<Long>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      range0.forEach(consumer0);
      Range range1 = Range.ofLength(9223372036854775807L);
      range0.equals(range1);
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("N$x{896_>3l%e3^");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.N$x{896_>3l%e3^
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Object object0 = new Object();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-1716L), (-1716L));
      Long long0 = new Long((-1716L));
      Object object1 = new Object();
      boolean boolean0 = range0.equals((Object) null);
      assertTrue(range0.isEmpty());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.2210325327761837
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Range range0 = Range.of(2147483647L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      range0.intersects(range1);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range2 = Range.of(range_CoordinateSystem1, 2147483647L, 2147483647L);
      range2.getLength();
      range0.equals(range2);
      range2.equals(range_CoordinateSystem1);
      String string0 = "";
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.737140718477016
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      range0.equals((Object) null);
      Long long0 = new Long(2147483647L);
      Object object0 = new Object();
      range0.equals(object0);
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("3A(p,!6(QbH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.3A(p,!6(QbH
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Range range0 = Range.ofLength(4294967295L);
      boolean boolean0 = range0.equals((Object) null);
      assertFalse(boolean0);
      
      Range range1 = Range.ofLength(4294965247L);
      assertFalse(range1.isEmpty());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.7598774510573802
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem1, 624L, 624L);
      range0.equals(range_CoordinateSystem0);
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      Long.getLong("Qj7 Zw");
      range0.equals((Object) null);
      Range.CoordinateSystem[] range_CoordinateSystemArray1 = Range.CoordinateSystem.values();
      assertFalse(range_CoordinateSystemArray1.equals((Object)range_CoordinateSystemArray0));
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Range range0 = Range.ofLength(255L);
      Object object0 = new Object();
      boolean boolean0 = range0.equals((Object) null);
      assertFalse(range0.isEmpty());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Range range0 = Range.of((-2147483648L));
      range0.equals((Object) null);
      range0.equals((Object) null);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("DfD@+s??j]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.DfD@+s??j]
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Range range0 = Range.ofLength(1L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      String string0 = range0.toString(range_CoordinateSystem0);
      assertEquals("[ 0 .. 1 ]/SB", string0);
      
      range0.equals(range0);
      long long0 = range0.getEnd();
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Range range0 = Range.of(2433L);
      boolean boolean0 = range0.equals((Object) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Range range0 = Range.of(2880L);
      Range range1 = Range.of(1846L);
      boolean boolean0 = range1.isSubRangeOf(range0);
      assertFalse(boolean0);
      
      range0.getBegin();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      long long0 = range0.getEnd();
      assertEquals(2880L, long0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.7543317035592536
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      // Undeclared exception!
      try { 
        range0.isSubRangeOf((Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // range can not be null
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      boolean boolean0 = range0.equals("");
      assertFalse(boolean0);
      
      boolean boolean1 = range0.equals((Object) null);
      assertTrue(range0.isEmpty());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Range range0 = Range.of(4294967295L);
      long long0 = new Long(4294967295L);
      long long1 = new Long(4294967295L);
      Object object0 = new Object();
      boolean boolean0 = range0.equals((Object) null);
      assertFalse(range0.isEmpty());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2442L, 9223372036854775716L);
      Long long0 = new Long(2442L);
      Object object0 = new Object();
      range0.equals((Object) null);
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.867922460395077
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Range range0 = Range.of((-32768L));
      Range.Comparators.values();
      Range.CoordinateSystem.values();
      Range range1 = Range.of((-32768L));
      boolean boolean0 = range0.equals(range1);
      assertTrue(boolean0);
      assertFalse(range1.isEmpty());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Range range0 = Range.of(2147483647L);
      boolean boolean0 = range0.equals(range0);
      assertFalse(range0.isEmpty());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Range range0 = Range.of((-9223372036854775800L));
      Object object0 = new Object();
      boolean boolean0 = range0.equals((Object) null);
      assertFalse(boolean0);
      
      long long0 = range0.getEnd();
      assertEquals((-9223372036854775800L), long0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.8097834780040483
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Range range0 = Range.of((-1L));
      boolean boolean0 = range0.equals((Object) null);
      assertFalse(boolean0);
      
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      String string0 = range0.toString(range_CoordinateSystem0);
      assertEquals("[ -1 .. -1 ]/0B", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.0107525892460214
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 32767L, 9223372036854775791L);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Range range1 = Range.of(range_CoordinateSystem0, 985L, 9223372036854775791L);
      boolean boolean0 = range0.equals(range1);
      assertFalse(boolean0);
      
      range0.iterator();
      LinkedList<Range> linkedList0 = new LinkedList<Range>();
      range1.complementFrom(linkedList0);
      Object object3 = new Object();
      boolean boolean1 = range0.equals(object3);
      Range.CoordinateSystem.values();
      boolean boolean2 = range0.endsBefore(range1);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Range range0 = Range.of(9223372036854775791L);
      range0.equals((Object) null);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("r");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.r
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      // Undeclared exception!
      try { 
        range0.endsBefore((Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null Range used in range comparison operation.
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = Range.ofLength(0L);
      boolean boolean0 = range1.equals(range0);
      assertTrue(boolean0);
      assertSame(range1, range0);
      assertTrue(range1.isEmpty());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Range range0 = Range.ofLength(1353L);
      range0.getBegin();
      // Undeclared exception!
      try { 
        range0.getBegin((Range.CoordinateSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // CoordinateSystem can not be null
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.8767636555119314
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Object object0 = new Object();
      Range range0 = Range.of(range_CoordinateSystem0, (-535L), (-535L));
      Range range1 = Range.of(range_CoordinateSystem0, (-644L), (-535L));
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range2 = Range.of(range_CoordinateSystem1, (-535L), 1660L);
      boolean boolean0 = range1.equals(range0);
      assertFalse(boolean0);
      
      Range.CoordinateSystem.values();
      Range.CoordinateSystem.values();
      Long long0 = new Long(1366L);
      range2.equals(long0);
      long long1 = range0.getEnd();
      assertEquals((-535L), long1);
      
      boolean boolean1 = range2.equals(range0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Range range0 = Range.of((-1L));
      Range range1 = Range.of((-1L));
      range0.equals(range1);
      range0.getBegin();
      Range.Comparators[] range_ComparatorsArray0 = Range.Comparators.values();
      assertEquals(4, range_ComparatorsArray0.length);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Range range0 = Range.ofLength(9223372036854775676L);
      boolean boolean0 = range0.equals((Object) null);
      assertFalse(range0.isEmpty());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Object object0 = new Object();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-1706L), (-1706L));
      Integer integer0 = new Integer(2132570567);
      range0.equals(range0);
      range0.equals(range_CoordinateSystem0);
      Object object1 = new Object();
      boolean boolean0 = range0.equals(object0);
      assertFalse(boolean0);
      assertTrue(range0.isEmpty());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.961733480018979
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Range range0 = Range.ofLength(9223372036854775676L);
      Range range1 = Range.of(255L, 9223372036854775807L);
      boolean boolean0 = range0.equals(range1);
      assertFalse(range1.equals((Object)range0));
      assertFalse(boolean0);
      
      long long0 = range0.getBegin();
      assertFalse(range0.isEmpty());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483646L, 9223372036854775767L);
      Object object0 = new Object();
      boolean boolean0 = range0.equals((Object) null);
      assertFalse(boolean0);
      
      long long0 = range0.getBegin();
      assertEquals(2147483646L, long0);
      assertFalse(range0.isEmpty());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Range range0 = Range.of((-2147483648L));
      range0.equals("r");
      Range range1 = Range.of((-2147483648L));
      range1.equals(range0);
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Range range0 = Range.ofLength(4294967267L);
      range0.equals(range0);
      Range range1 = Range.ofLength(4294965247L);
      assertNotSame(range1, range0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483646L, 9223372036854775767L);
      Object object0 = new Object();
      Object object1 = new Object();
      range0.equals(range_CoordinateSystem0);
      range0.equals(range0);
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Range.Builder range_Builder0 = null;
      try {
        range_Builder0 = new Range.Builder((Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // range can not be null
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.9888752824463305
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Range.ofLength(2147483647L);
      Range range0 = Range.ofLength(2147483647L);
      Object object0 = new Object();
      Range range1 = Range.of(127L, 2147483647L);
      range1.getBegin();
      Object object1 = new Object();
      range1.equals(range0);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("7[R0");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.7[R0
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 65535L, 2147483647L);
      Object object0 = new Object();
      Object object1 = new Object();
      range0.equals(range0);
      long long0 = range0.getEnd();
      assertFalse(range0.isEmpty());
      assertEquals(2147483646L, long0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.5263605246161633
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      LinkedList<Range> linkedList0 = new LinkedList<Range>();
      linkedList0.add(range0);
      range0.getBegin();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      linkedList0.add(range0);
      range0.getEnd(range_CoordinateSystem1);
      range0.complementFrom(linkedList0);
      Long long0 = new Long(2147483647L);
      Object object0 = new Object();
      Range.CoordinateSystem range_CoordinateSystem2 = Range.CoordinateSystem.SPACE_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("", range_CoordinateSystem2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse  into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Range.parseRange("D?<:6-8nb");
      Object object0 = new Object();
      Range.CoordinateSystem.values();
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("3A(p,!6*QbH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.3A(p,!6*QbH
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Range range0 = Range.of(624L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range.of(range_CoordinateSystem0, 288L, 1779L);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range1 = Range.of(range_CoordinateSystem1, 624L, 32767L);
      range0.equals(range1);
      Long long0 = Long.valueOf(1779L);
      range0.equals(long0);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.9714497055990803
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Range range0 = Range.of(1L);
      long long0 = range0.getLength();
      assertEquals(1L, long0);
      
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 1L, 1L);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      String string0 = range1.toString(range_CoordinateSystem1);
      assertEquals("[ 0 .. 1 ]/SB", string0);
      
      boolean boolean0 = range1.equals(range0);
      assertFalse(boolean0);
      
      long long1 = range0.getEnd();
      assertEquals(1L, long1);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.006300859293581
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Range range0 = Range.of((-128L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range.of(range_CoordinateSystem0, (-128L), 69L);
      Range range1 = Range.of(range_CoordinateSystem0, (-128L), 69L);
      range0.equals(range1);
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.315693973247137
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Range range0 = Range.of((-9223372036854775800L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, (-9223372036854775800L), (-9223372036854775800L));
      List<Range> list0 = range1.complement(range0);
      assertFalse(list0.isEmpty());
      
      range1.equals(range0);
      range1.getEnd();
      boolean boolean0 = range0.startsBefore(range1);
      assertFalse(boolean0);
      
      range1.getEnd();
      assertTrue(range1.equals((Object)range0));
      
      long long0 = range0.getEnd();
      assertEquals((-9223372036854775800L), long0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.968952666853713
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Range range0 = Range.of(9223372036854775716L);
      range0.toString();
      Long long0 = new Long(9223372036854775716L);
      range0.equals("");
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 9223372036854775716L, 9223372036854775716L);
      range0.equals(range1);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("+0s");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.+0s
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      Long long0 = new Long(2147483647L);
      Range range1 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      range0.equals(range1);
      assertTrue(range1.isEmpty());
      assertTrue(range0.isEmpty());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Range range0 = Range.of((-2147483648L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, (-2147483648L), 1325L);
      range1.equals(range0);
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Range range0 = Range.of((-1L));
      // Undeclared exception!
      try { 
        range0.toString((Range.CoordinateSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // coordinateSystem can not be null
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Range range0 = Range.of((-9223372036854775808L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, (-9223372036854775808L), (-9223372036854775808L));
      range1.equals(range0);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("yhnzZ(7CL/F$+Q:`P");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.yhnzZ(7CL/F$+Q:`P
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.145394324120462
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2147483646L, 9223372036854775767L);
      Object object0 = new Object();
      Object object1 = new Object();
      range0.equals(range_CoordinateSystem0);
      Object object2 = new Object();
      Object object3 = new Object();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      Range.parseRange("gE%Q@OH/1,03[wp&", range_CoordinateSystem1);
      range0.equals(object3);
      range0.getEnd();
      Range.CoordinateSystem.values();
      String string0 = null;
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 32767L, 9223372036854775784L);
      Long long0 = new Long(9223372036854775784L);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      Range range1 = Range.of(range_CoordinateSystem1, 32767L, 9223372036854775784L);
      range0.equals(range1);
      range1.startsBefore(range0);
      range0.equals(range_CoordinateSystem0);
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range.of(4294970136L);
      Range range0 = Range.of(range_CoordinateSystem0, 4294970136L, 9223372036854775716L);
      range0.equals((Object) null);
      range0.equals(range_CoordinateSystem0);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("eeZ]$O |_onY&M");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.eeZ]$O |_onY&M
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Range range0 = Range.of((-128L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      // Undeclared exception!
      try { 
        range0.getEnd((Range.CoordinateSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // CoordinateSystem can not be null
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 624L, 624L);
      Range range1 = Range.of(range_CoordinateSystem0, 624L, 624L);
      range0.equals(range1);
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-172L), 2147483661L);
      Object object0 = new Object();
      Range range1 = Range.of(range_CoordinateSystem0, (-392L), 2147483661L);
      range1.equals(range0);
      range0.getEnd();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("LONGE(T_TO_SHORTEST", range_CoordinateSystem1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse LONGE(T_TO_SHORTEST into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Range range0 = Range.of(9223372036854775184L);
      Long long0 = Long.getLong("Qy2>\"q/Nuj&", (-1946L));
      range0.equals(long0);
      Range range1 = Range.of(9223372036854775767L);
      range1.equals(range0);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("Qy2>\"q/Nuj&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.Qy2>\"q/Nuj&
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Range range0 = Range.of(2147483647L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      range0.equals(range1);
      range1.equals(range_CoordinateSystem0);
      Range range2 = Range.of(range_CoordinateSystem0, 2147483647L, 4294967295L);
      range2.equals(range1);
      range1.getEnd();
      Range.CoordinateSystem.values();
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }
}
