/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 15:28:34 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(0);
      Player player1 = new Player(0);
      player0.setJoinOK(player1, false);
      Player player2 = new Player((short)4919);
      float float0 = player2.getZ();
      assertEquals("0.0.0.0", player2.getIP());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("Player4919", player2.toString());
      assertEquals(0, player2.getPictureId());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertFalse(player2.isDead());
      assertEquals(1, player2.getStrength());
      assertTrue(player2.isConnected());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 605);
      byteArrayInputStream0.reset();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      Party party0 = player0.head;
      player0.prev = null;
      boolean boolean1 = player0.isDead();
      assertTrue(boolean1 == boolean0);
      
      float float0 = player0.getZ();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(25);
      assertEquals(25.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(0, "", "", (-7));
      long long0 = player0.getTimeOfDeath();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals((-7), player0.getPictureId());
      assertEquals(0L, long0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(2195);
      Player player1 = new Player(2195);
      player1.setConnected(false);
      assertFalse(player1.isConnected());
      
      Player player2 = new Player((short)4919);
      boolean boolean0 = player2.isJoinOK(player0, true);
      assertTrue(player2.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(0);
      player0.getX();
      Party party0 = null;
      player0.add((Party) null);
      player0.next = null;
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0);
      Player player1 = new Player(0);
      boolean boolean0 = false;
      player0.reset(false);
      player0.remove(player1);
      player1.remove(player0);
      player1.pack();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // Player.unpack(): *** WARNING *** [IO] failed to unpack data: 
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(0, "Fqv\"pR", (-503));
      player0.setMoney(0);
      System.setCurrentTimeMillis((-104));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(2122);
      player0.setZ(2122);
      player0.setZ(2122);
      player0.getPictureId();
      boolean boolean0 = player0.isConnected();
      assertEquals(2122.0F, player0.getZ(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(1, ".*[.]class$", "state.Player$JoinInfo", 0, 947);
      player0.getName();
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(".*[.]class$", player0.getIP());
      assertEquals(947, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(2195);
      player0.setJoinOK(player0, true);
      player0.setJoinOK(player0, true);
      player0.isConnected();
      System.setCurrentTimeMillis((-1122L));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(2195);
      player0.reset(true);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-130), ")1:iNl[7p&Tw0+qgI7,", (-130));
      Player player1 = null;
      player0.setX(0.0F);
      player0.setX(10.0F);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        dataInputStream0.markSupported();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterInputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = ":G}3BZi{zm^";
      int int0 = 173;
      Player player0 = new Player((-1294), ":G}3BZi{zm^", 173);
      player0.getSubparty();
      player0.gangStrength();
      player0.getZ();
      player0.type();
      player0.getMoney();
      player0.setDead(1866L, false);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(2195);
      Player player1 = new Player((short)4919);
      Player player2 = new Player(207);
      player2.setDead();
      assertEquals(1392409281320L, player2.getTimeOfDeath());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(0, "state.Player", (-262));
      float float0 = player0.getY();
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-262), player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      player0.reset(false);
      player0.reset(true);
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(0, ">~$OhkItid9", 0);
      player0.getStrength();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(2195);
      player0.id = (-2244);
      player0.setJoinOK(player0, true);
      player0.setJoinOK(player0, true);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      player0.isDead();
      Player player1 = new Player(0, ">&l+l", (-1143));
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(60, player0.getId());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      player0.add((Party) null);
      player0.boss = null;
      player0.setZ((-971.5191F));
      player0.toString();
      player0.getY();
      player0.setDead(1L);
      player0.setX(3044.2207F);
      boolean boolean0 = player0.isDead();
      assertEquals(3044.2207F, player0.getX(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(2195);
      player0.setJoinOK(player0, true);
      player0.setJoinOK(player0, true);
      player0.isJoinOK(player0, true);
      System.setCurrentTimeMillis(2195);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(2195);
      Player player1 = new Player(2195);
      player1.setJoinOK(player0, true);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0, player1.getPictureId());
      assertFalse(player1.isDead());
      assertFalse(boolean0);
      assertEquals("Player2195", player1.toString());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
  }
}
