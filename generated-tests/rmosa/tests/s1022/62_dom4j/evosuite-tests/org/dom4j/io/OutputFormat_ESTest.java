/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 15:38:38 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "-xhtmlpgugyS:";
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('V');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (V)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "aNXG-a;NJ:ziu].;j");
      outputFormat0.setOmitEncoding(false);
      String string0 = outputFormat0.getLineSeparator();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", string0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("", outputFormat0.getIndent());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isNewlines());
      assertEquals("aNXG-a;NJ:ziu].;j", outputFormat0.getEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertFalse(outputFormat0.isOmitEncoding());
      
      outputFormat0.setOmitEncoding(true);
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("scB~}", false);
      outputFormat0.setPadText(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "scB~}";
      stringArray0[1] = "scB~}";
      stringArray0[2] = "scB~}";
      stringArray0[3] = "scB~}";
      stringArray0[4] = "scB~}";
      stringArray0[5] = "scB~}";
      stringArray0[6] = "scB~}";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 5190);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2592004731479975
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewlines(true);
      String[] stringArray0 = new String[24];
      stringArray0[1] = "s?&!TP b$~'vL";
      stringArray0[7] = "-trimText";
      String[] stringArray1 = new String[5];
      stringArray1[1] = "s?&!TP b$~'vL";
      stringArray1[2] = "s?&!TP b$~'vL";
      outputFormat0.setPadText(true);
      stringArray1[3] = "-trimText";
      stringArray1[4] = "s?&!TP b$~'vL";
      outputFormat0.parseOptions(stringArray1, 1);
      String[] stringArray2 = new String[3];
      stringArray2[0] = "s?&!TP b$~'vL";
      stringArray2[1] = "-trimText";
      stringArray2[2] = "s?&!TP b$~'vL";
      outputFormat0.parseOptions(stringArray2, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-6607));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -6607
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize(0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "CX(2ACsOaO9";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "CX(2ACsOaO9";
      stringArray0[3] = "CX(2ACsOaO9";
      stringArray0[3] = "CX(2ACsOaO9";
      stringArray0[5] = "CX(2ACsOaO9";
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-3658));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3658
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat("", true);
      String[] stringArray0 = new String[8];
      outputFormat0.parseOptions(stringArray0, 2290);
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      outputFormat0.setIndentSize(3783);
      outputFormat0.parseOptions(stringArray0, 1177);
      outputFormat0.parseOptions(stringArray0, 1177);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = null;
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty-xhmls?&!P bvL");
      outputFormat0.setNewLineAfterDeclaration(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("2", false, "2");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isTrimText();
      outputFormat0.setLineSeparator("2");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setTrimText(true);
      assertEquals("2", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = " ";
      OutputFormat outputFormat0 = new OutputFormat(" ");
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      outputFormat0.parseOptions(stringArray0, 418);
      outputFormat0.setNewLineAfterNTags(418);
      outputFormat0.parseOptions(stringArray0, 5032);
      int int0 = 760;
      outputFormat0.parseOptions(stringArray0, 760);
      outputFormat0.parseOptions(stringArray0, 1679);
      int int1 = (-1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-xhtmlpgugyS:";
      stringArray0[1] = "7^H~WG[oWY";
      stringArray0[2] = "-xhtmlpgugyS:";
      stringArray0[3] = "-xhtmlpgugyS:";
      stringArray0[4] = "7^H~WG[oWY";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals(1, int0);
      
      int int1 = outputFormat0.parseOptions(stringArray0, 2652);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals(2652, int1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("5Mf}`SWaL ?", false);
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, int0);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("5Mf}`SWaL ?", outputFormat0.getIndent());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5585617635055233
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewlines(true);
      String[] stringArray0 = new String[24];
      stringArray0[0] = "-padText";
      stringArray0[1] = "s?&!TP b$~'vL";
      stringArray0[2] = "-padText";
      stringArray0[3] = "-padText";
      stringArray0[4] = "-padText";
      stringArray0[5] = "-padText";
      stringArray0[6] = "-padText";
      stringArray0[7] = "-trimText";
      stringArray0[8] = "-padText";
      outputFormat0.parseOptions(stringArray0, 1);
      boolean boolean0 = outputFormat0.isXHTML();
      assertEquals("  ", outputFormat0.getIndent());
      assertFalse(boolean0);
      
      outputFormat0.setIndent(false);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "-padText";
      stringArray1[1] = "-padText";
      stringArray1[2] = "-padText";
      int int0 = outputFormat0.parseOptions(stringArray1, 1);
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isPadText());
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(3, int0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "%";
      stringArray0[3] = "%";
      stringArray0[6] = "%";
      int int0 = outputFormat0.parseOptions(stringArray0, 2595);
      assertEquals(2595, int0);
      
      String string0 = outputFormat0.getIndent();
      assertEquals("  ", string0);
      
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(outputFormat0.isPadText());
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(boolean0);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(" ");
      String[] stringArray0 = null;
      outputFormat0.setIndent((String) null);
      outputFormat0.setLineSeparator("3E,/=p9BJyZm^`sb");
      int int0 = 39;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 39);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "M:% (";
      OutputFormat outputFormat0 = new OutputFormat("M:% (", false);
      String string1 = "-xtmlpggyS:";
      String string2 = null;
      outputFormat0.setEncoding((String) null);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('@');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (@)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("CX(2ACsOaO9", true, "CX(2ACsOaO9");
      outputFormat0.setNewlines(true);
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setExpandEmptyElements(false);
      String[] stringArray0 = new String[0];
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      int int0 = 1;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "aNXG-a;NJ:zi";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setEncoding(",");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-384));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -384
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("lr/4_u(\"X(W\"^MH[n#", true, "5cp4sQ\"{sBzZ}cv]{");
      outputFormat0.setEncoding("5cp4sQ\"{sBzZ}cv]{");
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewlines(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getEncoding();
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setIndent("");
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setEncoding("");
      outputFormat0.setXHTML(true);
      String string1 = OutputFormat.STANDARD_INDENT;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "  ";
      stringArray0[2] = "  ";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertTrue(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isTrimText();
      outputFormat0.isNewlines();
      outputFormat0.setIndent("/ 5Q+|)bH]z`4");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setPadText(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('W');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (W)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(" ");
      String[] stringArray0 = null;
      outputFormat0.setIndent("3E,/=p9BJyZm^`sb");
      int int0 = 39;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 39);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags(2590);
      outputFormat0.setEncoding("");
      outputFormat0.setLineSeparator("r74Z$0FG=Gv%Ed?Hk");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setLineSeparator("w~D++5le4+\"cOx'KF$");
      outputFormat0.setPadText(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      assertEquals("w~D++5le4+\"cOx'KF$", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[5];
      outputFormat0.setPadText(true);
      outputFormat0.setNewlines(false);
      stringArray0[0] = "-xhtmlpg!ugy";
      outputFormat0.setPadText(true);
      String string0 = "(:u1#";
      String string1 = "";
      outputFormat0.setIndent("");
      stringArray0[1] = "(:u1#";
      String string2 = "";
      outputFormat0.setEncoding("");
      outputFormat0.setIndent("-xhtmlpg!ugy");
      stringArray0[2] = "-omitEncoding";
      int int0 = 385;
      outputFormat0.parseOptions(stringArray0, 385);
      stringArray0[3] = "-expandEmptyx8dKlvK*ok)";
      String string3 = "-expandEmptyr3'XbD17fZ";
      stringArray0[4] = "-expandEmptyr3'XbD17fZ";
      int int1 = (-1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(",Oi]T8zEt&", false, ",Oi]T8zEt&");
      outputFormat0.setEncoding(",Oi]T8zEt&");
      String[] stringArray0 = new String[2];
      stringArray0[0] = ",Oi]T8zEt&";
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.parseOptions(stringArray0, 342);
      stringArray0[1] = ",Oi]T8zEt&";
      outputFormat0.setXHTML(true);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      boolean boolean0 = false;
      outputFormat1.setTrimText(false);
      outputFormat1.setXHTML(false);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setXHTML(true);
      outputFormat2.setOmitEncoding(true);
      outputFormat2.setOmitEncoding(true);
      outputFormat0.setLineSeparator("`{");
      outputFormat0.setNewlines(false);
      outputFormat0.isExpandEmptyElements();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      int int0 = 0;
      outputFormat3.setIndentSize(0);
      outputFormat0.isPadText();
      String[] stringArray0 = new String[0];
      int int1 = (-1230);
      // Undeclared exception!
      try { 
        outputFormat3.parseOptions(stringArray0, (-1230));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1230
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("M:% (", false);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 5160);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("M:% (", false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setEncoding("M:% (");
      outputFormat0.setEncoding("cG2(");
      outputFormat0.setXHTML(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setPadText(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "-xtmlpggyS:";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "-xtmlpggyS:";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setPadText(false);
      outputFormat0.parseOptions(stringArray0, 0);
      int int0 = outputFormat0.parseOptions(stringArray0, 39);
      assertEquals("-xtmlpggyS:", outputFormat0.getEncoding());
      assertEquals(39, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Xj=}FK";
      stringArray0[1] = "-indent";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "b1Wc";
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty<KAkV;1q0O*=/):irJ", true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setAttributeQuoteCharacter('\'');
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('I');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (I)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("?M:% (", false);
      outputFormat0.setEncoding("");
      outputFormat0.setEncoding("-suppressDeclaration");
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(true);
      OutputFormat outputFormat1 = new OutputFormat("");
      outputFormat1.setPadText(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-suppressDeclaration";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "";
      stringArray0[3] = "-suppressDeclaration";
      stringArray0[4] = "";
      stringArray0[5] = "?M:% (";
      stringArray0[6] = "-xtmlpggyS:";
      stringArray0[7] = "-xtmlpggyS:";
      stringArray0[8] = "-xtmlpggyS:";
      outputFormat0.parseOptions(stringArray0, 1);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-708));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -708
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "7^H~WG[oWY";
      stringArray0[1] = "-xhtmlpgugyS:";
      stringArray0[2] = "-xhtmlpgugyS:";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "S=4$(F,dr*(Q[#8;";
      stringArray0[2] = "-expandEmpty r3'XbD17fZ";
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("rHcffz-{,EuY7@");
      outputFormat0.setEncoding("-xhtmlpg!ugyS:");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("rHcffz-{,EuY7@");
      outputFormat0.setXHTML(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setPadText(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "rHcffz-{,EuY7@";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "M:%b(>^Vp";
      stringArray0[3] = "M:%b(>^Vp";
      stringArray0[4] = "M:%b(>^Vp";
      stringArray0[5] = "-xhtmlpg!ugyS:";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("rHcffz-{,EuY7@", outputFormat0.getEncoding());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      assertFalse(outputFormat0.isOmitEncoding());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-xtmlp";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "2O8JX";
      stringArray0[3] = "Ka4jn";
      stringArray0[4] = "=L#M7IZpP";
      stringArray0[5] = "-xhtml";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isOmitEncoding());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("M:% (", false);
      OutputFormat.createCompactFormat();
      outputFormat0.setEncoding("K~*%J952E[u8");
      OutputFormat outputFormat1 = new OutputFormat("bv\"nx|MJ,>7%");
      outputFormat1.setEncoding("-encoding");
      outputFormat0.setEncoding("K~*%J952E[u8");
      OutputFormat outputFormat2 = new OutputFormat("-indentSize", true);
      outputFormat2.setXHTML(false);
      outputFormat2.setSuppressDeclaration(false);
      outputFormat0.setPadText(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "M:% (";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "-indentSize";
      stringArray0[3] = "bv\"nx|MJ,>7%";
      stringArray0[4] = "bv\"nx|MJ,>7%";
      stringArray0[5] = "-xtmlpggyS:";
      stringArray0[6] = "bv\"nx|MJ,>7%";
      stringArray0[7] = "-encoding";
      outputFormat1.parseOptions(stringArray0, 1693);
      outputFormat2.parseOptions(stringArray0, 1693);
      OutputFormat outputFormat3 = new OutputFormat("-indentSize", false, "phv%uBv0]=2R");
      outputFormat3.parseOptions(stringArray0, 1693);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-indentSize\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
