/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 14:56:45 GMT 2018
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import accessories.plugins.time.JYearChooser;
import freemind.extensions.ExportHook;
import freemind.modes.mindmapmode.actions.FontFamilyAction;
import java.awt.AWTEventMulticaster;
import java.awt.AWTKeyStroke;
import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.HeadlessException;
import java.awt.IllegalComponentStateException;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.SystemColor;
import java.awt.color.ICC_Profile;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeListenerProxy;
import java.io.File;
import java.io.PrintWriter;
import java.sql.Time;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.Date;
import java.util.Hashtable;
import java.util.Locale;
import java.util.TreeSet;
import javax.help.FavoritesItem;
import javax.help.FavoritesNode;
import javax.help.JHelp;
import javax.help.plaf.basic.BasicHelpUI;
import javax.swing.ActionMap;
import javax.swing.DebugGraphics;
import javax.swing.Icon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JEditorPane;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JTree;
import javax.swing.KeyStroke;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.event.MenuKeyEvent;
import javax.swing.plaf.basic.BasicToolBarUI;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.plaf.multi.MultiTableUI;
import javax.swing.tree.TreePath;
import org.apache.batik.css.parser.Parser;
import org.apache.batik.ext.awt.g2d.GraphicContext;
import org.apache.batik.gvt.CanvasGraphicsNode;
import org.apache.batik.svggen.SVGGeneratorContext;
import org.apache.batik.svggen.SVGGraphics2D;
import org.apache.fop.pdf.PDFInfo;
import org.apache.fop.svg.PDFDocumentGraphics2D;
import org.apache.xalan.templates.ElemApplyImport;
import org.apache.xerces.parsers.XML11NonValidatingConfiguration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.hsqldb.jdbc.jdbcCallableStatement;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;
import org.openstreetmap.gui.jmapviewer.Tile;
import plugins.map.MapDialog;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getInheritsPopupMenu();
      jDayChooser0.isWeekOfYearVisible();
      JButton jButton0 = jDayChooser0.selectedDay;
      jDayChooser0.selectedDay = null;
      jDayChooser0.setYear(453);
      JDayChooser jDayChooser1 = new JDayChooser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser1.new DecoratorButton();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        debugGraphics0.dispose();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7743379459057977
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      ActionMap actionMap0 = new ActionMap();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      XML11NonValidatingConfiguration xML11NonValidatingConfiguration0 = new XML11NonValidatingConfiguration();
      Locale locale0 = xML11NonValidatingConfiguration0.getLocale();
      FavoritesItem favoritesItem0 = new FavoritesItem("aK+e%", "b5uD{&.ji&B:", "b5uD{&.ji&B:", "Windows", locale0);
      FavoritesNode favoritesNode0 = new FavoritesNode(favoritesItem0);
      JTree jTree0 = new JTree(favoritesNode0);
      Rectangle rectangle0 = jDayChooser0.getVisibleRect();
      jDayChooser0.getBounds(rectangle0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 1127, 0, (-3), 40, 'K');
      keyEvent0.consume();
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setEnabled(true);
      jDayChooser0.setMonth(0);
      jDayChooser0.setDay(13);
      assertEquals(13, jDayChooser0.getDay());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      int int0 = 777;
      // Undeclared exception!
      try { 
        jDayChooser0.setCalendar((Calendar) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.isDayBordersVisible();
      int int0 = 4566;
      KeyEvent keyEvent0 = null;
      try {
        keyEvent0 = new KeyEvent(jDayChooser0, 4566, 4566, 4566, 4566, 'r', 4566);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid keyLocation
         //
         verifyException("java.awt.event.KeyEvent", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getMaxDayCharacters();
      jDayChooser0.setDecorationBordersVisible(false);
      JMonthChooser jMonthChooser0 = null;
      JLabel jLabel0 = new JLabel("day", 0);
      KeyEvent keyEvent0 = null;
      try {
        keyEvent0 = new KeyEvent(jLabel0, 0, 0, 37, 37, '^', 37);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid keyLocation
         //
         verifyException("java.awt.event.KeyEvent", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getMaxSelectableDate();
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.748571835554026
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      int int0 = (-3198);
      jDayChooser0.getPropertyChangeListeners();
      jDayChooser0.getInputMap();
      jDayChooser0.day = 1;
      jDayChooser0.transferFocusDownCycle();
      JButton[] jButtonArray0 = new JButton[3];
      JDayChooser jDayChooser1 = new JDayChooser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser1.new DecoratorButton();
      jDayChooser_DecoratorButton0.getSelectedIcon();
      JButton jButton0 = new JButton("[7h:pDrYL|", (Icon) null);
      jButtonArray0[0] = jButton0;
      jDayChooser0.getSelectedDay();
      jButtonArray0[1] = null;
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton1 = jDayChooser1.new DecoratorButton();
      jButtonArray0[2] = (JButton) jDayChooser_DecoratorButton1;
      jDayChooser0.weeks = jButtonArray0;
      // Undeclared exception!
      try { 
        jDayChooser0.setMaxDayCharacters((-3198));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      MenuElement[] menuElementArray0 = new MenuElement[0];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, (-1267), (-1267), (-1267), 0, ',', menuElementArray0, menuSelectionManager0);
      KeyEvent.getExtendedKeyCodeForChar(0);
      jDayChooser0.keyReleased(menuKeyEvent0);
      JDayChooser jDayChooser1 = new JDayChooser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser1.new DecoratorButton();
      jDayChooser_DecoratorButton0.isFocusable();
      assertFalse(jDayChooser1.isDecorationBordersVisible());
      assertEquals(14, jDayChooser1.getDay());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.isDecorationBordersVisible();
      int int0 = 1735;
      KeyEvent keyEvent0 = null;
      try {
        keyEvent0 = new KeyEvent(jDayChooser0, 1735, 0L, 1735, 1735, 'l', 11);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid keyLocation
         //
         verifyException("java.awt.event.KeyEvent", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.isOpaque();
      jDayChooser0.getDayPanel();
      Date date0 = jDayChooser0.maxSelectableDate;
      jDayChooser0.getX();
      Frame frame0 = null;
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D();
      PDFDocumentGraphics2D pDFDocumentGraphics2D1 = null;
      try {
        pDFDocumentGraphics2D1 = new PDFDocumentGraphics2D(pDFDocumentGraphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.batik.ext.awt.g2d.AbstractGraphics2D", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = true;
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Date date0 = jDayChooser0.getMinSelectableDate();
      jDayChooser0.maxSelectableDate = date0;
      jDayChooser0.getComponentPopupMenu();
      boolean boolean1 = false;
      int int0 = 10152;
      Image image0 = null;
      try {
        image0 = new BufferedImage(1627, 10152, 10152);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 10152
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.683281366426669
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getPropertyChangeListeners();
      jDayChooser0.getInputMap();
      jDayChooser0.transferFocusDownCycle();
      jDayChooser0.setMaxDayCharacters((-3198));
      jDayChooser0.setDay((-3198));
      jDayChooser0.drawDays();
      BasicToolBarUI basicToolBarUI0 = new BasicToolBarUI();
      basicToolBarUI0.getFloatingColor();
      jDayChooser0.weekdayForeground = null;
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed((KeyEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7072400880413086
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JButton jButton0 = jDayChooser0.selectedDay;
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D();
      DebugGraphics debugGraphics0 = new DebugGraphics(pDFDocumentGraphics2D0, jDayChooser0);
      DebugGraphics debugGraphics1 = new DebugGraphics(pDFDocumentGraphics2D0);
      jDayChooser_DecoratorButton0.paint(debugGraphics0);
      jDayChooser0.setFocus();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser_DecoratorButton0, 1951, 1951, 1951, 6, '/');
      jDayChooser0.keyPressed(keyEvent0);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6789477095792162
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getInheritsPopupMenu();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D();
      jDayChooser0.setMonth(65536);
      int int0 = 4;
      ActionEvent actionEvent0 = new ActionEvent(jDayChooser0, (-53), "day");
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // accessories.plugins.time.JDayChooser cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setInheritsPopupMenu(true);
      jDayChooser0.removeAll();
      jDayChooser0.getDecorationBackgroundColor();
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getSundayForeground();
      KeyEvent keyEvent0 = null;
      try {
        keyEvent0 = new KeyEvent(jDayChooser0, (-5870), 0L, 551, 551, 'n', (-5870));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid keyLocation
         //
         verifyException("java.awt.event.KeyEvent", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.isDecorationBackgroundVisible();
      int int0 = 1100;
      BufferedImage bufferedImage0 = Tile.LOADING_IMAGE;
      JHelp jHelp0 = null;
      BasicHelpUI basicHelpUI0 = new BasicHelpUI((JHelp) null);
      // Undeclared exception!
      try { 
        jDayChooser0.getLocationOnScreen();
        fail("Expecting exception: IllegalComponentStateException");
      
      } catch(IllegalComponentStateException e) {
         //
         // component must be showing on the screen to determine its location
         //
         verifyException("java.awt.Component", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "day";
      stringArray0[2] = "day";
      stringArray0[3] = "day";
      stringArray0[5] = "!w2?,or{?";
      stringArray0[6] = "day";
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.611479906446705
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getPropertyChangeListeners();
      jDayChooser0.setMaxDayCharacters(2033);
      jDayChooser0.getInputMap();
      jDayChooser0.transferFocusDownCycle();
      jDayChooser0.transferFocusDownCycle();
      jDayChooser0.setMaxDayCharacters((-3198));
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay((-3198));
      jDayChooser0.drawDays();
      assertEquals(0, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = true;
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Date date0 = jDayChooser0.defaultMaxSelectableDate;
      jDayChooser0.maxSelectableDate = date0;
      int int0 = 1627;
      boolean boolean1 = false;
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 1627, false, jDayChooser0);
      focusEvent0.paramString();
      focusEvent0.paramString();
      focusEvent0.paramString();
      jDayChooser0.focusLost(focusEvent0);
      JPanel jPanel0 = jDayChooser0.getDayPanel();
      jDayChooser0.isWeekOfYearVisible();
      MultiTableUI multiTableUI0 = new MultiTableUI();
      // Undeclared exception!
      try { 
        multiTableUI0.getPreferredSize(jPanel0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7129242178517146
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getInheritsPopupMenu();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D();
      jDayChooser0.setMonth(65536);
      jDayChooser0.setMaxDayCharacters(4);
      jDayChooser0.setMonth(3516);
      System.setCurrentTimeMillis(3516);
      Color color0 = jDayChooser0.getWeekdayForeground();
      jDayChooser0.setDecorationBackgroundColor(color0);
      assertEquals(4, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, (-5870));
      jDayChooser1.focusGained(focusEvent0);
      assertFalse(jDayChooser1.isDecorationBordersVisible());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.repaint();
      jDayChooser0.setOpaque(true);
      jDayChooser0.setMaxDayCharacters(286);
      jDayChooser0.hasFocus();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 230, 418L, 1233, 286, 'E');
      jDayChooser0.keyTyped(keyEvent0);
      jdbcCallableStatement jdbcCallableStatement0 = null;
      try {
        jdbcCallableStatement0 = new jdbcCallableStatement((jdbcConnection) null, "", 966);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcPreparedStatement", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Time time0 = new Time(654L);
      jDayChooser0.setMaxSelectableDate(time0);
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.6477744711335873
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getPropertyChangeListeners();
      jDayChooser0.getInputMap();
      jDayChooser0.transferFocusDownCycle();
      jDayChooser0.setMaxDayCharacters((-3198));
      SystemColor systemColor0 = SystemColor.window;
      jDayChooser0.setSundayForeground(systemColor0);
      jDayChooser0.setDay((-3198));
      jDayChooser0.drawDays();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setInheritsPopupMenu(true);
      jDayChooser0.removeAll();
      jDayChooser0.transferFocus();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Metal");
      jDayChooser0.transferFocusDownCycle();
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("day", vetoableChangeListener0);
      jDayChooser0.setVerifyInputWhenFocusTarget(true);
      jDayChooser0.addVetoableChangeListener(vetoableChangeListenerProxy0);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay((-1));
      LocalDate localDate0 = MockLocalDate.now();
      java.sql.Date date0 = java.sql.Date.valueOf(localDate0);
      jDayChooser0.setMinSelectableDate(date0);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.7155758490664885
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getPropertyChangeListeners();
      jDayChooser0.getInputMap();
      jDayChooser0.transferFocusDownCycle();
      jDayChooser0.setMaxDayCharacters((-3198));
      JMonthChooser jMonthChooser0 = jDayChooser0.monthChooser;
      jDayChooser0.setMonthChooser((JMonthChooser) null);
      jDayChooser0.getToolTipText();
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay((-3198));
      jDayChooser0.drawDays();
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getInheritsPopupMenu();
      jDayChooser0.isWeekOfYearVisible();
      JButton jButton0 = jDayChooser0.selectedDay;
      JYearChooser jYearChooser0 = jDayChooser0.yearChooser;
      jDayChooser0.setYearChooser((JYearChooser) null);
      jDayChooser0.selectedDay = null;
      jDayChooser0.setYear(453);
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getInheritsPopupMenu();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D();
      jDayChooser0.setWeekdayForeground((Color) null);
      jDayChooser0.setMonth(65536);
      jDayChooser0.setEnabled(false);
      jDayChooser0.setDay(65536);
      assertEquals(31, jDayChooser0.getDay());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.611479906446705
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getPropertyChangeListeners();
      jDayChooser0.getInputMap();
      jDayChooser0.transferFocusDownCycle();
      jDayChooser0.setMaxDayCharacters((-3198));
      jDayChooser0.setDay((-3198));
      jDayChooser0.drawDays();
      jDayChooser0.setDay(3897);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getPropertyChangeListeners();
      jDayChooser0.setMaxSelectableDate((Date) null);
      jDayChooser0.drawDays();
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.getVisibleRect();
      jDayChooser0.transferFocusDownCycle();
      jDayChooser0.setMaxDayCharacters(0);
      jDayChooser0.drawDays();
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      PDFInfo pDFInfo0 = new PDFInfo();
      pDFInfo0.getCreationDate();
      jDayChooser0.setMinSelectableDate((Date) null);
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.setDayBordersVisible(true);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Time time0 = new Time(0L);
      jDayChooser0.setSelectableDateRange(time0, time0);
      jDayChooser0.setEnabled(false);
      jDayChooser0.updateUI();
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.710079913333388
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JMenu jMenu0 = new JMenu("day");
      jMenu0.getPopupMenu();
      JMenuItem jMenuItem0 = new JMenuItem("day", 10111);
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jDayChooser0, 10119, 10111, 540, 10111, 10111, 2, (-444), 6, false, (MenuElement[]) null, menuSelectionManager0);
      menuSelectionManager0.processMouseEvent(menuDragMouseEvent0);
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jMenu0, 619, 2, 1861, 1861, 'v', (MenuElement[]) null, menuSelectionManager0);
      jDayChooser0.keyPressed(menuKeyEvent0);
      jDayChooser0.setSelectableDateRange((Date) null, (Date) null);
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D();
      jDayChooser0.setMaxDayCharacters(1);
      assertEquals(1, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7421583343393316
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JYearChooser jYearChooser0 = new JYearChooser();
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.transferFocusBackward();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 25, 0L, 25, 28, '=');
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setFocus();
      jDayChooser0.setWeekOfYearVisible(false);
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.7205968383010655
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      boolean boolean0 = false;
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JButton jButton0 = jDayChooser0.selectedDay;
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.getVisibleRect();
      jDayChooser_DecoratorButton0.firePropertyChange("7", (byte) (-2), (byte) (-2));
      Rectangle rectangle0 = jDayChooser0.getBounds((Rectangle) null);
      rectangle0.width = 0;
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser_DecoratorButton0, (-1963), 0, 1127, 34, 'R');
      keyEvent0.paramString();
      keyEvent0.consume();
      jDayChooser0.setDay(0);
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getInheritsPopupMenu();
      jDayChooser0.isWeekOfYearVisible();
      JButton jButton0 = jDayChooser0.selectedDay;
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.selectedDay = null;
      jDayChooser0.setYear(453);
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 28, 0L, 28, 28, '=');
      jDayChooser0.setFocus();
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      
      jDayChooser0.setWeekOfYearVisible(false);
      assertFalse(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setInheritsPopupMenu(false);
      jDayChooser0.transferFocus();
      jDayChooser0.setMonth(452);
      jDayChooser0.setMaxDayCharacters(4);
      jDayChooser0.setMonth(452);
      Timestamp timestamp0 = new Timestamp(452);
      jDayChooser0.setSelectableDateRange((Date) null, timestamp0);
      assertEquals(4, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7878688604175577
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setYear(3281);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      jDayChooser0.addHierarchyBoundsListener((HierarchyBoundsListener) null);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JYearChooser jYearChooser0 = new JYearChooser();
      jDayChooser0.setYearChooser(jYearChooser0);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      Hashtable<JButton, FontFamilyAction> hashtable0 = new Hashtable<JButton, FontFamilyAction>();
      JTree jTree0 = new JTree(hashtable0);
      metalTreeUI0.isEditing(jTree0);
      locale0.getDisplayLanguage();
      FavoritesItem favoritesItem0 = new FavoritesItem("3#s xMuS`*cx[N", "b5uD{&.ji&B:", "day", "day", locale0);
      FavoritesNode favoritesNode0 = new FavoritesNode(favoritesItem0);
      JTree jTree1 = new JTree(favoritesNode0);
      metalTreeUI0.getPathBounds(jTree1, (TreePath) null);
      jDayChooser0.getBounds((Rectangle) null);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 38, 2492L, (-281), 38, '3');
      keyEvent0.paramString();
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setEnabled(false);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.keyPressed(keyEvent0);
      assertEquals(7, jDayChooser0.getDay());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      JButton jButton0 = jDayChooser0.selectedDay;
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.getVisibleRect();
      jDayChooser_DecoratorButton0.firePropertyChange("7", (byte) (-2), (byte) (-2));
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser_DecoratorButton0, 160, 0, 1127, 36, 'V');
      keyEvent0.consume();
      jDayChooser0.keyPressed(keyEvent0);
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[0];
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(36);
      GraphicContext graphicContext0 = new GraphicContext(affineTransform0);
      ExportHook exportHook0 = new ExportHook();
      // Undeclared exception!
      try { 
        exportHook0.createBufferedImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.extensions.ExportHook", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      ActionMap actionMap0 = new ActionMap();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      XML11NonValidatingConfiguration xML11NonValidatingConfiguration0 = new XML11NonValidatingConfiguration();
      jDayChooser0.getBounds();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 1127, 0, 0, 40, 'K');
      keyEvent0.consume();
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setEnabled(true);
      assertEquals(21, jDayChooser0.getDay());
      
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setEnabled(true);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setDayBordersVisible(true);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.8257830232185057
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getInheritsPopupMenu();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D();
      jDayChooser0.setMonth(65536);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 1, (-3), 31, 37, 't');
      keyEvent0.setKeyChar('4');
      keyEvent0.consume();
      jDayChooser0.keyPressed(keyEvent0);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setEnabled(false);
      jDayChooser1.doLayout();
      jDayChooser1.setMonth((-472));
      jDayChooser1.setDay(37);
      Locale locale0 = Locale.forLanguageTag("day");
      jDayChooser0.setLocale(locale0);
      jDayChooser0.setDay((-661));
      jDayChooser0.drawDays();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6789477095792162
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getInheritsPopupMenu();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D();
      jDayChooser0.setMonth(65536);
      jDayChooser0.setDay(8801);
      jDayChooser0.setMaxDayCharacters(4);
      jDayChooser0.setMonth(3516);
      System.setCurrentTimeMillis(3516);
      jDayChooser0.setEnabled(false);
      jDayChooser0.drawDays();
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JButton jButton0 = new JButton();
      jDayChooser0.selectedDay = jButton0;
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.setFocus();
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Boolean.valueOf(false);
      JButton jButton0 = new JButton("day");
      jDayChooser0.selectedDay = jButton0;
      jDayChooser0.setDay((-2164));
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.737604723385756
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      ActionMap actionMap0 = new ActionMap();
      actionMap0.getParent();
      actionMap0.setParent((ActionMap) null);
      actionMap0.getParent();
      jDayChooser0.setActionMap((ActionMap) null);
      jDayChooser0.setEnabled(true);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 35, 0L, (-2010), 35, ';');
      jDayChooser0.keyPressed(keyEvent0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getInheritsPopupMenu();
      jDayChooser0.isWeekOfYearVisible();
      JEditorPane jEditorPane0 = new JEditorPane();
      Color color0 = jEditorPane0.getSelectedTextColor();
      jDayChooser0.weekdayForeground = color0;
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 1498, 4L, 1498, 39, 'M');
      keyEvent0.consume();
      InputEvent.getModifiersExText(11);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.updateUI();
      jDayChooser0.setFocus();
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.7960477368036543
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      boolean boolean0 = false;
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getInheritsPopupMenu();
      jDayChooser0.setMonth(65537);
      jDayChooser0.setMaxDayCharacters(4);
      jDayChooser0.setMonth(3516);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 4, 0L, 65537, 33, 'L');
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.validate();
      Locale locale0 = Locale.ITALIAN;
      Calendar calendar0 = MockCalendar.getInstance(locale0);
      jDayChooser0.calendar = calendar0;
      jDayChooser0.repaint((long) (byte)48);
      jDayChooser0.setYear(453);
      jDayChooser0.drawDays();
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDecorationBordersVisible(true);
      jDayChooser0.getPropertyChangeListeners();
      jDayChooser0.getInputMap();
      jDayChooser0.setAlwaysFireDayProperty(true);
      jDayChooser0.transferFocusDownCycle();
      jDayChooser0.setMaxDayCharacters((-3198));
      jDayChooser0.setDay((-3198));
      jDayChooser0.drawDays();
      Color color0 = new Color((-3198));
      jDayChooser0.setDecorationBackgroundColor(color0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.initialized = false;
      jDayChooser0.removeNotify();
      Locale locale0 = Locale.ENGLISH;
      locale0.toLanguageTag();
      jDayChooser0.setLocale(locale0);
      jDayChooser0.updateUI();
      jDayChooser0.setDay((-36));
      jDayChooser0.setDayBordersVisible(false);
  }
}
