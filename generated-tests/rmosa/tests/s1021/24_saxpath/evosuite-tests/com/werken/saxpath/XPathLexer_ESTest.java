/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 15:13:06 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.48970870385881915
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":%S4S");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("%S4S", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5743496825843103
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5460269778469428
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!>'");
      xPathLexer0.consume();
      xPathLexer0.setXPath("");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6935746950979977
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.whitespace();
      xPathLexer0.literal();
      xPathLexer0.setXPath("./hE8");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5338561348021286
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|e[ho/\"Cs9");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("|e", token0.getTokenText());
      
      xPathLexer0.consume();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      XPathLexer xPathLexer1 = new XPathLexer("|e[ho/\"Cs9");
      xPathLexer1.or();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("|", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6253129562173195
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!>'");
      Token token0 = xPathLexer0.comma();
      assertEquals("!", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      assertNotNull(token1);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6935746950979976
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.literal();
      xPathLexer0.setXPath("./hE8");
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.div();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5305367018754199
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!>'");
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6253129562173195
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!>'");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertNotNull(token1);
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6253129562173195
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!>'");
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5859379641311363
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!>'");
      xPathLexer0.plus();
      xPathLexer0.consume((-2993));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5649340847321248
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+.an$=n.ud7yK|u");
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.consume();
      xPathLexer0.consume((-4641));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6394577155127598
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kVn");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.plus();
      Token token1 = xPathLexer0.nextToken();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6935746950979976
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.literal();
      xPathLexer0.setXPath("./hE8");
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.div();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.7025002980919945
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!>'");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5460269778469428
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!>'");
      Token token0 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6253129562173195
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!>'");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("!", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.consume(1173);
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6935746950979977
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      xPathLexer0.literal();
      xPathLexer0.setXPath("./hE8");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.7025002980919945
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!>'");
      Token token0 = xPathLexer0.equals();
      assertEquals("!", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.relationalOperator();
      assertNotNull(token1);
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6935746950979977
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.setXPath("./hE8");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.and();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3614847042350553
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N'3Y1:o'&Gs(W9=O~");
      Token token0 = xPathLexer0.dots();
      assertEquals("N", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("'3", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("Y", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("1", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      xPathLexer0.whitespace();
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7957098200302992
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g. 12");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.pipe();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@V t^#6<gY");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6001882813317665
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BE;!x=P6q^u~");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("B", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("E;", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.308670940636512
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N'3Y1:o'&Gs(W9=O~");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(27, token1.getTokenType());
      assertEquals("3Y1:o", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("s(W9=O~", token3.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6748409875152964
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+.an$=n.ud7yK|u");
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer0.and();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.6394577155127598
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BE;!x=P6q^u~");
      Token token0 = xPathLexer0.slashes();
      assertEquals("B", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.206151396845643
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O$/q[:d>5hcOBsa+(");
      xPathLexer0.setXPath("O$/q[:d>5hcOBsa+(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("O", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("/", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals("$", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('');
      assertFalse(boolean0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("");
      xPathLexer1.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("q[:d>5hcOBsa+(", token3.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.7909946878532033
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3tM!pR1&s");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4790214612582253
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4ezb Hmj/yP+'.2");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("e", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("z", token2.getTokenText());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      XPathLexer xPathLexer1 = new XPathLexer("4ezb Hmj/yP+'.2");
      xPathLexer0.or();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.div();
      Token token4 = xPathLexer1.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("mj/yP+'.2", token5.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9630491186975787
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.35PCmL{n\"9YEndR");
      xPathLexer0.identifier();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("5.35PCmL{n\"9YEndR");
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.7956797720046598
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:K-q-");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("K-q-", token2.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.2331161601966885
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("eYatN(1MYj9+11Tvl!#");
      XPathLexer xPathLexer1 = new XPathLexer("X");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer1.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("eYatN", token2.getTokenText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kH");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("kH", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yhKbU}4iU%sr3Lzs$N");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("yhKbU", token0.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5806084355305021
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer("[ (4) (c)");
      Token token1 = xPathLexer1.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      Token token2 = xPathLexer1.dollar();
      xPathLexer1.setPreviousToken(token2);
      assertEquals(26, token2.getTokenType());
      assertEquals(" ", token2.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.colon();
      assertEquals("(", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      xPathLexer0.setXPath("[ (4) (c)");
      Token token5 = xPathLexer0.nextToken();
      assertEquals("[", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      xPathLexer1.div();
      Token token6 = xPathLexer1.nextToken();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("(", token7.getTokenText());
      assertEquals(1, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals(2, token8.getTokenType());
      assertEquals(")", token8.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.451777890047819
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("IFT6a:8g&!L3");
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      XPathLexer xPathLexer1 = new XPathLexer("D/I@c[n][a*UvWGXAw2");
      XPathLexer xPathLexer2 = new XPathLexer("D/I@c[n][a*UvWGXAw2");
      Token token0 = xPathLexer2.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("D", token0.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.726557501493486
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":%S4S");
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.9378735500605621
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:K-q-");
      xPathLexer0.div();
      Token token0 = xPathLexer0.number();
      assertEquals(".", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("-", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.8570528269491162
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.number();
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer("[ (4) (c)");
      xPathLexer0.setXPath("!,2x9%{)9OCv;f!'p2");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.number();
      xPathLexer1.nextToken();
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer1.div();
      assertNull(token1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.3352059530624591
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N'3Y1:o'&Gs(W9=O~");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.pipe();
      assertEquals("N", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("3Y1:o", token1.getTokenText());
      assertEquals(27, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("&G", token2.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("W9=O~", token4.getTokenText());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.8298769405673657
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H<_|\"E");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("H", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("_", token2.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.5055682407693266
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!>'");
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("#%^GQO");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#%^GQO", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("#%^GQO", token1.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.8564548000507434
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<4/!?4y$G>kkBCCA");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("4", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("/", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("?4y$G>kkBCCA", token4.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.2777376783495364
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H<_|\"E");
      Token token0 = xPathLexer0.dots();
      assertEquals("H", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("<", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("_", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("|\"", token3.getTokenText());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("E", token4.getTokenText());
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String string0 = "BE;!x=P6q^u~";
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.plus();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.507176556517782
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",:>6LI$x7");
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.2513250567396574
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dj.");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.setXPath("!roq@}un!CTC");
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.16775544185418
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:K-q-");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(":", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("K", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals("-", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      assertEquals("q-", token4.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0236742206337959
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",:>6LI$x7");
      Token token0 = xPathLexer0.dots();
      assertEquals(",", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("6", token3.getTokenText());
      
      xPathLexer0.number();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("LI$x7", token4.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.3226582017173547
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)pLa");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("s)pLa");
      xPathLexer1.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.dots();
      xPathLexer0.consume();
      xPathLexer1.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.3136978263564536
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+.ak$=n.ud7yK|u");
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("+.ak$=n.ud7yK|u");
      xPathLexer2.consume();
      xPathLexer0.mod();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer1.at();
      xPathLexer0.number();
      XPathLexer xPathLexer3 = new XPathLexer("+.ak$=n.ud7yK|u");
      xPathLexer0.and();
      xPathLexer2.div();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("KP  E#H4E}AbfaZ~");
      xPathLexer4.nextToken();
      xPathLexer2.or();
      Token token0 = xPathLexer4.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?ivM>PMKfnQ;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("ivM>PMKfnQ;", token2.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("FH=)QD(iS9]");
      Token token0 = new Token(50, "FH=)QD(iS9]", 46, 46);
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.2968652655261375
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" l-xY0)K)m%J<");
      xPathLexer0.slashes();
      xPathLexer0.setXPath(".'CBP_6%+>;Iz");
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.7256804684531776
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:K-q-");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(":", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("K-q-", token2.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ZTPvDc.[SL");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.3698368964765486
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+.ak$=n.ud7yK|u");
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("+.ak$=n.ud7yK|u");
      xPathLexer2.consume();
      xPathLexer0.mod();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer1.at();
      xPathLexer0.number();
      XPathLexer xPathLexer3 = new XPathLexer("+.ak$=n.ud7yK|u");
      xPathLexer0.and();
      xPathLexer2.div();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("KP  E#H4E}AbfaZ~");
      xPathLexer4.at();
      xPathLexer4.dollar();
      xPathLexer4.nextToken();
      xPathLexer2.or();
      Token token0 = xPathLexer4.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O$/q[:d>5hcOBsa+(");
      XPathLexer xPathLexer1 = new XPathLexer("lkO$:v$=;'k\"{a;BFx");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("lkO", token0.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.308670940636512
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N'3Y1:o'&Gs(W9=O~");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertNotNull(token1);
      assertEquals("3Y1:o", token1.getTokenText());
      assertEquals(27, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("&Gs(W9=O~", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      xPathLexer0.whitespace();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.9560058942918874
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GSiC52\"(5SC/r");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.3089893528042842
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dj.");
      xPathLexer0.div();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.setXPath("!roq@}un!CTC");
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.number();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1477896666212208
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",:>6LI$x7");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(",:", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(">", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("6", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("$", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals("", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals("x7", token6.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.1785541427461035
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O$/q[:d>5hcOBsa+(");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("$", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(11, token1.getTokenType());
      assertEquals("/", token1.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('');
      assertFalse(boolean0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("");
      xPathLexer1.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("q", token2.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.4116059501812357
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BE;!x=P6q^u~");
      Token token0 = xPathLexer0.slashes();
      assertEquals("B", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("E;", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("x", token2.getTokenText());
      
      xPathLexer0.setXPath("R]]6YAL5Rrx-@(vp");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("R", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.2777376783495367
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H<_|\"E");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("H", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("<_", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(17, token2.getTokenType());
      assertEquals("|", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("\"", token3.getTokenText());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("E", token4.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BE;!x=P6q^u~");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("E", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals("B", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.507176556517782
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",:>6LI$x7");
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.507176556517782
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",:>6LI$x7");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals(",:", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("6", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("LI", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(26, token4.getTokenType());
      assertEquals("$", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("x", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      assertEquals("7", token6.getTokenText());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^*t[(xViQT0.]#@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("^*t[(xViQT0.]#@", token0.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|5M%LJ?I4s=qfj5");
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2&j");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.9907241115089369
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("IFT6a:8g&!L3");
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3tM!pR1&s");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.3937504258468942
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.at();
      xPathLexer0.not();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.hasMoreChars();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.rightParen();
      xPathLexer2.nextToken();
      xPathLexer0.whitespace();
      xPathLexer1.whitespace();
      xPathLexer0.comma();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer3.div();
      xPathLexer1.whitespace();
      Token token0 = xPathLexer3.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f.=Th/Y5J^tz");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("f.", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0864256875171134
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",:>6LI$x7");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(":", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(">", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("6", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals("L", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4ezb Hmj/yP+'.2");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("4ezb Hmj/yP+'.2");
      token1.toString();
      xPathLexer1.nextToken();
      Token token2 = xPathLexer0.mod();
      assertNull(token2);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.938804976163611
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4ezb Hmj/yP+'.2");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("4", token0.getTokenText());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.pipe();
      assertEquals("z", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("b ", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("H", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals("m", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.mod();
      Token token6 = xPathLexer0.slashes();
      assertEquals("/", token6.getTokenText());
      assertEquals(12, token6.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0052764576123814
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4ezb Hmj/yP+'.2");
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.number();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.7807834767829693
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+.an$=n.ud7yK|u");
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.308670940636512
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N'3Y1:o'&Gs(W9=O~");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("3Y1:o", token1.getTokenText());
      assertEquals(27, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("(", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("UH&E2&r,1}zXxl^bw");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("UH", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.6900392346671561
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:K-q-");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QZ&utp~gg?$");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("QZ", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.4366248700238204
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BE;!x=P6q^u~");
      Token token0 = xPathLexer0.slashes();
      assertEquals("B", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(";!", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.minus();
      assertEquals("^", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("u", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals("", token6.getTokenText());
      assertEquals((-2), token6.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(";", token0.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.4790214612582253
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4ezb Hmj/yP+'.2");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("e", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("z", token2.getTokenText());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      XPathLexer xPathLexer1 = new XPathLexer("4ezb Hmj/yP+'.2");
      xPathLexer0.or();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.div();
      Token token4 = xPathLexer1.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GzrLpW^Bl6}$-#");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("GzrLpW", token0.getTokenText());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0");
      Token token0 = xPathLexer0.number();
      assertEquals("0", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.1172780199716226
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",:>6LI$x7");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(32, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(":", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(">", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("6", token3.getTokenText());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("I$x7", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.558069130671492
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer("[ (4) (c)");
      Token token1 = xPathLexer1.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      Token token2 = xPathLexer1.dollar();
      xPathLexer1.setPreviousToken(token2);
      assertEquals(" ", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      xPathLexer1.identifierOrOperatorName();
      Token token3 = xPathLexer1.colon();
      assertEquals("(", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.setXPath("[ (4) (c)");
      Token token4 = xPathLexer0.nextToken();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer1.div();
      Token token5 = xPathLexer1.nextToken();
      assertEquals("4", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("(", token6.getTokenText());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      assertEquals("4", token7.getTokenText());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9xhh^<E)f0 Zc8<f=");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("9", token0.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9|,9t=SZRUdC<w");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("9", token0.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.247636949666424
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BE;!x=P6q^u~");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("B", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("E;", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("x", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("=", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("P6q", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.9003309451206125
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.35PCmL{n\"9YEndR");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("5.35PCmL{n\"9YEndR");
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.8036166683174563
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.35PCmL{n\"9YEndR");
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("5.35PCmL{n\"9YEndR");
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.2513250567396574
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dj.");
      xPathLexer0.div();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.setXPath("!roq@}un!CTC");
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.number();
      xPathLexer0.or();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bVc9/}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("bVc9", token0.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.9009892151241139
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.setXPath("./hE8");
      Token token1 = xPathLexer0.colon();
      assertEquals(".", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("/", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("hE8", token3.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("JvPp%VyLnzs&WP0");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("JvPp%VyLnzs&WP0", token1.getTokenText());
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.7706499454626512
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.35PCmL{n\"9YEndR");
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("5.35PCmL{n\"9YEndR");
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",:>6LI$x7");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(32, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.1319957259294007
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!>'");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.6935746950979977
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.setXPath("./hE8");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.and();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.8453370222284317
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O$/q[:d>5hcOBsa+(");
      XPathLexer xPathLexer1 = new XPathLexer("O$/q[:d>5hcOBsa+(");
      xPathLexer1.plus();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("v");
      xPathLexer2.colon();
      XPathLexer xPathLexer3 = new XPathLexer("v");
      XPathLexer xPathLexer4 = new XPathLexer(".A,kwYbG<-hKjT6!h");
      xPathLexer4.nextToken();
      xPathLexer4.nextToken();
      xPathLexer4.relationalOperator();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w1Uav1%v(9d>O!.</");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("w1Uav1", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<oR\"~");
      XPathLexer xPathLexer1 = new XPathLexer("g. 12");
      Token token0 = xPathLexer1.pipe();
      assertEquals("g", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer1.number();
      assertEquals(31, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      xPathLexer1.setXPath("03x76ky");
      xPathLexer0.consume();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("03", token2.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.7608912288539228
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+.an$=n.ud7yK|u");
      xPathLexer0.consume();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.0027874575783409
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<4/!H4y$G>kkBCCA");
      Token token0 = xPathLexer0.at();
      assertEquals("<", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("/", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(23, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("H4y$G>kkBCCA", token5.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.9363687432812782
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" l-xY0)K)m%J<");
      xPathLexer0.slashes();
      xPathLexer0.setXPath(".'CBP_6%+>;Iz");
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]8+/PmsCT0");
      xPathLexer0.setXPath("]8+/PmsCT0");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g. 12");
      xPathLexer0.dots();
      xPathLexer0.number();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.6935746950979976
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.setXPath("./hE8");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("/", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gN*");
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("gN", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("*", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.2596114647370613
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N'3Y1:o'&Gs(W9=O~");
      xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.3993120858384764
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O$/q[:d>5hcOBsa+(");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.whitespace();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.8907779437435276
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":%S4S");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":%S4S");
      xPathLexer0.setXPath("`d/]p");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`d/]p", token0.getTokenText());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{V");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{V", token0.getTokenText());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vKbq");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("vKbq", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.271414864876129
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:K-q-");
      xPathLexer0.colon();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.3875111498870192
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N'3Y1:o'&Gs(W9=O~");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("'", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("3", token2.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.at();
      assertEquals("c", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.setXPath("T[8tc`");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("T", token1.getTokenText());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("IFT6a:8g&!L3");
      Token token0 = xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("/.T#|7M*L3XGF&");
      Token token1 = xPathLexer1.dots();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(14, token1.getTokenType());
      assertEquals("/.", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (21) (I)", string0);
      
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals("T", token2.getTokenText());
      
      xPathLexer1.setXPath("IFT6a:8g&!L3");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("FT6a:8g&!L3", token3.getTokenText());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("IFT6a", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*oP.Q1__7q$:yYC3*L");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("*", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("oP.Q1__7q", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(26, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.8956694678944368
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer(".6|mbVdw<f+");
      xPathLexer1.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("IFT6a:8g&!L3");
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("::");
      xPathLexer0.doubleColon();
      xPathLexer0.mod();
      xPathLexer1.nextToken();
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token0 = xPathLexer2.div();
      assertNull(token0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.5PCmL{n\"9YEndR");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("5.5PCmL{n\"9YEndR");
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<=h>/!H4y$G>kkBuCA");
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("F");
      xPathLexer0.mod();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("mo6");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":%S4S");
      xPathLexer0.and();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("%", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertNotNull(token2);
      assertEquals(27, token2.getTokenType());
      assertEquals("4", token2.getTokenText());
      
      xPathLexer0.setXPath(";dr&?");
      xPathLexer0.consume();
      Token token3 = new Token(8, "-5", 687, 0);
      xPathLexer0.setPreviousToken(token3);
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("dr", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals("", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.literal();
      xPathLexer0.setXPath(".1X /hE8");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2&h)j");
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".2", token0.getTokenText());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!>=9");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer1.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer1.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(10, token3.getTokenType());
      assertEquals(">=", token3.getTokenText());
      
      xPathLexer1.or();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("9", token4.getTokenText());
  }
}
