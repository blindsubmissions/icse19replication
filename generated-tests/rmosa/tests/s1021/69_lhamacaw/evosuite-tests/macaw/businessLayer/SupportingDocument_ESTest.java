/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 15:00:00 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SupportingDocument_ESTest extends SupportingDocument_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("j-&1=l.*A");
      supportingDocument0.setIdentifier(0);
      supportingDocument0.setFilePath("hv");
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      assertFalse(supportingDocument1.isNewRecord());
      assertNotSame(supportingDocument1, supportingDocument0);
      assertEquals("hv", supportingDocument1.getFilePath());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("j-&1=l.*A", supportingDocument1.getDescription());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("");
      supportingDocument0.setFileName("%XU6s7.`Z9@");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-4120));
      boolean boolean0 = supportingDocument0.isNewRecord();
      assertEquals((-4120), supportingDocument0.getIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("W%-[HDsul!8nL*teh");
      String string0 = "H$0xt\\f>g";
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(569);
      supportingDocument0.getFilePath();
      int int0 = supportingDocument0.getIdentifier();
      assertEquals("569", supportingDocument0.getDisplayItemIdentifier());
      assertEquals(569, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      supportingDocument0.getDisplayName();
      supportingDocument0.getDocumentCode();
      assertFalse(supportingDocument0.isNewRecord());
      
      supportingDocument0.setIsNewRecord(true);
      assertTrue(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayItemIdentifier();
      String string0 = "\\";
      User user0 = new User("0", "0");
      User.detectFieldChanges(user0, user0, user0);
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.getDocumentCode();
      User user0 = new User("", "");
      supportingDocument0.setIsNewRecord(true);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setFileName("UNABLE_TO_FILTER_SUMMARIES");
      User user1 = new User("|Ey&}kHqXc&y", "|Ey&}kHqXc&y");
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      supportingDocument0.setFileName("UNABLE_TO_FILTER_SUMMARIES");
      supportingDocument0.getTitle();
      assertTrue(supportingDocument0.isNewRecord());
      
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument3, supportingDocument1);
      supportingDocument2.getIdentifier();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user1, supportingDocument4, supportingDocument4);
      assertFalse(supportingDocument4.isNewRecord());
      assertTrue(arrayList1.equals((Object)arrayList0));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = "-";
      supportingDocument0.setTitle("-");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("supportingDocument.documentCode.label", "");
      user0.setPostCode("");
      user0.setCounty("");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      assertEquals(0, arrayList0.size());
      
      supportingDocument0.getDocumentCode();
      supportingDocument0.setDocumentCode("UNABLE_TO_CREATE_ONTOLOGY_TERM");
      supportingDocument0.setFileName("yV`d|pV5j8");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setFilePath("yV`d|pV5j8");
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      assertEquals(3, arrayList1.size());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals(0, supportingDocument1.getIdentifier());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("u,_Mu<P:[2Mvnsx");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setIsNewRecord(false);
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument2);
      assertEquals(1, arrayList0.size());
      
      User user1 = new User((String) null, (String) null);
      supportingDocument2.setIsNewRecord(false);
      assertFalse(supportingDocument2.isNewRecord());
      
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.getTitle();
      assertEquals(0, supportingDocument3.getIdentifier());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("|Ey&}kHqXc&y", "UNABLE_TO_CREATE_ONTOLOGY_TERM");
      user0.setPostCode("supportingDocument.documentCode.label");
      user0.setCounty("N&!VA8");
      supportingDocument0.setTitle("yV`d|pV5j8");
      User.detectFieldChanges(user0, user0, user0);
      supportingDocument0.setDocumentCode("UNABLE_TO_CREATE_ONTOLOGY_TERM");
      supportingDocument0.getDisplayName();
      supportingDocument0.setFileName("R#FTT/Q^=U");
      String string0 = supportingDocument0.getDisplayName();
      assertEquals("yV`d|pV5j8-UNABLE_TO_CREATE_ONTOLOGY_TERM", string0);
      
      SupportingDocument.validateFields(supportingDocument0);
      supportingDocument0.getDocumentCode();
      User user1 = new User("NO_SUPPORTING_DOCUMENT_FILTER", "NO_SUPPORTING_DOCUMENT_FILTER");
      supportingDocument0.setFilePath("|Ey&}kHqXc&y");
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
  }
}
