/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 09:17:16 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("uJ5@*/");
      stringReader0.reset();
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(10);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(685);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6081583698769648
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("{", stringWriter1);
      stringWriter1.flush();
      SimpleNode simpleNode1 = new SimpleNode(84);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringWriter0.write("&");
      simpleNode0.dump("(", stringWriter1);
      simpleNode1.toString("*amp");
      simpleNode1.setIdentifier(">");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode1.dump("_LYPI;dp", stringWriter0);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "(");
      SimpleNode simpleNode2 = new SimpleNode(84);
      StringReader stringReader0 = new StringReader("[$a*Gc|,*\"vk");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) null);
      simpleNode2.dump("Y*7)v@B7~x&mW", stringWriter1);
      simpleNode1.dump((String) null, stringWriter1);
      simpleNode0.dump("(", stringWriter3);
      simpleNode2.dump((String) null, stringWriter0);
      assertEquals("&<ForInit>\n  <identifier>*gt</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4709001279172663
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("{", stringWriter1);
      stringWriter1.flush();
      SimpleNode simpleNode1 = new SimpleNode(84);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringWriter0.write("&");
      simpleNode0.dump("(", stringWriter1);
      simpleNode1.setIdentifier(">");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode1.dump("_LYPI;dp", stringWriter0);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "(");
      SimpleNode simpleNode2 = new SimpleNode(84);
      simpleNode0.toString();
      StringReader stringReader0 = new StringReader("[$a*Gc|,*\"vk");
      stringReader0.read();
      JavaParser javaParser0 = new JavaParser(stringReader0);
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) null);
      simpleNode2.dump("Y*7)v@B7~x&mW", stringWriter1);
      simpleNode1.dump((String) null, stringWriter1);
      simpleNode0.dump("(", stringWriter3);
      simpleNode2.dump("_LYPI;dp", stringWriter1);
      assertEquals("<ForInit>\n</ForInit>\n<ForInit>\n</ForInit>\n(null<ForInit>\n  <identifier>*gt</identifier>\n</ForInit>\n<ForInit>\n</ForInit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("d<%ZWEO+SiZQ");
      try { 
        javaParser0.ForStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 395;
      SimpleNode simpleNode0 = new SimpleNode(395);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(395);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5138165375168556
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.setIdentifier("<=");
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode1.jjtSetParent(simpleNode0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("hrGE|$]e $@q5DR", stringWriter0);
      assertEquals(1, simpleNode1.jjtGetNumChildren());
      
      SimpleNode simpleNode2 = new SimpleNode(0);
      simpleNode2.dump("S=m997!)j", stringWriter0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "S=m997!)j");
      simpleNode0.dump("<=", stringWriter1);
      simpleNode2.dump("fS=qXj2[2bSK", stringWriter0);
      assertEquals("<CompilationUnit><CompilationUnit>\n  <identifier>*le</identifier>\n</CompilationUnit>\n</CompilationUnit>\nS=m997!)j<CompilationUnit>\n  <identifier>*le</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(52);
      Node[] nodeArray0 = new Node[2];
      simpleNode0.children = nodeArray0;
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6816102690529531
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("{", stringWriter0);
      simpleNode0.setIdentifier("\"(\"");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.dump("Y>3%R ZE", stringWriter1);
      stringWriter0.write("Y>3%R ZE");
      simpleNode0.dump("{", stringWriter1);
      simpleNode0.dump("1qv@:y#M5P6N:wO", stringWriter0);
      simpleNode0.dump("1qv@:y#M5P6N:wO", stringWriter1);
      assertEquals("<ForInit>\n  <identifier>\"(\"</identifier>\n</ForInit>\n<ForInit>\n  <identifier>\"(\"</identifier>\n</ForInit>\n<ForInit>\n  <identifier>\"(\"</identifier>\n</ForInit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.36764947740014225
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("*lt");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("*lt", stringWriter0);
      simpleNode0.dump("*lt", stringWriter1);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*lt</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("{", stringWriter0);
      stringWriter0.flush();
      SimpleNode simpleNode1 = new SimpleNode(84);
      Node[] nodeArray0 = new Node[3];
      Node node0 = simpleNode0.parent;
      nodeArray0[0] = null;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode1;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("(", stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.setIdentifier("");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode1.dump("", stringWriter1);
      simpleNode1.dump("Statement", stringWriter0);
      simpleNode1.dump("j.cej9Zh", stringWriter1);
      simpleNode0.dump("", stringWriter0);
      StringWriter stringWriter2 = new StringWriter();
      simpleNode1.dump("}", stringWriter2);
      assertEquals("<CompilationUnit>\n</CompilationUnit>\n", stringWriter2.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      String string0 = "h_IDw]Khiv";
      // Undeclared exception!
      try { 
        stringWriter0.write("h_IDw]Khiv", 0, 1142);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("&&");
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter(2673);
      simpleNode0.jjtAddChild((Node) null, 10);
      StringWriter stringWriter1 = new StringWriter(10);
      char char0 = '(';
      StringWriter stringWriter2 = new StringWriter();
      // Undeclared exception!
      try { 
        stringWriter2.append((CharSequence) "&&", 2673, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.7071094627648349
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier(">");
      simpleNode0.toString("&&");
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("&&", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      simpleNode1.setIdentifier("&&");
      StringBuffer stringBuffer0 = javaParserTokenManager0.image;
      JavaParser javaParser0 = new JavaParser((Reader) null);
      simpleNode1.parser = javaParser0;
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) null);
      simpleNode1.dump("&&", stringWriter1);
      simpleNode0.dump("'^#", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*gt</identifier>\n</CompilationUnit>\nnull<CompilationUnit>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier>*gt</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("T=w4-<~= 5+i^W5+]");
      StringWriter stringWriter0 = new StringWriter(84);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(84);
      simpleNode0.dump("{", stringWriter2);
      stringWriter1.flush();
      SimpleNode simpleNode1 = new SimpleNode(84);
      String string0 = "(";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringWriter1.write("&");
      simpleNode1.dump((String) null, stringWriter2);
      simpleNode0.setIdentifier("<<");
      String string1 = "_LYPI;dp";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.dump("&", stringWriter1);
      stringWriter1.append((CharSequence) ">");
      SimpleNode simpleNode2 = new SimpleNode(84);
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.flush();
      SimpleNode simpleNode1 = new SimpleNode(84);
      stringWriter0.write("Dlj%I.=PU;,Nivt`dD");
      simpleNode1.dump("{", stringWriter1);
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("{", stringWriter0);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "&");
      SimpleNode simpleNode2 = new SimpleNode(84);
      StringReader stringReader0 = new StringReader("[$a*Gc|,*\"vk");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      simpleNode1.dump("Dlj%I.=PU;,Nivt`dD", stringWriter2);
      simpleNode1.dump("&", stringWriter0);
      assertEquals("Dlj%I.=PU;,Nivt`dD<ForInit>\n  <identifier>*amp</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("{", stringWriter1);
      stringWriter1.flush();
      SimpleNode simpleNode1 = new SimpleNode(84);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode2 = new SimpleNode((-164282746));
      simpleNode0.dump(":-JW#:", stringWriter1);
      SimpleNode simpleNode3 = new SimpleNode((-1073741822));
      simpleNode1.setIdentifier(">>");
      simpleNode1.dump("<=", stringWriter1);
      StringBuffer stringBuffer0 = new StringBuffer("VariableDeclaratorId");
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) stringBuffer1);
      SimpleNode simpleNode4 = new SimpleNode(54);
      simpleNode0.dump((String) null, stringWriter0);
      StringWriter stringWriter3 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter1);
      simpleNode4.dump((String) null, stringWriter0);
      simpleNode0.dump(")gC+", stringWriter2);
      assertEquals("VariableDeclaratorId<ForInit>\n</ForInit>\n<ForInit>\n</ForInit>\n", stringWriter2.toString());
      assertEquals("VariableDeclaratorId<ForInit>\n</ForInit>\n<ForInit>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(")");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("Wyt?+", stringWriter0);
      JavaParser javaParser0 = new JavaParser("u");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 18);
      simpleNode1.dump("9S", stringWriter0);
      simpleNode1.toString("BreakStatement");
      simpleNode1.dump("ConditionalAndExpression", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump(">=", stringWriter2);
      simpleNode0.dump("transient", stringWriter0);
      String string0 = "\\u";
      simpleNode0.dump(string0, stringWriter1);
      assertEquals("<CompilationUnit>\n  <identifier>*ge</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("JZ0|PwT;*[e0w$-F?");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("Y>3%R ZE", stringWriter1);
      stringWriter0.write("\"(\"");
      simpleNode0.dump(">>", stringWriter1);
      simpleNode0.dump("<", stringWriter1);
      simpleNode0.dump("1qv@:y#M5P6N:wO", stringWriter1);
      assertEquals("<ForInit>\n  <identifier>JZ0|PwT;*[e0w$-F?</identifier>\n</ForInit>\n<ForInit>\n  <identifier>JZ0|PwT;*[e0w$-F?</identifier>\n</ForInit>\n<ForInit>\n  <identifier>JZ0|PwT;*[e0w$-F?</identifier>\n</ForInit>\n<ForInit>\n  <identifier>JZ0|PwT;*[e0w$-F?</identifier>\n</ForInit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("{", stringWriter1);
      stringWriter1.flush();
      SimpleNode simpleNode1 = new SimpleNode(84);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte)68;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)83;
      byteArray0[5] = (byte) (-45);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringWriter0.write("&");
      simpleNode0.dump("(", stringWriter1);
      simpleNode1.setIdentifier(">");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode1.dump("_LYPI;dp", stringWriter0);
      stringWriter1.append((CharSequence) "(");
      SimpleNode simpleNode2 = new SimpleNode(84);
      StringReader stringReader0 = new StringReader("[$a*Gc|,*\"vk");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      simpleNode2.setIdentifier("}");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      simpleNode2.dump("*gt", stringWriter1);
      simpleNode2.dump("{", stringWriter0);
      simpleNode1.dump("&", stringWriter1);
      simpleNode1.dump("&", stringWriter1);
      assertEquals("<ForInit>\n</ForInit>\n<ForInit>\n</ForInit>\n(<ForInit>\n</ForInit>\n<ForInit>\n  <identifier>*gt</identifier>\n</ForInit>\n<ForInit>\n  <identifier>*gt</identifier>\n</ForInit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter(84);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("{", stringWriter1);
      stringWriter1.flush();
      SimpleNode simpleNode1 = new SimpleNode(84);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringWriter0.write("&");
      simpleNode0.dump("(", stringWriter1);
      simpleNode1.setIdentifier("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode1.dump("_LYPI;dp", stringWriter0);
      simpleNode0.setIdentifier("<");
      SimpleNode simpleNode2 = new SimpleNode((-571));
      simpleNode1.dump("{", stringWriter1);
      StringWriter stringWriter2 = new StringWriter();
      simpleNode1.dump("{", stringWriter2);
      simpleNode1.dump(" <;2+CE}oeMzh>2]d`", stringWriter0);
      simpleNode0.dump("{", stringWriter0);
      assertEquals("&<ForInit>\n</ForInit>\n<ForInit>\n</ForInit>\n<ForInit>\n  <identifier>*lt</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode((-164282746));
      SimpleNode simpleNode1 = new SimpleNode((-164282746));
      Node[] nodeArray0 = new Node[0];
      simpleNode1.children = nodeArray0;
      simpleNode1.dump("", stringWriter0);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "");
      assertEquals("", stringWriter2.toString());
  }
}
