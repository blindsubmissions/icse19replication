/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 23 09:00:14 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(3);
      player0.getMoney();
      player0.getY();
      float float0 = Player.TOLERANCE;
      Player player1 = new Player(18933, "", 0);
      player1.gangBoss();
      Player player2 = new Player(2576, "", (short)4919);
      player2.isJoinOK(player0, true);
      System.setCurrentTimeMillis((short)4919);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(2008);
      player0.setX(2008);
      player0.reset(false);
      assertEquals(2008.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      player0.getStrength();
      Player player1 = new Player();
      player0.prev = (Party) player1;
      player0.reset(true);
      player0.setZ(0.0F);
      player0.getMoney();
      player0.getSubparty();
      player0.setDead((long) 1, false);
      player0.setX(1);
      player0.toString();
      player0.getX();
      player0.getPictureId();
      player0.setDead((long) 0, false);
      player0.getIP();
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(8);
      player0.getIP();
      player0.getIP();
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      assertEquals("Player8", player0.toString());
      assertEquals(0, player0.getPictureId());
      
      Player player1 = new Player(8, "p}^q", (-28160));
      assertEquals(1, player1.getStrength());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals((-28160), player1.getPictureId());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(4065, "", "", 4065);
      player0.gangStrength();
      player0.setY(0.0F);
      player0.getStrength();
      player0.setX(911.4F);
      assertEquals(911.4F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(0);
      boolean boolean0 = true;
      Party party0 = player0.gangBoss();
      party0.boss = (Party) player0;
      player0.add(party0);
      player0.setDead(1726L, true);
      // Undeclared exception!
      player0.gangStrength();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis((-1955L));
      int int0 = 2538;
      Player player0 = new Player(2538);
      player0.setMoney(1431.4999F);
      Player player1 = new Player((short)4919);
      player1.getZ();
      Player player2 = new Player(0, (String) null, 2);
      player2.setX((-3440.81F));
      player2.getTimeOfDeath();
      player1.getX();
      // Undeclared exception!
      try { 
        player1.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-1724), "", 1285);
      player0.setDead();
      System.setCurrentTimeMillis(1285);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(5354);
      player0.id = (-1680);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player0.getSubparty();
      float float0 = Player.MOVE_DISTANCE;
      player0.getZ();
      player0.getName();
      player0.getZ();
      Player player1 = new Player();
      MockFile mockFile0 = new MockFile("Player.unpack(): *** WARNING *** data is not of proper type!", "Y+4AUF5->=nqe");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(210);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)73;
      player0.getSubparty();
      byteArray0[1] = (byte) (-11);
      byteArray0[2] = (byte)73;
      byteArray0[2] = (byte)0;
      player0.setMoney((byte)0);
      player0.unpack(byteArray0);
      String string0 = player0.getName();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("Player210", string0);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(729, "gui.ModuleBrowserDialog$ModuleFilter", "", 729, 729);
      player0.getTimeOfDeath();
      player0.setY(729);
      assertEquals(729.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      System.setCurrentTimeMillis((-1955L));
      System.setCurrentTimeMillis((-1955L));
      Player player0 = new Player(757, "", 757);
      Player player1 = (Player)player0.gangBoss();
      player0.remove(player1);
      Player player2 = new Player((short)4919, ".6/7T(?4=gy?", (short)4919);
      Player player3 = new Player((-857), "", (-1));
      player3.prev = (Party) player2;
      player3.gangStrength();
      player1.isJoinOK(player2, true);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 5721;
      Player player0 = new Player(5721);
      Player player1 = new Player();
      player0.next = (Party) player1;
      player0.reset(true);
      player0.setY((-506.0F));
      player1.isConnected();
      player1.head = (Party) player0;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile("7o&snH@", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(2, "", "", (-5026));
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      Player player1 = new Player((-5026), "", (-5026));
      Player player2 = new Player(1713, "", "4j+", (-21431));
      Player player3 = new Player((-1913), "", 2);
      assertEquals("0.0.0.0", player3.getIP());
      
      boolean boolean0 = player2.isDead();
      assertEquals("", player2.getIP());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(1, player2.getStrength());
      assertTrue(player2.isConnected());
      assertFalse(boolean0);
      assertEquals((-21431), player2.getPictureId());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(696);
      int int0 = player0.type();
      assertEquals(5, int0);
      
      player0.getIP();
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals("Player696", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      player0.setMoney((-1484.79F));
      Player player1 = new Player((short)4919);
      player1.setConnected(true);
      Player player2 = new Player((short)4919, (String) null, "?pQ}|-^r2Z%d,;YNK<Q", (short)4919);
      player2.setJoinOK(player0, false);
      player1.next = (Party) player2;
      player2.setConnected(true);
      player2.id = (-2802);
      player1.setDead((long) (short)4919);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.setJoinOK(player1, false);
      Party party0 = player0.prev;
      player1.head = null;
      player2.isJoinOK(player0, true);
      player1.isJoinOK(player0, true);
      player2.isJoinOK(player1, false);
      player1.isJoinOK(player2, false);
      boolean boolean0 = player1.isDead();
      assertEquals(4919L, player1.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(5354);
      Player player1 = new Player((short)4919);
      player0.boss = (Party) player1;
      player0.id = (-1680);
      player0.next = (Party) player1;
      byte[] byteArray0 = player1.pack();
      player0.next.boss = (Party) player1;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player0.getZ();
      player1.setX((-619.0F));
      player0.getTimeOfDeath();
      player1.getX();
      player0.unpack(byteArray0);
      Player player2 = new Player();
      boolean boolean0 = player2.isJoinOK(player1, false);
      assertEquals((-619.0F), player1.getX(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      player0.setMoney(0.993655F);
      player0.setConnected(true);
      player0.setJoinOK(player0, true);
      player0.setJoinOK(player0, true);
      player0.setConnected(true);
      player0.setConnected(false);
      player0.isJoinOK(player0, true);
      System.setCurrentTimeMillis(3347L);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      System.setCurrentTimeMillis(2403L);
      Player player0 = new Player((-1228), (String) null, " ", (-1228), 2545);
      Player player1 = new Player((-843), " ", " ", 2545, (-1228));
      player1.pack();
      player0.setJoinOK(player1, true);
      player1.setZ((-1228));
      player0.prev = (Party) player1;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.add(player1);
      player0.isJoinOK(player1, false);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      player1.isJoinOK(player0, false);
      player0.isJoinOK(player1, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      System.setCurrentTimeMillis((-261L));
      System.setCurrentTimeMillis(17403L);
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis((-1007L));
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis(1L);
  }
}
