/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:00:03 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.Dialog;
import java.awt.RenderingHints;
import java.awt.color.ICC_Profile;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.ConvolveOp;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.RescaleOp;
import java.awt.image.WritableRaster;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.math.BigInteger;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      Class<AWTEventMulticaster> class0 = AWTEventMulticaster.class;
      jComboBox0.getListeners(class0);
      visualListModel0.removeListDataListener(jComboBox0);
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      int int0 = (-294);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.subList(0, 0, true);
      intArray0[1] = (-294);
      int int1 = 46;
      intArray0[2] = 46;
      intArray0[3] = 6418;
      intArray0[4] = (-3953);
      visualListModel0.moveDownIndexes(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, "3T3AFT>DNHFL0q')|");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.subList(0, 0, true);
      visualListModel0.getElements();
      int int1 = 0;
      visualListModel0.removeElements(0, 1935, true);
      int int2 = (-466);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-466), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -466
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.elementsChanged();
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      visualListModel0.addListDataListener(jComboBox0);
      int int0 = (-1);
      int int1 = (-2076);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.subList((-1), (-2076), true);
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0549201679861442
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = (-752);
      intArray0[1] = 14;
      intArray0[2] = 11;
      intArray0[3] = 161;
      visualListModel0.undeleteElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(3, 11, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(1686, 1686, false);
      visualListModel0.subList((-1), (-1));
      visualListModel0.moveDownIndex(3372);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(0, (-1196), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-1962);
      intArray0[1] = (-1402);
      intArray0[2] = 1;
      intArray0[3] = 3;
      intArray0[4] = 472;
      intArray0[5] = 0;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.getSize();
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) null);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 513;
      intArray0[1] = (-2001);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int int0 = 0;
      BufferedImage bufferedImage0 = null;
      String string0 = "";
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((BufferedImage) null, 0, true, "c<x[)mx(VK5", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      int int0 = 2965;
      intArray0[1] = 2965;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 2132);
      int int1 = (-1698);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 136;
      visualListModel0.moveUpIndex(136);
      visualListModel0.removeElements(136, 136, false);
      int int1 = 1706;
      visualListModel0.moveDownIndex(1706);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(1706, "9x+u", "9x+u");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 32;
      intArray0[2] = (-2085);
      intArray0[3] = 3086;
      intArray0[4] = (-1419);
      intArray0[5] = 820;
      intArray0[6] = 1304;
      intArray0[7] = 0;
      intArray0[8] = (-3663);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.moveDownIndex((-1));
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      int int0 = 1;
      intArray0[0] = 1;
      intArray0[1] = 0;
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) treeSet0);
      intArray0[2] = 1;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) treeSet0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[8];
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Class<AWTEventMulticaster> class0 = AWTEventMulticaster.class;
      visualListModel0.getListeners((Class) class0);
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = (-1112);
      intArray0[2] = 92;
      intArray0[3] = 12;
      visualListModel0.moveUpIndexes(intArray0);
      int int0 = 292;
      String string0 = "";
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(292, "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.prependAllElements(treeSet0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      Class<AWTEventMulticaster> class0 = AWTEventMulticaster.class;
      jComboBox0.getListeners(class0);
      visualListModel0.removeListDataListener(jComboBox0);
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements((-1150), 141, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 136;
      visualListModel0.moveUpIndex((-2206));
      boolean boolean0 = false;
      int int1 = 1234;
      visualListModel0.removeElements(1234, 136, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndex(3367);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(1706, "org.pdfsam.guiclient.commons.models.VisualListModel", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 513;
      int int0 = (-2001);
      VisualListModel visualListModel1 = new VisualListModel();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel1.removeElementAt(513, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 513
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = (-549);
      int[] intArray1 = new int[0];
      visualListModel0.moveDownIndexes(intArray1);
      intArray0[1] = 360;
      intArray0[2] = (-2206);
      intArray0[3] = 892;
      intArray0[4] = (-1913);
      intArray0[5] = (-331);
      intArray0[6] = 2215;
      intArray0[7] = 7;
      visualListModel0.reverseElements(intArray0);
      int int0 = visualListModel0.getSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.data = null;
      int int0 = visualListModel0.getSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[6];
      int int0 = 0;
      intArray0[0] = 0;
      intArray0[1] = (-1);
      int int1 = (-1252);
      intArray0[2] = (-1252);
      intArray0[3] = 102;
      intArray0[4] = 40000;
      visualListModel0.moveDownIndex(480);
      VisualListModel visualListModel1 = new VisualListModel();
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) 102;
      floatArray0[2] = (float) (-1);
      floatArray0[3] = (float) 0;
      floatArray0[4] = (float) 0;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      // Undeclared exception!
      try { 
        visualListModel1.getElementAt((-2206));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2206
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.559581156259877
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[1];
      intArray0[0] = 458;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElements(458, 458, false);
      int[] intArray1 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = (-1);
      intArray0[2] = (-1252);
      intArray0[3] = 102;
      intArray0[4] = 40000;
      intArray0[5] = 12;
      visualListModel0.removeElements(intArray0, false);
      Integer[] integerArray0 = new Integer[4];
      integerArray0[0] = (Integer) (-1);
      integerArray0[1] = (Integer) 0;
      integerArray0[2] = (Integer) (-1252);
      integerArray0[3] = (Integer) (-1252);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.removeElements(12, (-1), false);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(1686, 1686, false);
      visualListModel0.subList((-1), (-1));
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndex((-1));
      visualListModel0.undeleteElements(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(1080);
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray0 = new int[7];
      intArray0[0] = 1080;
      intArray0[1] = 1080;
      intArray0[2] = 1080;
      intArray0[3] = 1080;
      intArray0[4] = 1080;
      intArray0[5] = 1080;
      intArray0[6] = 1080;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.getElements();
      visualListModel0.moveUpIndex(1808);
      int[] intArray1 = new int[1];
      intArray1[0] = 1808;
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.getValidElements();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.reverseElements(intArray1);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      visualListModel0.clearData();
      visualListModel0.updateElementAt(1080, (VisualPageListItem) null);
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(intArray1, true);
      assertArrayEquals(new int[] {1808}, intArray1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2055983590263937
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(1686, 1686, false);
      visualListModel0.subList((-1), (-1));
      visualListModel0.moveDownIndex(3374);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.removeElements((-1), (-372), false);
      visualListModel1.getElements();
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      // Undeclared exception!
      try { 
        visualListModel1.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0, true);
      visualListModel0.getElements();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElements(2232, 0, true);
      visualListModel0.moveUpIndexes(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.019814992492946
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) hashSet0);
      visualListModel0.moveDownIndex(2232);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) hashSet0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      visualListModel0.setData(vector0);
      visualListModel0.getElements();
      int[] intArray0 = new int[4];
      intArray0[0] = 2232;
      intArray0[1] = 1;
      intArray0[2] = 2232;
      intArray0[3] = 2232;
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      assertArrayEquals(new int[] {2232, 1, 2232, 2232}, intArray0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0253262207700673
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      Dialog.ModalExclusionType dialog_ModalExclusionType0 = Dialog.ModalExclusionType.TOOLKIT_EXCLUDE;
      defaultComboBoxModel0.getIndexOf(dialog_ModalExclusionType0);
      int[] intArray0 = new int[5];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.getElements();
      visualListModel0.reverseElements(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      visualListModel0.clearData();
      visualListModel0.addAllElements((-994), (Collection<VisualPageListItem>) vector0);
      int int0 = 1;
      int int1 = 253;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(253, "ezKo&+32&V");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.019814992492946
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) hashSet0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) hashSet0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = (-1084);
      intArray0[1] = 1353;
      intArray0[2] = (-2675);
      intArray0[3] = (-1068);
      intArray0[4] = 1083;
      intArray0[5] = 256;
      intArray0[6] = 1367;
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel0.removeElements(1, 0, false);
      visualListModel0.moveDownIndex((-1546));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel1.setData(visualPageListItemArray0);
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.933809998920632
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      visualListModel0.undeleteElements(intArray0);
      int int0 = 0;
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      visualListModel0.moveDownIndexes(intArray0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) treeSet0);
      visualListModel0.addAllElements(collection0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.addElement((VisualPageListItem) null);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel2.removeElements(0, 0, false);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) treeSet0);
      VisualListModel visualListModel4 = new VisualListModel();
      int int1 = 1198;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements(413, (Collection<VisualPageListItem>) treeSet0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      TreeSet<VisualPageListItem> treeSet1 = new TreeSet<VisualPageListItem>();
      treeSet1.addAll(treeSet0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel3 = new VisualListModel();
      int int0 = (-1);
      visualListModel0.removeElements((-1143), (-1), true);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8866967846580782
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.removeElements((-3513), 413, true);
      VisualListModel visualListModel1 = new VisualListModel();
      hashSet0.add((VisualPageListItem) null);
      visualListModel1.clearData();
      visualListModel1.subList(722, 722);
      visualListModel0.moveDownIndex(413);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.prependAllElements(hashSet0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[1] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      visualListModel0.removeListDataListener(jComboBox0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.removeElements(intArray0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.removeElements((-3513), 394, true);
      VisualListModel visualListModel1 = new VisualListModel();
      hashSet0.add((VisualPageListItem) null);
      visualListModel1.clearData();
      visualListModel1.elementsChanged();
      visualListModel1.subList(722, 722);
      visualListModel0.moveDownIndex(394);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) hashSet0);
      VisualListModel visualListModel2 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.addElement((VisualPageListItem) null);
      VisualListModel visualListModel4 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      visualListModel0.removeElements((-3513), (-18), true);
      visualListModel2.addAllElements((Collection<VisualPageListItem>) hashSet0);
      visualListModel4.updateElementAt(394, (VisualPageListItem) null);
      visualListModel1.subList((-1311), (-1005), true);
      int[] intArray1 = new int[1];
      intArray1[0] = 394;
      try { 
        visualListModel3.rotateClockwiseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 394
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9792045174343245
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.removeElements((-3513), 394, true);
      hashSet0.add((VisualPageListItem) null);
      visualListModel0.clearData();
      visualListModel0.moveDownIndex(394);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) hashSet0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.addElement((VisualPageListItem) null);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel0.removeElements((-3513), (-18), true);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) hashSet0);
      visualListModel3.updateElementAt(394, (VisualPageListItem) null);
      int[] intArray0 = new int[1];
      visualListModel2.removeElements((-18), 849, true);
      visualListModel0.reverseElements(intArray0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8937882323911377
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 172;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayDeque0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.addElement((VisualPageListItem) null);
      VisualListModel visualListModel3 = new VisualListModel();
      int int0 = 559;
      visualListModel2.removeElements((-1), 559, false);
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.moveUpIndex(1930);
      visualListModel4.addAllElements((Collection<VisualPageListItem>) arrayDeque0);
      try { 
        visualListModel2.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 172
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 1080;
      intArray0[4] = 1080;
      intArray0[4] = 0;
      intArray0[5] = 1080;
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualPageListItemArray0[8] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndex(1808);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndex(0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.098147389135067
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.removeElements((-3513), 394, true);
      hashSet0.add((VisualPageListItem) null);
      visualListModel0.moveDownIndex(394);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) hashSet0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.addElement((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel2.setData(visualPageListItemArray0);
      visualListModel2.moveUpIndex(1);
      visualListModel0.updateElementAt((-3513), (VisualPageListItem) null);
      assertFalse(visualListModel0.equals((Object)visualListModel2));
  }
}
