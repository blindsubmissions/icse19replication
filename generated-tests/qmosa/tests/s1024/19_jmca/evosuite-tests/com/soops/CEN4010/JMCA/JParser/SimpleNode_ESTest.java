/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:14:01 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      Node node0 = null;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.jjtGetParent();
      simpleNode0.toString("CompilationUnit");
      simpleNode0.toString("CompilationUnit");
      simpleNode0.jjtClose();
      simpleNode0.jjtOpen();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2545);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2545
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("ArrayDimsAndInits");
      simpleNode0.identifiers = arrayList0;
      simpleNode0.toString();
      arrayList0.addAll(1, (Collection<? extends String>) simpleNode0.identifiers);
      simpleNode0.jjtClose();
      simpleNode0.jjtClose();
      simpleNode0.jjtGetNumChildren();
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      // Undeclared exception!
      try { 
        jJTJavaParserState0.popNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.toString();
      int int0 = (-1863);
      SimpleNode simpleNode1 = new SimpleNode((-1863));
      simpleNode1.jjtGetParent();
      int int1 = 557;
      simpleNode0.jjtAddChild((Node) null, 557);
      simpleNode0.setIdentifier("15YHS");
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(558);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9730014063936125
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      stringReader0.skip(3862L);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append('T');
      simpleNode0.dump("<<", stringWriter1);
      simpleNode0.jjtOpen();
      simpleNode0.toString();
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 1);
      simpleNode0.jjtSetParent(simpleNode2);
      SimpleNode simpleNode3 = new SimpleNode(1);
      simpleNode0.jjtClose();
      simpleNode3.jjtOpen();
      SimpleNode simpleNode4 = new SimpleNode(0);
      simpleNode4.jjtClose();
      simpleNode0.setIdentifier("");
      JavaParser javaParser1 = new JavaParser((String) null);
      SimpleNode simpleNode5 = new SimpleNode(javaParser0, (-1));
      SimpleNode simpleNode6 = new SimpleNode(javaParser1, 0);
      simpleNode2.jjtSetParent(simpleNode6);
      simpleNode0.dump((String) null, stringWriter1);
      assertEquals("T<CompilationUnit>\n</CompilationUnit>\n", stringWriter1.toString());
      assertEquals("T<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2265558156134033
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      stringReader0.skip(3862L);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('T');
      simpleNode0.dump("<<", stringWriter1);
      simpleNode0.jjtOpen();
      simpleNode0.toString();
      simpleNode0.setIdentifier("*fKA[[h%3KMac6Du ");
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.dump("<<", stringWriter0);
      assertEquals("T<CompilationUnit>\n  <identifier>*fKA[[h%3KMac6Du </identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier>*fKA[[h%3KMac6Du </identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4205719259467042
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      stringReader0.skip(3862L);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append('T');
      simpleNode0.dump("<<", stringWriter1);
      simpleNode0.jjtOpen();
      simpleNode0.toString();
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 1);
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = stringWriter2.append('T');
      simpleNode2.dump("<<", stringWriter3);
      simpleNode2.jjtOpen();
      SimpleNode simpleNode3 = new SimpleNode(javaParser0, 0);
      simpleNode1.jjtAddChild(simpleNode2, 1);
      simpleNode1.dump("CompilationUnit", stringWriter0);
      simpleNode0.dump("*rshft", stringWriter2);
      simpleNode0.dump("<<", stringWriter2);
      assertEquals("T<CompilationUnit></CompilationUnit>\n<CompilationUnit></CompilationUnit>\n", stringWriter2.toString());
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.14839214282331
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      stringReader0.skip(3862L);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('T');
      simpleNode0.jjtOpen();
      SimpleNode simpleNode1 = new SimpleNode(84);
      simpleNode1.jjtSetParent(simpleNode0);
      SimpleNode simpleNode2 = new SimpleNode(84);
      SimpleNode simpleNode3 = new SimpleNode(84);
      simpleNode3.jjtClose();
      simpleNode2.jjtOpen();
      SimpleNode simpleNode4 = new SimpleNode(84);
      SimpleNode simpleNode5 = new SimpleNode(javaParser0, (-2591));
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode5.identifiers = arrayList0;
      simpleNode5.jjtClose();
      simpleNode0.setIdentifier("<<");
      JavaParser javaParser1 = new JavaParser("<<");
      SimpleNode simpleNode6 = new SimpleNode(javaParser0, 84);
      SimpleNode simpleNode7 = new SimpleNode(javaParser1, (-1));
      simpleNode0.jjtSetParent(simpleNode2);
      simpleNode1.dump("*fKA[[h%3KMac6Du ", stringWriter0);
      simpleNode0.dump("<<", stringWriter1);
      simpleNode2.dump(">=", stringWriter0);
      assertEquals("T<CompilationUnit>\n  <identifier>*lshft</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.7261928332614538
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      JavaParser javaParser1 = new JavaParser("AZ?aEbZX\"58");
      SimpleNode simpleNode1 = new SimpleNode(javaParser1, (-2004401176));
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 3498);
      simpleNode1.jjtSetParent(simpleNode2);
      SimpleNode simpleNode3 = new SimpleNode((-2513));
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "AZ?aEbZX\"58");
      simpleNode3.dump("L^", stringWriter0);
      simpleNode2.dump((String) null, stringWriter1);
      simpleNode2.dump("`s.P[a`2q4HJ0[rI}:f", stringWriter1);
      simpleNode2.dump("'{< OOz*Ij", stringWriter1);
      assertEquals("<CompilationUnit>\n  <identifier>*amp</identifier>\n</CompilationUnit>\nAZ?aEbZX\"58", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8937882323911377
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6O[@w");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      stringReader0.skip(3862L);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append('T');
      simpleNode0.dump("6O[@w", stringWriter1);
      simpleNode0.jjtOpen();
      simpleNode0.toString();
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 1);
      simpleNode0.jjtSetParent(simpleNode2);
      SimpleNode simpleNode3 = new SimpleNode(1);
      simpleNode0.jjtClose();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-52);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode3.jjtOpen();
      Node[] nodeArray0 = new Node[0];
      simpleNode1.children = nodeArray0;
      SimpleNode simpleNode4 = new SimpleNode(0);
      simpleNode4.jjtClose();
      simpleNode2.setIdentifier("]bR;~_T&");
      JavaParser javaParser1 = new JavaParser("]bR;~_T&");
      SimpleNode simpleNode5 = new SimpleNode(javaParser1, 0);
      SimpleNode simpleNode6 = new SimpleNode(javaParser0, 1458);
      simpleNode1.jjtSetParent(simpleNode4);
      simpleNode0.dump("um>=", stringWriter1);
      simpleNode4.dump("", stringWriter0);
      assertFalse(simpleNode4.equals((Object)simpleNode5));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3750242529845458
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      stringReader0.skip(3862L);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtOpen();
      simpleNode0.jjtSetParent(simpleNode0);
      SimpleNode simpleNode1 = new SimpleNode(84);
      SimpleNode simpleNode2 = new SimpleNode(84);
      SimpleNode simpleNode3 = new SimpleNode(0);
      simpleNode3.toString();
      SimpleNode simpleNode4 = (SimpleNode)javaParser0.currNode;
      SimpleNode simpleNode5 = new SimpleNode(javaParser0, 0);
      SimpleNode simpleNode6 = new SimpleNode(0);
      simpleNode1.jjtClose();
      simpleNode6.jjtOpen();
      SimpleNode simpleNode7 = new SimpleNode(26);
      simpleNode0.jjtClose();
      simpleNode6.setIdentifier(">");
      JavaParser javaParser1 = new JavaParser("CompilationUnit");
      SimpleNode simpleNode8 = new SimpleNode(javaParser1, 84);
      simpleNode5.setIdentifier("CompilationUnit");
      simpleNode7.dump("IA", stringWriter0);
      simpleNode6.dump("VariableDeclaratorId", stringWriter0);
      simpleNode7.dump(">", stringWriter0);
      simpleNode8.dump("IA", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*gt</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2275294114572126
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleNode simpleNode0 = new SimpleNode((byte)77);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtOpen();
      simpleNode0.toString();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleNode simpleNode1 = new SimpleNode(39);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.jjtOpen();
      simpleNode0.toString();
      SimpleNode simpleNode2 = new SimpleNode((byte)77);
      simpleNode1.jjtOpen();
      SimpleNode simpleNode3 = new SimpleNode(38);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode2.setIdentifier(";");
      simpleNode1.dump("s|/]b::w$", stringWriter0);
      simpleNode1.dump((String) null, stringWriter1);
      simpleNode2.dump("&", stringWriter0);
      simpleNode0.dump(";", stringWriter0);
      assertEquals("<StatementExpression>\n</StatementExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1240357221909014
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString("qrA)ol");
      simpleNode0.dump("qrA)olCompilationUnit : <", stringWriter0);
      JavaParser javaParser1 = new JavaParser((String) null);
      simpleNode0.dump("qrA)olCompilationUnit : <", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) "qrA)ol", 0, 0);
      simpleNode0.dump("qrA)olCompilationUnit : <", stringWriter2);
      StringWriter stringWriter3 = new StringWriter(1023);
      StringWriter stringWriter4 = stringWriter3.append((CharSequence) "<", 0, 0);
      SimpleNode simpleNode1 = new SimpleNode(1023);
      simpleNode1.dump(")m2s", stringWriter3);
      simpleNode1.dump((String) null, stringWriter2);
      simpleNode0.dump("<<", stringWriter1);
      simpleNode0.dump("*gt", stringWriter1);
      simpleNode1.dump("MemberValuePairs", stringWriter4);
      // Undeclared exception!
      try { 
        simpleNode0.dump("MemberValuePairs", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
