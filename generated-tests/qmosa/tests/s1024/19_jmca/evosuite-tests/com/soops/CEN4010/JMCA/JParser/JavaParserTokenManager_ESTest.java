/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:25:57 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.PrintStream;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V/i-[7 #4b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2520), (-2520));
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8343719702816237
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"const\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4131), 0, 0);
      javaCharStream0.backup(0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      Token token0 = new Token();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = Token.newToken(89);
      token0.specialToken = token1;
      javaCharStream0.GetImage();
      javaParserTokenManager0.SwitchTo(0);
      token0.beginColumn = 742;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 1080);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1080. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringReader stringReader0 = new StringReader("volatile");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaCharStream0.maxNextCharInd = (-2777);
      javaParserTokenManager0.MoreLexicalActions();
      String string0 = "y69gma2wlhIyJ";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream, false, "y69gma2wlhIyJ");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // y69gma2wlhIyJ
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k^tGsFA\"+o8Ss3:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2537, 2537, 1394);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream, false);
      Locale locale0 = Locale.CHINESE;
      PrintStream printStream0 = mockPrintStream0.printf(locale0, "<=", (Object[]) javaParserTokenManager0.jjstrLiteralImages);
      javaParserTokenManager0.setDebugStream(printStream0);
      assertSame(printStream0, mockPrintStream0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)118;
      byteArray0[2] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)5, (byte)118);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, (-1), 11);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      assertEquals(0, token_GTToken0.beginColumn);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.135047776102027
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Token token0 = new Token();
      StringReader stringReader0 = new StringReader("!d?*v.(^l+8%}$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 49, 74, 0);
      Token.newToken(0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.curChar = 'l';
      javaParserTokenManager0.MoreLexicalActions();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("d", token1.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.024148314219096
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Token.newToken((-24));
      StringReader stringReader0 = new StringReader("bI.gq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-224), 40, 720);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 3008);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(41, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1003520660553716
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Token token0 = new Token();
      Token.newToken((-1273));
      StringReader stringReader0 = new StringReader("O{5C;JR");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-373), 3008, 0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1378), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(1, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      StringReader stringReader0 = new StringReader("tranj#ieSt");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1897, 126, 3008);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 74, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      assertEquals(4, javaCharStream1.bufpos);
      assertEquals(4, javaCharStream1.getColumn());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6699333394515303
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("T*F0_&&Z!g)_>=n");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1090, 63, 550);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.MoreLexicalActions();
      javaParserTokenManager1.SkipLexicalActions(token0);
      javaParserTokenManager1.MoreLexicalActions();
      assertNotSame(javaParserTokenManager1, javaParserTokenManager0);
  }
}
