/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:11:29 GMT 2018
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.IndexColorModel;
import java.awt.image.LookupOp;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JInternalFrame;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.PrimaryKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.ProcedureInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "]9.$D1?", 300, "]9.$D1?", 93, 300, 1738, 93, "Missing icon for mainframe", "DBUtil.info.bindbloblength", 300, 0, "");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(300, tableColumnInfo0, (ISession) null);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      DBUtil.setLastStatement("8zj6bk'J[$?,c3F\"P@");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "Q@wN4\"qP!bWgErA^@4";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("8zj6bk'J[$?,c3F\"P@", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", "8zj6bk'J[$?,c3F\"P@", 0, "Q@wN4\"qP!bWgErA^@4", 125, 125, 0, 26, "", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 125, 26, "}");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      String string1 = "K!=&}$Hyq!";
      int int0 = 3272;
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable(3272, (byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ByteLookupTable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBUtil.getLastStatement();
      String string0 = "mC},vf!(w^";
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, (String) null, "mC},vf!(w^", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setDelayBetweenObjects(true);
      dBCopyPreferenceBean0.setClientVersion("\"p");
      dBCopyPreferenceBean0.setRecordDelayMillis((-1L));
      dBCopyPreferenceBean0.setCommitCount(1676);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      ISession iSession0 = null;
      String string0 = "x@g<?[>\"0aQ1i }tC";
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "OmqE|", "OmqE|", "x@g<?[>\"0aQ1i }tC", 1676);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      String string0 = "";
      String string1 = null;
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "", (String) null);
      dBCopyPlugin0.getPluginJarFilePath();
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 741);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("{Xy`sBf9?rj1[3+:8=7");
      dBCopyPlugin0.getPluginJarFilePath();
      DBUtil.getLastStatement();
      DBUtil.setLastStatementValues(":I$F`");
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = "U@X~e8/}ZJ";
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "U@X~e8/}ZJ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "oZn,s4I.;m&TQz~", 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF_TYPE_DBO;
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DBUtil.getLastStatementValues();
      dBCopyPlugin0.setDestDatabaseObject((IDatabaseObjectInfo) null);
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      DBUtil.convertObjectToTableList(vector0);
      // Undeclared exception!
      try { 
        DBUtil.dropTable("K`_(peO<?u0GQELeKD", "DBUtil.info.bindbloblength", "v)me5ia-kY", (ISession) null, true, 1738);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(stack0);
      DBUtil.convertObjectToTableList(list0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[5];
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte)73;
      byteArray0[5] = (byte) (-5);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      ProcedureInfo procedureInfo0 = null;
      try {
        procedureInfo0 = new ProcedureInfo("...}", "ALTER TABLE ", (String) null, "${M^nFc>Ct7n)'", (-3774), (SQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.createFolder(evoSuiteFile0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("g;6>Ht8l", "]9.$D1?", "g;6>Ht8l", "]9.$D1?", 1738, "]9.$D1?", (-3651), 1738, 2717, 2717, "U@X~e8/}ZJ", "", 93, 93, "]9.$D1?");
      DBUtil.replaceDistinctDataType(1738, tableColumnInfo0, (ISession) null);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "u~1";
      String string1 = "j[dBf9=$";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("8Cu~DMm'Nk)gx)p", "u~1", "j[dBf9=$", "u~1", (-375), "u~1", 1002, 2717, (-145), 2, "j[dBf9=$", "u~1", (-145), (-390), "8Cu~DMm'Nk)gx)p");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.typesAreEquivalent((-375), (-5));
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("u~1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteToTableName("LX001d01$");
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getWebSite();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("AC_#DaBk&", "e=l\"?+pAz]2a6i7F", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "DBUtil.info.bindclobfile", 311, (String) null, 12, (-1094), 745, (-114), (String) null, (String) null, 822, (-3), "http://www.squirrelsql.org");
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      assertEquals("1.15", dBCopyPlugin0.getVersion());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.fixCase((ISession) null, (String) null);
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      JDesktopPane jDesktopPane0 = jInternalFrame0.getDesktopPane();
      assertNull(jDesktopPane0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getWebSite();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "do%q[v7|:oRNm", "V<7suoVC/|9-P", "do%q[v7|:oRNm", (-939), "do%q[v7|:oRNm", (-939), (-939), (-1094), (-939), "do%q[v7|:oRNm", "a8j16219kz@L,Jc.Y", (-1251), (-1094), "V<7suoVC/|9-P");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[8];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("xt", "http://www.squirrelsql.org", (String) null, "V<7suoVC/|9-P", 46, "71'7 ~PIW)nn", 46, (-1251), (-1251), (-939), (String) null, "V<7suoVC/|9-P", (-939), 273, "0");
      tableColumnInfoArray0[1] = tableColumnInfo1;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("do%q[v7|:oRNm, V<7suoVC/|9-P, do%q[v7|:oRNm, do%q[v7|:oRNm, do%q[v7|:oRNm, do%q[v7|:oRNm, do%q[v7|:oRNm, do%q[v7|:oRNm", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteToTableName("LX001d01$");
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("AC_#DaBk&", "e=l\"?+pAz]2a6i7F", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "DBUtil.info.bindclobfile", 311, (String) null, 12, (-1094), 745, (-114), (String) null, (String) null, 822, (-3), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "LX001d01$", (ITableInfo) null, 1111);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[2];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) null;
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      assertEquals(2, list1.size());
      
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2, "aq}", 2, 2, 2, 2, (String) null, ")1P<Rt/S&P+", 2191, 2, "sqrt");
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "A_nX", "IRj#");
      linkedList0.add((IDatabaseObjectInfo) null);
      DBUtil.convertObjectToTableList(linkedList0);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteToTableName("LX001d01$");
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getWebSite();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "doq[v7|:oRNm", "V<7%uoVC/|.9-P", "doq[v7|:oRNm", (-939), "doq[v7|:oRNm", (-939), (-939), (-1094), (-939), "doq[v7|:oRNm", "&nhGTx", (-1251), 822, "V<7%uoVC/|.9-P");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("V<7%uoVC/|.9-P", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setPromptForDialect(false);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("_BiOdSIA~$_@4I4", "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions", "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions", "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions", (-1647), "1Y=qOg(5?9", (-1), 2690, 2690, 2001, "NO CASCADE BEFORE INSERT ON ", "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions", 1695, (-1), "`Z B|`n6%)A>2~+7");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, (TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(". Using 'max'", ". Using 'max'", ". Using 'max'", ". Using 'max'", (-4), ". Using 'max'", (-4), (-4), 1935, (-1707), ". Using 'max'", ". Using 'max'", (-1707), 1935, " NOT NULL");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(2, (-330));
      assertFalse(boolean0);
      
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("dot.triggers", "dot.triggers", "b-n", (String) null, 101, "|y:QEnV(f7aiqLXOvV", 2, (-671), 2, 2, "sqrt", (String) null, (-671), 2959, "sqrt");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.CATALOG;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
      int int0 = DBUtil.replaceDistinctDataType((-1952257859), tableColumnInfo0, (ISession) null);
      assertEquals((-1952257859), int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      jInternalFrame0.getMouseMotionListeners();
      jInternalFrame0.restoreSubcomponentFocus();
      jInternalFrame0.getDesktopPane();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "O", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = "p:!";
      String string1 = "71'7 ~PIW)nn";
      String string2 = "`sC2_mI";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("p:!", "(rVHg?FDZ", "cardinal_number", (String) null, 2004, "71'7 ~PIW)nn", 3528, (-3323), 622, 300, "DBUtil.getTableInfo: found ", "`sC2_mI", 1436, (-1061), (String) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DBUtil.isBinaryType(tableColumnInfo0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("com.gargoylesoftware.base.resource.jdbc.AlreadyClosedException");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 3251);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = 4;
      int int1 = 733;
      ResultSet resultSet0 = null;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 4, 733, 4, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setPromptForDialect(false);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("nchar", "paged queries not supported", "select  'CREATE OR REPLACE VIEW ' || VIEW_NAME ||' AS ', TEXT ", " - ", (-1982292595), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-1982292595), (-1982292595), 2192, (-3219), " schema = ", "Ul-30F}^U 8Jm_{P", (-3219), 2192, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin1, tableColumnInfo0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = 11;
      int int1 = 733;
      ResultSet resultSet0 = null;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 11, 733, 11, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.30463609734923813
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DBUtil.typesAreEquivalent(2, 2);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2, (-461), 2, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-83);
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)71;
      byteArray0[3] = (byte) (-45);
      byteArray0[4] = (byte) (-8);
      byteArray0[5] = (byte)64;
      byteArray0[6] = (byte)11;
      byteArray0[7] = (byte)30;
      byteArray0[8] = (byte) (-43);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBUtil.typesAreEquivalent((-2289), (byte) (-8));
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 0, (-1830), (-5313), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.2868359830561607
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setPromptForDialect(false);
      DBUtil.setPreferences((DBCopyPreferenceBean) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 3, 3, 11, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-4), 733, (-4), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DBUtil.typesAreEquivalent(3, 2004);
      DBUtil.typesAreEquivalent((-2031), (-2031));
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", "net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", "values current timestamp", 2004);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCheckKeywords(false);
      dBCopyPreferenceBean0.setPromptForDialect(false);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("nchar", "paged queries not supported", "select  'CREATE OR EPLACEVIEW ' || VIEW_NAME ||' AS ', TEXT ", " - ", (-1982292595), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-1982292595), (-1982292595), 2192, (-3219), "showContentsWhenDragging", "Ul-30F}^U 8Jm_{P", (-3219), 2192, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin1, tableColumnInfo0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.ColTypeMapper", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 6, 733, 6, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ResultSet resultSet0 = null;
      PreparedStatement preparedStatement0 = null;
      int int0 = 93;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 93, 1349, 1349, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2003, 2003, 2003, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.16302362949436594
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2001, (-1717986916), 2001, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.6691825225299436
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DBUtil.typesAreEquivalent(15, 15);
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setClientVersion(".v62vN");
      dBCopyPreferenceBean0.setPromptForDialect(false);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2004, 2004, 1362, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.537368801781397
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setClientVersion("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPreferenceBean0.setPromptForDialect(false);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2005, (-3132), 2005, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-6), (-6), (-6), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DBUtil.typesAreEquivalent(16, 16);
      DBUtil.typesAreEquivalent(0, (-1422));
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.USER;
      assertEquals("User", databaseObjectType0.getKeyForSerializationReplace());
  }
}
