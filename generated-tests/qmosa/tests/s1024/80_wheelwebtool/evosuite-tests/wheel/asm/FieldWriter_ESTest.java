/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:08:26 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "TDNRHynd7z82}`Kd)<", "bD0", "3]CiR&56d", "bD0");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("bD0");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8("");
      ByteVector byteVector2 = byteVector1.putLong(1);
      ByteVector byteVector3 = byteVector2.putShort(24);
      ByteVector byteVector4 = byteVector3.put11(24, (-444));
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0114042647073518
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(953);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-8), "O8", "", "O8", "O8");
      fieldWriter0.visitAnnotation("x!|VK3#k&ddT", true);
      fieldWriter0.visitAnnotation("x!|VK3#k&ddT", true);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt(953);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.2148896539491205
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5679);
      classWriter0.version = 642;
      classWriter0.addUninitializedType("q", 184);
      classWriter0.addType("$3'OpqDN");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 642, "of)xo*", "g)_Yx/_KT", "X", "g)_Yx/_KT");
      fieldWriter0.visitAnnotation("of)xo*", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
      
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute("q");
      Attribute attribute1 = attribute0.next;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)53;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-108);
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte) (-100);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (byte) (-100), "q", "org.apache.commons.io.filefilter.TrueFileFilter", "g)_Yx/_KT", "of)xo*");
      FieldWriter fieldWriter2 = fieldWriter1.next;
      int int1 = fieldWriter1.getSize();
      assertEquals(30, int1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8587409130062869
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "TDNRHynd7z82}`Kd)<", "bD0", "3]CiR&56d", "bD0");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("bD0");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8("");
      ByteVector byteVector2 = byteVector1.putLong(1);
      byteVector2.putShort(24);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 191, "", "&ya(P7_;9=", "n>b|(C5->Z-e#", "TDNRHynd7z82}`Kd)<");
      FieldWriter fieldWriter2 = fieldWriter1.next;
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0042424730540764
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(953);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-8), "O8", "", "O8", "O8");
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("x!|VK3#k&ddT", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.198849312913621
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(953);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 374, "Signature", "", "l}j", "The list of prefixes must not be null");
      fieldWriter0.visitAnnotation("z-Uc+7%[Cd9(~(", true);
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putInt(1);
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9368883075390159
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(953);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2171), "", "|", (String) null, "");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("x!|VK3#k&ddT", true);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0114042647073516
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(953);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 10, "%<sD.", "%<sD.", "", (Object) null);
      fieldWriter0.visitAnnotation("8I", true);
      fieldWriter0.visitAnnotation(")Eo", false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt((-818));
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9743147528693494
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(953);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", (String) null, (Object) null);
      fieldWriter0.getSize();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 3571);
      ClassWriter classWriter1 = new ClassWriter(16777219);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.2554823251787535
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(953);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-8), "O8", "", "O8", "O8");
      fieldWriter0.visitAnnotation("x!|VK3#k&ddT", true);
      fieldWriter0.visitAnnotation("x!|VK3#k&ddT", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.getSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteVector byteVector1 = byteVector0.putInt(953);
      classWriter0.version = 64;
      ByteVector byteVector2 = byteVector1.put12((-8), (-265));
      fieldWriter0.put(byteVector1);
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector2);
  }
}
