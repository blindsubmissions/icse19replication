/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 17:48:49 GMT 2018
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      short short0 = (short)457;
      Short short1 = new Short((short)457);
      String string0 = "";
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Float float0 = new Float(Double.NaN);
      Float.isFinite(3806.0F);
      JSONObject jSONObject0 = new JSONObject(float0);
      JSONObject.getNames(jSONObject0);
      jSONObject0.keys();
      jSONObject0.optBoolean((String) null, false);
      Float.sum(0.0F, 3806.0F);
      Integer integer0 = new Integer(0);
      Integer.divideUnsigned(1018, 125);
      Integer.sum(46, 8);
      Integer.divideUnsigned(125, 4);
      try { 
        jSONObject0.getString((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(373);
      JSONObject.valueToString(integer0);
      String string0 = ",\n";
      JSONTokener jSONTokener0 = new JSONTokener(",\n");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of ,
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString(0);
      jSONObject0.optDouble("}l$-_C<Y8EC");
      try { 
        jSONObject0.getBoolean("}l$-_C<Y8EC");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"}l$-_C<Y8EC\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<Byte, Float> hashMap0 = new HashMap<Byte, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Byte byte0 = new Byte((byte) (-105));
      Float float0 = new Float((-1340.7533F));
      StringWriter stringWriter0 = new StringWriter(919);
      StringWriter stringWriter1 = stringWriter0.append('N');
      JSONObject.doubleToString((-1.0));
      // Undeclared exception!
      try { 
        stringWriter1.append((CharSequence) "-1", 594, (int) (byte) (-105));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = new Long((-1L));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "' and instead saw '";
      stringArray0[1] = "Substring bounds error";
      stringArray0[2] = "{U;Z:>wH";
      stringArray0[3] = "";
      JSONObject jSONObject0 = new JSONObject(long0, stringArray0);
      boolean boolean0 = jSONObject0.optBoolean("Substring bounds error", false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optLong("", 0L);
      double double0 = jSONObject0.optDouble((String) null, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "\\u";
      jSONObject0.optLong(string0, 2330L);
      JSONObject.getNames((Object) string0);
      jSONObject0.remove(string0);
      Float float0 = new Float((-1236.07F));
      JSONObject jSONObject1 = jSONObject0.put(string0, (Object) float0);
      jSONObject1.optBoolean(string0);
      String string1 = "\\";
      try { 
        jSONObject0.getBoolean("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "5";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("5");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of 5
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7478680974667575
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "null";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject1.optBoolean("P+_:h[7TS(");
      jSONObject0.toString(34);
      try { 
        jSONObject1.getString("'");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"'\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.094408629847781
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSONObject.valueToString((Object) null);
      JSONObject jSONObject0 = new JSONObject((Object) "null");
      String string0 = ",:]}/\\\"[{;=#";
      int int0 = (-1173);
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-1173));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSONObject.valueToString((Object) null, 621, 621);
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.toString();
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(")b&r?iOsNZ2YV0(\u0002Nq");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of )b&r?iOsNZ2YV0(\u0002Nq
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.getNames(jSONObject0);
      jSONObject0.toString(0);
      String string0 = "\\u";
      JSONObject jSONObject1 = jSONObject0.put(string0, 2450.355263380567);
      jSONObject1.optBoolean("J*q:h:=1.<>", true);
      JSONObject jSONObject2 = jSONObject0.put("vnQ*xw>G Q", (Object) "vnQ*xw>G Q");
      jSONObject0.optLong("vnQ*xw>G Q");
      jSONObject0.get("vnQ*xw>G Q");
      Short short0 = new Short((short)4);
      JSONObject.valueToString(short0);
      JSONObject.valueToString("{}");
      jSONObject0.optInt("{}");
      jSONObject0.optDouble(string0, (-2219.733027271714));
      JSONObject jSONObject3 = jSONObject2.put(string0, true);
      jSONObject2.optLong(string0, (long) 0);
      JSONObject.valueToString("{}");
      String string1 = "eVs9k{A";
      try { 
        jSONObject3.getInt("eVs9k{A");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"eVs9k{A\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.3034884952192693
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      jSONObject0.putOpt("", "");
      JSONObject.getNames(jSONObject0);
      String string1 = null;
      try { 
        jSONObject0.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.length();
      jSONObject0.optLong("000");
      jSONObject0.toString(0);
      jSONObject0.toString(1);
      jSONObject0.names();
      jSONObject0.optLong("h-7mO$gdP|Q>D", (long) 1);
      jSONObject0.optBoolean("{\"java.lang.String@0000000003\": \"java.lang.Class@0000000004\"}", false);
      jSONObject0.opt("'");
      JSONObject.quote("");
      jSONObject0.optLong("", 0L);
      String string0 = "\\u";
      JSONTokener jSONTokener0 = new JSONTokener(string0);
      jSONTokener0.skipPast("{\"java.lang.String@0000000003\": \"java.lang.Class@0000000004\"}");
      jSONObject0.put("", false);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 2 of \\u
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0466719674870633
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Float float0 = new Float((-2294.8252F));
      JSONObject jSONObject0 = new JSONObject(float0);
      String string0 = "";
      Float.isFinite(0.0F);
      Float.sum(0.0F, 477.3F);
      Float.max(0.0F, 0.0F);
      jSONObject0.optInt("");
      jSONObject0.optString("");
      jSONObject0.toString();
      try { 
        jSONObject0.getLong("5M*RKiFp6r.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"5M*RKiFp6r.\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      JSONObject jSONObject1 = jSONObject0.putOpt("", "");
      LinkedList<JSONArray> linkedList0 = new LinkedList<JSONArray>();
      jSONObject1.put("has", (Collection) linkedList0);
      JSONObject.getNames(jSONObject0);
      String string1 = null;
      try { 
        jSONObject0.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3061022692967805
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.length();
      int int0 = 0;
      String string0 = "000";
      jSONObject0.optLong("000");
      JSONObject.valueToString(object0);
      jSONObject0.toString(1);
      JSONArray jSONArray0 = jSONObject0.names();
      jSONObject0.optLong("h-7mO$gdP|Q>D", (long) 1);
      try { 
        jSONArray0.getJSONObject(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[0] is not a JSONObject.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6297617488126885
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.getNames(jSONObject0);
      jSONObject0.toString(0);
      String string0 = "\\u";
      JSONObject jSONObject1 = jSONObject0.put(string0, (double) 0);
      jSONObject1.optBoolean("J*:h:=1.<>", true);
      JSONObject jSONObject2 = jSONObject0.put("vnQ*xw>G Q", (Object) "vnQ*xw>G Q");
      jSONObject0.optLong("vnQ*xw>G Q");
      jSONObject0.get("vnQ*xw>G Q");
      Short short0 = new Short((short)4);
      JSONObject.valueToString(short0);
      Float.sum((short)4, 0);
      Float.max(0, (short)4);
      jSONObject0.optInt(string0);
      jSONObject1.optString((String) null);
      jSONObject2.toString();
      try { 
        jSONObject1.getLong("\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\n\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.120291565301284
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.getNames(jSONObject0);
      jSONObject0.toString(0);
      String string0 = "\\u";
      JSONObject jSONObject1 = jSONObject0.put(string0, 2450.355263380567);
      jSONObject1.optBoolean("J*q:h:=1.<>", true);
      JSONObject jSONObject2 = jSONObject0.put("vnQ*xw>G Q", (Object) "vnQ*xw>G Q");
      jSONObject0.optLong("vnQ*xw>G Q");
      jSONObject0.get("vnQ*xw>G Q");
      Short short0 = new Short((short)4);
      JSONObject.quote("{}");
      JSONObject.valueToString("{}");
      jSONObject0.optInt("{}");
      jSONObject0.optDouble(string0, (-2219.733027271714));
      JSONObject jSONObject3 = new JSONObject();
      jSONObject2.optLong(string0, (long) 0);
      JSONObject.valueToString("{}");
      JSONObject.valueToString("\"java.lang.String@0000000004\"");
      String string1 = "eVs9k{A";
      Byte byte0 = new Byte((byte)0);
      try { 
        jSONObject2.append("vnQ*xw>G Q", byte0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[vnQ*xw>G Q] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.0543121797806445
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Y<.|H-w]4%";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = ">";
      stringArray0[5] = "";
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.append("is", (Object) null);
      jSONObject1.toString(8448);
      try { 
        jSONObject0.getBoolean("Y<.|H-w]4%");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Y<.|H-w]4%\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object object0 = new Object();
      JSONObject.valueToString(".{2Q,#`eF[", 5040, 5040);
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.toString();
      jSONObject0.put("] is not a Boolean.", (Map) hashMap0);
      Float.isFinite(0.0F);
      Float.sum(5040, 5040);
      Float.max(477.3F, 537.73F);
      jSONObject0.optInt((String) null);
      jSONObject0.optString(".{2Q,#`eF[");
      jSONObject0.toString();
      try { 
        jSONObject0.getLong("\t");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\t\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.098147389135067
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Float float0 = new Float(0.0F);
      JSONObject jSONObject0 = new JSONObject(float0);
      double double0 = jSONObject0.optDouble("min", (double) 0.0F);
      assertEquals(0.0, double0, 0.01);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "] is not a Boolean.";
      stringArray0[1] = "Ku()xZzP";
      Float.isFinite(0.0F);
      stringArray0[2] = "\f";
      stringArray0[3] = "'";
      stringArray0[4] = "!^bcd=BbU%+`ZfZC=";
      stringArray0[4] = "Expected a ',' or '}'";
      JSONObject jSONObject1 = new JSONObject();
      JSONObject jSONObject2 = new JSONObject(jSONObject1, stringArray0);
      double double1 = jSONObject2.optDouble("wheel.json.JSONObject");
      assertEquals(Double.NaN, double1, 0.01);
      
      JSONObject jSONObject3 = new JSONObject((Object) "'");
      assertEquals(3, jSONObject3.length());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.938108530309854
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.length();
      Float float0 = new Float((-1251.789F));
      int int0 = 125;
      JSONObject.valueToString(float0, 9, 125);
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      jSONObject0.toString();
      String string0 = "i5Xu0@2BBzGF";
      Float float1 = new Float(1633.542F);
      Integer integer0 = new Integer(4);
      Integer integer1 = new Integer(4);
      Integer integer2 = Integer.getInteger("O>q`[udo:3,1S", integer1);
      hashMap0.put((Float) null, integer2);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray("{\"java.lang.String@0000000004\":\"java.lang.Class@0000000005\"}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of {\"java.lang.String@0000000004\":\"java.lang.Class@0000000005\"}
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.keys();
      jSONObject0.put("M+eb", (-793));
      jSONObject0.isNull("@9");
      try { 
        jSONObject0.getJSONObject("@9");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"@9\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }
}
