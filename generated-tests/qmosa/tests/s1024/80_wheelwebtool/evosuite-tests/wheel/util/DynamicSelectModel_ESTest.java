/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:28:22 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.Label;
import wheel.components.StandaloneComponent;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel((ElExpression) null, (ElExpression) null, (ElExpression) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.legend();
      String string0 = "";
      dynamicSelectModel0.collection("");
      errorPage0.br();
      String string1 = "";
      dynamicSelectModel0.value("");
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("");
      String string2 = "C)}),,!";
      dynamicSelectModel1.value("C)}),,!");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.translateValue("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression  evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getTopLevelComponent();
      dynamicSelectModel0.setTopLevelComponent((StandaloneComponent) null);
      String string0 = "f";
      // Undeclared exception!
      try { 
        dynamicSelectModel0.translateValue("f");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("}2H7zsw&,T/?Zg~0");
      dynamicSelectModel1.setComponent((Component) null);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.translator("}2H7zsw&,T/?Zg~0");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.label("ordinal()");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.collection("ordinal()");
      dynamicSelectModel0.collection("ordinal()");
      // Undeclared exception!
      try { 
        dynamicSelectModel4.translateValue("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression ordinal() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.empty(object0);
      String string0 = null;
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getObjects();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = new Label(errorPage0, "uS^+mU9mnOF7S");
      Any any0 = new Any(label0, "uS^+mU9mnOF7S");
      DynamicSelectModel dynamicSelectModel0 = any0.selectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("Z");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.collection("Z");
      StandaloneComponent standaloneComponent0 = dynamicSelectModel2.getTopLevelComponent();
      assertNull(standaloneComponent0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      StandaloneComponent standaloneComponent0 = null;
      String string0 = "I/CP.";
      String string1 = "gwk:BnW$MU2>?4}\")`_";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("gwk:BnW$MU2>?4}\")`_");
      dynamicSelectModel1.setComponent((Component) null);
      dynamicSelectModel0.value("I/CP.");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getValue(1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression gwk:BnW$MU2>?4}\")`_ to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getComponent();
      ActionExpression actionExpression0 = new ActionExpression("F^F0M@D");
      ActionExpression actionExpression1 = actionExpression0.submitForm(false);
      Any any0 = null;
      try {
        any0 = new Any((Component) null, actionExpression1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("Failed to initialize SimpleDateFormat with pattern '");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("Failed to initialize SimpleDateFormat with pattern '");
      dynamicSelectModel2.getTopLevelComponent();
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.translator("Failed to initialize SimpleDateFormat with pattern '");
      // Undeclared exception!
      try { 
        dynamicSelectModel3.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Label attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "";
      Collection collection0 = new LinkedList<Integer>();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.enumeration("");
      dynamicSelectModel1.value("");
      String string1 = "window.location.href='";
      dynamicSelectModel1.validate();
      dynamicSelectModel1.reset();
      dynamicSelectModel1.label("window.location.href='");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.value("");
      // Undeclared exception!
      try { 
        dynamicSelectModel3.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression .values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getLabel(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.legend();
      String string0 = "org.mvel.util.ThisLiteral";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("org.mvel.util.ThisLiteral");
      errorPage0.br();
      String string1 = "\"N";
      dynamicSelectModel0.value("\"N");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.value("\"N");
      String string2 = "C)}),,!";
      dynamicSelectModel1.translator("\"N");
      // Undeclared exception!
      try { 
        dynamicSelectModel2.translateValue("\"N");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression org.mvel.util.ThisLiteral evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.legend();
      dynamicSelectModel0.label("XuvvoA");
      dynamicSelectModel0.collection("XuvvoA");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Value attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }
}
