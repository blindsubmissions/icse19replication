/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:28:38 GMT 2018
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.ListIterator;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringReader stringReader0 = new StringReader("#JzP8G@tMMMsO&H(D");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.mark(0);
      JSPredicateForm jSPredicateForm1 = null;
      try {
        jSPredicateForm1 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("RQgFusnn<1et\"%O%:");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StreamTokenizer streamTokenizer0 = null;
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.2868359830561607
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("(nABg8DIO`xy`EA");
      stringReader0.reset();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.matches(jSTerm1);
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = null;
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6154194665829602
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwGlHX)f7dkmY*N");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      ListIterator listIterator0 = jSPredicateForm1.listIterator();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm1.trimToSize();
      StringReader stringReader0 = new StringReader("(VwGlHX)f7dkmY*N");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.quoteChar((-74));
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      jSTerm0.add((Object) listIterator0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) jSTerm0);
      jSSubstitution0.clear();
      JSSubstitution jSSubstitution1 = jSPredicateForm1.matches(jSPredicateForm0);
      assertFalse(jSSubstitution1.fail());
      
      jSSubstitution0.add((Object) null);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm2.applySubstitutionPF((JSSubstitution) null);
      JSPredicateForm jSPredicateForm4 = jSPredicateForm3.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm3.clone();
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution2 = jSTerm1.matches(jSPredicateForm4);
      assertTrue(jSSubstitution2.fail());
      
      boolean boolean0 = jSPredicateForm0.equals(jSPredicateForm2);
      assertEquals(10, jSPredicateForm0.capacity());
      assertTrue(boolean0);
      assertNotSame(jSPredicateForm2, jSPredicateForm4);
      assertEquals(10, jSPredicateForm2.capacity());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$*FI*Q2bi/FW<5Pg");
      char[] charArray0 = new char[5];
      charArray0[0] = '3';
      charArray0[1] = 'd';
      charArray0[2] = '`';
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.toStr();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm1.standarizerPredicateForm();
      jSTerm0.print();
      jSTerm0.matches(jSPredicateForm1);
      streamTokenizer0.ordinaryChars(5, (-1425));
      jSTerm0.matches(jSPredicateForm1);
      JSPredicateForm jSPredicateForm2 = jSTerm0.standarizerPredicateForm();
      assertNotSame(jSPredicateForm2, jSPredicateForm0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.clear();
      jSSubstitution0.add((Object) jSSubstitution0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.print();
      assertTrue(jSPredicateForm0.isEmpty());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6632950612090194
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwGlHX)f7dkmY*N");
      assertFalse(jSPredicateForm0.isEmpty());
      
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      ListIterator listIterator0 = jSPredicateForm1.listIterator();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm1.trimToSize();
      StringReader stringReader0 = new StringReader("(VwGlHX)f7dkmY*N");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.quoteChar((-74));
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      jSTerm0.add((Object) listIterator0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      boolean boolean0 = jSTerm0.equals(jSPredicateForm1);
      assertFalse(boolean0);
      
      jSSubstitution0.clear();
      JSSubstitution jSSubstitution1 = jSPredicateForm1.matches(jSPredicateForm0);
      assertFalse(jSSubstitution1.fail());
      
      jSSubstitution0.add((Object) null);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm2.applySubstitutionPF((JSSubstitution) null);
      jSPredicateForm3.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm3.clone();
      assertNotSame(jSPredicateForm2, jSPredicateForm3);
      
      JSTerm jSTerm1 = new JSTerm();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm1.standarizerPredicateForm();
      assertEquals(10, jSPredicateForm0.capacity());
      assertEquals(10, jSPredicateForm4.capacity());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1100165533754613
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "1b]");
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.toStr();
      jSPredicateForm0.toStr();
      StringReader stringReader0 = new StringReader("1b]");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSPredicateForm0.toStr();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm0.standarizerPredicateForm();
      streamTokenizer0.wordChars(60, (-803));
      JSPredicateForm jSPredicateForm2 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm2.standarizerPredicateForm();
      jSPredicateForm2.print();
      jSTerm1.matches((JSPredicateForm) jSTerm0);
      JSPredicateForm jSPredicateForm4 = jSPredicateForm1.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm5 = jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm4.clone();
      JSTerm jSTerm2 = new JSTerm();
      jSTerm0.matches(jSPredicateForm5);
      jSTerm1.equals(jSPredicateForm3);
      JSPredicateForm jSPredicateForm6 = new JSPredicateForm();
      jSPredicateForm1.matches(jSPredicateForm6, jSSubstitution0);
      JSPredicateForm jSPredicateForm7 = jSTerm1.standarizerPredicateForm();
      assertNotSame(jSPredicateForm7, jSPredicateForm5);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.504919227652643
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwGlHX)f7dkmY*N");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm1.listIterator();
      jSPredicateForm1.spliterator();
      jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm1.trimToSize();
      JSTerm jSTerm0 = new JSTerm();
      jSPredicateForm1.add(1, (Object) jSTerm0);
      jSTerm0.stream();
      jSTerm0.matches(jSPredicateForm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwGlHX)f7dkmY*N");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      ListIterator listIterator0 = jSPredicateForm1.listIterator();
      jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm1.trimToSize();
      StringReader stringReader0 = new StringReader("(VwGlHX)f7dkmY*N");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.quoteChar((-74));
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      jSTerm0.add((Object) listIterator0);
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Vector$ListItr cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0578975319224098
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwGlHX)f7dkmY*N");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm1.listIterator();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm1.trimToSize();
      JSTerm jSTerm0 = new JSTerm();
      jSPredicateForm1.add(1, (Object) jSTerm0);
      jSTerm0.stream();
      StringReader stringReader0 = new StringReader("(VwGlHX)f7dkmY*N");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.wordChars((-2435), (-2435));
      JSPredicateForm jSPredicateForm3 = jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm2.print();
      JSPredicateForm jSPredicateForm4 = new JSPredicateForm(streamTokenizer0);
      JSJshopVars.verticalL = (-2435);
      jSPredicateForm3.containsAll(jSPredicateForm0);
      jSTerm0.matches(jSPredicateForm4);
      streamTokenizer0.ordinaryChars((-2435), (-2065));
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm1.matches(jSPredicateForm3);
      // Undeclared exception!
      try { 
        jSPredicateForm1.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.377819508039033
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "1b]");
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.toStr();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      StringReader stringReader0 = new StringReader("(#a;f");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      jSTerm0.clone();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7201934592198251
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "1b]");
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.toStr();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm0.clonePF();
      StringReader stringReader0 = new StringReader("Expecting elements of the list");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.resetSyntax();
      jSTerm0.equals((JSPredicateForm) null);
      jSTerm0.print();
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.893788232391138
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwGlH)f7dkmY*N");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm1.listIterator();
      jSPredicateForm0.matches(jSPredicateForm1);
      jSPredicateForm1.spliterator();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm1.print();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.clonePF();
      jSPredicateForm2.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm3 = jSPredicateForm0.standarizerPredicateForm();
      StringReader stringReader0 = new StringReader("(VwGlH)f7dkmY*N");
      jSPredicateForm2.print();
      jSPredicateForm2.standarizerPredicateForm();
      System.setCurrentTimeMillis(17L);
      System.setCurrentTimeMillis(17L);
      jSPredicateForm3.insertElementAt("%%%", 1);
      jSPredicateForm2.standarizerPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm3.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8112075791415687
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "1b]");
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.addElement(jSTerm0);
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals(11, stringBuffer0.length());
      
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      jSTerm0.replaceAll(unaryOperator0);
      jSPredicateForm0.containsAll(jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm1.standarizerPredicateForm();
      boolean boolean0 = jSPredicateForm0.equals(jSPredicateForm3);
      assertTrue(boolean0);
      
      JSSubstitution jSSubstitution1 = jSPredicateForm2.matches(jSPredicateForm3, jSSubstitution0);
      assertFalse(jSSubstitution1.fail());
      assertNotSame(jSPredicateForm3, jSPredicateForm1);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6479184330021643
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "1b]");
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.addElement(jSTerm0);
      assertEquals(1, jSTerm0.size());
      
      jSPredicateForm0.toStr();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      jSTerm0.replaceAll(unaryOperator0);
      jSPredicateForm0.containsAll(jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.standarizerPredicateForm();
      boolean boolean0 = jSPredicateForm1.equals(jSPredicateForm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(!uVwlH)7dkm*N");
      jSPredicateForm0.addElement("call");
      // Undeclared exception!
      try { 
        jSPredicateForm0.equals(jSPredicateForm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }
}
