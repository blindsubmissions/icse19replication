/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:00:38 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.StandaloneComponent;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel((ElExpression) null, (ElExpression) null, (ElExpression) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("?>");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getValue((-1425));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = " to create a value for dynamic ISelectModel. Index was ";
      dynamicSelectModel0.collection(" to create a value for dynamic ISelectModel. Index was ");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getValue(368);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("");
      dynamicSelectModel1.reset();
      dynamicSelectModel1.collection("");
      dynamicSelectModel0.getComponent();
      dynamicSelectModel1.setComponent((Component) null);
      dynamicSelectModel0.getTopLevelComponent();
      dynamicSelectModel0.setTopLevelComponent((StandaloneComponent) null);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.label("");
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getLabel(2247);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression  evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "ap[bx}s>>1+Zkl";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("ap[bx}s>>1+Zkl");
      dynamicSelectModel1.validate();
      // Undeclared exception!
      dynamicSelectModel0.getValue((-1437));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "b>=:Of34m0U*S3fxdc";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("b>=:Of34m0U*S3fxdc");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.translator("");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.value("");
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.empty(object0);
      dynamicSelectModel0.getTopLevelComponent();
      dynamicSelectModel4.setTopLevelComponent((StandaloneComponent) null);
      dynamicSelectModel3.setTopLevelComponent((StandaloneComponent) null);
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getLabel((-425));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "unbalanced braces { }";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("unbalanced braces { }");
      String string1 = "()[Ljava/lang/reflect/Method;";
      dynamicSelectModel1.translator("unbalanced braces { }");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.collection("()[Ljava/lang/reflect/Method;");
      dynamicSelectModel0.label("unbalanced braces { }");
      // Undeclared exception!
      try { 
        dynamicSelectModel2.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Value attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "ap[bx}s>>1+Zkl";
      String string1 = "org.mvel.conversion.FloatCH$7";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("org.mvel.conversion.FloatCH$7");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Label attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("wheel.components.Block");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.translator("wheel.components.Block");
      dynamicSelectModel2.empty(dynamicSelectModel1);
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.value("wheel.components.Block");
      // Undeclared exception!
      try { 
        dynamicSelectModel3.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression wheel.components.Block evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }
}
