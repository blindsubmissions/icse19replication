/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:51:46 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-710));
      ClassWriter classWriter1 = new ClassWriter(2);
      classWriter1.newDouble(0.0);
      classWriter1.visitAnnotation(".class", false);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Signature", ".class", ".class", "Signature");
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("Lc@nn@JBDSZ4Krl=AY", true);
      fieldWriter0.visitAnnotation("1=(he&P9", false);
      fieldWriter0.visitAnnotation("1=(he&P9", true);
      fieldWriter0.visitEnd();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 131072, ".class", "1=(he&P9", "", (Object) null);
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2868726303980165
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-710));
      ClassWriter classWriter1 = new ClassWriter(2);
      classWriter1.newDouble(0.0);
      classWriter1.visitAnnotation(".class", false);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Signature", ".class", ".class", "Signature");
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("Lc@nn@JBDSZ4Krl=AY", true);
      fieldWriter0.visitAnnotation("ypgI}I", false);
      fieldWriter0.visitAnnotation("ypgI}I", true);
      Attribute attribute0 = new Attribute("Synthetic");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4184836619456564
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter.DelegateFileFilter", "", ";", "");
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("", true);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.DelegateFileFilter");
      Object object0 = new Object();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (byte)0, "qf&", "qf&", "org.apache.commons.io.filefilter.DelegateFileFilter", "U<uc\"+4");
      FieldWriter fieldWriter2 = classWriter0.firstField;
      FieldWriter fieldWriter3 = fieldWriter0.next;
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter3.put(byteVector0);
      fieldWriter1.visitAnnotation("i/Ve%sK<osD", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3522093992338284
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "", "org.apache.commons.io.filefilter.DelegateFileFilter", "org.apache.commons.io.filefilter.DelegateFileFilter", "s(Xs");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "L:]", "char", (String) null, "");
      fieldWriter1.visitEnd();
      FieldWriter fieldWriter2 = classWriter0.lastField;
      fieldWriter2.getSize();
      fieldWriter2.visitAnnotation("wheel.asm.Edge", false);
      Attribute attribute0 = new Attribute("wheel.asm.Edge");
      Attribute attribute1 = new Attribute("H$m");
      classWriter0.newDouble(943.7);
      // Undeclared exception!
      try { 
        fieldWriter1.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1447195670118664
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter.DelegateFileFilter", "", ";", "");
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation(";", true);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.DelegateFileFilter");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      Object object0 = new Object();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 131072, "U<uc\"+4", "org.apache.commons.io.filefilter.DelegateFileFilter", "U<uc\"+4", "org.apache.commons.io.filefilter.DelegateFileFilter");
      FieldWriter fieldWriter2 = classWriter0.firstField;
      FieldWriter fieldWriter3 = fieldWriter2.next;
      ByteVector byteVector0 = new ByteVector();
      fieldWriter3.put(byteVector0);
      fieldWriter1.getSize();
      // Undeclared exception!
      try { 
        fieldWriter2.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3522093992338282
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter.DelegateFileFilter", "", ";", "");
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation(";", true);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.DelegateFileFilter");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      Object object0 = new Object();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 131072, "U<uc\"+4", "org.apache.commons.io.filefilter.DelegateFileFilter", "U<uc\"+4", "org.apache.commons.io.filefilter.DelegateFileFilter");
      FieldWriter fieldWriter2 = classWriter0.firstField;
      FieldWriter fieldWriter3 = fieldWriter1.next;
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter2.put(byteVector0);
      fieldWriter0.visitAnnotation(";", true);
      int int0 = fieldWriter1.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.2700181519104903
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter.DelegateFileFilter", "", ";", "");
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("", true);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.DelegateFileFilter");
      Object object0 = new Object();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (byte)0, "qf&", "qf&", "org.apache.commons.io.filefilter.DelegateFileFilter", "U<uc\"+4");
      FieldWriter fieldWriter2 = classWriter0.firstField;
      FieldWriter fieldWriter3 = fieldWriter0.next;
      ByteVector byteVector0 = new ByteVector(0);
      fieldWriter3.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter3.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3193);
      classWriter0.visitField((-841), "w/)k:7", "w/)k:7", "N", (Object) null);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      fieldWriter0.visitAnnotation("N", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(40, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1269287948006759
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter.DelegateFileFilter", "", ";", "");
      fieldWriter0.visitEnd();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.DelegateFileFilter");
      Object object0 = new Object();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (byte)0, "qf&", "qf&", "org.apache.commons.io.filefilter.DelegateFileFilter", "U<uc\"+4");
      FieldWriter fieldWriter2 = classWriter0.firstField;
      FieldWriter fieldWriter3 = classWriter0.firstField;
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter3.put(byteVector0);
      // Undeclared exception!
      try { 
        classWriter0.visitField((byte)0, "U<uc\"+4", "|D~n:!W@>h.", "", annotationVisitor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.AnnotationWriter@c
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3193);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-15), "N", "N", "N", "N");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("8S;)%F/C@\"%o _><AA", false);
      classWriter0.newFloat(36);
      ByteVector byteVector0 = new ByteVector(3193);
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3193);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-841), "w/)k:7", "w/)k:7", "N", (Object) null);
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.visitAnnotation("N", true);
      ByteVector byteVector0 = new ByteVector(3193);
      fieldWriter0.put(byteVector0);
      assertSame(fieldWriter0, fieldWriter1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0042424730540764
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3193);
      classWriter0.version = 3193;
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-15), "N", "N", "N", "N");
      fieldWriter0.getSize();
      classWriter0.newFloat(30);
      ByteVector byteVector0 = new ByteVector(3193);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8981370031878679
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3193);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-15), "N", "N", "N", "N");
      fieldWriter0.getSize();
      classWriter0.visitField(3193, "+G?-O[wK1QG", "N", (String) null, "+G?-O[wK1QG");
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.getSize();
      ByteVector byteVector0 = new ByteVector(1066);
      ByteVector byteVector1 = new ByteVector();
      fieldWriter0.put(byteVector1);
      fieldWriter0.put(byteVector1);
      fieldWriter1.put(byteVector1);
      assertNotSame(byteVector1, byteVector0);
  }
}
