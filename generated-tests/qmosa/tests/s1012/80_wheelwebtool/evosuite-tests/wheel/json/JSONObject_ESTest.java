/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:09:51 GMT 2018
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "nC@Im{vxFCAfRLzA";
      jSONObject0.names();
      JSONObject jSONObject1 = jSONObject0.put("nC@Im{vxFCAfRLzA", 0L);
      try { 
        jSONObject1.getBoolean("nC@Im{vxFCAfRLzA");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"nC@Im{vxFCAfRLzA\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.676889873514887
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Bad value from toJSONString: ";
      Long long0 = new Long((-3618L));
      Long.sum((-3618L), (-3618L));
      JSONObject.valueToString(long0, 1, (-2642));
      stringArray0[1] = "";
      stringArray0[2] = "KjUA@s,KS{l=";
      stringArray0[3] = "*&q/FIc>ql1IzC";
      String string0 = "@#1Fi.0>g/B";
      stringArray0[4] = "@#1Fi.0>g/B";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "}iK6[LJT48B=";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      try { 
        jSONObject1.getJSONArray("*&q/FIc>ql1IzC");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"*&q/FIc>ql1IzC\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("^!]tOj8U");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of ^!]tOj8U
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Double double0 = new Double(1037.5931142336);
      Double.isFinite(1037.5931142336);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "gC";
      stringArray0[1] = "";
      stringArray0[2] = "] is not a Boolean.";
      stringArray0[3] = "";
      stringArray0[4] = "";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", false);
      StringWriter stringWriter0 = new StringWriter(2641);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "gC");
      StringWriter stringWriter2 = stringWriter1.append(']');
      stringWriter2.write(2641);
      jSONObject1.write(stringWriter2);
      jSONObject0.toString((-439), 61);
      jSONObject0.optLong("] is not a Boolean.", 1L);
      try { 
        jSONObject0.get("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "] is not a number.";
      jSONObject0.put("u2r/~p(a", false);
      jSONObject0.optLong("] is not a number.");
      try { 
        jSONObject0.getLong("N7{%p=o-/J");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"N7{%p=o-/J\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.put((String) null, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5806491250694639
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Short short0 = new Short((short)54);
      Short.toUnsignedInt((short)0);
      JSONObject jSONObject0 = new JSONObject(short0);
      Short.toUnsignedLong((short)54);
      jSONObject0.optLong("*mg49)`", 262L);
      String[] stringArray0 = JSONObject.getNames((Object) null);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "C5Qt7f$e";
      stringArray0[1] = "OL&+~+]_Zq1<vszC@";
      stringArray0[2] = "] is not a number.";
      stringArray0[3] = "<&";
      stringArray0[4] = "\r";
      stringArray0[5] = "null";
      stringArray0[6] = "wheel.json.JSONObject";
      stringArray0[7] = "1BHqpzGbQu&Dpe|l~l,";
      stringArray0[8] = "";
      JSONObject jSONObject0 = new JSONObject(boolean0, stringArray0);
      jSONObject0.optInt("OL&+~+]_Zq1<vszC@", (-129));
      jSONObject0.toString();
      jSONObject0.has("1BHqpzGbQu&Dpe|l~l,");
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.containsAll(linkedList1);
      jSONObject0.put("\r", (Collection) linkedList0);
      jSONObject0.put("", (-1L));
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "2+C=)\"d#Rp&";
      jSONObject0.put("2+C=)\"d#Rp&", (Map) hashMap0);
      jSONObject0.put("2+C=)\"d#Rp&", 729L);
      Writer writer0 = null;
      // Undeclared exception!
      try { 
        jSONObject0.write((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.994353691762369
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<Double, Byte> hashMap0 = new HashMap<Double, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "\"2e\\+$($9'i16_A+3&";
      try { 
        jSONObject0.getJSONObject("\"2e+$($9'i16_A+3&");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\"2e+$($9'i16_A+3&\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1065773332321154
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject("{}");
      String[] stringArray0 = new String[1];
      String string0 = "";
      stringArray0[0] = "";
      Object object0 = new Object();
      JSONObject jSONObject1 = jSONObject0.accumulate("L~gM0ra.8a,~&", object0);
      JSONObject jSONObject2 = new JSONObject(jSONObject0, stringArray0);
      String string1 = "";
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONObject1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray initial value should be a string or collection or array.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<Integer, Long> hashMap0 = new HashMap<Integer, Long>();
      Long long0 = new Long((-1L));
      hashMap0.getOrDefault((Object) null, long0);
      Integer integer0 = new Integer((-1889));
      Long long1 = new Long(1607L);
      hashMap0.put(integer0, long1);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.keys();
      Float float0 = new Float(0.0);
      JSONObject jSONObject1 = jSONObject0.put(">)uo=)LH", (Object) float0);
      jSONObject1.putOpt(">)uo=)LH", float0);
      Object object0 = JSONObject.NULL;
      JSONObject.getNames(object0);
      jSONObject0.optInt(">)uo=)LH");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3718061232922236
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<Byte, Byte> hashMap0 = new HashMap<Byte, Byte>();
      byte byte0 = (byte)85;
      Byte byte1 = new Byte((byte)85);
      hashMap0.putIfAbsent(byte1, byte1);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "wheel.json.JSONException";
      hashMap0.entrySet();
      JSONObject jSONObject1 = jSONObject0.append("wheel.json.JSONException", "wheel.json.JSONException");
      try { 
        jSONObject1.getJSONObject("TAv=JEe]");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"TAv=JEe]\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = null;
      JSONObject.quote((String) null);
      JSONTokener jSONTokener0 = null;
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray((JSONTokener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4105135571148382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      short short0 = (short)0;
      Short short1 = new Short((short)0);
      String[] stringArray0 = new String[1];
      String string0 = ",\n";
      Short.compare((short)0, (short)0);
      stringArray0[0] = ",\n";
      JSONObject jSONObject0 = new JSONObject(short1, stringArray0);
      Short.toUnsignedInt((short)0);
      try { 
        jSONObject0.getInt(",\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",\\n\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "\b";
      stringArray0[1] = "\b";
      stringArray0[2] = "\b";
      stringArray0[3] = "\b";
      stringArray0[4] = "\b";
      JSONObject jSONObject0 = new JSONObject("\b", stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("\b", false);
      jSONObject1.optInt("YL", 0);
      jSONObject0.isNull("kEo");
      jSONObject0.optBoolean("");
      StringWriter stringWriter0 = new StringWriter(0);
      jSONObject0.write(stringWriter0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONObject.doubleToString(0.0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "0";
      stringArray0[1] = "0";
      JSONObject jSONObject0 = new JSONObject("0", stringArray0);
      try { 
        jSONObject0.getString("0");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"0\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSONObject.doubleToString(3022.2791086);
      JSONTokener jSONTokener0 = new JSONTokener("3022.2791086");
      jSONTokener0.nextValue();
      jSONTokener0.nextValue();
      try { 
        jSONTokener0.next('g');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected 'g' and instead saw '6' at character 12 of 3022.2791086
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8464815432622113
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "C5Qt7f$e";
      stringArray0[1] = "OL&+~+]_Zq1<vszC@";
      stringArray0[1] = "] is not a number.";
      stringArray0[3] = "<&";
      stringArray0[4] = "\r";
      stringArray0[5] = "null";
      stringArray0[6] = "wheel.json.JSONObject";
      stringArray0[7] = "1BHqpzGbQu&Dpe|l~l,";
      stringArray0[8] = "";
      JSONObject jSONObject0 = new JSONObject(boolean0, stringArray0);
      Boolean boolean1 = Boolean.FALSE;
      JSONObject jSONObject1 = jSONObject0.append("zWw~Sf,Bw!", boolean1);
      jSONObject1.toString();
      try { 
        jSONObject0.getLong("OL&+~+]_Zq1<vszC@");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"OL&+~+]_Zq1<vszC@\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.434595844859482
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSONObject.doubleToString(0.0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "0";
      Short.toUnsignedInt((short)70);
      JSONObject jSONObject0 = new JSONObject((Object) "0");
      Short.toUnsignedLong((short)2064);
      JSONObject jSONObject1 = new JSONObject();
      Byte byte0 = new Byte((byte) (-53));
      String[] stringArray1 = JSONObject.getNames((Object) byte0);
      assertFalse(stringArray1.equals((Object)stringArray0));
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<Integer, Long> hashMap0 = new HashMap<Integer, Long>();
      Long long0 = new Long((-1L));
      hashMap0.getOrDefault((Object) null, long0);
      Integer integer0 = new Integer((-1889));
      Long long1 = new Long(1607L);
      hashMap0.put(integer0, long1);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.keys();
      Float float0 = new Float(0.0);
      String string0 = JSONObject.valueToString(integer0, 15, (-759));
      assertNotNull(string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0620695413001644
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HashMap<Integer, Long> hashMap0 = new HashMap<Integer, Long>();
      Long long0 = new Long((-1L));
      hashMap0.getOrDefault((Object) null, long0);
      Integer integer0 = new Integer((-1889));
      Long long1 = new Long(1607L);
      hashMap0.put(integer0, long1);
      Integer integer1 = new Integer((-313));
      BiFunction<Object, Object, Long> biFunction0 = (BiFunction<Object, Object, Long>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any() , any());
      hashMap0.compute(integer1, biFunction0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.keys();
      Float float0 = new Float(0.0);
      JSONObject jSONObject1 = jSONObject0.put(">)uo=)LH", (Object) float0);
      JSONObject jSONObject2 = jSONObject1.putOpt(">)uo=)LH", float0);
      Object object0 = JSONObject.NULL;
      JSONObject.getNames(object0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ">)uo=)LH";
      stringArray0[1] = ">)uo=)LH";
      stringArray0[2] = ">)uo=)LH";
      stringArray0[3] = ">)uo=)LH";
      JSONObject jSONObject3 = new JSONObject((Object) jSONObject2, stringArray0);
      JSONArray jSONArray0 = new JSONArray();
      jSONObject0.toJSONArray(jSONArray0);
      jSONObject3.put(">)uo=)LH", 0L);
      assertEquals(1, jSONObject3.length());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0778311526184723
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Double double0 = new Double(1037.5931142336);
      Double.isFinite(1037.5931142336);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "gC";
      String[] stringArray1 = new String[0];
      JSONObject jSONObject0 = new JSONObject("null", stringArray1);
      Boolean boolean0 = Boolean.FALSE;
      JSONObject jSONObject1 = jSONObject0.append("\"EC;MOqn- YLok\"rgO", boolean0);
      jSONObject1.toString();
      jSONObject1.toString(34, (-426));
      jSONObject1.optJSONObject((String) null);
      StringWriter stringWriter0 = new StringWriter(48);
      Writer writer0 = jSONObject0.write(stringWriter0);
      assertSame(writer0, stringWriter0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.247641689201861
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSONObject.doubleToString(0.0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "0";
      stringArray0[1] = "0";
      JSONObject jSONObject0 = new JSONObject("0", stringArray0);
      String string0 = JSONObject.doubleToString(0.0);
      assertEquals("0", string0);
      
      int int0 = jSONObject0.optInt("0");
      assertEquals(0, int0);
      
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      jSONObject1.remove("QT\"#cgT@(<1T)?^+`t");
      JSONObject.valueToString(jSONObject1, 0, 209);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "/gBjOh26J|xyU*I";
      String string1 = "A,}G%lqPd2OjLhW";
      jSONObject0.put("acc", 0.0);
      jSONObject0.optLong("/gBjOh26J|xyU*I", 94L);
      try { 
        Integer.valueOf("A,}G%lqPd2OjLhW");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"A,}G%lqPd2OjLhW\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.6290407622471201
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Bad value from toJSONString: ";
      Long long0 = new Long((-3618L));
      Long.sum((-3618L), (-3618L));
      JSONObject jSONObject1 = new JSONObject((Object) jSONObject0, stringArray0);
      String string0 = JSONObject.doubleToString((-2642));
      assertEquals("-2642", string0);
      
      Short short0 = new Short((short)368);
      JSONObject jSONObject2 = new JSONObject(short0);
      assertEquals(1, jSONObject2.length());
      
      String string1 = JSONObject.valueToString((Object) null, (-2642), (short)368);
      assertEquals("null", string1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.1819723553593535
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HashMap<Integer, Long> hashMap0 = new HashMap<Integer, Long>();
      Long long0 = new Long((-1L));
      hashMap0.getOrDefault((Object) null, long0);
      Integer integer0 = new Integer((-1889));
      Long long1 = new Long(1607L);
      hashMap0.put(integer0, long1);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.keys();
      jSONObject0.toString((-5085), 11);
      Short.compare((short) (-108), (short) (-108));
      jSONObject0.optDouble("isshortValue", (double) (-1889));
      jSONObject0.remove("fSXfg{M:r");
      jSONObject0.optLong("] is not a Boolean.");
      JSONObject.valueToString(long0, 9, (short) (-108));
      try { 
        jSONObject0.put((String) null, (Object) "] is not a Boolean.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSONObject.doubleToString(0.0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "0";
      stringArray0[1] = "0";
      JSONObject jSONObject0 = new JSONObject("0", stringArray0);
      String string0 = JSONObject.doubleToString(0.0);
      assertEquals("0", string0);
      
      jSONObject0.optInt("0");
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      jSONObject1.optInt("0");
      String string1 = jSONObject1.toString(0);
      String string2 = JSONObject.valueToString(jSONObject1, 0, 209);
      assertEquals(1, jSONObject1.length());
      assertTrue(string2.equals((Object)string1));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.419599842789112
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Short short0 = new Short((short)0);
      String[] stringArray0 = new String[1];
      Short.compare((short)0, (short)0);
      stringArray0[0] = ",\n";
      JSONObject jSONObject0 = new JSONObject(short0, stringArray0);
      JSONObject.valueToString(short0, (-424), (-424));
      jSONObject0.optInt("app", (-1184));
      HashMap<JSONObject, Float> hashMap0 = new HashMap<JSONObject, Float>();
      Float float0 = new Float((double) (-1184));
      HashMap<JSONObject, Float> hashMap1 = new HashMap<JSONObject, Float>();
      Float float1 = new Float((float) (-424));
      hashMap1.put(jSONObject0, float1);
      JSONObject jSONObject1 = new JSONObject((Map) hashMap1);
      jSONObject1.isNull(",\n");
      jSONObject0.optBoolean("*&q/FIc>ql1IzC");
      StringWriter stringWriter0 = new StringWriter(1);
      jSONObject0.write(stringWriter0);
      Float float2 = new Float((double) (short)0);
      JSONObject.valueToString(float2);
      try { 
        jSONObject0.getLong("app");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"app\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.250631017105145
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Float float0 = new Float(517.206F);
      Float.isFinite((-936.7062F));
      JSONObject.valueToString(float0, 65, 62);
      JSONObject jSONObject0 = new JSONObject(float0);
      jSONObject0.names();
      jSONObject0.optJSONArray((String) null);
      jSONObject0.toString();
      JSONObject jSONObject1 = jSONObject0.putOpt("{\"java.lang.String@0000000004\":java.lang.Boolean@0000000005,\"java.lang.String@0000000006\":java.lang.Boolean@0000000007,\"java.lang.String@0000000008\":\"java.lang.Class@0000000009\"}", float0);
      String string0 = "nam";
      jSONObject1.put("nam", false);
      try { 
        jSONObject1.getLong("java.lang.Float@0000000001");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"java.lang.Float@0000000001\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }
}
