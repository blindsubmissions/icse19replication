/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:31:02 GMT 2018
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(0, int0);
      
      int int1 = homeEnvironment0.getLightColor();
      assertEquals(13684944, int1);
      
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("VIDEO_ASPECT_RATIO", propertyChangeListener0);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(0, 13684944, (-1.0F), 2727.245F, 2727.245F, 0.0F, (-103L), camera_Lens0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(121, (HomeTexture) null, 121, 121, (-2513.0F));
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "VIDEO_ASPECT_RATIO", homeEnvironment1, object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment_Property0, "VIDEO_ASPECT_RATIO", homeEnvironment2, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setWallsAlpha(0.0F);
      assertNotSame(homeEnvironment0, homeEnvironment2);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      boolean boolean0 = false;
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("&wj=`4qh(c7UY", temporaryURLContent0, (-1.0F), 7, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, homeTexture0, 7, 7, 1.3333334F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(0);
      homeEnvironment1.getWallsAlpha();
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setSubpartSizeUnderLight(1.3333334F);
      homeEnvironment1.getGroundTexture();
      homeEnvironment1.setLightColor(7);
      assertEquals(1.3333334F, homeEnvironment1.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getSkyTexture();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("+ZklHFi4_", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor(2167);
      homeEnvironment1.getGroundColor();
      float float0 = homeEnvironment1.getWallsAlpha();
      assertEquals(2167, homeEnvironment1.getCeillingLightColor());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setVideoWidth(13684944);
      homeEnvironment0.setPhotoHeight(13684944);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setSubpartSizeUnderLight(2757.2F);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setWallsAlpha(13684944);
      String string0 = "C\"TljhTy$68+N";
      Class<Integer> class0 = Integer.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "C\"TljhTy$68+N", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource C\"TljhTy$68+N
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, resourceURLContent0, (-1.0F), (-1151.14F), (String) null, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-3647), homeTexture0, 0, 4189.8716F);
      homeEnvironment0.setVideoQuality(856);
      assertEquals(856, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(3684);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(3684);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("+~_", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoFrameRate(3684);
      homeEnvironment1.getSubpartSizeUnderLight();
      homeEnvironment0.getDrawingMode();
      assertEquals(3684, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setPhotoHeight(0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("l~l,7f={", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.getVideoCameraPath();
      HomeEnvironment.Property.values();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment1.getVideoQuality();
      homeEnvironment2.setWallsAlpha(0.0F);
      homeEnvironment2.getVideoQuality();
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment2.setAllLevelsVisible(false);
      homeEnvironment0.setPhotoWidth(0);
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("{o3T(Uq`nv.z&", (Content) null, (-341.9F), (-341.9F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("b=SVNw=[>%r+", (Content) null, 4563.0F, 4563.0F, true);
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13684944, homeTexture0, 13684944, homeTexture0, 13684944, (-341.9F));
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(13684944, int0);
      
      int int1 = homeEnvironment0.getPhotoQuality();
      assertEquals(13684944, homeEnvironment0.getSkyColor());
      assertEquals(0, int1);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals((-341.9F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1), (HomeTexture) null, (-1), (-1456), (-1));
      homeEnvironment0.setVideoWidth((-1456));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(false);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
      assertEquals((-728), int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setPhotoWidth(1019);
      homeEnvironment0.setVideoWidth((-642));
      homeEnvironment0.getSkyColor();
      int int0 = 2910;
      homeEnvironment0.setVideoQuality(2910);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getCeillingLightColor();
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture(")oD~kI%{%-q", uRLContent0, 25, 25, true);
      catalogTexture0.getCategory();
      // Undeclared exception!
      try { 
        catalogTexture0.compareTo((CatalogTexture) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.CatalogTexture", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setWallsAlpha(3539.342F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight((-689));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("OOL|jYw", resourceURLContent0, 3539.342F, 0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setLightColor((-689));
      homeEnvironment0.setVideoWidth((-689));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("OOL|jYw", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      assertEquals(3539.342F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(12, (HomeTexture) null, 12, 12, 12);
      homeEnvironment0.setCeillingLightColor(12);
      homeEnvironment0.setCeillingLightColor(12);
      assertEquals(12, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(3684);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(3684);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setVideoQuality(3684);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoFrameRate(3684);
      homeEnvironment1.getSubpartSizeUnderLight();
      homeEnvironment0.getDrawingMode();
      homeEnvironment1.isObserverCameraElevationAdjusted();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, resourceURLContent0, (-1.0F), (-1151.14F), (String) null, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(15, homeTexture0, 1, homeTexture0, (-1115), 0.0F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-1115), homeEnvironment0.getLightColor());
      assertEquals(15, homeEnvironment0.getGroundColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.458311329683084
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(3684);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(3684);
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("cq(>.g[g", uRLContent0, 3684, 3684, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(3684, homeTexture0, 7, 7, (-1.0F));
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment1.setVideoQuality(0);
      HomeEnvironment homeEnvironment4 = new HomeEnvironment();
      homeEnvironment4.setGroundColor(3459);
      HomeEnvironment homeEnvironment5 = new HomeEnvironment(3459, homeTexture0, 2253, 0, 3576.9187F);
      homeEnvironment5.getWallsAlpha();
      catalogTexture0.getCategory();
      TexturesCategory texturesCategory0 = new TexturesCategory("com.eteks.sweethome3d.model.HomeEnvironment");
      catalogTexture0.setCategory(texturesCategory0);
      homeEnvironment3.setAllLevelsVisible(true);
      homeEnvironment2.setSubpartSizeUnderLight(3576.9187F);
      HomeEnvironment homeEnvironment6 = homeEnvironment2.clone();
      homeEnvironment6.getGroundTexture();
      homeEnvironment2.setLightColor(0);
      assertEquals(3576.9187F, homeEnvironment2.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(0);
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("OOL|jYw", (Content) null, 0, 1.3684944E7F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setAllLevelsVisible(false);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setLightColor(1);
      homeEnvironment0.setVideoWidth(1129);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setAllLevelsVisible(false);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("LIGHT_COLOR", propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeTexture0, (String) null, object0, (Object) null);
      Object object1 = new Object();
      propertyChangeEvent0.setPropagationId(object1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      HomeEnvironment.Property.values();
      homeEnvironment0.setPhotoHeight(0);
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setWallsAlpha(3539.342F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight(0);
      MockURL.getHttpExample();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("OOL|jYw", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.clone();
      homeEnvironment1.getVideoCameraPath();
      HomeEnvironment.Property.values();
      homeEnvironment1.getPhotoHeight();
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setWallsAlpha(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.getVideoQuality();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode0);
      int int0 = homeEnvironment1.getPhotoWidth();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setPhotoHeight(0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("l~l,7f={", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.getVideoCameraPath();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment.Property.values();
      homeEnvironment2.getPhotoHeight();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("q@*0|)iQ", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("VIDEO_FRAME_RATE", propertyChangeListenerProxy0);
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      homeEnvironment2.setSubpartSizeUnderLight(0);
      assertEquals(0, homeEnvironment0.getPhotoHeight());
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3114234446919735
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getPhotoAspectRatio();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("OOL|jYw", resourceURLContent0, (-689), 709.8896F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setLightColor((-1073741823));
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment1.setSkyTexture(homeTexture0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getVideoQuality();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setAllLevelsVisible(false);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("W*ZJaXNt]#JC5u", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      homeEnvironment1.setSkyTexture(homeTexture1);
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment1.getPhotoAspectRatio());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(9);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setWallsAlpha(9);
      homeEnvironment0.setVideoWidth(9);
      homeEnvironment0.setVideoFrameRate(9);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoWidth();
      URL uRL0 = MockURL.getFileExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 9, 9, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", aspectRatio0, object1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getSkyColor();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getLightColor();
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.WALLS_ALPHA;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment1.setPhotoQuality(300);
      homeEnvironment1.setGroundTexture(homeTexture0);
      assertEquals(9.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(9, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9264175554979963
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(9);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setWallsAlpha(9);
      homeEnvironment0.setVideoWidth(9);
      homeEnvironment0.setVideoFrameRate(9);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoWidth();
      URL uRL0 = MockURL.getFileExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 9, 9, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", aspectRatio0, object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getSkyColor();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getLightColor();
      homeEnvironment0.setVideoFrameRate(9);
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setVideoWidth((-642));
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setVideoQuality((-2130));
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getCeillingLightColor();
      MockURL.getFtpExample();
      homeEnvironment0.setCeillingLightColor(13427964);
      homeEnvironment0.setCeillingLightColor(13684944);
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, resourceURLContent0, (-1.0F), (-1151.14F), (String) null, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-3647), homeTexture0, 0, 4189.8716F);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.setSkyColor(856);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setSkyColor(11053224);
      assertEquals(11053224, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("&wj=`4qh(c7UY", temporaryURLContent0, (-1625.8F), (-1625.8F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("Z(Z+", temporaryURLContent0, (-1.0F), 9, false);
      catalogTexture1.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(9, homeTexture0, 9, 9, (-1.0F));
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment1.setGroundColor(9);
      homeEnvironment1.getWallsAlpha();
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment2.setAllLevelsVisible(true);
      homeEnvironment1.setSubpartSizeUnderLight(24.300295F);
      homeEnvironment0.getGroundTexture();
      homeEnvironment2.setLightColor(6);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      Random.setNextRandom(6);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5400363038209806
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(44);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setWallsAlpha(44);
      homeEnvironment0.setVideoWidth(44);
      homeEnvironment0.setVideoFrameRate(44);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoWidth();
      MockURL.getFileExample();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setSkyColor(44);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setSkyColor(21);
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9785084205272367
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(44);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setWallsAlpha(44);
      homeEnvironment0.setVideoWidth(44);
      homeEnvironment0.setVideoFrameRate(44);
      AspectRatio aspectRatio1 = homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoWidth();
      URL uRL0 = MockURL.getFileExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 44, 44, true);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", aspectRatio0, object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getSkyColor();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getLightColor();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals(44, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(44);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setWallsAlpha(44);
      homeEnvironment0.setVideoWidth(44);
      homeEnvironment0.setVideoFrameRate(44);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoWidth();
      URL uRL0 = MockURL.getFileExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 44, 44, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", aspectRatio0, object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setVideoWidth(44);
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
  }
}
