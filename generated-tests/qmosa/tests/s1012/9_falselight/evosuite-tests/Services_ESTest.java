/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:00:38 GMT 2018
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Services services0 = new Services();
      Services.testSMTP("", 1910);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("", 1803);
      services_SIMPLE_Result0.Error = "";
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testSMTP("", 2345);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("%D DXgDtqQ8+SdX&+*", 1352);
      services_SIMPLE_Result0.works = false;
      services_SIMPLE_Result1.Error = "";
      services_HTTP_Result0.reset();
      services_HTTP_Result0.reset();
      services_HTTP_Result0.toString();
      Services.testHTTPS("1'WZp#n,VZsoxWkOk)2", 0);
      Services.testSMTP("(kYp-e=t ", 1);
      services_SIMPLE_Result0.toString();
      services_SIMPLE_Result1.works = false;
      services_SIMPLE_Result0.Error = "**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****";
      services_SIMPLE_Result0.toString();
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      services_SIMPLE_Result1.reset();
      assertFalse(services_SIMPLE_Result1.works);
      
      String string1 = services_SIMPLE_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : **** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****.\n****", string1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Services.testSMTP(" octzts~", 2020);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http:// octzts~:2020");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, " octzts~");
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3(" octzts~", 2020);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
      
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP(" octzts~", 2020);
      assertEquals(9, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("", (-50));
      services_HTTP_Result0.works = true;
      Services services0 = new Services();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "l");
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("**URL Mal Form\u00E9** (java.net.MalformedURLException: Invalid port number :-50) **", (-50));
      Services.testHTTPS("**URL Mal Form\u00E9** (java.net.MalformedURLException: Invalid port number :-50) **", 0);
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("x2N7{%p=o-/J", 0);
      assertFalse(services_HTTP_Result1.works);
      assertEquals(0, services_HTTP_Result1.page_weight);
      assertEquals(0L, services_HTTP_Result1.time);
      assertEquals(0, services_HTTP_Result1.code);
      
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testPOP3("", 0);
      services_SIMPLE_Result1.works = false;
      Services.testPOP3("**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@6efddaa8) **", 0);
      services_SIMPLE_Result1.toString();
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTPS("", 0);
      assertTrue(services_HTTP_Result2.works);
      assertEquals(2, services_HTTP_Result2.page_weight);
      
      Services.testPOP3("**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@931de4a2) **", 1053);
      services_SIMPLE_Result0.reset();
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }
}
