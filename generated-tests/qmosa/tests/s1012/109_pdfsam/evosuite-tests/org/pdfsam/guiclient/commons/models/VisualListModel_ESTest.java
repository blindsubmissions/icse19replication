/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:30:33 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.image.BufferedImage;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import javax.swing.JComboBox;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(0);
      visualListModel0.subList(0, 0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) hashSet0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      visualListModel0.reverseElements(intArray0);
      assertEquals(4, intArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = (-1475);
      intArray0[2] = 0;
      intArray0[3] = (-1482);
      intArray0[4] = (-614);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.getElements();
      int int0 = (-2976);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-2976), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2976
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-1279), (-1279), false);
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      visualListModel0.removeElements((-1279), (-1279), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements(256, (Collection<VisualPageListItem>) linkedList0);
      int[] intArray0 = new int[6];
      intArray0[0] = (-90);
      intArray0[1] = 256;
      intArray0[2] = 256;
      intArray0[3] = 256;
      intArray0[4] = (-1169);
      intArray0[5] = 256;
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9072839993213795
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.getValidElements();
      visualListModel0.subList(0, 2479);
      int[] intArray0 = new int[7];
      intArray0[0] = 2479;
      intArray0[1] = 2479;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 2510;
      intArray0[6] = 2479;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.subList((-2180), 415, true);
      visualListModel0.moveDownIndex(360);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-2180));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2180
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1990;
      intArray0[4] = 0;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 3005;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(3005, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 3005
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-3815);
      int int1 = 0;
      visualListModel0.subList((-3815), 0, true);
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getSize();
      int int2 = (-727);
      visualListModel0.subList((-1), (-727), true);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      visualListModel0.addAllElements((-727), collection0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.clearData();
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(collection0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      visualListModel0.elementsChanged();
      intArray0[0] = 0;
      visualListModel0.clearData();
      intArray0[1] = 0;
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      intArray0[2] = (-4713);
      intArray0[3] = 256;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.addAllElements(collection0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(874, (-229), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = (-2802);
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[8];
      Object[][] objectArray0 = new Object[2][9];
      objectArray0[0] = (Object[]) defaultTableModelArray0;
      Object[] objectArray1 = new Object[4];
      objectArray1[0] = (Object) visualListModel0;
      objectArray1[1] = (Object) (-2802);
      objectArray1[2] = (Object) (-2802);
      objectArray1[3] = (Object) (-2802);
      objectArray0[1] = objectArray1;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, defaultTableModelArray0);
      defaultTableModelArray0[0] = defaultTableModel0;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(0, 0);
      defaultTableModelArray0[1] = defaultTableModel1;
      DefaultTableModel defaultTableModel2 = new DefaultTableModel();
      defaultTableModelArray0[2] = defaultTableModel2;
      DefaultTableModel defaultTableModel3 = new DefaultTableModel(0, 0);
      defaultTableModelArray0[3] = defaultTableModel3;
      Vector<String> vector0 = new Vector<String>();
      DefaultTableModel defaultTableModel4 = new DefaultTableModel(vector0, 116);
      defaultTableModelArray0[4] = defaultTableModel4;
      DefaultTableModel defaultTableModel5 = new DefaultTableModel(vector0, vector0);
      defaultTableModelArray0[5] = defaultTableModel5;
      DefaultTableModel defaultTableModel6 = new DefaultTableModel(vector0, vector0);
      defaultTableModelArray0[6] = defaultTableModel6;
      DefaultTableModel defaultTableModel7 = new DefaultTableModel(vector0, vector0);
      defaultTableModelArray0[7] = defaultTableModel7;
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultTableModelArray0);
      visualListModel0.addListDataListener(jComboBox0);
      intArray0[1] = (-1211);
      visualListModel0.moveUpIndexes(intArray0);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.prependAllElements(arrayDeque0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.getElementAt(0);
      visualListModel0.clearData();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, "DEGREES_90");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = (-1230);
      visualListModel0.moveUpIndex((-1230));
      intArray0[1] = 274;
      intArray0[2] = (-106);
      intArray0[3] = (-3596);
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 2182;
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(2, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      visualListModel0.elementsChanged();
      intArray0[0] = 14;
      visualListModel0.clearData();
      intArray0[1] = 0;
      boolean boolean0 = false;
      visualListModel0.subList(0, 14, false);
      intArray0[2] = (-4713);
      intArray0[3] = 256;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(14);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9251211907908181
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.getValidElements();
      visualListModel0.subList(0, 2479);
      int[] intArray0 = new int[7];
      intArray0[0] = 2479;
      intArray0[1] = 2479;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 2510;
      intArray0[6] = 2479;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.subList((-2180), 415, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndex((-229));
      visualListModel1.getElementAt(2510);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(534);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      visualListModel0.elementsChanged();
      intArray0[0] = 0;
      visualListModel0.clearData();
      intArray0[1] = 0;
      visualListModel0.subList(0, 0, false);
      intArray0[2] = (-4713);
      visualListModel0.removeElements(256, 0, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-1);
      intArray0[1] = (-1032);
      intArray0[2] = (-1);
      visualListModel0.elementsChanged();
      intArray0[3] = (-2130);
      intArray0[4] = 1448;
      intArray0[5] = (-2130);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveDownIndex(360);
      visualListModel0.removeElements((-1), (-229), false);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndex(2479);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.removeElements(intArray0, true);
      assertEquals(6, intArray0.length);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      int int0 = (-6);
      visualListModel0.elementsChanged();
      intArray0[0] = (-6);
      visualListModel0.clearData();
      intArray0[1] = 0;
      visualListModel0.getValidElements();
      visualListModel0.addAllElements(1208, (Collection<VisualPageListItem>) null);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-6), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-6)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0198149924929463
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = (-1230);
      visualListModel0.moveUpIndex((-1230));
      intArray0[1] = 274;
      intArray0[2] = (-106);
      intArray0[3] = (-3596);
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 2182;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.subList(2, 15);
      visualListModel0.addAllElements((-3771), (Collection<VisualPageListItem>) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndexes(intArray0);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel1.prependAllElements((Collection<VisualPageListItem>) null);
      assertNotSame(visualListModel1, visualListModel0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-3815);
      int int1 = 0;
      visualListModel0.subList((-3815), 0, true);
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getSize();
      int int2 = (-727);
      // Undeclared exception!
      try { 
        visualListModel0.subList(11, (-727), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(11) > toIndex(-727)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 5;
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveDownIndex(882);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndex((-1));
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(5, 0, 874);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 874
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-3815), 0, true);
      int[] intArray0 = new int[0];
      int int0 = (-434);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.removeElements(intArray0, false);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-1), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-3815);
      int int1 = 0;
      visualListModel0.subList((-3815), 0, true);
      int[] intArray0 = new int[0];
      visualListModel0.getSize();
      int int2 = (-727);
      visualListModel0.subList((-1), (-727), true);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      visualListModel0.addAllElements((-727), collection0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.clearData();
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      int int3 = 1029;
      visualListModel0.moveDownIndexes(intArray0);
      int int4 = 2831;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-1), "org.pdfsam.guiclient.commons.models.VisualListModel");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      int int0 = (-1);
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      int int1 = (-3815);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-3815));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4336989513854284
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.moveUpIndex(0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) hashSet0);
      int[] intArray0 = new int[4];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>(stack0);
      visualListModel0.removeListDataListener(jComboBox0);
      intArray0[0] = 0;
      visualListModel0.getValidElements();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements(collection0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateClockwiseElements(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel1.setData((Vector<VisualPageListItem>) stack0);
      assertTrue(stack0.empty());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.prependAllElements(stack0);
      visualListModel0.updateElementAt(10000, (VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel1.subList(1238, 35, false);
      visualListModel1.getElements();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.subList(1084, 1238);
      visualListModel1.addAllElements(35, (Collection<VisualPageListItem>) null);
      visualListModel2.addElement((VisualPageListItem) null);
      visualListModel2.elementsChanged();
      visualListModel1.subList(0, 1769);
      Vector<VisualPageListItem> vector0 = visualListModel2.data;
      visualListModel0.setData(vector0);
      // Undeclared exception!
      try { 
        visualListModel2.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.updateElementAt(10000, (VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.subList(1238, 35, false);
      visualListModel0.getElements();
      visualListModel0.subList(1084, 1238);
      visualListModel1.addAllElements(35, (Collection<VisualPageListItem>) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel1.subList(0, 1769);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      assertEquals(10, vector0.capacity());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.9722469794234416
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndex(4087);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndex(4087);
      visualListModel1.elementsChanged();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.updateElementAt(4087, (VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel1.moveUpIndex((-1));
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) vector0);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem((-1593));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(arrayList0);
      int int0 = (-724);
      visualListModel0.removeElements(1401, (-724), false);
      visualListModel0.removeElements((-724), 1401, true);
      int int1 = 2243;
      visualListModel0.addElementAt((VisualPageListItem) null, 1401);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      // Undeclared exception!
      try { 
        priorityQueue0.add((VisualPageListItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PriorityQueue", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getSize();
      int int0 = 1000;
      int int1 = 40000;
      visualListModel1.moveDownIndex(40000);
      VisualPageListItem visualPageListItem0 = null;
      Class<BasicTreeUI.TreeExpansionHandler> class0 = BasicTreeUI.TreeExpansionHandler.class;
      visualListModel0.getListeners((Class) class0);
      int int2 = 1;
      VisualListModel visualListModel2 = new VisualListModel();
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel1.moveDownIndex(0);
      // Undeclared exception!
      try { 
        visualListModel1.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.moveUpIndex(0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      hashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) hashSet0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) hashSet0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.removeElements(intArray0, true);
      visualListModel1.getListDataListeners();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.undeleteElements(intArray0);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5229550675313182
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      visualListModel0.moveUpIndexes(intArray0);
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 2
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.720193459219825
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      Object object0 = new Object();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getElements();
      visualListModel1.moveUpIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      int[] intArray1 = new int[1];
      intArray1[0] = (-6506);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray1);
      try { 
        visualListModel0.undeleteElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -6506
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8200759753606213
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.updateElementAt(20, (VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 20);
      visualListModel0.moveUpIndex(1);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 20;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 20;
      visualListModel1.moveDownIndexes(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 20;
      visualListModel1.moveDownIndexes(intArray1);
      try { 
        visualListModel0.removeElements(intArray1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 20
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9915093613566137
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.subList(46, 813, false);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.getListDataListeners();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.reverseElements(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel2.moveDownIndexes(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8065071652616695
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.removeElements(0, 0, true);
      visualListModel0.addElementAt((VisualPageListItem) null, (-406));
      visualListModel0.moveDownIndex(0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9085352816435601
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.removeElements(0, 0, false);
      visualListModel0.addElementAt((VisualPageListItem) null, (-406));
      visualListModel0.moveDownIndex(0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.updateElementAt(1059, (VisualPageListItem) null);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-406);
      visualListModel0.undeleteElements(intArray0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.2686052856349663
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.removeElements((-229), (-229), true);
      visualListModel1.removeElements(intArray0, false);
      visualListModel0.reverseElements(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel0.subList(0, 0, true);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.9722469794234416
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.updateElementAt(20, (VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 20);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveUpIndex(1);
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 20;
      visualListModel0.moveDownIndexes(intArray0);
      int int0 = visualListModel0.getSize();
      assertEquals(2, int0);
  }
}
