/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:01:58 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SupportingDocument_ESTest extends SupportingDocument_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("");
      supportingDocument0.clone();
      supportingDocument0.setFileName("");
      supportingDocument0.setIsNewRecord(false);
      int int0 = 0;
      supportingDocument0.setIdentifier(0);
      supportingDocument0.getDisplayName();
      supportingDocument0.setFilePath("");
      String string0 = "^!OgPMk<A^\\;&";
      supportingDocument0.setFilePath("^!OgPMk<A^;&");
      supportingDocument0.setFilePath("");
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setTitle("SXt4W4z{%zKh!IK ");
      supportingDocument0.setDescription("-");
      boolean boolean0 = true;
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setFilePath("SXt4W4z{%zKh!IK ");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setPostCode("OS+)PuDqQYjoe<y02");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setIdentifier(0);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      supportingDocument0.getFilePath();
      supportingDocument1.getFilePath();
      supportingDocument0.setIdentifier((-2997));
      assertEquals("-2997", supportingDocument0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.setDocumentCode("0");
      boolean boolean0 = true;
      supportingDocument0.setIsNewRecord(true);
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setFileName("eO>i5(KP}&wj");
      supportingDocument0.setFilePath("eO>i5(KP}&wj");
      assertFalse(supportingDocument0.isNewRecord());
      
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.getFileName();
      supportingDocument0.getIdentifier();
      supportingDocument0.isNewRecord();
      supportingDocument0.getTitle();
      assertTrue(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6922911526766296
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setFileName("qd]%/\"#vw:9qGST");
      supportingDocument0.setFilePath("gX:tr!Y");
      User user0 = new User();
      user0.clone();
      user0.setAddressLine2("qd]%/\"#vw:9qGST");
      user0.setCounty("macaw.system.ChangeEventType");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("gX:tr!Y");
      user0.setCity("macaw.system.ChangeEventType");
      supportingDocument0.setIdentifier(2062);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.getDisplayName();
      boolean boolean0 = true;
      supportingDocument1.setIsNewRecord(true);
      int int0 = (-1170);
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.458311329683084
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("supportingDocument.title.label");
      supportingDocument0.setIdentifier(0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setFileName("T4");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDocumentCode("qd]%/\"#vw:9qGS");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setIdentifier((-2021161078));
      supportingDocument0.setDocumentCode("qd]%/\"#vw:9qGS");
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument3);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3693821196946767
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = supportingDocument0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      supportingDocument0.setDocumentCode("0");
      supportingDocument0.setTitle("0");
      supportingDocument0.setTitle("0");
      User user0 = new User("qd]%/\"#vw:9qGS", "_p~z");
      user0.clone();
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      assertEquals(0, arrayList0.size());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      assertEquals(2, arrayList1.size());
      
      supportingDocument0.getFilePath();
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals(0, supportingDocument0.getIdentifier());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.488327743368588
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.setDocumentCode("0");
      supportingDocument0.setTitle("0");
      supportingDocument0.clone();
      supportingDocument0.setTitle("0");
      supportingDocument0.setDescription("0");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("J)x%bm2r})U&\"cC>]");
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7072697097848133
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.setDocumentCode("0");
      supportingDocument0.setTitle("0");
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument0.setTitle("0");
      supportingDocument0.setDescription("0");
      supportingDocument0.getDescription();
      User user0 = new User("0", (String) null);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument2);
      supportingDocument1.setDescription("0");
      supportingDocument1.setFilePath("0 .ae6ad{5xl");
      assertEquals("0", supportingDocument1.getDocumentCode());
      
      supportingDocument1.setDocumentCode("0");
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("0", supportingDocument1.getTitle());
      
      User user1 = new User("W$T6\"[Q^8gl1USPYN", "UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE");
      User user2 = new User("", "supportingDocument.title.label");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user2, supportingDocument3, supportingDocument0);
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals(3, arrayList0.size());
      assertFalse(supportingDocument0.isNewRecord());
  }
}
