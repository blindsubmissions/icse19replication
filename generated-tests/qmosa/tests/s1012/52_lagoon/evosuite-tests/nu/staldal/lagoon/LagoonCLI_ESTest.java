/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:09:34 GMT 2018
 */

package nu.staldal.lagoon;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import nu.staldal.lagoon.LagoonCLI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LagoonCLI_ESTest extends LagoonCLI_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LagoonCLI lagoonCLI0 = new LagoonCLI();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "=";
      stringArray0[1] = "M]^cO]zpgAA j";
      stringArray0[2] = "Ve)-j3Rex2TxPXTb+";
      stringArray0[3] = "Password is required but not specified";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "6'4";
      LagoonCLI.main(stringArray0);
      String[] stringArray1 = new String[4];
      stringArray1[0] = ".AIm^!OgPMk<A^";
      stringArray1[1] = "Exiting Lagoon...";
      stringArray1[2] = "";
      stringArray1[3] = "Zp#n,VZsoxW";
      LagoonCLI.main(stringArray1);
      String[] stringArray2 = new String[2];
      stringArray2[0] = "";
      stringArray2[1] = "";
      LagoonCLI.main(stringArray2);
      String[] stringArray3 = new String[1];
      stringArray3[0] = "nu.staldal.lagoon.core.LagoonException";
      LagoonCLI.main(stringArray3);
      String[] stringArray4 = new String[0];
      LagoonCLI.main(stringArray4);
      LagoonCLI.main(stringArray4);
      LagoonCLI.main(stringArray4);
      LagoonCLI.main(stringArray1);
      LagoonCLI.main(stringArray1);
      LagoonCLI.main(stringArray2);
      assertFalse(stringArray2.equals((Object)stringArray4));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LagoonCLI lagoonCLI0 = new LagoonCLI();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Ready";
      stringArray0[1] = "nu.staldal.lagoon.core.AuthenticationMissingException";
      stringArray0[2] = "nu.staldal.lagoon.LagoonCLI";
      LagoonCLI.main(stringArray0);
      String[] stringArray1 = new String[9];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = "VN_";
      stringArray1[3] = "nu.staldal.lagoon.core.AuthenticationException";
      stringArray1[4] = "nu.staldal.lagoon.core.AuthenticationMissingException";
      stringArray1[5] = " s";
      stringArray1[6] = ">D%R'>d1,FA}roDNWxd";
      stringArray1[7] = "yQzc";
      stringArray1[8] = "nu.staldal.lagoon.core.AuthenticationException";
      LagoonCLI.main(stringArray1);
      String[] stringArray2 = new String[2];
      stringArray2[0] = "nu.staldal.lagoon.core.LagoonException";
      stringArray2[1] = "force";
      LagoonCLI.main(stringArray2);
      String[] stringArray3 = null;
      // Undeclared exception!
      try { 
        LagoonCLI.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("nu.staldal.lagoon.LagoonCLI", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.24493002679463532
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LagoonCLI lagoonCLI0 = new LagoonCLI();
      String[] stringArray0 = new String[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[0] = "nu.staldal.xtree.NodeWithChildren";
      LagoonCLI.main(stringArray0);
      String[] stringArray1 = new String[5];
      stringArray1[0] = "dseX";
      stringArray1[1] = "I:7ntZ'v";
      stringArray1[2] = "e]5\"3BO^Uc";
      stringArray1[3] = "r8gVZ~J .San!j*5F";
      stringArray1[4] = "<K[Ma],*Dp\f%X>";
      LagoonCLI.main(stringArray1);
      String[] stringArray2 = new String[5];
      stringArray2[0] = "sourceDir.sitemap";
      stringArray2[1] = "build";
      stringArray2[2] = "";
      stringArray2[3] = "C@";
      stringArray2[4] = "Lagoon initialized successfully";
      LagoonCLI.main(stringArray1);
      LagoonCLI.main(stringArray2);
      LagoonCLI.main(stringArray2);
      assertEquals(5, stringArray2.length);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "PF5aA)bPOz#50=7a";
      stringArray0[1] = "3";
      stringArray0[2] = "nu.staldal.lagoon.core.LagoonException";
      stringArray0[3] = "sitemapFile";
      stringArray0[4] = "";
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      assertEquals(5, stringArray0.length);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LagoonCLI lagoonCLI0 = new LagoonCLI();
      String[] stringArray0 = new String[1];
      stringArray0[0] = " s.xml";
      LagoonCLI.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.44375728426014843
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LagoonCLI lagoonCLI0 = new LagoonCLI();
      String[] stringArray0 = new String[1];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("nu.staldal.xtree.Node");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-99);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-79);
      byteArray0[3] = (byte) (-106);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-116);
      byteArray0[6] = (byte)63;
      byteArray0[7] = (byte) (-1);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      stringArray0[0] = "ree.Node";
      LagoonCLI.main(stringArray0);
      String[] stringArray1 = new String[0];
      LagoonCLI.main(stringArray1);
      String[] stringArray2 = new String[1];
      stringArray2[0] = "nu.staldal.xtree.Node";
      LagoonCLI.main(stringArray2);
      String[] stringArray3 = new String[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray3[0] = "nu.staldal.xtree.NodeWithChildren";
      LagoonCLI.main(stringArray3);
      String[] stringArray4 = new String[5];
      stringArray4[1] = "I:7ny5iPtZv";
      stringArray4[2] = "e]5\"3BO^Uc";
      stringArray4[3] = "r8gVZ~J .San!j*5F";
      stringArray4[4] = "<K[Ma],*Dp\f%X>";
      LagoonCLI.main(stringArray4);
      String[] stringArray5 = new String[5];
      stringArray5[0] = "sourceDir.sitemap";
      stringArray5[1] = "build";
      stringArray5[2] = "";
      stringArray5[3] = "C@";
      stringArray5[4] = "Lago3n initialized successfully";
      LagoonCLI.main(stringArray4);
      LagoonCLI.main(stringArray5);
      assertFalse(stringArray5.equals((Object)stringArray1));
  }
}
