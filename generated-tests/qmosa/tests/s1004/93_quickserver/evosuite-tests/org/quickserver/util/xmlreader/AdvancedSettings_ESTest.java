/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 10:30:05 GMT 2018
 */

package org.quickserver.util.xmlreader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.quickserver.util.xmlreader.AdvancedSettings;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AdvancedSettings_ESTest extends AdvancedSettings_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setBacklog((-1));
      advancedSettings0.setClientIdentifier("??:FQ");
      advancedSettings0.setDebugNonBlockingMode(true);
      assertEquals("??:FQ", advancedSettings0.getClientIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketSendBufferSize((-2924));
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.setSocketLinger((-139));
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.setClientIdentifier((String) null);
      advancedSettings0.setPerformancePreferencesLatency((-2924));
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setMaxThreadsForNioWrite((-139));
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.setPerformancePreferencesConnectionTime(1);
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.setClientSocketReceiveBufferSize((-139));
      assertTrue(advancedSettings0.getDebugNonBlockingMode());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientIdentifier("</max-threads-for-nio-write>\n");
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setBacklog(0);
      advancedSettings0.setPerformancePreferencesLatency(0);
      advancedSettings0.setQSObjectPoolMaker("");
      advancedSettings0.toXML((String) null);
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.getPerformancePreferencesBandwidth();
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.toXML("");
      int int0 = advancedSettings0.getBacklog();
      assertEquals("</max-threads-for-nio-write>\n", advancedSettings0.getClientIdentifier());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setPerformancePreferencesConnectionTime(0);
      advancedSettings0.getQSObjectPoolMaker();
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("org.quickserver.util.pool.MakeQSObjectPool");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // org.quickserver.util.pool.MakeQSObjectPool
         //
         verifyException("org.quickserver.util.xmlreader.AdvancedSettings", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setCharset("");
      advancedSettings0.setBacklog(0);
      advancedSettings0.setBacklog(0);
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("VXP)k(<7S7");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // VXP)k(<7S7
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.0448204824645764
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketSendBufferSize(434);
      advancedSettings0.toXML((String) null);
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.setBacklog((-372));
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.getBacklog();
      int int0 = advancedSettings0.getSocketLinger();
      assertEquals(434, advancedSettings0.getClientSocketSendBufferSize());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketTrafficClass("5JW'");
      advancedSettings0.setUseDirectByteBuffer(true);
      int int0 = advancedSettings0.getSocketLinger();
      assertTrue(advancedSettings0.getUseDirectByteBuffer());
      assertEquals(65536, advancedSettings0.getByteBufferSize());
      assertEquals(0, advancedSettings0.getPerformancePreferencesLatency());
      assertEquals((-1), int0);
      assertEquals(0, advancedSettings0.getPerformancePreferencesBandwidth());
      assertEquals("org.quickserver.net.server.impl.OptimisticClientIdentifier", advancedSettings0.getClientIdentifier());
      assertEquals("ISO-8859-1", advancedSettings0.getCharset());
      assertEquals(0, advancedSettings0.getBacklog());
      assertEquals(10, advancedSettings0.getMaxThreadsForNioWrite());
      assertFalse(advancedSettings0.getClientSocketTcpNoDelay());
      assertEquals(0, advancedSettings0.getPerformancePreferencesConnectionTime());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setCharset("");
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.setPerformancePreferencesConnectionTime(0);
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.toXML("");
      advancedSettings0.setClientIdentifier("tB%[^C?k2Q\"&");
      advancedSettings0.setPerformancePreferencesBandwidth((-1976));
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.setQSObjectPoolMaker((String) null);
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.setCharset("");
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.setClientSocketSendBufferSize((-1395));
      advancedSettings0.setClientSocketSendBufferSize((-1395));
      advancedSettings0.getPerformancePreferencesBandwidth();
      advancedSettings0.getBacklog();
      advancedSettings0.setClientSocketReceiveBufferSize((-1976));
      advancedSettings0.setPerformancePreferencesLatency((-1976));
      int int0 = advancedSettings0.getPerformancePreferencesConnectionTime();
      assertEquals((-1395), advancedSettings0.getClientSocketSendBufferSize());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.0315905757832313
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketReceiveBufferSize(5424);
      advancedSettings0.toXML("vQ#di-pJ8cU*>g ");
      advancedSettings0.setPerformancePreferencesLatency(5424);
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setClientSocketReceiveBufferSize(0);
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.setClientSocketReceiveBufferSize(5424);
      advancedSettings0.getClientIdentifier();
      int int0 = advancedSettings0.getByteBufferSize();
      assertEquals(5424, advancedSettings0.getPerformancePreferencesLatency());
      assertEquals(65536, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.912494403331052
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getUseDirectByteBuffer();
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.setClientSocketSendBufferSize(565);
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.setBacklog(0);
      advancedSettings0.setPerformancePreferencesConnectionTime(1193);
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.setQSObjectPoolMaker("");
      advancedSettings0.setPerformancePreferencesConnectionTime((-1578));
      advancedSettings0.setClientSocketSendBufferSize(10);
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.getPerformancePreferencesBandwidth();
      advancedSettings0.setBacklog(0);
      advancedSettings0.setByteBufferSize(10);
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.getMaxThreadsForNioWrite();
      advancedSettings0.setCharset("");
      advancedSettings0.setPerformancePreferencesConnectionTime((-1));
      advancedSettings0.setPerformancePreferencesBandwidth(0);
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.setClientSocketReceiveBufferSize(0);
      assertTrue(advancedSettings0.getDebugNonBlockingMode());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.toXML("");
      advancedSettings0.setMaxThreadsForNioWrite((-1931));
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setPerformancePreferencesConnectionTime((-946));
      advancedSettings0.setQSObjectPoolMaker("");
      advancedSettings0.setByteBufferSize((-1931));
      advancedSettings0.toXML("");
      advancedSettings0.setClientSocketReceiveBufferSize((-946));
      advancedSettings0.setDebugNonBlockingMode(false);
      advancedSettings0.setCharset((String) null);
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.setPerformancePreferencesBandwidth(0);
      assertEquals((-946), advancedSettings0.getClientSocketReceiveBufferSize());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.2238860684913115
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setPerformancePreferencesBandwidth(1618);
      advancedSettings0.setBacklog((-2335));
      advancedSettings0.setPerformancePreferencesLatency(371);
      advancedSettings0.setByteBufferSize((-2335));
      int int0 = 0;
      advancedSettings0.setPerformancePreferencesBandwidth(0);
      advancedSettings0.setDebugNonBlockingMode(false);
      String string0 = "Qjm?W";
      advancedSettings0.setClientIdentifier("C55?");
      advancedSettings0.setClientSocketTrafficClass("Qjm?W");
      String string1 = ";cXM6";
      advancedSettings0.setPerformancePreferencesLatency(371);
      advancedSettings0.toXML(";cXM6");
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset(";cXM6");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // ;cXM6
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.0870423502280264
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setQSObjectPoolMaker("</performance-preferences-latency>\n");
      advancedSettings0.toXML("=]Cj1{sL4R$p5");
      advancedSettings0.getUseDirectByteBuffer();
      advancedSettings0.toXML("K;)+G.(ICS");
      advancedSettings0.setPerformancePreferencesBandwidth((-462));
      advancedSettings0.setQSObjectPoolMaker("</performance-preferences-latency>\n");
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.getCharset();
      advancedSettings0.setPerformancePreferencesLatency((-151));
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.setCharset("ISO-8859-1");
      int int0 = advancedSettings0.getPerformancePreferencesConnectionTime();
      assertEquals((-462), advancedSettings0.getPerformancePreferencesBandwidth());
      assertEquals(0, int0);
  }
}
