/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:38:40 GMT 2018
 */

package nu.staldal.lagoon;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import nu.staldal.lagoon.LagoonCLI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LagoonCLI_ESTest extends LagoonCLI_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LagoonCLI lagoonCLI0 = new LagoonCLI();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "/v)H6*H%w";
      stringArray0[1] = "A@y'pU6j";
      stringArray0[2] = "zk7A3$";
      stringArray0[3] = "[c~t8Q|sTZ[]~u`62Z";
      LagoonCLI.main(stringArray0);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "targetURL";
      stringArray1[1] = "";
      stringArray1[2] = "#U??:FQiP#-K6";
      stringArray1[3] = "FYAfck,7%9";
      stringArray1[4] = "PPOh.}8n}T\"J{v'";
      stringArray1[5] = "]]HgJM2J";
      stringArray1[6] = "";
      stringArray1[7] = "|O\"F<g";
      LagoonCLI.main(stringArray1);
      assertFalse(stringArray1.equals((Object)stringArray0));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LagoonCLI lagoonCLI0 = new LagoonCLI();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "Force building website...";
      stringArray0[2] = "";
      stringArray0[3] = "<bvQ:Y><)I";
      LagoonCLI.main(stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "";
      LagoonCLI.main(stringArray1);
      String[] stringArray2 = new String[1];
      stringArray2[0] = "$s|?N3$J@$m";
      LagoonCLI.main(stringArray2);
      String[] stringArray3 = new String[4];
      stringArray3[0] = "";
      stringArray3[1] = "";
      stringArray3[2] = "";
      stringArray3[3] = "";
      LagoonCLI.main(stringArray3);
      LagoonCLI.main(stringArray3);
      LagoonCLI.main(stringArray3);
      LagoonCLI.main(stringArray2);
      LagoonCLI.main(stringArray2);
      assertFalse(stringArray2.equals((Object)stringArray3));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[0];
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI lagoonCLI0 = new LagoonCLI();
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      String[] stringArray1 = new String[5];
      stringArray1[0] = "fz>=Z)iE9";
      stringArray1[1] = "7m9zQ\"E<!r9?!~4<|";
      stringArray1[2] = "";
      stringArray1[3] = "Property ";
      stringArray1[4] = "org.apache.log.output.io.rotate.BaseFileNameFilter";
      LagoonCLI.main(stringArray1);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray1);
      assertEquals(5, stringArray1.length);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "build";
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI lagoonCLI0 = new LagoonCLI();
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "b>@r.xml";
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.2868359830561607
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LagoonCLI lagoonCLI0 = new LagoonCLI();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "bxL67C7|Y";
      stringArray0[1] = "6J (V!`5Amn>%Y(uy";
      stringArray0[2] = "T:Qo)#(X";
      stringArray0[3] = "T:Qo)#(X";
      stringArray0[4] = "sourceDir";
      stringArray0[5] = "sitemapFile";
      stringArray0[6] = "0<";
      LagoonCLI.main(stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = ".sitemap";
      LagoonCLI.main(stringArray1);
      String[] stringArray2 = new String[4];
      // Undeclared exception!
      try { 
        LagoonCLI.main(stringArray2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.2711893730418441
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Exiting Lagoon...";
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Exiting Lagoon...");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte)98;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte) (-124);
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte) (-77);
      byteArray0[7] = (byte)70;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      LagoonCLI.main(stringArray0);
      String[] stringArray1 = new String[0];
      LagoonCLI.main(stringArray1);
      LagoonCLI.main(stringArray1);
      LagoonCLI.main(stringArray0);
      String[] stringArray2 = new String[3];
      stringArray2[0] = ")hQ![";
      stringArray2[1] = ")hQ![";
      stringArray2[2] = "Exiting Lagoon...";
      LagoonCLI.main(stringArray2);
      LagoonCLI.main(stringArray1);
      assertFalse(stringArray1.equals((Object)stringArray2));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Exiting Lagoon...";
      LagoonCLI.main(stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Exiting Lagoon...");
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)52;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      // Undeclared exception!
      try { 
        LagoonCLI.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("nu.staldal.lagoon.LagoonCLI", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "( A0B:M2LWdgmwi";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[1] = "6";
      stringArray0[2] = "u!(6y!Q`";
      stringArray0[3] = "All elements are not yet ended";
      stringArray0[4] = "10Z86";
      stringArray0[5] = "#cmDhqZE<PtrP^6wz";
      stringArray0[6] = "cs/FSv3 ~F.&`OrRN<o";
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      // Undeclared exception!
      try { 
        LagoonCLI.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("nu.staldal.lagoon.LagoonCLI", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "sourceDir";
      stringArray0[1] = "force";
      stringArray0[2] = "sourceDir";
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      String[] stringArray1 = new String[6];
      stringArray1[0] = "sourceDir";
      stringArray1[1] = "89%HqXg9l9cZt%%";
      stringArray1[2] = "force";
      stringArray1[3] = "+:(0*B2F<$Y~";
      stringArray1[4] = "force";
      stringArray1[5] = "IPA}>'";
      LagoonCLI.main(stringArray1);
      assertEquals(6, stringArray1.length);
  }
}
