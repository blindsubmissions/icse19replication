/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:50:53 GMT 2018
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.net.URI;
import java.util.Collection;
import java.util.Vector;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      File file0 = null;
      String string0 = "nFd";
      ImprovedFile improvedFile0 = new ImprovedFile((File) null, "nFd");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector1;
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      unaryOperator0.andThen((Function<? super Object, ?>) unaryOperator1);
      vector1.replaceAll(unaryOperator0);
      vector0.addAll((Collection<?>) archiveScanner0.filesNotIncluded);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, ".ZIP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      DirectoryScanner.matchPath("", "");
      Vector<String> vector0 = new Vector<String>();
      String string0 = "";
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("0I");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "0I";
      archiveScanner0.setIncludes(stringArray0);
      String string0 = ".zip";
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".zip");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = "0I";
      ImprovedFile improvedFile0 = new ImprovedFile("0I");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      archiveScanner0.haveSlowResults = true;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "0I");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("IO error scanning directory ");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      try { 
        archiveScanner0.scandir(improvedFile0, "IO error scanning directory ", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/ext1/evosuite_readability_gen/projects/78_caloriecount/IO error scanning directory 
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = "iLST";
      MockFile mockFile0 = new MockFile(".jar", "iLST");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(".jar", ".jar", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".jar";
      stringArray0[1] = "iLST";
      stringArray0[2] = "iLST";
      archiveScanner0.includes = stringArray0;
      DirectoryScanner.matchPatternStart("iLST", "iLST");
      Vector<String> vector0 = new Vector<String>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "iLST");
      archiveScanner0.dirsExcluded = vector0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      vector0.add(".jar");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(mockFile0, "iLST");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".jar", "iLST");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(".jar", ".jar", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".jar";
      stringArray0[1] = "iLST";
      stringArray0[2] = "iLST";
      archiveScanner0.includes = stringArray0;
      DirectoryScanner.matchPatternStart("iLST", "iLST");
      Vector<String> vector0 = new Vector<String>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0I");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      vector0.add("nFd.jar");
      String string0 = "}~>";
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(mockFile0, "}~>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0027182645175161
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String string0 = ".jar";
      MockFile mockFile0 = new MockFile(".jar", "iLST");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(".jar", ".jar", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".jar";
      stringArray0[1] = "iLST";
      stringArray0[2] = "iLST";
      archiveScanner0.includes = stringArray0;
      Vector<String> vector0 = new Vector<String>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "iLST");
      archiveScanner0.dirsExcluded = vector0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      vector0.add(".jar");
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile0, ".jar", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      String string0 = ".jar";
      MockFile mockFile0 = new MockFile(".jar", "iLST");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(".jar", ".jar", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "iLST";
      stringArray0[1] = "iLST";
      stringArray0[2] = "iLST";
      archiveScanner0.includes = stringArray0;
      Vector<String> vector0 = new Vector<String>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "iLST");
      archiveScanner0.dirsExcluded = vector0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      vector0.add(".jar");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      vector0.add(".jar");
      archiveScanner0.scandir(improvedFile0, "iLST", true);
      // Undeclared exception!
      try { 
        archiveScanner0.getNotIncludedFiles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      String string0 = ".jar";
      MockFile mockFile0 = new MockFile(".jar", "iLST");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(".jar", ".jar", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".jar");
      stringArray0[0] = ".jar";
      stringArray0[1] = "iLST";
      stringArray0[2] = "iLST";
      archiveScanner0.includes = stringArray0;
      Vector<String> vector0 = new Vector<String>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "iLST");
      archiveScanner0.dirsExcluded = vector0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, ".jar", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }
}
