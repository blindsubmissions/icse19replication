/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:51:53 GMT 2018
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer.getInteger("iP#-K6w^f");
      JSONObject.valueToString((Object) null, (-3950), (-3950));
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "]]HgJM2J";
      stringArray0[1] = "null";
      stringArray0[2] = "null";
      stringArray0[3] = "iP#-K6w^f";
      stringArray0[4] = "iP#-K6w^f";
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      jSONObject0.names();
      jSONObject0.optLong("]]HgJM2J");
      String string0 = null;
      jSONObject0.isNull((String) null);
      jSONObject0.optInt("wheel.json.JSONTokener");
      JSONObject.getNames(jSONObject0);
      try { 
        jSONObject0.getLong("A3$mT^[c~t8");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"A3$mT^[c~t8\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7776612957621659
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      Short short0 = new Short((short)0);
      hashMap0.put(short0, short0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "$Z#=?fcg;eo:FC}O";
      try { 
        jSONObject0.getLong("$Z#=?fcg;eo:FC}O");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"$Z#=?fcg;eo:FC}O\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject jSONObject1 = jSONObject0.put("w/", (Collection) linkedList0);
      Integer integer0 = new Integer(2241);
      jSONObject1.put("", (Object) integer0);
      jSONObject0.put("", (-1.0));
      jSONObject0.optLong("");
      jSONObject0.getInt("");
      jSONObject0.optJSONObject("&<Ywh;<6)?z Vp|");
      try { 
        jSONObject1.getInt("&<Ywh;<6)?z Vp|");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"&<Ywh;<6)?z Vp|\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.994353691762369
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "\"0`pVi~YbwU";
      try { 
        jSONObject0.getJSONArray("\"0`pVi~YbwU");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\"0`pVi~YbwU\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("\"{9a&IBcuAI", false);
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      jSONObject1.put("", (Collection) linkedList0);
      jSONObject1.remove("\"{9a&IBcuAI");
      String string0 = "wheel.json.JSONObject$Null";
      jSONObject0.names();
      jSONObject1.remove("wheel.json.JSONObject$Null");
      Object object0 = new Object();
      jSONObject0.accumulate("wheel.json.JSONObject$Null", object0);
      JSONObject.getNames(jSONObject0);
      jSONObject0.optString("wheel.json.JSONObject$Null", "\"{9a&IBcuAI");
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString(45, 45);
      JSONObject.quote("SQ'2(2_D}G\\9DgIfZ");
      jSONObject0.has("SQ'2(2_D}G\\9DgIfZ");
      Object object0 = new Object();
      jSONObject0.put("", object0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSONObject.doubleToString((-1.0));
      JSONTokener jSONTokener0 = new JSONTokener("Sz^%tAhi");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of Sz^%tAhi
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(0);
      JSONObject.getNames((Object) integer0);
      String string0 = "Expected a ',' or '}'";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("Expected a ',' or '}'");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of Expected a ',' or '}'
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("", false);
      JSONObject jSONObject2 = new JSONObject(jSONObject0);
      String string0 = "n";
      JSONObject jSONObject3 = jSONObject2.put("n", 2046);
      jSONObject1.put("?,}I", (Object) jSONObject2);
      String string1 = "GV^zT\\Irs3LJI";
      jSONObject0.optDouble("GV^zTIrs3LJI");
      HashMap<Byte, JSONObject> hashMap0 = new HashMap<Byte, JSONObject>();
      JSONObject jSONObject4 = jSONObject3.put("P,CW:w8", (Map) hashMap0);
      jSONObject4.putOpt("?,}I", jSONObject1);
      try { 
        jSONObject0.getJSONArray("]Ch");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"]Ch\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      String string0 = "";
      JSONObject.getNames(jSONObject0);
      JSONObject jSONObject1 = jSONObject0.put("", true);
      try { 
        jSONObject1.get("Mv~`aKKTDx}yrAmd:_");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Mv~`aKKTDx}yrAmd:_\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.614920218711145
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject.getNames((Object) jSONArray0);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.addAll((Collection<? extends String>) linkedList1);
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      jSONObject0.optBoolean("");
      jSONObject0.optInt("");
      linkedList0.stream();
      jSONObject0.optString("", "");
      linkedList0.add("");
      Float float0 = new Float(0.0F);
      JSONObject.valueToString(float0, 2, 0);
      jSONObject0.optDouble("", (double) 0);
      jSONObject0.keys();
      jSONObject0.optString("");
      jSONObject0.toString(0);
      LinkedList<Float> linkedList2 = new LinkedList<Float>();
      JSONObject jSONObject1 = jSONObject0.put("<7S7Ab:1Ay>_", (Collection) linkedList2);
      jSONObject1.toJSONArray(jSONArray0);
      jSONObject0.append("T.-PvXD%TL{", (Object) null);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      JSONObject jSONObject1 = jSONObject0.put("", false);
      JSONObject jSONObject2 = new JSONObject(jSONObject0);
      String string1 = "n";
      Integer integer0 = new Integer(2241);
      JSONObject jSONObject3 = jSONObject1.put("jo", (Object) integer0);
      JSONObject jSONObject4 = jSONObject3.put("?,}I", (-1.0));
      jSONObject4.optLong("");
      try { 
        jSONObject2.getInt("?,}I");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"?,}I\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.190283370256022
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "iP#-K6w^f";
      Integer.getInteger("iP#-K6w^f");
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("iP#-K6w^f", true);
      JSONObject jSONObject2 = new JSONObject((Object) "?,}I");
      JSONObject jSONObject3 = jSONObject1.put("iP#-K6w^f", (-934));
      Object object0 = JSONObject.NULL;
      jSONObject3.put(" of ", object0);
      jSONObject0.optDouble("n");
      HashMap<Byte, JSONObject> hashMap0 = new HashMap<Byte, JSONObject>();
      HashMap<Byte, String> hashMap1 = new HashMap<Byte, String>();
      jSONObject3.put("|zd~*;8KEjTGiF\"m;", (Map) hashMap1);
      jSONObject1.putOpt("sH(5U&]HgG=;ioN7n", hashMap0);
      try { 
        jSONObject2.getJSONArray("/)xn=%i'7TM>;t/Dv");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"/)xn=%i'7TM>;t/Dv\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0898368797341007
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString();
      jSONObject0.optInt("{}");
      jSONObject0.toString(0);
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONArray.", 164.96110299746613);
      double double0 = jSONObject1.optDouble("] is not a JSONArray.", (double) 125);
      assertEquals(1, jSONObject0.length());
      assertEquals(164.96110299746613, double0, 0.01);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2822465179884075
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.optBoolean("Substring bounds error", false);
      jSONObject0.optLong("Bad value from toJSONString: ");
      JSONArray jSONArray0 = new JSONArray();
      jSONObject0.append("Bad value from toJSONString: ", jSONArray0);
      Byte byte0 = new Byte((byte)0);
      Byte.compare((byte)0, (byte) (-52));
      jSONObject0.accumulate("] is not a JSONArray.", byte0);
      StringWriter stringWriter0 = new StringWriter();
      jSONObject0.toString();
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.3713727650404417
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.optBoolean("Substring bounds error", false);
      jSONObject0.optLong("Bavalue from toJSONString: ");
      JSONArray jSONArray0 = new JSONArray();
      jSONObject0.append("Bavalue from toJSONString: ", jSONArray0);
      Byte byte0 = new Byte((byte)0);
      Byte.compare((byte)0, (byte) (-52));
      JSONObject jSONObject1 = jSONObject0.accumulate("] is not a JSONArray.", byte0);
      StringWriter stringWriter0 = new StringWriter();
      Byte.toUnsignedLong((byte)59);
      jSONArray0.toJSONObject((JSONArray) null);
      Long long0 = new Long(0L);
      jSONObject1.append("j^1_nIc|!UkhXN<-", long0);
      Long.max(0L, 185L);
      JSONObject.valueToString((Object) null, 0, (byte)0);
      Writer writer0 = jSONArray0.write(stringWriter0);
      jSONObject1.write(writer0);
      jSONObject0.toString(0);
      try { 
        jSONObject0.get("SR3{%p rg8It-4Ip");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"SR3{%p rg8It-4Ip\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2161022480912633
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject jSONObject1 = jSONObject0.put("w/", (Collection) linkedList0);
      Integer integer0 = new Integer(8);
      linkedList0.addLast(integer0);
      Integer integer1 = new Integer(2241);
      JSONObject jSONObject2 = jSONObject1.put("", (Object) integer1);
      jSONObject0.put("", (-1.0));
      jSONObject0.optLong("");
      jSONObject0.getInt("");
      Double double0 = new Double(0.0);
      try { 
        jSONObject2.append("", double0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.764921723593759
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      JSONObject jSONObject1 = jSONObject0.put("", false);
      JSONObject jSONObject2 = new JSONObject(jSONObject0);
      jSONObject2.put("n", 2046);
      jSONObject1.put("?,}I", (Object) jSONObject2);
      String string1 = "GV^zT\\Irs3LJI";
      // Undeclared exception!
      jSONObject1.toString(2046, 123);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5358551955461082
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<JSONObject, Double> hashMap0 = new HashMap<JSONObject, Double>();
      Double double0 = new Double(2387.919852515962);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      jSONObject1.optJSONArray("A JSONArray text must start with '['");
      assertEquals(1, jSONObject1.length());
      
      Double.sum(Double.NaN, 0.0);
      Double double1 = new Double((-229.97878));
      String string0 = JSONObject.quote("");
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.043129785084379
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("", false);
      String string0 = "?,}I";
      JSONObject jSONObject2 = new JSONObject(jSONObject0);
      String string1 = "n";
      JSONObject jSONObject3 = jSONObject2.put("n", 2046);
      jSONObject1.put("?,}I", (Object) jSONObject2);
      jSONObject0.optDouble("");
      HashMap<Byte, JSONObject> hashMap0 = new HashMap<Byte, JSONObject>();
      JSONObject jSONObject4 = jSONObject3.put("P,CW:w8", (Map) hashMap0);
      jSONObject4.putOpt("?,}I", jSONObject1);
      try { 
        jSONObject0.getJSONArray("?,}I");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"?,}I\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      JSONObject jSONObject1 = jSONObject0.optJSONObject("\"c)Dc/>i;J");
      assertNull(jSONObject1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      jSONObject0.optLong((String) null, 2390L);
      jSONObject0.put("@\"8,z:)", (Collection) linkedList0);
      jSONObject0.optJSONObject((String) null);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.5400363038209806
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.optBoolean("Substring bounds error", false);
      jSONObject0.optLong("Bad value from toJSONString: ");
      String string0 = "] is not a JSONArray.";
      JSONObject jSONObject1 = new JSONObject(object0);
      Integer integer0 = new Integer((byte)0);
      String string1 = "Am4@ItlA%9_q";
      jSONObject0.put("Bad value from toJSONString: ", (Object) "Am4@ItlA%9_q");
      try { 
        jSONObject1.put((String) null, (double) 2241);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1458417525947544
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject jSONObject1 = jSONObject0.put("w/", (Collection) linkedList0);
      Integer integer0 = new Integer(8);
      linkedList0.addLast(integer0);
      Integer integer1 = new Integer((-514));
      String[] stringArray0 = new String[1];
      JSONObject jSONObject2 = new JSONObject(integer1, stringArray0);
      JSONObject jSONObject3 = new JSONObject(jSONObject2, stringArray0);
      int int0 = jSONObject1.length();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.1479050191865117
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("", true);
      JSONObject jSONObject2 = new JSONObject(jSONObject0);
      Integer integer0 = new Integer(2241);
      JSONObject jSONObject3 = jSONObject1.put("jo", (Object) integer0);
      JSONObject jSONObject4 = jSONObject3.put("?,}I", (-1.0));
      jSONObject4.optLong("");
      int int0 = new Integer(2241);
      jSONObject1.optJSONObject("n");
      try { 
        jSONObject4.getInt("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }
}
