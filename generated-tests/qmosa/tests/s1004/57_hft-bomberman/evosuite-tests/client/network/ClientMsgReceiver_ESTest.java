/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:51:35 GMT 2018
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.ClientGameSession;
import client.gui.StartFrame;
import client.network.ClientMsgReceiver;
import common.network.MsgSender;
import java.awt.HeadlessException;
import java.awt.event.InvocationEvent;
import java.net.Proxy;
import java.sql.SQLDataException;
import java.sql.SQLException;
import java.sql.SQLSyntaxErrorException;
import java.sql.SQLTransientConnectionException;
import java.util.LinkedList;
import messages.global.LoginMsg;
import messages.global.MapInfo;
import messages.global.MapListMsg;
import messages.global.SessionListMsg;
import org.apache.log4j.helpers.Loader;
import org.apache.log4j.helpers.LogLog;
import org.apache.log4j.spi.RepositorySelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.junit.runner.RunWith;
import server.ClientInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      LinkedList<MapInfo> linkedList0 = new LinkedList<MapInfo>();
      MapInfo mapInfo0 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      linkedList0.add(mapInfo0);
      linkedList0.iterator();
      linkedList0.remove((Object) mockSocket0);
      MockThread.getAllStackTraces();
      MapListMsg mapListMsg0 = new MapListMsg(linkedList0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(mapListMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.setReuseAddress(false);
      BomberClient bomberClient0 = BomberClient.getInstance();
      mockSocket0.getInetAddress();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string0 = "uxGw";
      Loader.getResource(string0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string0 = "@r.aL\\?aD!";
      Throwable throwable0 = null;
      SQLException sQLException0 = new SQLException(string0, throwable0);
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException(string0, string0, sQLException0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLTransientConnectionException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      LogLog.setQuietMode(true);
      MockThread.getAllStackTraces();
      mockSocket0.getOOBInline();
      RepositorySelector repositorySelector0 = mock(RepositorySelector.class, new ViolatedAssumptionAnswer());
      LoginMsg loginMsg0 = new LoginMsg("", 949);
      SQLException sQLException0 = new SQLException("Ke.Z+7slu9", (Throwable) null);
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException("Ke.Z+7slu9", "Ke.Z+7slu9", (Throwable) null);
      MockSocket mockSocket1 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientGameSession clientGameSession0 = bomberClient0.getCurrentSession();
      bomberClient0.setCurrentSession(clientGameSession0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket1, bomberClient0);
      clientMsgReceiver0.processMsg(loginMsg0);
      assertFalse(clientMsgReceiver0.isInterrupted());
  }
}
