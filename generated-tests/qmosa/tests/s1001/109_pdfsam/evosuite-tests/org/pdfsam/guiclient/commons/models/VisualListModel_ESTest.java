/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 08:11:12 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ConvolveOp;
import java.awt.image.ImagingOpException;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.Raster;
import java.awt.image.RescaleOp;
import java.awt.image.SampleModel;
import java.awt.image.SinglePixelPackedSampleModel;
import java.awt.image.WritableRaster;
import java.awt.image.renderable.ParameterBlock;
import java.util.Collection;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.SortedSet;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import javax.media.jai.CollectionImage;
import javax.media.jai.OperationRegistry;
import javax.swing.JComboBox;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int int0 = 3516;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(3516, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 3516
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-3707);
      intArray0[3] = 93;
      intArray0[4] = 2094;
      visualListModel0.undeleteElements(intArray0);
      assertEquals(5, intArray0.length);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int int0 = 0;
      String string0 = "YBFV+&!IR$O:zs";
      float float0 = 676.0F;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      VisualListModel visualListModel1 = new VisualListModel();
      int int1 = (-1);
      // Undeclared exception!
      try { 
        visualListModel1.getElementAt((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.appendAllElements(hashSet0);
      visualListModel0.getElements();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = (-3405);
      intArray0[2] = 255;
      intArray0[3] = 0;
      intArray0[4] = (-671);
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 50;
      intArray0[8] = (-932);
      visualListModel0.moveUpIndexes(intArray0);
      assertArrayEquals(new int[] {0, (-3405), 255, 0, (-671), 0, 0, 50, (-932)}, intArray0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "r\"pt@Dqjmvw^uTgm";
      stringArray0[4] = "";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      visualListModel0.removeListDataListener(jComboBox0);
      int[] intArray0 = new int[6];
      intArray0[0] = 2401;
      intArray0[1] = (-1827);
      intArray0[2] = 255;
      intArray0[3] = (-3591);
      intArray0[4] = 0;
      intArray0[5] = 255;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndex(429);
      visualListModel0.elementsChanged();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(429, 429);
      assertNull(collection0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 255;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements(255, (Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[4];
      intArray0[0] = 2596;
      intArray0[1] = (-2203);
      intArray0[2] = 3190;
      int int1 = 1;
      intArray0[3] = 1;
      visualListModel0.removeElements(intArray0, false);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>((SortedSet<? extends VisualPageListItem>) treeSet0);
      priorityQueue0.containsAll(treeSet0);
      visualListModel0.addAllElements(925, (Collection<VisualPageListItem>) priorityQueue0);
      int int2 = 2105;
      byte[] byteArray0 = new byte[0];
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(180, 3190, byteArray0, 255, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1219;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1219, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1219
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 13;
      visualListModel0.getElementAt(13);
      RenderingHints renderingHints0 = new RenderingHints((RenderingHints.Key) null, (Object) null);
      RescaleOp rescaleOp0 = new RescaleOp(0.0F, (-3163.18F), renderingHints0);
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      int int1 = 619;
      boolean boolean0 = true;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(13, 1, byteArray0, 619, true, 13);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 619
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int int0 = 414;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      intArray0[0] = 414;
      visualListModel0.moveDownIndexes(intArray0);
      int int1 = 1783;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(1783, "4'^(?DDzI", "4'^(?DDzI");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = (-166);
      intArray0[1] = 0;
      intArray0[2] = (-1);
      intArray0[3] = 1;
      visualListModel0.subList((-1), (-1), false);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) null);
      intArray0[4] = (-2984);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) (-1);
      floatArray0[2] = (float) (-2984);
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, (RenderingHints) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-51);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1), 0, byteArray0, byteArray0, byteArray0, (-2984));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      TreeSet<VisualPageListItem> treeSet1 = new TreeSet<VisualPageListItem>((SortedSet<VisualPageListItem>) treeSet0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) treeSet1);
      visualListModel0.subList(0, 0);
      visualListModel0.clearData();
      int int1 = 1000;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(1000);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndex((-1596));
      int[] intArray0 = new int[5];
      intArray0[0] = (-1596);
      intArray0[1] = (-1596);
      intArray0[2] = (-1596);
      intArray0[3] = (-1596);
      intArray0[4] = (-1596);
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      intArray1[1] = 255;
      intArray1[2] = 995;
      intArray1[3] = (-1);
      intArray1[4] = 3312;
      intArray1[5] = 0;
      visualListModel0.removeElements(intArray1, false);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-40), "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[6];
      intArray0[0] = 2591;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int[] intArray1 = new int[3];
      intArray1[0] = 2591;
      intArray1[1] = 2591;
      intArray1[2] = 2591;
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      intArray0[1] = 2591;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.elementsChanged();
      AffineTransform affineTransform0 = new AffineTransform(1.0F, 2.0F, 0.0F, 0.0F, (float) 2591, 0.0F);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 2591);
        fail("Expecting exception: ImagingOpException");
      
      } catch(ImagingOpException e) {
         //
         // Unable to invert transform AffineTransform[[1.0, 0.0, 2591.0], [2.0, 0.0, 0.0]]
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-535), "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[6];
      intArray0[0] = 2591;
      int[] intArray1 = new int[3];
      intArray1[0] = 2591;
      intArray1[1] = 2591;
      intArray1[2] = 2591;
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      intArray0[1] = (-428);
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      visualListModel0.removeElements(2591, 510, true);
      visualListModel0.reverseElements(intArray1);
      assertFalse(intArray1.equals((Object)intArray0));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0253262207700673
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>(0, 0);
      visualListModel0.data = vector0;
      visualListModel0.moveUpIndex(0);
      visualListModel0.getSize();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.removeElements(9, (-1342), true);
      visualListModel0.reverseElements(intArray0);
      assertEquals(2, intArray0.length);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 330);
      int[] intArray0 = new int[5];
      intArray0[0] = 330;
      intArray0[1] = 0;
      visualListModel0.getListDataListeners();
      intArray0[2] = 2138;
      visualListModel0.removeElements(90, 1, false);
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) 330;
      floatArray0[1] = (float) 2138;
      floatArray0[2] = (float) 330;
      floatArray0[3] = (float) 2138;
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, (RenderingHints) null);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.getElements();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(0, stack0.size());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[6];
      intArray1[1] = 255;
      intArray1[2] = 0;
      intArray1[3] = (-1);
      intArray1[4] = 3312;
      intArray1[5] = 0;
      visualListModel0.removeElements(intArray1, false);
      visualListModel0.getElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.moveDownIndex((-1));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0114042647073518
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      visualListModel0.getListDataListeners();
      intArray0[0] = 1625;
      int int0 = 125;
      intArray0[1] = 125;
      boolean boolean0 = false;
      visualListModel0.removeElements(intArray0, false);
      // Undeclared exception!
      try { 
        visualListModel0.subList(125, (-451), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(125) > toIndex(-451)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 1000;
      intArray0[3] = (-1273);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndex(1000);
      intArray0[4] = 0;
      intArray0[5] = 11;
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[1];
      visualListModel0.moveDownIndexes(intArray1);
      assertFalse(intArray1.equals((Object)intArray0));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = (-467);
      visualListModel0.rotateClockwiseElements(intArray1);
      assertFalse(intArray1.equals((Object)intArray0));
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8462202193216335
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      TreeSet<VisualPageListItem> treeSet1 = new TreeSet<VisualPageListItem>((SortedSet<VisualPageListItem>) treeSet0);
      visualListModel0.addAllElements(1474, (Collection<VisualPageListItem>) treeSet0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.getValidElements();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndex(1474);
      assertEquals(3, visualListModel0.getSize());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      int[] intArray0 = new int[6];
      visualListModel0.clearData();
      visualListModel0.addElementAt((VisualPageListItem) null, 113);
      intArray0[0] = 255;
      intArray0[1] = 40000;
      intArray0[2] = 49;
      intArray0[3] = 1024;
      intArray0[4] = 718;
      intArray0[5] = (-341);
      visualListModel0.reverseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.subList(49, 40000, false);
      int int0 = visualListModel0.getSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      visualListModel0.clearData();
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 49;
      intArray0[3] = 40000;
      intArray0[4] = 1024;
      intArray0[5] = 49;
      intArray0[6] = 1;
      intArray0[7] = 718;
      visualListModel0.reverseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.subList(1, 39, true);
      visualListModel0.getSize();
      visualListModel0.addElement((VisualPageListItem) null);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-1), (-1), true);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.subList(946, 64);
      visualListModel0.getValidElements();
      int[] intArray0 = new int[2];
      intArray0[0] = 946;
      intArray0[1] = 64;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.updateElementAt(64, (VisualPageListItem) null);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getListDataListeners();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.getSize();
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndex(1853);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndex((-1090));
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements((-2219), 946, true);
      visualListModel0.removeElements(93, (-2219), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(1, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      TreeSet<VisualPageListItem> treeSet1 = new TreeSet<VisualPageListItem>((SortedSet<VisualPageListItem>) treeSet0);
      visualListModel0.addAllElements((-3135), (Collection<VisualPageListItem>) treeSet1);
      int[] intArray0 = new int[5];
      intArray0[1] = (-3135);
      intArray0[2] = 1607;
      intArray0[3] = (-3135);
      intArray0[4] = (-3135);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.subList(Integer.MAX_VALUE, (-4586), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2147483647) > toIndex(-4586)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8018924006588724
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      boolean boolean0 = true;
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      visualListModel0.addAllElements(0, collection0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.prependAllElements(collection0);
      visualListModel0.getElements();
      visualListModel0.subList((-4586), (-303), true);
      visualListModel0.getSize();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.933809998920632
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) treeSet0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.getValidElements();
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.clearData();
      visualListModel0.removeElements(933, (-1), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0114042647073518
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = (-2394);
      intArray0[2] = 1956;
      intArray0[3] = 1;
      intArray0[4] = 1009;
      intArray0[5] = 1;
      intArray0[6] = 116;
      intArray0[7] = 10000;
      visualListModel0.undeleteElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      visualListModel0.getValidElements();
      visualListModel0.addAllElements(8, (Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }
}
