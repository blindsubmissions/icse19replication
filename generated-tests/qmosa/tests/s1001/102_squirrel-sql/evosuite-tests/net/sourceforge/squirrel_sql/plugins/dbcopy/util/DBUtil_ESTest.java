/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 08:22:46 GMT 2018
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.function.Predicate;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.IndexInfo;
import net.sourceforge.squirrel_sql.fw.sql.ProcedureInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ISession iSession0 = null;
      String string0 = "XKE^!$+!s~QS_[";
      String string1 = "";
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "XKE^!$+!s~QS_[", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = (-386);
      DBUtil.typesAreEquivalent((-1455), (-386));
      ISession iSession0 = null;
      String string0 = "~JTm~VKB_)FLWNiDxj/";
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "i#W2Q", "~JTm~VKB_)FLWNiDxj/", "i#W2Q", (-386));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBUtil.setLastStatementValues("zLJ;n~7(OpawNJ9Mt$x");
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      assertNull(dBUtil0.getLastStatementValues());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceDistinctDataType((-6), (TableColumnInfo) null, (ISession) null);
      DBUtil.getLastStatementValues();
      dBCopyPlugin0.setPasteToTableName("Application.error.jdbcstream");
      DBUtil.getLastStatement();
      DBUtil.setLastStatement((String) null);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-6));
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier0);
      SQLConnection sQLConnection0 = null;
      try {
        sQLConnection0 = new SQLConnection((Connection) null, sQLDriverPropertyCollection0, sQLDriver0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLConnection == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLConnection", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      vector0.clone();
      DBUtil.convertTableToObjectList(vector0);
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLAlias sQLAlias0 = new SQLAlias();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      sQLAlias0.setDriverIdentifier(uidIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      sQLAlias0.setDriverProperties(sQLDriverPropertyCollection0);
      sQLAlias0.getDriverPropertiesClone();
      DBUtil.typesAreEquivalent(928, 0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "MScw%HXHT.G>=-fJT@", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(arrayList0);
      DBUtil.convertTableToObjectList(list0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((PreparedStatement) null).when(connection0).prepareStatement(anyString() , any(java.lang.String[].class));
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      String string0 = "DBUtil.error.bindblobfailure";
      int int0 = (-7);
      String[] stringArray0 = new String[8];
      stringArray0[0] = ".+Z-<a{mA";
      stringArray0[1] = "DBUtil.error.bindblobfailure";
      stringArray0[2] = "DBUtil.error.bindblobfailure";
      stringArray0[3] = ".+Z-<a{mA";
      stringArray0[4] = " CASCADE";
      stringArray0[5] = "DBUtil.error.bindblobfailure";
      stringArray0[6] = "DBUtil.error.bindblobfailure";
      stringArray0[7] = "";
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareStatement(".+Z-<a{mA", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[2];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "replaceOtherDataType: unexpected exception - ", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ISession iSession0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ISession iSession0 = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin0.setCopyMenuEnabled(true);
      String string0 = "i#W2Q";
      dBCopyPlugin0.getPluginJarFilePath();
      byte[] byteArray0 = new byte[8];
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("/home/ubuntu/evosuite_readability_gen/projects/102_squirrel-sql/plugins/dbcopy.jar", "i#W2Q", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      DBUtil.convertTableToObjectList(vector0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      assertEquals("1.15", dBCopyPlugin0.getVersion());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      vector0.clone();
      List<IDatabaseObjectInfo> list0 = new Vector<IDatabaseObjectInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBUtil.convertObjectToTableList(list0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[2];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "HEr? 56", "HEr? 56", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 128, "HEr? 56", 128, 1024, 128, (-520), "", "", (-520), 207, "");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", "", (-32), "", (-32), 207, 1024, 2188, " - will try quoting the catalog next.", (String) null, 2004, 2004, "Y@Bv#qzE_&3Xalfj;");
      tableColumnInfoArray0[1] = tableColumnInfo1;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy, ", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLAlias sQLAlias0 = new SQLAlias();
      boolean boolean0 = DBUtil.typesAreEquivalent(928, 0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("(", "(", (String) null, "(", 1052, "aV3~0|SR7z[$kL-", 0, 928, (-728), 950, "|rQv", "", (-728), 950, "vm8=DV");
      boolean boolean1 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean1 == boolean0);
      
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1052, int0);
      
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "key", "|rQv");
      int int1 = DBUtil.getColumnType((ISQLConnection) sQLConnection0, (ITableInfo) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      assertEquals((-1), int1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("z!9_V^8s", "DBUtil.error.firebirdcommit", "e%Dz+6hQzg|");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType(">Lp8^k6/xh!R<Za");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("ucase");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      dBCopyPlugin1.getPluginJarFilePath();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'z#-(d");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBUtil.getLastStatementValues();
      System.setCurrentTimeMillis(1L);
      dBCopyPlugin0.getSourceSession();
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBUtil.getLastStatementValues();
      SessionInfoProvider sessionInfoProvider0 = null;
      String string0 = "'+3J(l'pqzPjv Z?k";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "j3+ftP.8Q^^", "delete from RDB$GENERATORS where RDB$GENERATOR_NAME = '");
      int int0 = (-1253);
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, (-1253));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setDestSession((ISession) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("MR'UJB8Rzh", (String) null, "", "7w", (-3), "C_G-y@2zs@*zUSWizx", (-983), 93, (-3812), (-254), "Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ", "7w", (-1815), (-1455), "Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.FOREIGN_KEY;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.FUNCTION;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.UDF_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.typesAreEquivalent((-3534), (-2103));
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ForeignKeyInfo[] foreignKeyInfoArray0 = new ForeignKeyInfo[2];
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      foreignKeyInfoArray0[0] = foreignKeyInfo0;
      foreignKeyInfoArray0[0] = foreignKeyInfo0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "S3XJ.grh5<rAhnYsuD", "S3XJ.grh5<rAhnYsuD");
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (-4711));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "";
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("", "", "");
      DatabaseObjectType.createNewDatabaseObjectType("");
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList0.containsAll(arrayList1);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList0);
      arrayList0.removeIf(predicate0);
      DBUtil.convertObjectToTableList(arrayList0);
      DBUtil.typesAreEquivalent(16, 16);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.getDriverPropertiesClone();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(16);
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ISQLConnection iSQLConnection0 = null;
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "", "org.jfree.data.category.SlidingCategoryDataset");
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "~}Z*K", (ITableInfo) null, 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.typesAreEquivalent(3, 3);
      dBCopyPlugin0.getDestSession();
      ISession iSession0 = dBCopyPlugin0.getDestSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.typesAreEquivalent(2, 45);
      dBCopyPlugin0.getDestSession();
      ISession iSession0 = dBCopyPlugin0.getDestSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      int int0 = 552;
      String string0 = "_";
      String string1 = "6g5'wmKYH:AVi";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ":`e`~", ":`e`~", ":`e`~", 552, "_", 552, 552, 1067, 552, "_", "6g5'wmKYH:AVi", (-259), 1067, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceDistinctDataType(552, tableColumnInfo0, (ISession) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      dBCopyPlugin0.setDestDatabaseObject(tableColumnInfo0);
      dBCopyPlugin0.getSourceSession();
      DBUtil.fixCase((ISession) null, "");
      dBCopyPlugin0.getDestDatabaseObject();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      String string2 = "6ItH^\\d7YX\\N^";
      String string3 = ")`;? ;MP";
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ")`;? ;MP", foreignKeyInfo0, dBCopyPlugin1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo(")`;? ;MP", "fixCase: unexpected exception: ", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      arrayList0.add((IDatabaseObjectInfo) databaseObjectInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      arrayList0.add((ITableInfo) null);
      DBUtil.convertTableToObjectList(arrayList0);
      System.setCurrentTimeMillis((-2941L));
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setDestSession((ISession) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("A", "A", "Tg2:75vjOL", "Tg2:75vjOL", (-2), ";`5dSGD}u<AO", 45, 16, (-254), 128, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, 45, (-1086), "Q");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.FUNCTION;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.UDF_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      ISession iSession0 = dBCopyPlugin1.getDestSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = "me]8.";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("me]8.", "me]8.", "me]8.", "me]8.", 2004, "-G)ZS'", 2004, 2004, 2004, 2004, "Unexpected exception while closing Statement: ", "-G)ZS'", 2004, (-2785), "me]8.");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      CallableStatement callableStatement0 = null;
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.getApplication();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        dBCopyPlugin1.getGlobalPreferencePanels();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.gui.PreferencesPanel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLAlias sQLAlias0 = new SQLAlias();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("(", "(", "(", "(", 1052, "(", 0, 928, (-728), 1052, "(", "(", (-728), 1052, "(");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "k0y", "(");
      DBUtil.getColumnType((ISQLConnection) sQLConnection0, (ITableInfo) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.37677016125643675
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBUtil.typesAreEquivalent((-7), (-7));
      DBUtil.typesAreEquivalent(16, (-7));
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("[ 9E(2z", ";)/]#<fD6:MA1P'LqP", "*#m`7+", "*#m`7+", (-1916), "DBUtil.info.bindbloblength", (-2040109463), (-2111), 64000, 64000, "2hGY", "*#m`7+", (-1916), 32700, ";)/]#<fD6:MA1P'LqP");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" - will try quoting the catalog next.", "net.sourceforge.squirrel_sql.fw.util.StringManager", "]KSu !@EF|", "WZQg{%cAzbDr<giL", 1111, "Zjz8f(16 N+z{E~kg", (-2), 3, 2001, 1896, "ohsv.66OW4}1", "getCatSep: Unexpected Exception - ", 3870, (-3), "]KSu !@EF|");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1111, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setCopyMenuEnabled(false);
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      dBCopyPlugin0.unload();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "execute2uery: imesTen alows a maximum fetch size of 128.  Altering preferred fetch size from ", "                                ");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("t)Hgmz$B2Rd6+`", "t)Hgmz$B2Rd6+`", " ) values J^ ", "net.sourceforge.squirrel_sql.fw.dialects.InformixDialectExt", (-4), "net.sourceforge.squirrel_sql.fw.dialects.InformixDialectExt", (-378), 197, (-4), (-4), "|$aq?4g", "5q/hq<N`UAz{(KLu", (-780), 1617, " CHAR(10) )");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        dBCopyPlugin0.sessionStarted((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin", e);
      }
  }
}
