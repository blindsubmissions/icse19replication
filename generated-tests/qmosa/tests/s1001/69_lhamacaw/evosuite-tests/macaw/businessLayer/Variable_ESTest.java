/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 10:51:57 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.ChangeEventType;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("macaw.businessLayer.SupportingDocument");
      derivedVariable0.setFilePath("");
      ArrayList<ValueLabel> arrayList0 = null;
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.clone();
      valueLabel0.hasSameDisplayName(valueLabel1);
      // Undeclared exception!
      try { 
        derivedVariable0.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = null;
      rawVariable0.setName((String) null);
      rawVariable0.getForm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "";
      rawVariable0.setNotes("");
      derivedVariable0.setLabel("");
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCleaningDescription("");
      arrayList0.add(supportingDocument0);
      arrayList0.stream();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEventArray0[1] = macawChangeEvent1;
      ChangeEventType changeEventType1 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[2] = macawChangeEvent2;
      ChangeEventType changeEventType2 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent(changeEventType2, "", "Tm");
      macawChangeEventArray0[3] = macawChangeEvent3;
      User user0 = new User();
      MacawChangeEvent macawChangeEvent4 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      macawChangeEventArray0[4] = macawChangeEvent4;
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent(changeEventType2, "", "89S,w4");
      macawChangeEventArray0[5] = macawChangeEvent5;
      MacawChangeEvent macawChangeEvent6 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      macawChangeEventArray0[6] = macawChangeEvent6;
      arrayList0.toArray(macawChangeEventArray0);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setYear("a-uN\"AD]+1w");
      assertEquals("a-uN\"AD]+1w", rawVariable0.getYear());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.remove((Object) ontologyTerm0);
      derivedVariable1.setOntologyTerms(arrayList0);
      derivedVariable1.questionNumber = null;
      User user0 = new User("a ,-]rBpYv#>", "supportingDocument.documentCode.saveChanges");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getValueLabels();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm1);
      ontologyTerm1.setNewRecord(false);
      arrayList1.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList1);
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList2);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.8066624897703174
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("XbIVTl/uyj2zf");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.hasSameDisplayName(valueLabel1);
      derivedVariable0.addValueLabel(valueLabel0);
      User user0 = new User("kRg.9yXeR", "q#~DngR3rtpdF|*[");
      user0.setPassword("kRg.9yXeR");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.questionNumber = "XbIVTl/uyj2zf";
      derivedVariable1.setColumnStart("XbIVTl/uyj2zf");
      SupportingDocument supportingDocument0 = null;
      derivedVariable1.addSupportingDocument((SupportingDocument) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.getCategory();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      user0.setEmail("XbIVTl/uyj2zf");
      derivedVariable0.setIdentifier(1);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getYear();
      derivedVariable0.getDisplayName();
      user0.setUserID("O-Cfw+^&;{-f");
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable1.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      arrayList0.add((Variable) derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getForm();
      rawVariable0.setCodeBookNumber("8ls");
      rawVariable0.setCleaned(true);
      derivedVariable0.getAlias();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.setCoded(true);
      derivedVariable0.getFilePath();
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.401197381662154
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setAvailability("{Cg");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("{Cg");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnStart("ontologyTerm.term.saveChanges");
      rawVariable0.setYear("{Cg");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.getFilePath();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("{Cg", rawVariable0.getYear());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("1k*FdC");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = null;
      derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        OntologyTerm.detectFieldChanges((User) null, ontologyTerm0, ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      rawVariable0.columnEnd = "0M0lw@Pw{p] wy";
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("p>E#r?2#Dl'3[RL:");
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList0.addAll((Collection<? extends OntologyTerm>) arrayList1);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getFilePath();
      rawVariable0.getAvailability();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList2);
      rawVariable0.setCleaningStatus("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "";
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>(1094);
      derivedVariable0.removeSourceVariables(arrayList3);
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.8918202981106305
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setTerm(" type=");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setYear(" type=");
      derivedVariable0.isNewRecord();
      User user0 = new User("variable.questionNumber.label", " type=");
      user0.setUserID("variable.questionNumber.label");
      user0.setFirstName("variable.questionNumber.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.getColumnEnd();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setFilePath("variable.questionNumber.label");
      derivedVariable0.getDisplayName();
      derivedVariable0.clone();
      assertEquals("variable.questionNumber.label", derivedVariable0.getFilePath());
      
      rawVariable0.getNotes();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.5172991505538107
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("\u0003=)~W@5} J($;");
      derivedVariable0.setCleaningDescription("\u0003=)~W@5} J($;");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.questionNumber = "user.affiliation.label";
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      hashMap0.remove((Object) arrayList0, (Object) "user.lastName.saveChanges");
      Collection<Integer> collection0 = hashMap0.values();
      arrayList0.containsAll(collection0);
      arrayList0.trimToSize();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getCleaningStatus();
      rawVariable0.setColumnEnd("*`_}k");
      rawVariable0.addSupportingDocuments(arrayList1);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getAlias();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setFileName("*`_}k");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setLabel("macaw.businessLayer.SupportingDocument");
      derivedVariable0.getCategory();
      rawVariable0.getValueLabels();
      rawVariable0.clone();
      rawVariable0.getForm();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("*`_}k", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.8034803227882725
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user0 = new User("e4v{'z", "variable.alternativeVariable.label");
      user0.setAddressLine2("variable.alternativeVariable.label");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setDescription("fi`N`;Q");
      rawVariable0.addOntologyTerm(ontologyTerm2);
      derivedVariable0.getQuestionNumber();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("fi`N`;Q");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable2);
      derivedVariable2.addSourceVariable(derivedVariable0);
      derivedVariable1.setLabel("ybcVTl/uyj2zf");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("fi`N`;Q", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.546965937223281
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      User user1 = (User)user0.clone();
      user0.setStatus("hl{mb2kFAtY?-c<U");
      derivedVariable0.setIsNewRecord(false);
      user0.setAddressLine1("");
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.cloneAttributes(derivedVariable0);
      supportingDocument1.setFileName("");
      supportingDocument1.setDocumentCode("");
      rawVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable0.cloneAttributes(rawVariable0);
      user0.setEmail("variable.columnEnd.label");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCodeBookNumber("=i");
      derivedVariable1.addSourceVariable(derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable2);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.addSourceVariable(rawVariable1);
      derivedVariable0.setLabel("");
      assertEquals("=i", derivedVariable0.getCodeBookNumber());
      
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      assertTrue(arrayList1.equals((Object)arrayList0));
  }
}
