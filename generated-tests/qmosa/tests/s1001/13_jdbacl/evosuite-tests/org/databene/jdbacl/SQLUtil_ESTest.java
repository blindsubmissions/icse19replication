/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 09:56:19 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.StringWriter;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import org.apache.derby.iapi.services.context.ContextManager;
import org.apache.derby.iapi.sql.LanguageFactory;
import org.apache.derby.iapi.sql.conn.LanguageConnectionFactory;
import org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptorList;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.sql.dictionary.TableDescriptor;
import org.apache.derby.iapi.store.access.TransactionController;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.db.SlaveDatabase;
import org.apache.derby.impl.services.uuid.BasicUUID;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.apache.derby.impl.sql.compile.DeleteNode;
import org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.value.ValueLong;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SQLUtil.isProcedureCall("");
      SQLUtil.isProcedureCall(">*@`iBrF");
      String string0 = null;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      SQLUtil.typeAndName((DBObject) null);
      DBColumn[] dBColumnArray0 = new DBColumn[7];
      String string1 = "c013800d-00d7-c025-480d-000a0a411200";
      // Undeclared exception!
      try { 
        DBDataType.getInstance("5J\"qlZz+WIEr#0?KmN");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompositeDBObject<DBCheckConstraint> compositeDBObject0 = (CompositeDBObject<DBCheckConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("`M^(o%VQ7|", compositeDBObject0);
      tableContainer0.getTable("`M^(o%VQ7|");
      tableContainer0.equals("`M^(o%VQ7|");
      DBDataType dBDataType0 = DBDataType.getInstance(0, "`M^(o%VQ7|");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("~JTm~VKB_)FLWNiDxj/", (DBTable) null, dBDataType0);
      defaultDBColumn0.isIdentical((DBObject) null);
      SQLUtil.renderColumn(defaultDBColumn0);
      SQLUtil.removeComments("~JTm~VKB_)FLWNiDxj/");
      SQLUtil.isDDL("");
      dBDataType0.isAlpha();
      Character character0 = new Character('x');
      Character.lowSurrogate(0);
      SQLUtil.renderValue(character0);
      SQLUtil sQLUtil0 = new SQLUtil();
      SQLUtil.normalize("", false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "~JTm~VKB_)FLWNiDxj/";
      stringArray0[2] = "";
      stringArray0[3] = ",$s)O-Cfw+^&;{-ftn";
      stringArray0[4] = "~JTm~VKB_)FLWNiDxj/ `M^(O%VQ7| NULL";
      SQLUtil.join("DATE", "", stringArray0, "", "", stringArray0);
      SQLUtil.isDML("g<IiM");
      String string0 = null;
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      VersionNumber versionNumber0 = new VersionNumber(arrayList0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase(",$s)O-Cfw+^&;{-ftn", "", versionNumber0);
      // Undeclared exception!
      try { 
        defaultDatabase0.getSchema("mlhIa)/[%'+3J(l'");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table ',$s)O-Cfw+^&;{-ftn'
         //
         verifyException("org.databene.jdbacl.model.DefaultDatabase", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.join("C,", " DEFAULT ", stringArray0, "", "C,", stringArray0);
      SQLUtil.renderColumnNames(stringArray0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      DeleteNode deleteNode0 = new DeleteNode();
      TableDescriptor tableDescriptor0 = deleteNode0.targetTableDescriptor;
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getTriggerDescriptors((TableDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = null;
      stringArray0[1] = "08<J-I8l6>nry";
      stringArray0[2] = "08<J-I8l6>nry";
      String string0 = "!#BJb7\\P4]q<!2@j )";
      SQLUtil.join("08<J-I8l6>nry", (String) null, stringArray0, "!#BJb7P4]q<!2@j )", "org.apache.derby.impl.sql.compile.WindowList", stringArray0);
      SQLUtil.innerJoin("", stringArray0, "", (String) null, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "jM$S.v/@";
      stringArray0[1] = "U";
      stringArray0[2] = "parseSqlInfo ended";
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("jM$S.v/@ = 'jM$S.v/@' AND U = 'U' AND parseSqlInfo ended = 'parseSqlInfo ended'", string0);
      
      String string1 = SQLUtil.normalize("//", true);
      assertEquals("", string1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      VersionNumber versionNumber0 = new VersionNumber(linkedList0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("index ", "No statement was executed.", versionNumber0);
      defaultDatabase0.getTable((String) null, false);
      DBDataType dBDataType0 = DBDataType.getInstance((-766), "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", (DBTable) null, dBDataType0);
      defaultDBColumn0.getNotNullConstraint();
      StringBuilder stringBuilder0 = new StringBuilder(47);
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      StringBuilder stringBuilder2 = SQLUtil.addOptionalCondition((String) null, stringBuilder1);
      char[] charArray0 = new char[8];
      charArray0[0] = '$';
      charArray0[1] = 'P';
      charArray0[2] = 'K';
      charArray0[3] = '\'';
      charArray0[4] = '[';
      charArray0[5] = 'q';
      charArray0[6] = 'A';
      charArray0[7] = '9';
      StringBuilder stringBuilder3 = stringBuilder2.append(charArray0);
      StringBuilder stringBuilder4 = stringBuilder3.appendCodePoint(978);
      StringBuilder stringBuilder5 = stringBuilder4.append((-1.0));
      // Undeclared exception!
      try { 
        stringBuilder5.replace(3265, 1755, (String) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // start > length()
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBSequence dBSequence0 = new DBSequence("", "", "");
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigInteger bigInteger1 = BigInteger.ZERO;
      bigInteger0.or(bigInteger1);
      dBSequence0.setMinValue(bigInteger0);
      SQLUtil.typeAndName(dBSequence0);
      SQLUtil.isQuery("sequence ");
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getContextManager();
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getTransactionExecute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("F$|:6uk=zeM m");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("F$|:6uk=zeM m", false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "n'k1^";
      stringArray0[1] = "n'k1^";
      stringArray0[2] = "";
      stringArray0[3] = "n'k1^";
      stringArray0[4] = "n'k1^";
      stringArray0[5] = "n'k1^";
      stringArray0[6] = "n'k1^";
      stringArray0[7] = "n'k1^";
      SQLUtil.leftJoin("n'k1^", stringArray0, "43Y24.U", "n'k1^", stringArray0);
      String string0 = null;
      CompositeDBObject<DBNotNullConstraint> compositeDBObject0 = (CompositeDBObject<DBNotNullConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("n'k1^", compositeDBObject0);
      tableContainer0.getTable("g%5&");
      // Undeclared exception!
      try { 
        DBDataType.getInstance("X9oCA~6u3J1fuuHpK~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "(,el1h", object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.1732052067491771
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SQLUtil.normalize("LS/%Ed", false);
      String string0 = "J;770>t$DsEmJ$";
      String string1 = "";
      DBSchema dBSchema0 = new DBSchema(";F8wV(|%");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", dBSchema0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0710178890244566
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SQLUtil.removeComments("select intoxhh6km<.u>yu");
      String string0 = SQLUtil.normalize("select intoxhh6km<.u>yu", true);
      assertEquals("select intoxhh6km <.u > yu", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(543, "F$|:6uk=zeM m");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("8&Nja", defaultDBTable0, dBDataType0, integer1, integer1);
      String string1 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("8&Nja F$|:6UK=ZEM M(0,0) NULL", string1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SQLUtil.removeComments("~BdCZy,WUVz;J!a");
      SQLUtil.normalize("~BdCZy,WUVz;J!a", true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-2), "~BdCZy,WUVz;J!a");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("create materialized vieww>zlin,@6_+fl%@q", defaultDBTable0, dBDataType0, integer0, integer0);
      SQLUtil.renderColumn(defaultDBColumn0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.979204517434325
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SQLUtil.isProcedureCall("y#kO;eY;Er!C");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "y#kO;eY;Er!C";
      stringArray0[1] = "y#kO;eY;Er!C";
      stringArray0[2] = "y#kO;eY;Er!C";
      stringArray0[3] = "y#kO;eY;Er!C";
      stringArray0[4] = "y#kO;eY;Er!C";
      stringArray0[5] = "y#kO;eY;Er!C";
      stringArray0[6] = "y#kO;eY;Er!C";
      stringArray0[7] = "y#kO;eY;Er!C";
      SQLUtil.renderColumnListWithTableName("y#kO;eY;Er!C", stringArray0);
      TableContainer tableContainer0 = new TableContainer(".", (CompositeDBObject<? extends DBObject>) null);
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("y#kO;eY;Er!C", (DBSchema) null);
      SQLUtil.typeAndName(defaultDBTable0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("y#kO;eY;Er!C");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable1, "^5xs\"5zU51s!s", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      StringBuilder stringBuilder1 = stringBuilder0.reverse();
      SQLUtil.addRequiredCondition("88#8I{/TNF=I", stringBuilder1);
      assertEquals(" s!s15Uz5\"sx5^ TNIARTSNOC and 88#8I{/TNF=I", stringBuilder1.toString());
      assertEquals(" s!s15Uz5\"sx5^ TNIARTSNOC and 88#8I{/TNF=I", stringBuilder0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.022808529414704
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SQLUtil.removeComments("~BdCZy,WUVz;J!a");
      String string0 = SQLUtil.normalize("~BdCZy,WUVz;J!a", true);
      assertEquals("~ BdCZy, WUVz ; J ! a", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-2), "~BdCZy,WUVz;J!a");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("create materialized vieww>zlin,@6_+fl%@q", defaultDBTable0, dBDataType0, integer0, integer0);
      String string1 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("create materialized vieww>zlin,@6_+fl%@q ~BDCZY,WUVZ;J!A(3,3) NULL", string1);
      
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("2c:=-_Cg6Q]xs", defaultDBTable0, dBDataType0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn1;
      SQLUtil.renderColumnNames(dBColumnArray0);
      boolean boolean0 = SQLUtil.isProcedureCall("exec");
      Boolean boolean1 = SQLUtil.mutatesStructure("f})5\"<q;c");
      assertFalse(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringWriter stringWriter0 = new StringWriter(759);
      StringWriter stringWriter1 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, false);
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[1] = 'V';
      charArray0[2] = 'g';
      charArray0[3] = ')';
      charArray0[0] = '*';
      stringWriter1.write(charArray0);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) stringWriter0;
      objectArray0[1] = (Object) mockPrintWriter0;
      Object object0 = new Object();
      objectArray0[2] = object0;
      PrintWriter printWriter0 = mockPrintWriter0.printf("[e4N:s", objectArray0);
      printWriter0.append(')');
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, printWriter0);
      TableContainer tableContainer0 = new TableContainer("[e4N:s");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("[e4N:s");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[e4N:s";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "q(:EfgHdMGd9eLYY", false, stringArray0);
      SQLUtil.isDML("q(:EfgHdMGd9eLYY");
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, printWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.24493002679463532
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.normalize("-- ERROR: page size; using ", false);
      DBSchema dBSchema0 = new DBSchema("create m");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("create m", dBSchema0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.589280063598296
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SQLUtil.removeComments("~BdCZy,WUVz;J!a");
      SQLUtil.normalize("~BdCZy,WUVz;J!a", true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance((-2), "~BdCZy,WUVz;J!a");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("create materialized vieww>zlin,@6_+fl%@q");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "select into";
      stringArray0[1] = "~ BdCZy, WUVz ; J ! a";
      stringArray0[2] = "~ BdCZy, WUVz ; J ! a";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable1, "~BdCZy,WUVz;J!a", true, stringArray0);
      String[] stringArray1 = new String[0];
      DBUniqueConstraint dBUniqueConstraint1 = new DBUniqueConstraint(defaultDBTable1, "executew>zlin,@6_+fl%@q", true, stringArray1);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint1, nameSpec0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      BasicUUID basicUUID0 = null;
      try {
        basicUUID0 = new BasicUUID((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "setBoolean(String,boolean)";
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("setBoolean(String,boolean)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"String\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringWriter stringWriter0 = new StringWriter(759);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "INVOCATION";
      stringArray0[1] = "INVOCATION";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      SQLUtil.join("", "INVOCATION", stringArray0, "org.apache.derby.iapi.services.io.FormatableBitSet", "", stringArray0);
      SQLUtil.renderColumnNames(stringArray0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      DeleteNode deleteNode0 = new DeleteNode();
      TableDescriptor tableDescriptor0 = deleteNode0.targetTableDescriptor;
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getTriggerDescriptors((TableDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.8369882167858358
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SQLUtil.removeComments("XYj(E");
      SQLUtil.normalize("XYj(E", false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance((-2), "XYj(E");
      Integer integer0 = RawTransaction.ABORT;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "XYj (E";
      stringArray0[1] = "XYj(E";
      stringArray0[2] = "XYj(E";
      stringArray0[3] = "XYj(E";
      stringArray0[4] = "DkkBrMrX";
      stringArray0[5] = "XYj(E";
      stringArray0[6] = "XYj(E";
      stringArray0[7] = "zivV>";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "create materialized vieww>zlin,@6_+fl%@q", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("alter table", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      BasicUUID basicUUID0 = new BasicUUID("XYj(E");
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getConstraintTableDescriptor(basicUUID0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = SQLUtil.normalize(")8q", true);
      assertEquals(") 8q", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      DBDataType dBDataType0 = DBDataType.getInstance((-2), "alter index");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.ABORT;
      Integer integer2 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("CHECK ", defaultDBTable0, dBDataType0, (Integer) null, integer0);
      String string1 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("CHECK  ALTER INDEX NULL", string1);
      
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("w>zlin,@6", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[9];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn1;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("create materialized vieww>zlin,@6_+fl%@q", defaultDBTable0, dBDataType0);
      dBColumnArray0[3] = (DBColumn) defaultDBColumn2;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn1;
      dBColumnArray0[5] = (DBColumn) defaultDBColumn1;
      dBColumnArray0[6] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[7] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[8] = (DBColumn) defaultDBColumn0;
      String string2 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("w>zlin,@6, CHECK , CHECK , create materialized vieww>zlin,@6_+fl%@q, w>zlin,@6, w>zlin,@6, CHECK , CHECK , CHECK ", string2);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SQLUtil.removeComments("~BdCZy,WUVz;J!a");
      SQLUtil.removeComments("~BdCZy,WUVz;J!a");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-2), "~BdCZy,WUVz;J!a");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" join ", defaultDBTable0, dBDataType0, integer1, integer1);
      Integer integer2 = new Integer((-2));
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("~BdCZy,WUVz;J!a", defaultDBTable0, dBDataType0, integer2);
      SQLUtil.renderColumn(defaultDBColumn1);
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("2c:=-_Cg6Q]xs", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[9];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn2;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn2;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn2;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      Integer integer3 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn3 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer3);
      dBColumnArray0[4] = (DBColumn) defaultDBColumn3;
      dBColumnArray0[5] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[7] = (DBColumn) defaultDBColumn2;
      dBColumnArray0[8] = (DBColumn) defaultDBColumn2;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("updating ", 138);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      SQLUtil.isQuery("(one p");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[7];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringArray0[0] = "(one p";
      stringArray0[1] = "(one p";
      stringArray0[2] = "(one p";
      stringArray0[3] = "choD%~C?(.bR-";
      stringArray0[4] = null;
      stringArray0[5] = "(one p";
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-69);
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)35;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringArray0[6] = "A6YL#|nHZn8UH0/7;.Y";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("choD%~C?(.bR-", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.constraintName(dBForeignKeyConstraint0);
      TableContainer tableContainer0 = new TableContainer("alter indexw>zlin,@6_+fl%@q", defaultDBTable0);
      tableContainer0.getTable("a><wz\nzT^>$lLwN");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("(one p", (DBTable) null, (DBDataType) null, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBTable dBTable0 = null;
      SQLUtil.normalize("1io\":TVwVOMaDKGc#KC", false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.apache.derby.catalog.types.TypeDescriptorImpl");
      // Undeclared exception!
      try { 
        DBDataType.getInstance("}F");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0330001999799117
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(545, "~W25HX,*b");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      TableContainer tableContainer0 = new TableContainer("");
      tableContainer0.getTable("UNIQUE ");
      Integer integer2 = RawTransaction.LOCK_ESCALATE;
      tableContainer0.isIdentical((DBObject) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("~W25HX,*b", (DBTable) null, dBDataType0, integer1, integer2);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("alter index");
      SQLUtil.isDML("w>zlin,@6");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "alter index";
      stringArray0[1] = "alter index";
      stringArray0[3] = "alter index";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = SQLUtil.normalize("LS/%Ed", true);
      assertEquals("LS / % Ed", string0);
      
      DBSchema dBSchema0 = new DBSchema(";F8wV(|%");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", dBSchema0);
      StringBuilder stringBuilder0 = new StringBuilder();
      String string1 = SQLUtil.ownerDotComponent(dBSchema0);
      assertEquals(";F8wV(|%", string1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SQLUtil.removeComments("~BdCZy,WUVz;J!a");
      String string0 = SQLUtil.normalize("~BdCZy,WUVz;J!a", true);
      assertEquals("~ BdCZy, WUVz ; J ! a", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-2), "~BdCZy,WUVz;J!a");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("create materialized vieww>zlin,@6_+fl%@q", defaultDBTable0, dBDataType0, integer0, integer0);
      String string1 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("create materialized vieww>zlin,@6_+fl%@q ~BDCZY,WUVZ;J!A(3,3) NULL", string1);
      
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("update-- firsttrunkpage:", defaultDBTable0, dBDataType0);
      SQLUtil.renderColumn(defaultDBColumn1);
      Boolean boolean0 = SQLUtil.mutatesStructure("create materialized vieww>zlin,@6_+fl%@q");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4941751382893083
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SQLUtil.removeComments("~BdCZy,WU;!a");
      SQLUtil.removeComments("~BdCZy,WU;!a");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance((-33), "~BdCZy,WU;!a");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "alter table";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "~BdCZy,WU;!a";
      stringArray0[4] = "~BdCZy,WU;!a";
      stringArray0[5] = "~BdCZy,WU;!a";
      stringArray0[6] = "~BdCZy,WU;!a";
      SQLUtil.mutatesDataOrStructure("alter table");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      BasicUUID basicUUID0 = new BasicUUID();
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getForeignKeys(basicUUID0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.094729047527649
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SQLUtil.removeComments("~BdCZy,WU;!a");
      SQLUtil.removeComments("~BdCZy,WU;!a");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance((-33), "~BdCZy,WU;!a");
      String[] stringArray0 = new String[13];
      stringArray0[0] = "alter table";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "~BdCZy,WU;!a";
      stringArray0[4] = "~BdCZy,WU;!a";
      stringArray0[5] = "~BdCZy,WU;!a";
      stringArray0[6] = "~BdCZy,WU;!a";
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("-- firstTrunkPage: ");
      assertNull(boolean0);
      
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertNotNull(string0);
      assertEquals("table null", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringWriter stringWriter0 = new StringWriter(759);
      StringWriter stringWriter1 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, false);
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[1] = 'V';
      charArray0[2] = 'g';
      charArray0[3] = ')';
      charArray0[0] = '*';
      stringWriter1.write(charArray0);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) stringWriter0;
      objectArray0[1] = (Object) mockPrintWriter0;
      Object object0 = new Object();
      objectArray0[2] = object0;
      String[] stringArray0 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("[e4N:s", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      Object object1 = new Object();
      mockPrintWriter0.printf("[e4N:s", (Object[]) stringArray0);
      mockPrintWriter0.append('j');
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      TableContainer tableContainer0 = new TableContainer("[e4N:s");
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = SQLUtil.normalize("LS/%Ed", false);
      assertEquals("LS / % Ed", string0);
      
      DBSchema dBSchema0 = new DBSchema(";F8wV(|%");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("5", dBSchema0);
      StringBuilder stringBuilder0 = new StringBuilder();
      boolean boolean0 = SQLUtil.isDML("insert,}ftfp)&&g?m");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1537419427010902
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SQLUtil.removeComments("~BdCZy,WU;!a");
      SQLUtil.removeComments("~BdCZy,WU;!a");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-33), "~BdCZy,WU;!a");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("create materialized vieww>zlin,@6_+fl%@q", defaultDBTable0, dBDataType0, integer0, integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("create materialized vieww>zlin,@6_+fl%@q ~BDCZY,WU;!A(3,3) NULL", string0);
      
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("2c:=-_Cg6Q]xs", defaultDBTable0, dBDataType0);
      String string1 = SQLUtil.ownerDotComponent(defaultDBColumn0);
      assertEquals("null.create materialized vieww>zlin,@6_+fl%@q", string1);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6674619334292946
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DBSequence dBSequence0 = new DBSequence("", "", "");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create materialized vieww>zlin,@6_+fl%@q");
      DBDataType.getInstance(57, "create materialized vieww>zlin,@6_+fl%@q");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      TableContainer tableContainer0 = new TableContainer("");
      tableContainer0.getTable("'");
      Integer integer1 = RawTransaction.COMMIT;
      Integer integer2 = RawTransaction.ABORT;
      SQLUtil.removeComments("");
      String[] stringArray0 = new String[5];
      stringArray0[0] = " ADD ";
      stringArray0[1] = "create unique index";
      stringArray0[2] = "create materialized vieww>zlin,@6_+fl%@q";
      stringArray0[3] = "";
      stringArray0[4] = "N1Ox'cl:W'Y!FC";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "create unique index", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      StringBuilder stringBuilder0 = new StringBuilder();
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SQLUtil.normalize("DataFileCache.close() : flags", true);
      System.setCurrentTimeMillis((-1594L));
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize(" (");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format:  (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SQLUtil.removeComments("W>zLIN,@6_+Fl%@q");
      SQLUtil.removeComments("W>zLIN,@6_+Fl%@q");
      SQLUtil.mutatesStructure("W>zLIN,@6_+Fl%@q");
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("W>zLIN,@6_+Fl%@q", stringBuilder0);
      stringBuilder1.insert(0, (CharSequence) stringBuilder0);
      stringBuilder0.insert(0, 97);
      SQLUtil.isDDL("W>zLIN,@6_+Fl%@q");
      DBDataType dBDataType0 = DBDataType.getInstance(2106, "drop table3}-{ixhbl'j0\"u");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("+a{AJh<J:7aD+kCrC", (DBTable) null, dBDataType0);
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.2232256181253884
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SQLUtil.normalize("~W25HX,*b", true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("%cJV|)");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("selectsequence");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("~ W25HX, * b");
      Integer integer0 = RawTransaction.COMMIT;
      System.setCurrentTimeMillis(2794L);
      String string0 = SQLUtil.normalize("MU4(^V'", false);
      assertEquals("MU4 (^ V ''", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringWriter stringWriter0 = new StringWriter(759);
      StringWriter stringWriter1 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, false);
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[1] = 'V';
      charArray0[2] = 'g';
      charArray0[3] = ')';
      charArray0[0] = '*';
      stringWriter1.write(charArray0);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) stringWriter0;
      objectArray0[1] = (Object) mockPrintWriter0;
      Object object0 = new Object();
      objectArray0[2] = object0;
      String[] stringArray0 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("[e4N:s", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", true, stringArray0);
      defaultDBTable0.removeUniqueConstraint(dBPrimaryKeyConstraint0);
      Object object1 = new Object();
      mockPrintWriter0.printf("[e4N:s", (Object[]) stringArray0);
      mockPrintWriter0.append('j');
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      TableContainer tableContainer0 = new TableContainer("[e4N:s");
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9559838465843624
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringWriter stringWriter0 = new StringWriter(759);
      StringWriter stringWriter1 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, false);
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[1] = 'V';
      charArray0[2] = 'g';
      charArray0[3] = ')';
      charArray0[0] = '*';
      stringWriter1.write(charArray0);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) stringWriter0;
      objectArray0[1] = (Object) mockPrintWriter0;
      Object object0 = new Object();
      objectArray0[2] = object0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TableContainer tableContainer0 = new TableContainer("alter indexw>zlin,@6_+fl%@q", defaultDBTable0);
      TableContainer tableContainer1 = new TableContainer("newDefaultUUID", tableContainer0);
      tableContainer0.getComponents();
      tableContainer1.getTable("execute");
      StringBuilder stringBuilder0 = new StringBuilder();
      System.setCurrentTimeMillis(759);
      SQLUtil.mutatesDataOrStructure("execute");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, false, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9254081650860664
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("deletetable null");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      Integer integer0 = RawTransaction.COMMIT;
      StringBuilder stringBuilder0 = new StringBuilder();
      TableContainer tableContainer0 = new TableContainer("isClosed");
      System.setCurrentTimeMillis(9223372036825200000L);
      defaultDBTable0.getUniqueConstraint((String[]) null);
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringWriter stringWriter0 = new StringWriter(759);
      StringWriter stringWriter1 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, false);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("CACHED", true, defaultDBTable0, "exec");
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT CACHED CHECK exec", string0);
      
      StringBuilder stringBuilder0 = new StringBuilder();
      String string1 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT CACHED ", string1);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringWriter stringWriter0 = new StringWriter(759);
      StringWriter stringWriter1 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, false);
      char[] charArray0 = new char[5];
      charArray0[1] = 'V';
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "KB4#HXkAo?6#?fl");
      charArray0[2] = 'g';
      String[] stringArray0 = new String[6];
      stringArray0[0] = "KB4#HXkAo?6#?fl";
      stringArray0[1] = "KB4#HXkAo?6#?fl";
      stringArray0[2] = null;
      stringArray0[3] = "";
      stringArray0[4] = "KB4#HXkAo?6#?fl";
      stringArray0[5] = "KB4#HXkAo?6#?fl";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (KB4#HXkAo?6#?fl, KB4#HXkAo?6#?fl, , , KB4#HXkAo?6#?fl, KB4#HXkAo?6#?fl) REFERENCES null(KB4#HXkAo?6#?fl, KB4#HXkAo?6#?fl, , , KB4#HXkAo?6#?fl, KB4#HXkAo?6#?fl)", string0);
      
      StringBuilder stringBuilder0 = new StringBuilder();
      String string1 = SQLUtil.constraintName(dBForeignKeyConstraint0);
      assertEquals("", string1);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DBSequence dBSequence0 = new DBSequence("", "", "");
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigInteger bigInteger1 = BigInteger.ZERO;
      DBDataType dBDataType0 = DBDataType.getInstance((-1228243077), "delete");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DBSchema dBSchema0 = new DBSchema("delete");
      dBSchema0.setName("");
      dBSchema0.getTable("insert");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      Integer integer2 = new Integer((-1228243077));
      Integer integer3 = RawTransaction.ABORT;
      Integer integer4 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop table", (DBTable) null, dBDataType0, integer2, integer4);
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn0);
      vector0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      assertEquals("drop table, drop table", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DBSequence dBSequence0 = new DBSequence("", "", "");
      BigInteger bigInteger0 = ValueLong.MAX;
      BigInteger bigInteger1 = BigInteger.ZERO;
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", false, stringArray0);
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (, , , , )", string0);
      
      StringBuilder stringBuilder0 = new StringBuilder();
      String string1 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT  ", string1);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      char[] charArray0 = new char[7];
      charArray0[0] = '=';
      charArray0[2] = 'E';
      charArray0[3] = 'e';
      charArray0[4] = '=';
      charArray0[5] = 'Y';
      pipedWriter0.write(charArray0);
      SQLUtil.renderNumber(streamTokenizer0);
      SQLUtil.renderNumber(streamTokenizer0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("- 0");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("v4mm\"?h", false, defaultDBTable0, "- 0");
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append((float) (-4));
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("-4.0CONSTRAINT v4mm\"?h ", stringBuilder0.toString());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8866967846580784
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "5s_";
      String[] stringArray0 = new String[3];
      stringArray0[0] = "5s_";
      stringArray0[1] = "5s_";
      stringArray0[2] = "drop indexr%1:5>)i}";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "5s_", true, stringArray0);
      dBUniqueConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      String string1 = "N$5*}8EK9";
      SQLUtil.parseColumnTypeAndSize("N$5*}8EK9");
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn("CONSTRAINT 5s_ UNIQUE (5s_, 5s_, drop indexr%1:5>)i})");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'CONSTRAINT 5s_ UNIQUE (5s_, 5s_, drop indexr%1:5>)i})' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8775242811493906
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("Error converting to time.", 139);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      SQLUtil.mutatesDataOrStructure("select into");
      Integer integer0 = RawTransaction.COMMIT;
      StringBuilder stringBuilder0 = new StringBuilder();
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      char[] charArray0 = new char[7];
      charArray0[2] = 'E';
      charArray0[3] = 'e';
      charArray0[4] = '\u0000';
      streamTokenizer0.nval = 3634.2418550889;
      charArray0[5] = 'Y';
      pipedWriter0.write(charArray0);
      SQLUtil.renderNumber(streamTokenizer0);
      SQLUtil.renderNumber(streamTokenizer0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("3634.2418550889");
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLUtil.typeAndName(defaultDBTable0);
      String string0 = "drop table";
      // Undeclared exception!
      try { 
        DBDataType.getInstance("K=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = SQLUtil.normalize("LS/%Ed", false);
      assertEquals("LS / % Ed", string0);
      
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter session");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      char[] charArray0 = new char[7];
      charArray0[0] = '=';
      charArray0[2] = 'E';
      streamTokenizer0.nval = (double) 'e';
      charArray0[4] = '=';
      charArray0[5] = 'Y';
      pipedWriter0.write(charArray0);
      SQLUtil.renderNumber(streamTokenizer0);
      SQLUtil.renderNumber(streamTokenizer0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("101");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("v4mm\"?h", false, defaultDBTable0, "101");
      dBCheckConstraint0.setTable(defaultDBTable0);
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append((float) (-4));
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("v4mm\"?h");
      assertEquals(1, objectArray0.length);
  }
}
