/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 09:55:58 GMT 2018
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("", 515);
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testSMTP("xtZ,G_@:d)", 0);
      services_SIMPLE_Result0.works = false;
      services_SIMPLE_Result1.Error = "xtZ,G_@:d)";
      services_SIMPLE_Result0.works = false;
      services_SIMPLE_Result1.Error = "xtZ,G_@:d)";
      services_SIMPLE_Result1.toString();
      assertFalse(services_SIMPLE_Result1.works);
      
      services_SIMPLE_Result1.works = false;
      services_SIMPLE_Result1.works = true;
      services_SIMPLE_Result1.works = true;
      Services.SIMPLE_Result services_SIMPLE_Result2 = new Services.SIMPLE_Result();
      services_SIMPLE_Result1.toString();
      Services.SIMPLE_Result services_SIMPLE_Result3 = new Services.SIMPLE_Result();
      Services.SIMPLE_Result services_SIMPLE_Result4 = new Services.SIMPLE_Result();
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("", 0);
      Services.SIMPLE_Result services_SIMPLE_Result5 = new Services.SIMPLE_Result();
      services_SIMPLE_Result4.toString();
      services_HTTP_Result0.toString();
      services_SIMPLE_Result4.reset();
      Services.SIMPLE_Result services_SIMPLE_Result6 = new Services.SIMPLE_Result();
      assertEquals(0L, services_SIMPLE_Result6.time);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("+~e;GNd?g(~4\"5J\"", 2263);
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      
      services_HTTP_Result0.Error = "**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@4525c9d3) **";
      services_SIMPLE_Result0.Error = "**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@4525c9d3) **";
      services_SIMPLE_Result0.toString();
      Services.testHTTP("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@4525c9d3) **.\n****", 0);
      Services.testHTTPS("+~e;GNd?g(~4\"5J\"", 0);
      Services services0 = new Services();
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@4525c9d3) **", 0);
      assertEquals(0L, services_HTTP_Result1.time);
      assertFalse(services_HTTP_Result1.works);
      assertEquals(0, services_HTTP_Result1.code);
      assertEquals(0, services_HTTP_Result1.page_weight);
      
      services_SIMPLE_Result0.reset();
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("?", (-2546));
      services_HTTP_Result0.reset();
      services_HTTP_Result0.time = 2491L;
      services_HTTP_Result0.Error = "1";
      services_HTTP_Result0.reset();
      Services.HTTP_Result services_HTTP_Result1 = new Services.HTTP_Result();
      assertEquals(0, services_HTTP_Result1.page_weight);
      assertFalse(services_HTTP_Result1.works);
      assertEquals(0, services_HTTP_Result1.code);
      assertEquals(0L, services_HTTP_Result1.time);
      
      services_HTTP_Result0.works = false;
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTPS("", 0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("?", (-2546));
      services_SIMPLE_Result0.Error = "JD";
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "JD");
      services_SIMPLE_Result0.reset();
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("http://:2536");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "1");
      Services services0 = new Services();
      Services.testHTTPS("?", 0);
      Services.testHTTP("", 0);
      services_HTTP_Result2.reset();
      Services.testPOP3("** Code de page : ", 1555);
      Services.testSMTP((String) null, 0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.2", 1555);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      services_HTTP_Result0.reset();
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testSMTP("'VABY9n", 0);
      assertEquals(0L, services_SIMPLE_Result1.time);
      assertFalse(services_SIMPLE_Result1.works);
      
      Services.HTTP_Result services_HTTP_Result3 = Services.testHTTP("", 2536);
      assertTrue(services_HTTP_Result3.works);
      assertEquals(2, services_HTTP_Result3.page_weight);
      
      Services.HTTP_Result services_HTTP_Result4 = Services.testHTTP("JD", (-1));
      assertEquals(0, services_HTTP_Result4.code);
      assertEquals(0, services_HTTP_Result4.page_weight);
      assertEquals(0L, services_HTTP_Result4.time);
      assertFalse(services_HTTP_Result4.works);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("", 0);
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.code = 1;
      services_HTTP_Result0.reset();
      services_SIMPLE_Result0.reset();
      services_HTTP_Result0.reset();
      services_SIMPLE_Result0.reset();
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      assertEquals(0L, services_SIMPLE_Result1.time);
      assertFalse(services_SIMPLE_Result1.works);
      
      Services services0 = new Services();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://*Y|LfIatO'{e:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("*Y|LfIatO'{e", 0);
      assertTrue(services_HTTP_Result1.works);
      
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40001);
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "");
      services_HTTP_Result0.reset();
      services_SIMPLE_Result0.time = (long) 1;
      services_HTTP_Result0.toString();
      services_SIMPLE_Result0.reset();
      services_HTTP_Result0.toString();
      Services.SIMPLE_Result services_SIMPLE_Result2 = Services.testPOP3((String) null, 0);
      assertFalse(services_SIMPLE_Result2.works);
      assertEquals(0L, services_SIMPLE_Result2.time);
      
      services_SIMPLE_Result2.Error = "";
      Services.testHTTPS("", (-1));
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTP((String) null, (-1392));
      services_HTTP_Result2.toString();
      Services.testHTTP("", 0);
      String string0 = services_HTTP_Result2.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur : java.lang.NullPointerException**.\n****", string0);
      
      services_HTTP_Result0.toString();
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      
      Services.testHTTPS("", (-1));
      Services.HTTP_Result services_HTTP_Result3 = Services.testHTTPS("r*?y~avvbXkaa Z", 0);
      assertEquals(0, services_HTTP_Result3.code);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("", 0);
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.code = 1;
      services_HTTP_Result0.reset();
      services_HTTP_Result0.reset();
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      assertFalse(services_SIMPLE_Result1.works);
      assertEquals(0L, services_SIMPLE_Result1.time);
      
      Services services0 = new Services();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://*Y|LfIatO'{e:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@2104b913) **");
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("*Y|LfIatO'{e", 0);
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40001);
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@2104b913) **");
      services_HTTP_Result0.reset();
      services_SIMPLE_Result0.time = (long) 1;
      services_HTTP_Result0.toString();
      services_HTTP_Result0.toString();
      Services.SIMPLE_Result services_SIMPLE_Result2 = Services.testPOP3((String) null, 0);
      assertEquals(0L, services_SIMPLE_Result2.time);
      assertFalse(services_SIMPLE_Result2.works);
      
      services_SIMPLE_Result2.Error = "**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@2104b913) **";
      services_HTTP_Result0.toString();
      String string0 = services_HTTP_Result1.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : true\n** Temps : 0 ms\n** Poid de la page : 126 octets\n** Code de page : -1\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      String string1 = services_HTTP_Result0.toString();
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string1);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      
      Services.testHTTPS("**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@2104b913) **", (-1));
      Services.testHTTPS("$o?", 0);
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTPS("", 0);
      assertEquals(0L, services_HTTP_Result2.time);
  }
}
