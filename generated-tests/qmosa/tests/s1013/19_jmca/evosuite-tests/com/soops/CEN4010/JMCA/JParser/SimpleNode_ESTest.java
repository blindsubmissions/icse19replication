/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:13:46 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.PipedInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1245));
      Node[] nodeArray0 = new Node[9];
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1245));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2447);
      String string0 = "";
      simpleNode0.setIdentifier("");
      JavaParser javaParser0 = new JavaParser("<");
      int int0 = 273;
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 273);
      simpleNode0.jjtAddChild(simpleNode1, 273);
      simpleNode0.jjtSetParent(simpleNode1);
      StringWriter stringWriter0 = new StringWriter(2447);
      stringWriter0.append('g');
      stringWriter0.append('g');
      // Undeclared exception!
      try { 
        simpleNode0.dump("", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2447
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("<FLOATING_POINT_LITERAL>");
      javaParser0.Modifiers();
      StringReader stringReader0 = new StringReader("<FLOATING_POINT_LITERAL>");
      stringReader0.reset();
      javaParser0.ReInit((Reader) stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("", stringWriter0);
      assertEquals("", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1258);
      simpleNode0.jjtGetNumChildren();
      String string0 = "*ge";
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 1258);
      // Undeclared exception!
      try { 
        simpleNode0.toString("*ge");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1258
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.toString("");
      simpleNode0.setIdentifier("");
      simpleNode0.jjtOpen();
      simpleNode0.toString("");
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("CompilationUnit : ", stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.791759469228055
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      simpleNode0.setIdentifier("Java Parser Version 1.1:  Reading from standard input . . .");
      Node node0 = simpleNode0.parent;
      simpleNode0.parent = null;
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      simpleNode0.toString("^8 aPR8");
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.setIdentifier("Java Parser Version 1.1:  Reading from standard input . . .");
      simpleNode0.jjtClose();
      simpleNode0.jjtAddChild((Node) null, 1);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('D');
      char[] charArray0 = new char[2];
      charArray0[0] = 'D';
      charArray0[1] = 'D';
      stringWriter1.write(charArray0);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "Java Parser Version 1.1:  Reading from standard input . . .");
      simpleNode0.dump("^8 aPR8", stringWriter2);
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6691825225299436
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      simpleNode0.toString();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.setIdentifier("CompilationUnit");
      simpleNode1.jjtOpen();
      simpleNode0.toString("CompilationUnit");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("", stringWriter0);
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode1.dump("", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>CompilationUnit</identifier>\n</CompilationUnit>\n<CompilationUnit></CompilationUnit>\n<CompilationUnit>\n  <identifier>CompilationUnit</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6885673693022826
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("<<");
      simpleNode0.jjtOpen();
      StringWriter stringWriter0 = new StringWriter(936);
      stringWriter0.append((CharSequence) "<<");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("L=X%]^S", stringWriter1);
      char[] charArray0 = new char[4];
      charArray0[0] = 'w';
      charArray0[1] = 'w';
      charArray0[3] = 'w';
      // Undeclared exception!
      try { 
        stringWriter0.write(charArray0, 936, (-1720024377));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0379083330628327
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(50);
      simpleNode0.toString();
      simpleNode0.setIdentifier(">>");
      SimpleNode simpleNode1 = new SimpleNode((-2111113768));
      simpleNode1.jjtOpen();
      simpleNode0.toString("AdditiveExpression");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("AdditiveExpression", stringWriter0);
      simpleNode1.dump("Uh6!l", stringWriter0);
      simpleNode1.dump("AdditiveExpressionAdditiveExpression : >>", stringWriter0);
      assertEquals("<AdditiveExpression>\n  <identifier>*rshft</identifier>\n</AdditiveExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5366498974881577
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("].r;EaGr");
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 18);
      simpleNode0.toString("ug=YIJAL^ySCM&K_.>M");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("ug=YIJAL^ySCM&K_.>M", stringWriter0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      stringWriter0.close();
      simpleNode0.dump("!", stringWriter0);
      simpleNode0.dump("!", stringWriter0);
      assertEquals(19, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.6674619334292946
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.toString();
      simpleNode0.setIdentifier(">>");
      SimpleNode simpleNode1 = new SimpleNode((-2111113768));
      simpleNode1.jjtOpen();
      simpleNode0.toString("Literal");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("Literal", stringWriter0);
      simpleNode1.dump("Uh6!l", stringWriter0);
      simpleNode1.dump("LiteralLiteral : >>", stringWriter0);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.172993472439513
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier(">");
      simpleNode0.setIdentifier((String) null);
      String string0 = "Java Parser Version 1.1:  Usage is one of:";
      simpleNode0.toString("Java Parser Version 1.1:  Usage is one of:");
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("&");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 2413);
      // Undeclared exception!
      try { 
        simpleNode0.dump("'Pf", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.2275294114572126
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("!");
      simpleNode0.toString("H({14_b;!");
      simpleNode0.setIdentifier("h6,JjzIn#d -)");
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("B\b", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>!</identifier>\n  <identifier>h6,JjzIn#d -)</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6096274235960984
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("6l");
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("6l", stringWriter0);
      String string0 = "0`KNQ:HsG^z3E(mrk";
      simpleNode0.dump("0`KNQ:HsG^z3E(mrk", stringWriter0);
      Writer writer0 = null;
      simpleNode0.dump(";", stringWriter0);
      simpleNode0.dump("&", stringWriter1);
      simpleNode0.dump("3:R;.$(D8EGF", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.dump("~", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
