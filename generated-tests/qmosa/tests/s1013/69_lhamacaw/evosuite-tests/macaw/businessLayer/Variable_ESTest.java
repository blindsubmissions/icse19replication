/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:34:57 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Consumer;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setCategory("VALUE_LABEL");
      rawVariable0.setAvailability("VALUE_LABEL");
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("_)`UFA`faZ");
      rawVariable0.setCodeBookNumber("_)`UFA`faZ");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "_)`UFA`faZ";
      stringArray0[1] = ",j[1GEnzKFH+$";
      stringArray0[2] = "_)`UFA`faZ";
      stringArray0[3] = "_)`UFA`faZ";
      stringArray0[4] = "_)`UFA`faZ";
      stringArray0[5] = "_)`UFA`faZ";
      stringArray0[6] = "_)`UFA`faZ";
      stringArray0[7] = "_)`UFA`faZ";
      arrayList0.toArray(stringArray0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setNotes("_)`UFA`faZ");
      rawVariable0.clone();
      rawVariable0.getNotes();
      rawVariable0.getFilePath();
      assertEquals("_)`UFA`faZ", rawVariable0.getNotes());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getYear();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>(arrayList0);
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      rawVariable0.addOntologyTerms(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("");
      rawVariable0.codeBookNumber = "";
      derivedVariable0.setForm("gOI^S");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.setCoded(false);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      
      derivedVariable0.containsSourceVariable(rawVariable0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      String string0 = "";
      derivedVariable0.setColumnStart("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable1.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5665989181145106
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = ")<?im1\\HifO:\"k/";
      derivedVariable0.setCleaningStatus(")<?im1HifO:\"k/");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAvailability("B|Q&s");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      String string1 = "";
      User user0 = new User("", "");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber(")<?im1HifO:\"k/");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.090459923616198
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.setCleaningStatus((String) null);
      derivedVariable0.questionNumber = ":xZ*d.4>d*vB";
      derivedVariable0.setLabel("");
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("");
      ontologyTerm0.setNameSpace("PQ4+?BLL\"*c~-0T\"0^");
      String string0 = "variable.form.label";
      ontologyTerm0.clone();
      derivedVariable0.setCategory("");
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.4965075614664793
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("variable.name.label");
      derivedVariable0.setColumnStart("variable.name.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getName();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(0);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getName();
      derivedVariable0.setColumnEnd("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable1.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      rawVariable0.setAlias("EFSs/KeikD|G4;Shp[");
      rawVariable0.clone();
      derivedVariable0.getCleaningDescription();
      rawVariable1.cloneAttributes(derivedVariable1);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>(arrayList1);
      derivedVariable1.addSupportingDocuments(arrayList2);
      derivedVariable1.setAvailability("variable.name.label");
      derivedVariable1.getAlias();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setAlias((String) null);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable1.getLabel();
      assertEquals("variable.name.label", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.401985104501782
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCodeBookNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User("variable.category.label", "");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCoded(false);
      derivedVariable0.getValueLabels();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.401322962242367
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      Variable.validateFields(rawVariable0);
      Consumer<OntologyTerm> consumer0 = (Consumer<OntologyTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.forEach(consumer0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("hq");
      ontologyTerm1.setDescription("hq");
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setCleaningDescription("macaw.businessLayer.SupportingDocument");
      rawVariable0.setCategory("1I<T'H2 ");
      assertEquals("macaw.businessLayer.SupportingDocument", rawVariable0.getCleaningDescription());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("Zq+i'hT6y3mA'Zzb");
      derivedVariable0.clone();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getCategory();
      derivedVariable0.setYear(";*}@>p9+<[4\u0006uyzy");
      derivedVariable0.isCoded();
      assertEquals("Zq+i'hT6y3mA'Zzb", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.401197381662154
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("Nh)ZEhp");
      rawVariable0.getAvailability();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      supportingDocument0.setTitle("");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.getCleaningStatus();
      rawVariable0.setCoded(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.cloneAttributes(rawVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getForm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(false);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.setNotes("");
      rawVariable0.columnStart = "";
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.getName();
      assertFalse(rawVariable0.isNewRecord());
      
      derivedVariable0.setCodeBookNumber("");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.clear();
      derivedVariable0.addSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean1 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean1 == boolean0);
      
      User user0 = new User("_ITNqoy.Z9F66", "");
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertTrue(arrayList1.isEmpty());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isNewRecord();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath(";S|`C1.E^Tc");
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.setAvailability("YMt");
      String string0 = "";
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setCleaningStatus((String) null);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCleaned(true);
      rawVariable0.setColumnStart((String) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.clone();
      rawVariable0.getCategory();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7927474410419793
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(false);
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("");
      ontologyTerm1.setTerm("G;-fA~>Q@i^ru?q6");
      ontologyTerm1.setTerm("");
      ontologyTerm1.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setColumnEnd("");
      derivedVariable0.setCleaned(false);
      rawVariable0.getFilePath();
      User user0 = new User("user.county.label", "user.county.label");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(1);
      supportingDocument0.setDocumentCode("");
      arrayList1.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList1);
      String string0 = derivedVariable0.getCategory();
      assertEquals("Unknown", string0);
      
      ArrayList<String> arrayList2 = Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(1, arrayList2.size());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.475225923746323
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getForm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIsNewRecord(false);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.setNotes("variable.year.label");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.hasSameDisplayName(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable3 = new RawVariable();
      derivedVariable1.containsSourceVariable(rawVariable3);
      rawVariable2.getName();
      derivedVariable0.setCodeBookNumber("");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.clear();
      derivedVariable1.addSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      User user0 = new User("_ITNqoy.Z9F66", "");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable1);
      assertEquals("variable.year.label", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.4507178856854583
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "EZ*tqUq$eG";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable1.clone();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.isCoded();
      arrayList0.listIterator();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.4258180133534784
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(false);
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("");
      ontologyTerm1.setTerm("G;-fA~>Q@i^ru?q6");
      ontologyTerm1.setTerm("");
      ontologyTerm1.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setColumnEnd("");
      derivedVariable0.setCleaned(false);
      rawVariable0.getFilePath();
      rawVariable0.clone();
      derivedVariable0.getCleaningDescription();
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(arrayList0);
      derivedVariable0.addSupportingDocuments(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAvailability("LIST_CHOICE");
      derivedVariable0.getAlias();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setAlias("i89\"}N9}");
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("i89\"}N9}", rawVariable0.getAlias());
      
      derivedVariable0.getLabel();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1096494277885554
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("variable.name.label");
      derivedVariable0.setColumnStart("variable.name.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getName();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(0);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getName();
      derivedVariable0.setColumnEnd("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable1.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      rawVariable0.setAlias("EFSs/KeikD|G4;Shp[");
      User user0 = new User("variable.cleaningDescription.label", "");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      User user1 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable2, derivedVariable0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(1);
      supportingDocument1.setDocumentCode("variable.isCleaned.saveChanges.changedToNotClean");
      arrayList1.add(supportingDocument1);
      derivedVariable1.setSupportingDocuments(arrayList1);
      assertEquals("variable.name.label", derivedVariable0.getColumnStart());
      
      derivedVariable2.getCategory();
      Variable.validateFields(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.429424146204271
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(1);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(false);
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("");
      ontologyTerm1.setTerm("G;-fA~>Q@i^ru?q6");
      ontologyTerm1.setTerm("");
      ontologyTerm1.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setColumnEnd("");
      derivedVariable0.setCleaned(false);
      rawVariable0.getFilePath();
      User user0 = new User("user.county.label", "user.county.label");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(1);
      supportingDocument0.setDocumentCode("");
      arrayList1.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList1);
      String string0 = derivedVariable0.getCategory();
      assertEquals("Unknown", string0);
      
      ArrayList<String> arrayList2 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList2.size());
      
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.454473219785331
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("u,`");
      rawVariable0.setColumnStart("u,`");
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setAlias("variable.name.label");
      RawVariable rawVariable1 = new RawVariable();
      Variable.validateFields(rawVariable1);
      rawVariable0.setQuestionNumber("u,`");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add((OntologyTerm) null);
      rawVariable1.setOntologyTerms(arrayList0);
      user0.setUserID("m;4Ga|rkjhmkf>ra");
      rawVariable0.columnEnd = "c";
      rawVariable0.setName("variable.name.label");
      rawVariable1.columnStart = "NKE";
      rawVariable0.hasSameDisplayName(rawVariable1);
      ontologyTerm0.setTerm("NKE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.170939530196901
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      arrayList0.subList(0, 0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier(0);
      User user0 = new User();
      user0.setLastName("");
      user0.setAddressLine1("7icuk");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      rawVariable0.clone();
      rawVariable0.questionNumber = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSourceVariable((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.9857503099493785
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(0);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getName();
      derivedVariable0.setColumnEnd("?%hdZXo");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable1.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      rawVariable0.setAlias("?%hdZXo");
      User user0 = new User("NEW", "general.fieldValue.unknown");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable0);
      User user1 = new User();
      derivedVariable1.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      assertEquals("?%hdZXo", derivedVariable0.getColumnEnd());
      
      ArrayList<SupportingDocument> arrayList1 = rawVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setIdentifier(3514);
      supportingDocument1.setDocumentCode("");
      arrayList1.add(supportingDocument0);
      derivedVariable1.setSupportingDocuments(arrayList1);
      derivedVariable1.getCategory();
      Variable.validateFields(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.515592658973953
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      rawVariable0.setName("macaw.businessLayer.Variable");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(false);
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("macaw.businessLayer.Variable");
      ontologyTerm1.setTerm("G;-fA~>Q@i^ru?q6");
      ontologyTerm1.setTerm("macaw.businessLayer.Variable");
      ontologyTerm1.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setColumnEnd("macaw.businessLayer.Variable");
      derivedVariable0.setCleaned(false);
      rawVariable0.getFilePath();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable1);
      User user0 = new User("c~RS2:fxuu|*j)g", "L`DaV^t)A");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.containsSourceVariable(rawVariable1);
      Variable.validateFields(rawVariable0);
      assertEquals("macaw.businessLayer.Variable", rawVariable0.getName());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.3359890753535733
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      arrayList0.add(ontologyTerm0);
      arrayList0.subList(0, 0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier(0);
      User user0 = new User();
      user0.setLastName("");
      user0.setAddressLine1("7icuk");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.setCoded(false);
      rawVariable0.questionNumber = null;
      rawVariable0.createVariableSummary();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier(0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("7icuk");
      derivedVariable0.clone();
      RawVariable rawVariable2 = new RawVariable();
      Variable.validateFields(rawVariable2);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable1.hasSameDisplayName(rawVariable3);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.7985045625517033
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.addValueLabel(valueLabel0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(7);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.clone();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable2.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList1);
      derivedVariable1.cloneAttributes(derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.801119456538554
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("variable.name.label");
      derivedVariable0.setColumnStart("variable.name.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getName();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(0);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getName();
      derivedVariable0.setColumnEnd("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlias("");
      User user0 = new User("Ex7 r<V", "");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(0);
      supportingDocument1.setDocumentCode("Ex7 r<V");
      arrayList0.add(supportingDocument1);
      derivedVariable0.setForm("}O\"![UGN");
      derivedVariable0.clone();
      User user2 = new User();
      DerivedVariable.detectFieldChanges(user2, derivedVariable0, derivedVariable0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "EZ*tqUq$eG";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getCleaningStatus();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
  }
}
