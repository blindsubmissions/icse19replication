/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:02:54 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-2255), ".*[.]class$", ".*[.]class$", 625);
      player0.setY((-2255));
      Player player1 = new Player((short)4919);
      player0.setDead();
      player0.setJoinOK(player1, true);
      player0.setDead(0L);
      assertEquals((-2255.0F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 0;
      String string0 = "";
      String string1 = "`6_1Jd";
      Player player0 = new Player(0, "", "`6_1Jd", 0);
      player0.setDead();
      player0.getY();
      Player player1 = new Player((-716), "", (-2691));
      boolean boolean0 = true;
      player0.setJoinOK(player1, true);
      File file0 = MockFile.createTempFile("`6_1Jd", "tOj>qjb");
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(file0, "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(5, "afxqF@1}Bm:)Qw", ";P`\"3f;ut\"RDn|D7^[", (-428));
      player0.reset(false);
      player1.setDead();
      player0.setJoinOK(player1, true);
      player0.getX();
      player1.getTimeOfDeath();
      player0.setDead();
      player1.setZ((short)4919);
      player1.setDead();
      player0.toString();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)114;
      player0.unpack(byteArray0);
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(2748, "p=::{i-OK!", "", 1);
      int int0 = player0.type();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.getPictureId());
      assertEquals("p=::{i-OK!", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(5, int0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-903), "h,fGjkC", "h,fGjkC", (-903), 4);
      Party party0 = new Party(4);
      party0.boss = (Party) player0;
      party0.prev = (Party) player0;
      Player player1 = new Player((-903), "state.Party", "h,fGjkC", (-903));
      Party party1 = player1.head;
      party0.next = null;
      player0.remove(party0);
      boolean boolean0 = false;
      player0.setDead(0L, false);
      player0.prev = null;
      player0.getZ();
      player0.getName();
      player0.getMoney();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      player0.setMoney((-2442.21F));
      Player player1 = new Player((short)4919, "", "", 0);
      player1.remove(player0);
      player0.next = (Party) player1;
      player0.reset(false);
      player0.setX((-2793.81F));
      player0.gangStrength();
      player0.setDead();
      player0.getName();
      assertEquals((-2793.81F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      player0.reset(false);
      player0.setDead();
      player0.setZ(5717.419F);
      player0.setConnected(true);
      assertEquals(5717.419F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      File file0 = MockFile.createTempFile("hot", "", (File) null);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0, 4919);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      boolean boolean0 = player0.isConnected();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(boolean0);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(806);
      player0.getSubparty();
      player0.id = 2355;
      player0.setDead((-1365L));
      player0.setX(2355);
      Player player1 = new Player();
      player0.boss = (Party) player1;
      player0.setDead(15000L, true);
      player0.getStrength();
      player0.getIP();
      player0.reset(false);
      player0.getName();
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "state.Player$JoinInfo", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-1795), 0);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals((-1795), player1.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals("state.Player$JoinInfo", player1.getIP());
      assertFalse(player1.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(0, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(4, "", "", (-437));
      player0.getPictureId();
      player0.pack();
      player0.getY();
      player0.getY();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("Mv7j!OO(]HEQ2&@+n");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      player0.getZ();
      player0.setZ(0.0F);
      player0.remove((Party) null);
      player0.setZ((-2700.456F));
      player0.reset(true);
      player0.getPictureId();
      player0.setDead((long) 0, true);
      int int0 = player0.type();
      assertEquals((-2700.456F), player0.getZ(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.798513256943294
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(1396, "1", "", 2, 1396);
      player1.setJoinOK(player0, true);
      Player player2 = new Player((short)4919);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-58);
      player1.boss = (Party) player2;
      player2.unpack(byteArray0);
      player0.isDead();
      player1.setDead((long) (byte) (-58));
      player2.setMoney(0.1F);
      player0.setX(0.0F);
      player1.getIP();
      player2.gangStrength();
      player1.getZ();
      player1.getZ();
      player1.isDead();
      boolean boolean0 = player1.isDead();
      assertEquals((-58L), player1.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "", "", (-394));
      player0.setJoinOK(player1, false);
      Player player2 = new Player(2);
      player0.isJoinOK(player2, false);
      System.setCurrentTimeMillis(2);
      System.setCurrentTimeMillis(1L);
      boolean boolean0 = player1.isJoinOK(player0, false);
      boolean boolean1 = player0.isJoinOK(player1, false);
      assertFalse(boolean1 == boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals((-394), player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player1.isDead());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7480673485460891
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "", "", (-394));
      player0.setJoinOK(player1, false);
      Player player2 = new Player(2);
      Player player3 = new Player((short)4919);
      Player player4 = new Player();
      player3.prev = (Party) player4;
      Player player5 = new Player((short)4919);
      player1.isJoinOK(player5, false);
      assertEquals((-394), player1.getPictureId());
      
      boolean boolean0 = player0.isJoinOK(player3, true);
      assertTrue(player3.isConnected());
      assertEquals("0.0.0.0", player3.getIP());
      assertFalse(boolean0);
      assertEquals("Player4919", player3.getName());
      assertEquals(0, player3.getPictureId());
      assertEquals(10.0F, player3.getX(), 0.01F);
      assertEquals(0L, player3.getTimeOfDeath());
      assertEquals(0.0F, player3.getY(), 0.01F);
      assertFalse(player3.isDead());
      assertEquals(1, player3.getStrength());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6859453246697877
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      Player player1 = new Player((-1817));
      player0.setJoinOK(player1, true);
      byteArray0[1] = (byte) (-102);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-58);
      byteArray0[5] = (byte)73;
      player0.unpack(byteArray0);
      player0.isDead();
      player0.setDead(30L);
      player0.setMoney(180.9313F);
      player0.setX((-1.0F));
      player0.getIP();
      player0.gangStrength();
      player0.getZ();
      player0.getZ();
      System.setCurrentTimeMillis(1392409296320L);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(180.9313F, player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }
}
