/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:54:11 GMT 2018
 */

package weka.filters.unsupervised.attribute;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.Range;
import weka.core.SparseInstance;
import weka.filters.AllFilter;
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.Discretize;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Discretize_ESTest extends Discretize_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Discretize discretize0 = new Discretize("Y");
      discretize0.makeBinaryTipText();
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(3337);
      int int0 = 82;
      // Undeclared exception!
      try { 
        binarySparseInstance0.isMissing((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.AbstractInstance", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getRevision();
      discretize0.setInvertSelection(false);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Discretize discretize0 = new Discretize("l*{e5SNh");
      boolean boolean0 = true;
      discretize0.m_ClassIndex = 177;
      discretize0.setUseEqualFrequency(true);
      double[][] doubleArray0 = new double[5][9];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 177;
      doubleArray1[1] = (double) 177;
      doubleArray1[2] = (double) 177;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = (double) 177;
      doubleArray2[1] = (double) 177;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[9];
      doubleArray3[0] = (double) 177;
      doubleArray3[1] = (double) 177;
      doubleArray3[2] = (double) 177;
      doubleArray3[3] = (double) 177;
      doubleArray3[4] = (double) 177;
      doubleArray3[5] = (double) 177;
      doubleArray3[6] = (double) 177;
      doubleArray3[7] = (double) 177;
      doubleArray3[8] = (double) 177;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[8];
      doubleArray4[0] = (double) 177;
      doubleArray4[1] = (double) 177;
      doubleArray4[2] = (double) 177;
      doubleArray4[3] = (double) 177;
      doubleArray4[4] = (double) 177;
      doubleArray4[5] = (double) 177;
      doubleArray4[6] = (double) 177;
      doubleArray4[7] = (double) 177;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[0];
      doubleArray0[4] = doubleArray5;
      discretize0.m_CutPoints = doubleArray0;
      discretize0.listOptions();
      discretize0.setIgnoreClass(true);
      String[] stringArray0 = new String[0];
      Discretize.main(stringArray0);
      discretize0.findNumBinsTipText();
      discretize0.setInvertSelection(true);
      // Undeclared exception!
      try { 
        discretize0.getBinRangesString(511);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 511
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setAttributeIndices("");
      Filter.makeCopy(discretize0);
      discretize0.setDesiredWeightOfInstancesPerInterval(2.0);
      boolean boolean0 = true;
      discretize0.m_ClassIndex = 0;
      discretize0.setUseBinNumbers(true);
      discretize0.listOptions();
      discretize0.makeBinaryTipText();
      discretize0.getInvertSelection();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning((-458));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Discretize discretize0 = new Discretize("9/&=Kq&");
      discretize0.getBinRangesString((-1679));
      int int0 = (-98);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning((-98));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[7][2];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = (-587.14627);
      doubleArray1[2] = (-2542.40202289275);
      doubleArray1[3] = (-167.679515);
      doubleArray1[4] = (-1.0);
      doubleArray1[5] = 1.0;
      doubleArray1[6] = (-1.0);
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = (-167.679515);
      doubleArray2[1] = (-2692.352);
      doubleArray2[2] = (-167.679515);
      doubleArray2[3] = (-2542.40202289275);
      doubleArray2[4] = (-587.14627);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[4];
      doubleArray3[0] = (-1.0);
      doubleArray3[1] = (-1.0);
      doubleArray3[2] = 1.0;
      doubleArray3[3] = (-2542.40202289275);
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[7];
      doubleArray4[0] = (-2692.352);
      doubleArray4[1] = (-1.0);
      doubleArray4[2] = (-1.0);
      doubleArray4[3] = 0.0;
      doubleArray4[4] = 1.0;
      doubleArray4[5] = 0.0;
      doubleArray4[6] = 1.0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[1];
      doubleArray5[0] = (-167.679515);
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[0];
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[1];
      doubleArray7[0] = (-587.14627);
      doubleArray0[6] = doubleArray7;
      discretize0.m_CutPoints = doubleArray0;
      String string0 = discretize0.invertSelectionTipText();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals("Set attribute selection mode. If false, only selected (numeric) attributes in the range will be discretized; if true, only non-selected attributes will be discretized.", string0);
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[] doubleArray0 = new double[0];
      int[] intArray0 = new int[4];
      intArray0[0] = 2749;
      intArray0[1] = (-2);
      intArray0[2] = 0;
      intArray0[3] = 0;
      SparseInstance sparseInstance0 = new SparseInstance((-40.152), doubleArray0, intArray0, 919);
      // Undeclared exception!
      try { 
        discretize0.input(sparseInstance0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setInvertSelection(true);
      discretize0.useEqualFrequencyTipText();
      int int0 = (-501);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning((-501));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Discretize discretize0 = new Discretize("Incorrect Multi-Instance format, must be 'NOMINAL att, RELATIONAL att, CLASS att'!");
      discretize0.m_UseBinNumbers = false;
      discretize0.m_IgnoreClass = true;
      discretize0.getCutPoints(0);
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      assertFalse(discretize0.getFindNumBins());
      
      discretize0.setFindNumBins(true);
      assertTrue(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Discretize discretize0 = new Discretize("*W5D<hSCW|8@I");
      int[] intArray0 = new int[9];
      intArray0[0] = (-1405);
      intArray0[1] = (-2938);
      intArray0[2] = (-1954);
      intArray0[3] = 9;
      intArray0[4] = 66;
      intArray0[5] = 573;
      intArray0[6] = 0;
      intArray0[7] = (-71);
      intArray0[8] = 99;
      discretize0.setAttributeIndicesArray(intArray0);
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getUseBinNumbers());
      
      Discretize discretize1 = new Discretize();
      discretize0.m_UseBinNumbers = true;
      discretize0.makeBinaryTipText();
      discretize0.getCapabilities();
      String string0 = discretize0.getAttributeIndices();
      assertEquals("first-last", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Discretize discretize0 = new Discretize();
      discretize0.getCutPoints(3594);
      Discretize discretize1 = new Discretize();
      discretize1.attributeIndicesTipText();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Discretize discretize2 = new Discretize();
      // Undeclared exception!
      try { 
        discretize2.calculateCutPoints();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Discretize discretize0 = new Discretize("GUIEditors.props");
      discretize0.useBinNumbersTipText();
      // Undeclared exception!
      try { 
        discretize0.output();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Discretize discretize0 = new Discretize("\tInvert matching sense of column indexes.");
      discretize0.setOutputFormat();
      discretize0.listOptions();
      Discretize discretize1 = new Discretize();
      discretize1.setIgnoreClass(false);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "\tInvert matching sense of column indexes.";
      stringArray0[1] = "";
      Discretize.main(stringArray0);
      String string0 = discretize1.findNumBinsTipText();
      assertEquals("Optimize number of equal-width bins using leave-one-out. Doesn't work for equal-frequency binning", string0);
      
      discretize1.setInvertSelection(false);
      discretize0.getBinRangesString(511);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      
      discretize1.getFindNumBins();
      assertEquals(10, discretize1.getBins());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Discretize discretize0 = new Discretize("'B1of2'");
      int[] intArray0 = new int[8];
      intArray0[0] = 18;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'B1of2'");
      discretize0.listOptions();
      String[] stringArray0 = discretize0.getOptions();
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(6, stringArray0.length);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.133628922152431
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Discretize discretize0 = new Discretize("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      discretize0.listOptions();
      String[] stringArray0 = discretize0.getOptions();
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = discretize0.getOptions();
      discretize0.setOptions(stringArray0);
      assertEquals(6, stringArray0.length);
      
      String string0 = discretize0.globalInfo();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertEquals("An instance filter that discretizes a range of numeric attributes in the dataset into nominal attributes. Discretization is by simple binning. Skips the class attribute if set.", string0);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.293118601486813
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setInvertSelection(true);
      discretize0.getOptions();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Discretize discretize0 = new Discretize("%");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      discretize0.findNumBinsTipText();
      double[][] doubleArray0 = new double[0][7];
      discretize0.m_CutPoints = doubleArray0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      discretize0.setInvertSelection(false);
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Discretize discretize0 = new Discretize("%");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      discretize0.findNumBinsTipText();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%");
      discretize0.m_DefaultCols = "%";
      double[][] doubleArray0 = new double[0][7];
      discretize0.m_CutPoints = doubleArray0;
      // Undeclared exception!
      try { 
        discretize0.getCutPoints(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.685945324669788
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Discretize discretize0 = new Discretize("\tInvert matching sense of column indexes.");
      discretize0.setOutputFormat();
      discretize0.binsTipText();
      discretize0.getCapabilities();
      discretize0.setMakeBinary(true);
      discretize0.getOptions();
      discretize0.binsTipText();
      // Undeclared exception!
      try { 
        discretize0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(44);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(6);
      binarySparseInstance1.dataset();
      Discretize discretize0 = new Discretize();
      discretize0.setMakeBinary(true);
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0688846458275627
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Discretize discretize0 = new Discretize("If set to true< equal-frequency binning will be used instead of equal-wi~th binnwng.");
      discretize0.setIgnoreClass(true);
      discretize0.getOptions();
      System.setCurrentTimeMillis(2L);
      int[] intArray0 = new int[7];
      intArray0[0] = 7;
      intArray0[1] = (-2122219132);
      intArray0[2] = (-3985);
      intArray0[3] = 6;
      intArray0[4] = 19;
      intArray0[5] = (-3677);
      intArray0[6] = 4080;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0.0, intArray0, 445);
      SparseInstance sparseInstance0 = new SparseInstance((SparseInstance) binarySparseInstance0);
      // Undeclared exception!
      try { 
        discretize0.convertInstance(sparseInstance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.242973226438147
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Discretize discretize0 = new Discretize("#gS@ID)j");
      discretize0.m_ClassIndex = 178;
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 178;
      discretize0.m_UseEqualFrequency = true;
      doubleArray0[2] = (double) 178;
      doubleArray0[2] = (double) 178;
      Discretize discretize1 = new Discretize("#gS@ID)j");
      assertFalse(discretize1.getUseEqualFrequency());
      
      discretize0.getOptions();
      assertTrue(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.0624332675559933
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_DefaultCols = "_3*kK(3?y";
      discretize0.m_UseBinNumbers = true;
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      discretize0.setOutputFormat();
      discretize0.setInvertSelection(true);
      Range range0 = new Range("Sets the desired weight of instances per interval for equal-frequency binning.");
      discretize0.m_DiscretizeCols = range0;
      discretize0.getUseEqualFrequency();
      range0.toString();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Sets the desired weight of instances per interval for equal-frequency binning.";
      stringArray0[1] = "Sets the desired weight of instances per interval for equal-frequency binning.";
      stringArray0[2] = "Sets the desired weight of instances per interval for equal-frequency binning.";
      stringArray0[3] = "_3*kK(3?y";
      stringArray0[4] = "_3*kK(3?y";
      Discretize.main(stringArray0);
      discretize0.getOptions();
      discretize0.setOutputFormat();
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Attribute attribute0 = new Attribute((String) null, (String) null);
      LinkedList<Attribute> linkedList0 = new LinkedList<Attribute>();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>(linkedList0);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("date", arrayList0, 0);
      Instances instances1 = new Instances(instances0);
      double[] doubleArray0 = new double[1];
      SparseInstance sparseInstance0 = new SparseInstance(1, doubleArray0);
      SparseInstance sparseInstance1 = new SparseInstance((Instance) sparseInstance0);
      instances0.add((Instance) sparseInstance1);
      Discretize discretize0 = new Discretize("@attribute");
      assertFalse(discretize0.getMakeBinary());
      
      discretize0.setMakeBinary(true);
      assertTrue(discretize0.getMakeBinary());
      
      Discretize discretize1 = new Discretize();
      boolean boolean0 = discretize1.setInputFormat(instances1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.3598492521638335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_FindNumBins = true;
      int[] intArray0 = new int[6];
      intArray0[0] = (-388);
      intArray0[1] = (-2121610348);
      intArray0[2] = 11;
      intArray0[3] = (-1);
      intArray0[4] = 1062;
      intArray0[5] = 70;
      discretize0.setAttributeIndicesArray(intArray0);
      discretize0.setDesiredWeightOfInstancesPerInterval((-1149.15832593));
      discretize0.getOptions();
      assertEquals((-1149.15832593), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.7516666169315163
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Attribute attribute0 = new Attribute((String) null, (String) null);
      LinkedList<Attribute> linkedList0 = new LinkedList<Attribute>();
      Discretize discretize0 = new Discretize("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      arrayList0.stream();
      Instances instances0 = new Instances("", arrayList0, 1);
      Discretize discretize1 = new Discretize("|XIPXf!");
      discretize1.setMakeBinary(true);
      discretize0.setInputFormat(instances0);
      String[] stringArray0 = new String[0];
      discretize0.setOptions(stringArray0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.599191788184347
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Attribute attribute0 = new Attribute((String) null, (String) null);
      LinkedList<Attribute> linkedList0 = new LinkedList<Attribute>();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("date", arrayList0, 0);
      Instances instances1 = new Instances((String) null, arrayList0, 1);
      attribute0.enumerateValues();
      double[] doubleArray0 = new double[18];
      SparseInstance sparseInstance0 = new SparseInstance(1, doubleArray0);
      Discretize discretize0 = new Discretize();
      discretize0.setInputFormat(instances0);
      discretize0.setInputFormat(instances1);
      discretize0.batchFinished();
      System.setCurrentTimeMillis(2);
      Filter.useFilter(instances0, discretize0);
      Locale.getISOLanguages();
      discretize0.input(sparseInstance0);
      discretize0.batchFinished();
      // Undeclared exception!
      try { 
        discretize0.findNumBins(102);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 102
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }
}
