/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:11:55 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.ErrorPage;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.StandaloneComponent;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.translator("wheel.components.Link");
      dynamicSelectModel1.label("wheel.components.Link");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.translator("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.collection("");
      // Undeclared exception!
      try { 
        dynamicSelectModel3.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression  evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = "I";
      ElExpression elExpression0 = new ElExpression("I");
      ElExpression elExpression1 = elExpression0.errorMessage("I");
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression0, elExpression1, elExpression1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("unsupported feature ");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.collection("unsupported feature ");
      dynamicSelectModel2.empty("unsupported feature ");
      String string0 = "RV";
      dynamicSelectModel1.reset();
      dynamicSelectModel1.translator("RV");
      dynamicSelectModel2.getTopLevelComponent();
      int int0 = 0;
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getValue(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.empty(object0);
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.getComponents();
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.label("+N=ajKb");
      dynamicSelectModel2.enumeration("OSV3MR!*,[{");
      dynamicSelectModel1.value("+N=ajKb");
      dynamicSelectModel1.setTopLevelComponent(errorPage0);
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.collection("");
      dynamicSelectModel3.validate();
      dynamicSelectModel3.setComponent(errorPage0);
      String string0 = "U.vGGQTDg";
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.value("U.vGGQTDg");
      dynamicSelectModel0.reset();
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel4.collection("]XBQwdT7Ny?t8=k]X[L");
      dynamicSelectModel5.value("*6n+3aq:)oD=IC");
      // Undeclared exception!
      try { 
        dynamicSelectModel5.getLabel(321);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression ]XBQwdT7Ny?t8=k]X[L to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("");
      dynamicSelectModel0.validate();
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.enumeration("");
      dynamicSelectModel0.getComponent();
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression .values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.empty(object0);
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.getComponents();
      dynamicSelectModel1.setTopLevelComponent(errorPage0);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.collection("");
      // Undeclared exception!
      try { 
        dynamicSelectModel2.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Label attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection((String) null);
      dynamicSelectModel0.label("M!=_r+lPO");
      dynamicSelectModel1.reset();
      DynamicSelectModel dynamicSelectModel2 = new DynamicSelectModel();
      dynamicSelectModel1.reset();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Value attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.094729047527649
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = null;
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label((String) null);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.collection((String) null);
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.enumeration("");
      dynamicSelectModel1.label("");
      dynamicSelectModel1.reset();
      dynamicSelectModel3.collection("'zr&VC");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel0.value((String) null);
      dynamicSelectModel4.validate();
      int int0 = 0;
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel3.collection("org.mvel.PropertyAccessException");
      String string1 = "unbalanced brace '['";
      // Undeclared exception!
      try { 
        dynamicSelectModel5.translateValue("unbalanced brace '['");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression org.mvel.PropertyAccessException evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }
}
