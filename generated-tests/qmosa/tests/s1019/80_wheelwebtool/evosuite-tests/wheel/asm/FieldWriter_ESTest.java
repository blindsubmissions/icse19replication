/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:52:58 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "?&>?R$", "?&>?R$", "`{bcca+v<{*r5", "?&>?R$");
      fieldWriter0.getSize();
      ClassWriter classWriter1 = new ClassWriter(2);
      classWriter1.addType("?&>?R$");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter1, 0, "?&>?R$", "?&>?R$", "`{bcca+v<{*r5", "`{bcca+v<{*r5");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "`{bcca+v<{*r5", "`{bcca+v<{*r5", "G!z0PG{Fl", "?&>?R$");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("G!z0PG{Fl", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-946));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "q%3Pj$K5Kg=a0", "H[i_dD/9)#4j}gr", "H[i_dD/9)#4j}gr", "H[i_dD/9)#4j}gr");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "?&>?R$", "?&>?R$", "`{bcca+v<{*r5", "?&>?R$");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("`{bcca+v<{*r5", false);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "?>?R$", "?>?R$", "`{bcca+v<{*r5", "?>?R$");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0114042647073518
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-946));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-946), "ME+Q\"n8_", "+xHA gox-U5", "`{bcca+v<{*r5", "`{bcca+v<{*r5");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(2);
      ByteVector byteVector1 = byteVector0.put12((-1735), (-946));
      ByteVector byteVector2 = byteVector1.putInt((-1142));
      ByteVector byteVector3 = byteVector2.putUTF8("5zr/JH.d+Q");
      ByteVector byteVector4 = byteVector3.putShort(49);
      fieldWriter0.put(byteVector4);
      assertSame(byteVector3, byteVector4);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2940), "?>?R$", "`{bcca+v<{*r5", "ME+Q\"n8_", (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8599672810355049
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(67);
      String string0 = "q%3Pj$K5Kg=a0";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "q%3Pj$K5Kg=a0", "q%3Pj$K5Kg=a0", "q%3Pj$K5Kg=a0", "q%3Pj$K5Kg=a0");
      Attribute attribute0 = new Attribute("q%3Pj$K5Kg=a0");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6829081047004717
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-946));
      classWriter0.thisName = "Signature";
      classWriter0.newFieldItem("Signature", "Signature", "aD=Ed61f.n[7H:S_");
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1346, "Signature", "aD=Ed61f.n[7H:S_", (String) null, "aD=Ed61f.n[7H:S_");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0751393240053733
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2957));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2957), "`{bCcca+v<{*r5", "ME+Q\"n8_", "`{bCcca+v<{*r5", "`{bCcca+v<{*r5");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("Lp", false);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "MaKai<HtV)", "Deprecated", "", (Object) null);
      fieldWriter0.getSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putShort(1);
      byteVector0.put11((-2432), 16);
      ByteVector byteVector1 = byteVector0.putLong(1);
      fieldWriter0.put(byteVector1);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.2554823251787535
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2957));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2957), "`{bCcca+v<{*r5", "ME+Q\"n8_", "`{bCcca+v<{*r5", "`{bCcca+v<{*r5");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("Lp", false);
      classWriter0.visit((-2957), (-2957), "`{bCcca+v<{*r5", "GL[:;QmI~O%SL7", "%rE?jRtzqNB{L:m", (String[]) null);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2063));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      classWriter0.index = (-2063);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3, "]7=@BR<fgp/iM$,nOg!", "BLhz nqKCbV=,)i", "]7=@BR<fgp/iM$,nOg!", "BLhz nqKCbV=,)i");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("-'");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1682824501765625
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(615);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "!B-W5P;~", "nc5[o", "F", "nc5[o");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("The prefix must not be null", true);
      classWriter0.visit(24, 2, "nc5[o", "F", ";FFq!gCdp4sk", (String[]) null);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putLong(32L);
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector1);
      ByteVector byteVector2 = byteVector1.putLong(2);
      fieldWriter0.put(byteVector2);
      assertSame(byteVector2, byteVector1);
  }
}
