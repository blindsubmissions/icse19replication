/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:39:37 GMT 2018
 */

package weka.core.stemmers;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.core.TechnicalInformation;
import weka.core.stemmers.LovinsStemmer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LovinsStemmer_ESTest extends LovinsStemmer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1328782667214945
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[0];
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      String[] stringArray1 = new String[0];
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      LovinsStemmer.main(stringArray1);
      LovinsStemmer.main(stringArray0);
      String string1 = lovinsStemmer0.stemString("Q+'A4s?=J");
      assertEquals("q+'a4?=j", string1);
      
      String string2 = lovinsStemmer0.stem("ISBN-13");
      assertEquals("isbn-13", string2);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.791759469228055
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      assertEquals("wek.cor.stemmer.lovinsstemmer", string0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[2] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[3] = "wek.cor.stemmer.lovinsstemmer";
      stringArray0[4] = "wek.cor.stemmer.lovinsstemmer";
      stringArray0[5] = "8034";
      stringArray0[6] = "wek.cor.stemmer.lovinsstemmer";
      stringArray0[7] = "weka.core.stemmers.LovinsStemmer";
      lovinsStemmer0.stem("8034");
      LovinsStemmer.main(stringArray0);
      String string1 = lovinsStemmer0.stemString("}^ZGss");
      assertEquals("}^zgs", string1);
      
      String string2 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string2);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1166329241114679
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "*";
      stringArray0[1] = "Ph$4Lcj%P]hJQs}jR";
      stringArray0[2] = "PHDTHESIS";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "Any additional information that can help the reader. The first word should be capitalized.";
      stringArray0[7] = "j*W0N=\"9rnr[J^0";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("Ph$4Lcj%P]hJQs}jR");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("Ke@lhS");
      lovinsStemmer0.stem("y<(hm+Xy&Y5a?J");
      lovinsStemmer0.stemString("Any additional information that can help the reader. The first word should be capitalized.");
      String string0 = lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      String string1 = lovinsStemmer0.stem("");
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2700316752557592
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "2ftzq";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getRevision();
      String string0 = lovinsStemmer0.stem("2ftzq");
      assertEquals("2ftzq", string0);
      
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("2ftzq");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      String string2 = lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string2);
      
      lovinsStemmer0.stem("R. Quinlan");
      String string3 = lovinsStemmer0.stemString("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.");
      assertEquals("a stemmer ba on th lovin stemmer, describ he:\n\njl beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string3);
      
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      String string4 = lovinsStemmer0.stemString("oh3K1VbK?!wP9");
      assertEquals("oh3k1vbk?!wp9", string4);
      
      String string5 = lovinsStemmer0.getRevision();
      assertEquals("8034", string5);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0645707493072238
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("edition");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("8034");
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.getRevision();
      assertEquals("8034", string0);
      
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      LovinsStemmer.main((String[]) null);
      String string2 = lovinsStemmer0.stemString("edit");
      assertEquals("edit", string2);
      
      lovinsStemmer0.stem("weka.core.stemmers.LovinsStemmer");
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.getTechnicalInformation();
      String string3 = lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string3);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9242074232752622
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("size");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("y-zV~V%Oe@(= k|FjR");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.toString();
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.getRevision();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("lud");
      lovinsStemmer0.getTechnicalInformation();
      TechnicalInformation technicalInformation0 = lovinsStemmer0.getTechnicalInformation();
      assertFalse(technicalInformation0.hasAdditional());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0086074596411065
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("The International Standard Book Number (13 digits).");
      lovinsStemmer0.globalInfo();
      String string0 = lovinsStemmer0.stem("nzkher");
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("nzkher");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.globalInfo();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("lid");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "The International Standard Book Number (13 digits).";
      stringArray0[1] = "th intern standard book number (13 digit).";
      LovinsStemmer.main(stringArray0);
      String string1 = lovinsStemmer1.getRevision();
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2922907509099737
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[7];
      String string0 = lovinsStemmer0.stemString("i/Gdf");
      assertEquals("i/gdf", string0);
      
      stringArray0[0] = "a";
      String string1 = lovinsStemmer0.stemString(", editors, ");
      assertEquals(", editor, ", string1);
      
      lovinsStemmer0.stemString("D{0$/Uyv%DT");
      stringArray0[1] = "";
      stringArray0[2] = "-Mitc!";
      lovinsStemmer0.getRevision();
      stringArray0[3] = "";
      stringArray0[4] = "lyKq~3Q";
      lovinsStemmer0.stem("H?o~gzpu");
      stringArray0[5] = "pyY*< rCke5m]3ys7J";
      stringArray0[6] = "istr";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("-Mitc!");
      lovinsStemmer0.getTechnicalInformation();
      String string2 = lovinsStemmer0.getRevision();
      assertEquals("8034", string2);
      
      String string3 = lovinsStemmer0.stemString("istr");
      assertEquals("ister", string3);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.852219593363262
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("size");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("antanond");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("antanons");
      lovinsStemmer0.getTechnicalInformation();
      TechnicalInformation technicalInformation0 = lovinsStemmer0.getTechnicalInformation();
      assertEquals(TechnicalInformation.Type.ARTICLE, technicalInformation0.getType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1166329241114679
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.getRevision();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "8034";
      stringArray0[5] = "";
      stringArray0[6] = "8034";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("");
      lovinsStemmer0.stem("8034");
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "";
      LovinsStemmer.main(stringArray1);
      lovinsStemmer0.stem("pic");
      lovinsStemmer0.stemString("8034");
      LovinsStemmer.main(stringArray0);
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("8034");
      String string1 = lovinsStemmer0.stemString("Machine Learning");
      assertEquals("mach learn", string1);
      
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("8034");
      String string2 = lovinsStemmer0.stemString("eal");
      assertEquals("eal", string2);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0485222833394146
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[7];
      lovinsStemmer0.stemString("i/Gdf");
      stringArray0[0] = "a";
      lovinsStemmer0.stemString(", editors, ");
      lovinsStemmer0.stemString("D{0$/Uyv%DT");
      stringArray0[1] = "";
      stringArray0[2] = ", editor, ";
      lovinsStemmer0.getRevision();
      stringArray0[3] = "";
      stringArray0[4] = "lyKq~3Q";
      stringArray0[5] = "pyY*< rCke5m]3ys7J";
      stringArray0[6] = "istr";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      String string0 = lovinsStemmer0.stemString(", editor, ");
      assertEquals(", edit, ", string0);
      
      String string1 = lovinsStemmer0.getRevision();
      assertEquals("8034", string1);
      
      String string2 = lovinsStemmer0.stemString("J,bvo");
      assertEquals("j,bv", string2);
      
      String string3 = lovinsStemmer0.stemString(", edit, ");
      assertEquals(", edit, ", string3);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.027539370637948
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("size");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      assertEquals("wek.cor.stemmer.lovinsstemmer", string0);
      
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("y-zV~V%Oe@(= k|FjR");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.toString();
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.getRevision();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("o(z,{%M8rj^");
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("Rzd2-)1;U}1F");
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("rzd2-)1;u}1f");
      lovinsStemmer0.getTechnicalInformation();
      String string2 = lovinsStemmer0.getRevision();
      assertEquals("8034", string2);
      
      String string3 = lovinsStemmer0.stemString("cid");
      assertEquals("cis", string3);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0031823913658793
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[7];
      lovinsStemmer0.stemString("i/Gdf");
      lovinsStemmer0.stemString(", editors, ");
      lovinsStemmer0.stemString("i/gdf");
      stringArray0[1] = "";
      String string0 = lovinsStemmer0.getRevision();
      assertEquals("8034", string0);
      
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      String string1 = lovinsStemmer1.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      LovinsStemmer.main((String[]) null);
      String string2 = lovinsStemmer1.stemString("JOURNAL");
      assertEquals("journ", string2);
      
      lovinsStemmer0.stem("a");
      LovinsStemmer.main((String[]) null);
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.getTechnicalInformation();
      String string3 = lovinsStemmer2.stemString(", editors, ");
      assertEquals(", editor, ", string3);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2120994351006502
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "*";
      stringArray0[1] = "Ph$4Lcj%P]hJQs}jR";
      stringArray0[2] = "PHDTHESIS";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "Any additional information that can help the reader. The first word should be capitalized.";
      stringArray0[7] = "j*W0N=\"9rnr[J^0";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("Ph$4Lcj%P]hJQs}jR");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("pex");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stemString("PHDTHESIS");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("as");
      lovinsStemmer0.globalInfo();
      LovinsStemmer.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1851956848497927
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      String string0 = lovinsStemmer0.stemString("|sGjc@\"+('(S");
      assertEquals("|sgjc@\"+('(s", string0);
      
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "|sgjc@\"+('(s";
      stringArray0[1] = "|sgjc@\"+('(s";
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      LovinsStemmer.main(stringArray0);
      String string1 = lovinsStemmer0.stem("tex");
      assertEquals("tic", string1);
      
      String string2 = lovinsStemmer0.stemString("ately");
      assertEquals("at", string2);
      
      String[] stringArray1 = new String[4];
      stringArray1[0] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray1[1] = "ately";
      stringArray1[2] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray1[3] = "W_tbA]EI";
      LovinsStemmer.main(stringArray1);
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("\"o");
      lovinsStemmer0.globalInfo();
      LovinsStemmer.main(stringArray0);
      String string3 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string3);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8709750754114504
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("uad");
      String[] stringArray0 = new String[1];
      lovinsStemmer0.stemString("uas");
      lovinsStemmer0.toString();
      stringArray0[0] = "uad";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("ua");
      lovinsStemmer0.stemString("The price of the document.");
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stem("The price of the document.");
      lovinsStemmer0.stemString("atlid");
      String string0 = lovinsStemmer0.stemString("The price of the document.");
      assertEquals("th pric of th docum.", string0);
      
      lovinsStemmer0.stemString("atlid");
      lovinsStemmer0.stemString(" B}H;0s7/|(dk ");
      String string1 = lovinsStemmer0.stemString("atlid");
      assertEquals("atlis", string1);
      
      String string2 = lovinsStemmer0.stemString(" B}H;0s7/|(dk ");
      assertEquals(" b}h;0s7/|(dk ", string2);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String string0 = lovinsStemmer0.getRevision();
      assertEquals("8034", string0);
      
      lovinsStemmer0.stem("7L*M/_.rkT=|R5B");
      lovinsStemmer0.stemString("liddex");
      String string1 = lovinsStemmer0.stemString("liddic");
      assertEquals("lis", string1);
      
      lovinsStemmer0.stemString("8034");
      String string2 = lovinsStemmer0.stemString("5A[kjOu/0{L(q !>*Z");
      assertEquals("5a[kjou/0{l(q !>*z", string2);
      
      lovinsStemmer0.stemString("c");
      lovinsStemmer0.stemString("c");
      String string3 = lovinsStemmer0.stemString("lud");
      assertEquals("lus", string3);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.7492371052659756
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.globalInfo();
      String[] stringArray0 = new String[0];
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("0~Ceon~/vrmn])R7]U");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("V(t");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("Tf.LSf");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("O&d");
      lovinsStemmer0.stemString("v(t");
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      lovinsStemmer0.stemString("V(t");
      String string1 = lovinsStemmer0.stemString("lusyt");
      assertEquals("lusys", string1);
      
      lovinsStemmer0.stemString("=#wRXtUr!/-OX~VZ)4");
      lovinsStemmer0.stemString("0~ceon~/vrmn])r7]u");
      String string2 = lovinsStemmer0.stemString("4(Ed<#m>$(8&J");
      assertEquals("4(ed<#m>$(8&j", string2);
      
      lovinsStemmer0.stemString("F:K");
      lovinsStemmer0.stemString("o&d");
      String string3 = lovinsStemmer0.stemString("entially");
      assertEquals("ent", string3);
      
      lovinsStemmer0.stemString("8034");
      String string4 = lovinsStemmer0.stemString("ented");
      assertEquals("ent", string4);
      
      String string5 = lovinsStemmer0.stemString("V(t");
      assertEquals("v(t", string5);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1703669327366264
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.stemString("");
      lovinsStemmer0.getRevision();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.globalInfo();
      lovinsStemmer1.stemString("entond");
      lovinsStemmer1.getRevision();
      lovinsStemmer0.getTechnicalInformation();
      String string0 = lovinsStemmer0.stem("entons");
      assertEquals("enton", string0);
      
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer1.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer1.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      lovinsStemmer0.stemString("");
      lovinsStemmer1.stem("R. Quinlan");
      String string2 = lovinsStemmer1.stemString("8034");
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer1.getTechnicalInformation();
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      String string3 = lovinsStemmer2.stemString("V'w@z-d<p~Fl");
      assertEquals("v'w@z-d<p~fl", string3);
      
      String string4 = lovinsStemmer2.getRevision();
      assertTrue(string4.equals((Object)string2));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.7606176920415182
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("De_YS<bk0ffS Cw)");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "de_ys<bk0ffs cw)";
      stringArray0[1] = "IT=bi1H;4M8}_XI|Z#w";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      String[] stringArray1 = new String[5];
      lovinsStemmer0.stem("De_YS<bk0ffS Cw)");
      lovinsStemmer0.toString();
      stringArray1[0] = "L/x>O0TET-!0";
      lovinsStemmer0.stemString("L/x>O0TET-!0");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("[ ");
      lovinsStemmer0.getTechnicalInformation();
      TechnicalInformation technicalInformation0 = lovinsStemmer0.getTechnicalInformation();
      assertEquals(TechnicalInformation.Type.ARTICLE, technicalInformation0.getType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.8945571734275531
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("De_YS<bk0ffS Cw)");
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      String[] stringArray0 = new String[5];
      lovinsStemmer0.stem("De_YS<bk0ffS Cw)");
      lovinsStemmer0.toString();
      stringArray0[0] = "L/x>O0TET-!0";
      lovinsStemmer0.stemString("");
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      String[] stringArray1 = new String[5];
      stringArray1[0] = "pyY*< rCke5m]3ys7J";
      stringArray1[1] = "de_ys<bk0ffs cw)";
      stringArray1[2] = "";
      stringArray1[3] = "L/x>O0TET-!0";
      stringArray1[4] = "";
      LovinsStemmer.main(stringArray1);
      lovinsStemmer0.getTechnicalInformation();
      String string1 = lovinsStemmer0.stemString(".\"3:9kakw%obf>dk)!ix");
      assertEquals(".\"3:9kakw%obf>dk)!ix", string1);
      
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString(".\"3:9kakw%obf>dk)!ond");
      String string2 = lovinsStemmer0.stemString(".\"3:9kakw%obf>dk)!rud");
      assertEquals(".\"3:9kakw%obf>dk)!rus", string2);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.99427911026988
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.globalInfo();
      String[] stringArray0 = new String[0];
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("0~Cen~vrmn])7]U");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("A part of a book having its own title.");
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.stem("The work's title, typed as explained in the LaTeX book.");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("A part of a book having its own title.");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.globalInfo();
      LovinsStemmer.main(stringArray0);
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("arization");
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }
}
