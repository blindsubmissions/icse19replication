/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:39:23 GMT 2018
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("VIDEO_ASPECT_RATIO", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setLightColor(0);
      homeEnvironment1.setCeillingLightColor(13684944);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getSkyColor();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoWidth(0);
      assertEquals(0, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera camera0 = new Camera(13684944, 0.0F, 0.0F, 13684944, 0.0F, 0.0F);
      camera0.setYaw(0.0F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "", "", camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.clone();
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setSkyColor(13684944);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setPhotoWidth(3869);
      int int0 = 5;
      homeEnvironment0.setVideoQuality(5);
      String string0 = "";
      try { 
        MockURL.URL("");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: 
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(5606, (HomeTexture) null, 5606, 3, 1.7777778F);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(5606, homeEnvironment0.getSkyColor());
      assertEquals(1.7777778F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(5606, homeEnvironment0.getGroundColor());
      assertEquals(3, int0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setVideoWidth(2);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.getPhotoWidth();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment1.setSkyColor(8192);
      assertEquals(2, homeEnvironment0.getVideoHeight());
      assertEquals(8192, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setGroundColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment1.getVideoHeight();
      homeEnvironment1.setPhotoHeight((-2130));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("o'k+", (PropertyChangeListener) null);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals((-2130), homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality(1083);
      homeEnvironment0.setLightColor(1083);
      homeEnvironment1.setSubpartSizeUnderLight(0);
      homeEnvironment1.setVideoFrameRate(0);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment0.setPhotoWidth(1083);
      assertEquals(1083, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyColor((-892));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setVideoWidth((-892));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setCeillingLightColor(320);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setVideoWidth((-892));
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setCeillingLightColor(1009);
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 1458, 0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setWallsAlpha(551.705F);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(4);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Invalid URL base for JAR entry", propertyChangeListener0);
      Camera camera0 = new Camera(4, (-131.605F), 0.0F, 0.0F, 0.0F, 551.705F);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "7", camera0, object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight(2946.79F);
      homeEnvironment0.setWallsAlpha(1.0F);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      assertEquals(2946.79F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("WALLS_ALPHA", ".`E4", (Content) null, 0, 0.0F, "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1, homeTexture0, 1, 1);
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1, homeEnvironment0.getSkyColor());
      assertEquals(1, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = (-3893);
      homeEnvironment0.setSubpartSizeUnderLight((-3893));
      homeEnvironment0.setAllLevelsVisible(true);
      String string0 = "";
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(classLoader0, "~`7D3m");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource ~`7D3m
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment.DrawingMode.valueOf("OUTLINE");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight(1553);
      HomeEnvironment.DrawingMode.values();
      CatalogTexture catalogTexture0 = new CatalogTexture("G^l:69]n", (Content) null, 0, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoWidth(1377);
      assertEquals(1553, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.setCeillingLightColor(8);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setGroundColor(3);
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("ds1t p\"q-m", "ds1t p\"q-m", uRLContent0, 1485.7F, 1485.7F, "ds1t p\"q-m", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(9, homeTexture0, (-642), homeTexture0, 1200, 2697.3745F);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setPhotoHeight(8192);
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("ds1t p\"q-m", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(1200, homeTexture0, (-235), homeTexture0, 12, (-1892.188F));
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "ds1t p\"q-m", "ds1t p\"q-m", "ds1t p\"q-m");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment1.setGroundTexture(homeTexture0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.getWallsAlpha();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("JB`Z,", resourceURLContent0, 1, 1.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(8192, homeTexture0, 1, homeTexture0, 967, 1);
      homeEnvironment0.setVideoWidth(8192);
      homeEnvironment0.setVideoWidth(8192);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment1.getDrawingMode());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4036404106149494
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.setCeillingLightColor(8);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.getSkyTexture();
      homeEnvironment1.getGroundTexture();
      homeEnvironment1.setAllLevelsVisible(true);
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoHeight();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("lF", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("{=e\"K", "", object0, "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment_Property0, "CEILING_LIGHT_COLOR", "lF", "lF");
      Object object1 = new Object();
      propertyChangeEvent1.setPropagationId(object1);
      homeEnvironment0.setPhotoQuality((-112));
      homeEnvironment0.setPhotoWidth(7);
      assertEquals(7, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 1;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, (-1.0F), 1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("", resourceURLContent0, 1.5F, (-1217), false);
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, homeTexture0, 1, (-1217), 0.0F);
      homeEnvironment0.setVideoQuality(0);
      // Undeclared exception!
      try { 
        resourceURLContent0.getJAREntryName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoWidth((-1697));
      homeEnvironment0.setVideoWidth(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment1.setSkyColor((-2143591197));
      homeEnvironment1.setSkyColor((-2143591197));
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = homeEnvironment1.getDrawingMode();
      assertEquals(HomeEnvironment.DrawingMode.FILL, homeEnvironment_DrawingMode1);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, true);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(8192, (HomeTexture) null, 967, (HomeTexture) null, (-2995), 1.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment1.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("editorSubFolder.Mac OS X", "editorSubFolder.Mac OS X", (Content) null, 264, 1.0F, (String) null, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("editorSubFolder.Mac OS X", "GROUND_COLOR", (Content) null, (-4208), 1299.507F, "GROUND_COLOR", true);
      catalogTexture1.compareTo(catalogTexture0);
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(264, homeTexture0, (-4208), 400, 264);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoWidth((-4208));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.setWallsAlpha((-3467.4211F));
      homeEnvironment1.setPhotoWidth(400);
      System.setCurrentTimeMillis(264);
      homeEnvironment0.setGroundColor(400);
      assertEquals((-3467.4211F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment.DrawingMode.valueOf("OUTLINE");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.setVideoFrameRate(5);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "g/n!Z'{nBj6_$");
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setVideoFrameRate(12);
      homeEnvironment0.setPhotoQuality(12);
      homeEnvironment0.setPhotoWidth(0);
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("SUBPART_SIZE_UNDER_LIGHT", "editorSubFolder.Mac OS X", (Content) null, 0, 1.0F, (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-2087), homeTexture0, 2, 2);
      homeEnvironment0.setVideoFrameRate(300);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      List<Camera> list0 = new LinkedList<Camera>();
      homeEnvironment0.setLightColor(300);
      homeEnvironment0.setSubpartSizeUnderLight(1107);
      homeEnvironment0.setVideoFrameRate((-2087));
      homeEnvironment0.setPhotoQuality(1107);
      homeEnvironment0.setPhotoWidth(6);
      Random.setNextRandom(0);
      homeEnvironment0.setWallsAlpha(2);
      assertEquals(1107.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0253262207700673
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Content content0 = null;
      String string0 = "";
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 1.0F, 1.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(264, homeTexture0, 264, 13684944, (-346.61F));
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setLightColor(13684944);
      homeEnvironment0.setSubpartSizeUnderLight((-1141.1F));
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.setPhotoQuality(13684944);
      homeEnvironment0.setLightColor(264);
      homeEnvironment0.setLightColor(5);
      String string1 = "";
      Class<String> class0 = String.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource 
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 9, 763.51526F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(9, homeTexture0, 9, 9, 9);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(9, homeEnvironment0.getGroundColor());
      assertEquals(9, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(9, homeEnvironment0.getSkyColor());
      assertEquals(9.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-2067));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-2067), (HomeTexture) null, (-764), (-4549), 11053224);
      homeEnvironment1.setGroundColor((-2130));
      homeEnvironment0.setVideoWidth((-4549));
      homeEnvironment0.setCeillingLightColor((-2720));
      homeEnvironment1.setLightColor((-2130));
      homeEnvironment0.clone();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment0.setGroundColor(11053224);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 9, 763.51526F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(9, homeTexture0, 9, 9, 9);
      homeEnvironment0.setSkyTexture(homeTexture0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add((Camera) null);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6302533563892636
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyColor((-892));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(3);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setVideoWidth((-892));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setCeillingLightColor(320);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setSkyColor(0);
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      resourceURLContent0.getJAREntryName();
      CatalogTexture catalogTexture0 = new CatalogTexture("com/eteks/sweethome3d/model/", "ALL_LEVELS_VISIBLE", resourceURLContent0, 9, 623.9745F, "m");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(9, homeTexture0, 9, 10, 623.9745F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment2.getPhotoWidth();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("m");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.m
         //
         verifyException("java.lang.Enum", e);
      }
  }
}
