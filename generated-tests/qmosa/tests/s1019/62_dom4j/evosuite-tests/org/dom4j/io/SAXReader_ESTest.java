/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:24:13 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.net.URI;
import java.net.URL;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.ElementHandler;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.PruningElementStack;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXReader;
import org.dom4j.tree.DefaultDocument;
import org.dom4j.tree.NamespaceStack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLFilter;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.getXMLFilter();
      SAXReader sAXReader1 = new SAXReader((XMLReader) null);
      sAXReader0.installXMLFilter((XMLReader) null);
      // Undeclared exception!
      try { 
        sAXReader0.setFeature((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = true;
      SAXReader sAXReader0 = new SAXReader(true);
      String string0 = "-TwXchj(feL&*V@";
      StringReader stringReader0 = new StringReader("-TwXchj(feL&*V@");
      char[] charArray0 = new char[2];
      try { 
        sAXReader0.setXMLReaderClassName("-TwXchj(feL&*V@");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class -TwXchj(feL&*V@ not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("http://xml.org/sax/features/namespace-prefixes");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class http://xml.org/sax/features/namespace-prefixes not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("file://");
      String string0 = "9,;";
      sAXReader_SAXEntityResolver0.uriPrefix = "f^2";
      sAXReader0.setDocumentFactory((DocumentFactory) null);
      sAXReader0.setStringInternEnabled(true);
      sAXReader_SAXEntityResolver0.resolveEntity("file://", "org.dom4j.util.NonLazyElement");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      sAXReader0.setDocumentFactory(defaultDocumentFactory0);
      sAXReader_SAXEntityResolver0.resolveEntity("9,;", "");
      sAXReader0.setValidation(false);
      // Undeclared exception!
      try { 
        sAXReader0.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((XMLReader) null, false);
      sAXReader0.createDefaultEntityResolver(":,>48/|}W9A");
      sAXReader0.setXMLReader((XMLReader) null);
      assertFalse(sAXReader0.isValidating());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      sAXReader0.setDocumentFactory(documentFactory0);
      assertFalse(sAXReader0.isMergeAdjacentText());
      
      sAXReader0.setMergeAdjacentText(true);
      sAXReader0.getXMLReader();
      sAXReader0.getErrorHandler();
      sAXReader0.removeHandler("http://xml.org/sax/features/string-interning");
      assertTrue(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "org.dom4j.io.SAXModifyException";
      stringArray0[3] = "4gND}}=-";
      stringArray0[4] = "";
      dispatchHandler0.getHandler("");
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, (ElementHandler) null, 0);
      pruningElementStack0.getDispatchHandler();
      dispatchHandler0.addHandler("", (ElementHandler) null);
      dispatchHandler0.getHandler("5cO0x{+");
      sAXReader0.addHandler("", (ElementHandler) null);
      sAXReader0.isIncludeExternalDTDDeclarations();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      InputSource inputSource0 = new InputSource(pipedInputStream0);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected Nested exception: Pipe not connected
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      sAXReader0.isIncludeExternalDTDDeclarations();
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("http://xml.org/sax/properties/declaration-handler");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = QName.get((String) null, (String) null);
      qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      assertFalse(sAXReader0.isStripWhitespaceText());
      
      sAXReader0.setStripWhitespaceText(true);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      assertTrue(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      XMLReader xMLReader0 = sAXReader0.createXMLReader();
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLReader0);
      sAXReader0.getEntityResolver();
      sAXReader0.getEntityResolver();
      sAXReader0.isIncludeInternalDTDDeclarations();
      sAXReader0.setEntityResolver(sAXContentHandler0);
      sAXReader0.getErrorHandler();
      sAXReader0.setStripWhitespaceText(true);
      sAXReader0.getXMLReader();
      try { 
        sAXReader0.read("gHLeJ;_!zh");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/ext1/evosuite_readability_gen/projects/62_dom4j/gHLeJ;_!zh (No such file or directory) Nested exception: /home/ubuntu/ext1/evosuite_readability_gen/projects/62_dom4j/gHLeJ;_!zh (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Namespace namespace0 = new Namespace("--cT5rwr9h7=]'%~R2", "--cT5rwr9h7=]'%~R2");
      QName qName0 = defaultDocumentFactory0.createQName("\n  ", namespace0);
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      qName0.equals(documentFactory0);
      qName0.setDocumentFactory(defaultDocumentFactory0);
      SAXParseException sAXParseException0 = new SAXParseException("<;>'i1*\"G\"Ph$4Lcj%", (Locator) null);
      qName0.equals(sAXParseException0);
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.resetHandlers();
      sAXReader0.setEncoding("--cT5rwr9h7=]'%~R2");
      sAXReader0.getDispatchHandler();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NamespaceStack namespaceStack0 = new NamespaceStack();
      QName qName0 = namespaceStack0.getAttributeQName("T;1", "T;1", "T;1");
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      sAXReader0.setDefaultHandler(dispatchHandler0);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      SAXParseException sAXParseException0 = new SAXParseException("YN?&>?R$>", "", "YN?&>?R$>", 9, 2890);
      SAXParseException sAXParseException1 = new SAXParseException("M*bzWX)P<", locator2Impl0, sAXParseException0);
      xMLFilterImpl0.fatalError(sAXParseException1);
      xMLFilterImpl0.processingInstruction("Validation not supported for XMLReader: ", "org.dom4j.util.SimpleSingleton");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.getEncoding();
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      dispatchHandler0.getHandler("/");
      sAXReader0.setDefaultHandler((ElementHandler) null);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      assertTrue(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9785084205272367
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      String string0 = "";
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)112;
      sAXReader0.setStripWhitespaceText(false);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-26);
      byteArray0[6] = (byte)80;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        sAXReader0.read((InputStream) byteArrayInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.removeHandler((String) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.getErrorHandler();
      sAXReader0.setErrorHandler((ErrorHandler) null);
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9552088755878536
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((XMLReader) null);
      sAXReader0.getXMLFilter();
      sAXReader0.setXMLFilter((XMLFilter) null);
      sAXReader0.setStringInternEnabled(false);
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      try { 
        sAXReader0.read((Reader) stringReader0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9319232930107053
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory0.createQName(" : ", " : ", " : ");
      qName0.getDocumentFactory();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, false);
      sAXReader0.getErrorHandler();
      sAXReader0.setStripWhitespaceText(true);
      sAXReader0.getXMLReader();
      try { 
        sAXReader0.read(" : ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol:  :  Nested exception: no protocol:  : 
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      XMLReader xMLReader0 = sAXReader0.createXMLReader();
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLReader0);
      sAXReader0.getEntityResolver();
      sAXReader0.getEntityResolver();
      sAXReader0.isIncludeInternalDTDDeclarations();
      sAXReader0.setEntityResolver(sAXContentHandler0);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader1 = new SAXReader(defaultDocumentFactory0, true);
      MockFile mockFile0 = new MockFile("");
      MockFile mockFile1 = new MockFile("", "");
      sAXReader1.setIncludeInternalDTDDeclarations(false);
      try { 
        sAXReader1.read((File) mockFile1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.903400758180918
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XMLReader xMLReader0 = null;
      SAXReader sAXReader0 = new SAXReader((XMLReader) null);
      sAXReader0.getXMLFilter();
      sAXReader0.setXMLFilter((XMLFilter) null);
      File file0 = MockFile.createTempFile("S12=s/^E", "S12=s/^E", (File) null);
      MockFile mockFile0 = new MockFile(file0, "");
      try { 
        sAXReader0.read((File) mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.927096423454674
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("file://");
      sAXReader_SAXEntityResolver0.uriPrefix = "f^2";
      sAXReader0.setDocumentFactory((DocumentFactory) null);
      sAXReader0.setStringInternEnabled(true);
      sAXReader_SAXEntityResolver0.resolveEntity("file://", "org.dom4j.util.NonLazyElement");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      sAXReader0.setDocumentFactory(defaultDocumentFactory0);
      sAXReader_SAXEntityResolver0.resolveEntity("9,;", "");
      StringReader stringReader0 = new StringReader("9,;");
      try { 
        sAXReader0.read((Reader) stringReader0, "file://");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:// : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.666332585328325
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      QName.get((String) null, (String) null);
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      sAXReader0.setDocumentFactory((DocumentFactory) null);
      sAXReader0.setStringInternEnabled(true);
      String string0 = "hsdc+*^z1";
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("hsdc+*^z1");
      sAXReader_SAXEntityResolver0.resolveEntity("", "hsdc+*^z1");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      sAXReader0.setDocumentFactory(defaultDocumentFactory0);
      String string1 = "";
      sAXReader_SAXEntityResolver0.resolveEntity("", "");
      sAXReader0.setValidation(false);
      // Undeclared exception!
      try { 
        sAXReader0.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.8488997058418164
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = null;
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      String string1 = "mv#%*xB4>-18EV";
      StringReader stringReader0 = new StringReader("mv#%*xB4>-18EV");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      sAXReader0.getXMLFilter();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader1 = new SAXReader(defaultDocumentFactory0, false);
      sAXReader0.setXMLReader(parserAdapter0);
      try { 
        sAXReader1.setProperty("!2u(htFU'C6JAPMs", dispatchHandler0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property '!2u(htFU'C6JAPMs' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.997068727089016
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      String string0 = "file://";
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("file://");
      sAXReader_SAXEntityResolver0.uriPrefix = "f^2";
      boolean boolean0 = true;
      sAXReader0.setDocumentFactory((DocumentFactory) null);
      sAXReader0.setStringInternEnabled(true);
      sAXReader_SAXEntityResolver0.resolveEntity("file://", "org.dom4j.util.NonLazyElement");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      sAXReader0.setDocumentFactory(defaultDocumentFactory0);
      sAXReader_SAXEntityResolver0.resolveEntity("", "file://");
      StringReader stringReader0 = new StringReader("f^2");
      try { 
        sAXReader0.read((Reader) stringReader0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/ext1/evosuite_readability_gen/projects/62_dom4j/ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("mv#%*xB4>-18EV");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("mv#%*xB4>-18EV");
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, (String) null);
      String string0 = "org.dom4j.util.NonLazyElement";
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver1.resolveEntity((String) null, "org.dom4j.util.NonLazyElement");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      sAXReader_SAXEntityResolver0.resolveEntity("%I`DGlb4OnY", "org.dom4j.util.NonLazyElement");
      String string1 = "comment()";
      StringReader stringReader1 = new StringReader("comment()");
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("b>n-?", true);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class b>n-? not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.877807668867137
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("file://");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      String string0 = "S12=s/^E";
      File file0 = MockFile.createTempFile("S12=s/^E", "9,;", (File) null);
      MockFile mockFile0 = new MockFile((File) null, "S12=s/^E");
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.8782183066708504
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      InputStream inputStream0 = null;
      sAXReader0.getDocumentFactory();
      String string0 = "xL5FMs 5?Y";
      try { 
        sAXReader0.read((InputStream) null, "xL5FMs 5?Y");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: xL5FMs 5?Y Nested exception: no protocol: xL5FMs 5?Y
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.8782183066708504
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      File file0 = MockFile.createTempFile("http://xml.org/sax/properties/declaration-handler", "http://xml.org/sax/properties/declaration-handler");
      MockFile mockFile0 = new MockFile(file0, "Og&jV-w\"LR/");
      URL uRL0 = mockFile0.toURL();
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /tmp/http:/xml.org/sax/properties/declaration-handler0http:/xml.org/sax/properties/declaration-handler/Og&jV-w\"LR (No such file or directory) Nested exception: /tmp/http:/xml.org/sax/properties/declaration-handler0http:/xml.org/sax/properties/declaration-handler/Og&jV-w\"LR (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1682234916146403
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("file://");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      String string0 = "S12=s/^E";
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      File file0 = MockFile.createTempFile("S12=s/^E", "9,;", (File) null);
      MockFile mockFile0 = new MockFile((File) null, "S12=s/^E");
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.15145851024303
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.setStripWhitespaceText(false);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)25;
      byteArray0[5] = (byte)25;
      sAXReader0.createXMLReader();
      byteArray0[6] = (byte)112;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)80;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DefaultDocument defaultDocument0 = new DefaultDocument();
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      dispatchHandler0.removeHandler("");
      sAXReader0.addHandler((String) null, dispatchHandler0);
      sAXReader0.getXMLReader();
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      sAXReader0.setStripWhitespaceText(false);
      sAXReader0.setIgnoreComments(false);
      try { 
        sAXReader0.read("org.dom4j.datatype.DatatypeAttribute");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/ext1/evosuite_readability_gen/projects/62_dom4j/org.dom4j.datatype.DatatypeAttribute (No such file or directory) Nested exception: /home/ubuntu/ext1/evosuite_readability_gen/projects/62_dom4j/org.dom4j.datatype.DatatypeAttribute (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }
}
