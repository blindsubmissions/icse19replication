/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:01:14 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      outputFormat0.setEncoding("-padText");
      outputFormat0.isPadText();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertEquals("-padText", outputFormat0.getEncoding());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("xq>3$kt$!<Zb:", false, "");
      outputFormat0.setNewlines(false);
      outputFormat0.setExpandEmptyElements(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent(false);
      outputFormat1.setIndent(false);
      outputFormat1.setExpandEmptyElements(true);
      outputFormat1.setXHTML(false);
      outputFormat1.setTrimText(false);
      outputFormat1.setOmitEncoding(false);
      outputFormat0.setIndentSize((-635));
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat0.setTrimText(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setEncoding("");
      outputFormat0.setPadText(false);
      outputFormat0.setEncoding("xq>3$kt$!<Zb:");
      outputFormat1.getLineSeparator();
      outputFormat0.setIndentSize(914);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getNewLineAfterNTags();
      assertEqualsoutputFormat0.getIndent());
      
      String string0 = outputFormat1.getEncoding();
      assertEquals("UTF-8", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "";
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      outputFormat0.setExpandEmptyElements(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('/');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (/)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setEncoding("5");
      outputFormat0.setLineSeparator("EvZK97F'Wt(O");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isOmitEncoding();
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('?');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (?)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize((-981));
      boolean boolean0 = false;
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setTrimText(false);
      outputFormat0.setLineSeparator("");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-981));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -981
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, "");
      outputFormat0.setEncoding((String) null);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.getLineSeparator();
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat1.setOmitEncoding(true);
      outputFormat2.isXHTML();
      outputFormat0.getLineSeparator();
      assertFalse(outputFormat0.isOmitEncoding());
      
      outputFormat2.setNewlines(false);
      outputFormat0.setOmitEncoding(true);
      assertTrue(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("rG,{D]9HkVO_5uJYi", true);
      outputFormat0.setEncoding("rG,{D]9HkVO_5uJYi");
      assertEquals("rG,{D]9HkVO_5uJYi", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "AAISFrd;i1";
      OutputFormat outputFormat0 = new OutputFormat("AAISFrd;i1", true, "AAISFrd;i1");
      outputFormat0.setTrimText(true);
      boolean boolean0 = false;
      outputFormat0.setAttributeQuoteCharacter('\'');
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('*');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (*)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewlines(true);
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewLineAfterDeclaration(true);
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("NHd]G|", false, "");
      outputFormat0.isTrimText();
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "NHd]G|";
      stringArray0[1] = "  ";
      outputFormat0.parseOptions(stringArray0, 1765);
      outputFormat0.setXHTML(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat0.isTrimText();
      outputFormat0.setXHTML(false);
      outputFormat1.setPadText(false);
      outputFormat0.isNewlines();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-839));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -839
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setExpandEmptyElements(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      outputFormat0.setNewLineAfterNTags(0);
      stringArray0[2] = "";
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setSuppressDeclaration(false);
      stringArray0[3] = "";
      stringArray0[4] = "M3n0*P6";
      stringArray0[5] = "";
      outputFormat0.setPadText(true);
      stringArray0[6] = "";
      outputFormat0.setNewLineAfterDeclaration(false);
      stringArray0[7] = "";
      outputFormat0.setNewlines(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setIndent(true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getIndent();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('@');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (@)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setPadText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(2);
      outputFormat0.setXHTML(false);
      outputFormat0.setPadText(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("`{bcca+v<{*r5");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setTrimText(false);
      assertEquals("`{bcca+v<{*r5", outputFormat0.getIndent());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.615630577027551
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "Tx];`";
      OutputFormat outputFormat0 = new OutputFormat("Tx];`");
      boolean boolean0 = false;
      outputFormat0.setLineSeparator("Tx];`");
      outputFormat0.setIndent(true);
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.setIndent(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent("");
      outputFormat0.setIndent(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('9');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (9)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = false;
      outputFormat0.setIndent((String) null);
      outputFormat0.setExpandEmptyElements(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('_');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (_)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4036404106149494
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent(false);
      outputFormat0.setLineSeparator(",?8D&5XH");
      outputFormat0.setIndentSize((-1));
      outputFormat0.setEncoding("xqE;<\"hIJI");
      outputFormat0.setAttributeQuoteCharacter('\"');
      String[] stringArray0 = new String[9];
      stringArray0[0] = ",?8D&5XH";
      stringArray0[1] = ",?8D&5XH";
      stringArray0[2] = "xqE;<\"hIJI";
      stringArray0[3] = "xqE;<\"hIJI";
      outputFormat0.setPadText(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setTrimText(false);
      stringArray0[4] = ",?8D&5XH";
      stringArray0[5] = "xqE;<\"hIJI";
      stringArray0[6] = "xqE;<\"hIJI";
      stringArray0[7] = ",?8D&5XH";
      stringArray0[8] = ",?8D&5XH";
      outputFormat0.parseOptions(stringArray0, 229);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('.');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (.)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8851021589882013
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("+1LW]l", true, "+1LW]l");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat1.setNewLineAfterNTags(301);
      outputFormat0.setOmitEncoding(false);
      outputFormat1.setSuppressDeclaration(false);
      outputFormat1.setPadText(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.setNewlines(false);
      outputFormat0.setTrimText(false);
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat0.setLineSeparator("-xhtml`*;B-aO!0_o");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-xhtml`*;B-aO!0_o";
      stringArray0[1] = "M3n0*P6";
      stringArray0[2] = "M3n0*P6";
      stringArray0[3] = "+1LW]l";
      stringArray0[4] = "+1LW]l";
      stringArray0[5] = "-expandEmpty9~";
      outputFormat2.parseOptions(stringArray0, 0);
      int int0 = outputFormat1.parseOptions(stringArray0, 0);
      assertEquals(301, outputFormat1.getNewLineAfterNTags());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.03195622385697
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setPadText(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setNewlines(false);
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setLineSeparator("`*;B-aO!0_o");
      String[] stringArray1 = new String[3];
      stringArray1[0] = "-expandEmpty9~";
      stringArray1[1] = "`*;B-aO!0_o";
      stringArray1[2] = "-xhtml`*;B-aO!0_o";
      outputFormat1.parseOptions(stringArray1, 0);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.031759218569271
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setPadText(false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-omitEncoding";
      outputFormat0.setIndent("-omitEncoding");
      stringArray0[1] = "I@vl*EI3";
      stringArray0[2] = ".'.GrPhY";
      boolean boolean0 = false;
      outputFormat0.setPadText(false);
      outputFormat0.parseOptions(stringArray0, 0);
      int int0 = (-1852062717);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1852062717));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1852062717
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6726254461503203
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-padText";
      stringArray0[1] = "-padText";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat1.setOmitEncoding(true);
      outputFormat0.parseOptions(stringArray0, 2);
      assertFalse(outputFormat0.isOmitEncoding());
      
      int int0 = outputFormat1.parseOptions(stringArray0, 2);
      assertTrue(outputFormat1.isOmitEncoding());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.639031859650177
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[4];
      OutputFormat outputFormat1 = new OutputFormat();
      stringArray0[1] = ";v#`tnGkV";
      outputFormat1.parseOptions(stringArray0, 530);
      outputFormat1.parseOptions(stringArray0, 530);
      outputFormat0.parseOptions(stringArray0, 530);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "-encoding";
      stringArray1[1] = ";v#`tnGkV";
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat1.parseOptions(stringArray1, 530);
      String[] stringArray2 = new String[6];
      stringArray2[0] = ";v#`tnGkV";
      stringArray2[1] = "-encoding";
      stringArray2[2] = "-encoding";
      stringArray2[3] = ";v#`tnGkV";
      stringArray2[4] = "-encoding";
      stringArray2[5] = ";v#`tnGkV";
      int int0 = outputFormat0.parseOptions(stringArray2, 2);
      assertEquals(";v#`tnGkV", outputFormat0.getEncoding());
      assertEquals(6, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.7201248812718097
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-trimText");
      OutputFormat outputFormat1 = new OutputFormat();
      OutputFormat outputFormat2 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "BIWx2ta&#7";
      stringArray0[2] = "{WAM!!0/, ^&TT";
      stringArray0[3] = "+5E|x3WtS$W7??";
      stringArray0[4] = "-trimText";
      stringArray0[5] = "+5E|x3WtS$W7??";
      outputFormat0.parseOptions(stringArray0, 2106);
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-1939498761));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1939498761
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.182995977034132
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[5];
      outputFormat0.setXHTML(true);
      stringArray0[0] = "-expandEmpty;v#`tnGkV";
      stringArray0[1] = "+5E|x3WtS$W7??";
      stringArray0[2] = "-indent";
      stringArray0[3] = "IrS9b=MDs<R";
      outputFormat0.setPadText(true);
      stringArray0[4] = "_ 6Y&jyv|-1}>]Z";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setEncoding("*/}Vd");
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 4);
      int int0 = outputFormat0.parseOptions(stringArray0, 4);
      assertEquals("*/}Vd", outputFormat0.getEncoding());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7721393884375287
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[4];
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      stringArray0[1] = ";v#`tnGkV";
      stringArray0[2] = "-padText";
      stringArray0[3] = "-indentSize";
      int int0 = 1;
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat1.setOmitEncoding(true);
      String[] stringArray1 = new String[22];
      stringArray1[0] = ";v#`tnGkV";
      stringArray1[1] = "-indentSize";
      stringArray1[2] = "  ";
      stringArray1[3] = "-lineSeparator";
      stringArray1[4] = ";v#`tnGkV";
      stringArray1[5] = "+5E|x3WtS$W7??";
      stringArray1[6] = "+5E|x3WtS$W7??";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"  \"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
