/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Aug 24 13:40:00 GMT 2018
 */

package accessories.plugins.time;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class JDayChooser_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "accessories.plugins.time.JDayChooser"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/ubuntu/evosuite_readability_gen/projects/105_freemind"); 
    java.lang.System.setProperty("user.home", "/home/ubuntu"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "ubuntu"); 
    java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JDayChooser_ESTest_scaffolding.class.getClassLoader() ,
      "accessories.plugins.time.JSpinField",
      "freemind.modes.MapAdapter",
      "freemind.controller.actions.generated.instance.WindowConfigurationStorage",
      "org.apache.fop.svg.PDFDocumentGraphics2D",
      "freemind.modes.MindMap$MapSourceChangedObserver",
      "freemind.modes.LineAdapter",
      "freemind.modes.ModeController$NodeSelectionListener",
      "freemind.modes.mindmapmode.MindMapToolBar",
      "freemind.modes.ArrowLinkAdapter",
      "org.jibx.runtime.JiBXException",
      "freemind.controller.StructuredMenuHolder$MenuEventSupplier",
      "freemind.modes.filemode.FileMode",
      "accessories.plugins.time.JDayChooser",
      "freemind.main.FreeMindMain",
      "org.apache.fop.pdf.PDFLink",
      "accessories.plugins.time.JYearChooser",
      "freemind.extensions.HookFactory",
      "org.apache.fop.svg.GraphicsConfiguration",
      "freemind.controller.actions.generated.instance.EditNoteToNodeAction",
      "freemind.modes.mindmapmode.actions.xml.ActionFactory",
      "org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute",
      "org.apache.batik.ext.awt.LinearGradientPaint",
      "freemind.modes.mindmapmode.actions.SingleNodeOperation",
      "freemind.modes.mindmapmode.listeners.MindMapNodeMotionListener",
      "freemind.modes.mindmapmode.MindMapMapModel",
      "org.apache.batik.gvt.text.GVTAttributedCharacterIterator$AttributeFilter",
      "org.jibx.runtime.IMarshallable",
      "freemind.modes.NodeAdapter",
      "freemind.modes.MindMapArrowLink",
      "freemind.modes.FreeMindJFileDialog",
      "org.openstreetmap.gui.jmapviewer.interfaces.TileSource",
      "freemind.extensions.NodeHook",
      "freemind.view.mindmapview.MapView",
      "freemind.modes.mindmapmode.actions.xml.ActionHandler",
      "freemind.controller.MapMouseMotionListener$MapMouseMotionReceiver",
      "org.apache.fop.pdf.PDFPage",
      "accessories.plugins.time.JSpinField$1",
      "org.openstreetmap.gui.jmapviewer.JMapViewer",
      "freemind.controller.actions.generated.instance.TextNodeAction",
      "freemind.modes.mindmapmode.actions.MindMapActions",
      "freemind.controller.FreeMindPopupMenu",
      "freemind.modes.FreeMindAwtFileDialog",
      "org.apache.batik.ext.awt.RadialGradientPaint",
      "org.apache.avalon.framework.activity.Initializable",
      "freemind.modes.mindmapmode.MindMapNodeModel",
      "freemind.view.mindmapview.attributeview.AttributePopupMenu",
      "org.apache.fop.pdf.PDFStream",
      "freemind.main.XMLElement",
      "freemind.modes.FreeMindFileDialog",
      "freemind.modes.mindmapmode.MindMapController$MindMapControllerPlugin",
      "freemind.modes.mindmapmode.actions.xml.ActionPair",
      "freemind.modes.attributes.AttributeController",
      "org.jibx.runtime.IUnmarshallable",
      "org.apache.fop.pdf.PDFResourceContext",
      "org.openstreetmap.gui.jmapviewer.Tile",
      "org.apache.fop.pdf.PDFObject",
      "freemind.controller.NodeMotionListener$NodeMotionAdapter",
      "freemind.controller.MapModuleManager$MapModuleChangeObserver",
      "org.openstreetmap.gui.jmapviewer.interfaces.TileLoaderListener",
      "freemind.modes.IconInformation",
      "freemind.controller.Controller",
      "freemind.modes.ControllerAdapter",
      "org.openstreetmap.gui.jmapviewer.interfaces.Attributed",
      "freemind.modes.ControllerAdapter$ControllerPopupMenuListener",
      "freemind.modes.FreeMindFileDialog$DirectoryResultListener",
      "freemind.modes.MindMapNode",
      "freemind.controller.FreeMindToolBar",
      "accessories.plugins.time.JDayChooser$DecoratorButton",
      "org.apache.fop.svg.PDFGraphics2D",
      "freemind.modes.filemode.FileToolBar",
      "freemind.modes.MindMapLink",
      "org.apache.fop.pdf.PDFColor",
      "org.apache.fop.fonts.FontMetrics",
      "freemind.modes.MindMapLine",
      "freemind.controller.actions.generated.instance.NodeAction",
      "freemind.modes.XMLElementAdapter",
      "freemind.view.mindmapview.NodeView",
      "freemind.modes.common.CommonNodeKeyListener$EditHandler",
      "freemind.controller.MapModuleManager",
      "accessories.plugins.time.JMonthChooser",
      "org.apache.fop.pdf.PDFPattern",
      "org.apache.batik.gvt.text.GVTAttributedCharacterIterator",
      "org.openstreetmap.gui.jmapviewer.interfaces.TileCache",
      "freemind.extensions.ModeControllerHook",
      "freemind.modes.mindmapmode.MindMapController",
      "org.apache.avalon.framework.CascadingThrowable",
      "org.apache.fop.pdf.AbstractPDFStream",
      "freemind.modes.mindmapmode.actions.MindMapActions$MouseWheelEventHandler",
      "freemind.modes.attributes.Attribute",
      "accessories.plugins.time.JDayChooser$1",
      "freemind.controller.ZoomListener",
      "freemind.controller.actions.generated.instance.Pattern",
      "org.apache.avalon.framework.CascadingRuntimeException",
      "freemind.view.MapModule",
      "freemind.modes.MindIcon",
      "freemind.modes.Mode",
      "org.apache.fop.pdf.PDFPathPaint",
      "freemind.modes.mindmapmode.MindMapArrowLinkModel",
      "freemind.modes.ModeController$NodeLifetimeListener",
      "org.apache.batik.ext.awt.g2d.AbstractGraphics2D",
      "freemind.extensions.MindMapHook",
      "accessories.plugins.time.JMonthChooser$1",
      "freemind.modes.mindmapmode.MindMapPopupMenu",
      "org.apache.batik.ext.awt.MultipleGradientPaint",
      "freemind.main.ExampleFileFilter",
      "org.apache.fop.image.FopImage",
      "freemind.main.XMLParseException",
      "freemind.controller.actions.generated.instance.XmlAction",
      "freemind.modes.LinkAdapter",
      "freemind.modes.MindMap",
      "org.apache.fop.pdf.PDFImage",
      "freemind.controller.NodeMouseMotionListener$NodeMouseMotionObserver",
      "freemind.controller.StructuredMenuHolder",
      "freemind.controller.actions.generated.instance.MenuStructure",
      "freemind.common.TextTranslator",
      "freemind.modes.mindmapmode.MindMapController$NewNodeCreator",
      "org.apache.fop.pdf.PDFAnnotList",
      "org.apache.fop.svg.PDFGraphicsConfiguration",
      "org.apache.avalon.framework.configuration.Configurable",
      "freemind.modes.ModeController",
      "freemind.modes.mindmapmode.MindMapXMLElement",
      "freemind.modes.mindmapmode.MindMapController$MindMapFilter"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("java.awt.event.HierarchyBoundsListener", false, JDayChooser_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.awt.event.InputMethodListener", false, JDayChooser_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("javax.swing.event.AncestorListener", false, JDayChooser_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JDayChooser_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "accessories.plugins.time.JDayChooser",
      "accessories.plugins.time.JDayChooser$DecoratorButton",
      "accessories.plugins.time.JDayChooser$1",
      "accessories.plugins.time.JSpinField",
      "accessories.plugins.time.JYearChooser",
      "accessories.plugins.time.JSpinField$1",
      "freemind.modes.Mode",
      "freemind.modes.mindmapmode.MindMapMode",
      "freemind.modes.ControllerAdapter",
      "freemind.modes.viewmodes.ViewControllerAdapter",
      "freemind.modes.browsemode.BrowseController",
      "freemind.modes.ControllerAdapter$ControllerPopupMenuListener",
      "freemind.modes.filemode.FileMode",
      "freemind.modes.mindmapmode.MindMapController",
      "freemind.modes.schememode.SchemeMode",
      "org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute",
      "freemind.main.FreeMindMain$VersionInformation",
      "freemind.main.FreeMind",
      "freemind.main.FreeMindApplet",
      "org.jibx.runtime.impl.UnmarshallingContext",
      "org.apache.xml.utils.UnImplNode",
      "org.apache.xalan.templates.ElemTemplateElement",
      "org.apache.xalan.templates.ElemForEach",
      "org.apache.batik.svggen.DefaultImageHandler",
      "org.apache.batik.svggen.AbstractImageHandlerEncoder",
      "org.apache.batik.svggen.ImageHandlerPNGEncoder",
      "org.apache.batik.svggen.DefaultExtensionHandler",
      "org.apache.batik.ext.awt.g2d.AbstractGraphics2D",
      "org.apache.batik.svggen.SVGGraphics2D",
      "org.apache.batik.svggen.SVGGeneratorContext",
      "org.apache.batik.svggen.SVGIDGenerator",
      "org.apache.batik.svggen.SimpleImageHandler",
      "org.apache.batik.svggen.DefaultStyleHandler",
      "org.apache.batik.svggen.DefaultErrorHandler",
      "org.apache.batik.ext.awt.g2d.GraphicContext",
      "org.apache.batik.svggen.SVGGraphicObjectConverter",
      "org.apache.batik.svggen.SVGShape",
      "org.apache.batik.svggen.SVGArc",
      "org.apache.batik.svggen.SVGEllipse",
      "org.apache.batik.svggen.SVGLine",
      "org.apache.batik.svggen.SVGPath",
      "org.apache.batik.svggen.SVGPolygon",
      "org.apache.batik.svggen.SVGRectangle",
      "org.apache.batik.svggen.DOMTreeManager",
      "org.apache.xml.res.XMLMessages",
      "org.apache.xpath.res.XPATHMessages",
      "org.apache.xalan.res.XSLMessages",
      "org.apache.xalan.res.XSLTErrorResources",
      "org.apache.xalan.res.XSLTErrorResources_en",
      "accessories.plugins.time.JMonthChooser",
      "accessories.plugins.time.JMonthChooser$1",
      "org.openstreetmap.gui.jmapviewer.Tile",
      "org.apache.xalan.transformer.XalanTransformState",
      "org.apache.batik.gvt.AbstractGraphicsNode",
      "org.apache.batik.gvt.CompositeGraphicsNode",
      "org.apache.batik.gvt.CanvasGraphicsNode",
      "org.hsqldb.Result",
      "org.hsqldb.Session",
      "org.hsqldb.jdbc.jdbcConnection",
      "org.hsqldb.jdbc.jdbcStatement",
      "org.hsqldb.jdbc.jdbcPreparedStatement",
      "org.hsqldb.jdbc.jdbcCallableStatement",
      "org.apache.fop.svg.PDFGraphics2D",
      "org.apache.fop.svg.PDFDocumentGraphics2D",
      "org.apache.fop.fonts.FontInfo",
      "org.apache.commons.logging.impl.Log4JLogger",
      "org.apache.log4j.Category",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "org.apache.log4j.Logger",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootCategory",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "org.apache.fop.fonts.FontSetup",
      "org.apache.fop.fonts.Typeface",
      "org.apache.fop.fonts.base14.Helvetica",
      "org.apache.fop.fonts.CodePointMapping",
      "org.apache.fop.fonts.base14.HelveticaOblique",
      "org.apache.fop.fonts.base14.HelveticaBold",
      "org.apache.fop.fonts.base14.HelveticaBoldOblique",
      "org.apache.fop.fonts.base14.TimesRoman",
      "org.apache.fop.fonts.base14.TimesItalic",
      "org.apache.fop.fonts.base14.TimesBold",
      "org.apache.fop.fonts.base14.TimesBoldItalic",
      "org.apache.fop.fonts.base14.Courier",
      "org.apache.fop.fonts.base14.CourierOblique",
      "org.apache.fop.fonts.base14.CourierBold",
      "org.apache.fop.fonts.base14.CourierBoldOblique",
      "org.apache.fop.fonts.base14.Symbol",
      "org.apache.fop.fonts.base14.ZapfDingbats",
      "org.apache.fop.pdf.PDFDocument",
      "org.apache.fop.pdf.PDFColorSpace",
      "org.apache.fop.pdf.PDFFactory",
      "org.apache.fop.pdf.PDFObject",
      "org.apache.fop.pdf.PDFPages",
      "org.apache.fop.pdf.PDFRoot",
      "org.apache.fop.pdf.PDFResources",
      "org.apache.fop.pdf.PDFInfo",
      "org.apache.fop.pdf.PDFState",
      "org.apache.fop.pdf.PDFState$Data",
      "org.apache.fop.pdf.AbstractPDFStream",
      "org.apache.fop.pdf.PDFStream",
      "org.apache.fop.pdf.StreamCacheFactory",
      "org.apache.fop.pdf.InMemoryStreamCache",
      "org.apache.fop.pdf.PDFFilterList",
      "org.apache.fop.pdf.PDFFilter",
      "org.apache.fop.pdf.FlateFilter",
      "org.apache.fop.pdf.PDFResourceContext"
    );
  }
}
