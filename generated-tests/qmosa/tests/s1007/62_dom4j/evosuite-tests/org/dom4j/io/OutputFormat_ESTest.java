/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:33:49 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("");
      boolean boolean0 = true;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 2000);
      outputFormat0.setIndent(false);
      boolean boolean1 = true;
      outputFormat0.setIndentSize(1326);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('t');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (t)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("QGrib^0(ar]jITyAmz");
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("QGrib^0(ar]jITyAmz");
      outputFormat0.setNewlines(false);
      outputFormat0.setLineSeparator("/K%iig<aT");
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setNewlines(false);
      assertEquals("/K%iig<aT", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize((-1));
      outputFormat0.setXHTML(false);
      outputFormat0.setNewLineAfterNTags((-3701));
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setEncoding("9WX*}_)\"SpI");
      outputFormat0.setIndentSize((-1));
      assertEquals((-3701), outputFormat0.getNewLineAfterNTags());
      
      char char0 = outputFormat1.getAttributeQuoteCharacter();
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterNTags((-1811));
      outputFormat0.setIndent("");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('8');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (8)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent("-indent");
      outputFormat0.setSuppressDeclaration(false);
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", true, "-lineSeparator");
      assertEquals("-lineSeparator", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize((-1384));
      outputFormat0.setIndentSize(1632);
      outputFormat0.setXHTML(true);
      boolean boolean0 = outputFormat0.isTrimText();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-padText");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(false);
      outputFormat0.isTrimText();
      outputFormat0.setLineSeparator("$}9d2_E$O<");
      outputFormat0.getEncoding();
      outputFormat0.setOmitEncoding(false);
      assertEquals("$}9d2_E$O<", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewlines(false);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding("");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("-indent");
      outputFormat0.getLineSeparator();
      outputFormat0.setXHTML(false);
      outputFormat0.isPadText();
      outputFormat0.isXHTML();
      outputFormat1.setIndentSize(0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      outputFormat0.setNewlines(false);
      stringArray0[1] = "";
      stringArray0[2] = "\n";
      stringArray0[3] = "\n";
      stringArray0[4] = "$t`P";
      stringArray0[5] = "\n";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-2011));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2011
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "8";
      outputFormat0.setNewLineAfterNTags(0);
      stringArray0[2] = "I/=},R&[0]^m<jcOd%9";
      stringArray0[3] = "MNt_72G%{h{M<P";
      stringArray0[4] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.isTrimText();
      outputFormat0.isXHTML();
      outputFormat0.getIndent();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      outputFormat1.setIndentSize(1);
      outputFormat0.setIndent(true);
      outputFormat0.getEncoding();
      outputFormat1.isPadText();
      outputFormat1.setPadText(false);
      outputFormat0.setIndent(false);
      outputFormat1.setNewLineAfterNTags(0);
      assertFalse(outputFormat1.isSuppressDeclaration());
      
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("\"/WbO");
      outputFormat0.setNewLineAfterNTags((-1989));
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndentSize(1909);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setTrimText(true);
      outputFormat1.setNewLineAfterNTags(1909);
      String string0 = outputFormat0.getIndent();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setIndent(true);
      outputFormat2.setPadText(true);
      outputFormat2.setNewLineAfterNTags(0);
      outputFormat2.getLineSeparator();
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat2.setIndent(true);
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat1.isExpandEmptyElements();
      outputFormat0.setEncoding("\n");
      outputFormat0.isXHTML();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "\n";
      stringArray0[1] = "\n";
      stringArray0[2] = "\"/WbO";
      stringArray0[3] = "\n";
      stringArray0[4] = string0;
      stringArray0[5] = "q";
      stringArray0[6] = "\n";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-888));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -888
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Ea~|m]GrGD";
      stringArray0[1] = "";
      stringArray0[2] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.isNewlines();
      outputFormat0.setIndent(true);
      outputFormat0.getEncoding();
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewlines(true);
      boolean boolean0 = outputFormat0.isTrimText();
      assertEquals("  ", outputFormat0.getIndent());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("b Gdu");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.isTrimText();
      outputFormat0.setEncoding((String) null);
      outputFormat0.getLineSeparator();
      outputFormat0.setXHTML(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setTrimText(true);
      outputFormat0.setEncoding("");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.getEncoding();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndentSize(0);
      outputFormat0.isNewlines();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.isTrimText();
      boolean boolean0 = outputFormat0.isPadText();
      assertEquals("", outputFormat0.getIndent());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.447252511559233
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "1C5&,m\"t&|*[9J>T2K";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isOmitEncoding();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setPadText(true);
      outputFormat2.setNewLineAfterNTags(0);
      outputFormat1.setExpandEmptyElements(true);
      outputFormat1.setExpandEmptyElements(true);
      outputFormat0.setEncoding("");
      outputFormat1.setPadText(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isXHTML();
      outputFormat0.isXHTML();
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.setIndent("");
      outputFormat1.isOmitEncoding();
      outputFormat1.getNewLineAfterNTags();
      outputFormat0.isSuppressDeclaration();
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat0.setEncoding("k %3a[_MVf*6uH");
      outputFormat0.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.8989267893363289
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String string0 = "-expandEmpty";
      outputFormat0.setLineSeparator("-expandEmpty");
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[18];
      stringArray0[0] = "-expandEmpty";
      outputFormat0.setIndentSize(2);
      stringArray0[1] = "aVd77ul,";
      stringArray0[2] = "-expandEmpty";
      stringArray0[3] = "-expandEmpty";
      stringArray0[4] = "-expandEmpty";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("aVd77ul,", false, (String) null);
      outputFormat0.setIndent((String) null);
      outputFormat0.setNewlines(false);
      outputFormat0.setIndentSize(39);
      outputFormat0.setIndentSize((-722));
      outputFormat0.setIndent((String) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0027182645175161
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator((String) null);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "x*|-p`x}IWrb8P";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "-expandEmpty";
      stringArray0[3] = "-indentSize";
      stringArray0[4] = "x*|-p`x}IWrb8P";
      stringArray0[5] = "x*|-p`x}IWrb8P";
      stringArray0[6] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"x*|-p`x}IWrb8P\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.509137344082687
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-padText");
      assertFalse(outputFormat0.isPadText());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-padText";
      stringArray0[1] = "-padText";
      stringArray0[2] = "-padText";
      stringArray0[3] = "-padText";
      stringArray0[4] = "-padText";
      stringArray0[5] = "-padText";
      stringArray0[6] = "-padText";
      stringArray0[7] = "-padText";
      stringArray0[8] = "-padText";
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(outputFormat0.isPadText());
      assertEquals(9, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.994353691762369
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = true;
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("-lineSeparator");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "MqVi+I dC!<(Mo cBB";
      stringArray0[4] = "-lineSeparator";
      stringArray0[5] = "-lineSeparator";
      stringArray0[6] = "-lineSeparator";
      stringArray0[7] = "-lineSeparator";
      stringArray0[8] = "y;*_(Xx";
      outputFormat0.parseOptions(stringArray0, 7);
      int int0 = (-1840700267);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1840700267));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1840700267
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7304276404501975
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndentSize(2);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[8];
      stringArray0[0] = ">%/~@FDAz&Y%:&^?L[";
      stringArray0[1] = ">%/~@FDAz&Y%:&^?L[";
      stringArray0[2] = "-xhtmlEa~|m]GrGD";
      stringArray0[3] = ">%/~@FDAz&Y%:&^?L[";
      stringArray0[4] = ">%/~@FDAz&Y%:&^?L[";
      stringArray0[6] = ">%/~@FDAz&Y%:&^?L[";
      stringArray0[7] = ">%/~@FDAz&Y%:&^?L[";
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat2.setIndent(">%/~@FDAz&Y%:&^?L[");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat1.parseOptions(stringArray0, 39);
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('(');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (()
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("-lineSeparator");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-lineSeparator";
      outputFormat0.setEncoding("-lineSeparator");
      outputFormat0.setAttributeQuoteCharacter('\"');
      String[] stringArray1 = new String[1];
      stringArray1[0] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray1, 9);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('z');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (z)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9959217847159896
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setXHTML(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "-encoding";
      int int0 = outputFormat1.parseOptions(stringArray0, 0);
      assertEquals("-encoding", outputFormat1.getEncoding());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8662160235859526
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndentSize(2);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      String string0 = ">%/~@FDAz&Y%:&^?L[";
      int int0 = 7;
      String[] stringArray0 = new String[8];
      stringArray0[0] = ">%/~@FDAz&Y%:&^?L[";
      stringArray0[1] = ">%/~@FDAz&Y%:&^?L[";
      stringArray0[2] = "-indent";
      stringArray0[3] = "MqVi+I dC!<(Mo cBB";
      stringArray0[4] = "MqVi+I dC!<(Mo cBB";
      stringArray0[5] = "MqVi+I dC!<(Mo cBB";
      stringArray0[6] = "MqVi+I dC!<(Mo cBB";
      stringArray0[7] = ">%/~@FDAz&Y%:&^?L[";
      outputFormat2.parseOptions(stringArray0, 2);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1939521774));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1939521774
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4978661367769952
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("-xhtml,^qq_Sc", false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "0kKnE`";
      stringArray0[1] = "-xhtml,^qq_Sc";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "-xhtml,^qq_Sc";
      stringArray0[4] = "-xhtml,^qq_Sc";
      stringArray0[5] = "0kKnE`";
      stringArray0[6] = "0kKnE`";
      outputFormat1.parseOptions(stringArray0, 2);
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[9];
      stringArray1[0] = "-omitEncoding";
      stringArray1[1] = "5.}&xBtUrQhq]k*R^U";
      outputFormat0.setEncoding("0kKnE`");
      stringArray1[2] = "-encoding";
      stringArray1[3] = "-xhtml,^qq_Sc";
      stringArray1[4] = "-xhtml,^qq_Sc";
      stringArray1[5] = "-xhtml,^qq_Sc";
      stringArray1[6] = "-omitEncoding";
      stringArray1[7] = "-omitEncoding";
      stringArray1[8] = "-encoding";
      outputFormat1.parseOptions(stringArray1, 3094);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "G";
      stringArray0[1] = "G";
      stringArray0[2] = "G";
      stringArray0[3] = "-suppressDeclaration";
      stringArray0[4] = "G";
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.parseOptions(stringArray0, 9);
      outputFormat0.parseOptions(stringArray0, 3);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1780));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1780
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
