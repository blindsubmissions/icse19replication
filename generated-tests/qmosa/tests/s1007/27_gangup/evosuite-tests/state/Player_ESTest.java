/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:26:13 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-2111), "", "", 1846, (-2111));
      player0.setDead((long) 1108);
      Party party0 = new Party(1108);
      player0.boss = party0;
      player0.getSubparty();
      player0.isDead();
      player0.getX();
      Player player1 = new Player(0, "", 0);
      player0.isJoinOK(player1, true);
      player0.setJoinOK(player1, true);
      assertEquals(1108L, player0.getTimeOfDeath());
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte)1;
      player1.unpack(byteArray0);
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.setDead();
      player0.pack(dataOutputStream0);
      player0.getName();
      int int0 = player0.gangStrength();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((-2237), "Player.unpack(): *** WARNING *** data is not of proper type!", (-2237));
      player0.setX((-2237));
      player0.setZ((-2237));
      player0.setY((-2237));
      player0.setZ(0.0F);
      player0.getZ();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)34;
      byteArray0[7] = (byte) (-33);
      player0.unpack(byteArray0);
      assertEquals(0.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(0, "EhXMt\"!$qc+p", "E#j1!;$", 0);
      player0.setDead(2045L);
      Player player1 = new Player(0, "EhXMt\"!$qc+p", "1PEwX'^W\"", 0, 0);
      player1.id = 0;
      player0.getSubparty();
      player1.setJoinOK(player0, false);
      player0.head = (Party) player1;
      player1.setY(0);
      player0.setY(0.0F);
      player1.isJoinOK(player0, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)33;
      byteArray0[3] = (byte)0;
      player1.unpack(byteArray0);
      player0.type();
      assertEquals(2045L, player0.getTimeOfDeath());
      
      player0.setDead((long) 0);
      player0.getTimeOfDeath();
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-162), ".*[.]class$", ".*[.]class$", (-162));
      player0.setConnected(false);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      player0.getY();
      player0.getIP();
      boolean boolean0 = false;
      player0.reset(false);
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(2874, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 1009);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      dataOutputStream0.close();
      byteArrayOutputStream0.write(0);
      dataOutputStream0.write(2874);
      player0.pack(dataOutputStream0);
      assertEquals("\u0000:\u00137:\u0000\u0001\u0003\uFFFDA \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000=Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", byteArrayOutputStream0.toString());
      
      player0.getPictureId();
      player0.setConnected(true);
      player0.getY();
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(583L);
      player0.setZ((-1461));
      Player player1 = new Player((-1461), "<'D*'", "<'D*'", (-1461), 0);
      player1.setZ((short)4919);
      player1.reset(false);
      player1.setMoney((short)4919);
      player0.add(player1);
      player0.setJoinOK(player1, false);
      player0.getMoney();
      player0.type();
      player1.pack();
      player1.head = (Party) player0;
      player1.setZ(0.0F);
      player0.getMoney();
      player1.getStrength();
      player0.reset(false);
      player1.getIP();
      assertEquals(0.0F, player1.getZ(), 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(0, "", "", 746, 0);
      player0.reset(true);
      player0.setDead(0L, true);
      player0.id = (-1440);
      player0.getName();
      player0.setDead(629L, true);
      assertEquals(629L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-777), "g;A`rIIDp`1(TX\">b", 3);
      player0.setY(0.0F);
      player0.setY((-565.6757F));
      player0.getName();
      player0.gangStrength();
      player0.setDead((long) (-777));
      player0.getPictureId();
      player0.toString();
      assertEquals((-777L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 1289);
      Party party0 = new Party((short)4919);
      player0.setConnected(true);
      party0.remove(player0);
      player0.head = party0;
      player0.setDead();
      player0.getPictureId();
      player0.isConnected();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      player0.isDead();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.0752205480543715
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(0, "&3.M1", 0);
      player0.setDead((long) 0);
      player0.getSubparty();
      byte[] byteArray0 = player0.pack();
      player0.gangStrength();
      player0.isDead();
      player0.getX();
      player0.setDead();
      player0.getZ();
      Player player1 = new Player((-1089));
      byte[] byteArray1 = player1.pack();
      player0.isJoinOK(player1, true);
      player1.setZ(10.0F);
      player1.reset(false);
      player1.setDead();
      player0.unpack(byteArray1);
      player1.setY((-2359.1472F));
      player0.getX();
      player0.gangStrength();
      player0.getStrength();
      player1.getMoney();
      player1.reset(false);
      player1.setConnected(true);
      player0.unpack(byteArray0);
      player1.setMoney(1);
      // Undeclared exception!
      try { 
        player1.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.488327743368588
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(0, "EhXMt\"!$qc+p", "E#j1!;$", 0);
      player0.setDead(2045L);
      Player player1 = new Player(0, "EhXMt\"!$qc+p", "1PEwX'^W\"", 0, 0);
      player1.id = 0;
      player0.getSubparty();
      player1.setJoinOK(player0, false);
      player1.setY(0);
      player0.setY(0.0F);
      player1.isJoinOK(player0, false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-5);
      byteArray0[3] = (byte)0;
      player1.unpack(byteArray0);
      int int0 = Packable.GAME_STATE;
      player0.setDead((long) (byte) (-5));
      long long0 = player0.getTimeOfDeath();
      assertEquals((-5L), long0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9730014063936125
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(0, "EhXMt\"!$qc+p", "E#j1!;$", 0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player1 = new Player(0, "EhXMt\"!$qc+p", 0);
      player1.setMoney(0.2F);
      player1.setJoinOK(player0, false);
      player0.isJoinOK(player1, true);
      player1.setMoney(0.0F);
      player1.setMoney(1203.1664F);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E#j1!;$");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(1392409296320L);
      player1.isJoinOK(player0, true);
      player0.setY(0.2F);
      player0.isJoinOK(player1, false);
      Player player2 = new Player(159);
      player2.setMoney(4042.0F);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(1203.1664F, player1.getMoney(), 0.01F);
      assertFalse(boolean0);
  }
}
