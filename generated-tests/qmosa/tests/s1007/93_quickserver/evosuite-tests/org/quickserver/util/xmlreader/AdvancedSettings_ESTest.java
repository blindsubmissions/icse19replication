/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:24:27 GMT 2018
 */

package org.quickserver.util.xmlreader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.quickserver.util.xmlreader.AdvancedSettings;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AdvancedSettings_ESTest extends AdvancedSettings_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.setClientSocketSendBufferSize(3453);
      advancedSettings0.setClientSocketSendBufferSize(377);
      advancedSettings0.setSocketLinger(377);
      advancedSettings0.getUseDirectByteBuffer();
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.setClientIdentifier("\t<socket-linger>");
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.getBacklog();
      String string0 = advancedSettings0.toXML("\t<socket-linger>");
      advancedSettings0.getUseDirectByteBuffer();
      advancedSettings0.setClientSocketTrafficClass("");
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.setClientSocketTrafficClass(string0);
      advancedSettings0.getCharset();
      int int0 = advancedSettings0.getPerformancePreferencesBandwidth();
      assertEquals("\t<socket-linger>", advancedSettings0.getClientIdentifier());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.setPerformancePreferencesConnectionTime(2404);
      advancedSettings0.setClientIdentifier("</max-threads-for-nio-write>\n");
      advancedSettings0.setCharset("");
      String string0 = "";
      advancedSettings0.toXML("");
      String string1 = "\t<client-socket-receive-buffer-size>";
      advancedSettings0.setQSObjectPoolMaker("\t<client-socket-receive-buffer-size>");
      advancedSettings0.setSocketLinger(2404);
      advancedSettings0.setPerformancePreferencesLatency(10);
      advancedSettings0.setPerformancePreferencesBandwidth(10);
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("Y`4NJF");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // Y`4NJF
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.setBacklog(0);
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setBacklog(3831);
      advancedSettings0.getMaxThreadsForNioWrite();
      advancedSettings0.setQSObjectPoolMaker("");
      advancedSettings0.setBacklog(0);
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.getBacklog();
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.setClientSocketTrafficClass("org.quickserver.util.pool.MakeQSObjectPool");
      advancedSettings0.setByteBufferSize(1431);
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.setBacklog(0);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.getClientSocketSendBufferSize();
      int int0 = advancedSettings0.getSocketLinger();
      assertEquals(1431, advancedSettings0.getByteBufferSize());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setUseDirectByteBuffer(false);
      advancedSettings0.setPerformancePreferencesLatency(0);
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.setSocketLinger((-1564));
      advancedSettings0.setClientIdentifier("\t<client-socket-receive-buffer-size>");
      advancedSettings0.setMaxThreadsForNioWrite(18);
      String string0 = advancedSettings0.toXML("\t<client-socket-receive-buffer-size>");
      advancedSettings0.setQSObjectPoolMaker(string0);
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.toXML("");
      advancedSettings0.getCharset();
      advancedSettings0.toXML("\t<client-socket-receive-buffer-size>");
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.setDebugNonBlockingMode(false);
      advancedSettings0.setByteBufferSize(1);
      advancedSettings0.setPerformancePreferencesConnectionTime(0);
      advancedSettings0.getUseDirectByteBuffer();
      advancedSettings0.getCharset();
      advancedSettings0.setPerformancePreferencesLatency(0);
      advancedSettings0.getByteBufferSize();
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.setQSObjectPoolMaker("");
      advancedSettings0.getCharset();
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.getCharset();
      advancedSettings0.setDebugNonBlockingMode(false);
      assertEquals("\t<client-socket-receive-buffer-size>", advancedSettings0.getClientIdentifier());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setByteBufferSize(1);
      advancedSettings0.setClientSocketTrafficClass("ey ?!x");
      advancedSettings0.setClientSocketReceiveBufferSize(0);
      advancedSettings0.setMaxThreadsForNioWrite(1093);
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setSocketLinger(1093);
      advancedSettings0.setSocketLinger(1093);
      advancedSettings0.setCharset("");
      advancedSettings0.toXML("ey ?!x");
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.toXML("7L^!!ATLVw7D4");
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.setPerformancePreferencesLatency((-1424));
      advancedSettings0.getClientIdentifier();
      advancedSettings0.setMaxThreadsForNioWrite(1508);
      advancedSettings0.setDebugNonBlockingMode(false);
      assertEquals((-1424), advancedSettings0.getPerformancePreferencesLatency());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.setCharset((String) null);
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.toXML("'#B6H84<?Ph");
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.toXML((String) null);
      advancedSettings0.setUseDirectByteBuffer(false);
      advancedSettings0.getMaxThreadsForNioWrite();
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.getQSObjectPoolMaker();
      assertFalse(advancedSettings0.getUseDirectByteBuffer());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.3549875696248246
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setSocketLinger(87);
      advancedSettings0.setClientSocketTrafficClass("rp=");
      advancedSettings0.setClientSocketSendBufferSize(65536);
      advancedSettings0.setClientSocketTrafficClass("");
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setClientSocketReceiveBufferSize(65536);
      advancedSettings0.setPerformancePreferencesLatency((-1));
      advancedSettings0.setPerformancePreferencesConnectionTime((-1));
      advancedSettings0.setBacklog((-4247));
      advancedSettings0.setPerformancePreferencesLatency((-311));
      String string0 = advancedSettings0.toXML("");
      advancedSettings0.setClientSocketReceiveBufferSize((-4247));
      advancedSettings0.getPerformancePreferencesBandwidth();
      advancedSettings0.setClientSocketTrafficClass(string0);
      advancedSettings0.setQSObjectPoolMaker("rp=");
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.toXML("EUPfUa@%");
      advancedSettings0.toXML("rp=");
      advancedSettings0.setQSObjectPoolMaker((String) null);
      advancedSettings0.setClientIdentifier("</client-socket-send-buffer-size>\n");
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.setPerformancePreferencesBandwidth((-311));
      advancedSettings0.getQSObjectPoolMaker();
      assertEquals("</client-socket-send-buffer-size>\n", advancedSettings0.getClientIdentifier());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3114234446919735
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setDebugNonBlockingMode(false);
      int int0 = 0;
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.setBacklog(0);
      advancedSettings0.setPerformancePreferencesConnectionTime((-1));
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.setByteBufferSize((-1638));
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.setClientIdentifier("^2NYt8-X2>i");
      advancedSettings0.setClientIdentifier("^2NYt8-X2>i");
      advancedSettings0.setClientSocketReceiveBufferSize(0);
      String string0 = "org.quickserver.net.server.impl.OptimisticClientIdentifier";
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("org.quickserver.net.server.impl.OptimisticClientIdentifier");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // org.quickserver.net.server.impl.OptimisticClientIdentifier
         //
         verifyException("org.quickserver.util.xmlreader.AdvancedSettings", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.3892680315457953
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setQSObjectPoolMaker(",mQ<>I6U%S$2c.vn1Hh");
      advancedSettings0.setDebugNonBlockingMode(false);
      advancedSettings0.setPerformancePreferencesLatency(49);
      advancedSettings0.setMaxThreadsForNioWrite(49);
      advancedSettings0.setSocketLinger(49);
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.toXML("uZ)|z? -\"/WbOsC '");
      advancedSettings0.setClientIdentifier((String) null);
      advancedSettings0.setPerformancePreferencesBandwidth(49);
      advancedSettings0.setClientIdentifier("$D1Fl;_");
      advancedSettings0.setClientSocketReceiveBufferSize(0);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setPerformancePreferencesBandwidth(49);
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.setCharset("");
      advancedSettings0.getClientIdentifier();
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setPerformancePreferencesBandwidth(1);
      advancedSettings0.setPerformancePreferencesConnectionTime(1);
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.setPerformancePreferencesConnectionTime(1);
      advancedSettings0.setDebugNonBlockingMode(true);
      assertEquals("$D1Fl;_", advancedSettings0.getClientIdentifier());
  }
}
