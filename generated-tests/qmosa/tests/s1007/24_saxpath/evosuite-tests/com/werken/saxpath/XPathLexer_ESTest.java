/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:41:39 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.setXPath("< :Ds=@1xa7rbDEdE^o");
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      xPathLexer0.endPosition();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.currentPosition();
      xPathLexer0.doubleColon();
      xPathLexer0.not();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.isIdentifierChar('M');
      xPathLexer0.consume(0);
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("4YxEg9WX*}_)\"SpI");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("Yx", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.slashes();
      assertEquals("g", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("W", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals("X", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals("*", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      xPathLexer0.consume(94);
      xPathLexer0.mod();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
      
      xPathLexer0.getXPath();
      boolean boolean1 = xPathLexer0.isIdentifierStartChar('D');
      assertFalse(boolean1 == boolean0);
      
      Token token10 = xPathLexer0.minus();
      assertEquals(6, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals((-1), token11.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('N');
      assertTrue(boolean0);
      
      xPathLexer0.plus();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      xPathLexer0.equals();
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('\uFFFF', char0);
      
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.getXPath();
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      xPathLexer0.getXPath();
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      xPathLexer0.nextToken();
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.star();
      xPathLexer0.setXPath("r wRM#8ZbE:-`9?{jP4");
      xPathLexer0.isIdentifierChar('W');
      xPathLexer0.at();
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      xPathLexer0.consume(0);
      xPathLexer0.getXPath();
      xPathLexer0.setXPath("r wRM#8ZbE:-`9?{jP4");
      assertEquals("r wRM#8ZbE:-`9?{jP4", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.pipe();
      xPathLexer0.isIdentifierChar('X');
      xPathLexer0.consume(0);
      xPathLexer0.plus();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.equals();
      xPathLexer0.endPosition();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.minus();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5247318902316453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.plus();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("9", token1.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.LA((-1));
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.hasMoreChars();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("GT", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals("=^", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.or();
      Token token6 = xPathLexer0.slashes();
      assertEquals("w", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      xPathLexer0.colon();
      Token token7 = xPathLexer0.number();
      assertEquals("", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals(')', char0);
      
      xPathLexer0.leftParen();
      xPathLexer0.or();
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("z", token8.getTokenText());
      
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      assertEquals("\"", token9.getTokenText());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2066031287599803
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('E');
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      boolean boolean1 = xPathLexer0.hasMoreChars();
      assertFalse(boolean1 == boolean0);
      
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.dots();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(10, int0);
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.consume(10);
      xPathLexer0.literal();
      xPathLexer0.doubleColon();
      char char0 = xPathLexer0.LA(0);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer0.consume((-5758));
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0329943906927324
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.dots();
      assertEquals(14, token1.getTokenType());
      
      token0.toString();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      char char0 = xPathLexer0.LA(2921);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.XPathLexer", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.dots();
      String string0 = token0.toString();
      assertEquals("[ (19) (co)", string0);
      
      xPathLexer0.consume(2921);
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      xPathLexer0.or();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      xPathLexer0.notEquals();
      xPathLexer0.hasMoreChars();
      xPathLexer0.isIdentifierStartChar('l');
      xPathLexer0.whitespace();
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.dollar();
      xPathLexer0.leftParen();
      xPathLexer0.isIdentifierChar('X');
      xPathLexer0.colon();
      xPathLexer0.isIdentifierStartChar('l');
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0405381055151453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume(0);
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.mod();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.getPreviousToken();
      xPathLexer0.currentPosition();
      xPathLexer0.isIdentifierStartChar('3');
      xPathLexer0.whitespace();
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4563915196719908
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(" ", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("(", token3.getTokenText());
      
      xPathLexer0.comma();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume(0);
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer0.consume((-1));
      xPathLexer0.nextToken();
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.leftParen();
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.consume();
      xPathLexer0.mod();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('#');
      assertFalse(boolean0);
      
      xPathLexer0.leftParen();
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
      
      char char0 = xPathLexer0.LA((-1));
      assertEquals('\uFFFF', char0);
      
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      
      xPathLexer0.consume();
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertNull(token11);
      
      xPathLexer0.consume((-1));
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6923109941417853
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?@S_=tloy7xT4kQF6 ");
      xPathLexer0.or();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("@", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.not();
      assertEquals("S", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.equals();
      Token token3 = xPathLexer0.comma();
      assertEquals("=", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.getXPath();
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("t", token4.getTokenText());
      
      xPathLexer0.currentPosition();
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("l", token5.getTokenText());
      
      xPathLexer0.literal();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9396081478880671
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.setXPath("V*");
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      token2.toString();
      token2.toString();
      xPathLexer0.mod();
      token2.toString();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (20) (*)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.consume(2461);
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      xPathLexer0.consume(1);
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.166750840513353
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      assertEquals("z", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      assertEquals("j", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("p", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals("V", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer0.equals();
      assertEquals("]", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("iAJLEZ", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.getXPath();
      xPathLexer0.consume(2767);
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0794386252045303
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C)Xe,8:+T>9");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.equals();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.isIdentifierStartChar('j');
      xPathLexer0.or();
      xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-371));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.equals();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.consume();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("o", token6.getTokenText());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      xPathLexer0.consume();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('_');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4844496430362217
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer(":1I-T/8G`3{7M");
      xPathLexer1.operatorName();
      xPathLexer0.isIdentifierStartChar('G');
      xPathLexer1.or();
      Token token1 = xPathLexer0.dollar();
      xPathLexer1.setPreviousToken(token1);
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.LA(26);
      xPathLexer0.setXPath("");
      xPathLexer1.nextToken();
      xPathLexer0.and();
      xPathLexer1.plus();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token2 = xPathLexer3.mod();
      assertNull(token2);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9649097348709725
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.setXPath("V*");
      Token token1 = xPathLexer0.dots();
      assertEquals("V", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      token2.toString();
      token2.toString();
      xPathLexer0.mod();
      token2.toString();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (20) (*)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.rightBracket();
      xPathLexer0.consume(2461);
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("[", token7.getTokenText());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals("(", token8.getTokenText());
      
      xPathLexer1.leftParen();
      Token token9 = xPathLexer1.leftParen();
      assertEquals(1, token9.getTokenType());
      
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.388212163060663
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume(0);
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.at();
      xPathLexer0.plus();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.mod();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.getPreviousToken();
      xPathLexer0.currentPosition();
      xPathLexer0.isIdentifierChar('3');
      xPathLexer0.whitespace();
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0380048395388897
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.LA((-1));
      xPathLexer0.plus();
      xPathLexer0.div();
      xPathLexer0.hasMoreChars();
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.colon();
      xPathLexer0.number();
      xPathLexer0.LA(0);
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }
}
