/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 09:58:27 GMT 2018
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("RG>33fsQ*z3i9", "", temporaryURLContent0, (-1356.5762F), (-1356.5762F), "RG>33fsQ*z3i9");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("y9.{42-i{-qYPc", (Content) null, 1.0F, 0, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 4, homeTexture0, 0, 4);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera(0, 1315.861F, 0.0F, 0, 4, (-1.0F));
      Camera camera1 = camera0.clone();
      linkedList0.add(camera1);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getLightColor();
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      // Undeclared exception!
      try { 
        texturesCategory0.getTexture(4);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setVideoFrameRate(0);
      int int0 = (-1654);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoQuality(1424);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality(6);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      Camera camera0 = new Camera(1424, 0, 0, 1424, 1424, 1348.9574F);
      camera0.setPitch(1424);
      camera0.setX(1348.9574F);
      linkedList1.offer(camera0);
      homeEnvironment0.setPhotoQuality(1424);
      homeEnvironment1.setVideoCameraPath(linkedList1);
      homeEnvironment1.setSkyColor(0);
      homeEnvironment1.setPhotoWidth(11053224);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment1.getVideoQuality();
      homeEnvironment0.setVideoWidth((-1072));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.HomeEnvironment$Property", propertyChangeListener0);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.clone();
      assertEquals(0, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      int int0 = (-1406);
      homeEnvironment0.setLightColor((-1406));
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoHeight();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setVideoWidth((-421));
      homeEnvironment0.setVideoFrameRate(3680);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoCameraPath();
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment.DrawingMode.valueOf("FILL");
      String string0 = "";
      String string1 = "com.eteks.sweethome3d.model.HomeEnvironment$Property";
      CatalogTexture catalogTexture0 = new CatalogTexture("", "com.eteks.sweethome3d.model.HomeEnvironment$Property", (Content) null, 0, 0.0F, "FILL");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("", (Content) null, 0, 0.0F, false);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      texturesCategory0.getIndexOfTexture(catalogTexture0);
      catalogTexture1.setCategory(texturesCategory0);
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, 0, 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getDrawingMode();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      int int0 = (-1461);
      homeEnvironment0.setSkyColor((-1461));
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(15);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoQuality();
      HomeEnvironment.Property.values();
      homeEnvironment1.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.getLightColor();
      homeEnvironment1.getSubpartSizeUnderLight();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.setPhotoWidth((-5004));
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = 293;
      homeEnvironment0.setVideoQuality(293);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setSkyColor(293);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setVideoQuality(293);
      String string0 = "";
      String string1 = "RATIO_3_2";
      try { 
        MockURL.URL("RATIO_3_2", "RATIO_3_2", "RATIO_3_2");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: ratio_3_2
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(6);
      homeEnvironment0.setPhotoQuality(0);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(6, homeEnvironment0.getCeillingLightColor());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(18);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.getPhotoHeight();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.isAllLevelsVisible();
      HomeEnvironment.Property.values();
      homeEnvironment1.getLightColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("0pn", "0pn", temporaryURLContent0, 2503.5F, (-1032.3466F), "LENS", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeTexture homeTexture0 = null;
      int int0 = 3240;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1721, (HomeTexture) null, 3240, (HomeTexture) null, 3240, 711.0F);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("(=Xg!cUr']T/tti", (Content) null, 17, (-1163.8796F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("(=Xg!cUr']T/tti", "%", (Content) null, (-1163.8796F), (-2633.228F), "");
      catalogTexture1.getCategory();
      catalogTexture1.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.getCategory();
      catalogTexture1.setCategory((TexturesCategory) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(17, homeTexture0, 17, homeTexture0, 0, (-1163.8796F));
      homeEnvironment0.setVideoQuality(0);
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment0.setGroundColor(400);
      catalogTexture0.compareTo(catalogTexture1);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setCeillingLightColor(9);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("(=Xg!cUr']T/tti", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setCeillingLightColor(2729);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(400, homeEnvironment0.getGroundColor());
      assertEquals((-1163.8796F), float0, 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(15);
      homeEnvironment0.getVideoCameraPath();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoQuality();
      HomeEnvironment.Property.values();
      homeEnvironment1.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment1.setPhotoWidth((-1072));
      homeEnvironment0.setVideoWidth(2729);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.getGroundColor();
      HomeEnvironment.DrawingMode.values();
      AspectRatio aspectRatio2 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio2);
      homeEnvironment0.setGroundColor(2551);
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      System.setCurrentTimeMillis((-2545L));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 0.0F);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setVideoFrameRate(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "rm2fg?6yu:~u", (Object) null, "rm2fg?6yu:~u");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getSkyTexture();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.599301927099795
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setWallsAlpha(0.0F);
      homeEnvironment0.setPhotoQuality(5);
      homeEnvironment0.setVideoFrameRate(5);
      homeEnvironment0.setPhotoQuality(5);
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      homeEnvironment0.setPhotoQuality(508);
      homeEnvironment0.setVideoWidth(748);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setCeillingLightColor((-2991));
      CatalogTexture catalogTexture0 = new CatalogTexture("Y$i", "Y$i", resourceURLContent0, 1016, 3070.575F, "Y$i", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setVideoFrameRate(5);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      assertEquals(508, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5400363038209806
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1721, (HomeTexture) null, 3240, (HomeTexture) null, 3240, 1721);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setGroundColor(7);
      homeEnvironment0.setWallsAlpha((-1485.8F));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setPhotoQuality(3240);
      homeEnvironment0.setVideoWidth(4);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setCeillingLightColor(1016);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setVideoFrameRate(3240);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setVideoQuality(13427964);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals((-1485.8F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoWidth((-1654));
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = homeEnvironment0.getDrawingMode();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getGroundTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setVideoQuality((-102));
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoWidth((-1654));
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getGroundTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment1.setCeillingLightColor(9);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment1.setCeillingLightColor(9);
      homeEnvironment1.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("RATIO_16_9");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.RATIO_16_9
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8937882323911377
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment1.setPhotoQuality(6);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment1.setAllLevelsVisible(false);
      assertEquals(6, homeEnvironment1.getPhotoQuality());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 11053224, 11053224, (-1654));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(11053224);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getSubpartSizeUnderLight();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoWidth(480);
      homeEnvironment0.setVideoWidth(480);
      assertEquals(360, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getSubpartSizeUnderLight();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.setPhotoHeight((-2201));
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      assertEquals((-2201), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0253262207700673
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1721, (HomeTexture) null, 3240, (HomeTexture) null, 3240, 1721);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setGroundColor(7);
      homeEnvironment0.setWallsAlpha((-1485.8F));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(46, (HomeTexture) null, 0, (HomeTexture) null, 1176, (-2034.0F));
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      assertFalse(homeEnvironment1.isObserverCameraElevationAdjusted());
      
      HomeEnvironment.Property.values();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.351673301904631
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getSubpartSizeUnderLight();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setPhotoHeight(320);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoWidth(240);
      homeEnvironment0.setPhotoWidth(240);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight(240);
      Random.setNextRandom(320);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("}w56+|/_!u^GQ6");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.}w56+|/_!u^GQ6
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9730014063936125
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getSubpartSizeUnderLight();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setPhotoHeight(320);
      homeEnvironment0.getSubpartSizeUnderLight();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      Camera camera0 = new Camera(1.0F, 213.2F, (-1446.799F), 1688.8279F, 1.7777778F, 1.0F);
      Camera camera1 = camera0.clone();
      linkedList1.add(camera1);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera2 = new Camera(1.0F, (-47.18F), 1.5F, (-1446.799F), 320.0F, 0.0F, 320, camera_Lens0);
      linkedList1.add(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList1);
      homeEnvironment0.setPhotoHeight(320);
      homeEnvironment0.setPhotoWidth(320);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }
}
