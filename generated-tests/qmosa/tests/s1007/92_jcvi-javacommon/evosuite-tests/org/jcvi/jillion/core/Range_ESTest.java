/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:34:05 GMT 2018
 */

package org.jcvi.jillion.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jcvi.jillion.core.Range;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Range_ESTest extends Range_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Range range0 = Range.ofLength(932L);
      range0.toString();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, (-693L), (-693L));
      Range.Builder range_Builder1 = range_Builder0.copy();
      Range.Builder range_Builder2 = range_Builder1.expandBegin(131L);
      assertNotSame(range_Builder0, range_Builder2);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      range_Builder0.copy();
      long long0 = 968L;
      range_Builder0.expandEnd(968L);
      long long1 = 0L;
      range_Builder0.shift(0L);
      range_Builder0.build();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      // Undeclared exception!
      try { 
        Range.of(range_CoordinateSystem0, 968L, 0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.5218412405900548
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long long0 = 2147483647L;
      Range range0 = Range.of(2147483647L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, (-1L), 2147483647L);
      LinkedList<Range> linkedList0 = new LinkedList<Range>();
      List<Range> list0 = range1.complementFrom(linkedList0);
      range1.spliterator();
      range0.endsBefore(range1);
      linkedList0.poll();
      range0.iterator();
      range0.getLength();
      range0.isSubRangeOf(range1);
      range0.iterator();
      range0.complementFrom(list0);
      Range.CoordinateSystem.values();
      String string0 = "@e";
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("@e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.@e
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.198916528720684
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Range range0 = Range.of(0L);
      range0.getBegin();
      Object object0 = new Object();
      range0.equals(object0);
      Range.Builder range_Builder0 = new Range.Builder(0L, 0L);
      Range.Builder range_Builder1 = range_Builder0.copy();
      assertNotSame(range_Builder1, range_Builder0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long long0 = (-3099L);
      Range.of((-3099L), (-3099L));
      // Undeclared exception!
      try { 
        Range.parseRange("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse  into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      long long0 = (-3658L);
      Range range0 = Range.of((-3658L), (-3658L));
      Range.Builder range_Builder0 = new Range.Builder(range0);
      // Undeclared exception!
      try { 
        range0.split(0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // max splitLength must be >= 1
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.044820482464577
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Range range0 = Range.of(2987L, 2987L);
      String string0 = range0.toString();
      assertEquals("[ 2987 .. 2987 ]/0B", string0);
      
      boolean boolean0 = range0.isEmpty();
      assertFalse(boolean0);
      
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      long long0 = range0.getBegin(range_CoordinateSystem0);
      assertEquals(2987L, long0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.887577825056549
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Range range0 = Range.of(0L);
      Range range1 = range0.asRange();
      assertFalse(range1.isEmpty());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.281713908736699
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      long long0 = 767L;
      range_Builder0.copy();
      Range range0 = Range.of(767L);
      range0.equals(range_Builder0);
      range0.spliterator();
      // Undeclared exception!
      try { 
        Range.parseRange("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse  into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.992196960885483
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Range range0 = Range.of((-1789L));
      Range range1 = Range.of((-32768L));
      boolean boolean0 = range0.isSubRangeOf(range1);
      assertFalse(boolean0);
      
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      long long0 = range0.getEnd(range_CoordinateSystem0);
      assertFalse(range0.isEmpty());
      assertEquals((-1789L), long0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.4965075614664793
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      range_Builder0.copy();
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      range_Builder1.build();
      range_Builder1.contractEnd((-2911L));
      Range range0 = range_Builder1.build();
      Object object0 = new Object();
      range0.equals(object0);
      range0.getBegin();
      range_Builder1.contractEnd(2403L);
      range0.iterator();
      // Undeclared exception!
      try { 
        Range.parseRange("tW1yYO[z?/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse tW1yYO[z?/ into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Range range0 = Range.of((-128L), (-1L));
      Range.ofLength(1262L);
      range0.toString();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("?79z", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse ?79z into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.613833133959871
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Range range0 = Range.of(0L, 32767L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range1 = Range.ofLength(32767L);
      range1.complement(range0);
      range0.getBegin(range_CoordinateSystem0);
      range0.toString();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      range0.intersection(range1);
      long long0 = 2147483647L;
      Range.of(range_CoordinateSystem1, 32767L, 2147483647L);
      // Undeclared exception!
      try { 
        Range.parseRange("ZERO_BASED", range_CoordinateSystem1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse ZERO_BASED into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Range range0 = Range.of((-2825L));
      range0.getBegin();
      Object object0 = new Object();
      range0.equals(object0);
      Range.Builder range_Builder0 = new Range.Builder(0L, 32767L);
      Range.Builder range_Builder1 = range_Builder0.copy();
      assertNotSame(range_Builder1, range_Builder0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.350800815673736
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      long long0 = 767L;
      range_Builder0.copy();
      Range range0 = Range.of(767L);
      range0.equals(range_Builder0);
      range0.spliterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      range0.forEach(consumer0);
      // Undeclared exception!
      try { 
        Range.parseRange("bQud;*,@:5Gl]hzb4]!");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse bQud;*,@:5Gl]hzb4]! into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.5130628582050236
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      range_Builder0.build();
      range_Builder1.expandEnd((-1L));
      range_Builder1.expandBegin(0L);
      range_Builder1.expandBegin(0L);
      range_Builder1.expandEnd((-1L));
      Range range0 = Range.of(0L);
      Range range1 = Range.ofLength(9223372036854774712L);
      range1.isSubRangeOf(range0);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      range0.getEnd(range_CoordinateSystem0);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf(",08KlB");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.,08KlB
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.205843029051155
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      long long0 = 0L;
      Range range0 = Range.of(0L);
      Range range1 = Range.of(0L, 4403L);
      range0.startsBefore(range1);
      range0.startsBefore(range1);
      long long1 = 0L;
      // Undeclared exception!
      try { 
        range1.split((-1533L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // max splitLength must be >= 1
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.30814290494512
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Range.of((-3658L), (-3658L));
      Range range0 = Range.of(230L);
      range0.toString();
      Range range1 = Range.of((-3658L), (-3658L));
      String string0 = range1.toString();
      range0.isEmpty();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      range0.getBegin();
      String string1 = range_CoordinateSystem0.toString();
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.6144250530769546
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      Range range0 = Range.of((-1L));
      Range.Builder range_Builder2 = range_Builder1.expandEnd((-1L));
      range_Builder1.expandBegin(0L);
      Range.Builder range_Builder3 = new Range.Builder();
      range_Builder1.expandEnd((-1L));
      range_Builder1.contractBegin((-2804L));
      Range range1 = range_Builder2.build();
      Range.Builder range_Builder4 = new Range.Builder(0L, (-1L));
      range_Builder4.copy();
      range0.complement(range1);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("4]ctB ", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse 4]ctB  into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.992196960885483
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      long long0 = (-2825L);
      Range range0 = Range.of((-2825L));
      range0.getBegin();
      range0.getLength();
      String string0 = "asE\"uo$+,Qw_!cg9";
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("asE\"uo$+,Qw_!cg9", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse asE\"uo$+,Qw_!cg9 into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.3959504024840093
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Range range0 = Range.of(0L, 32767L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range1 = Range.ofLength(32767L);
      range1.complement(range0);
      range0.getBegin(range_CoordinateSystem0);
      range0.toString();
      Range range2 = range0.intersection(range1);
      Object object0 = new Object();
      range2.equals(range0);
      Range.Builder range_Builder0 = null;
      try {
        range_Builder0 = new Range.Builder(32767L, 0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.090459923616198
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      Range range0 = range_Builder0.build();
      range_Builder1.expandEnd((-1L));
      long long0 = 0L;
      range_Builder1.expandBegin(0L);
      range0.getLength();
      // Undeclared exception!
      try { 
        range0.isSubRangeOf((Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // range can not be null
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.666624382904177
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Range range0 = Range.ofLength(2147483647L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, (-1L), 2147483647L);
      LinkedList<Range> linkedList0 = new LinkedList<Range>();
      List<Range> list0 = range1.complementFrom(linkedList0);
      range1.spliterator();
      range0.endsBefore(range1);
      Range.of(2147483647L, 2147483647L);
      range0.iterator();
      range0.getLength();
      range0.isSubRangeOf(range1);
      range0.iterator();
      range0.complementFrom(list0);
      Range.ofLength(2147483647L);
      Range range2 = Range.ofLength(9223372036854774712L);
      range2.isSubRangeOf(range0);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      range0.getEnd(range_CoordinateSystem1);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("I`w/V");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.I`w/V
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.1184272811610554
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      long long0 = 2147483647L;
      Range range0 = Range.of(2147483647L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      LinkedList<Range> linkedList0 = new LinkedList<Range>();
      range0.spliterator();
      range1.endsBefore(range0);
      // Undeclared exception!
      try { 
        linkedList0.pop();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.2872141768150196
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      long long0 = 0L;
      Range range0 = Range.of(0L);
      Range range1 = Range.of(0L, 4403L);
      range0.startsBefore(range1);
      range0.startsBefore(range1);
      range1.split(4403L);
      long long1 = 1L;
      Range.Builder range_Builder0 = new Range.Builder(0L, 1L);
      range_Builder0.contractBegin(0L);
      range_Builder0.contractBegin(0L);
      range1.getEnd();
      range0.getLength();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("number of entries must be <= Integer.MAX_VALUE", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse number of entries must be <= Integer.MAX_VALUE into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        Range.of(9223372036854775807L, (-2474L));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // given length -2474 would make range [9223372036854775807 - ? ] beyond max allowed end offset
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.335537272193299
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      range_Builder0.copy();
      range_Builder0.copy();
      Range range0 = range_Builder0.build();
      assertTrue(range0.isEmpty());
      
      Range range1 = Range.of(767L);
      range1.equals(range_Builder0);
      range1.spliterator();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      long long0 = range1.getBegin(range_CoordinateSystem0);
      assertEquals(767L, long0);
      
      long long1 = range1.getLength();
      assertEquals(1L, long1);
      
      range1.split(767L);
      assertFalse(range1.isEmpty());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.8286413964890924
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Range range0 = Range.ofLength(2147483647L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      range0.toString();
      Range range2 = range1.intersection(range0);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      Range range3 = Range.of(range_CoordinateSystem1, 754L, 754L);
      Range range4 = Range.parseRange("[ 0 .. 2147483646 ]/0B", range_CoordinateSystem1);
      range1.startsBefore(range4);
      Range range5 = Range.parseRange("[ 0 .. 2147483646 ]/0B", range_CoordinateSystem0);
      range3.complement(range1);
      range2.intersects(range1);
      range3.isSubRangeOf(range1);
      range5.endsBefore(range1);
      Range.Builder range_Builder0 = new Range.Builder(range4);
      // Undeclared exception!
      try { 
        Range.parseRange((String) null, range_CoordinateSystem1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.5759373867809954
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Range range0 = Range.ofLength(2147483647L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      Range range1 = Range.ofLength(2147483647L);
      range0.complement(range1);
      Range range2 = Range.of(range_CoordinateSystem0, 2147483647L, 9223372036854775807L);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      range2.getBegin(range_CoordinateSystem1);
      // Undeclared exception!
      try { 
        Range.of(32767L, 1L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.5396781627131424
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Range range0 = Range.ofLength(2147483647L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, (-1L), 2147483647L);
      LinkedList<Range> linkedList0 = new LinkedList<Range>();
      range1.complementFrom(linkedList0);
      range1.spliterator();
      range0.endsBefore(range1);
      Range range2 = Range.of(2147483647L, 2147483647L);
      range0.iterator();
      range1.equals(range2);
      Range.Builder range_Builder0 = new Range.Builder((-1L), 2147483647L);
      range_Builder0.build();
      range_Builder0.copy();
      range_Builder0.build();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("bgUs.k0<cM]9|9", range_CoordinateSystem1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse bgUs.k0<cM]9|9 into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.4965075614664793
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      Range range0 = Range.of((-1L));
      range_Builder1.expandEnd((-1L));
      Range.Builder range_Builder2 = range_Builder1.expandBegin(0L);
      Range.Builder range_Builder3 = new Range.Builder();
      range_Builder1.expandEnd((-1L));
      Object object0 = new Object();
      range0.equals(range_Builder3);
      long long0 = 2359L;
      Range.Builder range_Builder4 = new Range.Builder((-1L), 2359L);
      range_Builder0.build();
      // Undeclared exception!
      try { 
        range_Builder2.copy();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.4835289012468333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Range.of(0L, 32767L);
      Range.of(32767L);
      Range.Builder range_Builder0 = new Range.Builder();
      Range.Builder range_Builder1 = range_Builder0.expandEnd(420L);
      range_Builder1.expandBegin(32767L);
      Range.Builder range_Builder2 = new Range.Builder();
      Range.Builder range_Builder3 = range_Builder2.expandEnd((-26L));
      range_Builder2.contractBegin((-2147483648L));
      range_Builder3.build();
      Range.Builder range_Builder4 = null;
      try {
        range_Builder4 = new Range.Builder(32767L, 0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.40002761504648
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Range range0 = Range.of(0L, 32767L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range1 = Range.ofLength(32767L);
      range1.complement(range0);
      range0.getBegin(range_CoordinateSystem0);
      Range range2 = range0.intersection(range1);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      range1.getBegin(range_CoordinateSystem1);
      range2.toString();
      Range range3 = range1.intersection(range2);
      Object object0 = new Object();
      range3.equals((Object) null);
      long long0 = (-2L);
      Range.Builder range_Builder0 = null;
      try {
        range_Builder0 = new Range.Builder(0L, (-2L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.111266326919262
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Range range0 = Range.of(9223372036854775807L);
      Range range1 = Range.of((-32768L));
      range1.isSubRangeOf(range0);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("end of file after only %d bytes read (expected %d)", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse end of file after only %d bytes read (expected %d) into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.613651145905954
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Range range0 = Range.ofLength(2147483647L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, (-1L), 2147483647L);
      LinkedList<Range> linkedList0 = new LinkedList<Range>();
      List<Range> list0 = range1.complementFrom(linkedList0);
      range1.spliterator();
      range0.endsBefore(range1);
      range0.spliterator();
      Range.of(2147483647L, 2147483647L);
      range0.iterator();
      range0.getLength();
      range0.isSubRangeOf(range1);
      range0.complementFrom(list0);
      Range range2 = Range.ofLength(2147483647L);
      range2.intersects(range0);
      Range range3 = Range.ofLength(9223372036854774712L);
      range3.isSubRangeOf(range0);
      long long0 = (-32768L);
      // Undeclared exception!
      try { 
        Range.ofLength((-32768L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must be >=0
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.912023005428145
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Range range0 = Range.ofLength(2147483647L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, (-1L), 2147483647L);
      range1.spliterator();
      range0.endsBefore(range1);
      Range range2 = Range.of(2147483647L, 2147483647L);
      range0.iterator();
      range0.getLength();
      Range range3 = range2.asRange();
      range0.complement(range3);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      range3.getEnd(range_CoordinateSystem1);
      Range.Builder range_Builder0 = null;
      try {
        range_Builder0 = new Range.Builder((Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // range can not be null
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.0407272942644323
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-493L), (-1L));
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      Range range1 = null;
      // Undeclared exception!
      try { 
        range0.intersection((Range) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null Range used in intersection operation.
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.5634826672078703
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      Range range0 = Range.of((-1L));
      range_Builder1.expandEnd((-1L));
      range_Builder1.expandBegin(0L);
      Range.Builder range_Builder2 = new Range.Builder();
      Object object0 = new Object();
      range0.equals(range_Builder2);
      long long0 = 2359L;
      long long1 = 2171L;
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 255L, 2359L);
      range0.intersects(range1);
      range1.isSubRangeOf(range0);
      Range range2 = Range.of(2171L);
      range1.endsBefore(range2);
      Range.Builder range_Builder3 = new Range.Builder(range1);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("3iY", range_CoordinateSystem1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse 3iY into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.4430167848873383
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      long long0 = 32767L;
      Range range0 = Range.of(0L, 32767L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 0L, 0L);
      range0.complement(range1);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      Range range2 = Range.ofLength(32767L);
      range2.complement(range0);
      Long long1 = new Long(0L);
      range0.toString();
      Range range3 = range0.intersection(range2);
      Object object0 = new Object();
      range3.equals(range0);
      Range.Builder range_Builder0 = null;
      try {
        range_Builder0 = new Range.Builder(32767L, 0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.38548147551543
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Range range0 = Range.of((-1789L));
      Object object0 = new Object();
      Range range1 = Range.of((-1789L));
      range0.equals(object0);
      boolean boolean0 = range1.intersects(range0);
      assertTrue(boolean0);
      
      Range range2 = Range.of((-32768L));
      range1.endsBefore(range0);
      List<Range> list0 = range1.complement(range0);
      assertTrue(list0.isEmpty());
      
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      long long0 = range2.getBegin(range_CoordinateSystem0);
      assertEquals((-32768L), long0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.5207292232299525
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      Range range0 = Range.of((-1L));
      range_Builder1.expandEnd((-1L));
      range_Builder1.expandBegin(0L);
      Range.Builder range_Builder2 = new Range.Builder();
      range_Builder1.expandEnd((-1L));
      Object object0 = new Object();
      range0.equals(range_Builder2);
      long long0 = 693L;
      Range range1 = Range.of(693L);
      range0.complement(range1);
      range1.intersects(range0);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("@gL.VRvzggnduo9O", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse @gL.VRvzggnduo9O into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.413892457208452
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      long long0 = 0L;
      Range range0 = Range.of(0L);
      Range range1 = Range.ofLength(32767L);
      range1.complement(range0);
      Long long1 = new Long(0L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range2 = range0.intersection(range1);
      Range.of(range_CoordinateSystem0, 32767L, 2147483647L);
      Range.ofLength(0L);
      range2.startsBefore(range0);
      // Undeclared exception!
      try { 
        Range.parseRange("'?#kB<0k((}JdkGw[", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse '?#kB<0k((}JdkGw[ into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.0003565662588274
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, 5748L, 5748L);
      Range.CoordinateSystem.values();
      Range.Comparators.values();
      Range range0 = Range.ofLength(9223372036854774477L);
      Long long0 = new Long(5748L);
      range0.equals(long0);
      range0.toString(range_CoordinateSystem0);
      range0.getEnd();
      range0.toString(range_CoordinateSystem0);
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("end of file after only %d bytes read (expected %d)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.end of file after only %d bytes read (expected %d)
         //
         verifyException("java.lang.Enum", e);
      }
  }
}
