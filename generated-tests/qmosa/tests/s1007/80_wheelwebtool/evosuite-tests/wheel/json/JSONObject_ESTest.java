/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:54:20 GMT 2018
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "JSONArray[";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("JSONArray[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of JSONArray[
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "p";
      stringArray0[1] = "`mXB^j_.n{`$";
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      Byte.toUnsignedLong((byte)0);
      jSONObject0.optDouble("`mXB^j_.n{`$", (double) (byte)0);
      jSONObject0.optLong("`mXB^j_.n{`$", (long) (byte)0);
      Boolean boolean0 = Boolean.FALSE;
      JSONObject.getNames((Object) boolean0);
      HashMap<JSONObject, Object> hashMap0 = new HashMap<JSONObject, Object>((byte)0, 3510.096F);
      jSONObject0.put("H$t`P=Wj/bd", (Map) hashMap0);
      assertEquals(1, jSONObject0.length());
      
      Byte byte1 = new Byte((byte)0);
      String[] stringArray1 = JSONObject.getNames((Object) byte1);
      assertEquals(5, stringArray1.length);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSONObject.doubleToString(3622.111501729189);
      JSONTokener jSONTokener0 = new JSONTokener("U6t+p4l`FXG_/rp");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of U6t+p4l`FXG_/rp
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      float float0 = 1477.7966F;
      Float float1 = new Float(1477.7966F);
      Float.max(1477.7966F, (-1820.597F));
      JSONObject.valueToString(float1, 1253, 43);
      JSONObject jSONObject0 = new JSONObject();
      byte byte0 = (byte)110;
      Float.max(43, 1253);
      Short short0 = new Short((short)1539);
      JSONObject.valueToString(short0, 1253, 43);
      Byte byte1 = new Byte((byte)110);
      Byte.toUnsignedLong((byte)110);
      jSONObject0.accumulate("java.lang.Float@0000000001", byte1);
      JSONObject.getNames(jSONObject0);
      String string0 = " of ";
      jSONObject0.optDouble(" of ", (double) 43);
      jSONObject0.optJSONArray((String) null);
      jSONObject0.toString((-161));
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.remove("J]/;^c4%3`._F7.a,");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("true");
      linkedList0.removeFirst();
      jSONObject0.put("J]/;^c4%3`._F7.a,", (Collection) linkedList0);
      jSONObject0.optDouble("true");
      String string0 = "DZjQ7RGP";
      jSONObject0.append("DZjQ7RGP", (Object) null);
      try { 
        jSONObject0.getBoolean("_f,Zu$v");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"_f,Zu$v\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put(",\n", 0L);
      JSONObject.getNames(jSONObject0);
      Object object0 = new Object();
      JSONObject.valueToString(object0);
      try { 
        jSONObject1.getString("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = ".";
      jSONObject0.has(".");
      jSONObject0.put(".", 0L);
      JSONObject.quote("");
      jSONObject0.toString();
      jSONObject0.optDouble("%/n@&9O&HJAq*-$");
      jSONObject0.remove((String) null);
      jSONObject0.optLong(".");
      Double double0 = new Double(0L);
      JSONObject.valueToString(double0);
      try { 
        jSONObject0.getJSONObject(".");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\".\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.994353691762369
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<JSONArray, Double> hashMap0 = new HashMap<JSONArray, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "-";
      String string1 = "hKGc\"8xOOH";
      try { 
        jSONObject0.getJSONObject("hKGc\"8xOOH");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"hKGc\\\"8xOOH\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.put("ROdK9RZ", 908L);
      int int0 = 1520;
      JSONObject.valueToString(jSONObject0);
      jSONObject0.optInt("ROdK9RZ");
      jSONObject0.toString(1520, 1520);
      int int1 = (-3663);
      jSONObject0.toString((-3663), (-3663));
      jSONObject0.toString();
      try { 
        jSONObject0.get("M~oH/1w<Qp@`jv.;");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"M~oH/1w<Qp@`jv.;\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = null;
      JSONObject.quote("JSONObject[");
      jSONObject0.optBoolean((String) null);
      jSONObject0.optLong("Jp)HM*pk&)AzfS:#HY$", (-2043L));
      String string1 = null;
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "\"JSONObject[\"");
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "Jp)HM*pk&)AzfS:#HY$", 0, 0);
      jSONObject0.write(stringWriter2);
      try { 
        jSONObject0.getJSONArray((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.271899083808096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      jSONObject0.optDouble("", (-1490.0));
      JSONObject.valueToString((Object) null, 0, 0);
      try { 
        jSONObject0.getDouble("B?eD{Rt,g;_>`tHW");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"B?eD{Rt,g;_>`tHW\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1786549963416462
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<Double, Double> hashMap0 = new HashMap<Double, Double>();
      Double double0 = new Double(2692.152505539015);
      hashMap0.put((Double) null, double0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "r*m=2hW0#6G47WD";
      int int0 = (-812);
      // Undeclared exception!
      try { 
        JSONObject.valueToString(hashMap0, (-812), 2448);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7277071199508982
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "\"U6UO");
      JSONObject.valueToString("\"U6UO", 338, 338);
      int int0 = (-3181);
      jSONObject0.optInt("\"U6UO", (-3181));
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-1859));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optLong("");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject1 = jSONObject0.put("", (Map) hashMap0);
      hashMap0.put(",\n", ",\n");
      jSONObject0.keys();
      hashMap0.put("ic@CLR2xuRs", "sZQD[^*oJN");
      hashMap0.put("^!,3psy*[yFWj/", "");
      jSONObject1.optInt("000");
      jSONObject1.toString(0);
      jSONObject1.optString("^!,3psy*[yFWj/", "");
      JSONObject jSONObject2 = new JSONObject(jSONObject1);
      jSONObject2.put("issplit", 1349.83137939403);
      assertEquals(2, jSONObject2.length());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0029736704259045
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optInt("E*x8~V RSn{v");
      jSONObject0.optLong("x0$o2v=hC5");
      jSONObject0.optDouble("x0$o2v=hC5");
      jSONObject0.names();
      jSONObject0.optString("", "__xDv2&2BpJD");
      try { 
        jSONObject0.getBoolean("wheel.json.JSONObject$Null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"wheel.json.JSONObject$Null\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONObject.doubleToString(0.0);
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.toJSONObject(jSONArray0);
      jSONArray0.optInt((-1025), 1385);
      jSONArray0.put(1385, (long) 1385);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      int int0 = 46;
      jSONArray0.put(46, (double) 46);
      stringArray0[1] = "0";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.908908734898781
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<Float, Boolean> hashMap0 = new HashMap<Float, Boolean>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "\\'3eg?^>f";
      try { 
        jSONObject0.getJSONArray("'3eg?^>f");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"'3eg?^>f\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.393725953021695
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      JSONObject jSONObject1 = jSONObject0.put("ROdK9RZ", 908L);
      JSONObject.valueToString(jSONObject0);
      jSONObject0.optInt("ROdK9RZ");
      jSONObject0.toString(1520, 1520);
      jSONObject0.toString((-3663), (-3663));
      jSONObject0.names();
      jSONObject0.optString("", "ROdK9RZ");
      try { 
        jSONObject1.getBoolean("getoptJSONObject");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"getoptJSONObject\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSONObject.doubleToString(1508.081056);
      HashMap<String, Float> hashMap0 = new HashMap<String, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optInt("1508.081056", 1060);
      JSONObject jSONObject1 = jSONObject0.append("", "");
      boolean boolean0 = new Boolean("1508.081056");
      Float float0 = new Float((float) 1060);
      Float.sum((-780.94F), 0.0F);
      hashMap0.put("", float0);
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);
      try { 
        jSONObject1.getBoolean("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte byte0 = (byte)0;
      Byte byte1 = new Byte((byte)0);
      String[] stringArray0 = new String[2];
      stringArray0[1] = "`mXB^j_.n{`$";
      JSONObject jSONObject0 = new JSONObject(byte1, stringArray0);
      Byte.toUnsignedLong((byte)0);
      jSONObject0.optDouble("`mXB^j_.n{`$", Double.NaN);
      long long0 = new Long((byte)0);
      Boolean boolean0 = Boolean.FALSE;
      JSONObject.getNames((Object) null);
      HashMap<JSONObject, Object> hashMap0 = null;
      try {
        hashMap0 = new HashMap<JSONObject, Object>((byte)0, 0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal load factor: 0.0
         //
         verifyException("java.util.HashMap", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "t<d*,AEO!<@ICh$";
      stringArray0[1] = "+Y}!T~~%mzgr";
      stringArray0[2] = "gethashCode";
      stringArray0[3] = "] is not a Boolean.";
      stringArray0[4] = "getnotifyAll";
      stringArray0[5] = "0|#";
      stringArray0[6] = ".=A*sKRnFn/B";
      JSONObject jSONObject0 = new JSONObject(jSONArray0, stringArray0);
      jSONObject0.isNull("Expected '");
      try { 
        jSONObject0.getJSONObject("#i`]i6]c=km8Q");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"#i`]i6]c=km8Q\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.303379505193938
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Float float0 = new Float(1477.7966F);
      Float.max(1477.7966F, 1253);
      JSONObject.valueToString(float0, 1253, 43);
      JSONObject jSONObject0 = new JSONObject();
      float float1 = new Byte((byte)110);
      Short short0 = new Short((short)32);
      JSONObject.valueToString(short0, 1253, 43);
      Byte.toUnsignedLong((byte)110);
      JSONObject.getNames(jSONObject0);
      jSONObject0.optDouble(" of ", (double) 43);
      jSONObject0.optJSONArray((String) null);
      jSONObject0.toString((-161));
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      String[] stringArray0 = new String[2];
      String string0 = "p";
      stringArray0[0] = "p";
      stringArray0[1] = "dxQA##h1DsthVZ";
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      Byte.toUnsignedLong((byte)0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONArray jSONArray1 = jSONArray0.put((int) (byte)0, 0.0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      try { 
        jSONArray1.getJSONObject((byte)0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[0] is not a JSONObject.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.383426216729984
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      float float0 = 1477.7966F;
      Float float1 = new Float(1477.7966F);
      Float.max(1477.7966F, (-1820.597F));
      JSONObject.valueToString(float1, 1253, 43);
      JSONObject jSONObject0 = new JSONObject();
      byte byte0 = (byte)110;
      Float.max(43, 1253);
      Short short0 = new Short((short)1539);
      JSONObject.valueToString(short0, 1253, 43);
      Byte byte1 = new Byte((byte)110);
      Byte.toUnsignedLong((byte)110);
      jSONObject0.accumulate("java.lang.Float@0000000001", byte1);
      JSONObject.getNames(jSONObject0);
      jSONObject0.optDouble("java.lang.Short@0000000003", (double) 43);
      HashMap<Boolean, JSONObject> hashMap0 = new HashMap<Boolean, JSONObject>();
      JSONObject jSONObject1 = jSONObject0.put("wheel.json.JSONException", (Map) hashMap0);
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      jSONObject1.put("wheel.json.JSONException", (Collection) linkedList0);
      jSONObject0.toString((-161));
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }
}
