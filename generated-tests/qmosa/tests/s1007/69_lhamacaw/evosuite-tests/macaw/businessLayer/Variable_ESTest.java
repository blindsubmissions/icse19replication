/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:40:53 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = true;
      derivedVariable0.createVariableSummary();
      derivedVariable0.setCleaned(true);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable((User) null, rawVariable1, (Variable) null);
      rawVariable0.setCleaningDescription("g<aT[,e%30|;");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.8286413964890924
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCategory("0");
      rawVariable0.setCategory("0");
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      assertEquals("0", rawVariable0.getCategory());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.clone();
      User user0 = new User("VI]m9C1vS,!+Y[HQ=[C", "0");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      derivedVariable1.getSupportingDocuments();
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.2163581335128355
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability((String) null);
      rawVariable0.setCleaningStatus("nR%Ca[Yv>&'8j{X");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.setCodeBookNumber((String) null);
      rawVariable0.getAvailability();
      rawVariable1.isCoded();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      rawVariable1.isCoded();
      assertEquals("nR%Ca[Yv>&'8j{X", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      User user0 = new User("Q,t5<+iZ2o/(", "Q,t5<+iZ2o/(");
      user0.setIdentifier(0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.clone();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.getNotes();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      rawVariable0.getValueLabels();
      rawVariable0.setQuestionNumber(" $D1Fl;");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.questionNumber = "U%S$2c.vn1";
      derivedVariable0.setAlias("");
      ontologyTerm0.setNameSpace("v0Z");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("U%S$2c.vn1", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getNotes();
      rawVariable0.setColumnEnd("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaningStatus("");
      rawVariable0.setQuestionNumber("");
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.form = "user.affiliation.saveChanges";
      rawVariable0.setValueLabels(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("");
      derivedVariable0.questionNumber = "";
      derivedVariable0.removeSourceVariable(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setColumnEnd("<R#2=");
      assertEquals("<R#2=", rawVariable1.getColumnEnd());
      
      derivedVariable0.cloneAttributes(rawVariable1);
      rawVariable0.setLabel("");
      rawVariable0.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getQuestionNumber();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.6888794541139402
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User();
      ValueLabel.validateFields(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel1, valueLabel0);
      arrayList0.add(valueLabel1);
      rawVariable0.codeBookNumber = "";
      rawVariable0.setValueLabels(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.ensureCapacity(0);
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.removeOntologyTerms(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable0.cloneAttributes(derivedVariable1);
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, derivedVariable1);
      derivedVariable1.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("");
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable1.setForm("");
      derivedVariable0.setName("");
      derivedVariable1.getCleaningDescription();
      derivedVariable1.addSourceVariable(derivedVariable0);
      derivedVariable1.setYear("P<9>,jyI\"U$TM<'D");
      assertEquals("P<9>,jyI\"U$TM<'D", derivedVariable1.getYear());
      
      derivedVariable0.getFilePath();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.getCategory();
      rawVariable0.getName();
      rawVariable0.getLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setIdentifier(0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      assertTrue(rawVariable0.isCleaned());
      
      User user0 = new User("variable.columnEnd.label", "user.status.unverified");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.685945324669788
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "variable.questionNumber.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.questionNumber.label");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setNotes("supportingDocument.fileName.saveChanges");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.listIterator();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      User user0 = new User("variable.saveChanges.valueChanged", "supportingDocument.fileName.saveChanges");
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      ontologyTerm0.setTerm("variable.questionNumber.label");
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setCleaningStatus("variable.saveChanges.valueChanged");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      String string0 = rawVariable0.getAvailability();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.396633717042106
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("ts<*m", "ts<*m");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.cloneAttributes(derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.setLabel("ts<*m");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>(6515);
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("ts<*m", derivedVariable0.getLabel());
      
      rawVariable0.setCleaningDescription("");
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      String string0 = "1(TX\">b ";
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("", (String) null);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      String string1 = "P";
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.2069893764554567
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("");
      rawVariable0.clone();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.setCleaningDescription("UNABLE_TO_REGISTER_CHANGE_EVENTS");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("UNABLE_TO_REGISTER_CHANGE_EVENTS", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.120291565301284
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "A(-~";
      derivedVariable0.setCategory("user.city.label");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(673);
      supportingDocument0.setFilePath((String) null);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.form = "user.password.label";
      derivedVariable0.setName((String) null);
      derivedVariable0.setCategory("variable.codeBookNumber.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("user.password.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user0 = new User(")NIC*8F,", (String) null);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      User user1 = new User();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user1, derivedVariable2, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.713832158709666
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCategory("0");
      rawVariable0.setCategory("0");
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      User user0 = new User("VI]m9C1vS,!+Y[HQ=[C", "0");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable2);
      assertEquals("0", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList0);
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.hasSameDisplayName(rawVariable0);
      derivedVariable1.setCleaningDescription("UNABLE_TO_REGISTER_CHANGE_EVENTS");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      assertEquals("UNABLE_TO_REGISTER_CHANGE_EVENTS", derivedVariable1.getCleaningDescription());
      
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.75567648081457
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      supportingDocument0.setDescription((String) null);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnEnd();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User("", "");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      supportingDocument0.setDescription("0");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getColumnEnd();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9458755173797666
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("bs,kQi?+l`8tmC.8o(k");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("bs,kQi?+l`8tmC.8o(k", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getQuestionNumber());
  }
}
