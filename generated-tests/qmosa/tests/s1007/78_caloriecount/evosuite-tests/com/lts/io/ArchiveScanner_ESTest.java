/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:53:02 GMT 2018
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.net.URI;
import java.util.Collection;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "P";
      ImprovedFile improvedFile0 = new ImprovedFile("P");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.haveSlowResults = false;
      vector0.add("P");
      vector0.add("P");
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.isArchive(improvedFile0);
      String string1 = ";";
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(";");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("?QM", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ImprovedFile.copyFromToDir(improvedFile0, improvedFile0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "R_M0+DRC*QN_%Hs,:Jh");
      improvedFile0.setExecutable(false);
      archiveScanner1.toFileType(improvedFile0);
      archiveScanner0.toFileType(improvedFile1);
      String string0 = ".war";
      // Undeclared exception!
      try { 
        ImprovedFile.createTempDirectory("ci3", "qNX:dy8+~.r0M36");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("?QM.jar");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("The node, ", "P.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      Vector<String> vector0 = new Vector<String>();
      vector0.add("P");
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile1);
      String string0 = "?QM.jar";
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile1, "?QM.jar");
      improvedFile2.setExecutable(false);
      String string1 = "!";
      MockFile mockFile0 = new MockFile("!");
      archiveScanner1.toFileType(mockFile0);
      archiveScanner1.toFileType(improvedFile0);
      String string2 = "@sl;4bI+9N.E(gH\"8CL";
      String string3 = "h16Ju&";
      // Undeclared exception!
      try { 
        ImprovedFile.createTempDirectory("V!&O~a", "h16Ju&");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ImprovedFile improvedFile0 = new ImprovedFile(".zip", ".zip");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".zip";
      stringArray0[1] = ".zip";
      stringArray0[2] = ".zip";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.processDirectory(improvedFile0, ",:Jh", true);
      assertTrue(improvedFile0.isAbsolute());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ImprovedFile improvedFile1 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = ".WAR";
      stringArray0[7] = "";
      archiveScanner0.scandir(improvedFile1, "", false);
      assertEquals("", improvedFile1.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      String string0 = ".zip";
      ImprovedFile improvedFile0 = new ImprovedFile(".zip", ".zip");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".zip";
      stringArray0[1] = ".zip";
      stringArray0[2] = ".zip";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Integer> vector0 = new Vector<Integer>();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "-r[YY;,`0/C");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ImprovedFile improvedFile0 = new ImprovedFile(".zip", ".zip");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".zip";
      stringArray0[1] = ".zip";
      stringArray0[2] = ".zip";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, ".zip");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      String string0 = "";
      ImprovedFile improvedFile0 = new ImprovedFile("", "@dw k~uuL");
      MockFile mockFile0 = new MockFile(improvedFile0, ".WAR");
      File file0 = ImprovedFile.buildName(".WAR", 1000000L, (String) null, mockFile0);
      ImprovedFile improvedFile1 = ImprovedFile.createTempDirectory(".WAR", ".WAR", file0);
      ImprovedFile improvedFile2 = improvedFile1.createTempDir(".WAR", ".WAR");
      improvedFile2.deleteOnExit();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile2);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile0, "@dw k~uuL", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("3'ip", "3'ip");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".zip64..&Kye(;.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      ImprovedFile improvedFile0 = new ImprovedFile(".zip", ".zip");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".zip";
      stringArray0[1] = ".zip";
      stringArray0[2] = ".zip";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      try { 
        archiveScanner0.processDirectory(improvedFile0, "!", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/ext1/evosuite_readability_gen/projects/78_caloriecount/.zip/.zip
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("arror trjing to read entry, 0arror trjing to read entry, .jar/arror trjing to read entry, 0arror trjing to read entry, .jar");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ImprovedFile improvedFile0 = new ImprovedFile("ar=or trjing to xead entry, 0arror trjing to read entry, .jar", "ar=or trjing to xead entry, 0arror trjing to read entry, .jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.addDefaultExcludes();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      stringArray0[1] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      stringArray0[2] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      stringArray0[3] = "vc?5b@SUYO {XK\"";
      stringArray0[4] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("ar=or trjing to xead entry, 0arror trjing to read entry, .jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ImprovedFile improvedFile0 = new ImprovedFile("Are you sure you want to exit the Application?", "Are you sure you want to exit the Application?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.isExcluded("Are you sure you want to exit the Application?");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "vc?5b@SUYO {XK\"";
      stringArray0[1] = "Are you sure you want to exit the Application?";
      stringArray0[2] = "vc?5b@SUYO {XK\"";
      stringArray0[3] = "Are you sure you want to exit the Application?";
      stringArray0[4] = "Are you sure you want to exit the Application?";
      DirectoryScanner.matchPatternStart("J", "Are you sure you want to exit the Application?");
      archiveScanner0.setIncludes(stringArray0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "Are you sure you want to exit the Application?", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("arror trjing to read entry, 0arror trjing to read entry, .jar/arror trjing to read entry, 0arror trjing to read entry, .jar");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ImprovedFile improvedFile0 = new ImprovedFile("ar=or trjing to xead entry, 0arror trjing to read entry, .jar", "ar=or trjing to xead entry, 0arror trjing to read entry, .jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      stringArray0[1] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      improvedFile0.setWritable(true, true);
      stringArray0[2] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      stringArray0[3] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      stringArray0[4] = " to a file, ";
      stringArray0[5] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      stringArray0[6] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      stringArray0[7] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      stringArray0[8] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.isExcluded("ar=or trjing to xead entry, 0arror trjing to read entry, .jar");
      String[] stringArray1 = new String[5];
      stringArray1[0] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      stringArray1[1] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      stringArray1[2] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      stringArray1[3] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      stringArray1[4] = "ar=or trjing to xead entry, 0arror trjing to read entry, .jar";
      archiveScanner0.setIncludes(stringArray1);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("ar=or trjing to xead entry, 0arror trjing to read entry, .jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }
}
