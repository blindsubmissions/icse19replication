/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:14:21 GMT 2018
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasColorProperties;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.getWebSite();
      String string0 = "";
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBUtil.typesAreEquivalent((-3155), (-3155));
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "DELETE FROM ", (-766));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBUtil.setLastStatementValues((String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 125, "@RMGC)8\"fK", 1192, 1192, 125, 125, "/u8hMErKUYbp5hj@6", "u&#J3%w'w8 !B_Q.?", 1192, 125, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "@RMGC)8\"fK", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBUtil.getLastStatement();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = "log4j.defaultInitOverride";
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, (String) null, "log4j.defaultInitOverride", "log4j.defaultInitOverride");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("$e0-*X;I<IV\"3:Bs)a^", "iv", "$e0-*X;I<IV\"3:Bs)a^", "", (-1180), "", (-1180), 0, 0, 0, "$e0-*X;I<IV\"3:Bs)a^", "", (-280), (-280), "");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setCopyMenuEnabled(true);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "$e0-*X;I<IV\"3:Bs)a^", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "iv");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.getLastStatementValues();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      int int0 = 295;
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("DBUtil.error.missingtable", (-3), 295);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      DBUtil.convertTableToObjectList(linkedList0);
      DBUtil dBUtil0 = new DBUtil();
      assertNull(dBUtil0.getLastStatement());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "";
      DBUtil.setLastStatement("");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      String string1 = "w2/s%%N1[f[zv";
      int int0 = (-5);
      int int1 = (-766);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("w2/s%%N1[f[zv", (-5), (-766));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.fixCase((ISession) null, (String) null);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      int int0 = 295;
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("DBUtil.error.missingtable", (-3), 295);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("log4L.Xesea", "title", "*v8(yE", "log4L.Xesea", 0, "getProcedureTerm", 0, 0, 0, 0, "*v8(yE", "kEW", (-993), 1073741823, "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[3];
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestDatabaseObject();
      DBUtil.typesAreEquivalent((-7), (-3482));
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("select ", "fileOpenInPreviousDir", "fileOpenInPreviousDir");
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("kEW", "-&R$P~yE`C4B", "getPto6ecedureTerm", "k<r8a':.zAY", 1073741823, "kEW", 0, 0, 0, 12, "-&R$P~yE`C4B", "?9", 12, 0, "-&R$P~yE`C4B");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBUtil.typesAreEquivalent(12, (-47));
      List<IDatabaseObjectInfo> list0 = new Stack<IDatabaseObjectInfo>();
      List<ITableInfo> list1 = DBUtil.convertObjectToTableList(list0);
      assertTrue(list1.isEmpty());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "/|?>=0\"Bq`]KMt", "DBUtil.error.bindblobfailure", " limit ? ?", (-128), "getProcedureTerm", (-128), (-1), (-1), (-1), "TRUNCATE TABLE ", "Qx'WVYZI&c:", (-1), (-1053), "getProcedureTerm");
      DBUtil.typesAreEquivalent((-1053), (-128));
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      assertEquals("license.txt", dBCopyPlugin0.getLicenceFileName());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "";
      dBCopyPlugin0.setPasteToTableName("");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", 0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-1180), (-1429), (-280), (-1180), "sqlStartOfLineComment", "line.separator", 0, 0, "&vbJG[Ccq,P");
      DBUtil.isBinaryType(tableColumnInfo0);
      dBCopyPlugin0.getDestSession();
      DBUtil.fixCase((ISession) null, "");
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "sqlStartOfLineComment", "clob", "OdM}-(14", 93);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("mme!Da65\":V", "`$^N+uFgwoolS DI+CM", "", "", (-1), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 181, (-993), (-1), (-1462), "3", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-2028178998), 2467, "HNYdWX. 1kRtqc$` \"J");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCheckKeywords(true);
      dBCopyPreferenceBean0.setCopyIndexDefs(false);
      dBCopyPreferenceBean0.setUseTruncate(false);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBUtil dBUtil0 = new DBUtil();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("z!NaMFt/qqN", "z!NaMFt/qqN", "replaceDistinctDataType: Unexpected exception - ", "z!NaMFt/qqN", 0, "z!NaMFt/qqN", 545, (-1), 545, (-1), "z!NaMFt/qqN", "z!NaMFt/qqN", 545, (-1), "");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
      
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[6];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("replaceDistinctDataType: Unexpected exception - ", "z!NaMFt/qqN", "", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 0, ";br8 MyM7UGXb", 545, (-2), 0, 87, ";:}IO*S';&", "replaceDistinctDataType: Unexpected exception - ", 87, 87, ";:}IO*S';&");
      tableColumnInfoArray0[5] = tableColumnInfo1;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("z!NaMFt/qqN, z!NaMFt/qqN, z!NaMFt/qqN, z!NaMFt/qqN, z!NaMFt/qqN, net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "&vbJG[Ccq,P", "MainFrame.errorOnClose", "W-1K", 128, "W-1K", 128, 128, (-2741), (-268), "W-1K", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1003, (-2741), "k<r8a':.zAY");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("&vbJG[Ccq,P", "W-1K", "C\"/zyd1,1j", "4P9F(KRG4(5r", (-268), "k<r8a':.zAY", (-2741), (-268), 666, (-268), " G;", "4P9F(KRG4(5r", (-2028178998), 981, "dA!v%>ROTeKUI");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo2 = new TableColumnInfo((String) null, "catalog=", "k<r8a':.zAY", "DELETE FROM ", 981, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1559, 2773, 128, 128, "McKoi", "DELETE FROM ", 981, 16, "W-1K");
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo2, (ISession) null);
      DBUtil.typesAreEquivalent(16, 4);
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(stack0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin1);
      dBCopyPlugin0.getDestSession();
      String string0 = "catalog=";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "XsX0@~Y", "join type not supported by OracleJoinFragment (use Oracle9Dialect)", "k<r8a':.zAY", 1237, "catalog=", 2094, 178, 2094, 178, "Null 'type' argument", (String) null, 32767, 2001, "qJWP]GO(KW`XPyh");
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCheckKeywords(true);
      dBCopyPreferenceBean0.setCopyIndexDefs(false);
      dBCopyPreferenceBean0.setUseTruncate(false);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("z!NaMFt/qqN", "z!NaMFt/qqN", "replaceDistinctDataType: Unexpected exception - ", "z!NaMFt/qqN", 985, "z!NaMFt/qqN", 545, (-1), 545, (-1), "z!NaMFt/qqN", "z!NaMFt/qqN", 545, (-1), "");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "z!NaMFt/qqN", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "&vbJG[Ccq,P", "MainFrame.errorOnClose", "W-1K", 113, "W-1K", 113, 113, (-2741), (-268), "W-1K", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1003, (-2741), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("&vbJG[Ccq,P", "W-1K", "C\"/zyd1,1j", "4P9F(KRG4(5r", (-268), "W-1K", (-2741), (-268), 666, (-268), " G;", "4P9F(KRG4(5r", (-2028178998), 981, "dA!v%>ROTeKUI");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin2.getDestDatabaseObject();
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("&vbJG[Ccq,P", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCheckKeywords(false);
      dBCopyPreferenceBean0.setCopyIndexDefs(false);
      dBCopyPreferenceBean0.setUseTruncate(false);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("z!NaMFt/qqN", "z!NaMFt/qqN", "replaceDistinctDataType: Unexpected exception - ", "z!NaMFt/qqN", 985, "z!NaMFt/qqN", 545, (-1), 545, (-1), "z!NaMFt/qqN", "z!NaMFt/qqN", 545, (-1), "");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "z!NaMFt/qqN", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.ColTypeMapper", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "DBUtil.info.bindblobfile", (ITableInfo) null, 1111);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.8486855577264172
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = "W-1K";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "&vbJG[Ccq,P", "MainFrame.errorOnClose", "W-1K", 113, "W-1K", 113, 113, (-2741), (-268), "W-1K", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-268), (-2741), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("&vbJG[Ccq,P", "W-1K", "C\"/zyd1,1j", "4P9F(KRG4(5r", (-268), "W-1K", (-2741), (-268), 666, (-268), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "4P9F(KRG4(5r", (-2028178998), 995, "C\"/zyd1,1j");
      dBCopyPlugin0.getSourceSession();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string1 = "k<r8a':.zAY";
      TableColumnInfo tableColumnInfo2 = new TableColumnInfo((String) null, "catalog=", "k<r8a':.zAY", "DELETE FROM ", 995, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1559, 2759, 113, 113, "McKoi", "DELETE FROM ", 995, 16, "W-1K");
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo2, (ISession) null);
      DBUtil.typesAreEquivalent(16, 4);
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      stack0.add((IDatabaseObjectInfo) tableColumnInfo1);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(stack0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      stack0.add((ITableInfo) null);
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(stack0);
      assertEquals(1, list0.size());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "select ", " ] [ long ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo0);
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(0);
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      SQLAliasColorProperties sQLAliasColorProperties0 = new SQLAliasColorProperties();
      sQLAlias0.setColorProperties(sQLAliasColorProperties0);
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      assertEquals("-66e9f29a:1656c3f94d3:-7f76", uidIdentifier0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setPasteToTableName("Encountered unexpected exception when attempting to call schemaInfo.getTables]with catalog = ");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("org.apache.log4j.DefaultCategoryFactory", "Encountered unexpected exception when attempting to call schemaInfo.getTables]with catalog = ", "3De~", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-2), "bCY{zk.N_V4yj0!a=ub", 16777215, (-2), 2155, (-2040), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "line.separator", (-693), (-693), "line.separator");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("Encountered unexpected exception when attempting to call schemaInfo.getTables]with catalog = ");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      dBCopyPlugin1.getSourceSession();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "-03-", "-03-");
      int int0 = DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "6ln.K");
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack1 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-3028), (-1840700267), 2005, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack1 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 1, 382, 557, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPluginUserSettingsFolder();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      dBCopyPlugin1.getDestSession();
      dBCopyPlugin1.getSourceSession();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack1 = new Stack<IDatabaseObjectInfo>();
      int int0 = (-7);
      int int1 = 8;
      int int2 = 16;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-7), 8, 16, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack1 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 1111, 113, 557, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack1 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-5), (-555), 557, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-6), 2002, (-496), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("X=Tktqghq{G+M8bn4", "Gl1U+ y2", "no", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 3273, "X=Tktqghq{G+M8bn4", 2470, (-685), (-65), (-685), "no", "Gl1U+ y2", 3273, 8, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBUtil.replaceDistinctDataType(2470, tableColumnInfo0, (ISession) null);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBUtil.typesAreEquivalent(2, 6);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "select start_with as last_value, MAXIMUM_VALUE, MINIMUM_VALUE, 0 as CACHE_VALUE, INCREMENT, case INCREMENT when 'NO' then 0 else 1 end as INCREMENT_BY from INFORMATION_SCHEMA.SYSTEM_SEQUENCES where SEQUENCE_SCHEMA = '$sequenceSchema$' and SEQUENCE_NAME = '$sequenceName$' ";
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getSourceSession();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack1 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 16, 8, 421, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getSourceSession();
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.getDriverPropertiesClone();
      sQLAlias0.getDriverPropertiesClone();
      DBUtil.typesAreEquivalent((-1894), (-5936));
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, (-5936));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[B4{K8HUcHf:=dLRu");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2, 63, 2, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.14999492361041503
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack1 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2004, 557, (-2136), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack1 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2002, 1, 2002, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "IKVHN,n)NL,7\"G&g*?}", "IKVHN,n)NL,7\"G&g*?}");
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack1 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 0, 1, 91, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.1461447460085638
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "wXCmm'IQzl3CXPYK", "}H4u](", 2005, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2005, 2005, 1603, (-685), "M4Ff3{;0W2", (String) null, 1603, (-685), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2005, 2005, (-685), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      Stack<IDatabaseObjectInfo> stack1 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 91, 5, 0, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      PreparedStatement preparedStatement0 = null;
      ResultSet resultSet0 = null;
      int int0 = (-496);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 3, (-317), 34, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      ResultSet resultSet0 = null;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 8, 16, 1189, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.2711893730418441
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      dBCopyPlugin0.getDestSession();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      PreparedStatement preparedStatement0 = null;
      int int0 = 8;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 4, 4, 421, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Encountered unexpected exception while attempting to determine if schemas are used in table definitions");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteToTableName("Encountered unexpected exception while attempting to determine if schemas are used in table definitions");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 7, 2003, 8300, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Encountered unexpected exception while attempting to determine if schemas are used in table definitions");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteToTableName(" CHAR(10) )");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2006, (-783), 2011, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      PreparedStatement preparedStatement0 = null;
      ResultSet resultSet0 = null;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 93, (-496), 2003, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      ISession iSession0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "org.hibernate.type.FloatType", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginJarFilePath();
      dBCopyPlugin0.getSourceSession();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack1 = new Stack<IDatabaseObjectInfo>();
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.getDriverPropertiesClone();
      DBUtil.typesAreEquivalent((-7), 16);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("DBUtil.info.bindcloblength", "line.separator", "DBUtil.info.bindcloblength", "select start_with as last_value, MAXIMUM_VALUE, MINIMUM_VALUE, 0 as CACHE_VALUE, INCREMENT, case INCREMENT when 'NO' then 0 else 1 end as INCREMENT_BY from INFORMATION_SCHEMA.SYSTEM_SEQUENCES where SEQUENCE_SCHEMA = '$sequenceSchema$' and SEQUENCE_NAME = '$sequenceName$' ", 506, "z$", 2556, 2556, 506, 506, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "select start_with as last_value, MAXIMUM_VALUE, MINIMUM_VALUE, 0 as CACHE_VALUE, INCREMENT, case INCREMENT when 'NO' then 0 else 1 end as INCREMENT_BY from INFORMATION_SCHEMA.SYSTEM_SEQUENCES where SEQUENCE_SCHEMA = '$sequenceSchema$' and SEQUENCE_NAME = '$sequenceName$' ", (-2102), (-4), "DatabaseObjectType.other");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo((String) null, "select start_with as last_value, MAXIMUM_VALUE, MINIMUM_VALUE, 0 as CACHE_VALUE, INCREMENT, case INCREMENT when 'NO' then 0 else 1 end as INCREMENT_BY from INFORMATION_SCHEMA.SYSTEM_SEQUENCES where SEQUENCE_SCHEMA = '$sequenceSchema$' and SEQUENCE_NAME = '$sequenceName$' ", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "select start_with as last_value, MAXIMUM_VALUE, MINIMUM_VALUE, 0 as CACHE_VALUE, INCREMENT, case INCREMENT when 'NO' then 0 else 1 end as INCREMENT_BY from INFORMATION_SCHEMA.SYSTEM_SEQUENCES where SEQUENCE_SCHEMA = '$sequenceSchema$' and SEQUENCE_NAME = '$sequenceName$' ", (-4), ":", 2556, 506, 469, (-2102), "ReEofMoPjbfs!d", "ALTER TABLE ", 731, 2556, (String) null);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo1);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.setPasteToTableName("0");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2003, (-1198), 2756, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "wXCmm'IQzl3CXPYK", "}H4u](", 1171, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1171, 1171, 1603, (-685), "M4Ff3{;0W2", (String) null, 1603, (-685), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPluginAppSettingsFolder();
      dBCopyPlugin1.getSourceSession();
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBUtil.typesAreEquivalent(1171, 1603);
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      DBUtil.replaceDistinctDataType((-685), tableColumnInfo0, (ISession) null);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("DatabaseObjectType.other", "/Ly6zfR_E|J/?,2=(U", "yM", "wXCmm'IQzl3CXPYK", (-685), "yM", 1603, 1603, (-685), 1171, "M4Ff3{;0W2", "line.separator", 1603, 506, "yM");
      DBUtil.isBinaryType(tableColumnInfo1);
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 1603);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      int int0 = (-1);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-1), 2320, 92, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-2), 3, (-712), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
