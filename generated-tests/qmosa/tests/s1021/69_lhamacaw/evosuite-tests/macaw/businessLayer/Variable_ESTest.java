/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:47:38 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setColumnStart("");
      derivedVariable0.setYear("]K");
      derivedVariable0.createVariableSummary();
      derivedVariable0.setCoded(false);
      derivedVariable1.setCleaningStatus("user.password.saveChanges");
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getIdentifier();
      assertEquals("]K", derivedVariable0.getYear());
      
      derivedVariable1.columnEnd = "!yU?}z#ZCq+wF";
      derivedVariable1.setCleaningDescription((String) null);
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      arrayList0.remove((Object) derivedVariable0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.setAvailability("cO");
      derivedVariable0.getDisplayName();
      derivedVariable0.getQuestionNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setDescription("");
      ontologyTerm0.setOntologyName("general.fieldValue.blank");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCategory("");
      derivedVariable1.notes = "";
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setName("p@2'f'<&E/cj`&+Y");
      assertEquals("cO", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(false);
      rawVariable0.getValueLabels();
      rawVariable0.setCleaningStatus("user.firstName.label");
      assertEquals("user.firstName.label", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<Locale.LanguageRange> arrayList1 = new ArrayList<Locale.LanguageRange>();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList1, (Collection<String>) arrayList2);
      arrayList0.retainAll(list0);
      rawVariable0.addSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList3.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList3);
      rawVariable0.setYear("");
      String string0 = "macaw.system.MacawChangeEvent";
      rawVariable0.setCategory("macaw.system.MacawChangeEvent");
      rawVariable0.getCleaningStatus();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setIsNewRecord(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("");
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setIdentifier(0);
      supportingDocument0.setIsNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      supportingDocument0.clone();
      rawVariable0.notes = "";
      supportingDocument0.getDisplayName();
      supportingDocument0.setDocumentCode("}x,S98H,g[Cp>wUtq6");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getColumnStart();
      rawVariable0.getAvailability();
      rawVariable0.isCleaned();
      rawVariable0.isCoded();
      rawVariable0.getName();
      rawVariable0.getCleaningStatus();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.ensureCapacity(0);
      arrayList0.clone();
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setAvailability("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertTrue(rawVariable0.isNewRecord());
      
      derivedVariable0.setQuestionNumber("");
      derivedVariable0.getAvailability();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel(")");
      derivedVariable0.form = ")";
      valueLabel0.clone();
      derivedVariable0.removeValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      linkedList0.add(rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>(linkedList0);
      derivedVariable0.removeSourceVariables(arrayList0);
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      rawVariable0.setColumnEnd("");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.getSupportingDocuments();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2491274088747426
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.getYear();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList2);
      derivedVariable0.setNotes("");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      String string0 = "&AC\"+7%OA|\\";
      derivedVariable0.setName("&AC\"+7%OA|");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      String string1 = "yt.Tmc]mB:q4IW=|y%";
      rawVariable0.setAvailability("yt.Tmc]mB:q4IW=|y%");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.addValueLabel((ValueLabel) null);
      // Undeclared exception!
      try { 
        DerivedVariable.validateFields((DerivedVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.4657359027997248
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("lpf");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getColumnEnd();
      rawVariable0.setQuestionNumber("");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      rawVariable0.setForm("lpf");
      rawVariable0.setAlias("lpf");
      rawVariable0.setNotes("lpf");
      rawVariable0.clone();
      rawVariable0.clone();
      assertEquals("lpf", rawVariable0.getForm());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      derivedVariable0.setCodeBookNumber("Unknown");
      derivedVariable0.setColumnStart(",_G}<<@t|{x");
      derivedVariable0.setCleaned(false);
      derivedVariable0.setNotes(",_G}<<@t|{x");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      derivedVariable1.setAlias("Unknown");
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable1.getAvailability();
      derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.codeBookNumber = "variable.cleaningStatus.label";
      rawVariable0.setIdentifier((-1161));
      rawVariable0.getNotes();
      rawVariable0.getDisplayItemIdentifier();
      assertEquals("-1161", rawVariable0.getDisplayItemIdentifier());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable0.setIdentifier(3);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getFilePath();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setColumnEnd("");
      supportingDocument0.setFileName("");
      derivedVariable1.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setColumnEnd("");
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.8918202981106305
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.createVariableSummary();
      ontologyTerm0.clone();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setCodeBookNumber("");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      User.detectFieldChanges(user0, user0, user1);
      rawVariable0.setForm("");
      rawVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("g");
      supportingDocument0.setDescription("");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.isNewRecord();
      ontologyTerm0.getDisplayName();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.044804882954829
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable2.getCategory());
      assertFalse(rawVariable2.isNewRecord());
      assertEquals(0, rawVariable2.getIdentifier());
      assertFalse(rawVariable2.isCleaned());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertFalse(rawVariable2.isCoded());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.3632670703667644
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("0(l");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier(2916);
      rawVariable0.getAlternativeVariable();
      assertEquals(2916, rawVariable0.getIdentifier());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      RawVariable rawVariable2 = (RawVariable)rawVariable1.clone();
      assertEquals("Unknown", rawVariable2.getCategory());
  }
}
