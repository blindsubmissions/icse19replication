/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:02:52 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ConvolveOp;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.renderable.ParameterBlock;
import java.time.temporal.ChronoField;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Predicate;
import javax.swing.JComboBox;
import javax.swing.text.StyledEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      visualListModel0.undeleteElements(intArray0);
      intArray0[0] = 0;
      intArray0[1] = 1000;
      intArray0[2] = 180;
      intArray0[3] = 255;
      intArray0[4] = 930;
      intArray0[5] = (-622);
      visualListModel0.moveUpIndexes(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.trimToSize();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) arrayList0);
      visualListModel0.getElementAt(0);
      visualListModel0.prependAllElements(arrayList0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getSize();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(1479, "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      visualListModel0.getSize();
      visualListModel0.clearData();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.removeElements(0, 6, false);
      visualListModel0.moveDownIndexes(intArray0);
      intArray0[0] = 255;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(255, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1059);
      visualListModel0.addAllElements((-1059), (Collection<VisualPageListItem>) null);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.data = vector0;
      int int1 = 1411;
      visualListModel0.subList(255, 1411);
      visualListModel0.setData(vector0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 1032;
      intArray0[2] = 0;
      intArray0[3] = 4008;
      boolean boolean0 = true;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.rotateClockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(4008, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 4008
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = (-2457);
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = (-2457);
      intArray0[6] = 1;
      visualListModel0.removeElements(65535, (-2457), true);
      visualListModel0.getValidElements();
      intArray0[7] = (-2457);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.removeElements(1, (-2457), true);
      visualListModel0.getSize();
      // Undeclared exception!
      try { 
        visualListModel0.subList(1, (-2457));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1) > toIndex(-2457)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      vector0.retainAll(linkedList0);
      visualListModel0.appendAllElements(vector0);
      visualListModel0.prependAllElements(vector0);
      visualListModel0.addAllElements(11, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.moveUpIndex(11);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-107);
      byteArray0[1] = (byte)0;
      byte byte0 = (byte)79;
      byteArray0[2] = (byte)79;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(11, byteArray0);
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      StyledEditorKit.AlignmentAction styledEditorKit_AlignmentAction0 = new StyledEditorKit.AlignmentAction("org.pdfsam.guiclient.commons.models.VisualListModel", (-5870));
      RenderingHints renderingHints0 = new RenderingHints(sunHints_LCDContrastKey0, styledEditorKit_AlignmentAction0);
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((byte)79, (-5870), (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -1
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = (-1);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(hashSet0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "bf@?FNOK";
      stringArray0[1] = "=hL\"7";
      stringArray0[2] = "sAp=Q<cCG-i";
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      stringArray0[3] = "}a^sVik9fwez]";
      stringArray0[4] = "";
      stringArray0[5] = "bold";
      stringArray0[6] = "";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      jComboBox0.getPropertyChangeListeners("=hL\"7");
      visualListModel0.removeListDataListener(jComboBox0);
      intArray0[1] = 5699;
      intArray0[2] = (-1);
      visualListModel0.removeElements((-2037), 56, true);
      intArray0[3] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      assertEquals(4, intArray0.length);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = (-3082);
      intArray0[3] = 1000;
      intArray0[4] = (-2426);
      intArray0[5] = 4;
      visualListModel0.moveDownIndex(1);
      intArray0[6] = 0;
      visualListModel0.moveDownIndexes(intArray0);
      HashSet<VisualPageListItem> hashSet0 = null;
      try {
        hashSet0 = new HashSet<VisualPageListItem>((-456), 1.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal initial capacity: -456
         //
         verifyException("java.util.HashMap", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, true);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-1125), "Fr9&bxOun", ":N.k\u0001ix-Hm'B?(\"&a");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.prependAllElements(arrayList0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0, true);
      visualListModel0.moveUpIndex(0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-801), (-801));
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.subList((-1), (-801));
      visualListModel0.addAllElements((-801), (Collection<VisualPageListItem>) null);
      visualListModel0.getValidElements();
      int int0 = 0;
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) (-801);
      floatArray0[1] = (float) (-1);
      floatArray0[2] = (float) 0;
      floatArray0[3] = (float) (-1);
      floatArray0[4] = (float) (-1);
      floatArray0[5] = (float) (-801);
      floatArray0[6] = (float) 0;
      floatArray0[7] = 1868.7F;
      floatArray0[8] = (float) (-1);
      Kernel kernel0 = new Kernel((-801), 0, floatArray0);
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0, 0, (RenderingHints) null);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(487, 487, 487);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 487
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndex((-2426));
      visualListModel0.moveDownIndexes(intArray0);
      HashSet<VisualPageListItem> hashSet0 = null;
      try {
        hashSet0 = new HashSet<VisualPageListItem>(39, (-3306.8F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal load factor: -3306.8
         //
         verifyException("java.util.HashMap", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4254797084327193
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      visualListModel0.getListDataListeners();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndex((-3309));
      intArray0[0] = (-498);
      intArray0[1] = (-2046);
      visualListModel0.moveDownIndex((-498));
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndex(0);
      visualListModel0.rotateClockwiseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getValidElements();
      JComboBox<ChronoField> jComboBox0 = new JComboBox<ChronoField>();
      jComboBox0.getGraphicsConfiguration();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      assertTrue(linkedHashSet0.isEmpty());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      int int0 = 40;
      visualListModel0.subList(1695, 1695);
      intArray0[0] = 40;
      int int1 = 9999;
      visualListModel0.elementsChanged();
      intArray0[1] = 9999;
      intArray0[2] = 836;
      int int2 = 12;
      intArray0[3] = 12;
      visualListModel0.undeleteElements(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.trimToSize();
      visualListModel0.addAllElements(1695, (Collection<VisualPageListItem>) arrayList0);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-2317));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2317
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5229550675313184
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = (-2457);
      intArray0[2] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      visualListModel0.removeElements(1, (-2457), true);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[0];
      visualListModel0.reverseElements(intArray1);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-2534), (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.1458417525947544
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.removeElements(65535, 65535, true);
      visualListModel0.getValidElements();
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(0, 65535, false);
      visualListModel0.getSize();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      visualListModel0.addAllElements((-2593), collection0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.addAllElements(6, (Collection<VisualPageListItem>) priorityQueue0);
      visualListModel0.getElementAt(0);
      Collection<VisualPageListItem> collection1 = visualListModel0.subList(7, 65535, true);
      assertNull(collection1);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(346, (-1), true);
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel1.moveUpIndex((-717));
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        visualListModel1.getListeners((Class) class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.Integer; cannot be cast to [Ljava.util.EventListener;
         //
         verifyException("javax.swing.event.EventListenerList", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndex(6);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.updateElementAt(6, (VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.removeElements(intArray0, false);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      visualListModel0.moveDownIndex(4646);
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel1.data = (Vector<VisualPageListItem>) stack0;
      stack0.containsAll(collection0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      assertNotSame(visualListModel1, visualListModel0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(255);
      visualListModel0.moveDownIndex(366);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(366);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2047854169135204
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      arrayList0.trimToSize();
      visualListModel0.addAllElements(1710, (Collection<VisualPageListItem>) arrayList0);
      visualListModel0.getElementAt(245);
      visualListModel0.prependAllElements(arrayList0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getSize();
      visualListModel1.elementsChanged();
      // Undeclared exception!
      try { 
        visualListModel1.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.addElementAt((VisualPageListItem) null, (-3946));
      arrayList0.trimToSize();
      visualListModel0.addAllElements((-33), (Collection<VisualPageListItem>) arrayList0);
      visualListModel0.getElementAt(255);
      visualListModel0.prependAllElements(arrayList0);
      int[] intArray0 = new int[8];
      intArray0[0] = 255;
      intArray0[1] = (-3946);
      intArray0[2] = 255;
      intArray0[3] = 255;
      intArray0[4] = 0;
      intArray0[5] = (-3946);
      intArray0[6] = (-3946);
      intArray0[7] = (-3946);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.getSize();
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0, true);
      visualListModel0.moveUpIndex(0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel1.reverseElements(intArray0);
      int[] intArray1 = new int[0];
      visualListModel1.reverseElements(intArray1);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.updateElementAt(34, (VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel2.data;
      visualListModel2.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel2.data = vector0;
      visualListModel0.rotateClockwiseElements(intArray1);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.removeElements(intArray0, true);
      visualListModel2.addElement((VisualPageListItem) null);
      assertNotSame(visualListModel2, visualListModel0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.1458417525947544
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray1 = new int[6];
      intArray1[0] = (-1);
      intArray1[1] = (-1);
      intArray1[2] = 346;
      intArray1[3] = 346;
      intArray1[4] = (-1);
      visualListModel1.reverseElements(intArray1);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.updateElementAt(346, (VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = visualListModel2.data;
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) linkedList0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.rotateClockwiseElements(intArray1);
      visualListModel0.removeElements(intArray1, false);
      assertNotSame(visualListModel0, visualListModel2);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, (-3946));
      arrayList0.trimToSize();
      visualListModel0.addAllElements((-33), (Collection<VisualPageListItem>) arrayList0);
      visualListModel0.getElementAt(255);
      visualListModel0.prependAllElements(arrayList0);
      int int0 = visualListModel0.getSize();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.getElementAt(289);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      arrayList0.removeIf(predicate2);
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, (-3946));
      arrayList0.trimToSize();
      visualListModel0.prependAllElements(arrayList0);
      visualListModel0.getSize();
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.clearData();
      visualListModel0.addElementAt((VisualPageListItem) null, (-3946));
      arrayList0.trimToSize();
      visualListModel0.prependAllElements(arrayList0);
      visualListModel0.getElements();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0982737395252498
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.reverseElements(intArray0);
      visualListModel1.reverseElements(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      int int0 = 57;
      visualListModel0.updateElementAt(57, (VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      // Undeclared exception!
      try { 
        visualListModel1.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.269639374604125
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.prependAllElements(arrayList0);
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.subList((-1732), 0, true);
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) arrayList0);
      visualListModel0.getElements();
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.4762471329830333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.prependAllElements(arrayList0);
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.elementChanged((VisualPageListItem) null);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) arrayList0);
      visualListModel1.addAllElements((-556), (Collection<VisualPageListItem>) arrayList0);
      assertEquals(2, visualListModel1.getSize());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      int int0 = 1;
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      visualListModel0.clearData();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[2];
      int int1 = 46;
      intArray0[0] = 46;
      intArray0[1] = 1;
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 46
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.231606951608935
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.clearData();
      visualListModel0.updateElementAt((-2220), (VisualPageListItem) null);
      visualListModel0.getValidElements();
      visualListModel0.getValidElements();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[2];
      intArray0[0] = (-2220);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      int int0 = 1183;
      intArray0[1] = 1183;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2220
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.183187269602014
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0);
      Vector<Object> vector1 = parameterBlock0.getParameters();
      arrayList0.removeAll(vector1);
      visualListModel1.subList((-1732), 0, true);
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) arrayList0);
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel1.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.433698951385428
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<Object> vector0 = new Vector<Object>();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveUpIndexes(intArray0);
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 185;
      intArray1[2] = (-1732);
      intArray1[3] = 1;
      intArray1[4] = 0;
      intArray1[5] = (-1732);
      intArray1[6] = (-1732);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel2.rotateClockwiseElements(intArray0);
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      visualListModel2.updateElementAt(795, (VisualPageListItem) null);
      assertEquals(0, visualListModel2.getSize());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.4547433593334764
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<Object> vector0 = new Vector<Object>();
      VisualListModel visualListModel2 = new VisualListModel();
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) arrayList0);
      intArray1[1] = 185;
      intArray1[2] = 0;
      intArray1[3] = 1;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 0;
      visualListModel0.reverseElements(intArray1);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel2.rotateClockwiseElements(intArray0);
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      visualListModel2.updateElementAt(795, (VisualPageListItem) null);
      assertEquals(0, visualListModel2.getSize());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.253857589601352
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.getSize();
      visualListModel0.getElements();
      arrayList0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElement(visualPageListItemArray0[1]);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.moveDownIndex(0);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.4632808831743667
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      Vector<Object> vector0 = new Vector<Object>();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) arrayList0);
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 1;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.reverseElements(intArray1);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      int int0 = visualListModel0.getSize();
      assertEquals(0, int0);
      
      visualListModel0.getValidElements();
      assertEquals(0, visualListModel0.getSize());
  }
}
