/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:23:54 GMT 2018
 */

package org.jsecurity.authc;

import org.junit.Test;
import static org.junit.Assert.*;
import java.net.InetAddress;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.jsecurity.authc.UsernamePasswordToken;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UsernamePasswordToken_ESTest extends UsernamePasswordToken_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("", "", true);
      char[] charArray0 = new char[8];
      charArray0[0] = 'e';
      charArray0[1] = 'L';
      charArray0[2] = 'q';
      charArray0[3] = 'O';
      charArray0[4] = '\"';
      charArray0[5] = '5';
      usernamePasswordToken0.setRememberMe(true);
      charArray0[6] = 'j';
      charArray0[7] = 'L';
      usernamePasswordToken0.setPassword(charArray0);
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.getPassword();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)61;
      InetAddress inetAddress0 = MockInetAddress.getByAddress(byteArray0);
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, (String) null, false, inetAddress0);
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.setUsername(", rememberMe=");
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getByName("J`F");
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("J`F", "J`F", true, inetAddress0);
      assertTrue(usernamePasswordToken0.isRememberMe());
      
      usernamePasswordToken0.clear();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.getPrincipal();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'w';
      charArray0[1] = 'I';
      charArray0[2] = 'E';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken(" (", charArray0, false);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("1y", (String) null, false);
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.setPassword((char[]) null);
      usernamePasswordToken0.setUsername("M:[$g+jrB0t3");
      InetAddress inetAddress0 = MockInetAddress.getByName((String) null);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setUsername((String) null);
      usernamePasswordToken0.setUsername("'y-\"5d-@uO@_");
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.setPassword((char[]) null);
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.setRememberMe(true);
      assertTrue(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      usernamePasswordToken0.toString();
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false (/127.0.0.1)", string0);
      
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setUsername("g. 12");
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.getCredentials();
      boolean boolean0 = usernamePasswordToken0.isRememberMe();
      assertFalse(boolean0);
      
      usernamePasswordToken0.setPassword((char[]) null);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.getUsername();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("XgFF|/", "", inetAddress0);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.getInetAddress();
      char[] charArray0 = new char[7];
      charArray0[0] = 'Q';
      charArray0[1] = '2';
      charArray0[2] = 'N';
      charArray0[3] = '2';
      charArray0[4] = 'l';
      charArray0[5] = 'm';
      charArray0[6] = '!';
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getInetAddress();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '$';
      charArray0[1] = 'j';
      charArray0[2] = 'd';
      charArray0[3] = 'L';
      charArray0[4] = 'N';
      charArray0[5] = 'M';
      charArray0[6] = 'w';
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("T2}=mp69aP7F1!", charArray0, inetAddress0);
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.toString();
      InetAddress inetAddress1 = usernamePasswordToken0.getInetAddress();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.getInetAddress();
      usernamePasswordToken0.setInetAddress(inetAddress1);
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.getCredentials();
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '4';
      charArray0[1] = 'H';
      charArray0[2] = 'X';
      charArray0[3] = 'Q';
      charArray0[4] = '6';
      charArray0[5] = 'h';
      charArray0[6] = 'G';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("", charArray0);
      char[] charArray1 = new char[1];
      usernamePasswordToken0.clear();
      charArray1[0] = 'H';
      usernamePasswordToken0.setPassword(charArray1);
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.setUsername("");
      usernamePasswordToken0.getPassword();
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.557793860107733
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("MQPWkWhnZuX^", "");
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setUsername("MQPWkWhnZuX^");
      usernamePasswordToken0.setUsername("M{X;");
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setRememberMe(false);
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.toString();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.setUsername((String) null);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setUsername((String) null);
      usernamePasswordToken0.getInetAddress();
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.setPassword((char[]) null);
      usernamePasswordToken0.toString();
      assertTrue(usernamePasswordToken0.isRememberMe());
  }
}
