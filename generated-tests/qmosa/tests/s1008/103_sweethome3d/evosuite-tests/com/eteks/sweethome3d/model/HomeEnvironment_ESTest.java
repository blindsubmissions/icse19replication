/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 10:21:15 GMT 2018
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setCeillingLightColor(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("system protocol handler", propertyChangeListener0);
      Camera camera0 = new Camera(0, 743.2653F, 0.0F, 0.0F, 0.0F, 0.0F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "system protocol handler", homeEnvironment1, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment1, "system protocol handler", homeEnvironment_Property0, homeEnvironment1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.getSkyColor();
      homeEnvironment0.setLightColor(13427964);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setVideoFrameRate(11053224);
      homeEnvironment0.setVideoQuality(33);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment1.getSkyTexture();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setVideoQuality(11053224);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      assertEquals(11053224, homeEnvironment0.getVideoQuality());
      assertEquals(300, homeEnvironment2.getPhotoHeight());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setCeillingLightColor(2147);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.Camera$Lens", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      assertEquals(2147, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(5);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(5, homeEnvironment0.getPhotoHeight());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getPhotoHeight();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(300, int0);
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(3648);
      homeEnvironment0.setCeillingLightColor(3648);
      homeEnvironment0.setPhotoQuality(1290);
      homeEnvironment0.getSkyTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setGroundColor(1493);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      int int0 = homeEnvironment1.getGroundColor();
      assertEquals(3648, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("s_rbG1/iy", resourceURLContent0, (-3072), 1.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3072), homeTexture0, 980, homeTexture0, 2, 2101.2656F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getGroundTexture();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(2, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(2101.2656F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(980, homeEnvironment1.getSkyColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals((-3072), homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(3102.2F);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setWallsAlpha(400);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      String string0 = "R9E";
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("R9E", propertyChangeListener0);
      String string1 = "MfiFb'$zYVAx4eMS[\\_";
      float float0 = 1.5F;
      float float1 = 0.0F;
      Camera camera0 = new Camera(1.5F, 3102.2F, (-721.7758F), 400, 0.0F, 0.0F);
      camera0.clone();
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      boolean boolean0 = true;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "SUBPART_SIZE_UNDER_LIGHT", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource SUBPART_SIZE_UNDER_LIGHT
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(1636.8F);
      homeEnvironment0.setGroundColor((-1881));
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setVideoWidth((-2275));
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setGroundColor((-1881));
      assertEquals((-2275), homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment1.setGroundColor(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight(3471.0178F);
      homeEnvironment1.setLightColor(2);
      homeEnvironment1.getSkyColor();
      homeEnvironment1.getVideoHeight();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2202), (HomeTexture) null, 0, (-2202), 0);
      homeEnvironment0.getDrawingMode();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-2202), homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-2202), homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("}(B017EvVB_EjTich:", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setWallsAlpha(0);
      homeEnvironment0.setGroundColor(2603);
      homeEnvironment0.setPhotoQuality((-570));
      homeEnvironment0.setPhotoHeight((-570));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setPhotoHeight((-1163));
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.Property.values();
      homeEnvironment0.getLightColor();
      HomeEnvironment.Property.values();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("}(B017EvVB_EjTich:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.}(B017EvVB_EjTich:
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 1923;
      HomeTexture homeTexture0 = null;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1923, (HomeTexture) null, 1923, 1136, 1923);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      int int1 = (-1672);
      homeEnvironment0.setPhotoWidth((-1672));
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      boolean boolean0 = false;
      homeEnvironment0.setWallsAlpha((-1672));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setGroundColor(1136);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.isAllLevelsVisible();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      HomeEnvironment.Property.values();
      homeEnvironment0.setVideoWidth(1923);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      // Undeclared exception!
      try { 
        linkedList0.removeFirst();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 0;
      float float0 = (-2552.1824F);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(233, (HomeTexture) null, 0, (HomeTexture) null, 233, (-2552.1824F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment1.setSkyTexture((HomeTexture) null);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment1.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(1504);
      homeEnvironment0.setVideoWidth(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setPhotoWidth(0);
      assertEquals(0, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("\"gIeuBfO{", resourceURLContent0, 0.0F, 0.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-45), homeTexture0, (-45), (-2281), 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(5);
      homeEnvironment0.setSkyTexture(homeTexture0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera((-2281), 0.0F, 5, (-2281), (-45), (-841.9735F), (-1L), camera_Lens0);
      Camera camera1 = camera0.clone();
      linkedList0.add(camera1);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setVideoWidth(5);
      assertEquals(4, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1163), (HomeTexture) null, (-1163), (HomeTexture) null, 0, (-1163));
      homeEnvironment0.setWallsAlpha(3774.643F);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setSkyColor((-1));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.clone();
      homeEnvironment0.setPhotoHeight(1119);
      homeEnvironment0.setCeillingLightColor(3964);
      homeEnvironment0.setVideoFrameRate((-1163));
      homeEnvironment0.setPhotoWidth((-1163));
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setVideoFrameRate((-1163));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight(181);
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.Property.values();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setVideoWidth((-113));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setVideoFrameRate(856);
      homeEnvironment0.setVideoWidth(3964);
      homeEnvironment0.setPhotoHeight((-1163));
      homeEnvironment0.setVideoFrameRate(0);
      assertEquals((-1163), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("\"gIeuBfO{", resourceURLContent0, (-1.0F), 1681.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(1513, homeTexture1, (-2281), 16, 1513);
      homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(16);
      assertEquals(16, homeEnvironment1.getSkyColor());
      
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(1848, homeTexture0, 2199, (-3347), (-1287.3F));
      homeEnvironment2.setSubpartSizeUnderLight(0.0F);
      assertEquals(2199, homeEnvironment2.getSkyColor());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("_;`[k#}J`VW", temporaryURLContent0, 0.0F, 0.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(300, homeTexture0, 1102, 2941, 0.0F);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      catalogTexture0.setCategory(texturesCategory0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate(1102);
      homeEnvironment1.setLightColor(685);
      homeEnvironment1.getGroundColor();
      homeEnvironment0.setPhotoHeight(2941);
      catalogTexture0.setCategory(texturesCategory0);
      homeEnvironment0.getLightColor();
      homeEnvironment1.getSkyTexture();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getVideoHeight();
      homeEnvironment1.setSkyColor(0);
      homeEnvironment1.setPhotoHeight(1102);
      homeEnvironment0.setVideoWidth(2941);
      homeEnvironment1.setPhotoQuality(0);
      assertEquals(0, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(1504);
      homeEnvironment0.setVideoWidth(0);
      HomeEnvironment.Property.values();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getVideoHeight();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoHeight();
      String string0 = "";
      homeEnvironment0.setCeillingLightColor(1504);
      int int0 = 1005;
      try { 
        MockURL.URL("`z8,leR)/_3", "{GaVh&&n>r", 1504, "{GaVh&&n>r");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: `z8,ler)/_3
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      Camera camera0 = new Camera(2753.51F, 2753.51F, 2753.51F, 2753.51F, (-466.916F), 0.0F);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", camera0, object1);
      propertyChangeEvent0.setPropagationId("");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object2, "rOJ", "rOJ", object2);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setLightColor(8);
      homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment.Property.values();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setCeillingLightColor(8);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getLightColor();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(8, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(1504);
      homeEnvironment0.setVideoWidth(0);
      HomeEnvironment.Property.values();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getVideoHeight();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(0, 1504, 0.0F, 64.0F, 0, (-1.0F), 0L, camera_Lens0);
      Camera camera1 = camera0.clone();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera1);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setVideoWidth(0);
      assertEquals(1504, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(1504);
      homeEnvironment0.setVideoWidth(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("PHOTO_HEIGHT", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0, 0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setSubpartSizeUnderLight((-1672.0F));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(1504, homeTexture0, 0, homeTexture0, 1504, (-2623.001F));
      homeEnvironment1.setLightColor(1504);
      homeEnvironment0.setCeillingLightColor(2547);
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      Camera camera0 = new Camera(2753.51F, 2753.51F, 2753.51F, 2753.51F, (-466.916F), 0.0F);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", camera0, object1);
      propertyChangeEvent0.setPropagationId("");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, (-466.916F), 33.21F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-2281), homeTexture0, (-2281), (-2281), 0.0F);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      assertNotSame(homeEnvironment0, homeEnvironment2);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      
      homeEnvironment1.setSkyColor((-2281));
      homeEnvironment1.setSkyTexture(homeTexture0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals((-2281), homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.599301927099795
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.removeAll(linkedList1);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object2, "rOJ", "rOJ", object2);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setPhotoHeight(0);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      HomeEnvironment.Property.values();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setCeillingLightColor((-12));
      homeEnvironment0.setVideoWidth(732);
      homeEnvironment0.setPhotoWidth(739);
      System.setCurrentTimeMillis(0);
      homeEnvironment0.setPhotoWidth(739);
      System.setCurrentTimeMillis(240);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera camera0 = new Camera(2753.51F, 2753.51F, 2753.51F, 2753.51F, (-466.916F), 0.0F);
      Object object0 = new Object();
      homeEnvironment0.setPhotoHeight(13);
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoWidth((-1021));
      System.setCurrentTimeMillis(1443L);
      homeEnvironment0.setPhotoHeight(13);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.458311329683084
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      Camera camera0 = new Camera(2753.51F, 2753.51F, 2753.51F, 2753.51F, (-466.916F), 0.0F);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", camera0, object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object2, "rOJ", "rOJ", object2);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setLightColor(8);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals(8, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.3693821196946767
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2202), (HomeTexture) null, 0, (-2202), 0);
      homeEnvironment0.getVideoHeight();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("l[", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setCeillingLightColor((-2202));
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("l[", propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "", object0, propertyChangeListenerProxy1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("==YIXm:KVH.O*?>}", propertyChangeListenerProxy0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy2);
      homeEnvironment0.setVideoWidth((-2202));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      System.setCurrentTimeMillis(0L);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      System.setCurrentTimeMillis((-2202));
  }
}
