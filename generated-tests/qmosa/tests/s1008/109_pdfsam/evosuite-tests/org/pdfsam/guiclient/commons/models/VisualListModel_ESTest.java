/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 10:32:19 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dialog;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Consumer;
import javax.media.jai.OperationRegistry;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      stack0.addAll((Collection<? extends VisualPageListItem>) hashSet0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndex(91);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.moveUpIndex((-2281));
      Stack<Dialog.ModalityType> stack1 = new Stack<Dialog.ModalityType>();
      JComboBox<Dialog.ModalityType> jComboBox0 = new JComboBox<Dialog.ModalityType>(stack1);
      stack1.remove((Object) "pb");
      jComboBox0.getSelectedItem();
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.moveUpIndex((-2281));
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.elementsChanged();
      visualListModel0.getElementAt(0);
      int[] intArray0 = new int[7];
      intArray0[0] = (-2281);
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = (-2281);
      intArray0[5] = (-2281);
      intArray0[6] = 0;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.appendAllElements(stack0);
      visualListModel0.appendAllElements(stack0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(180, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      int int0 = (-1713);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-1713), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1713
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = (-1);
      intArray0[2] = 0;
      intArray0[3] = 0;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.getElements();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 2355;
      intArray0[2] = 3417;
      visualListModel0.getValidElements();
      intArray0[3] = (-2289);
      intArray0[4] = 0;
      intArray0[5] = 90;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "a7>*~%9/$H$S?0";
      stringArray0[1] = "it.pdfsam.utils.JarFilter";
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(stringArray0);
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      visualListModel0.removeListDataListener(jComboBox0);
      intArray0[6] = 1909;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[4];
      intArray1[0] = (-1);
      visualListModel0.undeleteElements(intArray1);
      intArray1[1] = (-3840);
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        visualListModel0.getListeners((Class) class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.Integer; cannot be cast to [Ljava.util.EventListener;
         //
         verifyException("javax.swing.event.EventListenerList", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-6146));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-6146)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      visualListModel0.removeElements(0, (-1), true);
      int[] intArray1 = new int[7];
      intArray1[0] = (-1);
      intArray1[1] = 0;
      intArray1[2] = (-1);
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = (-1);
      intArray1[6] = (-1);
      visualListModel0.moveUpIndexes(intArray1);
      assertEquals(7, intArray1.length);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-2415);
      int int0 = 0;
      intArray0[1] = 0;
      intArray0[2] = (-3194);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndex((-1485));
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-2415), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(2305, 46, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      visualListModel0.appendAllElements(vector0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1067, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1067
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 255;
      visualListModel0.addAllElements(255, (Collection<VisualPageListItem>) null);
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      int[] intArray0 = new int[1];
      boolean boolean0 = true;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      visualListModel0.removeElements((-2861), (-2861), true);
      visualListModel1.reverseElements(intArray0);
      int int0 = (-2281);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-2498), (-944), (-2281));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -2281
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      visualListModel0.removeElements(0, (-1), true);
      int[] intArray1 = new int[7];
      intArray1[0] = (-1);
      intArray1[1] = 0;
      intArray1[2] = (-1);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.appendAllElements(vector0);
      visualListModel1.appendAllElements(vector0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(2305, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.updateElementAt((-3316), (VisualPageListItem) null);
      visualListModel0.removeElements((-3316), (-3316), false);
      visualListModel0.subList((-1), (-1), false);
      int[] intArray0 = new int[9];
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
      
      intArray0[0] = (-1);
      intArray0[1] = (-3316);
      intArray0[2] = (-3316);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.subList((-3316), (-1), false);
      intArray0[5] = (-3316);
      visualListModel0.removeElements((-3316), 91, false);
      intArray0[6] = (-1);
      intArray0[7] = (-1);
      intArray0[8] = (-1);
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertNotNull(visualPageListItemArray0);
      
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndex((-1));
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      hashSet0.add((VisualPageListItem) null);
      hashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) hashSet0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0549201679861442
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(102);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(102, 1488, false);
      assertNull(collection0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8891591637540215
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.moveUpIndex(703);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndex((-2415));
      OperationRegistry operationRegistry0 = new OperationRegistry();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel1.reverseElements(intArray0);
      visualListModel1.getValidElements();
      visualListModel1.appendAllElements((Collection<VisualPageListItem>) null);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.appendAllElements((Collection<VisualPageListItem>) null);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, "S<Fl:P");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      JComboBox<Dialog.ModalityType> jComboBox0 = new JComboBox<Dialog.ModalityType>(stack0);
      stack0.remove((Object) "pb");
      jComboBox0.getSelectedItem();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getValidElements();
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-3573), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3573
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      JComboBox<Dialog.ModalityType> jComboBox0 = new JComboBox<Dialog.ModalityType>();
      stack0.remove((Object) "");
      jComboBox0.getSelectedItem();
      visualListModel0.addListDataListener(jComboBox0);
      int int0 = (-617);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.moveUpIndex((-617));
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack1);
      visualListModel0.elementsChanged();
      int int1 = 0;
      int int2 = (-6146);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-6146));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -6146
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8937882323911377
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-3194);
      int[] intArray0 = new int[8];
      intArray0[0] = (-3194);
      intArray0[1] = (-3194);
      intArray0[2] = (-3194);
      intArray0[3] = (-2634);
      intArray0[4] = (-1);
      intArray0[5] = (-3194);
      intArray0[6] = 1420;
      intArray0[7] = (-1);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndex((-2634));
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray1);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-3726), "X5$T88;yk+C-");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[0] = (-533);
      intArray0[1] = (-3316);
      intArray0[2] = (-4107);
      intArray0[3] = (-582);
      intArray0[4] = 606;
      intArray0[5] = (-1183);
      intArray0[6] = 1;
      intArray0[7] = (-2959);
      intArray0[8] = (-2232);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.subList((-1), (-1), false);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndex((-1));
      visualListModel1.moveDownIndex((-621));
      visualListModel0.addElementAt((VisualPageListItem) null, 40);
      assertNotSame(visualListModel0, visualListModel1);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndex(91);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.removeElements(0, (-1), true);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getSize();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.clearData();
      visualListModel0.removeElements(intArray0, true);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel1.moveDownIndex(10000);
      visualListModel0.removeElements(intArray0, true);
      visualListModel1.undeleteElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveUpIndexes(intArray0);
      visualListModel1.getListDataListeners();
      visualListModel0.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<VisualPageListItem> vector0 = visualListModel2.data;
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      stack0.addAll((Collection<? extends VisualPageListItem>) priorityQueue0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.moveDownIndex(700);
      assertNotSame(visualListModel3, visualListModel1);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9649629230074277
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      visualListModel0.addAllElements(0, collection0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "0|JYE";
      stringArray0[4] = "";
      stringArray0[5] = "}T";
      stringArray0[6] = "org.pdfsam.guiclient.commons.models.VisualListModel";
      stringArray0[7] = "oEYgyJ";
      stringArray0[8] = "";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      jComboBox0.getToolTipText();
      visualListModel0.removeListDataListener(jComboBox0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      visualListModel0.moveUpIndex(3552);
      assertNotSame(visualListModel0, visualListModel1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(1024);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>(1024);
      visualListModel0.addAllElements(1024, (Collection<VisualPageListItem>) hashSet0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 92);
      visualListModel0.addElement((VisualPageListItem) null);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      Dialog.ModalityType dialog_ModalityType0 = Dialog.ModalityType.DOCUMENT_MODAL;
      stack0.add(dialog_ModalityType0);
      JComboBox<Dialog.ModalityType> jComboBox0 = new JComboBox<Dialog.ModalityType>(stack0);
      visualListModel0.addListDataListener(jComboBox0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.appendAllElements(arrayList0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      Dialog.ModalityType dialog_ModalityType0 = Dialog.ModalityType.DOCUMENT_MODAL;
      stack0.add(dialog_ModalityType0);
      JComboBox<Dialog.ModalityType> jComboBox0 = new JComboBox<Dialog.ModalityType>(stack0);
      visualListModel0.addListDataListener(jComboBox0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.appendAllElements(arrayList0);
      visualListModel0.clearData();
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4941751382893083
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(arrayList0);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(arrayList0);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getElements();
      visualListModel0.removeElements(intArray0, true);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(arrayList0);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndex(7);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(arrayList0);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getElements();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6434177197931796
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(arrayList0);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements(4002, 4002, true);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.clone();
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.prependAllElements(arrayList0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      visualListModel0.moveDownIndex(1);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(arrayList0);
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.666332585328325
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(arrayList0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = 473;
      intArray0[1] = (-3508);
      intArray0[2] = 0;
      intArray0[3] = 1360;
      intArray0[4] = (-3747);
      intArray0[4] = 498;
      intArray0[6] = 2660;
      visualListModel0.moveUpIndex(0);
      intArray0[7] = (-57);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveDownIndexes(intArray0);
      visualListModel2.getSize();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) arrayList0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(arrayList0);
      int[] intArray0 = new int[1];
      intArray0[0] = 4002;
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 4001
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      arrayList0.removeAll(stack0);
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(arrayList0);
      visualListModel0.moveUpIndex(1);
      visualListModel0.addElementAt((VisualPageListItem) null, 485);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, (-3037));
      assertEquals(2, visualListModel0.getSize());
  }
}
