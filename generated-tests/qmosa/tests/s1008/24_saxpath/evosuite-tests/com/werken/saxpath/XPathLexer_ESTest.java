/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:04:36 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.doubleColon();
      xPathLexer0.at();
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.leftParen();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.getXPath();
      xPathLexer0.literal();
      xPathLexer0.at();
      xPathLexer0.pipe();
      xPathLexer0.dollar();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.pipe();
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.werken.saxpath.Token", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.werken.saxpath.Token", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.mod();
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.plus();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.colon();
      xPathLexer0.identifier();
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.identifier();
      xPathLexer0.leftParen();
      xPathLexer0.leftParen();
      xPathLexer0.rightBracket();
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.whitespace();
      xPathLexer0.slashes();
      xPathLexer0.div();
      xPathLexer0.consume();
      assertNull(xPathLexer0.getXPath());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.dollar();
      xPathLexer0.number();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.LA(0);
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.5553480614894135
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.isIdentifierChar('L');
      xPathLexer0.plus();
      xPathLexer0.div();
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume(0);
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.not();
      xPathLexer0.at();
      xPathLexer0.whitespace();
      xPathLexer0.notEquals();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.pipe();
      xPathLexer0.literal();
      Token token1 = xPathLexer0.nextToken();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(".", token2.getTokenText());
      assertEquals(31, token2.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.931923293010705
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Sw@)");
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftBracket();
      xPathLexer0.consume(0);
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer0.rightParen();
      xPathLexer0.isIdentifierChar('s');
      xPathLexer0.not();
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      xPathLexer0.setXPath("Sw@)");
      assertEquals("Sw@)", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'K yUnn/8V4;}F");
      xPathLexer0.not();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("K", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      xPathLexer0.plus();
      xPathLexer0.or();
      Token token2 = xPathLexer0.star();
      assertEquals("U", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals("n", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      Token token5 = xPathLexer0.plus();
      assertEquals("8", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.getXPath();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.setXPath(") (");
      xPathLexer0.rightBracket();
      xPathLexer0.getPreviousToken();
      Token token7 = xPathLexer0.comma();
      assertEquals(" ", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifier();
      assertEquals("", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.number();
      assertEquals("", token9.getTokenText());
      assertEquals(30, token9.getTokenType());
      
      xPathLexer0.setXPath("'K yUnn/8V4;}F");
      Token token10 = xPathLexer0.rightBracket();
      assertEquals(4, token10.getTokenType());
      assertEquals("'", token10.getTokenText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.8910941120475802
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("puGw{");
      xPathLexer0.star();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.star();
      assertEquals("c", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.Token", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(25, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5346985812680056
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(2, int0);
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      char char0 = xPathLexer0.LA(895);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.isIdentifierChar('\uFFFF');
      xPathLexer0.mod();
      xPathLexer0.setXPath("ZB78oZsy]");
      Token token4 = xPathLexer0.equals();
      assertEquals("Z", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("B78oZsy", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.div();
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.minus();
      assertEquals("]", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1905757872245333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer0.literal();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.hasMoreChars();
      xPathLexer0.leftParen();
      xPathLexer0.operatorName();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume(0);
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.1798199884524982
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.comma();
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.literal();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.getXPath();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(28, int0);
      
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.comma();
      xPathLexer0.comma();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.leftParen();
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      xPathLexer0.leftParen();
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      Token token8 = xPathLexer0.whitespace();
      assertEquals("", token8.getTokenText());
      assertEquals((-2), token8.getTokenType());
      
      xPathLexer0.getXPath();
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.230530777600045
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.comma();
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.getXPath();
      xPathLexer0.equals();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      xPathLexer0.currentPosition();
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.comma();
      xPathLexer0.comma();
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      xPathLexer0.dots();
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.getXPath();
      xPathLexer0.leftBracket();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.isIdentifierStartChar('O');
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8337933077350441
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2Af#.CdO~");
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("&r.b_L22SO )!W'g");
      Token token0 = xPathLexer0.star();
      assertEquals("&", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("r.b_L22SO", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(" ", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(11, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3572896251942383
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.literal();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.getXPath();
      xPathLexer0.equals();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      xPathLexer0.currentPosition();
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.comma();
      xPathLexer0.comma();
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      xPathLexer1.leftParen();
      xPathLexer1.dots();
      xPathLexer0.and();
      xPathLexer1.whitespace();
      xPathLexer0.or();
      xPathLexer0.whitespace();
      xPathLexer0.getXPath();
      xPathLexer0.leftBracket();
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.werken.saxpath.XPathLexer", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.2052773596328683
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken((Token) null);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      xPathLexer0.hasMoreChars();
      xPathLexer0.leftParen();
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      xPathLexer0.not();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token8.getTokenType());
      
      xPathLexer0.consume(0);
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token9 = xPathLexer0.at();
      assertEquals("c", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftParen();
      assertEquals("o", token10.getTokenText());
      
      xPathLexer0.operatorName();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('&');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8364903756485104
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V<c");
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.endPosition();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("V<c");
      Token token2 = xPathLexer1.equals();
      assertEquals("V", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("V<c");
      xPathLexer2.consume();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('t');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.630253356389263
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2Af#.CdO~");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.comma();
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals("A", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.operatorName();
      char char0 = xPathLexer0.LA(47);
      assertEquals('\uFFFF', char0);
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(14, token3.getTokenType());
      assertEquals("#.", token3.getTokenText());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("d", token5.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0428712405127802
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wDI9\f10t<4");
      xPathLexer0.comma();
      xPathLexer0.literal();
      xPathLexer0.or();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.getXPath();
      xPathLexer0.equals();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.currentPosition();
      xPathLexer0.or();
      xPathLexer1.dots();
      xPathLexer0.comma();
      xPathLexer1.comma();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.not();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer2.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer2.colon();
      xPathLexer2.leftParen();
      xPathLexer2.dots();
      XPathLexer xPathLexer3 = new XPathLexer("8gA");
      xPathLexer3.and();
      xPathLexer0.whitespace();
      xPathLexer2.or();
      XPathLexer xPathLexer4 = new XPathLexer("8gA");
      xPathLexer4.whitespace();
      xPathLexer3.getXPath();
      xPathLexer2.leftBracket();
      xPathLexer0.comma();
      xPathLexer3.number();
      boolean boolean0 = xPathLexer3.isIdentifierChar('(');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9657349510926906
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.endPosition();
      xPathLexer0.leftParen();
      xPathLexer0.operatorName();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume(16);
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("v}UE:] _c]Ye1|}>a");
      xPathLexer0.leftParen();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.6418992529616228
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.div();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      char char0 = xPathLexer0.LA(895);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('\uFFFF');
      assertFalse(boolean0);
      
      xPathLexer0.mod();
      xPathLexer0.setXPath("ZB78oZsy]");
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("Z", token5.getTokenText());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals("", token6.getTokenText());
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      assertEquals("78", token7.getTokenText());
      
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      assertEquals("o", token8.getTokenText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.287062321707283
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(9, int0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("l", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("*", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("v", token3.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('t');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V<c");
      xPathLexer0.getXPath();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertNotNull(token1);
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer1.leftParen();
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.leftParen();
      Token token4 = xPathLexer1.dots();
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer1.whitespace();
      xPathLexer1.or();
      Token token5 = xPathLexer1.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      xPathLexer1.getXPath();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("V<c");
      Token token8 = xPathLexer1.number();
      assertEquals(30, token8.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.642535465168865
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("puGw{");
      Token token0 = xPathLexer0.comma();
      assertEquals("p", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      XPathLexer xPathLexer1 = new XPathLexer("puGw{");
      xPathLexer1.leftParen();
      xPathLexer1.operatorName();
      Token token6 = xPathLexer1.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("puGw{");
      Token token8 = xPathLexer1.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("Gw", token8.getTokenText());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume(8);
      xPathLexer2.setXPath("com.werken.saxpath.XPathLexer");
      Token token9 = xPathLexer2.leftParen();
      assertEquals("c", token9.getTokenText());
      
      xPathLexer2.operatorName();
      Token token10 = xPathLexer1.number();
      assertEquals("", token10.getTokenText());
      assertEquals(30, token10.getTokenType());
  }
}
