/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:35:32 GMT 2018
 */

package org.quickserver.util.xmlreader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.quickserver.util.xmlreader.AdvancedSettings;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AdvancedSettings_ESTest extends AdvancedSettings_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setQSObjectPoolMaker("LC43q");
      advancedSettings0.setClientSocketReceiveBufferSize(3108);
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.setClientIdentifier("LC43q");
      advancedSettings0.setClientSocketTrafficClass("LC43q");
      advancedSettings0.getClientIdentifier();
      advancedSettings0.setSocketLinger(1);
      advancedSettings0.getMaxThreadsForNioWrite();
      advancedSettings0.setClientSocketTrafficClass("LC43q");
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.setPerformancePreferencesLatency(3108);
      advancedSettings0.setMaxThreadsForNioWrite(10);
      advancedSettings0.setSocketLinger(1);
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.setQSObjectPoolMaker("zK]Oz#P$9jG8k");
      assertEquals("LC43q", advancedSettings0.getClientIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setCharset((String) null);
      advancedSettings0.toXML("");
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.getSocketLinger();
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.getClientIdentifier();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.toXML("");
      advancedSettings0.setQSObjectPoolMaker("IeuBfO{y#[6_aE]");
      assertTrue(advancedSettings0.getDebugNonBlockingMode());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketTrafficClass("");
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.setQSObjectPoolMaker("");
      advancedSettings0.setClientSocketSendBufferSize((-1));
      advancedSettings0.getSocketLinger();
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setBacklog(19);
      advancedSettings0.setClientSocketTrafficClass("g`ojn#JvC");
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.setClientSocketReceiveBufferSize((-1));
      advancedSettings0.setQSObjectPoolMaker("");
      advancedSettings0.getBacklog();
      advancedSettings0.getClientIdentifier();
      advancedSettings0.setBacklog(0);
      advancedSettings0.setClientIdentifier("c3<WSG<");
      advancedSettings0.getClientIdentifier();
      advancedSettings0.setClientSocketSendBufferSize((-1));
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.setSocketLinger((-1));
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.setClientSocketReceiveBufferSize(372);
      advancedSettings0.setBacklog(317);
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.getMaxThreadsForNioWrite();
      int int0 = advancedSettings0.getMaxThreadsForNioWrite();
      assertEquals(372, advancedSettings0.getClientSocketReceiveBufferSize());
      assertEquals(10, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.540036303820981
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.setQSObjectPoolMaker(";e@FSway");
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.getByteBufferSize();
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.setByteBufferSize((-3174));
      advancedSettings0.setBacklog(0);
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.getBacklog();
      advancedSettings0.getPerformancePreferencesLatency();
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset(";e@FSway");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // ;e@FSway
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.401197381662154
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.setPerformancePreferencesConnectionTime(0);
      advancedSettings0.setBacklog(0);
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.setDebugNonBlockingMode(false);
      advancedSettings0.toXML("");
      advancedSettings0.setPerformancePreferencesLatency(0);
      advancedSettings0.setClientSocketTrafficClass("");
      advancedSettings0.setPerformancePreferencesBandwidth(10);
      advancedSettings0.setClientSocketReceiveBufferSize(10);
      advancedSettings0.getBacklog();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.getClientIdentifier();
      advancedSettings0.toXML("");
      advancedSettings0.toXML("");
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.setByteBufferSize(0);
      int int0 = advancedSettings0.getMaxThreadsForNioWrite();
      assertEquals(10, advancedSettings0.getPerformancePreferencesBandwidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.toXML("VI/i");
      advancedSettings0.setByteBufferSize(1639);
      advancedSettings0.setPerformancePreferencesLatency(0);
      advancedSettings0.setMaxThreadsForNioWrite((-464));
      advancedSettings0.setPerformancePreferencesBandwidth(0);
      advancedSettings0.getMaxThreadsForNioWrite();
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.getUseDirectByteBuffer();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.getMaxThreadsForNioWrite();
      advancedSettings0.toXML("");
      advancedSettings0.setPerformancePreferencesConnectionTime((-464));
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.setBacklog((-464));
      advancedSettings0.setPerformancePreferencesBandwidth((-464));
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.setPerformancePreferencesLatency((-283));
      assertEquals((-464), advancedSettings0.getPerformancePreferencesConnectionTime());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2826939972780647
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketReceiveBufferSize((-434));
      advancedSettings0.setDebugNonBlockingMode(false);
      advancedSettings0.toXML((String) null);
      advancedSettings0.setPerformancePreferencesBandwidth(402);
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.setClientSocketTrafficClass("");
      advancedSettings0.getSocketLinger();
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.setPerformancePreferencesLatency((-1));
      advancedSettings0.setBacklog(0);
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.getBacklog();
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.setCharset("");
      assertEquals((-434), advancedSettings0.getClientSocketReceiveBufferSize());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.0904599236161974
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketSendBufferSize((-785));
      advancedSettings0.getCharset();
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.setDebugNonBlockingMode(false);
      advancedSettings0.getSocketLinger();
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.setClientSocketReceiveBufferSize((-1));
      advancedSettings0.setSocketLinger((-785));
      AdvancedSettings advancedSettings1 = new AdvancedSettings();
      advancedSettings1.setPerformancePreferencesLatency((-300));
      advancedSettings1.getClientSocketTcpNoDelay();
      advancedSettings0.getByteBufferSize();
      advancedSettings0.toXML("ISO-8859-1");
      advancedSettings1.setUseDirectByteBuffer(true);
      advancedSettings0.getClientIdentifier();
      assertTrue(advancedSettings0.getDebugNonBlockingMode());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.setClientIdentifier((String) null);
      advancedSettings0.setClientIdentifier("CFOw d0Zd(^A");
      assertEquals("CFOw d0Zd(^A", advancedSettings0.getClientIdentifier());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setByteBufferSize((-85));
      advancedSettings0.getClientIdentifier();
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("org.quickserver.net.server.impl.OptimisticClientIdentifier");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // org.quickserver.net.server.impl.OptimisticClientIdentifier
         //
         verifyException("org.quickserver.util.xmlreader.AdvancedSettings", e);
      }
  }
}
