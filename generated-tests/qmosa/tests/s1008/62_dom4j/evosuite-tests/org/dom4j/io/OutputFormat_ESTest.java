/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:52:24 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("  ");
      outputFormat0.setLineSeparator("");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setXHTML(true);
      outputFormat0.setXHTML(true);
      outputFormat0.isNewlines();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setIndentSize(0);
      outputFormat2.isNewLineAfterDeclaration();
      outputFormat2.setXHTML(false);
      outputFormat1.setTrimText(true);
      outputFormat2.setExpandEmptyElements(false);
      outputFormat2.isOmitEncoding();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat3.setIndent("  ");
      // Undeclared exception!
      try { 
        outputFormat3.setAttributeQuoteCharacter('h');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (h)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isXHTML();
      outputFormat0.setEncoding("UTF-8");
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("UTF-8");
      outputFormat2.getIndent();
      outputFormat0.isXHTML();
      outputFormat2.isNewlines();
      // Undeclared exception!
      try { 
        outputFormat2.setAttributeQuoteCharacter('r');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (r)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "pl\"4^m1KLI\\n";
      OutputFormat outputFormat0 = new OutputFormat("pl\"4^m1KLI\n", false, "pl\"4^m1KLI\n");
      outputFormat0.isTrimText();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setXHTML(false);
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat1.setExpandEmptyElements(false);
      outputFormat1.setExpandEmptyElements(true);
      outputFormat1.isXHTML();
      outputFormat1.setIndentSize(0);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(')');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ())
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(")");
      String[] stringArray0 = new String[9];
      stringArray0[0] = ")";
      stringArray0[1] = ">vw|pscF\"T:N*_2";
      stringArray0[2] = ")";
      stringArray0[3] = ")";
      stringArray0[4] = ")";
      stringArray0[5] = ")";
      stringArray0[6] = ")";
      stringArray0[7] = "-indent";
      stringArray0[8] = ")";
      outputFormat0.parseOptions(stringArray0, 5631);
      boolean boolean0 = false;
      boolean boolean1 = true;
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setXHTML(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, (-1836));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("4#rGD0l3D");
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewLineAfterNTags(1);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewlines(false);
      outputFormat1.setOmitEncoding(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterNTags(549);
      outputFormat0.getIndent();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setTrimText(false);
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('A');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (A)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterNTags((-226));
      boolean boolean0 = outputFormat0.isPadText();
      assertEquals((-226), outputFormat0.getNewLineAfterNTags());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("[ JLqFk[xI/e^gB", true, "");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setTrimText(true);
      outputFormat0.setLineSeparator("K9yeEkUdz@>-=");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("c]>");
      outputFormat0.setNewlines(true);
      outputFormat0.setIndentSize(1104);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getLineSeparator();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat1.setEncoding((String) null);
      outputFormat1.getNewLineAfterNTags();
      outputFormat1.isXHTML();
      outputFormat0.setPadText(true);
      assertEquals("c]>", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      outputFormat0.setLineSeparator("");
      outputFormat0.setEncoding("");
      outputFormat0.setXHTML(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setNewlines(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setNewLineAfterNTags(3306);
      outputFormat0.setPadText(true);
      outputFormat0.setEncoding("-padText");
      outputFormat0.isXHTML();
      outputFormat0.setNewlines(false);
      outputFormat0.isNewlines();
      outputFormat0.setXHTML(false);
      outputFormat0.setEncoding("");
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertEquals("", outputFormat0.getEncoding());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.8133554045006157
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Q:`rN");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setOmitEncoding(true);
      outputFormat1.setAttributeQuoteCharacter('\'');
      outputFormat0.setXHTML(true);
      outputFormat1.setNewLineAfterNTags(5169);
      outputFormat0.setIndent(false);
      outputFormat1.setIndent(true);
      outputFormat0.setTrimText(false);
      outputFormat1.setOmitEncoding(false);
      outputFormat1.setEncoding("Q:`rN");
      outputFormat0.isSuppressDeclaration();
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat0.getLineSeparator();
      outputFormat1.setTrimText(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat1.setIndent(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.isSuppressDeclaration();
      outputFormat0.setIndentSize(5169);
      outputFormat0.setIndentSize(0);
      outputFormat1.isPadText();
      outputFormat1.setOmitEncoding(true);
      outputFormat1.setSuppressDeclaration(true);
      assertTrue(outputFormat1.isOmitEncoding());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indent", true);
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("-indent", outputFormat0.getIndent());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals('\"', char0);
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2102535776209735
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("~", false, "~");
      boolean boolean0 = true;
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewLineAfterNTags(1484);
      outputFormat0.setIndent("");
      outputFormat0.setIndentSize(0);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setIndent("~");
      outputFormat0.isTrimText();
      outputFormat0.isNewlines();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('/');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (/)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.512658529529802
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("]k9DEr(yK.W");
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.isNewlines();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setIndentSize(1664);
      outputFormat0.isXHTML();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setIndent("[_6A5mWX`iM_YfaKBg");
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setOmitEncoding(false);
      assertEquals("[_6A5mWX`iM_YfaKBg", outputFormat0.getIndent());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setXHTML(true);
      outputFormat0.setLineSeparator("@y* vF$#J");
      outputFormat0.isSuppressDeclaration();
      String[] stringArray0 = new String[0];
      outputFormat0.setIndentSize(1);
      outputFormat0.getEncoding();
      OutputFormat.createPrettyPrint();
      outputFormat0.parseOptions(stringArray0, 253);
      OutputFormat outputFormat1 = new OutputFormat("@y* vF$#J");
      outputFormat1.setOmitEncoding(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewlines(true);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat2.setLineSeparator("");
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat3.setEncoding("@y* vF$#J");
      outputFormat3.setIndent((String) null);
      outputFormat0.setIndent("");
      assertEquals("@y* vF$#J", outputFormat0.getLineSeparator());
      
      int int0 = outputFormat1.parseOptions(stringArray0, 729);
      assertEquals(729, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.395908119293929
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "-suppressDeclaration";
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration");
      String[] stringArray0 = new String[3];
      outputFormat0.setNewLineAfterNTags((-68));
      String string1 = "oPOUn*1E\"Tu&,U0r^";
      outputFormat0.setIndent("oPOUn*1E\"Tu&,U0r^");
      stringArray0[0] = "-suppressDeclaration";
      outputFormat0.setIndentSize((-1879178688));
      outputFormat0.setIndent(false);
      stringArray0[1] = "-suppressDeclaration";
      stringArray0[2] = "-suppressDeclaration";
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.setLineSeparator("-suppressDeclaration");
      OutputFormat.createCompactFormat();
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.parseOptions(stringArray0, 39);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1879178688));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1879178688
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.408875844062539
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertFalse(boolean0);
      
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.getEncoding();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = new OutputFormat("p+>tUgn(v]Sb_>S", true, "UTF-8");
      outputFormat2.setNewLineAfterDeclaration(true);
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      outputFormat2.setOmitEncoding(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-expandEmptyUTF-8";
      stringArray0[1] = "-k<7.KCd21 d:Y0M?";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = "-expandEmptyUTF-8";
      stringArray0[4] = "p+>tUgn(v]Sb_>S";
      stringArray0[5] = "p+>tUgn(v]Sb_>S";
      stringArray0[6] = "p+>tUgn(v]Sb_>S";
      stringArray0[7] = "-k<7.KCd21 d:Y0M?";
      int int0 = outputFormat1.parseOptions(stringArray0, 0);
      assertTrue(outputFormat1.isExpandEmptyElements());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8306855287903427
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("p+>tUg", false, "p+>tUgn(v]Sb_>S");
      String[] stringArray0 = new String[5];
      outputFormat0.setOmitEncoding(false);
      stringArray0[0] = "p+>tUg";
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      stringArray0[1] = "p+>tUg";
      stringArray0[2] = "p+>tUgn(v]Sb_>S";
      stringArray0[3] = "p+>tUgn(v]Sb_>S";
      stringArray0[4] = "p+>tUgn(v]Sb_>S";
      outputFormat0.setNewlines(true);
      outputFormat1.setEncoding("FI$6.%`uF-D{%di");
      outputFormat0.parseOptions(stringArray0, 2554);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "z,`pL-ib$9OnU#Y";
      stringArray1[1] = "-encoding";
      stringArray1[2] = "p+>tUgn(v]Sb_>S";
      outputFormat0.parseOptions(stringArray1, 2554);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.parseOptions(stringArray0, 0);
      outputFormat2.parseOptions(stringArray0, 0);
      outputFormat1.parseOptions(stringArray1, 9);
      int int0 = outputFormat1.parseOptions(stringArray1, 1);
      assertEquals("p+>tUgn(v]Sb_>S", outputFormat1.getEncoding());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6885673693022827
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlUTF-8");
      outputFormat0.setSuppressDeclaration(true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-xhtmlUTF-8";
      outputFormat0.parseOptions(stringArray0, 1493);
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isXHTML());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.669976803113512
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setXHTML(true);
      outputFormat0.isExpandEmptyElements();
      OutputFormat outputFormat1 = new OutputFormat("-newlines");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-newlines";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "p+>_tUg";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-indentSize\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5585617635055233
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("nE;[6f[`v<", true, "yuC-e\"x*)");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "p+>_tUg";
      stringArray0[1] = ",ZDb)]w:Zi1cA*ub~";
      stringArray0[2] = "/z?EzXRPD]";
      stringArray0[3] = "yuC-e\"x*)";
      stringArray0[4] = "{QCH3qs4W";
      stringArray0[5] = "p+>_tUg";
      stringArray0[6] = ",ZDb)]w:Zi1cA*ub~";
      stringArray0[7] = "nE;[6f[`v<";
      outputFormat1.parseOptions(stringArray0, 0);
      OutputFormat outputFormat2 = new OutputFormat("{QCH3qs4W");
      outputFormat2.parseOptions(stringArray0, 988);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "-trimText";
      stringArray1[1] = "nE;[6f[`v<";
      stringArray1[2] = "nE;[6f[`v<";
      outputFormat2.parseOptions(stringArray1, 0);
      assertTrue(outputFormat2.isTrimText());
      
      outputFormat1.setIndentSize(0);
      int int0 = outputFormat0.parseOptions(stringArray1, 0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7309439966762843
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[7];
      outputFormat0.setNewLineAfterNTags(39);
      stringArray0[0] = "-padText";
      OutputFormat.createPrettyPrint();
      stringArray0[1] = "38lW";
      stringArray0[2] = "|onp(B$D";
      outputFormat0.parseOptions(stringArray0, 0);
      stringArray0[3] = "alszPB/n";
      stringArray0[4] = "-indentSize";
      stringArray0[5] = "\n";
      stringArray0[6] = "-xhtml/z?EzXRPD]";
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 39);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.374976964197478
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("yuC-e\"x*)");
      String[] stringArray0 = new String[8];
      stringArray0[0] = ",ZDb)]w:Zi1cA*ub~";
      stringArray0[1] = "yuC-e\"x*)";
      stringArray0[2] = "nE;[6f[`v<";
      stringArray0[3] = "-indent";
      stringArray0[5] = "-indent";
      stringArray0[6] = "-indent";
      stringArray0[7] = ",ZDb)]w:Zi1cA*ub~";
      outputFormat0.parseOptions(stringArray0, 5);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.getNewLineAfterNTags();
      OutputFormat.createPrettyPrint();
      String[] stringArray1 = new String[6];
      stringArray1[0] = "p+>tUgn(v]Sb";
      OutputFormat outputFormat2 = new OutputFormat("", true);
      outputFormat2.parseOptions(stringArray1, 0);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      // Undeclared exception!
      try { 
        outputFormat3.parseOptions(stringArray1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9376664956966976
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "<5=tXl`6ec:5";
      stringArray0[1] = "DNR$)qUp76}+L";
      outputFormat0.setLineSeparator("");
      OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterDeclaration(true);
      stringArray0[2] = "-lineSeparator";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7480673485460891
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat0.isOmitEncoding());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-expandEmpty/z?EzXRPD]";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "4Y@I!O-U@2?y!Yq[Fq&";
      stringArray0[3] = "|D;kD!SM*3eo";
      stringArray0[4] = "-expandEmptyh";
      stringArray0[5] = "3f/Npt^FNq|?`_";
      stringArray0[6] = "-suppressDeclaration";
      stringArray0[7] = "lD!g!VB`CR5B";
      stringArray0[8] = "-newlines";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isOmitEncoding());
      assertEquals(2, int0);
  }
}
