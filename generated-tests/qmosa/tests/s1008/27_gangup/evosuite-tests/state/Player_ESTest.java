/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:50:38 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(5, "Player.unpack(): *** WARNING *** data is not of proper type!", 5);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-17);
      byteArray0[2] = (byte) (-33);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.available();
      player0.unpack(dataInputStream0);
      player0.setDead((long) 5);
      player0.gangStrength();
      Player player1 = new Player(3, ". EgpCqTQZ8[MfR74[E", 3);
      player0.setJoinOK(player1, false);
      assertEquals(5L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-257), "", 0);
      player0.setDead();
      Player player1 = new Player((-257), "", (short)4919);
      player1.gangStrength();
      player1.setZ((short)4919);
      player0.remove(player1);
      player0.setDead((long) 0);
      player0.getIP();
      player0.getIP();
      player0.setMoney((-1838.8121F));
      player0.getX();
      player0.gangStrength();
      player1.getPictureId();
      player1.setDead(3091L, false);
      int int0 = player1.getStrength();
      assertEquals(3091L, player1.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((-231));
      Player player1 = new Player((-3992), "n_C$F8\"D4", "", (-3992), (-3992));
      player1.remove(player0);
      player0.setJoinOK(player1, false);
      Party party0 = new Party((-231));
      party0.id = (int) (short)4919;
      party0.head = (Party) player1;
      player1.remove(party0);
      player1.boss = (Party) player0;
      player1.setDead(916L, false);
      player1.setY(0.0F);
      player1.getIP();
      assertEquals(916L, player1.getTimeOfDeath());
      
      player0.toString();
      player0.getMoney();
      player0.getX();
      player0.getIP();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)53;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)125;
      byteArray0[5] = (byte) (-111);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte)0;
      player0.unpack(byteArray0);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ";
      Player player0 = new Player(0, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 0, 1775);
      player0.setX(0);
      String string1 = null;
      Player player1 = new Player(0, (String) null, 694);
      player0.prev = (Party) player1;
      player0.setConnected(true);
      player0.reset(true);
      player0.setDead((long) 0, true);
      player0.getMoney();
      player0.getY();
      player0.pack();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("", (String) null);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-568), "'s6maX%-QNr4`*?kc", (-568));
      player0.setDead((long) (-568));
      player0.getZ();
      Player player1 = new Player((short)4919, "'s6maX%-QNr4`*?kc", "'s6maX%-QNr4`*?kc", (-174));
      player0.setJoinOK(player1, false);
      assertEquals((-568L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(10, "x\u0005tTVG|UMk^gu9G", "x\u0005tTVG|UMk^gu9G", 10);
      player0.boss = (Party) player1;
      Player player2 = new Player();
      player0.setJoinOK(player2, false);
      Player player3 = new Player(10, "/Sl.gGuogd4}B", "\"", 10);
      player0.boss = (Party) player3;
      player0.isConnected();
      player0.setMoney(0.0F);
      player0.isJoinOK(player3, true);
      player0.getZ();
      player0.setDead(0L, false);
      assertTrue(player0.isDead());
      
      int int0 = player3.getPictureId();
      assertFalse(player3.isDead());
      assertEquals(10, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setDead();
      player0.getSubparty();
      player0.toString();
      player0.getName();
      Player player1 = new Player((short)4919, "oYZ}.(oH|s96@;eAN{", "oYZ}.(oH|s96@;eAN{", 0, (-784));
      player0.add(player1);
      Party party0 = player1.prev;
      player1.boss = null;
      player0.setDead(2052L, false);
      player0.setMoney(0.1F);
      assertEquals(0.1F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(2, "omK[m4;UFZo", 2);
      player0.setDead();
      player0.getTimeOfDeath();
      player0.type();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-49);
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte)102;
      player0.unpack(byteArray0);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(0, "f0*0", 1778);
      Party party0 = new Party(0);
      player0.head = party0;
      player0.reset(true);
      player0.pack();
      Player player1 = new Player(1);
      player1.setDead(0L);
      player1.setY(1778);
      player1.prev = (Party) player0;
      player1.next = null;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      player1.unpack(dataInputStream0);
      player1.setMoney(0);
      player1.reset(false);
      player0.isJoinOK(player1, true);
      player0.gangStrength();
      player1.pack();
      player0.setMoney((short)4919);
      player1.getX();
      player0.getName();
      player0.setY(0.0F);
      party0.getSubparty();
      player0.getIP();
      player0.getIP();
      player1.getY();
      player1.setConnected(true);
      player1.pack();
      assertEquals(1778.0F, player1.getY(), 0.01F);
      
      player0.setX(0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(5, "Player.unpack(): *** WARNING *** data is not of proper type!", 5);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-17);
      byteArray0[2] = (byte) (-33);
      player0.setDead((long) 5);
      player0.gangStrength();
      player0.isDead();
      Player player1 = new Player((byte) (-17), ". EgpCqTQZ8[MfR74[E", "Player.unpack(): *** WARNING *** data is not of proper type!", (byte) (-33), (byte)0);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(5L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      player0.isDead();
      player0.setDead();
      Player player1 = new Player((short)4919, "gWs(Z8P8r>.s", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (short)4919, 3702);
      player1.setMoney(0.0F);
      player0.setJoinOK(player1, false);
      Player player2 = new Player((-1686), " ", " ", 3702);
      player2.setY(4919);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5665989181145106
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      player0.isDead();
      player0.setDead();
      Player player1 = new Player(4919, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "gWs(Z8P8r>.s", (short)4919, (short)4919);
      player1.setMoney(0.0F);
      player0.setJoinOK(player1, false);
      player1.setY(0.0F);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.0752205480543715
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      player0.isDead();
      player0.setDead();
      Player player1 = new Player((short)4919, "gWs(Z8P8r>.s", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (short)4919, 3702);
      player0.isJoinOK(player1, true);
      player0.gangStrength();
      byte[] byteArray0 = player0.pack();
      player1.setMoney(0.1F);
      player1.getX();
      player1.getName();
      player1.setY(1.0F);
      player0.getSubparty();
      player1.getIP();
      player1.getIP();
      player0.getY();
      player1.setConnected(true);
      player1.pack();
      player0.setX((short)4919);
      player1.isJoinOK(player0, true);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }
}
