/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 10:53:15 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(4919, "@l#</Oq|e1PT.T", "s):DzD$", 0, 0);
      Player player1 = new Player();
      player0.head = (Party) player1;
      player0.setDead((long) 0, true);
      player0.add(player1);
      player0.setZ(4919);
      player0.toString();
      player1.getIP();
      player1.add(player0.head);
      player0.setMoney(0.2F);
      assertEquals(4919.0F, player0.getZ(), 0.01F);
      
      player1.getMoney();
      String string0 = player1.getIP();
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte) (-40);
      player0.unpack(byteArray0);
      boolean boolean0 = player0.isConnected();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0, 0);
      int int0 = player0.gangStrength();
      assertEquals(0, int0);
      
      player0.setY(0);
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.reset(false);
      player0.setMoney(0);
      player0.setZ(0);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      player0.setConnected(false);
      player0.setX(0.0F);
      Player player1 = new Player();
      player1.gangStrength();
      player0.setJoinOK(player1, false);
      player0.getPictureId();
      player0.getX();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.isJoinOK(player1, false);
      player1.setY((-1008.67F));
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream("", true);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(10);
      player0.setDead((long) 10, false);
      player0.setZ(1436.285F);
      player0.setDead((long) 10, true);
      player0.gangStrength();
      player0.setY(1.0F);
      Player player1 = new Player(1, "", "Player.unpack(): *** WARNING *** data is not of proper type!", 0, 0);
      player0.head = (Party) player1;
      player0.setX((-1.0F));
      player0.getName();
      player0.setX((-1.0F));
      assertEquals(10L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-4066), "", (String) null, 4919);
      player0.getStrength();
      Player player1 = new Player(1, "?;v{-209IyJs;9r^-t", "?;v{-209IyJs;9r^-t", 0, 1);
      player0.remove(player1);
      player0.setY((-1639.1793F));
      player0.setDead((long) 4919);
      assertEquals(4919L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-1), "E7osw.`", "TaGZks/9rT^~U!NK", (short)4919, (-1));
      player0.getSubparty();
      player0.setJoinOK(player1, true);
      player1.setDead((long) (short)4919, true);
      player0.setDead(0L, false);
      player1.setY(0L);
      player1.gangStrength();
      player0.getY();
      player1.isConnected();
      player0.isDead();
      player1.getSubparty();
      player1.getMoney();
      player1.id = (-1);
      player1.getMoney();
      player0.getY();
      player0.boss = null;
      player0.setDead(2074L, false);
      player0.setDead(1656L);
      int int0 = player1.gangStrength();
      assertEquals(4919L, player1.getTimeOfDeath());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(4312, "", "", 4312);
      Player player1 = new Player();
      player0.add(player1);
      player1.setMoney((short)4919);
      player0.getMoney();
      player1.isJoinOK(player0, true);
      player0.isConnected();
      player0.getTimeOfDeath();
      player0.isConnected();
      player1.getIP();
      assertEquals(4919.0F, player1.getMoney(), 0.01F);
      
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(4312);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      dataOutputStream0.writeChars("Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ");
      player0.pack(dataOutputStream0);
      assertEquals("\u0000P\u0000l\u0000a\u0000y\u0000e\u0000r\u0000.\u0000p\u0000a\u0000c\u0000k\u0000(\u0000)\u0000:\u0000 \u0000*\u0000*\u0000*\u0000 \u0000E\u0000R\u0000R\u0000O\u0000R\u0000 \u0000*\u0000*\u0000*\u0000 \u0000[\u0000I\u0000O\u0000]\u0000 \u0000p\u0000a\u0000c\u0000k\u0000 \u0000f\u0000a\u0000i\u0000l\u0000e\u0000d\u0000!\u0000 \u0000c\u0000u\u0000r\u0000r\u0000e\u0000n\u0000t\u0000 \u0000s\u0000t\u0000a\u0000t\u0000e\u0000 \u0000i\u0000s\u0000 \u0000i\u0000n\u0000c\u0000o\u0000n\u0000s\u0000i\u0000s\u0000t\u0000e\u0000n\u0000t\u0000:\u0000 \u00137\uFFFD\u0000\u0001\u0010\uFFFDA \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", byteArrayOutputStream0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(3, "j|,u+L/#ZD/9*tu9", (-3941));
      Player player1 = new Player((short)4919, "j|,u+L/#ZD/9*tu9", ".*[.]class$", (short)4919, (short)4919);
      player0.remove(player1);
      player0.setDead(0L);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)5;
      byteArray1[1] = (byte)111;
      byteArray1[2] = (byte)52;
      byteArray1[3] = (byte)126;
      byteArray1[4] = (byte) (-56);
      byteArray1[5] = (byte)1;
      byteArray1[6] = (byte)0;
      dataInputStream0.read(byteArray1);
      dataInputStream0.skip(3);
      dataInputStream0.skipBytes((short)4919);
      player0.unpack(dataInputStream0);
      player0.type();
      player0.toString();
      player0.setZ(3);
      player1.getStrength();
      player0.getX();
      player1.reset(true);
      player0.getX();
      player0.setDead();
      assertEquals(3.0F, player0.getZ(), 0.01F);
      
      player1.gangStrength();
      player1.getName();
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-3349), "KG}RU4y", 1);
      player0.isConnected();
      player0.setMoney((-3349));
      float float0 = player0.getZ();
      assertEquals((-3349.0F), player0.getMoney(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, (-761));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte) (-22);
      byteArray0[3] = (byte)117;
      player0.unpack(byteArray0);
      player0.id = 0;
      player0.setX(416.0F);
      player0.isDead();
      player0.getPictureId();
      player0.setY(0.0F);
      player0.toString();
      assertEquals(416.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.685945324669788
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-2283), "", "77tY", (-2283), (-2283));
      Player player1 = new Player(0, "77tY", (-2283));
      player1.reset(true);
      player0.remove(player1);
      player0.gangStrength();
      byte[] byteArray0 = player1.pack();
      Player player2 = new Player((-328), "#B", ".u/}{0)}", 0, (-1195));
      player1.next = (Party) player2;
      player0.next = (Party) player1;
      Player player3 = (Player)player1.next;
      player0.next = (Party) player3;
      player0.next.boss = player0.next;
      player0.unpack(byteArray0);
      player0.getY();
      Player player4 = new Player(2116, "77tY", "", (byte)68);
      player4.setMoney(0.0F);
      player1.setDead(562L);
      assertTrue(player1.isDead());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player();
      player0.getSubparty();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      player0.unpack(byteArray0);
      Player player1 = new Player((byte)0);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertFalse(boolean0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.488327743368588
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, (-761));
      player0.id = 0;
      player0.setX(416.0F);
      player0.isDead();
      player0.getPictureId();
      player0.setY(0.0F);
      player0.toString();
      System.setCurrentTimeMillis((byte)117);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(416.0F, player0.getX(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.3114234446919735
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-337L));
      Player player0 = new Player(380, "", "kXHT3HDQ%", (-771));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player1 = new Player((short)4919, "kXHT3HDQ%", "", 2147300883, 4825);
      player1.isJoinOK(player0, true);
      System.setCurrentTimeMillis(380);
      player1.setDead((-337L));
      player1.setJoinOK(player0, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.setMoney(380);
      Player player2 = new Player(2147300883, "", "?+ibeqa}&T~|", 380);
      player1.add(player2);
      player0.gangStrength();
      player2.remove(player0);
      System.setCurrentTimeMillis(2147300883);
      player1.isJoinOK(player0, false);
      player2.isJoinOK(player0, false);
      player2.isJoinOK(player1, false);
      assertEquals(380.0F, player1.getMoney(), 0.01F);
      
      System.setCurrentTimeMillis((-2054L));
      player2.isJoinOK(player0, false);
      assertEquals((-771), player0.getPictureId());
  }
}
