/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:01:14 GMT 2018
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.net.URI;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Locale locale0 = Locale.JAPANESE;
      Object[] objectArray0 = new Object[1];
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream((InputStream) null, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.decodeStream();
      Newzgrabber.verbose = true;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertFalse(base64Decoder0.ProgressSet);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.30463609734923813
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-12);
      byteArray0[1] = (byte)90;
      byteArray0[2] = (byte)90;
      byteArray0[3] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      MockFile mockFile0 = new MockFile(",kzg?A{)hDaX");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      byteArrayInputStream0.read();
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, true);
      Locale locale0 = Locale.FRENCH;
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) locale0;
      mockPrintStream1.format(locale0, "The following are the lines from the base64 decode", objectArray0);
      mockPrintStream1.println();
      byteArrayInputStream0.skip(1L);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      mockPrintStream1.println();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      base64Decoder1.decodeStream();
      assertEquals(0L, base64Decoder1.getLineCount());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.30463609734923813
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-12);
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)122;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)97;
      byteArray0[6] = (byte) (-73);
      byteArray0[7] = (byte)10;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[8] = (byte)97;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      MockFile mockFile0 = new MockFile(",kzg?A{)hDaX");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, true);
      Locale locale0 = Locale.FRENCH;
      Object[] objectArray0 = new Object[0];
      mockFile0.setReadable(true);
      PrintStream printStream0 = mockPrintStream1.format(locale0, ",kzg?A{)hDaX", objectArray0);
      printStream0.println();
      byteArrayInputStream0.skip(1L);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ",kzg?A{)hDaX";
      BufferedCustomInputStream.main(stringArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(3L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      MockFile mockFile0 = new MockFile(",kzg?A{p] )hDaX");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      byteArrayInputStream0.read();
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, true);
      Locale locale0 = Locale.FRENCH;
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) locale0;
      mockPrintStream1.format(locale0, "The following are the lines from the base64 decode", objectArray0);
      mockPrintStream1.println();
      byteArrayInputStream0.skip(1L);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      mockPrintStream0.println();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder1.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertFalse(base64Decoder0.ProgressSet);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-12);
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)122;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)97;
      byteArray0[6] = (byte) (-73);
      byteArray0[7] = (byte)10;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[8] = (byte)97;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      MockFile mockFile0 = new MockFile(",kzg?A{)hDaX");
      MockPrintStream mockPrintStream0 = new MockPrintStream(",kzg?A{)hDaX");
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, true);
      Locale locale0 = Locale.FRENCH;
      Object[] objectArray0 = new Object[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      PrintStream printStream0 = mockPrintStream1.format(locale0, ",kzg?A{)hDaX", objectArray0);
      printStream0.println();
      byteArrayInputStream0.skip(1L);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(",kzg?A{)hDaX");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ",kzg?A{)hDaX";
      BufferedCustomInputStream.main(stringArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      Newzgrabber.verbose = true;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(3L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.2711893730418441
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-12);
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)122;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)97;
      byteArray0[3] = (byte) (-73);
      byteArray0[7] = (byte)10;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[8] = (byte)97;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      MockFile mockFile0 = new MockFile(",kzg?A{)hDaX");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Locale locale0 = Locale.forLanguageTag(",kzg?A{)hDaX");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) mockFile0;
      objectArray0[1] = (Object) (byte)97;
      objectArray0[2] = (Object) (byte) (-12);
      objectArray0[3] = (Object) mockPrintStream0;
      objectArray0[4] = (Object) fileSystemHandling0;
      objectArray0[5] = (Object) bufferedCustomInputStream0;
      mockFile0.toURI();
      PrintStream printStream0 = mockPrintStream0.format(locale0, ",kzg?A{)hDaX", objectArray0);
      mockPrintStream0.println();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      base64Decoder1.decodeStream();
      base64Decoder1.decodeStream();
      base64Decoder1.decodeStream();
      base64Decoder0.decodeStream();
      assertFalse(base64Decoder0.ABORT);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.167944147734173
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)97;
      byteArray0[3] = (byte) (-88);
      byteArray0[7] = (byte)97;
      byteArray0[1] = (byte)97;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      MockFile mockFile0 = new MockFile(",kzg?A{)hDaX");
      MockPrintStream mockPrintStream0 = new MockPrintStream(",kzg?A{)hDaX");
      Locale.forLanguageTag(",kzg?A{)hDaX");
      URI uRI0 = MockURI.aFileURI;
      mockPrintStream0.println();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.os = (OutputStream) mockPrintStream0;
      base64Decoder0.setOutputStream(mockPrintStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }
}
