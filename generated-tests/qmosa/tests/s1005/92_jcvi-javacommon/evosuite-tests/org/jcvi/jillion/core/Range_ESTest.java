/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:02:13 GMT 2018
 */

package org.jcvi.jillion.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jcvi.jillion.core.Range;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Range_ESTest extends Range_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long long0 = 0L;
      Range range0 = Range.of(0L, 0L);
      long long1 = (-650L);
      range0.toString();
      // Undeclared exception!
      try { 
        range0.split((-650L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // max splitLength must be >= 1
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.044820482464577
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      range_CoordinateSystem0.getAbbreviatedName();
      long long0 = 2147483647L;
      Range.of(2147483647L, 2147483647L);
      String string0 = "Q_Y~okbW>mx}";
      // Undeclared exception!
      try { 
        Range.parseRange("Q_Y~okbW>mx}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse Q_Y~okbW>mx} into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      long long0 = 0L;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, (-1112L), 0L);
      range_Builder0.expandBegin((-1112L));
      range_Builder0.expandEnd(247L);
      range_Builder0.build();
      range_CoordinateSystem0.toString();
      range_Builder0.expandBegin(0L);
      long long1 = 255L;
      Range range0 = Range.ofLength(255L);
      Range range1 = null;
      // Undeclared exception!
      try { 
        range0.isSubRangeOf((Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // range can not be null
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.6888794541139402
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Range range0 = Range.of(1945L);
      Range range1 = Range.ofLength(1945L);
      range1.toString();
      range1.intersection(range0);
      Range range2 = Range.ofLength(0L);
      range0.isSubRangeOf(range1);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      range2.toString();
      range2.toString(range_CoordinateSystem0);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      range2.toString(range_CoordinateSystem1);
      Range.CoordinateSystem range_CoordinateSystem2 = Range.CoordinateSystem.ZERO_BASED;
      Range range3 = Range.of(range_CoordinateSystem2, 0L, 911L);
      range3.getEnd();
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, 0L, 0L);
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      Range.Builder range_Builder2 = range_Builder1.contractEnd((-4233L));
      assertSame(range_Builder1, range_Builder2);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.5263605246161633
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Range range0 = Range.of((-4515L), (-4515L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, (-4515L), (-4515L));
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      range1.getBegin(range_CoordinateSystem1);
      Range.CoordinateSystem range_CoordinateSystem2 = Range.CoordinateSystem.RESIDUE_BASED;
      range0.getEnd(range_CoordinateSystem2);
      range1.startsBefore(range0);
      range0.intersects(range1);
      Range.Builder range_Builder0 = null;
      try {
        range_Builder0 = new Range.Builder((-4515L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must be >=0
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder((-32768L), (-32768L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 0L, 0L);
      Iterator<Long> iterator0 = range0.iterator();
      assertNotNull(iterator0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-1L), 0L);
      Range.Builder range_Builder0 = new Range.Builder(range0);
      range_Builder0.expandBegin((-1L));
      Range range1 = range0.asRange();
      range1.isSubRangeOf(range0);
      long long0 = 2164L;
      range1.getEnd(range_CoordinateSystem0);
      long long1 = 0L;
      String string0 = "";
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("", range_CoordinateSystem1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse  into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Range.CoordinateSystem.values();
      Range.Builder range_Builder0 = new Range.Builder();
      // Undeclared exception!
      try { 
        range_Builder0.contractBegin(1077L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.3561182455381515
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = Range.of(0L);
      LinkedList<Range> linkedList0 = new LinkedList<Range>();
      range1.complementFrom(linkedList0);
      boolean boolean0 = range0.isSubRangeOf(range1);
      assertTrue(boolean0);
      
      Range.Builder range_Builder0 = new Range.Builder(0L, 3161L);
      Range range2 = range_Builder0.build();
      range0.getEnd();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      range_CoordinateSystem0.toString();
      String string0 = range2.toString(range_CoordinateSystem0);
      assertEquals("[ 0 .. 3162 ]/SB", string0);
      
      range_Builder0.contractEnd(0L);
      range_CoordinateSystem0.toString();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      long long0 = range0.getEnd(range_CoordinateSystem1);
      assertNotSame(range0, range1);
      assertEquals(1L, long0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1744004444151304
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      Range range0 = Range.of((-1151L));
      Range range1 = Range.ofLength(0L);
      range0.endsBefore(range1);
      // Undeclared exception!
      try { 
        range0.split((-1151L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // max splitLength must be >= 1
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.4965075614664793
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      long long0 = 149L;
      Range range0 = Range.of(range_CoordinateSystem0, 149L, 600L);
      Range range1 = Range.ofLength(0L);
      range1.complement(range0);
      Range.Builder range_Builder0 = new Range.Builder(range0);
      range_Builder0.copy();
      range_Builder0.expandBegin((-32768L));
      Range.Builder range_Builder1 = null;
      try {
        range_Builder1 = new Range.Builder(range_Builder0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0315905757832304
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Range.Comparators.values();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range.of(range_CoordinateSystem0, 0L, 2147483647L);
      // Undeclared exception!
      try { 
        Range.ofLength((-3088L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must be >=0
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.11943361678872
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range.of(range_CoordinateSystem0, 195L, 195L);
      long long0 = 2147483647L;
      Long long1 = new Long(195L);
      Long.compareUnsigned((-128L), (-2144403052L));
      Long.compareUnsigned((-1L), 2147483647L);
      Long.getLong("");
      range0.equals(long1);
      // Undeclared exception!
      try { 
        range0.split((-128L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // max splitLength must be >= 1
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.5331551572140922
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-2147483648L), (-2147483648L));
      Long long0 = new Long(2147483647L);
      Long.getLong((String) null, (Long) null);
      Range range1 = Range.of((-976L));
      range0.complement(range1);
      Long.compareUnsigned(3224L, 2147483647L);
      Long.compareUnsigned((-976L), 2147483647L);
      Long.getLong("");
      range0.equals(long0);
      // Undeclared exception!
      try { 
        range0.split((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // max splitLength must be >= 1
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.319419301952094
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-2147483648L), (-2147483648L));
      Long long0 = new Long(2147483647L);
      Long.compareUnsigned(3224L, 2147483647L);
      Long.compareUnsigned((-976L), 2147483647L);
      Range range1 = Range.of(range_CoordinateSystem0, (-1704L), (long) 1);
      range1.iterator();
      range1.endsBefore(range0);
      // Undeclared exception!
      try { 
        range0.complementFrom((Collection<Range>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.4723745256823304
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Long.getLong("");
      Range range0 = Range.ofLength(807L);
      boolean boolean0 = range0.equals(range_CoordinateSystem0);
      assertFalse(boolean0);
      
      List<Range> list0 = range0.split(9223372036854775807L);
      List<Range> list1 = range0.complementFrom(list0);
      assertEquals(0, list1.size());
      
      range0.getEnd();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      String string0 = range0.toString(range_CoordinateSystem1);
      assertEquals("[ 1 .. 807 ]/RB", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.4119772989267734
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 149L, 600L);
      Range range1 = Range.ofLength(0L);
      range1.complement(range0);
      Range.Builder range_Builder0 = new Range.Builder(range0);
      range_Builder0.copy();
      Range.Builder range_Builder1 = range_Builder0.expandBegin((-32768L));
      Long.compareUnsigned(1113L, (-32768L));
      Long.compareUnsigned(2147483647L, 209L);
      Long.getLong("FO.:");
      range1.equals(range_Builder1);
      List<Range> list0 = range0.split(3224L);
      List<Range> list1 = range1.complementFrom(list0);
      assertTrue(list1.contains(range0));
      
      long long0 = range1.getEnd();
      assertTrue(range1.isEmpty());
      assertEquals((-1L), long0);
      
      String string0 = range0.toString(range_CoordinateSystem0);
      assertEquals("[ 149 .. 600 ]/RB", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.1313335816367016
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 0L, 0L);
      range0.getEnd(range_CoordinateSystem0);
      range0.iterator();
      // Undeclared exception!
      try { 
        range0.intersection((Range) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null Range used in intersection operation.
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.5325246346763284
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Range range0 = Range.of(1945L);
      Range range1 = Range.ofLength(1945L);
      range1.toString();
      boolean boolean0 = range0.endsBefore(range1);
      Range range2 = Range.parseRange("[ 0 .. 1944 ]/0B");
      Range range3 = Range.ofLength(0L);
      boolean boolean1 = range0.isSubRangeOf(range1);
      assertTrue(boolean1 == boolean0);
      assertSame(range1, range2);
      
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      range3.toString();
      range3.toString(range_CoordinateSystem0);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      String string0 = range3.toString(range_CoordinateSystem1);
      assertEquals("[ 0 .. 0 ]/SB", string0);
      
      Range.CoordinateSystem range_CoordinateSystem2 = Range.CoordinateSystem.ZERO_BASED;
      Range range4 = Range.of(range_CoordinateSystem2, 0L, 911L);
      long long0 = range4.getEnd();
      assertEquals(911L, long0);
      
      range0.iterator();
      boolean boolean2 = range4.startsBefore(range3);
      assertTrue(boolean2 == boolean1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.3478774190795715
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Range range0 = Range.of((-2147483648L), (-2147483648L));
      long long0 = 2147483647L;
      Long long1 = new Long(2147483647L);
      String string0 = "";
      long long2 = (-976L);
      LinkedList<Range> linkedList0 = new LinkedList<Range>();
      range0.complementFrom(linkedList0);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, (-955L), 2521L);
      range_Builder0.copy();
      long long3 = 0L;
      range_Builder0.shift(1409L);
      Range.Builder range_Builder1 = new Range.Builder();
      // Undeclared exception!
      try { 
        range_Builder1.contractEnd(255L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Range.Comparators.values();
      long long0 = 2147483647L;
      Range range0 = Range.of(2147483647L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      Range.Builder range_Builder0 = new Range.Builder(range0);
      range1.toString(range_CoordinateSystem0);
      // Undeclared exception!
      try { 
        range_Builder0.contractEnd(2147483647L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.4216774429683516
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      long long0 = (-1151L);
      Range range0 = Range.of((-1151L));
      Range range1 = Range.ofLength(0L);
      Range.of((-1151L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range2 = Range.of((-1151L), 0L);
      range2.isSubRangeOf(range1);
      range0.isSubRangeOf(range2);
      range2.getBegin(range_CoordinateSystem0);
      // Undeclared exception!
      try { 
        Range.parseRange("8WV>*[HX%.>q~", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse 8WV>*[HX%.>q~ into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.340487701170938
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Range range0 = Range.of((-2147483648L), (-2147483648L));
      Long.getLong(")`{c<5'qF4Z=]@}");
      Range range1 = Range.ofLength(2147483647L);
      range0.equals(range1);
      // Undeclared exception!
      try { 
        range0.split((-404L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // max splitLength must be >= 1
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.2817139087366987
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Range range0 = Range.of((-4515L), (-4515L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      range0.getBegin(range_CoordinateSystem0);
      range0.intersection(range0);
      range0.getEnd(range_CoordinateSystem0);
      range0.startsBefore(range0);
      range0.intersects(range0);
      Range.Builder range_Builder0 = null;
      try {
        range_Builder0 = new Range.Builder((-4515L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must be >=0
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.419227129205788
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder((-32768L), (-32768L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 0L, 0L);
      Range.Builder range_Builder1 = new Range.Builder(range_CoordinateSystem0, (-32768L), (-32768L));
      Range.Builder range_Builder2 = new Range.Builder(range0);
      Range range1 = Range.ofLength(1566L);
      boolean boolean0 = range0.endsBefore(range1);
      assertTrue(boolean0);
      
      List<Range> list0 = range1.split(1L);
      assertEquals(1566, list0.size());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.4611812938892896
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder(466L);
      range_Builder0.build();
      range_Builder0.expandBegin(466L);
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      Range range0 = range_Builder1.build();
      Range.Builder range_Builder2 = new Range.Builder(range_Builder1);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      range0.toString(range_CoordinateSystem0);
      Range.Comparators.values();
      Range.CoordinateSystem.values();
      range_CoordinateSystem0.toString();
      range0.split(466L);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.3026040336923144
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      long long0 = (-2147483648L);
      Range.of(range_CoordinateSystem0, (-2147483648L), (-2147483648L));
      long long1 = 9223372036854774245L;
      Range.of(9223372036854774245L);
      long long2 = (-1113L);
      // Undeclared exception!
      try { 
        Range.ofLength((-1113L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must be >=0
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.017756055621204
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Long.getLong("");
      Range range0 = Range.ofLength(807L);
      range0.equals(range_CoordinateSystem0);
      range0.split(9223372036854775807L);
      Range range1 = Range.of(9223372036854775807L);
      range0.intersects(range1);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      range0.toString(range_CoordinateSystem1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.4965075614664793
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Range range0 = Range.of((-4515L), (-4515L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      range0.getBegin(range_CoordinateSystem0);
      Range range1 = range0.intersection(range0);
      range0.getEnd(range_CoordinateSystem0);
      range0.startsBefore(range0);
      range0.intersects(range0);
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, 1706L, 32767L);
      range_Builder0.contractEnd((-4514L));
      Long long0 = new Long(2147483647L);
      range1.equals(long0);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange", range_CoordinateSystem1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.075893987517936
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Long.getLong("");
      Range range0 = Range.of(807L);
      range0.equals(range_CoordinateSystem0);
      range0.split(9223372036854775807L);
      Long.getLong("iN{j<^Y<mir,_[cD");
      range0.equals("iN{j<^Y<mir,_[cD");
      range0.split(9223372036854775807L);
      range0.split(1L);
      range0.getEnd();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      range0.toString(range_CoordinateSystem1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.5614511474095227
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Range.ofLength(0L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range0 = Range.of(0L, 0L);
      Long long0 = new Long(195L);
      Long.compareUnsigned((-128L), (-2144403052L));
      Long.compareUnsigned((-1L), 2147483647L);
      Range.of((-2147483648L));
      Range range1 = Range.of(1630L, 9223372036854775807L);
      range1.intersects(range0);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("byte array can not be null", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse byte array can not be null into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.504609889622539
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      Range range0 = Range.of((-1151L));
      List<Range> list0 = range0.split(4294967295L);
      range0.complementFrom(list0);
      range0.getEnd();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      range0.toString(range_CoordinateSystem0);
      range0.getBegin();
      // Undeclared exception!
      try { 
        range0.intersects((Range) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null Range used in intersection operation.
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.412859153652403
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Range.of(2147483647L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range.of(range_CoordinateSystem0, 2147483647L, (-9223372036854775808L));
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      Range range0 = Range.of(range_CoordinateSystem1, (-9223372036854775808L), (-737L));
      Range.CoordinateSystem range_CoordinateSystem2 = Range.CoordinateSystem.RESIDUE_BASED;
      range0.getBegin(range_CoordinateSystem2);
      Range.Builder range_Builder0 = null;
      try {
        range_Builder0 = new Range.Builder(range_CoordinateSystem1, (-976L), (-9223372036854775808L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.2508852583260284
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Range range0 = Range.of(1101L);
      Long.getLong("3H(wWB]f/o~<_@(s}D");
      Range.ofLength(807L);
      Range range1 = Range.ofLength(9223372034707292162L);
      Long long0 = new Long(9223372034707292162L);
      range1.equals(long0);
      range0.split(9223372036854775807L);
      Range range2 = Range.ofLength(1101L);
      range0.intersects(range2);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      range2.toString(range_CoordinateSystem0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.396928366750044
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Range.Comparators.values();
      Range range0 = Range.of(2147483647L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      Range.Builder range_Builder0 = new Range.Builder(range0);
      Long.getLong("org.jcvi.jillion.core.Range$RangeIterator");
      Range range2 = Range.ofLength(255L);
      range0.equals("org.jcvi.jillion.core.Range$RangeIterator");
      Range.ofLength(0L);
      range1.endsBefore(range0);
      // Undeclared exception!
      try { 
        range2.split(0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // max splitLength must be >= 1
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.165709009292819
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 195L, 195L);
      Long.getLong("fM 6pH`?X");
      Range range2 = Range.ofLength(0L);
      range0.equals(range2);
      Range range3 = Range.ofLength(195L);
      range3.endsBefore(range1);
      range1.split(9223372036854775807L);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.514825858765221
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Long.getLong((String) null);
      Range range0 = Range.ofLength(466L);
      Long.compareUnsigned((-1746L), 9223372036854775001L);
      Long.compareUnsigned(2944L, 0L);
      Long.getLong("");
      Object object0 = new Object();
      Long long0 = new Long(9223372036854775001L);
      Long.sum(0L, 1);
      range0.equals(long0);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 411L, 1882L);
      List<Range> list0 = range1.split(807L);
      range0.complementFrom(list0);
      range0.getEnd();
      Range.ofLength(2944L);
      range0.getEnd(range_CoordinateSystem0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.459984534774456
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Range range0 = Range.of((-2147483648L), (-2147483648L));
      Long.getLong(")`{c<5'qF4Z=]@}");
      Range range1 = Range.ofLength(2147483647L);
      range1.endsBefore(range0);
      Long.compareUnsigned(4294967295L, 4294967295L);
      Long.getLong(")`{c<5'qF4Z=]@}");
      range1.equals((Object) null);
      range0.split(2147483647L);
      // Undeclared exception!
      try { 
        Range.parseRange(")`{c<5'qF4Z=]@}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse )`{c<5'qF4Z=]@} into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.583518938456111
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Range.Comparators.values();
      Range range0 = Range.of(2147483647L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
      Range.Builder range_Builder0 = new Range.Builder(range0);
      Long.getLong("org.jcvi.jillion.core.Range$RangeIterator");
      Long.compareUnsigned((-1996L), 2147483647L);
      Long.getLong("org.jcvi.jillion.core.Range$RangeIterator");
      Long long0 = new Long((-729L));
      range1.equals(long0);
      List<Range> list0 = range1.split(1);
      range0.complementFrom(list0);
      range0.getEnd();
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      range0.getEnd(range_CoordinateSystem1);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.0280290733074104
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Range range0 = Range.of((-234L));
      Long.getLong("uieSZ");
      Long long0 = new Long((-234L));
      Long.compareUnsigned(3224L, (-877L));
      Long.compareUnsigned((-1), (-454L));
      Long.getLong("");
      range0.equals((Object) null);
      // Undeclared exception!
      try { 
        range0.split((-65534L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // max splitLength must be >= 1
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.9713765399690213
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Long.getLong("3H(wWB]f/o~<_@(s}D");
      Range range0 = Range.ofLength(807L);
      Long.compareUnsigned(807L, 807L);
      range0.equals((Object) null);
      Range.of((long) 0);
      // Undeclared exception!
      try { 
        range0.split(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // max splitLength must be >= 1
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.9622922760091104
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Long.getLong("");
      Range range0 = Range.of(807L);
      range0.equals(range_CoordinateSystem0);
      Long.max((-1L), 807L);
      Long.compareUnsigned(2973L, 807L);
      Long.compareUnsigned(1, 9223372036854775807L);
      Range.of(9223372036854775807L);
      range0.equals((Object) null);
      range0.split(65535L);
      range0.getEnd();
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.084958600954189
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Range.ofLength(0L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 195L, 195L);
      Long long0 = new Long(255L);
      Long.compareUnsigned(2375L, 195L);
      Long.compareUnsigned(4294967295L, 9223372036854775807L);
      range0.split(9223372036854775807L);
      // Undeclared exception!
      try { 
        Range.of((Range.CoordinateSystem) null, 2147483647L, (-128L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // CoordinateSystem can not be null
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.090459923616198
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder((-32768L), (-32768L));
      Long.compareUnsigned(0L, 0L);
      Range.of(0L);
      // Undeclared exception!
      try { 
        Range.of(9223372036854775807L, (-32768L));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // given length -32768 would make range [9223372036854775807 - ? ] beyond max allowed end offset
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.4339872044851467
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Range range0 = Range.of((-4515L), (-4515L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Long long0 = new Long((-4515L));
      Range range1 = range0.intersection(range0);
      range0.getEnd(range_CoordinateSystem0);
      range0.startsBefore(range0);
      range0.intersects(range0);
      Long.compareUnsigned(32767L, (-4514L));
      range0.getEnd();
      Long long1 = new Long((-4514L));
      range1.equals(range0);
      // Undeclared exception!
      try { 
        range1.split((-3803L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // max splitLength must be >= 1
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder((-32768L), (-32768L));
      long long0 = 0L;
      Long.compareUnsigned((-32768L), (-7020L));
      Range range0 = Range.of((long) (-1), 1L);
      range0.equals((Object) null);
      // Undeclared exception!
      try { 
        Range.ofLength((-7020L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must be >=0
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.877585910557535
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 622L, 622L);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      range0.toString(range_CoordinateSystem1);
      Range.Builder range_Builder0 = new Range.Builder(range0);
      Long long0 = new Long(4294967295L);
      Long.compareUnsigned((-3399L), (-128L));
      Long.getLong("[ 622 .. 622 ]/SB", 4294967295L);
      range0.equals(long0);
      range0.toString();
      Range.CoordinateSystem range_CoordinateSystem2 = Range.CoordinateSystem.SPACE_BASED;
      range0.getBegin(range_CoordinateSystem2);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("[ 622 .. 622 ]/SB");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.[ 622 .. 622 ]/SB
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7516666169315163
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      Range range0 = range_Builder0.build();
      long long0 = (-4168L);
      range_Builder0.build();
      Range.Builder range_Builder1 = range_Builder0.expandEnd((-4168L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      range0.toString(range_CoordinateSystem0);
      // Undeclared exception!
      try { 
        range_Builder1.build();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }
}
