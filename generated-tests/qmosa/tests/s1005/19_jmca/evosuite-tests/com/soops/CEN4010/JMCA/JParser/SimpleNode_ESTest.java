/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:17:02 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      String string0 = "throws";
      Writer writer0 = null;
      simpleNode0.dump("throws", (Writer) null);
      simpleNode0.setIdentifier("throws");
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 1716);
      SimpleNode simpleNode1 = null;
      try {
        simpleNode1 = new SimpleNode((JavaParser) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "*ge";
      JavaParser javaParser0 = new JavaParser("*ge");
      try { 
        javaParser0.NameList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1250);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
      
      simpleNode0.setIdentifier("M|>}o#!TH8}|6w./p");
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(4001);
      stringWriter0.flush();
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.dump(">>", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(3);
      simpleNode1.jjtSetParent(simpleNode0);
      simpleNode0.jjtClose();
      Node node0 = simpleNode1.jjtGetParent();
      assertNotNull(node0);
      
      simpleNode0.dump(">>", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4978661367769954
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(100);
      StringWriter stringWriter0 = new StringWriter(100);
      stringWriter0.flush();
      stringWriter0.write(3);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
      stringWriter1.close();
      stringWriter1.flush();
      simpleNode0.dump("", stringWriter1);
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      simpleNode0.toString();
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 3);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.jjtAddChild((Node) null, 3);
      simpleNode0.toString();
      assertEquals(4, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      arrayList0.trimToSize();
      simpleNode0.jjtGetChild(0);
      StringReader stringReader0 = new StringReader("*rshft");
      simpleNode0.parent = null;
      simpleNode0.setIdentifier("");
      simpleNode0.toString("");
      simpleNode0.toString();
      simpleNode0.jjtClose();
      simpleNode0.toString("");
      simpleNode0.toString("const");
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "*rshft");
      StringWriter stringWriter2 = stringWriter1.append('h');
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) "*rshft", 0, 0);
      simpleNode0.dump("const", stringWriter3);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      arrayList0.trimToSize();
      simpleNode0.jjtGetChild(0);
      StringReader stringReader0 = new StringReader("*rshft");
      simpleNode0.parent = null;
      simpleNode0.setIdentifier("--");
      simpleNode0.toString("--");
      simpleNode0.toString();
      simpleNode0.jjtClose();
      simpleNode0.toString(" ");
      simpleNode0.toString("const");
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "*rshft");
      StringWriter stringWriter2 = stringWriter1.append('h');
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) "*rshft", 0, 0);
      simpleNode0.dump("const", stringWriter3);
      simpleNode0.dump("tOT0:;};:^<LxX/", stringWriter1);
      simpleNode0.dump("--", stringWriter2);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      arrayList0.trimToSize();
      simpleNode0.jjtGetChild(0);
      StringReader stringReader0 = new StringReader("");
      simpleNode0.parent = null;
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      simpleNode0.toString();
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.2265558156134033
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      arrayList0.trimToSize();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
      simpleNode0.dump("*rshft", stringWriter1);
      SimpleNode simpleNode1 = new SimpleNode(96);
      simpleNode0.toString();
      simpleNode1.jjtGetNumChildren();
      simpleNode1.jjtGetNumChildren();
      simpleNode0.toString();
      simpleNode1.toString();
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 512);
      simpleNode0.dump("", stringWriter0);
      assertEquals(513, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1626416509453747
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      arrayList0.add("?;2<h");
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      arrayList0.trimToSize();
      simpleNode0.jjtGetChild(0);
      StringReader stringReader0 = new StringReader("*rshft");
      simpleNode0.parent = null;
      simpleNode0.setIdentifier("--");
      simpleNode0.toString("--");
      simpleNode0.toString();
      simpleNode0.jjtClose();
      simpleNode0.toString(" ");
      simpleNode0.toString("const");
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "*rshft");
      StringWriter stringWriter2 = stringWriter1.append('h');
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) "*rshft", 0, 0);
      // Undeclared exception!
      simpleNode0.dump("const", stringWriter3);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7999587982097305
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("{");
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      arrayList0.trimToSize();
      simpleNode0.jjtGetChild(0);
      StringReader stringReader0 = new StringReader("*rshft");
      simpleNode0.parent = null;
      simpleNode0.setIdentifier("--");
      simpleNode0.toString("--");
      simpleNode0.toString();
      simpleNode0.jjtClose();
      simpleNode0.toString(" ");
      simpleNode0.toString("const");
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "*rshft");
      StringWriter stringWriter2 = stringWriter1.append('h');
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*rshft");
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) "*rshft", 0, 0);
      simpleNode0.dump("const", stringWriter3);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.dump("--", stringWriter3);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9459347757561138
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(21);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(";");
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 21);
      arrayList0.trimToSize();
      simpleNode0.jjtGetChild(21);
      StringReader stringReader0 = new StringReader("*rshft");
      simpleNode0.parent = null;
      simpleNode0.setIdentifier("--");
      simpleNode0.setIdentifier("         java JavaParser < inputfile");
      simpleNode0.toString("*rshft");
      simpleNode0.toString();
      simpleNode0.jjtClose();
      simpleNode0.toString("*rshft");
      simpleNode0.toString("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/)v");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("*rshftMethodDeclaration : ; : -- :          java JavaParser < inputfile", stringWriter0);
      simpleNode0.dump("*rshftMethodDeclaration : ; : -- :          java JavaParser < inputfile", stringWriter0);
      simpleNode0.dump("*rshft", stringWriter0);
      assertEquals(22, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2446445889704454
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(21);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtAddChild(simpleNode0, 21);
      arrayList0.trimToSize();
      Node node0 = simpleNode0.jjtGetChild(21);
      StringReader stringReader0 = new StringReader("*rshft");
      simpleNode0.parent = node0;
      simpleNode0.setIdentifier(">=");
      simpleNode0.toString("*rshft");
      simpleNode0.toString();
      simpleNode0.jjtClose();
      simpleNode0.toString("*rshft");
      simpleNode0.toString("5");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/)v");
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      simpleNode0.dump("*rshftMethodDeclaration : >=", stringWriter0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7999587982097305
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(21);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 21);
      StringReader stringReader0 = new StringReader("-");
      arrayList0.trimToSize();
      simpleNode0.jjtGetChild(21);
      StringReader stringReader1 = new StringReader("}");
      simpleNode0.setIdentifier("}");
      simpleNode0.toString("<");
      simpleNode0.toString();
      simpleNode0.jjtClose();
      simpleNode0.toString();
      simpleNode0.toString("g?<ATcY9bpM=wu");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(21);
      simpleNode1.dump("nXNQB^!\u0004Z0n}", stringWriter0);
      simpleNode0.dump("MethodDeclaration : }", stringWriter0);
      assertEquals(22, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9017412329512398
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(21);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("&&");
      simpleNode0.jjtAddChild(simpleNode0, 21);
      arrayList0.trimToSize();
      SimpleNode simpleNode1 = new SimpleNode(21);
      StringReader stringReader0 = new StringReader("--");
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.toString("*rshft");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 21);
      simpleNode2.toString();
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      simpleNode0.dump("{", stringWriter0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.2337673247041645
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringReader stringReader0 = new StringReader(">");
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode0.setIdentifier(">");
      simpleNode0.toString(">");
      simpleNode0.toString();
      simpleNode1.jjtClose();
      simpleNode0.toString();
      simpleNode0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*ge");
      String string0 = "         java JavaParser < inputfile";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CompilationUnit : >");
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode1.dump("         java JavaParser < inputfile", stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
