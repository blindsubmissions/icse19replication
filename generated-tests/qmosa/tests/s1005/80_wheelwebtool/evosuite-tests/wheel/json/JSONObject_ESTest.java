/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:15:13 GMT 2018
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>)hashMap0.entrySet();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.names();
      jSONObject0.toString((-240));
      JSONObject.getNames((Object) set0);
      jSONObject0.optDouble("Kc2bT(HXL");
      jSONObject0.optString("");
      JSONObject jSONObject1 = jSONObject0.putOpt("0aOE5fj", set0);
      jSONObject1.optBoolean((String) null, true);
      try { 
        jSONObject1.getJSONArray("0aOE5fj");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"0aOE5fj\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte byte0 = (byte)1;
      Byte byte1 = new Byte((byte)1);
      JSONObject jSONObject0 = new JSONObject(byte1);
      jSONObject0.put("!XQae,6,mcq", 0.0);
      String string0 = "zFE}muCX87";
      Byte.toUnsignedLong((byte)1);
      try { 
        jSONObject0.getString("zFE}muCX87");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"zFE}muCX87\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 0 of 
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject.valueToString(double0, 0, 357);
      String string0 = "HA";
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray("HA");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of HA
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2440166957928942
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer(0);
      JSONObject jSONObject0 = new JSONObject(integer0);
      String[] stringArray0 = null;
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject(jSONObject0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = 0.0;
      JSONObject.doubleToString(0.0);
      JSONTokener jSONTokener0 = new JSONTokener("PZY{2B");
      jSONTokener0.toString();
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of PZY{2B
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject.testValidity(double0);
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      jSONObject0.accumulate("", "");
      Double.isFinite((-2826.0966340730624));
      JSONObject jSONObject1 = jSONObject0.put("", 13);
      jSONObject1.toString();
      jSONObject1.put("", true);
      try { 
        jSONObject1.append("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Long long0 = new Long((-1L));
      String string0 = "";
      Long.compare(0L, (-1L));
      Long.getLong("", (-1L));
      JSONObject.numberToString(long0);
      HashMap<Byte, Long> hashMap0 = new HashMap<Byte, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 0 of 
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "] is not a Boolean.";
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (-794));
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", false);
      jSONObject2.put("] is not a Boolean.", 0.0);
      jSONObject0.get("] is not a Boolean.");
      String string1 = "1yqm^;3q|g\"7FK_";
      String string2 = null;
      double double0 = (-1564.05967264729);
      Double double1 = new Double(Double.NaN);
      try { 
        jSONObject0.put((String) null, (Object) double1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5119617975244894
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.names();
      JSONObject.getNames(jSONObject0);
      jSONObject0.optBoolean((String) null, true);
      try { 
        jSONObject0.getJSONArray("DOb}K!lL%xjxX_0?apA");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"DOb}K!lL%xjxX_0?apA\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "KwRwNt@";
      stringArray0[1] = "V#4\"ZS";
      stringArray0[2] = "KaxDavdw)7#cW";
      stringArray0[3] = "Expected a ',' or '}'";
      jSONArray0.put((-316.349));
      stringArray0[4] = "A JSONObject text must begin with '{'";
      JSONObject jSONObject0 = new JSONObject(jSONArray0, stringArray0);
      JSONArray jSONArray1 = jSONObject0.toJSONArray(jSONArray0);
      assertNotNull(jSONArray1);
      assertEquals(1, jSONArray1.length());
      
      String[] stringArray1 = JSONObject.getNames(jSONObject0);
      assertNotSame(jSONArray0, jSONArray1);
      assertNull(stringArray1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(object0, 0, 0);
      JSONObject jSONObject0 = new JSONObject();
      assertEquals(0, jSONObject0.length());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.2067368439362582
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString((-660));
      int int0 = (-989);
      jSONObject0.toString((-989), (-989));
      try { 
        jSONObject0.getBoolean("null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"null\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.816025311429126
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Boolean boolean0 = new Boolean(false);
      boolean boolean1 = true;
      Boolean.compare(false, true);
      String[] stringArray0 = new String[1];
      String string0 = "";
      stringArray0[0] = "";
      JSONObject jSONObject0 = new JSONObject(boolean0, stringArray0);
      jSONObject0.toJSONArray((JSONArray) null);
      jSONObject0.put("0X(Q,C%!;Et$K", false);
      try { 
        jSONObject0.getBoolean("}dq#\"a+n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"}dq#\\\"a+n\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject.testValidity(double0);
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.accumulate("", "");
      Double.isFinite((-2826.0966340730624));
      JSONObject jSONObject2 = jSONObject0.put("Xr2uy 4x", 13);
      jSONObject2.toString();
      JSONObject jSONObject3 = jSONObject2.put("Xr2uy 4x", true);
      HashMap<Double, Float> hashMap0 = new HashMap<Double, Float>();
      JSONObject jSONObject4 = jSONObject3.put("", (Map) hashMap0);
      jSONObject0.optString("gettoHexString", "] is not a Boolean.");
      Object object0 = new Object();
      jSONObject0.putOpt("", jSONObject2);
      jSONObject1.optDouble("H*9g");
      jSONObject1.optInt("9|d;CS0Xr");
      jSONObject3.toString();
      jSONObject4.optString(": ");
      JSONObject jSONObject5 = jSONObject1.put("9|d;CS0Xr", 2319.3343);
      assertSame(jSONObject5, jSONObject2);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2047854169135204
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object object0 = new Object();
      JSONObject.valueToString(object0, 91, 2534);
      JSONArray jSONArray0 = new JSONArray();
      String string0 = "";
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      JSONObject jSONObject1 = jSONObject0.put("\"java.lang.Object@0000000001\"", 91);
      jSONArray0.optBoolean(91);
      try { 
        jSONObject1.getDouble("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7188069414600697
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONObject.testValidity("\"`f~uBsq>mCMa[4");
      Object object0 = null;
      JSONObject.valueToString((Object) null, (-1718), (-1718));
      Float float0 = new Float((double) (-1718));
      JSONObject.valueToString(float0, 523, 91);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "java.lang.Float@0000000001";
      String string0 = "";
      stringArray0[1] = "";
      JSONObject jSONObject0 = new JSONObject((Object) "");
      Short short0 = new Short((short) (-3038));
      jSONObject0.append("java.lang.Float@0000000001", short0);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.4698367878490055
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("KwRwNt@", "KwRwNt@");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.names();
      jSONObject0.toString(20);
      JSONObject.getNames((Object) "{\"java.lang.String@0000000004\": \"java.lang.String@0000000004\"}");
      jSONObject0.optDouble("{\"java.lang.String@0000000004\": \"java.lang.String@0000000004\"}");
      jSONObject0.optString("Kc2bT(HXL");
      Object object0 = new Object();
      JSONObject jSONObject1 = jSONObject0.putOpt("", object0);
      jSONObject1.optBoolean("2vav", true);
      try { 
        jSONObject0.getJSONArray("$Q^R_LNf}U_6,");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"$Q^R_LNf}U_6,\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSONObject.testValidity("\"`f~uBsq>mCMa[4");
      JSONObject.valueToString((Object) null, (-1718), (-1718));
      Float float0 = new Float((double) (-1718));
      JSONObject.valueToString(float0, 523, 91);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "java.lang.Float@0000000001";
      stringArray0[1] = "";
      stringArray0[2] = "null";
      stringArray0[3] = "java.lang.Float@0000000001";
      stringArray0[4] = "T dZl";
      JSONObject jSONObject0 = new JSONObject("java.lang.Float@0000000001", stringArray0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject.numberToString(float0);
      JSONObject.numberToString(float0);
      JSONObject.getNames(jSONObject1);
      JSONObject.quote("jo7");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      jSONObject1.put("java.lang.Float@0000000001", (Collection) linkedList0);
      jSONObject0.put("\"`f~uBsq>mCMa[4", 0L);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "KwRwNt@";
      stringArray0[1] = "V#4\"ZS";
      Boolean boolean0 = new Boolean(true);
      Boolean.logicalOr(true, false);
      JSONObject.valueToString(boolean0, 23, 117);
      JSONObject jSONObject0 = new JSONObject();
      assertEquals(0, jSONObject0.length());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.271899083808096
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "KwRwNt@";
      HashMap<Float, Float> hashMap0 = new HashMap<Float, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      String string0 = "}HElN7";
      try { 
        jSONObject0.getLong("}HElN7");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"}HElN7\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6417347121875214
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "KwRwNt@";
      HashMap<Float, Float> hashMap0 = new HashMap<Float, Float>();
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONArray jSONArray1 = new JSONArray((Collection) linkedList0);
      jSONArray1.put(1065.4997);
      Long long0 = new Long((-1L));
      JSONObject jSONObject0 = new JSONObject(linkedList0, stringArray0);
      jSONObject0.toJSONArray(jSONArray0);
      String[] stringArray1 = JSONObject.getNames(jSONObject0);
      assertNull(stringArray1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject.testValidity(double0);
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.accumulate("", "");
      Double.isFinite((-2826.0966340730624));
      JSONObject jSONObject2 = jSONObject0.put("", 13);
      jSONObject2.toString();
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      Float float0 = null;
      Integer integer0 = new Integer(13);
      hashMap0.replace((Float) null, integer0, integer0);
      jSONObject2.optLong("");
      jSONObject1.optDouble("{\"java.lang.String@0000000002\":java.lang.Integer@0000000003}");
      try { 
        jSONObject2.put((String) null, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>)hashMap0.entrySet();
      JSONArray jSONArray0 = new JSONArray((Collection) set0);
      jSONArray0.put(1065.4997);
      Long long0 = new Long(1L);
      String string0 = JSONObject.quote("]MtvcD%{3_`xEPd$");
      assertEquals("\"]MtvcD%{3_`xEPd$\"", string0);
      
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      boolean boolean0 = jSONObject0.isNull("JSONObject[");
      assertTrue(boolean0);
      
      jSONObject0.length();
      long long1 = jSONObject0.optLong("JSONObject[", 1L);
      assertEquals(1L, long1);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1240357221909014
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.testValidity((Object) null);
      try { 
        jSONObject0.getJSONObject("*bk/bJ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"*bk/bJ\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getJSONObject("JSONObject[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"JSONObject[\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.512377180261958
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Long long0 = new Long(0L);
      JSONObject jSONObject0 = new JSONObject(long0);
      Double double0 = new Double((-2370.852));
      Double.sum((-614.355427), (-133.1946413774631));
      JSONObject.getNames((Object) double0);
      try { 
        jSONObject0.getInt("3%(tF0?t$/f%`N:0");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"3%(tF0?t$/f%`N:0\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = "JSONObject[";
      Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>)hashMap0.entrySet();
      JSONArray jSONArray0 = new JSONArray((Collection) set0);
      jSONArray0.put(1065.4997);
      Long long0 = new Long(1L);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "JSONObject[";
      JSONObject jSONObject0 = new JSONObject(long0, stringArray0);
      jSONObject0.has("JSONObject[");
      try { 
        jSONObject0.getInt("max");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"max\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>)hashMap0.entrySet();
      JSONArray jSONArray0 = new JSONArray((Collection) set0);
      Long long0 = new Long(1L);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "JSONObject[";
      JSONObject jSONObject0 = new JSONObject(long0, stringArray0);
      jSONObject0.toJSONArray(jSONArray0);
      JSONObject.getNames(jSONObject0);
      JSONObject jSONObject1 = jSONObject0.optJSONObject("JSONObject[");
      assertNull(jSONObject1);
  }
}
