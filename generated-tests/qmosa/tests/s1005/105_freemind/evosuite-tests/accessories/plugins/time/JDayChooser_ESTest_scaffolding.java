/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Aug 24 09:36:10 GMT 2018
 */

package accessories.plugins.time;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class JDayChooser_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "accessories.plugins.time.JDayChooser"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/ubuntu/evosuite_readability_gen/projects/105_freemind"); 
    java.lang.System.setProperty("user.home", "/home/ubuntu"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "ubuntu"); 
    java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JDayChooser_ESTest_scaffolding.class.getClassLoader() ,
      "freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog",
      "freemind.modes.mindmapmode.actions.NodeHookAction",
      "freemind.modes.mindmapmode.actions.SetLinkByTextFieldAction",
      "freemind.modes.mindmapmode.actions.NodeBackgroundColorAction",
      "org.apache.crimson.tree.DomEx",
      "org.apache.crimson.tree.DataNode",
      "accessories.plugins.time.JDayChooser",
      "org.apache.fop.pdf.PDFLink",
      "freemind.controller.NodeMouseMotionListener",
      "org.apache.batik.svggen.AbstractSVGConverter",
      "freemind.modes.browsemode.BrowsePopupMenu",
      "org.apache.fop.pdf.PDFState",
      "org.apache.crimson.tree.NodeEx",
      "org.apache.batik.css.parser.Scanner",
      "freemind.modes.mindmapmode.MindMapMapModel",
      "freemind.controller.MenuItemSelectedListener",
      "org.jibx.runtime.IMarshallable",
      "org.openstreetmap.gui.jmapviewer.interfaces.TileSource",
      "freemind.view.mindmapview.MapView",
      "freemind.extensions.NodeHook",
      "freemind.controller.MapMouseMotionListener$MapMouseMotionReceiver",
      "org.openstreetmap.gui.jmapviewer.interfaces.JMapViewerEventListener",
      "plugins.map.MapDialog$ResultTableModel",
      "freemind.modes.mindmapmode.actions.FontSizeAction",
      "accessories.plugins.time.JSpinField$1",
      "org.openstreetmap.gui.jmapviewer.JMapViewer",
      "org.hsqldb.jdbc.jdbcPreparedStatement",
      "freemind.controller.MenuItemEnabledListener",
      "freemind.modes.filemode.FileNodeModel",
      "org.apache.batik.dom.svg.SVGTextContent",
      "freemind.view.mindmapview.attributeview.AttributePopupMenu",
      "org.apache.batik.css.parser.CSSSACMediaList",
      "freemind.modes.mindmapmode.actions.IconAction",
      "org.apache.batik.svggen.SVGAlphaComposite",
      "org.apache.batik.svggen.SVGTransform$1",
      "freemind.main.XMLElement",
      "freemind.modes.mindmapmode.actions.RedoAction",
      "freemind.modes.FreeMindFileDialog",
      "org.jibx.runtime.IUnmarshallable",
      "org.openstreetmap.gui.jmapviewer.Tile",
      "org.apache.batik.gvt.filter.GraphicsNodeRable",
      "org.apache.batik.svggen.SVGCustomComposite",
      "freemind.controller.NodeMotionListener$NodeMotionAdapter",
      "org.apache.batik.gvt.TextNode",
      "org.apache.batik.css.parser.ExtendedParser",
      "org.openstreetmap.gui.jmapviewer.interfaces.TileLoaderListener",
      "freemind.modes.IconInformation",
      "org.openstreetmap.gui.jmapviewer.interfaces.Attributed",
      "freemind.modes.ControllerAdapter$ControllerPopupMenuListener",
      "org.apache.batik.css.parser.Parser",
      "org.apache.batik.gvt.RootGraphicsNode",
      "org.apache.batik.svggen.SVGGraphicObjectConverter",
      "freemind.modes.mindmapmode.actions.ItalicAction",
      "freemind.modes.mindmapmode.actions.NewChildAction",
      "freemind.modes.MindMapLink",
      "org.apache.crimson.tree.AttributeNode1",
      "org.apache.batik.ext.awt.g2d.TransformType",
      "org.apache.fop.fonts.FontMetrics",
      "freemind.modes.MindMapLine",
      "freemind.controller.actions.generated.instance.NodeAction",
      "org.openstreetmap.gui.jmapviewer.interfaces.TileLoader",
      "freemind.modes.mindmapmode.actions.HookAction",
      "freemind.controller.MapModuleManager",
      "org.apache.batik.svggen.SVGDescriptor",
      "org.apache.fop.pdf.PDFPattern",
      "org.hsqldb.lib.FileAccess",
      "org.apache.batik.bridge.AbstractGraphicsNodeBridge",
      "freemind.modes.mindmapmode.MindMapController",
      "freemind.modes.mindmapmode.actions.DeleteChildAction",
      "org.apache.avalon.framework.CascadingThrowable",
      "plugins.map.Registration",
      "org.apache.avalon.framework.CascadingRuntimeException",
      "freemind.modes.browsemode.BrowseController",
      "org.apache.batik.gvt.PatternPaint",
      "freemind.modes.mindmapmode.actions.CloudAction",
      "freemind.modes.MindIcon",
      "org.apache.batik.svggen.SVGComposite",
      "freemind.modes.Mode",
      "org.apache.fop.pdf.PDFPathPaint",
      "freemind.modes.ModeController$NodeLifetimeListener",
      "org.apache.batik.svggen.SVGPolygon",
      "freemind.modes.attributes.NodeAttributeTableModel",
      "org.apache.batik.util.XMLConstants",
      "org.apache.batik.ext.awt.MultipleGradientPaint",
      "accessories.plugins.time.JMonthChooser$1",
      "freemind.main.ExampleFileFilter",
      "org.openstreetmap.gui.jmapviewer.JMapController",
      "freemind.modes.mindmapmode.actions.JoinNodesAction",
      "freemind.controller.actions.generated.instance.MenuStructure",
      "org.apache.batik.ext.awt.image.renderable.ClipRable",
      "freemind.controller.actions.generated.instance.NewNodeAction",
      "freemind.modes.mindmapmode.actions.BoldAction",
      "org.hsqldb.jdbc.jdbcCallableStatement",
      "org.apache.batik.gvt.event.GraphicsNodeChangeEvent",
      "freemind.modes.mindmapmode.MindMapController$NewNodeCreator",
      "freemind.modes.browsemode.BrowseMapModel",
      "org.apache.batik.svggen.DOMTreeManager",
      "org.apache.batik.bridge.AbstractSVGBridge",
      "freemind.modes.MapAdapter",
      "org.apache.batik.dom.svg.SVGContext",
      "freemind.main.FreeMindApplet",
      "org.apache.batik.svggen.SVGColor",
      "org.apache.batik.util.SVGConstants",
      "freemind.modes.ModeController$NodeSelectionListener",
      "freemind.modes.mindmapmode.MindMapToolBar",
      "freemind.controller.NodeDropListener",
      "freemind.controller.StructuredMenuHolder$MenuEventSupplier",
      "freemind.modes.mindmapmode.actions.PasteAction",
      "freemind.main.FreeMindMain",
      "org.apache.batik.bridge.BridgeContext",
      "org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer",
      "org.apache.batik.svggen.SVGGeneratorContext",
      "freemind.controller.MapMouseMotionListener",
      "freemind.preferences.FreemindPropertyListener",
      "org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute",
      "org.apache.batik.css.parser.ParseException",
      "freemind.modes.mindmapmode.listeners.MindMapNodeMotionListener",
      "org.hsqldb.jdbc.jdbcConnection",
      "freemind.modes.HistoryInformation",
      "org.apache.crimson.tree.XmlDocument$Catalog",
      "freemind.modes.mindmapmode.actions.NodeColorBlendAction",
      "freemind.controller.LastOpenedList",
      "freemind.modes.filemode.FileController",
      "org.apache.fop.pdf.PDFPage",
      "freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog",
      "freemind.modes.mindmapmode.hooks.MindMapHookAdapter",
      "freemind.modes.mindmapmode.actions.CompoundActionHandler",
      "freemind.modes.mindmapmode.actions.MindMapActions",
      "org.apache.batik.svggen.SVGLine",
      "freemind.controller.FreeMindPopupMenu",
      "org.apache.batik.ext.awt.RadialGradientPaint",
      "freemind.modes.mindmapmode.actions.FreemindAction",
      "org.apache.crimson.tree.DocumentEx",
      "org.apache.batik.svggen.SVGPath",
      "freemind.modes.mindmapmode.actions.ChangeArrowsInArrowLinkAction",
      "freemind.modes.common.plugins.MapNodePositionHolderBase",
      "plugins.map.MapNodePositionHolder$MapNodePositionListener",
      "freemind.modes.mindmapmode.MindMapController$MindMapControllerPlugin",
      "org.apache.batik.svggen.DefaultStyleHandler",
      "org.apache.batik.util.CSSConstants",
      "freemind.modes.attributes.AttributeController",
      "org.apache.batik.svggen.GenericImageHandler",
      "freemind.controller.NodeDragListener",
      "freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController",
      "freemind.controller.MapModuleManager$MapModuleChangeObserver",
      "org.apache.batik.bridge.ErrorConstants",
      "freemind.controller.filter.FilterController",
      "org.apache.batik.svggen.ExtensionHandler",
      "org.apache.batik.gvt.CanvasGraphicsNode",
      "freemind.modes.FreeMindFileDialog$DirectoryResultListener",
      "org.apache.crimson.tree.NamespacedNode",
      "freemind.modes.mindmapmode.actions.MoveNodeAction",
      "freemind.modes.mindmapmode.actions.NodeActorXml",
      "org.apache.fop.svg.PDFGraphics2D",
      "freemind.modes.mindmapmode.actions.CloudColorAction",
      "org.apache.fop.pdf.PDFColor",
      "org.apache.crimson.tree.ParentNode",
      "org.apache.batik.svggen.SVGGraphics2DIOException",
      "accessories.plugins.time.JMonthChooser",
      "freemind.modes.mindmapmode.actions.UseRichFormattingAction",
      "freemind.extensions.HookRegistration",
      "freemind.controller.NodeMotionListener",
      "freemind.modes.browsemode.BrowseXMLElement",
      "freemind.controller.Controller$LocalLinkConverter",
      "freemind.modes.mindmapmode.actions.MindMapActions$MouseWheelEventHandler",
      "freemind.modes.mindmapmode.actions.NodeBackgroundColorAction$RemoveNodeBackgroundColorAction",
      "org.apache.fop.image.JpegImage",
      "accessories.plugins.time.JDayChooser$1",
      "org.apache.batik.bridge.SVGTextElementBridge",
      "freemind.controller.ZoomListener",
      "freemind.modes.mindmapmode.actions.xml.AbstractXmlAction",
      "freemind.modes.mindmapmode.actions.UndoAction",
      "org.hsqldb.Result",
      "freemind.controller.MenuBar",
      "freemind.modes.mindmapmode.actions.UnderlinedAction",
      "freemind.controller.actions.generated.instance.MapWindowConfigurationStorage",
      "org.apache.crimson.tree.ElementNode",
      "org.apache.batik.svggen.SVGLinearGradient",
      "freemind.extensions.NodeHookAdapter",
      "freemind.modes.mindmapmode.MindMapArrowLinkModel",
      "org.apache.batik.ext.awt.g2d.AbstractGraphics2D",
      "freemind.modes.mindmapmode.MindMapPopupMenu",
      "freemind.modes.mindmapmode.actions.PasteAsPlainTextAction",
      "org.apache.fop.image.FopImage",
      "freemind.view.mindmapview.MapView$ScrollPane",
      "org.apache.batik.svggen.DefaultErrorHandler",
      "freemind.modes.LinkAdapter",
      "freemind.controller.NodeMouseMotionListener$NodeMouseMotionObserver",
      "freemind.controller.StructuredMenuHolder",
      "freemind.modes.viewmodes.ViewControllerAdapter",
      "org.apache.batik.bridge.BridgeUpdateHandler",
      "freemind.modes.mindmapmode.actions.ImportFolderStructureAction",
      "org.apache.fop.pdf.PDFAnnotList",
      "freemind.modes.mindmapmode.actions.NodeUpAction",
      "freemind.modes.mindmapmode.actions.SelectAllAction",
      "org.apache.batik.css.engine.CSSEngineEvent",
      "org.apache.batik.svggen.SVGTransform",
      "freemind.modes.ModeController",
      "freemind.modes.mindmapmode.MindMapController$MindMapFilter",
      "org.apache.batik.ext.awt.image.codec.ImageEncoder",
      "freemind.modes.mindmapmode.actions.EdgeColorAction",
      "org.apache.fop.svg.PDFDocumentGraphics2D",
      "org.apache.batik.gvt.event.GraphicsNodeEvent",
      "org.apache.crimson.tree.ElementNode2",
      "freemind.modes.MindMap$MapSourceChangedObserver",
      "freemind.modes.LineAdapter",
      "freemind.modes.mindmapmode.actions.EdgeStyleAction",
      "freemind.controller.actions.generated.instance.DeleteNodeAction",
      "freemind.modes.schememode.SchemeToolBar",
      "org.apache.batik.svggen.SVGCustomBufferedImageOp",
      "org.apache.crimson.util.MessageCatalog",
      "freemind.extensions.MindMapHook$PluginBaseClassSearcher",
      "org.apache.batik.svggen.SVGTexturePaint",
      "org.hsqldb.jdbc.jdbcStatement",
      "freemind.controller.actions.generated.instance.Place",
      "accessories.plugins.time.JYearChooser",
      "org.apache.fop.svg.GraphicsConfiguration",
      "freemind.modes.mindmapmode.actions.xml.ActionFactory",
      "org.apache.batik.svggen.DefaultExtensionHandler",
      "org.apache.batik.svggen.SVGCustomPaint",
      "freemind.modes.mindmapmode.actions.UsePlainTextAction",
      "freemind.modes.attributes.AttributeTableModel",
      "freemind.modes.mindmapmode.actions.SingleNodeOperation",
      "plugins.map.MapDialog",
      "org.apache.batik.ext.awt.g2d.TransformStackElement",
      "org.apache.batik.bridge.GraphicsNodeBridge",
      "freemind.modes.MindMapArrowLink",
      "freemind.view.mindmapview.NodeViewVisitor",
      "freemind.modes.mindmapmode.actions.xml.ActionHandler",
      "freemind.modes.MindMapEdge",
      "org.apache.batik.svggen.SVGIDGenerator",
      "freemind.modes.mindmapmode.actions.xml.ActorXml",
      "freemind.controller.MapModuleManager$MapTitleChangeListener",
      "org.apache.batik.svggen.SimpleImageHandler",
      "org.apache.batik.svggen.ErrorHandler",
      "freemind.modes.FreeMindAwtFileDialog",
      "org.apache.avalon.framework.activity.Initializable",
      "org.apache.batik.svggen.SVGConvolveOp",
      "org.openstreetmap.gui.jmapviewer.events.JMVCommandEvent",
      "org.apache.fop.pdf.PDFStream",
      "org.apache.batik.ext.awt.g2d.TransformStackElement$5",
      "org.apache.batik.ext.awt.g2d.TransformStackElement$3",
      "freemind.modes.mindmapmode.actions.xml.ActionPair",
      "org.apache.batik.ext.awt.g2d.TransformStackElement$4",
      "org.apache.batik.ext.awt.g2d.TransformStackElement$1",
      "org.apache.batik.ext.awt.g2d.TransformStackElement$2",
      "org.apache.crimson.tree.XmlDocument$EntityRefNode",
      "org.apache.batik.svggen.SVGEllipse",
      "freemind.modes.browsemode.BrowseToolBar",
      "freemind.modes.mindmapmode.actions.EdgeWidthAction",
      "freemind.modes.mindmapmode.actions.RevertAction",
      "org.apache.crimson.tree.XmlDocument$ExtWriteContext",
      "freemind.modes.MindMapNode",
      "freemind.extensions.PermanentNodeHook",
      "plugins.map.MapNodePositionHolder",
      "freemind.controller.MapMouseWheelListener",
      "freemind.modes.schememode.SchemeMode",
      "freemind.controller.FreeMindToolBar",
      "freemind.modes.mindmapmode.attributeactors.AttributesListener",
      "accessories.plugins.time.JDayChooser$DecoratorButton",
      "org.apache.crimson.tree.XmlWritable",
      "freemind.view.mindmapview.NodeView",
      "org.apache.crimson.tree.CommentNode",
      "freemind.modes.XMLElementAdapter",
      "org.apache.crimson.tree.ElementEx",
      "freemind.controller.MapModuleManager$MapTitleContributor",
      "freemind.modes.common.CommonNodeKeyListener$EditHandler",
      "org.apache.crimson.tree.TextNode",
      "freemind.modes.mindmapmode.actions.CutAction",
      "freemind.controller.MainToolBar",
      "org.apache.batik.dom.events.AbstractEvent",
      "freemind.modes.mindmapmode.actions.CopyAction",
      "org.apache.batik.css.engine.CSSContext",
      "org.apache.fop.image.AbstractFopImage",
      "freemind.controller.filter.Filter",
      "org.apache.fop.pdf.AbstractPDFStream",
      "freemind.modes.attributes.Attribute",
      "org.apache.batik.svggen.SVGRescaleOp",
      "org.apache.batik.svggen.StyleHandler",
      "freemind.modes.mindmapmode.actions.RemoveAllIconsAction",
      "freemind.view.MapModule",
      "org.apache.crimson.tree.CDataNode",
      "freemind.modes.filemode.FilePopupMenu",
      "org.apache.batik.svggen.ImageHandler",
      "freemind.modes.mindmapmode.actions.ChangeArrowLinkEndPoints",
      "freemind.extensions.HookAdapter",
      "freemind.modes.mindmapmode.actions.ImportExplorerFavoritesAction",
      "freemind.controller.filter.FilterToolbar",
      "org.apache.batik.svggen.SVGGraphics2D",
      "freemind.main.XMLParseException",
      "freemind.modes.mindmapmode.actions.RemoveIconAction",
      "freemind.controller.actions.generated.instance.XmlAction",
      "freemind.controller.NodeKeyListener",
      "freemind.modes.mindmapmode.actions.SelectBranchAction",
      "org.apache.batik.svggen.ImageHandlerBase64Encoder",
      "freemind.common.TextTranslator",
      "plugins.map.Registration$NodeVisibilityListener",
      "org.apache.fop.fonts.Font",
      "org.apache.fop.svg.PDFGraphicsConfiguration",
      "org.apache.batik.svggen.AbstractSVGFilterConverter",
      "freemind.modes.mindmapmode.actions.ToggleChildrenFoldedAction",
      "plugins.map.JCursorMapViewer",
      "accessories.plugins.time.JSpinField",
      "freemind.controller.actions.generated.instance.WindowConfigurationStorage",
      "freemind.modes.mindmapmode.actions.AddArrowLinkAction",
      "org.apache.batik.i18n.Localizable",
      "org.apache.batik.gvt.CompositeGraphicsNode",
      "org.apache.batik.svggen.DefaultImageHandler",
      "freemind.modes.NodeDownAction",
      "org.apache.batik.svggen.SVGRectangle",
      "freemind.modes.common.actions.FindAction",
      "freemind.modes.ArrowLinkAdapter",
      "org.jibx.runtime.JiBXException",
      "freemind.modes.mindmapmode.actions.RemoveArrowLinkAction",
      "freemind.modes.common.actions.FindAction$FindNextAction",
      "org.apache.batik.gvt.GraphicsNode",
      "org.apache.crimson.tree.AttributeNode",
      "freemind.extensions.HookFactory",
      "org.apache.batik.bridge.Bridge",
      "freemind.modes.filemode.FileMapModel",
      "org.apache.crimson.tree.XmlDocument$DocFragNode",
      "freemind.controller.actions.generated.instance.EditNoteToNodeAction",
      "org.apache.crimson.tree.ElementFactory",
      "org.hsqldb.persist.HsqlProperties",
      "freemind.modes.mindmapmode.actions.NodeColorAction",
      "org.apache.batik.ext.awt.LinearGradientPaint",
      "freemind.modes.mindmapmode.actions.NodeGeneralAction",
      "freemind.modes.mindmapmode.actions.EditAction",
      "freemind.modes.mindmapmode.actions.ToggleFoldedAction",
      "org.apache.crimson.tree.NodeBase",
      "org.apache.batik.svggen.SVGBasicStroke",
      "freemind.modes.mindmapmode.actions.ApplyPatternAction",
      "plugins.map.FreeMindMapController$CursorPositionListener",
      "org.hsqldb.SessionInterface",
      "freemind.modes.NodeAdapter",
      "freemind.modes.FreeMindJFileDialog",
      "org.apache.batik.svggen.SVGConverter",
      "freemind.controller.actions.generated.instance.TextNodeAction",
      "org.hsqldb.types.JavaObject",
      "freemind.modes.mindmapmode.actions.FontFamilyAction",
      "freemind.modes.mindmapmode.actions.ColorArrowLinkAction",
      "org.apache.batik.svggen.ErrorConstants",
      "freemind.extensions.PermanentNodeHookAdapter",
      "freemind.modes.mindmapmode.MindMapNodeModel",
      "freemind.controller.filter.FilterInfo",
      "org.apache.batik.ext.awt.g2d.GraphicContext",
      "org.apache.batik.svggen.SVGPaint",
      "org.apache.fop.pdf.PDFResourceContext",
      "org.apache.fop.pdf.PDFObject",
      "plugins.map.FreeMindMapController",
      "freemind.modes.MindMapLinkRegistry",
      "org.apache.batik.gvt.AbstractGraphicsNode",
      "org.openstreetmap.gui.jmapviewer.interfaces.MapMarker",
      "org.hsqldb.types.Binary",
      "org.apache.crimson.tree.XmlDocument",
      "freemind.controller.Controller",
      "freemind.modes.ControllerAdapter",
      "freemind.extensions.ModeControllerHookAdapter",
      "org.apache.batik.svggen.SVGLookupOp",
      "org.apache.batik.svggen.SVGGraphics2DRuntimeException",
      "org.apache.batik.svggen.SVGBufferedImageOp",
      "org.apache.batik.svggen.SVGFilterConverter",
      "freemind.modes.common.GotoLinkNodeAction",
      "org.apache.batik.util.Base64EncoderStream",
      "org.apache.batik.gvt.filter.Mask",
      "org.apache.batik.gvt.Selectable",
      "org.apache.batik.ext.awt.image.renderable.Filter",
      "freemind.extensions.ModeControllerHook",
      "org.apache.batik.svggen.SVGGraphicContextConverter",
      "freemind.modes.MapAdapter$FileChangeInspectorTimerTask",
      "freemind.modes.MindMapCloud",
      "org.hsqldb.HsqlException",
      "freemind.controller.actions.generated.instance.Pattern",
      "org.apache.batik.svggen.SVGArc",
      "org.apache.crimson.tree.XmlWriteContext",
      "org.apache.batik.dom.events.DOMMutationEvent",
      "accessories.plugins.time.TableSorter",
      "freemind.modes.mindmapmode.actions.AddLocalLinkAction",
      "plugins.map.MapDialog$CloseAction",
      "freemind.extensions.MindMapHook",
      "org.apache.batik.gvt.text.TextPath",
      "freemind.modes.MindMap",
      "org.apache.fop.pdf.PDFImage",
      "freemind.modes.mindmapmode.actions.NodeStyleAction",
      "org.apache.crimson.tree.PINode",
      "org.apache.batik.gvt.text.TextPaintInfo",
      "org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation",
      "org.hsqldb.Session",
      "org.apache.avalon.framework.configuration.Configurable",
      "org.apache.batik.svggen.SVGShape",
      "org.apache.batik.svggen.SVGSyntax",
      "freemind.modes.mindmapmode.MindMapXMLElement"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("java.awt.event.ContainerListener", false, JDayChooser_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.awt.event.HierarchyListener", false, JDayChooser_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JDayChooser_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "accessories.plugins.time.JDayChooser",
      "accessories.plugins.time.JDayChooser$DecoratorButton",
      "accessories.plugins.time.JDayChooser$1",
      "org.hsqldb.persist.HsqlProperties",
      "org.hsqldb.jdbc.jdbcConnection",
      "org.apache.batik.ext.awt.g2d.AbstractGraphics2D",
      "org.apache.fop.svg.PDFGraphics2D",
      "org.apache.fop.svg.PDFDocumentGraphics2D",
      "accessories.plugins.time.JSpinField",
      "accessories.plugins.time.JYearChooser",
      "accessories.plugins.time.JSpinField$1",
      "freemind.modes.ControllerAdapter",
      "freemind.modes.viewmodes.ViewControllerAdapter",
      "freemind.modes.browsemode.BrowseController",
      "freemind.modes.ControllerAdapter$ControllerPopupMenuListener",
      "freemind.modes.Mode",
      "freemind.modes.browsemode.BrowseMode",
      "freemind.modes.mindmapmode.MindMapController",
      "org.hsqldb.lib.FileUtil",
      "org.hsqldb.DatabaseURL",
      "org.hsqldb.jdbc.Util",
      "org.hsqldb.store.BaseHashMap",
      "org.hsqldb.lib.HashMap",
      "org.hsqldb.store.HashIndex",
      "org.hsqldb.lib.BaseList",
      "org.hsqldb.lib.HsqlArrayList",
      "org.hsqldb.resources.BundleHandler",
      "org.hsqldb.Trace",
      "org.hsqldb.HsqlException",
      "org.apache.batik.svggen.SVGGraphics2D",
      "org.apache.batik.svggen.SVGGeneratorContext",
      "org.apache.batik.svggen.SVGIDGenerator",
      "org.apache.batik.svggen.DefaultExtensionHandler",
      "org.apache.batik.svggen.DefaultImageHandler",
      "org.apache.batik.svggen.ImageHandlerBase64Encoder",
      "org.apache.batik.svggen.SimpleImageHandler",
      "org.apache.batik.svggen.DefaultStyleHandler",
      "org.apache.batik.svggen.DefaultErrorHandler",
      "org.apache.batik.ext.awt.g2d.GraphicContext",
      "org.apache.batik.svggen.SVGGraphicObjectConverter",
      "org.apache.batik.svggen.SVGShape",
      "org.apache.batik.svggen.SVGArc",
      "org.apache.batik.svggen.SVGEllipse",
      "org.apache.batik.svggen.SVGLine",
      "org.apache.batik.svggen.SVGPath",
      "org.apache.batik.svggen.SVGPolygon",
      "org.apache.batik.svggen.SVGRectangle",
      "org.apache.batik.svggen.DOMTreeManager",
      "org.apache.batik.svggen.AbstractSVGFilterConverter",
      "org.apache.batik.svggen.SVGBufferedImageOp",
      "org.apache.batik.svggen.SVGLookupOp",
      "org.apache.batik.svggen.SVGRescaleOp",
      "org.apache.batik.svggen.SVGConvolveOp",
      "org.apache.batik.svggen.SVGCustomBufferedImageOp",
      "org.apache.batik.svggen.SVGGraphicContextConverter",
      "org.apache.batik.svggen.AbstractSVGConverter",
      "org.apache.batik.svggen.SVGTransform",
      "org.apache.batik.svggen.SVGPaint",
      "org.apache.batik.svggen.SVGLinearGradient",
      "org.apache.batik.svggen.SVGTexturePaint",
      "org.apache.batik.svggen.SVGCustomPaint",
      "org.apache.batik.svggen.SVGColor",
      "org.apache.batik.svggen.SVGBasicStroke",
      "org.apache.batik.svggen.SVGComposite",
      "org.apache.batik.svggen.SVGAlphaComposite",
      "org.apache.xml.serializer.SerializerBase",
      "org.apache.xml.serializer.SecuritySupport12",
      "org.apache.xml.serializer.SecuritySupport",
      "org.apache.xml.serializer.SecuritySupport12$4",
      "org.apache.xml.serializer.ToStream",
      "org.apache.xml.serializer.ToHTMLStream$Trie",
      "org.apache.xml.serializer.ToHTMLStream$Trie$Node",
      "org.apache.xml.serializer.ElemDesc",
      "org.apache.xml.serializer.utils.StringToIntTable",
      "org.apache.xml.serializer.ToHTMLStream",
      "org.apache.xml.serializer.AttributesImplSerializer",
      "org.apache.xml.serializer.ElemContext",
      "org.apache.xml.serializer.ToStream$BoolStack",
      "org.apache.xml.serializer.EncodingInfo",
      "org.apache.xml.serializer.CharInfo",
      "org.apache.xml.serializer.CharInfo$1",
      "org.apache.xml.serializer.CharInfo$CharKey",
      "org.apache.xml.serializer.NamespaceMappings",
      "org.apache.xml.serializer.NamespaceMappings$Stack",
      "org.apache.xml.serializer.NamespaceMappings$MappingRecord",
      "accessories.plugins.time.JMonthChooser",
      "accessories.plugins.time.JMonthChooser$1",
      "org.jibx.runtime.impl.UnmarshallingContext",
      "freemind.modes.schememode.SchemeMode",
      "freemind.extensions.HookAdapter",
      "freemind.extensions.ModeControllerHookAdapter",
      "freemind.extensions.ExportHook",
      "freemind.main.FreeMindMain$VersionInformation",
      "freemind.main.FreeMind",
      "freemind.main.FreeMindApplet",
      "org.hsqldb.Result",
      "org.hsqldb.Session",
      "org.hsqldb.jdbc.jdbcStatement",
      "org.hsqldb.jdbc.jdbcPreparedStatement",
      "org.hsqldb.jdbc.jdbcCallableStatement",
      "org.apache.xml.utils.UnImplNode",
      "org.apache.xalan.templates.ElemTemplateElement",
      "org.apache.xalan.templates.ElemSort",
      "org.apache.xml.res.XMLMessages",
      "org.apache.xpath.res.XPATHMessages",
      "org.apache.xalan.res.XSLMessages",
      "org.apache.xalan.res.XSLTErrorResources",
      "org.apache.xalan.res.XSLTErrorResources_en",
      "org.apache.batik.ext.awt.g2d.TransformStackElement",
      "org.apache.batik.ext.awt.g2d.TransformStackElement$5",
      "org.apache.batik.ext.awt.g2d.TransformType",
      "org.apache.crimson.tree.NodeBase",
      "org.apache.crimson.tree.ParentNode",
      "org.apache.crimson.util.MessageCatalog",
      "org.apache.crimson.tree.XmlDocument$Catalog",
      "org.apache.crimson.tree.XmlDocument",
      "org.apache.crimson.parser.XMLReaderImpl",
      "org.apache.crimson.tree.XmlDocumentBuilder",
      "org.apache.crimson.parser.Parser2$NullHandler",
      "org.apache.crimson.parser.Parser2$Catalog",
      "org.apache.crimson.parser.Parser2",
      "org.apache.crimson.parser.SimpleHashtable",
      "org.apache.crimson.parser.Parser2$DocLocator",
      "org.apache.crimson.parser.AttributesExImpl",
      "org.apache.crimson.parser.Parser2$NameCache",
      "org.apache.crimson.parser.EntityDecl",
      "org.apache.crimson.parser.InternalEntity",
      "org.apache.crimson.parser.SimpleHashtable$Entry",
      "org.apache.crimson.parser.Resolver",
      "org.apache.crimson.parser.InputEntity"
    );
  }
}
