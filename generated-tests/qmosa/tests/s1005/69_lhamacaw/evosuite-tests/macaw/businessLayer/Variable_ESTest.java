/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:15:27 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Set;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      rawVariable0.setCodeBookNumber("|e1PT.T2.%0}");
      rawVariable0.setColumnEnd("variable.alias.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("y#d+;Q");
      ontologyTerm0.setTerm("macaw.system.MacawException");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setCategory("variable.alias.label");
      rawVariable0.setQuestionNumber("");
      rawVariable0.getCategory();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("variable.columnEnd.label");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      UnaryOperator<Variable> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.setSourceVariables(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      assertEquals("variable.columnEnd.label", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.4657359027997248
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.createVariableSummary();
      derivedVariable0.clone();
      derivedVariable0.setAlternativeVariable((Variable) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.4657359027997248
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("variable.label.label");
      rawVariable0.setCleaningStatus("");
      rawVariable0.setCoded(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.form = "variable.label.label";
      ontologyTerm0.setTerm("m +H'{G");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      linkedList0.stream();
      arrayList0.removeAll(linkedList0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setDescription("");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      rawVariable0.setColumnEnd(" .|8aw{&N.-{-8t^NhN");
      rawVariable0.clone();
      Variable.validateFields(rawVariable0);
      rawVariable0.getIdentifier();
      rawVariable0.clone();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getAvailability();
      rawVariable0.setCategory("s|UCU`\"JbCI");
      rawVariable0.setCleaned(true);
      rawVariable0.setNotes("Unknown");
      User user0 = new User();
      User user1 = new User("Unknown", "s|UCU`\"JbCI");
      User.detectFieldChanges(user1, user0, user1);
      user0.setAddressLine1("Unknown");
      user0.setCity("");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setAlias("Unknown");
      rawVariable0.setAlias("s|UCU`\"JbCI");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      rawVariable0.getValueLabels();
      assertEquals("Unknown", rawVariable0.getNotes());
      
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.availability.label";
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("s5PJ00Todjm&,p77tY");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("9h= zF/B|P8*");
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("s5PJ00Todjm&,p77tY", rawVariable0.getAlias());
      
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable1.removeSourceVariable(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      arrayList0.clone();
      derivedVariable0.setCategory("hOupj_Nil!");
      derivedVariable1.setSourceVariables(arrayList0);
      derivedVariable1.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.setIsNewRecord(false);
      derivedVariable1.setAvailability("hOupj_Nil!");
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable1.isCleaned();
      derivedVariable1.getCleaningDescription();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable0.setCodeBookNumber("hOupj_Nil!");
      assertEquals("hOupj_Nil!", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      rawVariable0.setIdentifier((-299));
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable1.setCleaningStatus(".d.c,1g$n");
      rawVariable0.setAlternativeVariable(rawVariable1);
      // Undeclared exception!
      try { 
        rawVariable1.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(false);
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.getDisplayName();
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel0.setMissingValue(false);
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      rawVariable0.setCodeBookNumber("");
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      // Undeclared exception!
      try { 
        arrayList0.subList((-636), (-349));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -636
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("07,D)T|{*wSMol>1%m");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      assertEquals("07,D)T|{*wSMol>1%m", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setQuestionNumber("0");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("Thm <tt/UN%+44Ru!eK");
      String string0 = null;
      supportingDocument0.setFileName("@]XK,2c0Q");
      supportingDocument0.setDescription((String) null);
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User(",Mn{OK+3?", ",Mn{OK+3?");
      user0.setCounty("");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setQuestionNumber("WM8");
      rawVariable0.getAvailability();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("WM8");
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.getDisplayName();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCoded(false);
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User("Unknown", "");
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.getCleaningDescription();
      rawVariable0.getIdentifier();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("ivsZ'R");
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList2);
      rawVariable0.setValueLabels(arrayList0);
      assertEquals("WM8", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.getFilePath();
      rawVariable0.isCleaned();
      rawVariable0.getAlternativeVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.2551105127277413
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "K9E|X\"T";
      derivedVariable0.setCategory("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnEnd("K9E|X\"T");
      derivedVariable1.setColumnEnd("");
      Variable.validateFields(derivedVariable1);
      derivedVariable0.isCleaned();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.setNameSpace("");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      supportingDocument0.setFilePath((String) null);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      derivedVariable1.setIdentifier(0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      derivedVariable1.getCleaningDescription();
      derivedVariable1.setIdentifier(1614);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("K9E|X\"T", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.questionNumber.label";
      rawVariable0.setAlias("user.postCode.label");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setCoded(true);
      rawVariable0.isNewRecord();
      rawVariable0.setQuestionNumber("user.postCode.label");
      rawVariable0.setCleaningDescription((String) null);
      assertTrue(rawVariable0.isCoded());
      
      User user0 = new User("variable.questionNumber.label", "user.postCode.label");
      user0.setStatus((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("i'#!X");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Locale.lookupTag(linkedList0, arrayList1);
      rawVariable0.codeBookNumber = "^mE,^";
      locale0.getExtensionKeys();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setFilePath("\"7s:2u:L*y;8");
      arrayList0.add(supportingDocument0);
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      arrayList0.removeAll(set0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.columnEnd = "1NI";
      derivedVariable0.setAvailability("1NI");
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getAlias();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.3719715799284455
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("IU[*Z");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      linkedList0.stream();
      arrayList0.removeAll(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      ontologyTerm1.setDescription("m +H'{G");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.getYear();
      rawVariable0.setColumnEnd("2#A'w2t|fi_CW");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.clone();
      Variable.validateFields(rawVariable1);
      rawVariable0.getIdentifier();
      rawVariable0.clone();
      // Undeclared exception!
      try { 
        rawVariable1.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.3790925052297367
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.setAlternativeVariable((Variable) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) null);
      derivedVariable0.removeSourceVariables(arrayList0);
      arrayList0.clone();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      derivedVariable1.setNotes("general.fieldValue.blank");
      derivedVariable1.removeSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-3547));
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeSupportingDocument(supportingDocument0);
      rawVariable0.setAvailability("variable.codeBookNumber.label");
      derivedVariable1.addSourceVariable(rawVariable0);
      rawVariable0.getAvailability();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("variable.codeBookNumber.label", rawVariable0.getAvailability());
      
      derivedVariable0.setIsNewRecord(true);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setLabel("Unknown");
      assertEquals("Unknown", derivedVariable2.getAvailability());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.170148321475506
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.clone();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      assertEquals("", derivedVariable0.getForm());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("variable.label.label");
      rawVariable0.setCleaningStatus("");
      rawVariable0.setCoded(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.form = "variable.label.label";
      ontologyTerm0.setTerm("m +H'{G");
      User user0 = new User("", "");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("variable.label.label", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.044804882954829
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.clone();
  }
}
