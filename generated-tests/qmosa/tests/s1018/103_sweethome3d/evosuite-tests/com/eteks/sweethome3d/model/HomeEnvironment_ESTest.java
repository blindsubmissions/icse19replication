/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:16:20 GMT 2018
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoCameraPath();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Unsupported aspect ratio ", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoWidth(33);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      homeEnvironment1.setAllLevelsVisible(true);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setPhotoHeight((-5860));
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment.Property homeEnvironment_Property2 = HomeEnvironment.Property.GROUND_COLOR;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property2, propertyChangeListenerProxy1);
      assertEquals((-5860), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(3601.348F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.getVideoWidth();
      HomeEnvironment.Property.valueOf("SKY_COLOR");
      homeEnvironment1.setWallsAlpha(0.0F);
      homeEnvironment0.getVideoHeight();
      homeEnvironment1.setSubpartSizeUnderLight(240);
      homeEnvironment0.setSkyColor(320);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(3601.348F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getLightColor();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoQuality(453);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setVideoWidth((-1857));
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals((-1393), homeEnvironment0.getVideoHeight());
      assertEquals(13427964, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, (-1.0F), (-1.0F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-284), homeTexture0, (-284), (-284), 814.79F);
      homeEnvironment0.setGroundColor((-284));
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment.Property.values();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      TexturesCategory texturesCategory0 = new TexturesCategory("n1tj*8");
      texturesCategory0.getIndexOfTexture(catalogTexture0);
      catalogTexture0.setCategory(texturesCategory0);
      catalogTexture0.setCategory(texturesCategory0);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("n1tj*8", (PropertyChangeListener) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoHeight((-284));
      homeEnvironment1.setCeillingLightColor(25);
      homeEnvironment0.setSubpartSizeUnderLight(1.5F);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getPhotoWidth();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setCeillingLightColor((-1));
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(320);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoQuality();
      String string0 = ">X41y3!{";
      Class<Integer> class0 = Integer.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "#,M.K+l*bX3zKqQp?", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource #,M.K+l*bX3zKqQp?
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment0.getVideoCameraPath();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("DRAWING_MODE", (Content) null, 1.3333334F, 95);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(95, homeTexture0, 8192, homeTexture0, 8192, 0.0F);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("DRAWING_MODE", propertyChangeListener0);
      homeEnvironment0.setWallsAlpha(0.0F);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setPhotoWidth(0);
      // Undeclared exception!
      try { 
        AspectRatio.valueOf("DRAWING_MODE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.AspectRatio.DRAWING_MODE
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("nGw5BILm", temporaryURLContent0, 11, 11);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(11, homeTexture0, 11, homeTexture0, 0, 0.0F);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(163, homeTexture0, 163, homeTexture0, 0, 11);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "v}^]Ix|;Mf2|$K", homeEnvironment0, "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getSkyTexture();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11, homeEnvironment0.getSkyColor());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(11, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.setPhotoHeight(11053224);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(11053224, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1383330595080277
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSubpartSizeUnderLight(2490.0F);
      int int0 = (-1703);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>(linkedList0);
      homeEnvironment0.setVideoCameraPath(linkedList1);
      homeEnvironment0.setCeillingLightColor((-1703));
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setSkyColor((-1703));
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 3014;
      HomeTexture homeTexture0 = null;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3014, (HomeTexture) null, 0, (-831), 936.6571F);
      homeEnvironment0.setPhotoQuality(3014);
      homeEnvironment0.getPhotoHeight();
      String string0 = "RATIO_16_9";
      String string1 = "GROUND_TEXTURE";
      TexturesCategory texturesCategory0 = new TexturesCategory("GROUND_TEXTURE");
      // Undeclared exception!
      try { 
        texturesCategory0.getTexture(300);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 300, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.setSubpartSizeUnderLight(2370.9001F);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getLightColor();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("PP|#i__c", "", 13684944, "", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("PINHOLE", "PINHOLE", uRLContent0, 320, 320, "Unsupported aspect ratio ", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("PP|#i__c");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.PP|#i__c
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1087), 0, (-1087));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, (String) null, homeEnvironment0, object1);
      propertyChangeEvent0.toString();
      Object object2 = new Object();
      propertyChangeEvent0.setPropagationId(object2);
      homeEnvironment0.setLightColor(0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.DRAWING_MODE;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoQuality(46);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setSubpartSizeUnderLight(3687.8967F);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals(3687.8967F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(2);
      homeEnvironment0.setWallsAlpha(0.0F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoQuality(2);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setPhotoHeight(205);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setVideoWidth((-240));
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, (-1.0F), (-1.0F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-284), homeTexture0, (-284), (-284), 814.79F);
      homeEnvironment0.setGroundColor((-284));
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment.Property.values();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      TexturesCategory texturesCategory0 = new TexturesCategory("n1tj*8");
      texturesCategory0.getIndexOfTexture(catalogTexture0);
      catalogTexture0.setCategory(texturesCategory0);
      catalogTexture0.setCategory(texturesCategory0);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("n1tj*8", (PropertyChangeListener) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoHeight((-284));
      homeEnvironment1.setCeillingLightColor(25);
      homeEnvironment0.setSubpartSizeUnderLight(1.5F);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment1.getSubpartSizeUnderLight();
      homeEnvironment0.setGroundColor(12);
      homeEnvironment1.setSkyColor((-995));
      AspectRatio aspectRatio0 = homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      assertEquals((-995), homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1087), 0, (-1087));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, (String) null, homeEnvironment0, object1);
      propertyChangeEvent0.toString();
      Object object2 = new Object();
      propertyChangeEvent0.setPropagationId(object2);
      homeEnvironment0.setLightColor(0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.DRAWING_MODE;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoQuality(46);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setVideoWidth((-6312));
      assertEquals((-4734), homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoCameraPath();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setVideoWidth(33);
      homeEnvironment0.setLightColor(33);
      homeEnvironment0.setSubpartSizeUnderLight(1.7777778F);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.getSkyTexture();
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment1.setSkyColor(2);
      homeEnvironment1.getVideoWidth();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.getVideoQuality();
      homeEnvironment1.getPhotoHeight();
      HomeEnvironment.DrawingMode.values();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("FILL", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object0 = new Object();
      Object object1 = new Object();
      Camera camera0 = new Camera(670.16986F, 670.16986F, (-1.0F), 670.16986F, 670.16986F, 1.0F);
      Camera camera1 = camera0.clone();
      Camera.convertTimeToTimeZone(0L, "FILL");
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "AL_liJ?jWF", object1, camera1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.LIGHT_COLOR;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setSkyColor(3561);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      HomeEnvironment.DrawingMode.values();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("FILL");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.FILL
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.253857589601352
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, (-1.0F), (-1.0F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-284), homeTexture0, (-284), (-284), 814.79F);
      homeEnvironment0.setGroundColor((-284));
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment.Property.values();
      TexturesCategory texturesCategory0 = new TexturesCategory("n1tj*8");
      texturesCategory0.getIndexOfTexture(catalogTexture0);
      catalogTexture0.setCategory(texturesCategory0);
      catalogTexture0.setCategory(texturesCategory0);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("n1tj*8", (PropertyChangeListener) null);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setPhotoHeight((-284));
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight((-284));
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(25, homeTexture0, 25, homeTexture0, (-5860), (-5860));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoCameraPath();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Unsupported aspect ratio ", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoWidth(33);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setCeillingLightColor(33);
      homeEnvironment1.setSubpartSizeUnderLight((-751.9354F));
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment2.getVideoWidth();
      homeEnvironment1.getPhotoWidth();
      AspectRatio aspectRatio2 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio2);
      homeEnvironment1.setCeillingLightColor((-1282));
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", temporaryURLContent0, 400, 2.0F, "Unsupported aspect ratio ", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, (-1.0F), (-1.0F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-284), homeTexture0, (-284), (-284), 814.79F);
      homeEnvironment0.setGroundColor((-284));
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment.Property.values();
      TexturesCategory texturesCategory0 = new TexturesCategory("n1tj*8");
      texturesCategory0.getIndexOfTexture(catalogTexture0);
      catalogTexture0.setCategory(texturesCategory0);
      catalogTexture0.setCategory(texturesCategory0);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("n1tj*8", (PropertyChangeListener) null);
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoHeight((-284));
      homeEnvironment1.setCeillingLightColor(25);
      homeEnvironment0.setSubpartSizeUnderLight(1.5F);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment1.getSubpartSizeUnderLight();
      homeEnvironment0.setGroundColor(12);
      homeEnvironment1.setSkyColor((-995));
      AspectRatio aspectRatio0 = homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.getGroundTexture();
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment1.getPhotoAspectRatio());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy(";5wX/;", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setCeillingLightColor((-168));
      homeEnvironment0.setVideoFrameRate(2509);
      homeEnvironment0.setSkyColor(2509);
      homeEnvironment0.setVideoFrameRate(2509);
      assertEquals(2509, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(2);
      homeEnvironment0.setWallsAlpha(0.0F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoQuality((-6312));
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setVideoQuality(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setPhotoHeight(205);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setVideoWidth((-231));
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setPhotoWidth((-6312));
      Random.setNextRandom(2831);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      homeEnvironment0.getVideoCameraPath();
      TexturesCategory texturesCategory0 = new TexturesCategory((String) null);
      homeEnvironment0.setPhotoWidth((-1866));
      homeEnvironment0.setVideoWidth((-1866));
      homeEnvironment0.setVideoWidth((-1866));
      assertEquals((-1399), homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = (-2041);
      homeEnvironment0.setSkyColor((-2041));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyColor(2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "F>n");
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.Property.values();
      HomeEnvironment.Property.values();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      Random.setNextRandom((-2041));
      Random.setNextRandom(4);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSubpartSizeUnderLight(2490.0F);
      homeEnvironment0.setCeillingLightColor(12);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setSkyColor(7);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoHeight(7);
      homeEnvironment0.setSubpartSizeUnderLight(12);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment1.getVideoWidth();
      homeEnvironment0.getPhotoWidth();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setCeillingLightColor(46);
      homeEnvironment0.setVideoWidth((-1703));
      homeEnvironment1.setPhotoWidth(320);
      homeEnvironment1.setVideoWidth(8);
      homeEnvironment1.setPhotoWidth((-408));
      System.setCurrentTimeMillis(7);
      homeEnvironment1.setCeillingLightColor(13684944);
      assertEquals(8, homeEnvironment1.getVideoWidth());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.7255503958317204
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      homeEnvironment0.getVideoFrameRate();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoHeight(25);
      homeEnvironment0.setSubpartSizeUnderLight((-1037L));
      homeEnvironment0.getCeillingLightColor();
      AspectRatio aspectRatio0 = homeEnvironment0.getVideoAspectRatio();
      homeEnvironment1.getVideoWidth();
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setCeillingLightColor(13684944);
      homeEnvironment0.setVideoWidth(320);
      homeEnvironment0.setPhotoWidth(13684944);
      homeEnvironment1.setVideoWidth(16);
      homeEnvironment0.setPhotoWidth(13684944);
      HomeEnvironment.Property.values();
      homeEnvironment1.setAllLevelsVisible(true);
      Random.setNextRandom((-1259));
      System.setCurrentTimeMillis(600000L);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.Property.values();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.Property.values();
      homeEnvironment0.setGroundColor(8);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }
}
