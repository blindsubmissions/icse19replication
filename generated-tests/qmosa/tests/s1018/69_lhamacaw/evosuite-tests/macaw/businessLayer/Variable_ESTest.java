/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:00:23 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Consumer;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.ChangeEventType;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.columnStart = "-";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.stream();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setCleaned(true);
      derivedVariable0.setCleaningStatus("1fDZpK");
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.isCleaned();
      derivedVariable0.isNewRecord();
      derivedVariable1.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable1.setCodeBookNumber("variable.year.label");
      // Undeclared exception!
      try { 
        derivedVariable1.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("32;E56l:;2Il");
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setTerm(":BEA _V.,ACN98");
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.questionNumber = ":BEA _V.,ACN98";
      derivedVariable0.notes = ".!%:NH0FmvL";
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      arrayList1.iterator();
      arrayList1.iterator();
      derivedVariable0.addOntologyTerms(arrayList1);
      derivedVariable0.setColumnEnd(".!%:NH0FmvL");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getForm();
      derivedVariable0.getDisplayName();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("supportingDocument.filePath.saveChanges");
      derivedVariable0.setAvailability("");
      assertEquals(".!%:NH0FmvL", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "zH.ZUOn_`?1gi`9,3";
      rawVariable0.setAlias((String) null);
      rawVariable0.setCleaned(false);
      rawVariable0.setAvailability("zH.ZUOn_`?1gi`9,3");
      rawVariable0.isCleaned();
      rawVariable0.setCoded(false);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("mFSHkhem{");
      arrayList0.add(supportingDocument0);
      arrayList0.listIterator();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setCleaningDescription("zH.ZUOn_`?1gi`9,3");
      rawVariable0.setAvailability((String) null);
      rawVariable0.columnEnd = null;
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.add((SupportingDocument) null);
      arrayList1.add((SupportingDocument) null);
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.isNewRecord();
      rawVariable0.setIdentifier(3);
      // Undeclared exception!
      try { 
        Variable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "NMZxpBkOSp~e~";
      derivedVariable0.setForm("NMZxpBkOSp~e~");
      derivedVariable0.setName("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.setAvailability("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setYear("");
      assertEquals("NMZxpBkOSp~e~", derivedVariable0.getForm());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      int int0 = rawVariable0.getIdentifier();
      assertEquals(0, int0);
      
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.setAvailability("");
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("i}/a6e*G/Q=kV#n[", "i}/a6e*G/Q=kV#n[");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      User user1 = new User("", "");
      user1.setUserID((String) null);
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      assertNotNull(string0);
      
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.4339872044851467
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      arrayList0.add(ontologyTerm0);
      Consumer<OntologyTerm> consumer0 = (Consumer<OntologyTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.clone();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setFilePath("VajG!&<Cx'[)");
      rawVariable0.clone();
      rawVariable0.setAvailability("yAex:_F&U3xprcq449<");
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer1);
      rawVariable0.setForm("yAex:_F&U3xprcq449<");
      rawVariable0.isCoded();
      rawVariable0.getDisplayName();
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("VajG!&<Cx'[)");
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) derivedVariable0);
      arrayList1.clear();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.setCleaningDescription("VajG!&<Cx'[)");
      rawVariable0.setIsNewRecord(false);
      rawVariable0.setAlias("VajG!&<Cx'[)");
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList2);
      rawVariable0.getColumnEnd();
      assertEquals("yAex:_F&U3xprcq449<", rawVariable0.getForm());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "c!1G1ZC^tO3s:g+}]h";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setFilePath("c!1G1ZC^tO3s:g+}]h");
      derivedVariable0.setQuestionNumber("general.error.invalidEmail");
      derivedVariable0.getOntologyTerms();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setAlternativeVariable((Variable) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.getDisplayName();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setYear("_SHt?rizA");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.setAlias("b|dJ");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      derivedVariable0.setCoded(true);
      rawVariable0.codeBookNumber = "b|dJ";
      arrayList0.removeAll(linkedList0);
      int int0 = 7;
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "e", "variable.cleaningDescription.label");
      macawChangeEvent0.getVariableOwnerID();
      linkedList0.add((Integer) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.retainAll(linkedList0);
      // Undeclared exception!
      try { 
        arrayList0.remove(7);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 7, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setCleaned(false);
      derivedVariable0.addValueLabel((ValueLabel) null);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.codeBookNumber = "h}a`";
      rawVariable0.getCategory();
      rawVariable0.getColumnEnd();
      rawVariable0.setCleaningStatus("G9IHI*&j!=,MK{`(\"");
      assertEquals("G9IHI*&j!=,MK{`(\"", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      user0.setUserID("YlI(R5.4DSD:`!$<");
      ontologyTerm0.clone();
      arrayList0.add(0, ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.remove(0);
      arrayList1.add(ontologyTerm1);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setColumnStart("Bnt]mwx#+'W\"5dz;.");
      rawVariable0.setLabel(")CCVX8Mnt\"@6|q");
      rawVariable0.setFilePath("o(yw1");
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getAvailability();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setName("variable.isCleaned.saveChanges.changedToNotClean");
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getNotes();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getAvailability();
      derivedVariable0.notes = "Unknown";
      derivedVariable0.setNotes("variable.isCleaned.saveChanges.changedToNotClean");
      RawVariable.validateFields(rawVariable0);
      rawVariable0.setQuestionNumber("");
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.5213776090917053
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User((String) null, (String) null);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      user0.setStatus((String) null);
      derivedVariable0.setCleaningDescription("$[");
      ontologyTerm0.clone();
      derivedVariable0.isCleaned();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.setQuestionNumber("variable.alias.label");
      rawVariable0.codeBookNumber = "q*#09Hbw|,c)";
      rawVariable0.clone();
      rawVariable0.getName();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable1);
      assertEquals("variable.alias.label", derivedVariable0.getQuestionNumber());
      
      rawVariable0.getYear();
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.4544986414325436
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("variable.saveChanges.valueChanged");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setName("FbFeWgm");
      rawVariable0.isCleaned();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      rawVariable0.setCategory("4e}JXfX(Y>xUZ516");
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel1, valueLabel1);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.clone();
      rawVariable0.getYear();
      rawVariable0.getFilePath();
      assertEquals("variable.saveChanges.valueChanged", rawVariable0.getAlias());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.590892788546328
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      
      rawVariable0.setAvailability("");
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList1);
      rawVariable0.getColumnStart();
      rawVariable0.getAlternativeVariable();
      user0.setPhone("");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.3747592044815526
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User("Y", "j?ABN&WX}aaus?)#f");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getColumnEnd();
      derivedVariable0.createVariableSummary();
      derivedVariable0.cloneAttributes(rawVariable1);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.setAvailability("");
      User user1 = new User("", "");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable1, rawVariable0);
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      derivedVariable0.getColumnStart();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.3114234446919735
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      String string0 = "Y";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.form = "Uc(7sz1~-H4USO;S";
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.711391434631367
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("(]q-?&}5='o,-qW^");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.setCleaned(false);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.clone();
      rawVariable0.getName();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("(]q-?&}5='o,-qW^", derivedVariable0.getYear());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.291336152795343
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("gWZ+5s4^,o@ 2x^");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setSourceVariables(arrayList0);
      derivedVariable0.cloneAttributes(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1583));
      rawVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      supportingDocument0.setFilePath("gWZ+5s4^,o@ 2x^");
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList1);
      derivedVariable1.setName("user.password.label");
      derivedVariable1.setCategory("{]885C|O~aXs*$");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable1.setSourceVariables(arrayList0);
      supportingDocument0.setFilePath("");
      derivedVariable1.clone();
      derivedVariable1.getSourceVariables();
      rawVariable0.clone();
      derivedVariable1.containsSourceVariable(rawVariable0);
      derivedVariable1.removeSourceVariable(rawVariable0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      assertEquals("user.password.label", derivedVariable1.getDisplayName());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.6789308025149405
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      User user0 = new User("(lh\"jItPq_*", "Xb");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("Xb");
      int int0 = (-1);
      user0.setIdentifier((-1));
      user0.setAddressLine1("Xb");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.cloneAttributes(rawVariable0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      System.setCurrentTimeMillis(1497L);
      derivedVariable0.clone();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }
}
