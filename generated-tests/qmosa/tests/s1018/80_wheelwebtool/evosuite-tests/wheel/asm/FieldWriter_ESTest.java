/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:42:15 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "*?d9Y";
      classWriter0.visit(0, 3, "*?d9Y", "*?d9Y", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-879), "", "org.apache.commons.io.filefilter.CanWriteFileFilter", "", "");
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", " pB{SUx+X2m<#t\"(", "HNA&M%RK8r?+", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "", "?4D.JIC,pY5)7cL^a", "HNA&M%RK8r?+", "");
      FieldWriter fieldWriter2 = fieldWriter1.next;
      // Undeclared exception!
      try { 
        fieldWriter1.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2387);
      classWriter0.newNameType("bQ", "bQ");
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 185, ":EJ", "LYU", ":EJ", "bQ");
      fieldWriter0.visitEnd();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      AnnotationVisitor annotationVisitor1 = fieldWriter0.visitAnnotation("char", false);
      assertNotSame(annotationVisitor1, annotationVisitor0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2153881010836147
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-879), "", "org.apache.commons.io.filefilter.CanWriteFileFilter", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 369, "CSH``8j&!06.{@<Nw", "CSH``8j&!06.{@<Nw", "v}^]Ix|;Mf2|$K", "v}^]Ix|;Mf2|$K");
      Attribute attribute0 = new Attribute("CSH``8j&!06.{@<Nw");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      fieldWriter0.getSize();
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-70);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitEnd();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3477);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1914, "wheel.asm.FieldWriter", "/IAJ3h_kBzt*CnJh!", (String) null, (Object) null);
      Object object0 = new Object();
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 3477, "", "?4D.JIC,pY5)7cL^a", "", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@2f219056
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-704), "", "dI!", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitEnd();
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1534547943999287
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-879), "", "org.apache.commons.io.filefilter.CanWriteFileFilter", "", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitEnd();
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2636256721237273
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newConstItem("");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-879), "", "org.apache.commons.io.filefilter.CanWriteFileFilter", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0042424730540764
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "CA2G3";
      stringArray0[1] = "g1+gt.{'b";
      stringArray0[2] = "Z4dX.1@r LJ-#=x{";
      stringArray0[3] = "M~&f;%EjO3XH%WMvGai";
      stringArray0[4] = "Z4dX.1@r LJ-#=x{";
      classWriter0.visit(369, 369, "Z4dX.1@r LJ-#=x{", "CA2G3", "g1+gt.{'b", stringArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2638), "]-`J/p", "Label offset position has not been resolved yet", "The array of names must not be null", "g1+gt.{'b");
      ClassWriter classWriter1 = new ClassWriter(48);
      ByteVector byteVector0 = classWriter1.pool;
      fieldWriter0.put(byteVector0);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.getSize();
      Object object0 = new Object();
      Object object1 = new Object();
      FieldWriter fieldWriter2 = null;
      try {
        fieldWriter2 = new FieldWriter(classWriter1, 1313, "g1+gt.{'b", "Z4dX.1@r LJ-#=x{", "Label offset position has not been resolved yet", object1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@e93334f
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0751393240053733
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      ClassWriter classWriter1 = new ClassWriter(369);
      ClassWriter classWriter2 = new ClassWriter((-3001));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter2, 37, "java/lang/Object", "java/lang/Object", "K/)6*2ho +", "K/)6*2ho +");
      fieldWriter0.getSize();
      Object object0 = new Object();
      Object object1 = new Object();
      ByteVector byteVector0 = classWriter2.pool;
      Attribute attribute0 = new Attribute("K/)6*2ho +");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
