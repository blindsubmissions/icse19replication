/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:38:55 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.ErrorPage;
import wheel.components.Any;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.StandaloneComponent;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "";
      ElExpression elExpression0 = new ElExpression("");
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression0, elExpression0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("ak}eurt32;E56l:");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.empty("ak}eurt32;E56l:");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.value("ak}eurt32;E56l:");
      // Undeclared exception!
      try { 
        dynamicSelectModel3.getObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression ak}eurt32;E56l:.values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("=%77~CKPq.je_?*V2Z");
      dynamicSelectModel0.empty("=%77~CKPq.je_?*V2Z");
      ErrorPage errorPage0 = new ErrorPage();
      dynamicSelectModel1.setTopLevelComponent(errorPage0);
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getOptionCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "> must be the same as start tag <";
      dynamicSelectModel0.enumeration("> must be the same as start tag <");
      dynamicSelectModel0.getTopLevelComponent();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getValue(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression > must be the same as start tag <.values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("&(?vi?sB");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.translator("");
      String string0 = "";
      dynamicSelectModel2.enumeration("");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel0.collection("");
      // Undeclared exception!
      try { 
        dynamicSelectModel3.getLabel(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression  evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "gb,Zk(TP(`t8\\^4";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("gb,Zk(TP(`t8^4");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.translator("gb,Zk(TP(`t8^4");
      String string1 = "ey3]bL))*.U?#=T@]";
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.enumeration("ey3]bL))*.U?#=T@]");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.collection("");
      // Undeclared exception!
      try { 
        dynamicSelectModel4.translateValue("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression  evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getComponent();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getObjects();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      int int0 = 1750;
      dynamicSelectModel0.getTopLevelComponent();
      dynamicSelectModel0.setComponent((Component) null);
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getValue(1750);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("");
      dynamicSelectModel1.enumeration("");
      dynamicSelectModel1.collection((String) null);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("");
      dynamicSelectModel2.collection("");
      dynamicSelectModel0.validate();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression  evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.reset();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.empty(dynamicSelectModel0);
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.translator("");
      dynamicSelectModel3.value("");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        dynamicSelectModel2.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Label attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.label("");
      dynamicSelectModel0.collection((String) null);
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Value attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "6";
      dynamicSelectModel0.collection("6");
      String string1 = "Js|k";
      // Undeclared exception!
      try { 
        dynamicSelectModel0.translateValue("6");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression 6 evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4978661367769954
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("[]");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("[]");
      ErrorPage errorPage0 = new ErrorPage();
      dynamicSelectModel2.setComponent(errorPage0);
      dynamicSelectModel2.translateValue("[]");
      Object object0 = dynamicSelectModel1.translateValue("[]");
      assertNull(object0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.8018924006588724
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("[]");
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.empty(dynamicSelectModel0);
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.value("[]");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel1.empty("[]");
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel3.empty("[]");
      DynamicSelectModel dynamicSelectModel6 = dynamicSelectModel4.empty(object0);
      dynamicSelectModel1.translateValue("[]");
      dynamicSelectModel4.translateValue("org.mvel.util.FastList@0000000038");
      dynamicSelectModel6.translateValue(" evaluated to null. Can't build a dynamic ISelectModel");
      DynamicSelectModel dynamicSelectModel7 = dynamicSelectModel4.collection("org.mvel.util.FastList@0000000039");
      dynamicSelectModel5.translateValue("unable to increment type: ");
      dynamicSelectModel0.translateValue("unable to increment type: ");
      dynamicSelectModel1.getObjects();
      DynamicSelectModel dynamicSelectModel8 = dynamicSelectModel3.translator("xZR)$%n}");
      dynamicSelectModel8.getObjects();
      dynamicSelectModel7.getObjects();
      Object object1 = dynamicSelectModel2.translateValue("k?9{p}HinR8I_C");
      assertNull(object1);
  }
}
