/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:00:02 GMT 2018
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      Float float0 = new Float(0.0F);
      linkedList0.add(float0);
      jSONObject0.put("", (Collection) linkedList0);
      try { 
        jSONObject0.getDouble("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      Float float0 = new Float(1.0);
      Integer integer0 = new Integer(433);
      hashMap0.put(float0, integer0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optInt("");
      Short short0 = new Short((short)5001);
      Short.compare((short)0, (short)0);
      Short.toUnsignedLong((short)61);
      JSONObject jSONObject1 = jSONObject0.append("", short0);
      jSONObject1.optLong("");
      jSONObject1.keys();
      Short.toUnsignedLong((short) (-3874));
      JSONObject.quote("");
      jSONObject1.accumulate("", "\"\"");
      jSONObject1.toString();
      String string0 = "";
      try { 
        jSONObject0.getInt("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0746142917293842
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "1DS+h";
      stringArray0[1] = "ZB3>C}`(6S~";
      stringArray0[2] = "x";
      stringArray0[3] = "/";
      stringArray0[4] = "eziKyeL";
      stringArray0[5] = "`'(%q(7v6{y65q";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      try { 
        jSONObject1.getDouble("_r.^n1tj*8:f6]e-");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"_r.^n1tj*8:f6]e-\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0746142917293842
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "wheel.json.JSONObject";
      JSONObject.getNames((Object) "wheel.json.JSONObject");
      JSONObject.valueToString("wheel.json.JSONObject");
      try { 
        jSONObject0.getDouble("wheel.json.JSONObject");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"wheel.json.JSONObject\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optDouble("Expected '", (-1925.887));
      JSONObject.valueToString(jSONObject0, 2347, 2347);
      jSONObject0.accumulate("{}", "{}");
      jSONObject0.put("", 0.0);
      jSONObject0.optBoolean("\t", false);
      jSONObject0.optInt("Ns})]wu5lVRr_:B");
      try { 
        jSONObject0.getJSONArray("Ns})]wu5lVRr_:B");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Ns})]wu5lVRr_:B\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = JSONObject.quote("] is not a JSONArray.");
      assertEquals("\"] is not a JSONArray.\"", string0);
      
      HashMap<Object, Long> hashMap0 = new HashMap<Object, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      double double0 = jSONObject0.optDouble((String) null);
      assertEquals(Double.NaN, double0, 0.01);
      
      int int0 = jSONObject0.optInt("_:;d52", (-776));
      assertEquals((-776), int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = null;
      jSONObject0.optBoolean((String) null);
      try { 
        jSONObject0.getString((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSONObject.doubleToString((-2281.022));
      JSONObject jSONObject0 = new JSONObject((Object) "-2281.022");
      int int0 = 0;
      jSONObject0.toString(0);
      try { 
        jSONObject0.getJSONArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "null";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of null
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Float float0 = new Float((-2089.5F));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "n\"QU6fFdG's";
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      jSONObject0.putOpt("", "n\"QU6fFdG's");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<Long, Long> hashMap0 = new HashMap<Long, Long>();
      long long0 = 196L;
      Long long1 = new Long(196L);
      hashMap0.put(long1, long1);
      long long2 = 181L;
      Long long3 = new Long(181L);
      hashMap0.put(long3, long3);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      // Undeclared exception!
      try { 
        JSONObject.getNames(jSONObject0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Long cannot be cast to java.lang.String
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSONObject.doubleToString(1.0);
      JSONObject jSONObject0 = new JSONObject((Object) "1");
      JSONObject jSONObject1 = jSONObject0.put("1", (-1997L));
      jSONObject0.put("Substring bounds error", (Collection) null);
      jSONObject0.remove("JSON does not allow non-finite numbers.");
      jSONObject1.putOpt("JSONArray initial value should be a string or collection or array.", (Object) null);
      assertEquals(5, jSONObject1.length());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7751250090009734
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Long long0 = new Long(787L);
      JSONObject jSONObject0 = new JSONObject(long0);
      jSONObject0.optLong("64]WM<j 9,\":Te");
      int int0 = (-1843);
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-1843));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "vwI ";
      stringArray0[2] = "] is not a JSONArray.";
      stringArray0[3] = "";
      stringArray0[4] = "GF8[<mPwClu";
      stringArray0[5] = "LNz5";
      stringArray0[6] = "";
      stringArray0[7] = "] is not a JSONObject.";
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      jSONObject0.put("", 338);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<Integer, JSONObject> hashMap0 = new HashMap<Integer, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Double double0 = new Double(0.0);
      Double.sum(0.0, (-1.0));
      JSONObject jSONObject1 = new JSONObject(double0);
      jSONObject0.toString();
      boolean boolean0 = jSONObject0.has("{}");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8173820666020837
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.doubleToString(0.0);
      JSONObject jSONObject1 = new JSONObject((Object) "Expected '");
      JSONObject jSONObject2 = jSONObject1.put("getparseDouble", (-1997L));
      jSONObject0.put("getparseDouble", (Collection) null);
      jSONObject1.remove("getsum");
      Float float0 = new Float(0.0);
      jSONObject2.putOpt("S5lW_)", float0);
      assertEquals(5, jSONObject2.length());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2055983590263932
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<Object, Long> hashMap0 = new HashMap<Object, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optDouble((String) null);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String[] stringArray0 = new String[3];
      stringArray0[1] = "_:;d52";
      stringArray0[2] = "_:;d52";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject1.put("_:;d52", (Collection) linkedList0);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0379570133180405
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSONObject.doubleToString(1.0);
      JSONObject jSONObject0 = new JSONObject((Object) "1");
      JSONObject jSONObject1 = jSONObject0.put("1", (-1997L));
      JSONObject jSONObject2 = new JSONObject(jSONObject0);
      jSONObject1.toString();
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.2067368439362582
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "wheel.json.JSONObject";
      JSONObject.getNames(jSONObject0);
      JSONObject.valueToString("wheel.json.JSONObject");
      try { 
        jSONObject0.getDouble("wheel.json.JSONObject");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"wheel.json.JSONObject\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.207104460398455
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<Long, Long> hashMap0 = new HashMap<Long, Long>();
      Long long0 = new Long(196L);
      hashMap0.put(long0, long0);
      Long long1 = new Long(181L);
      hashMap0.put(long1, long1);
      JSONObject jSONObject0 = new JSONObject((Object) "");
      jSONObject0.optInt("");
      Short short0 = new Short((short)11);
      Short.compare((short)58, (short)60);
      Short.toUnsignedLong((short)60);
      JSONObject jSONObject1 = jSONObject0.append("zE */v-Mn", (Object) null);
      jSONObject0.optLong("[");
      jSONObject0.keys();
      Short.toUnsignedLong((short) (-1));
      JSONObject.quote("");
      JSONObject jSONObject2 = jSONObject1.accumulate("", "");
      jSONObject2.toString();
      try { 
        jSONObject2.getInt("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<Integer, JSONObject> hashMap0 = new HashMap<Integer, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optDouble("h<`QqF#:", (-1925.887));
      Float float0 = new Float(2545.889F);
      JSONObject jSONObject1 = new JSONObject(float0);
      String string0 = JSONObject.valueToString(jSONObject1, 2347, (-1570));
      JSONObject jSONObject2 = new JSONObject(float0);
      JSONObject jSONObject3 = jSONObject1.accumulate(string0, jSONObject2);
      jSONObject2.put("", (double) (-1570));
      String string1 = "Ns})]wu5lV\\Rr_:B";
      jSONObject3.optBoolean(string0, false);
      jSONObject0.optInt("E(jF{BLnI@3X|.");
      String string2 = "Sx>";
      try { 
        jSONObject3.getJSONArray("Sx>");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Sx>\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = JSONObject.getNames(object0);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2213671408640905
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optDouble("uzo,BkPbX5{", (-2560.894478));
      Short short0 = new Short((short)18);
      JSONObject.valueToString(short0, 34, 34);
      JSONObject jSONObject1 = jSONObject0.accumulate("java.lang.Short@0000000002", "java.lang.Short@0000000002");
      String string0 = "Ns})]wu5lV\\Rr_:B";
      jSONObject0.optBoolean("uzo,BkPbX5{", true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java.lang.Short@0000000002";
      stringArray0[1] = "uzo,BkPbX5{";
      stringArray0[2] = "";
      stringArray0[3] = "] is not a Boolean.";
      JSONObject jSONObject2 = new JSONObject((Object) jSONObject1, stringArray0);
      jSONObject2.optInt("] is not a Boolean.");
      try { 
        jSONObject1.getJSONArray("java.lang.Short@0000000002");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"java.lang.Short@0000000002\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9181312901787908
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Long long0 = new Long(0L);
      JSONObject.valueToString(long0, 1639, 1639);
      HashMap<JSONArray, Byte> hashMap0 = new HashMap<JSONArray, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      jSONObject0.put("Unterminated string", (Collection) linkedList0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('q');
      jSONObject0.write(stringWriter1);
      try { 
        jSONObject0.getLong("is");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"is\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HashMap<Integer, JSONObject> hashMap0 = new HashMap<Integer, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "true";
      stringArray0[1] = "}+L7!g[,=%hGk58au";
      stringArray0[2] = "D_!a>U";
      stringArray0[0] = "\"\"";
      HashMap<Long, Long> hashMap1 = new HashMap<Long, Long>();
      Long long0 = new Long((-3195L));
      hashMap1.put(long0, long0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject.getNames((Object) jSONObject1);
      jSONObject0.keys();
      JSONObject jSONObject2 = new JSONObject(jSONObject1, stringArray0);
      String string0 = "\\u";
      jSONObject2.optString(string0);
      Long long1 = new Long((-3195L));
      JSONTokener jSONTokener0 = new JSONTokener("D_!a>U");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of D_!a>U
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Double double0 = new Double((-1551.665339));
      Short.toUnsignedLong((short) (-312));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "getformat";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      jSONObject0.isNull(" LOj|>zE^7");
      jSONObject0.put("pP(&QHgv_7'E,", true);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.871476118054867
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optDouble("3]", 0.0);
      Float float0 = new Float((float) 2347);
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject1 = new JSONObject(jSONArray0);
      JSONObject.valueToString(float0, 1043, (-1570));
      Short short0 = new Short((short) (-254));
      JSONObject jSONObject2 = new JSONObject(short0);
      String string0 = "va";
      JSONObject jSONObject3 = jSONObject2.accumulate("va", "3]");
      JSONObject jSONObject4 = jSONObject3.put("h<`QqF#:", (double) (-1570));
      jSONObject3.optBoolean("va", false);
      jSONObject1.optInt("E(jF{BLnI@3X|.");
      try { 
        jSONObject4.getJSONArray(",:]}/\"[{;=#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",:]}/\\\"[{;=#\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.1755205129442285
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSONObject.doubleToString((-2281.022));
      JSONObject jSONObject0 = new JSONObject((Object) "-2281.022");
      JSONObject.valueToString("-2281.022");
      JSONArray jSONArray0 = new JSONArray();
      jSONObject0.append("\"java.lang.String@0000000002\"", "wheel.json.JSONObject$Null");
      JSONObject.quote("] i not a JSONArray.");
      jSONObject0.toString(237, 237);
      jSONObject0.put("+8d:n!o57", 1227L);
      assertEquals(5, jSONObject0.length());
      
      Integer integer0 = new Integer(57);
      String[] stringArray0 = JSONObject.getNames((Object) integer0);
      assertEquals(5, stringArray0.length);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HashMap<Byte, Integer> hashMap0 = new HashMap<Byte, Integer>();
      Byte byte0 = new Byte((byte) (-128));
      Integer integer0 = new Integer(9);
      hashMap0.put(byte0, integer0);
      Byte byte1 = new Byte((byte) (-80));
      Integer integer1 = new Integer((byte) (-80));
      hashMap0.put(byte1, integer1);
      Byte.toUnsignedInt((byte)34);
      Integer integer2 = new Integer((byte) (-80));
      hashMap0.put(byte1, integer2);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optJSONArray("/W%ZbGZz6*Uf*ZQ*");
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.1258665968046673
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HashMap<JSONObject, JSONArray> hashMap0 = new HashMap<JSONObject, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Short short0 = new Short((short)13);
      JSONObject.valueToString(short0, (short)13, 116);
      hashMap0.put(jSONObject0, (JSONArray) null);
      hashMap0.put(jSONObject0, (JSONArray) null);
      jSONObject0.optJSONObject("4oaIzN{j~z.k>i#");
      Boolean boolean0 = Boolean.valueOf(true);
      Boolean.compare(true, false);
      JSONObject.valueToString(boolean0);
      JSONObject jSONObject1 = jSONObject0.append("Bo azHm3", (Object) null);
      jSONObject1.append("java.lang.Boolean@0000000003", "Bo azHm3");
      jSONObject1.optDouble(",\n", (double) 116);
      try { 
        jSONObject1.getBoolean("j;58vCB");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"j;58vCB\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }
}
