/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:11:48 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.Enumeration;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.ElementHandler;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.ElementStack;
import org.dom4j.io.PruningDispatchHandler;
import org.dom4j.io.PruningElementStack;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXReader;
import org.dom4j.tree.BaseElement;
import org.dom4j.tree.DefaultDocument;
import org.dom4j.tree.NamespaceStack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jaxen.SimpleVariableContext;
import org.jaxen.VariableContext;
import org.junit.runner.RunWith;
import org.xml.sax.HandlerBase;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.XMLFilter;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "org.dom4j.dom.DOMText";
      boolean boolean0 = false;
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("org.dom4j.dom.DOMText", false);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class org.dom4j.dom.DOMText loaded but cannot be instantiated (no empty public constructor?)
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.addHandler("\"/vI", (ElementHandler) null);
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler((XMLReader) null);
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, sAXContentHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.setValidation(true);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      sAXReader0.setValidation(false);
      sAXReader0.getDocumentFactory();
      sAXReader0.resetHandlers();
      try { 
        sAXReader0.setProperty("K.xH1Kx", "K.xH1Kx");
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property 'K.xH1Kx' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      String string0 = "";
      pruningDispatchHandler0.getHandler("");
      sAXReader0.setDefaultHandler((ElementHandler) null);
      pruningDispatchHandler0.removeHandler("-BVc~BlqQi^07KO");
      try { 
        sAXReader0.read("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/ext1/evosuite_readability_gen/projects/62_dom4j/ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("org.dom4j.dom.DOMCDATA");
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader_SAXEntityResolver0.resolveEntity("comment()", "org.dom4j.dom.DOMCDATA");
      sAXReader_SAXEntityResolver0.uriPrefix = "org.dom4j.dom.DOMCDATA";
      sAXReader_SAXEntityResolver0.resolveEntity("org.dom4j.dom.DOMCDATA", "org.dom4j.dom.DOMCDATA");
      String string0 = "HsEf4nk";
      sAXReader_SAXEntityResolver0.uriPrefix = "9sZa$DvJ1v";
      try { 
        sAXReader0.read("HsEf4nk");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/ext1/evosuite_readability_gen/projects/62_dom4j/HsEf4nk (No such file or directory) Nested exception: /home/ubuntu/ext1/evosuite_readability_gen/projects/62_dom4j/HsEf4nk (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "true";
      QName qName0 = new QName("true");
      qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      sAXReader0.getXMLFilter();
      boolean boolean0 = true;
      SAXReader sAXReader1 = new SAXReader((XMLReader) null, true);
      SAXContentHandler sAXContentHandler0 = sAXReader1.createContentHandler((XMLReader) null);
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, sAXContentHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      sAXReader0.addHandler("", pruningDispatchHandler0);
      boolean boolean0 = sAXReader0.isIgnoreComments();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(boolean0);
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.getXMLFilter();
      SAXReader sAXReader1 = new SAXReader((XMLReader) null, false);
      sAXReader1.setXMLReader((XMLReader) null);
      sAXReader1.isMergeAdjacentText();
      sAXReader1.createXMLReader();
      String string0 = "";
      SAXReader sAXReader2 = null;
      try {
        sAXReader2 = new SAXReader("http://xml.org/sax/features/string-interning");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class http://xml.org/sax/features/string-interning not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.getEntityResolver();
      sAXReader0.createXMLReader();
      sAXReader0.isMergeAdjacentText();
      sAXReader0.getDispatchHandler();
      sAXReader0.setEncoding("*V2Z)K{y.''Qxi_ZfY/");
      sAXReader0.getDocumentFactory();
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      sAXReader0.setStripWhitespaceText(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "IG,=\"?|^Z)d-";
      stringArray0[1] = "bi#^#zAY)/*eNZK\"yl";
      stringArray0[2] = "n}w+-+v,<";
      stringArray0[3] = "2OZ$v)hP k5O@ $IY1D";
      stringArray0[4] = "Y^OZB3>C}`(6";
      stringArray0[5] = "";
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, pruningDispatchHandler0, 0);
      pruningElementStack0.getDispatchHandler();
      sAXReader0.setDispatchHandler((DispatchHandler) null);
      sAXReader0.isMergeAdjacentText();
      boolean boolean0 = sAXReader0.isMergeAdjacentText();
      assertFalse(boolean0);
      
      sAXReader0.addHandler("", (ElementHandler) null);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      sAXReader0.setXMLReader(parserAdapter1);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setMergeAdjacentText(false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      xMLFilterImpl0.processingInstruction((String) null, (String) null);
      try { 
        sAXReader0.setProperty("http://xml.org/sax/features/namespaces", xMLFilterImpl0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property 'http://xml.org/sax/features/namespaces' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      sAXReader0.getXMLFilter();
      sAXReader0.setXMLFilter((XMLFilter) null);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getErrorHandler();
      sAXReader0.setStripWhitespaceText(false);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6674619334292946
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(parserAdapter0);
      assertFalse(sAXReader0.isValidating());
      
      sAXReader0.configureReader(parserAdapter0, sAXContentHandler0);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader0.setErrorHandler(defaultHandler2_0);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      String string0 = "56";
      String[] stringArray0 = new String[4];
      stringArray0[0] = "56";
      stringArray0[1] = "56";
      stringArray0[2] = "56";
      stringArray0[3] = "56";
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, dispatchHandler0, 11);
      // Undeclared exception!
      try { 
        dispatchHandler0.onEnd(pruningElementStack0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.821563807860364
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      InputSource inputSource0 = new InputSource();
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.848899705841817
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      String string0 = ")wD\"&+D]q.;DIFw'sG";
      StringReader stringReader0 = new StringReader(")wD\"&+D]q.;DIFw'sG");
      try { 
        sAXReader0.read((Reader) stringReader0, ")wD\"&+D]q.;DIFw'sG");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document )wD\"&+D]q.;DIFw'sG : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader1 = new SAXReader(documentFactory0);
      sAXReader1.getXMLFilter();
      SAXContentHandler sAXContentHandler0 = sAXReader1.createContentHandler((XMLReader) null);
      sAXReader0.setErrorHandler(sAXContentHandler0);
      sAXReader1.getXMLReader();
      sAXReader0.setIgnoreComments(true);
      sAXReader1.isIgnoreComments();
      StringReader stringReader0 = new StringReader("TH/1");
      try { 
        sAXReader1.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      ElementStack elementStack0 = new ElementStack();
      NamespaceStack namespaceStack0 = new NamespaceStack();
      namespaceStack0.getDefaultNamespace();
      BaseElement baseElement0 = new BaseElement("X%", (Namespace) null);
      elementStack0.pushElement(baseElement0);
      elementStack0.getDispatchHandler();
      sAXReader0.setDefaultHandler((ElementHandler) null);
      sAXReader0.getDispatchHandler();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl1);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      sAXReader0.createContentHandler(parserAdapter0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.removeHandler((String) null);
      sAXReader0.setEncoding((String) null);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      sAXReader0.addHandler((String) null, dispatchHandler0);
      sAXReader0.removeHandler((String) null);
      sAXReader0.getEntityResolver();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Namespace namespace0 = new Namespace("apos", (String) null);
      QName qName0 = QName.get("apos", namespace0, (String) null);
      qName0.getDocumentFactory();
      boolean boolean0 = true;
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null, true);
      sAXReader0.setDocumentFactory((DocumentFactory) null);
      qName0.getQualifiedName();
      String string0 = "org.dom4j.io.SAXReader$SAXEntityResolver";
      try { 
        sAXReader0.setProperty("org.dom4j.io.SAXReader$SAXEntityResolver", (Object) null);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property 'org.dom4j.io.SAXReader$SAXEntityResolver' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setDocumentFactory(documentFactory0);
      SAXReader sAXReader1 = new SAXReader(documentFactory0);
      sAXReader1.createDefaultEntityResolver("");
      sAXReader1.setEntityResolver(xMLFilterImpl1);
      String string0 = "";
      Object object0 = new Object();
      try { 
        sAXReader1.setProperty("", object0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property '' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9552088755878527
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.getXMLFilter();
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler((XMLReader) null);
      sAXReader0.setErrorHandler(sAXContentHandler0);
      sAXReader0.getXMLReader();
      sAXReader0.setIgnoreComments(true);
      sAXReader0.isIgnoreComments();
      String string0 = "Tc21";
      StringReader stringReader0 = new StringReader("");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      sAXReader0.createContentHandler(parserAdapter0);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("a~xwHWl&(KL[E6x", "");
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.864738512190568
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("add(Object) unsupported", "<Qdg{l%");
      SAXReader sAXReader0 = new SAXReader((String) null, false);
      try { 
        sAXReader0.read("O:a7wN=NdtdhEMQ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unknown protocol: o Nested exception: unknown protocol: o
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.6674619334292948
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")wD\"&+D]q.;DIFw'sG");
      DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(true);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLFilterImpl1);
      try { 
        sAXReader0.configureReader(xMLFilterImpl1, sAXContentHandler0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@365f399a Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.9470047701612976
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("add(Object) unsupported", "<Qdg{l%");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      boolean boolean0 = true;
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.getXMLFilter();
      SAXReader sAXReader1 = new SAXReader((XMLReader) null);
      StringReader stringReader0 = new StringReader("file://");
      try { 
        sAXReader1.read((Reader) stringReader0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/ext1/evosuite_readability_gen/projects/62_dom4j/ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      // Undeclared exception!
      try { 
        sAXReader0.setFeature((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.8943995444300383
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")wD\"&+D]q.;DIFw's@");
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity(")wD\"&+D]q.;DIFw's@", " : ");
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      StringReader stringReader1 = new StringReader("j4X4H!q6@");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")wD\"&+D]q.;DIFw'sG");
      DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(true);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity(")wD\"&+D]q.;DIFw'sG", (String) null);
      assertNotNull(inputSource0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Namespace namespace0 = Namespace.get(",`z&6A{)`9uf:");
      QName qName0 = defaultDocumentFactory0.createQName("3`V&[6", namespace0);
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      QName.get(",`z&6A{)`9uf:", namespace0);
      QName.get("3`V&[6");
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      namespace0.hasContent();
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      qName0.equals("org.dom4j.dom.DOMNamespace");
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.9319232930107053
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, false);
      SAXReader sAXReader1 = new SAXReader(true);
      MockFile mockFile0 = new MockFile(")[7", "http://xml.org/sax/properties/lexical-handler");
      MockFile mockFile1 = new MockFile(mockFile0, "http://xml.org/sax/properties/lexical-handler");
      URL uRL0 = mockFile1.toURL();
      try { 
        sAXReader1.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/ext1/evosuite_readability_gen/projects/62_dom4j/)[7/http:/xml.org/sax/properties/lexical-handler/http:/xml.org/sax/properties/lexical-handler (No such file or directory) Nested exception: /home/ubuntu/ext1/evosuite_readability_gen/projects/62_dom4j/)[7/http:/xml.org/sax/properties/lexical-handler/http:/xml.org/sax/properties/lexical-handler (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((XMLReader) null);
      File file0 = null;
      DefaultDocument defaultDocument0 = new DefaultDocument();
      SAXReader sAXReader1 = new SAXReader(true);
      sAXReader1.getXMLFilter();
      sAXReader0.setXMLFilter((XMLFilter) null);
      try { 
        sAXReader1.setXMLReaderClassName("?'Et;Fex3'Hz6-uv.T");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class ?'Et;Fex3'Hz6-uv.T not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.8782183066708504
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("n#dP$");
      DefaultDocumentFactory.getInstance();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      SAXReader sAXReader0 = new SAXReader(false);
      try { 
        sAXReader0.read((InputStream) pushbackInputStream0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Stream closed Nested exception: Stream closed
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, false);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      String string0 = "b4E!e{y2";
      xMLFilterImpl1.resolveEntity("", "b4E!e{y2");
      try { 
        sAXReader0.read((InputSource) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, false);
      sAXReader0.setIncludeInternalDTDDeclarations(false);
      sAXReader0.setStringInternEnabled(false);
      try { 
        sAXReader0.read("2Tf");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XMLReader xMLReader0 = null;
      SAXReader sAXReader0 = new SAXReader((XMLReader) null);
      sAXReader0.createDefaultEntityResolver("");
      sAXReader0.getEncoding();
      // Undeclared exception!
      try { 
        sAXReader0.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.903400758180918
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.getXMLFilter();
      SAXReader sAXReader1 = new SAXReader((XMLReader) null);
      File file0 = MockFile.createTempFile("BCBa20v!yC\u0006uQ/Z9", "N'@dO6}3w4YIH2U\u0004");
      try { 
        sAXReader1.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("46<d~>");
      sAXReader_SAXEntityResolver0.resolveEntity("~QWPmO", "46<d~>");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getXMLFilter();
      sAXReader_SAXEntityResolver0.resolveEntity("<Qdg{l%", "");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver1.resolveEntity("", ">4");
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }
}
