/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:39:01 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setXHTML(true);
      outputFormat0.setPadText(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getLineSeparator();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "\n";
      stringArray0[1] = "\n";
      stringArray0[2] = "\n";
      outputFormat0.setXHTML(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = false;
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      char char0 = 'F';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('F');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (F)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration", false);
      outputFormat0.setIndentSize((-1803));
      outputFormat0.isPadText();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent(false);
      outputFormat0.isNewlines();
      outputFormat0.setLineSeparator("-suppressDeclaration");
      outputFormat0.isXHTML();
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterNTags((-1803));
      outputFormat0.setIndent("-suppressDeclaration");
      outputFormat0.isNewlines();
      outputFormat0.setTrimText(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndent("-suppressDeclaration");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setPadText(true);
      outputFormat0.setNewLineAfterNTags(2937);
      outputFormat0.setTrimText(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndentSize(2937);
      outputFormat0.isNewlines();
      outputFormat0.getEncoding();
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals("", outputFormat0.getLineSeparator());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setEncoding("");
      outputFormat0.setIndent(false);
      outputFormat0.getLineSeparator();
      outputFormat0.isPadText();
      outputFormat0.setLineSeparator("9sZa$DvJ1v");
      assertEquals("9sZa$DvJ1v", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setExpandEmptyElements(false);
      outputFormat1.setXHTML(false);
      boolean boolean0 = outputFormat1.isNewLineAfterDeclaration();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("_3N2/.!%:");
      outputFormat0.setIndent("");
      outputFormat0.setPadText(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.getIndent();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent("");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setSuppressDeclaration(true);
      assertTrue(outputFormat0.isPadText());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "";
      OutputFormat outputFormat0 = new OutputFormat("", false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(false);
      outputFormat1.setExpandEmptyElements(true);
      outputFormat0.setPadText(false);
      OutputFormat.createPrettyPrint();
      outputFormat1.setSuppressDeclaration(false);
      outputFormat0.isTrimText();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2682));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2682
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("eziKyeLm0L`", false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewlines(false);
      outputFormat0.setIndent("eziKyeLm0L`");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setPadText(false);
      outputFormat0.setIndentSize(0);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-723));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -723
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.736339051105066
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat3.setIndent(true);
      outputFormat2.setNewLineAfterDeclaration(true);
      outputFormat2.setXHTML(false);
      outputFormat0.isTrimText();
      outputFormat1.setLineSeparator("`yX@F*Nw7.Vf,>");
      outputFormat0.setNewLineAfterNTags(1562);
      OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isXHTML();
      outputFormat2.setIndent(true);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat2.isPadText();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isOmitEncoding();
      assertEquals(1562, outputFormat0.getNewLineAfterNTags());
      
      OutputFormat outputFormat4 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat4.isExpandEmptyElements());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(",!'", true, "");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setEncoding("");
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterNTags((-1765));
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setLineSeparator(",!'");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setPadText(false);
      outputFormat0.setNewlines(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      outputFormat1.getLineSeparator();
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals(",!'", outputFormat0.getLineSeparator());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "\n";
      OutputFormat outputFormat0 = new OutputFormat("\n", true);
      boolean boolean0 = false;
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setXHTML(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setTrimText(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\n";
      stringArray0[1] = "\n";
      stringArray0[2] = null;
      stringArray0[3] = null;
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "Gw5BILmQv#";
      int int0 = outputFormat0.parseOptions(stringArray0, 1828);
      assertEquals(1828, int0);
      
      outputFormat0.setNewLineAfterDeclaration(true);
      assertEquals("  ", outputFormat0.getIndent());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.217734004511779
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      outputFormat0.setIndent(false);
      outputFormat0.setEncoding("q*Kya02t7lD=4Q");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewlines(false);
      outputFormat0.setTrimText(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isTrimText();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setXHTML(true);
      String[] stringArray0 = new String[8];
      outputFormat0.setNewLineAfterNTags(0);
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "q*Kya02t7lD=4Q";
      stringArray0[4] = "";
      stringArray0[5] = "q*Kya02t7lD=4Q";
      stringArray0[6] = "q*Kya02t7lD=4Q";
      stringArray0[7] = "q*Kya02t7lD=4Q";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setPadText(true);
      outputFormat0.isSuppressDeclaration();
      boolean boolean0 = outputFormat0.isXHTML();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.871476118054867
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat1.setNewLineAfterNTags((-895));
      outputFormat1.setEncoding("+k`gT)(J;tv");
      outputFormat1.setExpandEmptyElements(false);
      outputFormat0.setIndent("*");
      OutputFormat outputFormat2 = new OutputFormat("p{0(;4;W:Y");
      outputFormat2.setIndent(false);
      outputFormat0.setIndent(true);
      outputFormat2.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat3 = new OutputFormat("v$8e", true, "+k`gT)(J;tv");
      outputFormat3.setLineSeparator("*");
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      outputFormat4.isXHTML();
      outputFormat2.setEncoding((String) null);
      outputFormat0.isXHTML();
      outputFormat4.setTrimText(true);
      outputFormat2.setNewLineAfterDeclaration(false);
      assertFalse(outputFormat2.isNewLineAfterDeclaration());
      
      outputFormat0.isOmitEncoding();
      outputFormat4.setXHTML(false);
      assertEquals("  ", outputFormat4.getIndent());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9311345755376272
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("_3N2/.!%:");
      outputFormat0.setIndent("_3N2/.!%:");
      outputFormat0.setPadText(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.getIndent();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent("");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "_3N2/.!%:";
      stringArray0[1] = "_3N2/.!%:";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setAttributeQuoteCharacter('\'');
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.253857589601352
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setEncoding(")");
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "G";
      stringArray0[1] = "-suppressDeclaration";
      stringArray0[0] = "G";
      stringArray0[3] = ")";
      stringArray0[4] = "m";
      stringArray0[5] = "-suppressDeclaration";
      stringArray0[6] = ")";
      stringArray0[7] = "m";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.2191368674503986
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("_3N2/.!%:");
      outputFormat0.setIndent("_3N2/.!%:");
      outputFormat0.setIndentSize(0);
      outputFormat0.getIndent();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "-xhtml_.2/n%h";
      stringArray0[2] = "_3N2/.!%:";
      stringArray0[3] = "";
      stringArray0[4] = "_3N2/.!%:";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "_3N2/.!%:";
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat outputFormat1 = new OutputFormat((String) null);
      outputFormat1.setTrimText(false);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "Z";
      stringArray1[1] = null;
      outputFormat1.parseOptions(stringArray1, 718);
      outputFormat0.parseOptions(stringArray0, 2);
      assertEquals("", outputFormat0.getIndent());
      
      int int0 = outputFormat1.parseOptions(stringArray1, 21);
      assertEquals(21, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.2405897279421927
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("+k`gT)(J;tv");
      outputFormat0.setPadText(true);
      outputFormat0.setXHTML(true);
      outputFormat1.setIndentSize(34);
      OutputFormat outputFormat2 = new OutputFormat("-encoding", false, "");
      outputFormat1.getIndent();
      OutputFormat outputFormat3 = new OutputFormat("R?t-o3L%Xd,&ArB", true);
      outputFormat0.setIndent((String) null);
      outputFormat0.setSuppressDeclaration(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-encoding";
      outputFormat3.setXHTML(true);
      stringArray0[1] = null;
      stringArray0[2] = "+k`gT)(J;tv";
      outputFormat3.parseOptions(stringArray0, 0);
      outputFormat1.parseOptions(stringArray0, 34);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1725719775));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1725719775
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3334730391185028
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-xhtmlXgh6oR";
      stringArray0[2] = "e5)ds";
      int int0 = 872;
      outputFormat0.setTrimText(true);
      outputFormat0.parseOptions(stringArray0, 872);
      stringArray0[3] = "VR|eSO*Z";
      outputFormat0.parseOptions(stringArray0, 0);
      int int1 = (-1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.64622455382987
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("_.2/n%h", true, "");
      outputFormat0.getIndent();
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty-xhtml_.2/n%h", true);
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.setIndent("6f;%zlzv&rd6BBN>");
      outputFormat0.setSuppressDeclaration(true);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-expandEmpty-xhtml_.2/n%h";
      stringArray0[1] = "_.2/n%h";
      outputFormat2.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 2846);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-2073));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2073
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.0528983559473266
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setEncoding("(e)");
      OutputFormat outputFormat1 = new OutputFormat("kCpLv[", false, "+k`~gT)(kJ;tv");
      outputFormat1.getIndent();
      OutputFormat outputFormat2 = new OutputFormat("Invalid attribute quote character (", false);
      OutputFormat outputFormat3 = new OutputFormat();
      outputFormat1.setIndent("+k`~gT)(kJ;tv");
      outputFormat1.setSuppressDeclaration(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "+k`~gT)(kJ;tv";
      stringArray0[2] = "+k`~gT)(kJ;tv";
      stringArray0[3] = "-trimText";
      stringArray0[4] = "+k`~gT)(kJ;tv";
      int int0 = outputFormat1.parseOptions(stringArray0, 0);
      assertTrue(outputFormat1.isTrimText());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5403058252265167
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setEncoding("(e)");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "G";
      OutputFormat outputFormat1 = new OutputFormat("(e)", false, "+k`~gT)(kJ;tv");
      outputFormat1.setIndent("-indentSize");
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "-indentSize";
      stringArray1[1] = "G";
      stringArray1[2] = "(e)";
      stringArray1[3] = "G";
      stringArray1[4] = "-indentSize";
      stringArray1[5] = "G";
      stringArray1[6] = "+k`~gT)(kJ;tv";
      stringArray1[7] = "(e)";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"G\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7721393884375287
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize(0);
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setOmitEncoding(false);
      OutputFormat outputFormat1 = new OutputFormat("  ", true, "-expandEmpty8m|~/ee");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "-expandEmpty8m|~/ee";
      stringArray0[2] = "-expandEmpty8m|~/ee";
      stringArray0[3] = "-indent";
      stringArray0[4] = "  ";
      stringArray0[5] = "_.2/n%h";
      stringArray0[6] = "-xhtmlXgh6o7IM2R?r";
      outputFormat1.parseOptions(stringArray0, 2364);
      assertFalse(outputFormat1.isExpandEmptyElements());
      
      outputFormat0.setSuppressDeclaration(false);
      outputFormat1.parseOptions(stringArray0, 1);
      int int0 = outputFormat1.parseOptions(stringArray0, 5);
      assertTrue(outputFormat1.isExpandEmptyElements());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3972047975232547
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize(0);
      String string0 = OutputFormat.STANDARD_INDENT;
      OutputFormat outputFormat1 = new OutputFormat("_.2/n%h", false, "");
      String string1 = OutputFormat.STANDARD_INDENT;
      OutputFormat outputFormat2 = new OutputFormat("", false);
      assertEquals("\n", outputFormat2.getLineSeparator());
      
      OutputFormat outputFormat3 = new OutputFormat();
      outputFormat3.setIndent("-lineSeparator");
      OutputFormat outputFormat4 = new OutputFormat((String) null, false, "");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "6f;%zlzv&rd6BBN>";
      stringArray0[4] = "MIt d\")<l[";
      stringArray0[5] = "";
      stringArray0[6] = "";
      int int0 = outputFormat2.parseOptions(stringArray0, 0);
      assertEquals("", outputFormat2.getLineSeparator());
      assertEquals(2, int0);
  }
}
