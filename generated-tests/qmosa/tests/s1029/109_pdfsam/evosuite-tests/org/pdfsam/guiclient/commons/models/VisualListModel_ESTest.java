/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:20:59 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BandedSampleModel;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.ColorModel;
import java.awt.image.ConvolveOp;
import java.awt.image.DataBuffer;
import java.awt.image.DataBufferFloat;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.Raster;
import java.awt.image.WritableRaster;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Predicate;
import javax.media.jai.PlanarImage;
import javax.swing.JLayeredPane;
import javax.swing.event.ListDataListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.clearData();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      intArray0[0] = 0;
      visualListModel0.getListDataListeners();
      visualListModel0.getElements();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getSize();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) treeSet0);
      visualListModel0.getElements();
      visualListModel0.elementsChanged();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      boolean boolean0 = false;
      visualListModel0.subList(951, 951, false);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getElementAt(951);
      int int0 = 2230;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-110);
      byte byte1 = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)99;
      byteArray0[5] = (byte) (-88);
      byteArray0[6] = (byte)32;
      byteArray0[7] = (byte)115;
      byteArray0[8] = (byte) (-1);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(951, 951, byteArray0, (byte)32, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = null;
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      int int0 = 2840;
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        visualListModel0.getListeners((Class) class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.Integer; cannot be cast to [Ljava.util.EventListener;
         //
         verifyException("javax.swing.event.EventListenerList", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.appendAllElements(treeSet0);
      int int0 = 180;
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(180, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 180
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 2843;
      intArray0[2] = (-378);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.data = vector0;
      intArray0[3] = 1;
      intArray0[4] = 1135;
      intArray0[5] = 91;
      visualListModel0.moveDownIndex(1114);
      intArray0[6] = (-3881);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.reverseElements(intArray0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.subList(874, (-378), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(874) > toIndex(-378)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-410);
      int[] intArray0 = new int[7];
      intArray0[0] = (-410);
      intArray0[1] = (-410);
      intArray0[2] = (-410);
      intArray0[3] = (-410);
      intArray0[4] = (-410);
      int int1 = 0;
      intArray0[5] = 0;
      intArray0[6] = (-410);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.subList((-410), 476);
      visualListModel0.addAllElements(2593, (Collection<VisualPageListItem>) null);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.negate();
      priorityQueue0.removeIf(predicate3);
      visualListModel0.appendAllElements(priorityQueue0);
      visualListModel0.moveUpIndex(0);
      int int0 = (-911);
      boolean boolean0 = false;
      int int1 = 1062;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-911), 0, intArray0, (-911), false, 0, 1062);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.getListDataListeners();
      visualListModel0.getElementAt(0);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.elementChanged((VisualPageListItem) null);
      int int1 = (-2428);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-2428));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-2428)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      int[] intArray0 = new int[7];
      intArray0[0] = 65535;
      intArray0[1] = 0;
      intArray0[2] = (-1496);
      intArray0[3] = 146;
      intArray0[4] = 0;
      intArray0[5] = 2755;
      intArray0[6] = 0;
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[0];
      visualListModel0.moveUpIndexes(intArray1);
      assertEquals(0, intArray1.length);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1;
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.subList(1, 1, true);
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(linkedHashSet0);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = (-1);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.moveUpIndex(0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-709);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-709));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -709
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 2714;
      int int1 = (-800);
      visualListModel0.removeListDataListener((ListDataListener) null);
      int[] intArray0 = new int[3];
      intArray0[0] = (-800);
      intArray0[1] = 0;
      intArray0[2] = 2714;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElements(2714, (-800), false);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(linkedHashSet0);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.moveUpIndex(1186);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeListDataListener((ListDataListener) null);
      int[] intArray0 = new int[3];
      intArray0[0] = 2714;
      intArray0[1] = 0;
      intArray0[2] = 2714;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElements(2714, 2714, false);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[0] = 614;
      intArray0[1] = 102;
      intArray0[2] = 0;
      visualListModel0.removeElements((-1), 0, true);
      intArray0[3] = 7;
      intArray0[4] = 2191;
      intArray0[5] = (-2428);
      intArray0[6] = (-1);
      intArray0[7] = 114;
      intArray0[8] = 3815;
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[1];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      arrayList0.toArray(integerArray0);
      visualListModel0.prependAllElements(arrayList0);
      int[] intArray0 = new int[2];
      visualListModel0.moveDownIndexes(intArray0);
      intArray0[0] = 1;
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.pollFirst();
      visualListModel0.undeleteElements(intArray0);
      treeSet0.pollFirst();
      visualListModel0.prependAllElements(treeSet0);
      intArray0[1] = (-3211);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.addAllElements((-3211), (Collection<VisualPageListItem>) treeSet0);
      visualListModel0.getValidElements();
      visualListModel0.moveUpIndex((-709));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1;
      visualListModel0.subList(1, 1, true);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.subList(1, 1, true);
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.getSize();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8866967846580784
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = (-1);
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 522;
      intArray0[6] = (-1);
      intArray0[7] = (-1);
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel0.getValidElements();
      visualListModel1.moveUpIndex((-1));
      visualListModel1.getElements();
      int[] intArray1 = new int[0];
      visualListModel0.undeleteElements(intArray1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.138333059508028
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getListDataListeners();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getSize();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) treeSet0);
      visualListModel0.getElements();
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.540036303820981
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.removeElements(intArray0, false);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      intArray0[0] = 2404;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      int int0 = (-1);
      boolean boolean0 = true;
      visualListModel0.removeElements((-2641), (-1), true);
      visualListModel0.getValidElements();
      visualListModel0.subList((-1), (-2215), false);
      visualListModel0.moveDownIndex((-2215));
      visualListModel0.getElements();
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) null);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      int int1 = 13;
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) 1;
      floatArray0[1] = (float) 2404;
      floatArray0[2] = (float) (-1);
      floatArray0[3] = (float) 1;
      floatArray0[4] = (-1208.74F);
      floatArray0[5] = (float) 2404;
      floatArray0[6] = 0.0F;
      floatArray0[7] = (float) (-2641);
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(1, 13, floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 8 and should be 13
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2538575896013526
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.subList((-3), (-3), true);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.pollFirst();
      int[] intArray0 = new int[1];
      intArray0[0] = 130;
      visualListModel0.undeleteElements(intArray0);
      TreeSet<VisualPageListItem> treeSet1 = new TreeSet<VisualPageListItem>();
      treeSet1.pollFirst();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      int[] intArray1 = new int[2];
      intArray1[0] = 130;
      intArray1[1] = 130;
      visualListModel0.rotateClockwiseElements(intArray1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndex(130);
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 129
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3693821196946767
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.subList((-3), (-3), true);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.pollFirst();
      int[] intArray0 = new int[1];
      intArray0[0] = (-3);
      visualListModel0.undeleteElements(intArray0);
      TreeSet<VisualPageListItem> treeSet1 = new TreeSet<VisualPageListItem>();
      treeSet1.pollFirst();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      int[] intArray1 = new int[2];
      intArray1[1] = (-3);
      visualListModel0.rotateClockwiseElements(intArray1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.moveUpIndexes(intArray0);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0253262207700673
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 1709;
      intArray0[1] = (-2306);
      intArray0[2] = 1709;
      intArray0[3] = 1709;
      intArray0[4] = (-2306);
      intArray0[5] = 1709;
      intArray0[6] = 1709;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.subList((-2306), 1709, true);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      int[] intArray1 = new int[9];
      intArray1[0] = 1709;
      intArray1[1] = 1709;
      intArray1[2] = (-2306);
      intArray1[3] = 1709;
      intArray1[4] = 1709;
      intArray1[5] = 1709;
      intArray1[6] = (-2306);
      intArray1[7] = 2083;
      intArray1[8] = (-2306);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.removeElements((-2306), 165, true);
      visualListModel0.getValidElements();
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 1494);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[6] = 1;
      intArray0[7] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) arrayDeque0);
      assertEquals(0, arrayDeque0.size());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2008276490345495
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.pollFirst();
      visualListModel0.undeleteElements(intArray0);
      TreeSet<VisualPageListItem> treeSet1 = new TreeSet<VisualPageListItem>();
      treeSet1.pollFirst();
      visualListModel0.prependAllElements(treeSet0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndex(360);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(8, visualListModel0.getSize());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.subList((-4738), 2549, true);
      int[] intArray1 = new int[3];
      intArray1[0] = 2549;
      intArray1[1] = 2549;
      intArray1[2] = 2549;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.removeElements(Integer.MIN_VALUE, (-2213), true);
      visualListModel0.getValidElements();
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 2549);
      visualListModel0.updateElementAt((-2213), (VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.2102535776209735
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getListDataListeners();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getSize();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) treeSet0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.prependAllElements(treeSet0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) treeSet0);
      visualListModel0.undeleteElements(intArray0);
      assertEquals(1, intArray0.length);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      int[] intArray0 = new int[0];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.prependAllElements(stack0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.getValidElements();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.getValidElements();
      visualListModel3.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel3.addElementAt((VisualPageListItem) null, (-2213));
      visualListModel3.updateElementAt(Integer.MIN_VALUE, (VisualPageListItem) null);
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.elementChanged((VisualPageListItem) null);
      assertNotSame(visualListModel4, visualListModel3);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.1458417525947544
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      visualListModel0.getValidElements();
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel2.data = (Vector<VisualPageListItem>) stack0;
      Vector<VisualPageListItem> vector0 = visualListModel2.data;
      vector0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(vector0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.addElementAt((VisualPageListItem) null, (-4409));
      visualListModel1.updateElementAt((-634), (VisualPageListItem) null);
      VisualListModel visualListModel4 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel4.undeleteElements(intArray0);
      visualListModel4.addElement((VisualPageListItem) null);
      visualListModel1.elementChanged((VisualPageListItem) null);
      assertNotSame(visualListModel1, visualListModel4);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.094729047527649
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.subList((-779), (-779), true);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.pollFirst();
      int[] intArray0 = new int[1];
      intArray0[0] = 672;
      visualListModel0.undeleteElements(intArray0);
      TreeSet<VisualPageListItem> treeSet1 = new TreeSet<VisualPageListItem>();
      treeSet0.pollFirst();
      visualListModel0.prependAllElements(treeSet0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[15];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndex(672);
      Dimension dimension0 = new Dimension();
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 672
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      visualListModel0.getSize();
      visualListModel0.getValidElements();
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel1.elementChanged((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel1.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector1 = visualListModel1.data;
      Object object0 = new Object();
      vector0.removeElement("");
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector1);
      VisualListModel visualListModel3 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel3.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2450352741261774
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      visualListModel0.getSize();
      visualListModel0.getValidElements();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel1.elementChanged((VisualPageListItem) null);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.removeElements(0, 0, false);
      visualListModel1.removeElements((-1312), 3837, false);
      assertEquals(1, visualListModel1.getSize());
      
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel1.removeElements(intArray0, true);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      visualListModel0.getSize();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel1.removeElements(0, 92, false);
      visualListModel0.removeElements(0, 0, false);
      int[] intArray0 = new int[0];
      visualListModel1.removeElements(intArray0, false);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9867316488081912
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      visualListModel0.getSize();
      visualListModel0.getValidElements();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel1.elementChanged((VisualPageListItem) null);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel1.removeElements(0, 0, true);
      visualListModel0.removeElements(0, (-1), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.pollFirst();
      visualListModel0.getElements();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getElements();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      assertFalse(visualListModel1.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.pollFirst();
      int[] intArray0 = new int[1];
      int int0 = 672;
      intArray0[0] = 672;
      visualListModel0.undeleteElements(intArray0);
      treeSet0.pollFirst();
      visualListModel0.prependAllElements(treeSet0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[15];
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 672
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.13650705762401
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      visualListModel0.setData(vector0);
      visualListModel0.getSize();
      visualListModel0.getValidElements();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel1.removeElements(0, 0, false);
      visualListModel0.removeElements(0, 0, false);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      visualListModel0.removeElements(intArray0, false);
      visualListModel1.subList(0, 0, true);
      assertEquals(1, visualListModel1.getSize());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int int0 = 672;
      intArray0[0] = 672;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[15];
      visualListModel0.moveUpIndex(672);
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.data = vector0;
      int int1 = (-306);
      visualListModel1.moveUpIndex((-306));
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 672
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.0791512728828505
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      visualListModel0.getSize();
      visualListModel0.getValidElements();
      vector0.add((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.moveUpIndex(1);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) vector0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[1];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      arrayList0.toArray(integerArray0);
      visualListModel0.prependAllElements(arrayList0);
      int[] intArray0 = new int[2];
      visualListModel0.moveDownIndexes(intArray0);
      intArray0[0] = 1;
      int int0 = (-3211);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.pollFirst();
      visualListModel0.undeleteElements(intArray0);
      treeSet0.pollFirst();
      visualListModel0.prependAllElements(treeSet0);
      intArray0[1] = (-3211);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualListModel0.setData(visualPageListItemArray0);
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3210
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.893788232391138
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[1];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      arrayList0.toArray(integerArray0);
      visualListModel0.prependAllElements(arrayList0);
      int[] intArray0 = new int[2];
      visualListModel0.moveDownIndexes(intArray0);
      intArray0[0] = 1;
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.pollFirst();
      visualListModel0.undeleteElements(intArray0);
      treeSet0.pollFirst();
      visualListModel0.prependAllElements(treeSet0);
      intArray0[1] = (-3211);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3211
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.666332585328325
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[1];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      int[] intArray0 = new int[2];
      visualListModel0.moveDownIndexes(intArray0);
      intArray0[0] = 1;
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.pollFirst();
      visualListModel0.undeleteElements(intArray0);
      treeSet0.pollFirst();
      visualListModel0.prependAllElements(treeSet0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.subList((-3211), 2030, true);
      assertEquals(5, visualListModel0.getSize());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel1.elementChanged((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.moveUpIndex(1);
      visualListModel1.addAllElements(1, (Collection<VisualPageListItem>) vector0);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9913464134109884
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.undeleteElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = (-2705);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveUpIndex(672);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveUpIndex(672);
      visualListModel2.rotateAnticlockwiseElements(intArray1);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.pollFirst();
      visualListModel2.prependAllElements(treeSet0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }
}
