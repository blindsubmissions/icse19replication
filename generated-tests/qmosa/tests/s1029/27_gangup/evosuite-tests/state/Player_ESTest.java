/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 17:48:59 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-1), (String) null, (String) null, (-1), (-1));
      player0.setX((-860.205F));
      player0.setZ(0.1F);
      player0.getName();
      player0.setZ((-860.205F));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte) (-71);
      byteArray0[4] = (byte) (-123);
      byteArray0[5] = (byte) (-54);
      player0.unpack(byteArray0);
      player0.setMoney(3711.3843F);
      player0.setZ(0.0F);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        pipedOutputStream0.write(byteArray0, (-432), (int) (short)4919);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.getSubparty();
      player1.remove(player0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-94);
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte)0;
      player0.unpack(byteArray0);
      player1.prev = (Party) player0;
      player0.setJoinOK(player1, true);
      player0.setDead((-3400L));
      player1.setX(1.0F);
      player1.setY((short)4919);
      // Undeclared exception!
      try { 
        player1.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(1790, "t[|j:};kukcgs=", "wkS/", 1790, 1790);
      Player player1 = new Player(1790, "Player", "0.0.0.0", (-1472));
      player0.prev = (Party) player1;
      player1.remove(player0);
      player0.setZ(1322.2F);
      player0.setY((short)4919);
      player0.setDead((-3206L), true);
      player0.toString();
      player0.type();
      player1.setDead(0L);
      player1.setDead(15000L, true);
      player1.getSubparty();
      player0.setZ(0.2F);
      player1.getMoney();
      player1.toString();
      player0.setX(1689.8F);
      assertEquals(0.2F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = (-52);
      Player player0 = new Player((-1799), "jN", "+,'dYZ(ODch/3l", (-1799), (-52));
      Player player1 = new Player(0, "", "jN", (-1799));
      player1.setDead(0L, false);
      player0.setJoinOK(player1, false);
      player1.reset(false);
      player0.getPictureId();
      player1.getName();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("+,'dYZ(ODch/3l", true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream((InputStream) null, (-3136));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.getZ();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(pipedOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      Player player1 = new Player((short)4919);
      player1.setDead(863L);
      player0.isJoinOK(player1, false);
      player1.getZ();
      player0.isConnected();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte) (-81);
      player1.setZ(0.1F);
      player0.pack();
      player1.unpack(byteArray0);
      player1.type();
      assertEquals(863L, player1.getTimeOfDeath());
      
      int int0 = player0.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setY(0);
      player0.setX(0.0F);
      player0.setY(0.0F);
      player0.getPictureId();
      player0.getPictureId();
      player0.setZ(0.0F);
      player0.getStrength();
      player0.getIP();
      Party party0 = player0.gangBoss();
      player0.remove(party0);
      Player player1 = new Player(36);
      player0.boss = (Party) player1;
      player0.setDead(0L, true);
      player0.getZ();
      player0.pack();
      player0.setX(1.0F);
      player0.getTimeOfDeath();
      assertEquals(1.0F, player0.getX(), 0.01F);
      
      float float0 = player1.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)81;
      byteArray0[2] = (byte) (-69);
      byteArray0[3] = (byte) (-6);
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-82);
      byteArray0[8] = (byte)0;
      player0.unpack(byteArray0);
      player0.remove((Party) null);
      player0.setDead(227L);
      player0.pack();
      player0.add((Party) null);
      player0.reset(true);
      player0.setX(3030.8638F);
      player0.gangStrength();
      player0.pack();
      player0.next = null;
      player0.isDead();
      player0.getY();
      player0.setDead((long) (byte)5, true);
      player0.reset(true);
      assertEquals(3030.8638F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(5, "", "", 5);
      player0.gangStrength();
      Player player1 = new Player(5, "", "", 5);
      Party party0 = player1.gangBoss();
      party0.boss = (Party) player1;
      party0.prev = (Party) player0;
      party0.head = (Party) player0;
      player0.add(party0);
      player0.setDead(1L, true);
      player0.setX(5);
      assertEquals(5.0F, player0.getX(), 0.01F);
      
      player1.getX();
      player1.getX();
      player1.setDead(2302L, true);
      player1.setX((-1.0F));
      assertEquals(2302L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(848.0F);
      player0.id = (-2262);
      player0.setDead();
      player0.getX();
      player0.setConnected(true);
      player0.getPictureId();
      player0.getX();
      player0.getIP();
      assertEquals(848.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(0, "h*oL>ZJmH", "h*oL>ZJmH", 737, 737);
      player0.setZ((-1138.6595F));
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      player0.type();
      int int0 = player0.type();
      assertEquals((-1138.6595F), player0.getZ(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      Player player1 = new Player((short)4919);
      player1.setDead(863L);
      player0.isJoinOK(player1, false);
      player1.getZ();
      player0.isConnected();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte) (-81);
      player1.setZ(0.1F);
      player0.pack();
      player1.getName();
      boolean boolean0 = player1.isDead();
      assertEquals(0.1F, player1.getZ(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8714761180548676
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      Player player1 = new Player((short)4919);
      player1.setDead(863L);
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, false);
      player1.getZ();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player1.setY(2791.527F);
      player0.getMoney();
      player1.isJoinOK(player0, false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      player0.setJoinOK(player1, true);
      player1.setZ((-2073.4136F));
      byte[] byteArray0 = player1.pack();
      player0.unpack(byteArray0);
      Player player2 = new Player((byte)91, "", ",aT9a0,|9>>>I", 2);
      player2.remove(player1);
      player2.type();
      int int0 = player0.type();
      assertEquals("Player4919", player0.toString());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0642580751745085
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      Player player1 = new Player((short)4919);
      player1.setDead(863L);
      player0.isJoinOK(player1, false);
      player1.getZ();
      player0.isConnected();
      player0.setJoinOK(player1, true);
      Player player2 = new Player(647, "", 2);
      player0.isJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(863L, player1.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.639340587232432
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      System.setCurrentTimeMillis((-660L));
      System.setCurrentTimeMillis((-1189L));
      Player player0 = new Player(512);
      Player player1 = new Player();
      player1.reset(true);
      player0.setDead();
      player0.add(player1);
      player1.setJoinOK(player0, false);
      player1.setZ((-1799.09F));
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis((short)4919);
      player1.isJoinOK(player0, false);
      player1.setZ(0.0F);
      byte[] byteArray0 = player1.pack();
      player1.unpack(byteArray0);
      player0.type();
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(13811L);
      player1.isJoinOK(player0, false);
      player0.isJoinOK(player1, false);
      assertEquals((-1189L), player0.getTimeOfDeath());
  }
}
