/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 17:45:51 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = (-3007);
      SimpleNode simpleNode0 = new SimpleNode((-3007));
      simpleNode0.setIdentifier("");
      simpleNode0.parser = null;
      String string0 = "}";
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      arrayList0.add("}");
      simpleNode0.setIdentifier("}");
      simpleNode0.jjtClose();
      // Undeclared exception!
      try { 
        simpleNode0.toString("r%SUq/)>_70");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3007
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.jjtClose();
      simpleNode0.toString((String) null);
      simpleNode0.jjtClose();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(63);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      JavaParser javaParser0 = new JavaParser(dataInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.StatementExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.073542846408523
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      simpleNode0.children = null;
      String string0 = simpleNode0.toString();
      assertEquals("PostfixExpression", string0);
      
      StringWriter stringWriter0 = new StringWriter(57);
      simpleNode0.dump("ztqx7-!", stringWriter0);
      assertEquals("", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(717);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 717);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(718, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(28);
      StringReader stringReader0 = new StringReader("=|/R64c|,\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 28, 224);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 799);
      simpleNode0.jjtAddChild(simpleNode1, 799);
      simpleNode0.setIdentifier((String) null);
      simpleNode0.toString("S-@9");
      assertEquals(800, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9943536917623688
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 57);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("1", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1382));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1382
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9532710147058912
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)126;
      byteArray0[1] = (byte)23;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 46);
      JavaParser javaParser0 = new JavaParser(bufferedInputStream0);
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, (byte)126);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      StringWriter stringWriter0 = new StringWriter(1979);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "</");
      simpleNode0.dump("</", stringWriter1);
      SimpleNode simpleNode1 = new SimpleNode(1979);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.jjtAddChild(simpleNode1, 1979);
      assertEquals(1980, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(125);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-431));
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "");
      simpleNode0.dump((String) null, stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(95);
      simpleNode1.setIdentifier("");
      simpleNode1.jjtSetParent((Node) null);
      simpleNode1.jjtAddChild(simpleNode0, 95);
      SimpleNode simpleNode2 = new SimpleNode(2300);
      simpleNode1.dump("", stringWriter0);
      simpleNode2.dump("3&okz_tcB~+'N2*%Ti(", stringWriter0);
      assertEquals("<Annotation>\n</Annotation>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9320738874454946
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<=");
      StringWriter stringWriter0 = new StringWriter(1972);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "Gj49.|vrX0;");
      simpleNode0.dump("Gj49.|vrX0;", stringWriter1);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.setIdentifier("Gj49.|vrX0;");
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.setIdentifier("<=");
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode1.dump("Gj49.|vrX0;", stringWriter0);
      simpleNode1.toString();
      simpleNode1.dump("\"long\"", stringWriter1);
      simpleNode0.dump("Gj49.|vrX0;", stringWriter0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9646946227273334
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Gj49.|vrX0;");
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "Gj49.|vrX0;");
      simpleNode0.dump("Gj49.|vrX0;", stringWriter1);
      SimpleNode simpleNode1 = new SimpleNode(28);
      simpleNode0.setIdentifier("<<");
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.setIdentifier("");
      simpleNode1.jjtAddChild(simpleNode0, 28);
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode1.toString();
      simpleNode0.dump(">=", stringWriter0);
      simpleNode1.dump("<<", stringWriter0);
      assertEquals(29, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681098
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1668);
      StringWriter stringWriter0 = new StringWriter(1668);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "</");
      simpleNode0.dump("{", stringWriter1);
      SimpleNode simpleNode1 = new SimpleNode(87);
      simpleNode1.setIdentifier("{");
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.jjtAddChild(simpleNode0, 1910);
      simpleNode1.dump("", stringWriter1);
      simpleNode1.dump("VariableDeclaratorId", stringWriter1);
      simpleNode0.dump("{", stringWriter1);
      simpleNode1.dump("{", stringWriter1);
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      assertEquals("</<BreakStatement>\n</BreakStatement>\n<BreakStatement>\n</BreakStatement>\n<BreakStatement>\n</BreakStatement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.796311640173813
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Pv=>**`r*tD*x");
      StringWriter stringWriter0 = new StringWriter(1972);
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.setIdentifier(">");
      simpleNode0.setIdentifier(";");
      simpleNode0.dump("tg3Ls`*Vti@T", stringWriter0);
      stringWriter0.append('O');
      simpleNode0.dump(">", stringWriter0);
      simpleNode0.dump("VariableDeclaratorId", stringWriter0);
      simpleNode0.dump(";", stringWriter0);
      simpleNode0.dump("--", stringWriter0);
      assertEquals("<NameList>\n  <identifier>*gt</identifier>\n</NameList>\nO<NameList>\n  <identifier>*gt</identifier>\n</NameList>\n<NameList>\n  <identifier>*gt</identifier>\n</NameList>\n<NameList>\n  <identifier>*gt</identifier>\n</NameList>\n<NameList>\n  <identifier>*gt</identifier>\n</NameList>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8734641445321513
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<=");
      StringWriter stringWriter0 = new StringWriter(1964);
      simpleNode0.dump("<=", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.setIdentifier("<=");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.jjtSetParent((Node) null);
      String string0 = ">=";
      simpleNode1.setIdentifier(">=");
      simpleNode0.jjtAddChild(simpleNode1, 1896);
      simpleNode1.dump(";", stringWriter0);
      simpleNode0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) ">=", 0, 0);
      simpleNode1.dump("\"long\"", stringWriter1);
      simpleNode1.dump("~P", stringWriter1);
      simpleNode0.dump("CompilationUnit : <=", stringWriter0);
      simpleNode0.dump("1Is", stringWriter0);
      StringWriter stringWriter2 = new StringWriter(0);
      // Undeclared exception!
      try { 
        stringWriter2.append((CharSequence) "~P", 946, 2378);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.349792396172401
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<=");
      StringWriter stringWriter0 = new StringWriter(1972);
      simpleNode0.dump("<=", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.setIdentifier("<=");
      simpleNode1.setIdentifier("}");
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.setIdentifier("=");
      simpleNode0.jjtAddChild(simpleNode1, 1896);
      simpleNode1.dump(";", stringWriter0);
      simpleNode0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "=", 0, 0);
      simpleNode1.dump("\"long\"", stringWriter1);
      simpleNode1.dump("Q~pUDx", stringWriter1);
      assertEquals("<CompilationUnit>\n  <identifier>=</identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier>=</identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier>=</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
      assertEquals("<CompilationUnit>\n  <identifier>=</identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier>=</identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier>=</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.908908734898781
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<");
      StringWriter stringWriter0 = new StringWriter(1964);
      simpleNode0.dump("<", stringWriter0);
      simpleNode0.setIdentifier("<");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.jjtSetParent(simpleNode0);
      String string0 = ">=";
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump(";", stringWriter0);
      simpleNode0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("\"long\"", stringWriter1);
      simpleNode0.dump("~P", stringWriter1);
      simpleNode0.dump("CompilationUnit : < : >=", stringWriter0);
      simpleNode0.dump("1Is", stringWriter0);
      StringWriter stringWriter2 = new StringWriter(0);
      // Undeclared exception!
      try { 
        stringWriter2.append((CharSequence) "~P", 946, 2378);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
