/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 17:55:49 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      outputFormat0.isXHTML();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      outputFormat0.setXHTML(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndent(true);
      stringArray0[2] = "";
      stringArray0[3] = "Wh$[Gw ";
      stringArray0[4] = "";
      outputFormat0.setTrimText(false);
      outputFormat0.setNewLineAfterNTags(0);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      stringArray0[5] = "";
      String[] stringArray1 = new String[0];
      outputFormat1.parseOptions(stringArray1, 0);
      stringArray0[6] = "";
      stringArray0[7] = "";
      outputFormat1.setNewLineAfterNTags(3348);
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 3348);
      outputFormat1.isSuppressDeclaration();
      outputFormat1.getEncoding();
      outputFormat0.getEncoding();
      outputFormat1.setTrimText(false);
      outputFormat0.getLineSeparator();
      outputFormat0.setOmitEncoding(false);
      boolean boolean0 = outputFormat1.isPadText();
      assertEquals(3348, outputFormat1.getNewLineAfterNTags());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.getAttributeQuoteCharacter();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      boolean boolean0 = true;
      outputFormat0.setIndent(true);
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('Q');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (Q)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(true);
      outputFormat0.setEncoding("-indent");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setLineSeparator("e_2P?`Pwk");
      outputFormat0.setOmitEncoding(true);
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat0.getIndent();
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat0.setLineSeparator("");
      outputFormat1.isXHTML();
      outputFormat1.getLineSeparator();
      outputFormat0.setNewLineAfterNTags(447);
      String[] stringArray0 = new String[0];
      outputFormat1.parseOptions(stringArray0, 500);
      outputFormat0.isTrimText();
      outputFormat1.setIndent("1$");
      outputFormat0.isPadText();
      OutputFormat.createCompactFormat();
      outputFormat0.setXHTML(true);
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterNTags((-630));
      outputFormat0.setIndent("D");
      assertEquals((-630), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      outputFormat0.setIndent("");
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setTrimText(false);
      outputFormat0.isXHTML();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.isXHTML();
      outputFormat0.setNewlines(false);
      outputFormat0.setIndent("L+2C3erx{MO_u/y}K");
      assertEquals("L+2C3erx{MO_u/y}K", outputFormat0.getIndent());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterNTags(3085);
      outputFormat0.isNewlines();
      assertEquals(3085, outputFormat0.getNewLineAfterNTags());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "G/Yv4X33P";
      stringArray0[1] = "% Dk>/5[h,x@@-";
      int int0 = outputFormat1.parseOptions(stringArray0, 3085);
      assertEquals(3085, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterNTags(0);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('X');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (X)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(";^oBA7Q/VP");
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(1135);
      outputFormat0.setNewLineAfterNTags(2);
      outputFormat0.setTrimText(true);
      outputFormat0.isPadText();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setEncoding(";^oBA7Q/VP");
      outputFormat1.isPadText();
      outputFormat0.setOmitEncoding(false);
      outputFormat1.setPadText(true);
      outputFormat1.setExpandEmptyElements(false);
      outputFormat1.setLineSeparator(";^oBA7Q/VP");
      String[] stringArray0 = new String[3];
      stringArray0[0] = ";^oBA7Q/VP";
      stringArray0[1] = ";^oBA7Q/VP";
      stringArray0[2] = ";^oBA7Q/VP";
      outputFormat1.parseOptions(stringArray0, 2);
      outputFormat1.isXHTML();
      outputFormat0.getNewLineAfterNTags();
      outputFormat1.setXHTML(true);
      outputFormat0.parseOptions(stringArray0, 1135);
      boolean boolean0 = outputFormat1.isNewlines();
      assertEquals(";^oBA7Q/VP", outputFormat1.getLineSeparator());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(false);
      outputFormat0.setPadText(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setTrimText(true);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getIndent();
      outputFormat0.setTrimText(true);
      outputFormat0.setIndent(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isTrimText();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setOmitEncoding(false);
      outputFormat1.setNewLineAfterNTags(0);
      assertFalse(outputFormat1.isXHTML());
      
      outputFormat0.setIndent(true);
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertTrue(outputFormat0.isXHTML());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8820393286253112
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-xhtml";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "<[TG=c&C\"zOA(wM}.Z";
      stringArray0[3] = ">oL}*nO";
      stringArray0[4] = ";\"!f";
      stringArray0[5] = "";
      stringArray0[6] = "org.dom4j.io.OutputFormat";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("Go1WK$cG~!1");
      outputFormat0.setIndent("-suppressDeclaration");
      outputFormat0.setPadText(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(false);
      outputFormat0.getEncoding();
      outputFormat0.getIndent();
      outputFormat0.setSuppressDeclaration(false);
      assertEquals("<[TG=c&C\"zOA(wM}.Z", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.9020023132056028
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setTrimText(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setNewLineAfterNTags(352);
      outputFormat0.setNewlines(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isNewlines();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat0.setPadText(true);
      outputFormat0.isXHTML();
      outputFormat0.setIndent(true);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat2.setLineSeparator("N!>]|3mq/2!$lD");
      outputFormat0.isOmitEncoding();
      outputFormat2.isNewlines();
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat3.setAttributeQuoteCharacter('\"');
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      outputFormat4.setIndent("N!>]|3mq/2!$lD");
      outputFormat0.setNewlines(false);
      outputFormat0.setIndent(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat3.setNewLineAfterNTags((-2387));
      assertEquals((-2387), outputFormat3.getNewLineAfterNTags());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("!_", false, "");
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setEncoding("STM5");
      outputFormat0.setExpandEmptyElements(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent("}6m+g:");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "!_";
      stringArray0[3] = "cJfPq[wf_ryD*p";
      stringArray0[4] = "!_";
      stringArray0[5] = "}6m+g:";
      stringArray0[6] = "}6m+g:";
      outputFormat1.parseOptions(stringArray0, 465);
      outputFormat0.isNewlines();
      outputFormat0.isNewLineAfterDeclaration();
      assertEquals("}6m+g:", outputFormat0.getIndent());
      
      outputFormat1.isExpandEmptyElements();
      boolean boolean0 = outputFormat1.isTrimText();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent((String) null);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setOmitEncoding(false);
      outputFormat1.setEncoding((String) null);
      outputFormat1.setIndent((String) null);
      outputFormat0.setIndent((String) null);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent("q9i,{");
      outputFormat0.setTrimText(true);
      outputFormat0.getIndent();
      outputFormat0.setEncoding("q9i,{");
      outputFormat0.isSuppressDeclaration();
      outputFormat0.getEncoding();
      assertTrue(outputFormat0.isExpandEmptyElements());
      
      outputFormat1.isPadText();
      outputFormat1.setExpandEmptyElements(false);
      boolean boolean0 = outputFormat1.isNewlines();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.2638576869792812
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = new OutputFormat("v%v0pX", true, ",C=(QWNg!bhx**ZXS\"");
      outputFormat2.setIndent("org.dom4j.io.OutputFormat");
      outputFormat0.setIndent("-expandEmpty-lineSearator");
      outputFormat0.setIndentSize(45);
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = new OutputFormat((String) null, true, "-expandEmpty-lineSearator");
      OutputFormat outputFormat4 = new OutputFormat();
      outputFormat4.setOmitEncoding(false);
      int int0 = (-749);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-expandEmpty-xhtml";
      outputFormat4.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-1882));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1882
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.374976964197478
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = new OutputFormat("v%v0pX", true, ",C=(QWNg!bhx**ZXS\"");
      outputFormat2.setIndent("org.dom4j.io.OutputFormat");
      outputFormat2.setIndent("-indent");
      outputFormat1.setIndentSize(45);
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = new OutputFormat("-expandEmpty-lineSearator", true, ",C=(QWNg!bhx**ZXS\"");
      OutputFormat outputFormat4 = new OutputFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-indent";
      stringArray0[1] = "org.dom4j.io.OutputFormat";
      stringArray0[2] = "-expandEmpty-xht1Oml";
      stringArray0[3] = ",C=(QWNg!bhx**ZXS\"";
      stringArray0[4] = "org.dom4j.io.OutputFormat";
      stringArray0[5] = "-indent";
      stringArray0[6] = "v%v0pX";
      stringArray0[7] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat5 = new OutputFormat(")A^})/gY=g", true, "");
      // Undeclared exception!
      try { 
        outputFormat4.setAttributeQuoteCharacter('{');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ({)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2088551326456582
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = new OutputFormat(",C=(QWNg!bhx**ZXS\"", true, "  ");
      outputFormat0.setIndent("org.dom4j.io.OutputFormat");
      outputFormat1.setIndentSize(0);
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = new OutputFormat("\u0005Romb");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "\u0005Romb";
      outputFormat2.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "^J\u0006Wep<s";
      stringArray1[1] = "-expandEmpty-xht1Oml";
      stringArray1[2] = "-expandEmpty-xht1Oml";
      stringArray1[3] = "-expandEmpty-lineSearator";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray1, (-1463));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1463
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4354735656251962
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-padText", true, "-ohtml `");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-padText";
      stringArray0[1] = "-padText";
      stringArray0[2] = "-ohtml `";
      stringArray0[3] = "-padText";
      stringArray0[4] = "-padText";
      stringArray0[5] = "-ohtml `";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat.createPrettyPrint();
      outputFormat0.setTrimText(true);
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8392967479776607
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("c", false, "yLvG$bF>)F[a");
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "yLvG$bF>)F[a";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "yLvG$bF>)F[a";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"yLvG$bF>)F[a\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.2290985307613993
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "-trimText";
      stringArray0[4] = "-trimText";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat1 = new OutputFormat("-trimText", true, "XK.~qM");
      outputFormat1.setIndent("-lineS");
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.setIndentSize(295);
      OutputFormat outputFormat3 = new OutputFormat("XK.~qM", true, "-expandEmpty-lineSearator");
      OutputFormat outputFormat4 = new OutputFormat();
      assertFalse(outputFormat4.isTrimText());
      
      String[] stringArray1 = new String[5];
      stringArray1[0] = "-lineS";
      stringArray1[1] = "XK.~qM";
      stringArray1[2] = "-expandEmpty-lineSearator";
      stringArray1[3] = null;
      stringArray1[4] = "-expandEmpty-lineSearator";
      outputFormat0.parseOptions(stringArray1, 94);
      assertTrue(outputFormat0.isTrimText());
      
      int int0 = outputFormat3.parseOptions(stringArray1, 0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.730943996676284
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty-xhtml", false, "yLvG$bF>)F[a");
      outputFormat0.setIndent("QCi*Dg^K=g");
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = new OutputFormat("-xhtml/O:9J6Fv+]`R]'!");
      outputFormat1.setTrimText(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expandEmpty-xht1Oml";
      stringArray0[1] = "v%v0pX";
      stringArray0[2] = "-xhtml/O:9J6Fv+]`R]'!";
      stringArray0[3] = "org.dom4j.io.OutputFormat";
      stringArray0[4] = "-expandEmpty-xht1Oml";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setAttributeQuoteCharacter('\'');
      assertEquals("QCi*Dg^K=g", outputFormat0.getIndent());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.0642580751745085
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty-xhtml", false, "yLvG$bF>)F[a");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = new OutputFormat("-omitEncoding");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expandEmpty-xht1Oml";
      stringArray0[1] = "v%v0pX";
      stringArray0[2] = "-omitEncoding";
      stringArray0[3] = "v%v0pX";
      stringArray0[4] = "-expandEmpty-xht1Oml";
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[9];
      stringArray1[0] = "-omitEncoding";
      stringArray1[1] = "-expandEmpty-xhtml";
      stringArray1[2] = "v%v0pX";
      stringArray1[3] = "v%v0pX";
      stringArray1[4] = "v%v0pX";
      stringArray1[5] = "v%v0pX";
      stringArray1[6] = "v%v0pX";
      stringArray1[7] = "v%v0pX";
      stringArray1[8] = "-expandEmpty-xht1Oml";
      outputFormat2.parseOptions(stringArray1, 0);
      OutputFormat outputFormat3 = new OutputFormat("org.do", false, "v%v0pX");
      outputFormat3.parseOptions(stringArray1, 2);
      outputFormat1.parseOptions(stringArray0, 32);
      outputFormat1.parseOptions(stringArray1, 2749);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 1124);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
