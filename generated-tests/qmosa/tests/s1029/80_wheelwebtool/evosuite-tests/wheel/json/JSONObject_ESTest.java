/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 19:00:16 GMT 2018
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "";
      byte byte0 = (byte)75;
      hashMap0.put("", "");
      Byte byte1 = new Byte((byte)75);
      jSONObject0.append("", byte1);
      jSONObject0.optBoolean("");
      String string1 = "(X";
      double double0 = 1.0;
      String string2 = "[]";
      jSONObject0.toString((int) (byte)75);
      String string3 = "/;3',TyJsCsJY{`lWJ7";
      hashMap0.replace((Object) jSONObject0, "/;3',TyJsCsJY{`lWJ7", "`f`HUJ}");
      boolean boolean0 = false;
      try { 
        Integer.decode("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length string
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "s\u0002");
      jSONObject0.put("Zl\b0!U$O\"1", false);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject.testValidity(object0);
      Float float0 = new Float(3638.2160814911513);
      String string0 = JSONObject.numberToString(float0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java.lang.Float@0000000001";
      stringArray0[1] = "java.lang.Float@0000000001";
      stringArray0[2] = "java.lang.Float@0000000001";
      stringArray0[3] = "java.lang.Float@0000000001";
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      String string1 = jSONObject0.optString("java.lang.Float@0000000001");
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<JSONObject, JSONObject> hashMap0 = new HashMap<JSONObject, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("", (-1447.11026710926));
      jSONObject1.optDouble("ER3 6F.TH`", 1.0);
      int int0 = jSONObject0.optInt("Q;0Nu~LFKC", 629);
      assertEquals(1, jSONObject0.length());
      assertEquals(629, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("\b");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of \b
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = ".";
      JSONObject jSONObject0 = new JSONObject((Object) ".");
      jSONObject0.optLong("Expected '");
      jSONObject0.optBoolean(".", true);
      try { 
        jSONObject0.get(" of ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\" of \"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Double double0 = new Double(1542.6381942459668);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Bad value from toJSONString: ";
      stringArray0[1] = "__),";
      stringArray0[2] = "6&_Y^";
      stringArray0[3] = "rVrxsEaM\";owe";
      Double.sum((-1231.94373847), (-2861.21195672));
      stringArray0[4] = "yZ";
      stringArray0[5] = "2**uzct/";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      try { 
        jSONObject0.getString(".RC7e7d9Yy@");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\".RC7e7d9Yy@\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Integer integer0 = new Integer(1);
      JSONObject.valueToString(integer0, 1, (-1101));
      String string0 = "";
      jSONObject0.isNull("");
      jSONObject0.optInt("", 87);
      jSONObject0.names();
      long long0 = 0L;
      try { 
        jSONObject0.get("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Float float0 = new Float(0.0F);
      Float.isFinite(0.0F);
      JSONObject jSONObject0 = new JSONObject(float0);
      Iterator iterator0 = jSONObject0.keys();
      Float.isFinite(0.0F);
      jSONObject0.optString("gG6.5W.1(<", "] is not a number.");
      HashMap<Object, Byte> hashMap0 = new HashMap<Object, Byte>();
      jSONObject0.put("o*({1kZ(OdxXr", (Map) hashMap0);
      jSONObject0.has("] is not a number.");
      jSONObject0.putOpt((String) null, iterator0);
      try { 
        jSONObject0.getJSONObject((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2623862541833204
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      JSONObject jSONObject0 = new JSONObject(boolean0, stringArray0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject2 = jSONObject1.put("", (-1561.0947));
      try { 
        jSONObject2.getBoolean("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject.getNames((Object) jSONArray0);
      int int0 = 16;
      try { 
        jSONArray0.getJSONObject(16);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[16] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      short short0 = (short)0;
      Short short1 = new Short((short)0);
      Short.toUnsignedLong((short)0);
      JSONObject jSONObject0 = new JSONObject(short1);
      jSONObject0.remove("] not found.");
      jSONObject0.optBoolean("] not found.", true);
      try { 
        jSONObject0.getString("] not found.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"] not found.\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "4v^+yQ^'fhW";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject0.optInt("", 48);
      JSONObject jSONObject2 = jSONObject1.put("] is not a number.", 0L);
      jSONObject2.put("4v^+yQ^'fhW", (Map) null);
      jSONObject2.put("4v^+yQ^'fhW", 0);
      jSONObject2.toString(0, 48);
      String[] stringArray1 = JSONObject.getNames(jSONObject0);
      assertNull(stringArray1);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0746142917293842
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      jSONObject0.toString();
      try { 
        jSONObject0.getLong("{}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{}\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("JSONArray initial value should be a string or collection or array.", true);
      jSONObject0.names();
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      StringWriter stringWriter0 = new StringWriter(0);
      JSONObject.doubleToString((-1.0));
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "-1", 0, (-1095));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optDouble("");
      JSONObject jSONObject1 = jSONObject0.put("", false);
      String string0 = "\\r";
      jSONObject1.remove("\r");
      Boolean boolean0 = new Boolean("");
      Boolean.getBoolean("get");
      try { 
        jSONObject1.append("", boolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = JSONObject.doubleToString((-2544.5));
      assertEquals("-2544.5", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.021256231935363
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Float float0 = new Float(1722.0809F);
      Float.isFinite(1722.0809F);
      JSONObject jSONObject0 = new JSONObject(float0);
      jSONObject0.keys();
      Float.isFinite(1722.0809F);
      jSONObject0.optString("<<H~$AZCa,i?3iw", "<<H~$AZCa,i?3iw");
      HashMap<Object, Byte> hashMap0 = new HashMap<Object, Byte>();
      JSONObject jSONObject1 = jSONObject0.put("N\"]>N#/ipT`pha~J", (Map) hashMap0);
      boolean boolean0 = new Boolean(true);
      Byte byte0 = new Byte((byte) (-1));
      jSONObject1.putOpt("] is not a JSONArray.", byte0);
      try { 
        jSONObject1.getJSONObject("P:/3a@T");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"P:/3a@T\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.068304324405057
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Float float0 = new Float(0.0);
      Float.sum((-1074.4828F), (-1074.4828F));
      JSONObject.valueToString(float0);
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertNull(stringArray0);
      
      JSONArray jSONArray0 = jSONObject0.names();
      assertNull(jSONArray0);
      
      Boolean boolean0 = Boolean.valueOf("getsum");
      JSONObject.valueToString(boolean0);
      double double0 = jSONObject0.optDouble("is", (double) (-2148.9656F));
      assertEquals((-2148.965576171875), double0, 0.01);
      
      double double1 = jSONObject0.optDouble("java.lang.Boolean@0000000004");
      assertEquals(Double.NaN, double1, 0.01);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optDouble("");
      JSONObject jSONObject1 = jSONObject0.put("", true);
      jSONObject1.remove("\r");
      Boolean boolean0 = new Boolean("");
      boolean boolean1 = new Boolean(true);
      JSONObject jSONObject2 = new JSONObject(jSONObject0);
      JSONObject.doubleToString(Double.NaN);
      JSONObject.getNames((Object) "\r");
      String string0 = ": ";
      jSONObject2.optLong(": ");
      String string1 = "\\r";
      jSONObject0.optInt("\r");
      String string2 = "\\t";
      try { 
        jSONObject0.get("\t");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\t\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Float float0 = new Float(0.0F);
      Float.isFinite(0.0F);
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optJSONObject(": ");
      Long long0 = new Long(0L);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        JSONObject.getNames((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.252728336819822
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      jSONObject1.put("", (-1447.11026710926));
      jSONObject1.optDouble("", (-1447.11026710926));
      assertEquals(1, jSONObject1.length());
      
      int int0 = jSONObject0.optInt("", 629);
      assertEquals(629, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7410229567553024
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HashMap<JSONObject, JSONObject> hashMap0 = new HashMap<JSONObject, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "";
      Object object0 = new Object();
      JSONObject.valueToString(object0, 92, 92);
      String string1 = "mYX3 PD11|X";
      JSONObject jSONObject1 = jSONObject0.accumulate("mYX3 PD11|X", object0);
      jSONObject0.optDouble("\"java.lang.Object@0000000002\"");
      try { 
        jSONObject1.getJSONObject("' and instead saw '");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"' and instead saw '\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.871476118054867
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      JSONObject jSONObject1 = jSONObject0.put("", 0);
      JSONObject jSONObject2 = jSONObject1.put("", (Object) "");
      JSONArray jSONArray0 = new JSONArray();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
      StringWriter stringWriter2 = stringWriter1.append('2');
      Writer writer0 = jSONArray0.write(stringWriter2);
      jSONObject2.write(writer0);
      JSONObject.getNames((Object) jSONObject0);
      jSONObject0.toString(504, 0);
      Byte byte0 = new Byte((byte)85);
      Byte.compare((byte)0, (byte)85);
      Byte.compare((byte)85, (byte) (-42));
      Byte.compare((byte) (-42), (byte)85);
      Byte.toUnsignedInt((byte)0);
      JSONObject.valueToString(byte0);
      JSONObject.valueToString("java.lang.Byte@0000000004");
      jSONObject1.optInt("+S<QVF}F:", 127);
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.247667711921455
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject2 = jSONObject1.put("", (-1447.11026710926));
      JSONObject.valueToString(jSONObject1, 25, 39);
      jSONObject1.optDouble("", (-1447.11026710926));
      JSONObject.doubleToString((-1447.11026710926));
      try { 
        jSONObject2.getBoolean("] is not a JSONArray.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"] is not a JSONArray.\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object1);
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertEquals(1, stringArray0.length);
      assertEquals(1, jSONObject0.length());
      assertNotNull(stringArray0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.458311329683084
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      hashMap0.put("", "");
      Byte byte0 = new Byte((byte)75);
      JSONObject jSONObject1 = new JSONObject();
      jSONObject0.optBoolean("");
      String string0 = "(X";
      double double0 = 1.0;
      String string1 = "[]";
      jSONObject0.toString((int) (byte)75);
      String string2 = "/;3',TyJsCsJY{`lWJ7";
      hashMap0.replace((Object) jSONObject0, "/;3',TyJsCsJY{`lWJ7", "`f`HUJ}");
      boolean boolean0 = false;
      try { 
        Integer.decode("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length string
         //
         verifyException("java.lang.Integer", e);
      }
  }
}
