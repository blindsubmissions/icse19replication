/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 17:45:56 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(63);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(2021);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.getName();
      int int0 = (-3485);
      fBProcedureCall0.mapOutParamIndexToPosition((-3485));
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.equals((Object) null);
      fBProcedureCall0.setName("SELECT * FROM null");
      fBProcedureParam0.setType(2021);
      fBProcedureCall0.mapOutParamIndexToPosition(1, true);
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.mapOutParamIndexToPosition((-3485));
      try { 
        fBProcedureCall0.registerOutParam(1, 1);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(1);
      int int0 = 0;
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam(0, 1988);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(1447);
      fBProcedureCall0.setName((String) null);
      fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.getSQL(false);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(2142, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4681399390162087
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      boolean boolean0 = true;
      fBProcedureCall0.addParam(0, "");
      int int0 = (-3136);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-3136), (-3136));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3137
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 0;
      String string0 = "";
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.addParam(0, "");
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam(997, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3693821196946767
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(1339);
      fBProcedureParam0.setIndex(2);
      assertEquals(2021, fBProcedureParam0.getType());
      
      fBProcedureParam0.setType(1446);
      fBProcedureParam0.setType((-1183));
      fBProcedureCall0.getOutputParam(31);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam(1);
      fBProcedureParam1.setType(2);
      fBProcedureParam1.setType(31);
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addParam(543, "rK");
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.equals(object0);
      fBProcedureCall0.mapOutParamIndexToPosition(31);
      fBProcedureCall0.clone();
      fBProcedureCall0.clone();
      fBProcedureCall0.equals("rK");
      fBProcedureCall0.clone();
      assertTrue(fBProcedureCall0.equals((Object)object0));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.594166699118017
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(1709);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(4360);
      fBProcedureParam0.setIndex(4360);
      fBProcedureCall0.getSQL(false);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam(0);
      fBProcedureParam1.setType((-1));
      int int0 = 0;
      int int1 = 0;
      fBProcedureParam1.setIndex(0);
      try { 
        fBProcedureParam1.setValue(fBProcedureCall0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getName();
      fBProcedureCall0.setName("+Jx!6/4\"{K(Ayu[u^");
      fBProcedureCall0.getName();
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.getName();
      fBProcedureCall0.getSQL(false);
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE +Jx!6/4\"{K(Ayu[u^", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.17157089695751
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName((String) null);
      fBProcedureCall0.getSQL(true);
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.setName((String) null);
      fBProcedureCall0.equals(object0);
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setType(899);
      fBProcedureParam0.setIndex((-193));
      fBProcedureParam0.setType(0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.setName(" not set and ");
      fBProcedureCall0.hashCode();
      fBProcedureCall0.getOutputParams();
      int int0 = 0;
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      fBProcedureCall0.addParam(0, " not set and ");
      fBProcedureCall0.mapOutParamIndexToPosition(0, true);
      fBProcedureCall0.getSQL(true);
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall1.addParam(0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4675346494083295
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 0;
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.equals(object0);
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.mapOutParamIndexToPosition((-182));
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall1.addOutputParam(fBProcedureParam0);
      FBProcedureCall fBProcedureCall2 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall2.setName("H s");
      fBProcedureParam0.setType(0);
      fBProcedureCall0.getSQL(true);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-182), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -183
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.223379099479775
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(1339);
      fBProcedureParam0.setIndex(2);
      assertEquals(0, fBProcedureParam0.getType());
      
      fBProcedureParam0.setType(1446);
      fBProcedureParam0.setType((-1183));
      fBProcedureCall0.getOutputParam(31);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam(1);
      fBProcedureParam1.setType(2);
      fBProcedureParam1.setType(31);
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(543, "rK");
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.equals(object0);
      fBProcedureCall0.mapOutParamIndexToPosition(31);
      fBProcedureParam2.setIndex((-37));
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      fBProcedureCall0.mapOutParamIndexToPosition(0, true);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.clone();
      assertTrue(fBProcedureCall0.equals((Object)object0));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.082300579430681
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(1339);
      fBProcedureParam0.setIndex(2);
      fBProcedureParam0.setType(1446);
      fBProcedureParam0.setType((-1183));
      fBProcedureCall0.getOutputParam(31);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam(2);
      fBProcedureParam1.setType(2);
      fBProcedureParam1.setType(31);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addParam(543, "rK");
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall0.equals(fBProcedureCall1);
      fBProcedureCall0.mapOutParamIndexToPosition(31);
      fBProcedureCall0.clone();
      FBProcedureCall fBProcedureCall2 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall0.equals("rK");
      fBProcedureCall0.clone();
      assertTrue(fBProcedureCall0.equals((Object)fBProcedureCall1));
      
      fBProcedureCall1.addParam(31, "rK");
      assertFalse(fBProcedureCall1.equals((Object)fBProcedureCall2));
      assertNotSame(fBProcedureCall1, fBProcedureCall2);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1352402575267164
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName((String) null);
      fBProcedureCall0.getSQL(true);
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.setName((String) null);
      boolean boolean0 = fBProcedureCall0.equals(object0);
      assertTrue(boolean0);
      
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setType(899);
      fBProcedureParam0.setIndex((-193));
      fBProcedureParam0.setType(0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.setName(" not set and ");
      fBProcedureCall0.hashCode();
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(0, "rK");
      Object object1 = fBProcedureCall0.clone();
      fBProcedureCall0.equals(object1);
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.mapOutParamIndexToPosition(940);
      fBProcedureParam1.setIndex(2);
      fBProcedureCall0.mapOutParamIndexToPosition(2780, true);
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.clone();
      assertFalse(fBProcedureCall0.equals((Object)object0));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.895953610797494
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(63);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(2021);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.getName();
      fBProcedureCall0.addParam(63, "7$4j8hqjbR2?+k.ER");
      fBProcedureCall0.getSQL(false);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(2, "");
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getSQL(false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 63
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.310686555367963
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.hashCode();
      fBProcedureCall0.addParam(63, "7$4j8hqjbR2?+k.ER");
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2, "");
      fBProcedureParam0.setIndex(992);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.clone();
      // Undeclared exception!
      try { 
        fBProcedureCall0.getSQL(false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 63
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.hashCode();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2, "");
      fBProcedureParam0.setType((-1089));
      fBProcedureParam0.setIndex(992);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.clone();
      fBProcedureCall0.getSQL(false);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(992, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4804388755866102
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.hashCode();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(63, "7$4j8hqjbR2?+k.ER");
      fBProcedureCall0.clone();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(547, "7$4j8hqjbR2?+k.ER");
      fBProcedureParam0.setIndex(63);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      Object object0 = new Object();
      try { 
        fBProcedureCall0.getSQL(true);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Value of parameter 63 not set and it was not registered as output parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0642580751745085
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.hashCode();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(63, "7$4j8hqjbR2?+k.ER");
      fBProcedureParam0.setIndex(992);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      assertTrue(fBProcedureCall1.equals((Object)fBProcedureCall0));
      
      fBProcedureCall1.getInputParam(2);
      fBProcedureCall0.getSQL(false);
      fBProcedureCall1.equals("7$4j8hqjbR2?+k.ER");
      int int0 = fBProcedureCall1.mapOutParamIndexToPosition(63, true);
      assertFalse(fBProcedureCall1.equals((Object)fBProcedureCall0));
      assertEquals(63, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0814712129372395
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.hashCode();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(76, "7$4j8hqjbR2?+k.ER");
      fBProcedureParam0.setIndex(992);
      assertEquals(76, fBProcedureParam0.getPosition());
      
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall1.getInputParam(2);
      int int0 = fBProcedureCall1.mapOutParamIndexToPosition(992);
      assertEquals(1, int0);
      
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(7$4j8hqjbR2?+k.ER)", string0);
      
      fBProcedureCall1.equals("7$4j8hqjbR2?+k.ER");
      fBProcedureParam1.clone();
      fBProcedureCall1.mapOutParamIndexToPosition(76, true);
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureParam1);
      assertFalse(fBProcedureCall1.equals((Object)fBProcedureCall0));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2290512419743322
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName((String) null);
      fBProcedureCall0.getSQL(true);
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall0.setName((String) null);
      fBProcedureCall1.setName("SELECT * FROM null");
      fBProcedureCall0.getOutputParam((-211));
      fBProcedureCall0.equals(fBProcedureCall1);
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setIndex(0);
      fBProcedureParam0.setIndex((-194));
      fBProcedureParam0.setType(0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.setName(" not set and ");
      fBProcedureCall0.mapOutParamIndexToPosition(899, true);
      fBProcedureCall0.addParam(0, " not set and ");
      fBProcedureCall0.mapOutParamIndexToPosition(0, true);
      fBProcedureCall0.getName();
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall2.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.0982737395252498
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(887, "IN7c2=T?^7;rde");
      fBProcedureCall1.getSQL(true);
      fBProcedureParam0.setValue("MemMk-;x4|qD|");
      fBProcedureParam0.setIndex(887);
      fBProcedureCall0.registerOutParam(887, 13);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(887, "IN7c2=T?^7;rde");
      fBProcedureCall1.addOutputParam(fBProcedureParam1);
      fBProcedureCall1.addInputParam(fBProcedureParam0);
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-1018), "EXECUTE PROCEDURE");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1018
         //
         verifyException("java.util.Vector", e);
      }
  }
}
