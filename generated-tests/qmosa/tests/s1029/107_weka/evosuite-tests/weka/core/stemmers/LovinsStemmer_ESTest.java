/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:32:40 GMT 2018
 */

package weka.core.stemmers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.core.TechnicalInformation;
import weka.core.stemmers.LovinsStemmer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LovinsStemmer_ESTest extends LovinsStemmer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.8445362547419073
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String string0 = lovinsStemmer0.getRevision();
      assertEquals("8034", string0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "J7'fRJ;\"g`f`HUJ}nj";
      stringArray0[1] = "J7'fRJ;\"g`f`HUJ}nj";
      stringArray0[2] = "J7'fRJ;\"g`f`HUJ}nj";
      stringArray0[3] = "J7'fRJ;\"g`f`HUJ}nj";
      stringArray0[4] = "";
      stringArray0[5] = "J7'fRJ;\"g`f`HUJ}nj";
      stringArray0[6] = "J7'fRJ;\"g`f`HUJ}nj";
      stringArray0[7] = "J7'fRJ;\"g`f`HUJ}nj";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "";
      stringArray1[1] = "8034";
      stringArray1[2] = "";
      stringArray1[3] = "8034";
      stringArray1[4] = "h$t[|j:};kukcgs";
      stringArray1[5] = "8034";
      stringArray1[6] = "J7'fRJ;\"g`f`HUJ}nj";
      stringArray1[7] = "8034";
      LovinsStemmer.main(stringArray1);
      LovinsStemmer.main(stringArray0);
      String string1 = lovinsStemmer0.stemString("J7'fRJ;\"g`f`HUJ}nj");
      assertEquals("j7'frj;\"g`f`huj}nj", string1);
      
      lovinsStemmer0.getTechnicalInformation();
      String string2 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string2);
      
      String string3 = lovinsStemmer0.stem("r%SUq/)>_70");
      assertEquals("r%suq/)>_70", string3);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2265558156134033
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("8Ea7t{lbSs");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("8Ea7t{lbSs");
      // Undeclared exception!
      try { 
        lovinsStemmer0.stemString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0642580751745085
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      stringArray0[1] = "rx{MO_u/y}Kt?[S";
      stringArray0[2] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray0[3] = "8034";
      stringArray0[4] = "b`\"bYLQzW";
      stringArray0[5] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray0[6] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray0[7] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      String[] stringArray1 = new String[9];
      stringArray1[0] = "a stemmer based on the lovins stemmer, described here:\n\njulie beth lovins (1968). development of a stemming algorithm. mechanical translation and computational linguistics. 11:22-31.";
      stringArray1[1] = "rx{MO_u/y}Kt?[S";
      stringArray1[2] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray1[3] = "b`\"bYLQzW";
      stringArray1[4] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray1[5] = "";
      stringArray1[6] = "a stemmer based on the lovins stemmer, described here:\n\njulie beth lovins (1968). development of a stemming algorithm. mechanical translation and computational linguistics. 11:22-31.";
      stringArray1[7] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray1[8] = "rx{MO_u/y}Kt?[S";
      LovinsStemmer.main(stringArray1);
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      // Undeclared exception!
      try { 
        lovinsStemmer0.stemString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0086074596411065
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String string0 = lovinsStemmer0.stemString("lid");
      assertEquals("lis", string0);
      
      lovinsStemmer0.stem("/Lndj`V`Og-y");
      String string1 = lovinsStemmer0.stem("1E%x_[HE");
      assertEquals("1e%x_[h", string1);
      
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "1e%x_[h";
      stringArray0[1] = "lid";
      stringArray0[2] = "1E%x_[HE";
      stringArray0[3] = "lis";
      stringArray0[4] = "1E%x_[HE";
      stringArray0[5] = "/lndj`v`og-";
      stringArray0[6] = "1E%x_[HE";
      stringArray0[7] = "1E%x_[HE";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stem("3H;q;");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      String string2 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string2);
      
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("");
      String string3 = lovinsStemmer0.getRevision();
      assertEquals("8034", string3);
      
      String string4 = lovinsStemmer0.stem("ation");
      assertEquals("ation", string4);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0384540710653667
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      String[] stringArray0 = new String[1];
      LovinsStemmer.main(stringArray0);
      stringArray0[0] = "d9Y";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("d9Y");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.stemString("zct/=");
      assertEquals("zct/=", string0);
      
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("\t@/6Pr");
      lovinsStemmer0.stemString("O");
      String string1 = lovinsStemmer0.getRevision();
      assertEquals("8034", string1);
      
      lovinsStemmer0.stem("\t@/6pr");
      lovinsStemmer0.stemString("zct/=");
      lovinsStemmer0.globalInfo();
      String string2 = lovinsStemmer0.stemString("\t@/6Pr");
      assertEquals("\t@/6pr", string2);
      
      String string3 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string3);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1551092557914555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String string0 = "H\\uTY;}7Kz>?PS?";
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString(string0);
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("'%:R%lO]");
      lovinsStemmer0.stemString("'%:R%lO]");
      lovinsStemmer0.stemString("b((~:MUbE+$z/9C");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("'%:r%lo]");
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("8034");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.stemString("b((~:mub+$z/9c");
      lovinsStemmer0.getRevision();
      String[] stringArray0 = new String[9];
      stringArray0[0] = string0;
      stringArray0[1] = "8034";
      stringArray0[2] = "8034";
      stringArray0[3] = "8034";
      stringArray0[4] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[5] = "b((~:MUbE+$z/9C";
      stringArray0[6] = "8034";
      stringArray0[7] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[8] = "'%:r%lo]";
      LovinsStemmer.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9071380966380936
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("$Revision: 8034 $");
      lovinsStemmer0.getTechnicalInformation();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "$revis: 8034 $";
      stringArray0[1] = "$Revision: 8034 $";
      stringArray0[2] = "$Revision: 8034 $";
      stringArray0[3] = "$Revision: 8034 $";
      stringArray0[4] = "$revis: 8034 $";
      stringArray0[5] = "ux";
      stringArray0[6] = "$Revision: 8034 $";
      stringArray0[7] = "$Revision: 8034 $";
      stringArray0[8] = "$Revision: 8034 $";
      LovinsStemmer.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.7723805260701166
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LovinsStemmer.main((String[]) null);
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("8034ert");
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      String string0 = lovinsStemmer0.stemString("hK BzpWMnx$-jN]&c;");
      assertEquals("hk bzpwmnx$-jn]&c;", string0);
      
      lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("8034ert");
      lovinsStemmer0.getRevision();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.globalInfo();
      String string1 = lovinsStemmer1.stemString("8034ert");
      assertEquals("8034ers", string1);
      
      LovinsStemmer.main((String[]) null);
      lovinsStemmer1.stem("weka.core.TechnicalInformation$Field");
      lovinsStemmer1.globalInfo();
      lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer1.getTechnicalInformation();
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      LovinsStemmer.main((String[]) null);
      lovinsStemmer2.globalInfo();
      LovinsStemmer.main((String[]) null);
      String string2 = lovinsStemmer2.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string2);
      
      lovinsStemmer1.stem("8034ert");
      lovinsStemmer2.getRevision();
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.getTechnicalInformation();
      String string3 = lovinsStemmer0.getRevision();
      assertEquals("8034", string3);
      
      LovinsStemmer lovinsStemmer3 = new LovinsStemmer();
      String string4 = lovinsStemmer3.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer based on the lovins stemmer, described here:\n\njulie beth lovins (1968). development of a stemming algorithm. mechanical translation and computational linguistics. 11:22-31.", string4);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9524303320983685
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("lid");
      lovinsStemmer0.stem("/Lndj`V`Og-y");
      lovinsStemmer0.stem("1E%x_[HE");
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "1e%x_[h";
      stringArray0[1] = "lid";
      stringArray0[2] = "1E%x_[HE";
      LovinsStemmer.main(stringArray0);
      String string0 = lovinsStemmer0.stemString("/W_,");
      assertEquals("/w_,", string0);
      
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stem("661");
      String string2 = lovinsStemmer1.stemString("volumvad");
      assertEquals("volumvas", string2);
      
      LovinsStemmer.main(stringArray0);
      lovinsStemmer1.toString();
      lovinsStemmer1.toString();
      LovinsStemmer.main(stringArray0);
      String string3 = lovinsStemmer0.stem("%KLW)W-|=b,li");
      assertEquals("%klw)w-|=b,l", string3);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.134432915866057
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("hKgaUx'3Su8");
      String string0 = lovinsStemmer0.stemString("hKgaUx'3Su8");
      assertEquals("hkgaux'3su8", string0);
      
      lovinsStemmer0.stemString("hkgaux'3su8");
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("hkgaux'3su8");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("hkgaux'3su8");
      String string1 = lovinsStemmer0.getRevision();
      assertEquals("8034", string1);
      
      String string2 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string2);
      
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stemString("tex");
      String string3 = lovinsStemmer0.stem("dex");
      assertEquals("dic", string3);
      
      String string4 = lovinsStemmer1.stem("hkgaux'3su8");
      assertEquals("hkgaux'3su8", string4);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.852219593363262
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[4];
      lovinsStemmer0.stem("");
      stringArray0[0] = "";
      stringArray0[1] = "on";
      stringArray0[2] = ")\u0004ch*k3V8aud|b,ePU";
      stringArray0[3] = "";
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem(")\u0004ch*k3V8aud|b,ePU");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      String string0 = lovinsStemmer0.stemString("ond");
      assertEquals("ons", string0);
      
      lovinsStemmer0.stemString("");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      String string1 = lovinsStemmer1.getRevision();
      assertEquals("8034", string1);
      
      lovinsStemmer1.stem("on");
      String string2 = lovinsStemmer1.stemString("yt");
      assertEquals("yt", string2);
      
      lovinsStemmer1.globalInfo();
      lovinsStemmer1.stemString("");
      String string3 = lovinsStemmer1.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string3);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8042607159040901
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String string0 = "Q!SeHFt}DPBy\"AG/Y";
      lovinsStemmer0.stemString(")#pa~7mk_,|/");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stemString("inerid");
      lovinsStemmer1.stemString("mrnumber");
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.toString();
      lovinsStemmer0.stemString(")#pa~7mk_,|/");
      LovinsStemmer lovinsStemmer3 = new LovinsStemmer();
      lovinsStemmer3.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer1.getRevision();
      // Undeclared exception!
      try { 
        lovinsStemmer2.stemString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.823678916715124
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.stemString("^r-(uIM0p7#Zk6");
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("Nj=zip");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stemString("^r-(uim0p7#zk6");
      String string0 = lovinsStemmer1.getRevision();
      assertEquals("8034", string0);
      
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      String string1 = lovinsStemmer2.stemString(")uR)mSRWRKe");
      assertEquals(")ur)msrwrk", string1);
      
      lovinsStemmer2.stem("ngu");
      String string2 = lovinsStemmer0.stemString("lingurud");
      assertEquals("lingurus", string2);
      
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("Nj=zip");
      String string3 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string3);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9138849120451282
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("$Revision: 8034 $");
      lovinsStemmer0.getTechnicalInformation();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "$revis: 8034 $";
      stringArray0[1] = "$Revision: 8034 $";
      lovinsStemmer0.stemString("$Revision: 8034 $");
      lovinsStemmer0.stemString("arizer");
      TechnicalInformation technicalInformation0 = lovinsStemmer0.getTechnicalInformation();
      assertFalse(technicalInformation0.hasAdditional());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9729150497179929
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Q!SeHFt}DPBy\"AG/Y";
      stringArray0[1] = "Q!SeHFt}DPBy\"AG/Y";
      stringArray0[2] = "Q!SeHFt}DPBy\"AG/Y";
      stringArray0[3] = "Q!SeHFt}DPBy\"AG/Y";
      String string0 = lovinsStemmer0.stemString("Q!SeHFt}DPBy\"AG/Y");
      assertEquals("q!sehft}dpb\"ag/y", string0);
      
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stem("The sponsoring institution of a technical report.");
      lovinsStemmer0.globalInfo();
      String string1 = lovinsStemmer0.stem("pand");
      assertEquals("pans", string1);
      
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      String string2 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string2);
      
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      String string3 = lovinsStemmer1.stem("Q!SeHFt}DPBy\"AG/Y");
      assertEquals("q!sehft}dpby\"ag/", string3);
      
      lovinsStemmer0.toString();
      lovinsStemmer1.getRevision();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer1.getTechnicalInformation();
      lovinsStemmer0.getRevision();
      String string4 = lovinsStemmer0.stem("8034");
      assertEquals("8034", string4);
  }
}
