/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:32:37 GMT 2018
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2, (HomeTexture) null, 2, 2, 2);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("sun.net.www.protocol", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, " =.CL2$O9GN", " =.CL2$O9GN", homeEnvironment1);
      propertyChangeEvent0.setPropagationId(" =.CL2$O9GN");
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setGroundColor((-860));
      homeEnvironment0.setPhotoQuality(3711);
      homeEnvironment0.setPhotoHeight(2);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setCeillingLightColor(921);
      homeEnvironment0.setWallsAlpha(2);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getSkyTexture();
      HomeEnvironment.Property.values();
      homeEnvironment0.setVideoFrameRate(439);
      homeEnvironment0.setVideoFrameRate((-860));
      HomeEnvironment.DrawingMode.values();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment1.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(1006);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", "", "");
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoQuality(1357);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(1357);
      homeEnvironment1.getWallsAlpha();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setCeillingLightColor(1357);
      homeEnvironment1.setGroundColor(1006);
      homeEnvironment1.getSkyColor();
      homeEnvironment0.setVideoQuality(13427964);
      homeEnvironment0.getCeillingLightColor();
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getVideoAspectRatio());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoCameraPath();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(0, int0);
      
      homeEnvironment0.setPhotoQuality(0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0, homeEnvironment0.getPhotoQuality());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoWidth(13684944);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setPhotoHeight(13684944);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment.Property.valueOf("PHOTO_WIDTH");
      HomeTexture homeTexture0 = null;
      int int0 = 6;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 1034, 6, 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("PHOTO_WIDTH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.PHOTO_WIDTH
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, uRLContent0, 0, 1.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, 0, 1.7777778F);
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1.7777778F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, int0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      boolean boolean0 = false;
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      linkedList0.retainAll(linkedList1);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("c5;IB-Drzi", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setAllLevelsVisible(false);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      int int0 = (-3767);
      homeEnvironment0.setVideoFrameRate((-3767));
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoQuality(400);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.isAllLevelsVisible();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("$VALUES");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.$VALUES
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1887, (HomeTexture) null, 24, 0, 2248.685F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("%3}", (PropertyChangeListener) null);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.getPhotoQuality();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setSkyColor(0);
      homeEnvironment1.setCeillingLightColor(1887);
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertTrue(homeEnvironment1.isAllLevelsVisible());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7072697097848133
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1773), (HomeTexture) null, (-743), (HomeTexture) null, 4502, 4502);
      homeEnvironment0.setSkyColor((-827));
      homeEnvironment0.setSubpartSizeUnderLight((-1773));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setWallsAlpha((-743));
      homeEnvironment0.setVideoWidth(1062);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoQuality((-743));
      homeEnvironment0.setSkyColor((-1773));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoHeight(1769);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("RATIO_2_1", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setCeillingLightColor((-1338));
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setPhotoWidth(1062);
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals((-1773.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      int int0 = 986;
      homeEnvironment0.setCeillingLightColor(986);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoFrameRate(3030);
      homeEnvironment0.setLightColor(3030);
      String string0 = "7.@%$:vKaek#<";
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("7.@%$:vKaek#<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.7.@%$:vKaek#<
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setVideoFrameRate(2192);
      homeEnvironment0.setLightColor(2192);
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      AspectRatio aspectRatio0 = homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(1970);
      homeEnvironment0.getSubpartSizeUnderLight();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      assertEquals(1970, homeEnvironment0.getPhotoQuality());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundColor(182);
      homeEnvironment0.setCeillingLightColor(3);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoFrameRate(3);
      homeEnvironment0.getLightColor();
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("W)W-|=b,lie*", (String) null, uRLContent0, 3, 3, (String) null, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("Y", uRLContent0, 1240.23F, 3);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      homeEnvironment0.setSkyTexture(homeTexture1);
      homeEnvironment0.setSubpartSizeUnderLight(13684944);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setLightColor(1);
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3420), (HomeTexture) null, (-3420), (-3420), (-559.3202F));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.setCeillingLightColor((-3420));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate((-3420));
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, (String) null, "", propertyChangeListenerProxy0);
      propertyChangeEvent0.toString();
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setVideoWidth((-471));
      homeEnvironment0.setPhotoHeight((-1649));
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSubpartSizeUnderLight((-559.3202F));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setPhotoWidth((-1649));
      homeEnvironment0.setSubpartSizeUnderLight((-559.3202F));
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment1.setWallsAlpha((-559.3202F));
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getVideoAspectRatio());
      assertEquals((-3420), int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.582306344313967
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(25);
      homeEnvironment0.setVideoQuality(25);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setWallsAlpha(2152.0F);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoFrameRate((-1101));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(1.5F, 0.0F, 0.0F, (-1101), 0.0F, 1.0F, (-1101), camera_Lens0);
      linkedList0.add(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getDrawingMode();
      assertEquals((-1101), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(25, (HomeTexture) null, 25, (HomeTexture) null, 0, 25);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setWallsAlpha((-464.32F));
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setWallsAlpha(0);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setSkyColor(25);
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7516666169315167
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundColor(182);
      homeEnvironment0.setCeillingLightColor(3);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoFrameRate(3);
      homeEnvironment0.getLightColor();
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSkyColor(7);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      assertEquals(7, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundColor(182);
      homeEnvironment0.setCeillingLightColor(3);
      AspectRatio aspectRatio1 = homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoFrameRate(3);
      homeEnvironment0.getLightColor();
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSkyColor(13684944);
      homeEnvironment0.setCeillingLightColor((-2857));
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3420), (HomeTexture) null, (-3420), (-3420), (-559.3202F));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoWidth(16);
      homeEnvironment1.setVideoFrameRate((-3420));
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setVideoWidth((-3012));
      homeEnvironment0.setPhotoHeight((-1649));
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSubpartSizeUnderLight((-559.3202F));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoQuality(400);
      homeEnvironment0.setPhotoWidth((-1649));
      homeEnvironment0.setSubpartSizeUnderLight((-559.3202F));
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getGroundColor();
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment1.setPhotoWidth(400);
      homeEnvironment1.setLightColor(16);
      Random.setNextRandom(3330);
      homeEnvironment1.setPhotoWidth(400);
      assertEquals((-3420), homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3420), (HomeTexture) null, (-3420), (-3420), (-559.3202F));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, "fIk2m}:_4{", ";Wq;knbt<CxMy`%5bV?", homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoWidth(16);
      homeEnvironment1.setVideoFrameRate((-3420));
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setVideoWidth((-471));
      homeEnvironment0.setPhotoHeight((-1649));
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSubpartSizeUnderLight((-559.3202F));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-1649), (HomeTexture) null, 16, (HomeTexture) null, (-2398), 2.0F);
      homeEnvironment2.setWallsAlpha((-559.3202F));
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment1.setSubpartSizeUnderLight((-1838.36F));
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setLightColor((-3420));
      assertEquals((-559.3202F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.403640410614949
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(790, (HomeTexture) null, 5, 5, (-640.294F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment2.getVideoCameraPath();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment2.setSkyColor(0);
      homeEnvironment1.setCeillingLightColor(24);
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment2.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(25, (HomeTexture) null, 25, (HomeTexture) null, 0, 25);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setWallsAlpha((-464.32F));
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(3465, (HomeTexture) null, 3465, 3465, 0);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment1.getVideoAspectRatio());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.893788232391138
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3420), (HomeTexture) null, (-3420), (-3420), (-559.3202F));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, "fIk2m}:_4{", ";Wq;knbt<CxMy`%5bV?", homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoWidth(16);
      homeEnvironment1.setVideoFrameRate((-3420));
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setVideoFrameRate((-3420));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(2293.0F, (-1.0F), 0.0F, 1650.0692F, 2293.0F, 0.0F, 16, camera_Lens0);
      linkedList0.add(camera0);
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      assertEquals(16, homeEnvironment1.getPhotoWidth());
      
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(16, (HomeTexture) null, (-3420), (HomeTexture) null, 3797, (-1.0F));
      int int0 = homeEnvironment2.getCeillingLightColor();
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4799555205445176
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(25, (HomeTexture) null, 25, (HomeTexture) null, 0, 25);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setWallsAlpha((-464.32F));
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Application Data", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("u~f,f5", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("Application Data", propertyChangeListenerProxy1);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment1.getPhotoQuality();
      homeEnvironment0.getVideoCameraPath();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setSkyColor(0);
      homeEnvironment1.setCeillingLightColor(25);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.Property.values();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(25, (HomeTexture) null, 25, (HomeTexture) null, 0, 25);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setWallsAlpha((-464.32F));
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setVideoWidth((-1599));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.valueOf("PHOTO_QUALITY");
      assertEquals(HomeEnvironment.Property.PHOTO_QUALITY, homeEnvironment_Property0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, (-556.6802F), 4343.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Random.setNextRandom(9);
      Random.setNextRandom(9);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-4750));
      homeEnvironment0.setVideoWidth((-4750));
      System.setCurrentTimeMillis(9);
      homeEnvironment0.setVideoWidth(9);
      homeEnvironment0.setWallsAlpha(9);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }
}
