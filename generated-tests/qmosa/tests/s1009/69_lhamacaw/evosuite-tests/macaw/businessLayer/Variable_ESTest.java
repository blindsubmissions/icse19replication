/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:07:54 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.function.Consumer;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      derivedVariable0.setCleaningStatus("");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.setYear("general.fieldValue.unknown");
      derivedVariable0.removeSupportingDocuments(arrayList1);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setIsNewRecord(false);
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList2);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getValueLabels();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("W+B69pL>");
      derivedVariable0.setCoded(true);
      derivedVariable0.addSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.questionNumber = "";
      User user0 = new User("", "");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.setYear("PbuJ5@*/MC)p1y<j!");
      assertTrue(derivedVariable0.isCoded());
      
      rawVariable0.setForm("");
      rawVariable0.isCoded();
      rawVariable0.setCleaningStatus("PbuJ5@*/MC)p1y<j!");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      assertEquals("PbuJ5@*/MC)p1y<j!", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      String string0 = "\"[ynMl\"lZ`@o";
      User user0 = new User("\"[ynMl\"lZ`@o", "\"[ynMl\"lZ`@o");
      ontologyTerm0.setNewRecord(true);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.createVariableSummary();
      String string1 = "";
      derivedVariable0.setNotes("");
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.610917912644226
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("");
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setFileName("");
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.setYear("");
      derivedVariable0.getName();
      derivedVariable0.getName();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.setAlias("A{xVOrlHr");
      Variable.validateFields(derivedVariable0);
      assertEquals("A{xVOrlHr", derivedVariable0.getAlias());
      
      derivedVariable0.setAlias("");
      derivedVariable0.getYear();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getCategory();
      derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setFilePath("");
      User user0 = new User(":xmRrOp", "");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("");
      rawVariable0.setIdentifier((-2184));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setNotes("1(,4DfAT");
      rawVariable0.getName();
      assertEquals("-2184", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.8066624897703174
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.remove((Object) rawVariable0);
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setNotes((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable1.removeSupportingDocument(supportingDocument1);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.clone();
      derivedVariable0.getDisplayName();
      rawVariable0.getColumnEnd();
      String string0 = "macaw.businessLayer.OntologyTerm";
      User user0 = new User("user.status.saveChanges", "macaw.businessLayer.OntologyTerm");
      User user1 = new User((String) null, (String) null);
      User.detectFieldChanges(user1, user0, user0);
      user0.setFirstName("K_v~xKoz YAjGt5");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(false);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getAlias();
      rawVariable0.setCodeBookNumber("");
      String string0 = rawVariable0.getCleaningStatus();
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.401197381662154
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList0.removeAll(arrayList1);
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setTerm("");
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      ontologyTerm0.setTerm("");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList2);
      derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("-L");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.setAvailability("");
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      derivedVariable0.setCodeBookNumber("-L");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel.detectFieldChanges(user0, derivedVariable1, valueLabel0, valueLabel0);
      Variable.validateFields(rawVariable0);
      rawVariable0.removeValueLabel(valueLabel0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.remove((Object) user0);
      arrayList0.add((OntologyTerm) null);
      derivedVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getCleaningDescription();
      derivedVariable1.getSupportingDocuments();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("%Z<6");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("%Z<6");
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName("");
      derivedVariable0.isNewRecord();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.isNewRecord();
      derivedVariable0.setNotes("");
      assertEquals("%Z<6", derivedVariable0.getForm());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.703380067276385
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "~";
      rawVariable0.getCleaningStatus();
      rawVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCategory("]AON");
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setCoded(true);
      User user0 = new User("Unknown", "]AON");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user1.clone();
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      rawVariable0.setQuestionNumber(" |uq7];1zBm*Z1k0(");
      assertTrue(rawVariable0.isCoded());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.1981093638496443
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setName("macaw.businessLayer.Variable");
      derivedVariable1.clone();
      derivedVariable2.getSupportingDocuments();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      arrayList0.add((Variable) derivedVariable1);
      // Undeclared exception!
      try { 
        arrayList0.add(186, (Variable) derivedVariable2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 186, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      derivedVariable0.setCleaningStatus("");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.setYear("general.fieldValue.unknown");
      derivedVariable0.removeSupportingDocuments(arrayList1);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setIsNewRecord(false);
      derivedVariable0.addSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      arrayList2.add(1, (Variable) rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSourceVariables(arrayList2);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      
      derivedVariable1.getFilePath();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.210644412275862
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("%Z<6");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("%Z<6");
      derivedVariable0.getDisplayName();
      derivedVariable0.setCoded(false);
      derivedVariable0.clone();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("");
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("%Z<6");
      assertEquals("%Z<6", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-868L));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.5665989181145106
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setCodeBookNumber("user.addressLine2.saveChanges");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertEquals("user.addressLine2.saveChanges", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace(".>P)?");
      ontologyTerm0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("<wo*7}b0~zWXT");
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName("macaw.businessLayer.Variable");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.isNewRecord();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals("macaw.businessLayer.Variable", derivedVariable0.getName());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.897264494920238
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setCodeBookNumber("user.addressLine2.saveChanges");
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      User user1 = new User("user.addressLine2.saveChanges", "user.addressLine2.saveChanges");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user1, derivedVariable0, rawVariable1);
      assertEquals("user.addressLine2.saveChanges", derivedVariable0.getCodeBookNumber());
      assertFalse(arrayList1.equals((Object)arrayList0));
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.214496050675049
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("variable.label.label");
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.setNotes("A?[Vj.Gca<j");
      derivedVariable0.setColumnStart("A?[Vj.Gca<j");
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User(">g5Sy>lDV8Df=6NPsB", "F8I");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.setQuestionNumber((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }
}
