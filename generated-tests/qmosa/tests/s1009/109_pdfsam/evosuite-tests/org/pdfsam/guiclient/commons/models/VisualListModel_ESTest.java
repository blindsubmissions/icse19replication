/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 10:32:18 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.ConvolveOp;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.Raster;
import java.awt.image.WritableRaster;
import java.math.BigInteger;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 884;
      intArray0[1] = (-3963);
      intArray0[2] = 376;
      intArray0[3] = 952;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = (-1739);
      visualListModel0.rotateClockwiseElements(intArray0);
      assertEquals(7, intArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(linkedHashSet0);
      int int1 = 1034;
      visualListModel0.subList(1, 1034);
      visualListModel0.elementsChanged();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      AffineTransform affineTransform0 = AffineTransform.getScaleInstance(1034, (-1.0));
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, 1);
      int int2 = 6;
      int int3 = 0;
      byte[] byteArray0 = new byte[0];
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(6, 0, byteArray0, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Map size (0) must be >= 1
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      visualListModel0.clearData();
      intArray0[0] = 1799;
      intArray0[1] = 11;
      intArray0[2] = 8;
      visualListModel0.getElements();
      intArray0[3] = 0;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.getSize();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.appendAllElements(stack0);
      visualListModel0.moveUpIndex((-1));
      visualListModel0.elementsChanged();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      BufferedImage bufferedImage0 = null;
      int int0 = (-3490);
      boolean boolean0 = true;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((BufferedImage) null, (-3490), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(1, 0, false);
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.moveUpIndex(0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.clearData();
      int[] intArray0 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements((int[]) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.2424533248940002
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      hashSet0.add((VisualPageListItem) null);
      visualListModel0.appendAllElements(hashSet0);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, "#m*D2}U");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1252);
      visualListModel0.addAllElements((-1252), (Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[2];
      int[] intArray1 = new int[4];
      intArray1[0] = (-1252);
      intArray1[1] = (-1252);
      intArray1[2] = (-1252);
      int int1 = 1;
      int int2 = (-3710);
      int int3 = (-2954);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-116);
      byteArray0[6] = (byte)90;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-2954), (-3710), byteArray0, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.prependAllElements(arrayList0);
      visualListModel0.elementsChanged();
      int[] intArray0 = new int[5];
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.data = vector0;
      intArray0[0] = (-1);
      intArray0[1] = 1;
      intArray0[2] = (-1);
      intArray0[3] = 0;
      intArray0[4] = 1509;
      visualListModel0.reverseElements(intArray0);
      assertEquals(5, intArray0.length);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 2943;
      visualListModel0.getValidElements();
      visualListModel0.removeElements((-1469), 2943, false);
      visualListModel0.getElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.elementsChanged();
      visualListModel0.removeElements(727, (-1469), false);
      // Undeclared exception!
      try { 
        visualListModel0.subList(727, (-1), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(727) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.559581156259877
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[0] = (-3803);
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = (-2101);
      intArray0[5] = 360;
      intArray0[6] = 0;
      intArray0[7] = 11;
      intArray0[8] = 0;
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>(vector0);
      visualListModel0.removeListDataListener(jComboBox0);
      boolean boolean0 = false;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-2101));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2101
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1055);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-1055), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1055
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getElements();
      visualListModel0.getValidElements();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      visualListModel0.getElements();
      visualListModel0.subList(1, 763);
      int[] intArray0 = new int[3];
      intArray0[0] = 763;
      intArray0[1] = 763;
      intArray0[2] = 1;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.getElementAt(12);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray1 = new int[2];
      intArray1[0] = 763;
      intArray1[1] = 763;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1), 1, intArray1, 1, 12, (BigInteger) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      vector0.add(integer0);
      stack0.retainAll(vector0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.getElements();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getElements();
      visualListModel0.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.getValidElements();
      visualListModel0.addElementAt((VisualPageListItem) null, 3044);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      stack0.retainAll(vector0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.getElements();
      visualListModel0.subList(0, 92, false);
      int[] intArray1 = new int[9];
      intArray1[0] = 0;
      intArray1[1] = 92;
      intArray1[2] = 0;
      intArray1[3] = 92;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 0;
      intArray1[7] = 0;
      intArray1[8] = 92;
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel1.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.getElements();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.getSize();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1232, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1232
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.1383330595080277
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[0] = (-3803);
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = (-2101);
      intArray0[5] = 360;
      visualListModel0.removeElements((-2101), 0, false);
      visualListModel0.subList((-5252), 360, false);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getElements();
      visualListModel0.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[1] = 1;
      intArray0[2] = (-1951);
      intArray0[3] = 1;
      intArray0[4] = 57;
      intArray0[5] = 270;
      intArray0[6] = 256;
      intArray0[7] = 0;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.subList(1, 1232, true);
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[0];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      vector0.add(integer0);
      stack0.retainAll(vector0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      visualListModel0.getElements();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      visualListModel0.prependAllElements(collection0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray1);
      visualListModel0.rotateClockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 9;
      int int1 = 1;
      visualListModel0.getSize();
      int int2 = 3030;
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      int int3 = (-679);
      visualListModel0.addAllElements((-679), (Collection<VisualPageListItem>) hashSet0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      int int4 = 50;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-7310), "$VLUES", "X9YoUc{&/uwKZI=OKs");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getSize();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) hashSet0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(5, "$VLUES", "$VLUES");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[0] = 6;
      intArray0[1] = 1;
      visualListModel0.getSize();
      int int0 = 3030;
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.addAllElements(3030, (Collection<VisualPageListItem>) hashSet0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.subList(1, 1, true);
      visualListModel1.getSize();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.addElement((VisualPageListItem) null);
      VisualListModel visualListModel3 = new VisualListModel();
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.subList(2945, 6, false);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-2004), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray0 = new int[0];
      visualListModel0.getValidElements();
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      stack0.retainAll(vector0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.getElements();
      visualListModel0.subList(0, 0, true);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      visualListModel0.elementsChanged();
      visualListModel0.subList((-92), 10, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getElements();
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.setData(vector0);
      visualListModel1.subList(10, 10, true);
      int[] intArray0 = new int[0];
      visualListModel2.removeElements(intArray0, false);
      visualListModel0.rotateClockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[0];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      stack0.retainAll(vector0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.removeElements((-1135), (-1), false);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel1.getElements();
      visualListModel0.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector1 = visualListModel2.data;
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.setData(vector1);
      visualListModel0.getValidElements();
      visualListModel1.undeleteElements(intArray0);
      visualListModel1.setData(visualPageListItemArray0);
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(715);
      visualListModel0.removeElements(1, 1, true);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      VisualListModel visualListModel1 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.pollLast();
      LinkedList<VisualPageListItem> linkedList1 = new LinkedList<VisualPageListItem>(linkedList0);
      visualListModel0.prependAllElements(linkedList1);
      visualListModel0.elementsChanged();
      visualListModel0.getValidElements();
      visualListModel1.getElements();
      visualListModel1.moveDownIndex((-1));
      visualListModel1.setData(visualPageListItemArray0);
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.791759469228055
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(715);
      visualListModel0.removeElements(1, 1, true);
      visualListModel0.getElements();
      VisualListModel visualListModel1 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      LinkedList<VisualPageListItem> linkedList1 = new LinkedList<VisualPageListItem>(linkedList0);
      visualListModel0.prependAllElements(linkedList1);
      visualListModel0.elementsChanged();
      int int0 = 727;
      linkedList0.remove((Object) linkedList1);
      visualListModel1.removeElements(727, (-1), true);
      VisualPageListItem visualPageListItem0 = null;
      linkedList1.add((VisualPageListItem) null);
      visualListModel1.prependAllElements(linkedList1);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.prependAllElements(linkedList0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      intArray0[0] = 715;
      try { 
        visualListModel1.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 715
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      VisualPageListItem visualPageListItem0 = null;
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.getElements();
      visualListModel0.subList(0, 0, true);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[0];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      stack0.retainAll(vector0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.getElements();
      visualListModel0.subList(0, 0, true);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getElements();
      visualListModel0.updateElementAt(3842, (VisualPageListItem) null);
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.143952200643869
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      stack0.retainAll(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.pollLast();
      LinkedList<VisualPageListItem> linkedList1 = new LinkedList<VisualPageListItem>(linkedList0);
      visualListModel1.prependAllElements(stack0);
      visualListModel1.elementsChanged();
      visualListModel0.getElementAt(888);
      visualListModel0.addElementAt((VisualPageListItem) null, 888);
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel1.addAllElements((-1851), (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addAllElements(2891, (Collection<VisualPageListItem>) linkedList1);
      assertNotSame(linkedList1, linkedList0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8891591637540215
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      stack0.retainAll(vector0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      VisualPageListItem visualPageListItem0 = null;
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.getElements();
      visualListModel0.getElements();
      visualListModel0.subList((-1023), (-2439));
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.3701349548823627
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      stack0.retainAll(vector0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.getElements();
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getElementAt(1992);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addAllElements(8, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addAllElements(2449, (Collection<VisualPageListItem>) linkedList0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.458311329683084
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      stack0.retainAll(vector0);
      visualListModel0.removeElements(intArray0, false);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.getElements();
      stack0.add((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getElements();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getElementAt(1992);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.clearData();
      int int0 = visualListModel0.getSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.4481550885281607
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      stack0.retainAll(vector0);
      visualListModel0.removeElements(intArray0, false);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.getElements();
      stack0.add((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getElementAt(1992);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 1992;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.removeElements(0, 1992, false);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.945934775756114
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      stack0.retainAll(vector0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.getElements();
      visualListModel0.subList(0, 0, true);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getElements();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      visualListModel0.updateElementAt(3842, (VisualPageListItem) null);
      visualListModel0.removeElements(6, 0, false);
      visualListModel0.moveDownIndex(1705);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.removeElements(1705, 3, true);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.685945324669788
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      stack0.retainAll(vector0);
      visualListModel0.removeElements(intArray0, false);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.getElements();
      stack0.add((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getElementAt(1992);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 1992;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.removeElements(0, (-1936), false);
      visualListModel0.moveDownIndex(0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.639340587232432
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      visualListModel0.undeleteElements(intArray0);
      stack0.retainAll(vector0);
      visualListModel0.removeElements(intArray0, false);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(arrayList0);
      LinkedList<VisualPageListItem> linkedList1 = new LinkedList<VisualPageListItem>();
      linkedList1.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      visualListModel0.getElements();
      stack0.add((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getElements();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getElementAt(0);
      visualListModel0.addElementAt((VisualPageListItem) null, 2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel1.elementChanged(visualPageListItemArray0[0]);
      visualListModel1.removeElements(2, 0, false);
      visualListModel1.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.5232109529528914
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.getElements();
      stack0.add((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getElementAt(1992);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5247073930301436
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.getElements();
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.reverseElements(intArray0);
      LinkedList<VisualPageListItem> linkedList1 = new LinkedList<VisualPageListItem>(linkedList0);
      linkedList0.pollLast();
      linkedList1.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.getElements();
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.395908119293929
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      stack0.retainAll(vector0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      LinkedList<VisualPageListItem> linkedList1 = new LinkedList<VisualPageListItem>(stack0);
      linkedList1.iterator();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      linkedList1.add((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.prependAllElements(stack0);
      visualListModel0.getElements();
      int int0 = 1992;
      visualListModel0.getElementAt(1992);
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel1.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }
}
