/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:20:30 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.Frame;
import wheel.asm.Item;
import wheel.asm.Label;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Frame_ESTest extends Frame_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = null;
      frame0.execute(0, 0, (ClassWriter) null, (Item) null);
      int int0 = (-1083);
      Type[] typeArray0 = new Type[2];
      Type type0 = Type.CHAR_TYPE;
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 8;
      intArray0[2] = 6;
      // Undeclared exception!
      try { 
        Type.getReturnType("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.Type", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter(16777222);
      Type[] typeArray0 = new Type[3];
      Type type0 = Type.CHAR_TYPE;
      typeArray0[0] = type0;
      Type type1 = Type.DOUBLE_TYPE;
      typeArray0[1] = type1;
      Type type2 = Type.getType("DtZ./qfCMYib");
      typeArray0[2] = type2;
      // Undeclared exception!
      try { 
        frame0.initInputFrame(classWriter0, 16777222, typeArray0, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Frame frame0 = new Frame();
      int int0 = (-1503);
      ClassWriter classWriter0 = new ClassWriter((-1503));
      classWriter0.newInteger(40);
      Item item0 = classWriter0.key;
      // Undeclared exception!
      try { 
        frame0.execute((-1503), (-1503), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Frame", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.07507898685329581
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Frame frame0 = new Frame();
      int int0 = 159;
      ClassWriter classWriter0 = new ClassWriter(159);
      Item item0 = classWriter0.key3;
      item0.next = null;
      // Undeclared exception!
      try { 
        frame0.execute(159, 159, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Frame", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Frame frame0 = new Frame();
      Frame frame1 = new Frame();
      ClassWriter classWriter0 = new ClassWriter(1464);
      Item item0 = classWriter0.key;
      // Undeclared exception!
      try { 
        frame0.execute(2, 1, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Frame", e);
      }
  }
}
