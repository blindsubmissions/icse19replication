/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:15:19 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.listIterator();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      boolean boolean0 = fBCachedFetcher0.relative(1000);
      boolean boolean1 = fBCachedFetcher0.previous();
      assertTrue(boolean1 == boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.poll();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.relative(1000);
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte)44;
      byteArray1[2] = (byte)29;
      byteArray1[3] = (byte) (-46);
      byteArray1[4] = (byte)29;
      byteArray1[5] = (byte)86;
      byteArray1[6] = (byte) (-112);
      byteArray0[0] = byteArray1;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.poll();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.relative(1000);
      fBCachedFetcher0.setFetchSize(1000);
      boolean boolean0 = fBCachedFetcher0.relative(1000);
      assertEquals(1000, fBCachedFetcher0.getFetchSize());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341003
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.relative(1365);
      assertFalse(boolean0);
      
      boolean boolean1 = fBCachedFetcher0.next();
      boolean boolean2 = fBCachedFetcher0.isLast();
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      linkedList0.replaceAll(unaryOperator0);
      linkedList0.removeFirstOccurrence((Object) null);
      boolean boolean0 = fBCachedFetcher0.relative(448);
      assertFalse(boolean0);
      
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.listIterator();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      byte[][] byteArray0 = new byte[2][8];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-25);
      byteArray1[1] = (byte)57;
      byteArray1[2] = (byte)66;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte)66;
      byteArray2[1] = (byte) (-25);
      byteArray2[2] = (byte)57;
      byteArray2[3] = (byte) (-18);
      byteArray2[4] = (byte)57;
      byteArray2[5] = (byte)66;
      byteArray2[6] = (byte)66;
      byteArray2[7] = (byte)66;
      byteArray2[8] = (byte)57;
      fBCachedFetcher0.beforeFirst();
      byteArray0[1] = byteArray2;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.relative(1000);
      byte[][] byteArray0 = new byte[5][8];
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher2.relative(1011);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6151195500604119
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][0];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)68;
      byteArray1[1] = (byte)4;
      byteArray1[2] = (byte)82;
      byteArray1[3] = (byte) (-64);
      byteArray1[4] = (byte) (-13);
      byteArray1[5] = (byte) (-63);
      byteArray1[6] = (byte) (-12);
      byteArray1[7] = (byte) (-49);
      byteArray1[8] = (byte) (-13);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte) (-12);
      byteArray2[1] = (byte) (-12);
      byteArray2[2] = (byte) (-49);
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][5];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)34;
      byteArray1[1] = (byte) (-51);
      byteArray1[2] = (byte) (-53);
      byteArray1[3] = (byte) (-42);
      byteArray1[4] = (byte) (-97);
      byteArray1[5] = (byte)2;
      byteArray1[6] = (byte) (-112);
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      linkedList0.listIterator();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      linkedList0.offerFirst(byteArray0);
      fBCachedFetcher0.relative(1000);
      fBCachedFetcher0.first();
      fBCachedFetcher0.getRowNum();
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertTrue(fBCachedFetcher0.isLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6313454208085967
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.listIterator();
      byte[][] byteArray0 = new byte[5][4];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-12);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte) (-11);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.relative((-2563));
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher2.isFirst();
      // Undeclared exception!
      try { 
        fBCachedFetcher2.absolute((-967));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7326587201992072
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.relative(1000);
      byte[][] byteArray0 = new byte[5][8];
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isFirst();
      boolean boolean1 = fBCachedFetcher0.absolute((-967));
      assertTrue(fBCachedFetcher0.isLast());
      assertFalse(boolean1);
      
      boolean boolean2 = fBCachedFetcher2.isLast();
      assertFalse(fBCachedFetcher2.isEmpty());
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4978661367769954
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][0];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-117);
      byteArray1[1] = (byte) (-2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.relative((-2001));
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher1.isFirst();
      try { 
        fBCachedFetcher2.absolute((byte) (-2));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][0];
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.absolute(88);
      assertEquals(3, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9899913100731523
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      linkedList2.poll();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList2, fBResultSet0);
      fBCachedFetcher0.relative((-2562));
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.last();
      assertFalse(fBCachedFetcher0.isLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3693821196946767
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      linkedList2.poll();
      linkedList2.offer((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList4, fBResultSet0);
      linkedList2.add((byte[][]) null);
      fBCachedFetcher0.relative((-965));
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.absolute((-813));
      fBCachedFetcher0.first();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.161423635898512
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      linkedList2.poll();
      linkedList2.offer((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      linkedList2.listIterator();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList4, fBResultSet0);
      fBCachedFetcher0.relative((-965));
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher((GDSHelper) null, (-965), 0, isc_stmt_handle_impl0, fBResultSet0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3114234446919735
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList0.poll();
      linkedList1.offer((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      linkedList0.listIterator();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList3, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.afterLast();
      linkedList1.parallelStream();
      linkedList1.removeLastOccurrence(linkedList2);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isLast());
  }
}
