/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:09:06 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.UnsupportedEncodingException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      player0.getStrength();
      Player player1 = new Player();
      player0.prev = (Party) player1;
      player0.reset(true);
      player0.setZ(0.0F);
      player0.getMoney();
      player0.getSubparty();
      player0.setDead((long) 1, false);
      player0.setX(1);
      player0.toString();
      player0.getX();
      player0.getPictureId();
      player0.setDead((long) 0, false);
      player0.getIP();
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-2511), "{l%Fx,?xhT", "{l%Fx,?xhT", 4919);
      player0.setJoinOK(player1, true);
      player0.toString();
      player0.next = (Party) player1;
      player1.setJoinOK(player0, false);
      player1.reset(false);
      player0.getMoney();
      player0.setJoinOK(player1, true);
      player0.getZ();
      player1.setX((-718.66F));
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(2935);
      Player player1 = new Player((short)4919, "", "", (-1));
      player0.prev = (Party) player1;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-77);
      byteArray0[6] = (byte) (-98);
      byteArray0[7] = (byte)55;
      player1.unpack(byteArray0);
      player0.setJoinOK(player1, true);
      assertEquals((-1), player1.getPictureId());
      
      float float0 = player0.getY();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("Player2935", player0.toString());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-35.21427F));
      Player player1 = new Player((short)4919, "", "", (short)4919, (short)4919);
      player0.next = (Party) player1;
      player0.setMoney((short)4919);
      player1.id = 0;
      player0.getZ();
      player0.setX((-35.21427F));
      assertEquals((-35.21427F), player0.getX(), 0.01F);
      
      player1.getTimeOfDeath();
      player1.getX();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)56;
      player1.unpack(byteArray0);
      Player player2 = new Player();
      boolean boolean0 = player1.isJoinOK(player2, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(578);
      Player player1 = new Player(578);
      boolean boolean0 = false;
      player0.setX(0.1F);
      player0.setJoinOK(player1, false);
      boolean boolean1 = false;
      player0.setConnected(false);
      Party party0 = new Party();
      player0.head = party0;
      player0.getSubparty();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      player0.setY((-902.29584F));
      player0.getMoney();
      player0.getIP();
      assertEquals((-902.29584F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      player0.getSubparty();
      Party party0 = new Party((short)4919);
      player0.gangStrength();
      player0.next = party0;
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(1.0F);
      player0.getIP();
      player0.gangStrength();
      boolean boolean0 = player0.isDead();
      assertEquals(1.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(4831, "", 573);
      player0.getName();
      player0.getMoney();
      player0.setMoney((-1.0F));
      player0.setDead((long) 4831);
      String string0 = "R5YPjiPDiD=";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("R5YPjiPDiD=", "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(3);
      player0.getMoney();
      player0.getY();
      player0.getMoney();
      player0.setDead((long) 3, true);
      player0.getZ();
      player0.id = 3;
      Player player1 = new Player((-417), (String) null, "ZPSeG", (short)4919);
      player0.isJoinOK(player1, true);
      player1.setDead();
      player0.prev = (Party) player1;
      player0.getSubparty();
      player0.getTimeOfDeath();
      player1.pack();
      player1.setDead();
      player0.setMoney(3L);
      assertEquals(3.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(0, "", "U2wNQ';)RC8", 2);
      byte[] byteArray0 = player0.pack();
      player0.setZ((-3591.8308F));
      player0.getStrength();
      player0.type();
      player0.type();
      player0.setDead((long) 2, true);
      player0.getY();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      Player player1 = new Player(2, "Y+1*q\"FIO[23yF;bFp", 2);
      player1.boss = (Party) player0;
      player0.setJoinOK(player1, true);
      player0.getName();
      player0.getSubparty();
      player0.setDead((long) 0);
      player0.toString();
      player0.isDead();
      player0.toString();
      int int0 = player0.gangStrength();
      assertTrue(player0.isDead());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 5721;
      Player player0 = new Player(5721);
      Player player1 = new Player();
      player0.next = (Party) player1;
      player0.reset(true);
      player0.setY((-506.0F));
      player1.isConnected();
      player1.head = (Party) player0;
      String string0 = "7o&snH@";
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile("7o&snH@", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(5354);
      Player player1 = new Player(5354, "", "", 5354, (short)4919);
      player0.boss = (Party) player1;
      player0.id = (-1680);
      player0.next = (Party) player1;
      byte[] byteArray0 = player1.pack();
      player0.next.boss = (Party) player1;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player1.unpack(dataInputStream0);
      player1.setDead(177L, false);
      player1.next = player0.next;
      player0.getSubparty();
      player0.getY();
      player1.setX((-542.726F));
      player0.getZ();
      player0.getName();
      player1.unpack(byteArray0);
      player0.getZ();
      Player player2 = new Player();
      player1.isJoinOK(player2, true);
      MockFile mockFile0 = new MockFile("Player.unpack(): *** WARNING *** data is not of proper type!", "Y+4AUF5->=nqe");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player1.pack(dataOutputStream0);
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setY(0);
      Player player1 = new Player(1, (String) null, (String) null, (short)4919, 0);
      player1.gangStrength();
      player1.setX(0);
      player1.head = (Party) player0;
      player1.setJoinOK(player0, false);
      player0.remove(player1);
      player0.setY(0);
      player0.getIP();
      player0.getIP();
      player0.getIP();
      Player player2 = new Player(1285, "0.0.0.0", 1879);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(0.0F, player1.getX(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7709738809556863
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setY(0);
      Player player1 = new Player(1, (String) null, (String) null, (short)4919, 0);
      player1.gangStrength();
      player1.setX(0);
      player1.head = (Party) player0;
      player1.setJoinOK(player0, false);
      player0.remove(player1);
      player1.setDead((long) 0, true);
      player1.getSubparty();
      Player player2 = new Player(0, "", "", (-1));
      player1.isJoinOK(player2, false);
      player2.setDead();
      player2.next = (Party) player1;
      player0.getSubparty();
      player2.getTimeOfDeath();
      player2.pack();
      player2.setDead();
      player1.setMoney(2438.0F);
      assertEquals(0.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3693821196946767
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setY(0);
      Player player1 = new Player(0, (String) null, (String) null, (short)4919, 0);
      player1.setX(0);
      player1.setJoinOK(player0, false);
      player1.setMoney((-1.0F));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.remove(player1);
      player0.setY(0);
      player0.getIP();
      player0.getIP();
      player0.getIP();
      Player player2 = new Player(1285, "0.0.0.0", 1879);
      player1.isJoinOK(player0, true);
      System.setCurrentTimeMillis(1392409296320L);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals((-1.0F), player1.getMoney(), 0.01F);
      assertFalse(boolean0);
  }
}
