/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 17:12:38 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.clone();
      rawVariable0.setCleaningStatus("CANCEL");
      rawVariable0.setAlias("SzhSi6Z'P.>,6M");
      rawVariable0.setColumnStart("CANCEL");
      rawVariable0.getCleaningDescription();
      rawVariable0.setCoded(true);
      rawVariable0.setForm("");
      assertEquals("SzhSi6Z'P.>,6M", rawVariable0.getAlias());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.7376696182833657
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "user.status.label";
      rawVariable0.setFilePath("user.status.label");
      rawVariable0.setIdentifier(3);
      rawVariable0.getLabel();
      rawVariable0.getColumnEnd();
      String string1 = "QCyzP_@XgGsyy";
      rawVariable0.setColumnStart("QCyzP_@XgGsyy");
      User user0 = new User();
      rawVariable0.setColumnEnd("");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.clone();
      derivedVariable0.setCoded(true);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.setName("H8TOvR/D)N&%mrvCz3");
      arrayList1.containsAll(arrayList0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setIdentifier(182);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getIdentifier();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setAvailability("Unknown");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      assertEquals("182", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getFilePath();
      rawVariable0.setColumnStart("");
      rawVariable0.setIdentifier(0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setFilePath("Fg;,!hYrF\"lF");
      rawVariable0.getAvailability();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList1);
      rawVariable0.setAlias("~m6@*90P5QDkyV6$/q");
      assertEquals("~m6@*90P5QDkyV6$/q", rawVariable0.getAlias());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.hasSameDisplayName(rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "3C eAg_4Q";
      derivedVariable0.removeSourceVariable(rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable2.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable2.getSupportingDocuments();
      rawVariable1.setSupportingDocuments(arrayList1);
      rawVariable0.setIdentifier((-1368));
      assertEquals("-1368", rawVariable0.getDisplayItemIdentifier());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable2.removeSupportingDocument(supportingDocument1);
      derivedVariable0.createVariableSummary();
      ArrayList<String> arrayList2 = Variable.validateFields(rawVariable1);
      assertEquals(1, arrayList2.size());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("G7?R@^e^{xz:w$SXva");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable1.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getName();
      rawVariable1.setName("");
      rawVariable0.setIdentifier((-1));
      rawVariable0.setCodeBookNumber("");
      int int0 = rawVariable0.getIdentifier();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setCleaned(false);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getCategory();
      derivedVariable0.setAvailability("Unknown");
      derivedVariable0.setCategory("Unknown");
      derivedVariable0.getDisplayName();
      derivedVariable0.setYear("Unknown");
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.getDisplayName();
      derivedVariable0.removeValueLabel(valueLabel0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) derivedVariable0);
      arrayList1.add((Variable) derivedVariable0);
      valueLabel0.setValue("");
      derivedVariable0.removeSourceVariables(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocuments(arrayList0);
      derivedVariable0.hasSameDisplayName(rawVariable1);
      rawVariable1.getCodeBookNumber();
      derivedVariable0.removeSourceVariable(rawVariable1);
      assertEquals("Unknown", derivedVariable0.getYear());
      
      rawVariable0.isCoded();
      rawVariable1.addValueLabel(valueLabel0);
      rawVariable0.getYear();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1978392433058276
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("@Zr/rb|");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.remove((Object) "@Zr/rb|");
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setAlias("@Zr/rb|");
      rawVariable0.clone();
      Variable.validateFields(rawVariable0);
      rawVariable0.clone();
      rawVariable0.setAvailability("@Zr/rb|");
      rawVariable0.getCodeBookNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      Variable.validateFields(rawVariable0);
      RawVariable.validateFields(rawVariable0);
      rawVariable0.getNotes();
      assertEquals("@Zr/rb|", rawVariable0.getAlias());
      
      User user0 = new User("R6F/:E", "");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setQuestionNumber("qmV.8fp|=");
      assertEquals("qmV.8fp|=", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setForm("");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable1.setSupportingDocuments(arrayList1);
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.setForm("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      RawVariable rawVariable2 = new RawVariable();
      arrayList2.add((Variable) rawVariable2);
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.addSourceVariables(arrayList2);
      RawVariable rawVariable3 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable3);
      rawVariable1.addOntologyTerms(arrayList0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.515592658973953
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("UySB");
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.form = "/~x~!`<b t?44./3r";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("UySB");
      derivedVariable0.form = "/~x~!`<b t?44./3r";
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getYear();
      derivedVariable0.getCodeBookNumber();
      assertEquals("UySB", derivedVariable0.getNotes());
      
      derivedVariable0.setNotes((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      User user0 = new User("", "d;MsGWe`olLDPxc&P*Q");
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable2.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable1.removeOntologyTerms(arrayList0);
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.addSourceVariable(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.732165102891343
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("@Zr/rb|");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.remove((Object) "@Zr/rb|");
      rawVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.setAvailability("@Zr/rb|");
      rawVariable2.isCoded();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable3, rawVariable1);
      rawVariable0.getYear();
      assertEquals("@Zr/rb|", rawVariable0.getDisplayName());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable3);
      derivedVariable0.getSourceVariables();
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean0 = derivedVariable1.isCoded();
      boolean boolean1 = derivedVariable1.isNewRecord();
      assertEquals(0, derivedVariable1.getIdentifier());
      assertTrue(boolean1 == boolean0);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.6789308025149405
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningStatus();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.setName(" :0j}+]`?");
      User user0 = new User("Unknown", "");
      User.checkValidUserIDField("Unknown");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertEquals(" :0j}+]`?", derivedVariable0.getDisplayName());
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1272886853327275
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("] @>`F", "] @>`F");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList0.size());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.5734504974788237
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("@Zr/rb|");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getYear();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getCodeBookNumber();
      derivedVariable0.setNotes("3|iZz^[TOTX*R}3");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      User user0 = new User("@Zr/rb|", "zRbh^mkU`");
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable2.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable3.removeOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.cloneAttributes(derivedVariable2);
      assertEquals("3|iZz^[TOTX*R}3", derivedVariable2.getNotes());
      assertEquals("3|iZz^[TOTX*R}3", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5232109529528914
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setTerm("y=$s.S+{K'");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getYear();
      derivedVariable0.setNotes("y=$s.S+{K'");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      User user0 = new User("@Zr/rb|", "d;MsGWe`olLDPxc&P*Q");
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm1);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertEquals("y=$s.S+{K'", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.796083294935922
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setColumnStart((String) null);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      supportingDocument0.setFilePath((String) null);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      arrayList1.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList1);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      arrayList0.stream();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList2 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertTrue(arrayList2.isEmpty());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.34645205349087
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      LinkedList<DerivedVariable> linkedList0 = new LinkedList<DerivedVariable>();
      arrayList0.addAll((Collection<? extends Variable>) linkedList0);
      derivedVariable0.setSourceVariables(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      System.setCurrentTimeMillis(3838L);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      derivedVariable0.clone();
      ontologyTerm0.clone();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.clone();
      User user0 = new User((String) null, (String) null);
      user0.setPhone("");
      user0.setCity("Gw9.?1:@");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCoded(true);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable1.setCodeBookNumber((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5232109529528914
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      derivedVariable1.getYear();
      derivedVariable1.setNotes("variable.alternativeVariable.label");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      User user0 = new User("&:6PMmU=,=^L", "-@|u(r?#}qHF24h8");
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, derivedVariable1, valueLabel0, valueLabel1);
      assertEquals("variable.alternativeVariable.label", derivedVariable1.getNotes());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addValueLabel(valueLabel1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, (Variable) null);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      derivedVariable2.removeOntologyTerms(arrayList1);
      assertFalse(derivedVariable0.isCoded());
  }
}
