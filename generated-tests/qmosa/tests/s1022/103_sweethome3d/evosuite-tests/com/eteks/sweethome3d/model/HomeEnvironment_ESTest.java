/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:26:19 GMT 2018
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(1935.0F);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("If|Szh", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "y\"1$XT_Vy/{)", "y\"1$XT_Vy/{)", "If|Szh");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setLightColor((-1380));
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals((-1380), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(12);
      homeEnvironment0.setPhotoQuality(4);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setPhotoQuality(4);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(4, homeEnvironment0.getPhotoQuality());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, uRLContent0, 0, (-3782.9946F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, (-2380), 2.0F);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setSkyColor((-2380));
      homeEnvironment0.getGroundTexture();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoCameraPath(linkedList0);
      int int0 = 0;
      homeEnvironment1.setGroundColor(0);
      homeEnvironment1.setPhotoHeight(14);
      homeEnvironment0.setPhotoWidth(14);
      HomeEnvironment.Property.values();
      homeEnvironment0.setVideoFrameRate(14);
      homeEnvironment1.clone();
      homeEnvironment1.getWallsAlpha();
      homeEnvironment0.getVideoAspectRatio();
      String string0 = "VIEW_3D_RATIO";
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "VIEW_3D_RATIO", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(1549.4384F);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      TexturesCategory texturesCategory0 = new TexturesCategory("2N!trLZ");
      String string0 = "X";
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment1.setAllLevelsVisible(true);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.getPhotoAspectRatio();
      float float0 = (-375.2082F);
      homeEnvironment1.setWallsAlpha((-375.2082F));
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      int int0 = (-608);
      homeEnvironment0.setVideoFrameRate((-608));
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment1.setLightColor(0);
      String string0 = "Pc#gh[a5d1+#I_/h1Dc";
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("Pc#gh[a5d1+#I_/h1Dc");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.Pc#gh[a5d1+#I_/h1Dc
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setVideoFrameRate(1425);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoFrameRate(280);
      homeEnvironment0.setPhotoWidth(1425);
      homeEnvironment0.clone();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      homeEnvironment0.setCeillingLightColor(1082);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_WIDTH", temporaryURLContent0, 280, 105.92114F);
      // Undeclared exception!
      try { 
        catalogTexture0.compareTo((CatalogTexture) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.CatalogTexture", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setCeillingLightColor((-4201));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera((-1787.0F), 2696.783F, 0, 1702.769F, 1702.769F, 270.6F, 0L, camera_Lens0);
      linkedList0.push(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      homeEnvironment0.setVideoFrameRate(971);
      homeEnvironment0.setPhotoHeight(13427964);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("PHOTO_ASPECT_RATIO");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.PHOTO_ASPECT_RATIO
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setGroundColor(1364);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(867);
      homeEnvironment0.getSubpartSizeUnderLight();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("P,}{lr/4_u(\"X(W", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setWallsAlpha(1.0F);
      int int0 = homeEnvironment0.getVideoHeight();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setCeillingLightColor(14);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.setPhotoHeight(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("FISHEYE", propertyChangeListener0);
      Object object0 = new Object();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", homeEnvironment2, (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment1.setSubpartSizeUnderLight(0.0F);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setCeillingLightColor(0);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment1.setVideoQuality(400);
      homeEnvironment0.setWallsAlpha(1.5F);
      homeEnvironment1.isAllLevelsVisible();
      assertEquals(0, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(537.0F);
      homeEnvironment0.setWallsAlpha(0.0F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setLightColor((-511));
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setPhotoQuality((-511));
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("abbot.util.PathClassLoader$Factory");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.abbot.util.PathClassLoader$Factory
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setCeillingLightColor(14);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setWallsAlpha(2075.1F);
      homeEnvironment0.setCeillingLightColor(14);
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getLightColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("LIGHT_COLOR");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.LIGHT_COLOR
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.0280290733074104
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(1586);
      homeEnvironment0.setCeillingLightColor(1586);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSubpartSizeUnderLight(1586);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment1.setSubpartSizeUnderLight(1586);
      List<Camera> list0 = homeEnvironment2.getVideoCameraPath();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setVideoQuality(0);
      homeEnvironment2.setAllLevelsVisible(false);
      homeEnvironment1.setWallsAlpha(2294.28F);
      homeEnvironment1.getVideoWidth();
      homeEnvironment1.isObserverCameraElevationAdjusted();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.AspectRatio", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(list0, "", object0, homeEnvironment2);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.getGroundTexture();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment2.getVideoAspectRatio();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment2.setPhotoQuality(0);
      homeEnvironment0.getDrawingMode();
      homeEnvironment2.getSkyTexture();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4410152780267027
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment1.setAllLevelsVisible(true);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.getPhotoAspectRatio();
      float float0 = (-375.2082F);
      homeEnvironment1.setWallsAlpha((-375.2082F));
      homeEnvironment0.getVideoCameraPath();
      int int0 = (-608);
      homeEnvironment0.setVideoFrameRate((-608));
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment1.setLightColor(0);
      String string0 = "Pc#gh[a5d1+#I_/h1Dc";
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("Pc#gh[a5d1+#I_/h1Dc");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.Pc#gh[a5d1+#I_/h1Dc
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("", "", 13, "k@G1?", uRLStreamHandler0);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", temporaryURLContent0, 13, 0.0F, (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1041, (HomeTexture) null, (-467136501), 13, 583.68F);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setAllLevelsVisible(false);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setSkyColor((-2143492041));
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      HomeEnvironment.DrawingMode.values();
      AspectRatio aspectRatio0 = homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment1.setWallsAlpha((-375.2082F));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoFrameRate((-608));
      homeEnvironment0.setWallsAlpha((-75.0F));
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment1.setWallsAlpha((-1404.0F));
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("GZ/p{7 ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.GZ/p{7 
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DRAWING_MODE");
      HomeEnvironment.Property.valueOf("DRAWING_MODE");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(2146549583);
      homeEnvironment0.setPhotoHeight(867);
      homeEnvironment0.setVideoQuality(867);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setLightColor(2146549583);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("DpEG", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setWallsAlpha((-77.723F));
      homeEnvironment0.getVideoQuality();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("DRAWING_MODE", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("DRAWING_MODE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.DRAWING_MODE
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(1586);
      homeEnvironment0.setCeillingLightColor(1586);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSubpartSizeUnderLight(1586);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment1.setSubpartSizeUnderLight(1586);
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment1.setVideoQuality(0);
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture(":dY\"M=@r+8<", temporaryURLContent0, (-337.5126F), (-793.0487F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment2.setSkyTexture(homeTexture0);
      homeEnvironment2.setAllLevelsVisible(false);
      homeEnvironment1.setWallsAlpha(2294.28F);
      homeEnvironment1.getVideoWidth();
      FileSystemHandling.shouldAllThrowIOExceptions();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.AspectRatio", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.AspectRatio", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment1.setWallsAlpha(1586);
      homeEnvironment0.setCeillingLightColor(1505);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.AspectRatio", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.GROUND_COLOR;
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.AspectRatio", propertyChangeListenerProxy0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy3);
      System.setCurrentTimeMillis(320);
      homeEnvironment0.setPhotoWidth(1586);
      Random.setNextRandom(0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor((-3542));
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setPhotoHeight(300);
      HomeEnvironment.Property.values();
      URL uRL0 = MockURL.getFileExample();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, 300, (-1.0F));
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      System.setCurrentTimeMillis((-171L));
      homeEnvironment1.getSkyColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("E\",;T9|1[H4NfKo");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.E\",;T9|1[H4NfKo
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, uRLContent0, 0, (-3782.9946F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, (-2380), 0);
      homeEnvironment0.setGroundColor(0);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      homeEnvironment0.setSkyColor((-2380));
      HomeTexture homeTexture2 = homeEnvironment0.getGroundTexture();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(13427964, homeTexture1, 0, homeTexture2, 0, 0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      homeEnvironment0.setWallsAlpha(1.0F);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment1.getSkyColor();
      homeEnvironment0.setGroundTexture(homeTexture2);
      homeEnvironment1.setGroundTexture(homeTexture2);
      homeEnvironment1.setPhotoHeight(4);
      homeEnvironment1.setGroundTexture(homeTexture2);
      homeEnvironment0.setVideoFrameRate(2145957649);
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, uRLContent0, 0, (-3782.9946F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setPhotoWidth(2570);
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("X", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setWallsAlpha(0);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.871476118054867
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setPhotoWidth(11053224);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.AspectRatio", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.AspectRatio", propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "", "", object0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getGroundTexture();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setPhotoQuality(11053224);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoWidth(11053224);
      homeEnvironment0.setLightColor((-1968));
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("", "", 13, "k@G1?", uRLStreamHandler0);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", temporaryURLContent0, 13, 0.0F, (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13, homeTexture0, (-1984), (-3597), 1586.0F);
      homeEnvironment0.setLightColor(1041);
      assertEquals(1041, homeEnvironment0.getLightColor());
      
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(17, homeTexture0, (-211), homeTexture0, (-470), (-470));
      homeEnvironment1.setSkyColor((-211));
      assertEquals(320, homeEnvironment1.getVideoWidth());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.8133554045006157
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, uRLContent0, 0, (-3782.9946F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, (-2380), 2.0F);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setSkyColor((-2380));
      homeEnvironment0.getGroundTexture();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setWallsAlpha(2.4207F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor((-2380));
      homeEnvironment1.setSubpartSizeUnderLight(1505);
      homeEnvironment1.setPhotoHeight(0);
      homeEnvironment1.getPhotoQuality();
      System.setCurrentTimeMillis((-3111L));
      homeEnvironment1.setLightColor((-2627));
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      assertEquals(2.4207F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-2627), homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(1586);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setCeillingLightColor(1586);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSubpartSizeUnderLight(1586);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment1.setSubpartSizeUnderLight(1586);
      List<Camera> list0 = homeEnvironment2.getVideoCameraPath();
      homeEnvironment0.setVideoWidth(264);
      homeEnvironment0.setVideoWidth(2143798119);
      homeEnvironment2.setGroundColor(2143798119);
      homeEnvironment1.setPhotoHeight((-642));
      homeEnvironment2.setPhotoWidth(2146130476);
      HomeEnvironment.Property.values();
      homeEnvironment0.setVideoFrameRate((-2542));
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      homeEnvironment3.setVideoCameraPath(list0);
      System.setCurrentTimeMillis(264);
      homeEnvironment0.setLightColor(11);
      HomeEnvironment homeEnvironment4 = new HomeEnvironment();
      homeEnvironment0.setLightColor(11);
      HomeEnvironment homeEnvironment5 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-766));
      homeEnvironment1.setVideoFrameRate(25);
      assertEquals(1586, homeEnvironment0.getCeillingLightColor());
      assertEquals((-766), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(1586);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setCeillingLightColor(1586);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSubpartSizeUnderLight(1586);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment1.setSubpartSizeUnderLight(1586);
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment0.setVideoWidth(268);
      homeEnvironment0.setVideoWidth(268);
      homeEnvironment2.setGroundColor(1586);
      homeEnvironment2.setPhotoHeight((-642));
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      homeEnvironment3.setWallsAlpha(2146130476);
      homeEnvironment3.setPhotoWidth((-151));
      HomeEnvironment.Property.values();
      homeEnvironment3.setVideoFrameRate(2146130476);
      homeEnvironment3.clone();
      System.setCurrentTimeMillis(0L);
      homeEnvironment1.setLightColor(1674);
      HomeEnvironment homeEnvironment4 = new HomeEnvironment();
      assertEquals(25, homeEnvironment4.getVideoFrameRate());
      
      homeEnvironment4.setVideoFrameRate(1586);
      assertEquals(13684944, homeEnvironment4.getCeillingLightColor());
  }
}
