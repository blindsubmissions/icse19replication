/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:34:39 GMT 2018
 */

package org.jsecurity.authc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetAddress;
import java.net.UnknownHostException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.jsecurity.authc.UsernamePasswordToken;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UsernamePasswordToken_ESTest extends UsernamePasswordToken_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '(';
      charArray0[1] = 'o';
      charArray0[2] = 'D';
      charArray0[3] = '~';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, charArray0, false);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      try { 
        MockInetAddress.getByAddress(byteArray0);
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Not IPv4: [0, 0]
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("A", "A", true);
      usernamePasswordToken0.getPassword();
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      InetAddress inetAddress1 = MockInetAddress.getLoopbackAddress();
      usernamePasswordToken0.setInetAddress(inetAddress1);
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.getInetAddress();
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - A, rememberMe=true (/127.0.0.1)", string0);
      
      usernamePasswordToken0.setRememberMe(true);
      assertTrue(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, "QCyzP_@XgGsyy", inetAddress0);
      char[] charArray0 = new char[2];
      charArray0[0] = '/';
      usernamePasswordToken0.setInetAddress((InetAddress) null);
      char[] charArray1 = new char[4];
      charArray1[0] = 'S';
      charArray1[1] = 'S';
      charArray1[2] = 'S';
      usernamePasswordToken0.toString();
      charArray1[3] = 'S';
      usernamePasswordToken0.setPassword(charArray1);
      charArray0[1] = 'S';
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.toString();
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.setUsername("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false");
      usernamePasswordToken0.toString();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.getInetAddress();
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.getInetAddress();
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false, rememberMe=false", string0);
      
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.isRememberMe();
      char[] charArray2 = usernamePasswordToken0.getPassword();
      assertFalse(usernamePasswordToken0.isRememberMe());
      assertNull(charArray2);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6674619334292948
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("", "8X^7LbuAlt\"XP");
      usernamePasswordToken0.setRememberMe(true);
      char[] charArray0 = new char[6];
      charArray0[0] = 'b';
      charArray0[1] = 'm';
      charArray0[2] = 'Z';
      charArray0[3] = 'P';
      charArray0[4] = '$';
      charArray0[5] = 'm';
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.setUsername("8X^7LbuAlt\"XP");
      usernamePasswordToken0.setUsername((String) null);
      assertTrue(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("`_xv-SV76", "AX=kc<}& YWEf\nDD", true, inetAddress0);
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.setUsername("`_xv-SV76");
      char[] charArray0 = usernamePasswordToken0.getPassword();
      usernamePasswordToken0.getInetAddress();
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.toString();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.setUsername("org.jsecurity.authc.UsernamePasswordToken - `_xv-SV76, rememberMe=true (/192.168.1.42)");
      usernamePasswordToken0.clear();
      boolean boolean0 = usernamePasswordToken0.isRememberMe();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      usernamePasswordToken0.setPassword((char[]) null);
      InetAddress inetAddress0 = MockInetAddress.getByName("&AuYYa}e{u*");
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.setUsername("");
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.setPassword((char[]) null);
      usernamePasswordToken0.setPassword((char[]) null);
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.setPassword((char[]) null);
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.setPassword((char[]) null);
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.setUsername((String) null);
      InetAddress inetAddress1 = usernamePasswordToken0.getInetAddress();
      usernamePasswordToken0.setUsername((String) null);
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.setInetAddress(inetAddress1);
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false (&AuYYa}e{u*/200.42.42.0)", string0);
      
      usernamePasswordToken0.clear();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'o';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("Lbw:JcZVt", charArray0);
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.setInetAddress((InetAddress) null);
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setInetAddress((InetAddress) null);
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.toString();
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.setUsername("org.jsecurity.authc.UsernamePasswordToken");
      assertArrayEquals(new char[] {'\u0000'}, charArray0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String string0 = null;
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, (String) null);
      boolean boolean0 = false;
      char[] charArray0 = new char[8];
      usernamePasswordToken0.setPassword(charArray0);
      charArray0[0] = 'n';
      usernamePasswordToken0.setPassword(charArray0);
      charArray0[1] = '!';
      char char0 = 'j';
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte)0;
      try { 
        MockInetAddress.getByAddress("", byteArray0);
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Not IPv4: [-102, 0]
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6674619334292948
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      String string0 = "(@AKd<+gI#";
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("(@AKd<+gI#", (String) null, false);
      char[] charArray0 = new char[7];
      charArray0[0] = '4';
      charArray0[1] = '\'';
      usernamePasswordToken0.toString();
      charArray0[2] = 'c';
      charArray0[3] = 'f';
      usernamePasswordToken0.setPassword(charArray0);
      charArray0[4] = '$';
      charArray0[5] = '0';
      charArray0[6] = 'r';
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.clear();
      byte[] byteArray0 = new byte[0];
      usernamePasswordToken0.setUsername("(@AKd<+gI#");
      try { 
        MockInetAddress.getByAddress(byteArray0);
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Not IPv4: []
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'Z';
      charArray0[1] = '0';
      charArray0[2] = '/';
      charArray0[3] = 'O';
      charArray0[4] = 'x';
      charArray0[5] = 'M';
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("%H`_", charArray0, inetAddress0);
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.setUsername("K}mt]jE6//HLWR2- ");
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.getPrincipal();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }
}
