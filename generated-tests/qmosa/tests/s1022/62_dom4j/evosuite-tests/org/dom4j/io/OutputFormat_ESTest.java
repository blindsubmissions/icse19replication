/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:55:10 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(false);
      String string0 = "g06rgf<";
      boolean boolean0 = false;
      outputFormat0.setExpandEmptyElements(false);
      int int0 = (-2673);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('[');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ([)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("ON1RTAa47>3&qr),G:");
      outputFormat0.setXHTML(false);
      outputFormat0.isOmitEncoding();
      outputFormat0.getLineSeparator();
      assertEquals("ON1RTAa47>3&qr),G:", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat("QZ0;c&Cc}yq=LH", true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setOmitEncoding(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('3');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (3)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("2", false, "2");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isTrimText();
      outputFormat0.setLineSeparator("2");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setTrimText(true);
      assertEquals("2", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      boolean boolean0 = false;
      outputFormat0.setPadText(false);
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      outputFormat0.parseOptions(stringArray0, 2284);
      String[] stringArray1 = new String[0];
      outputFormat0.setNewLineAfterNTags((-1031));
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-339));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -339
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "aNXG-a;NJ:ziu].;j");
      outputFormat0.setOmitEncoding(false);
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("\n", string0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "\n";
      stringArray0[1] = "";
      stringArray0[2] = "\n";
      stringArray0[3] = "\n";
      stringArray0[4] = "I@f%\"YhZ%#&.!";
      stringArray0[5] = "";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("", outputFormat0.getIndent());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isNewlines());
      assertEquals("aNXG-a;NJ:ziu].;j", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, int0);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.getIndent();
      outputFormat0.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewlines(true);
      outputFormat1.setNewlines(true);
      outputFormat0.setPadText(true);
      outputFormat0.setNewLineAfterNTags(2286);
      outputFormat0.setXHTML(true);
      outputFormat1.getNewLineAfterNTags();
      outputFormat0.setNewlines(true);
      assertEquals(2286, outputFormat0.getNewLineAfterNTags());
      
      outputFormat1.isXHTML();
      boolean boolean0 = outputFormat1.isXHTML();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = false;
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, (String) null);
      outputFormat0.setIndent((String) null);
      outputFormat0.setLineSeparator(":qOYq7p{po'");
      outputFormat0.setLineSeparator(" ");
      boolean boolean1 = true;
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setNewLineAfterNTags(104);
      outputFormat0.setOmitEncoding(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('2');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (2)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-newlines";
      outputFormat1.setOmitEncoding(true);
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat0.setEncoding((String) null);
      outputFormat0.setXHTML(true);
      outputFormat1.setSuppressDeclaration(false);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent(false);
      outputFormat1.isXHTML();
      outputFormat1.setSuppressDeclaration(false);
      outputFormat1.getLineSeparator();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat2.isSuppressDeclaration();
      outputFormat3.setExpandEmptyElements(false);
      outputFormat2.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(true);
      assertTrue(outputFormat0.isOmitEncoding());
      
      boolean boolean0 = outputFormat3.isOmitEncoding();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("mjWORSfI");
      outputFormat0.setOmitEncoding(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterDeclaration(false);
      assertFalse(outputFormat1.isNewLineAfterDeclaration());
      
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setIndent(false);
      outputFormat0.getIndent();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getEncoding();
      outputFormat2.setNewlines(true);
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "mjWORSfI";
      stringArray0[1] = "mjWORSfI";
      stringArray0[2] = "_,B?i~I:-MW8${,z\"fs";
      stringArray0[3] = "mjWORSfI";
      stringArray0[4] = "mjWORSfI";
      stringArray0[5] = "VQg/[iV`0R";
      int int0 = outputFormat0.parseOptions(stringArray0, 1354);
      assertEquals(1354, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator("L;IoBM");
      outputFormat1.setXHTML(false);
      outputFormat0.setNewLineAfterNTags(2550);
      outputFormat0.setTrimText(false);
      outputFormat1.setExpandEmptyElements(false);
      outputFormat0.setEncoding("");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat0.getLineSeparator();
      outputFormat2.setSuppressDeclaration(true);
      outputFormat1.isNewlines();
      assertEquals("L;IoBM", outputFormat1.getLineSeparator());
      
      outputFormat2.getAttributeQuoteCharacter();
      outputFormat2.isExpandEmptyElements();
      boolean boolean0 = outputFormat2.isNewlines();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isTrimText();
      outputFormat0.isNewlines();
      outputFormat0.setIndent("/ 5Q+|)bH]z`4");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setPadText(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('W');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (W)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags(2590);
      outputFormat0.setEncoding("");
      outputFormat0.setLineSeparator("r74Z$0FG=Gv%Ed?Hk");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setLineSeparator("w~D++5le4+\"cOx'KF$");
      outputFormat0.setPadText(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9264175554979963
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setIndent("");
      outputFormat0.getLineSeparator();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setEncoding(":Ip \"4");
      outputFormat0.setXHTML(true);
      outputFormat0.setPadText(true);
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = ":Ip \"4";
      stringArray0[1] = "";
      stringArray0[2] = ":Ip \"4";
      stringArray0[3] = "\n";
      stringArray0[4] = "";
      stringArray0[5] = ":Ip \"4";
      stringArray0[6] = "\n";
      stringArray0[7] = ":Ip \"4";
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setXHTML(true);
      outputFormat1.parseOptions(stringArray0, 1);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat1.isTrimText();
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.isOmitEncoding();
      assertTrue(outputFormat0.isPadText());
      
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertFalse(outputFormat2.isXHTML());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      boolean boolean0 = false;
      outputFormat0.setEncoding(" >$a4r");
      outputFormat1.setTrimText(false);
      outputFormat1.setXHTML(false);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setXHTML(true);
      outputFormat2.setOmitEncoding(true);
      outputFormat0.setTrimText(true);
      outputFormat2.setOmitEncoding(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewlines(false);
      outputFormat0.isExpandEmptyElements();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      int int0 = 0;
      outputFormat3.setIndentSize(0);
      outputFormat3.setNewLineAfterNTags(0);
      outputFormat0.isPadText();
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        outputFormat3.parseOptions(stringArray0, (-1230));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1230
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.725550395831721
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("ik", true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator("V7?K)`)NyFvq");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterNTags((-2913));
      outputFormat0.setLineSeparator("");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setPadText(true);
      outputFormat1.setTrimText(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setIndent("");
      outputFormat2.setXHTML(true);
      outputFormat0.setIndent(true);
      outputFormat2.setNewLineAfterDeclaration(true);
      outputFormat0.setNewlines(false);
      outputFormat2.setIndent("");
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertEquals("", outputFormat0.getLineSeparator());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4832209601189688
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-padText";
      stringArray0[0] = "-padText";
      stringArray0[2] = "-suppressDeclaration";
      String string0 = "1[?Xa#[+7.GW3_/";
      stringArray0[3] = "1[?Xa#[+7.GW3_/";
      String string1 = "%-";
      stringArray0[4] = "%-";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9730014063936125
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-suppressDeclaration";
      stringArray0[1] = "%-";
      stringArray0[2] = "-suppressDeclaration";
      stringArray0[3] = "-suppressDeclaration";
      stringArray0[4] = "aNXG-a;NJ:ziu].;j";
      stringArray0[5] = "-suppressDeclaration";
      stringArray0[6] = "%-";
      stringArray0[7] = "1[?Xa#[+7.GW3_/";
      outputFormat0.parseOptions(stringArray0, 0);
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.056612568756882
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setOmitEncoding(false);
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "-expandEmpty+Uw~<j+]";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.740020296461624
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtml";
      stringArray0[1] = "-xhtml";
      stringArray0[2] = "-expandEmpty-expandEmptytb%ROD{%}t7_s";
      stringArray0[3] = "-xhtml";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "K";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 2316);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('|');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (|)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtml";
      stringArray0[1] = "EX9N)KX?7P";
      stringArray0[2] = "-expandEmpty-expandEmptytb%ROD{%}t7_s";
      OutputFormat.createCompactFormat();
      stringArray0[3] = "-xhtml";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      outputFormat0.parseOptions(stringArray0, 82);
      outputFormat0.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("jY?i/Yg");
      OutputFormat outputFormat1 = new OutputFormat("", false);
      OutputFormat outputFormat2 = new OutputFormat("jY?i/Yg", false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "jY?i/Yg";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "jY?i/Yg";
      stringArray0[5] = "";
      stringArray0[6] = "jY?i/Yg";
      stringArray0[7] = "-expandEmpty";
      stringArray0[8] = "*pkea";
      outputFormat2.parseOptions(stringArray0, 0);
      String[] stringArray1 = null;
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions((String[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0437938808441543
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("NpadTeHxt", true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "NpadTeHxt";
      stringArray0[1] = "NpadTeHxt";
      stringArray0[2] = "\")qHyWf<o;";
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding("uazAfxn");
      outputFormat1.setEncoding("xP\"X/<ovgXgU47&");
      outputFormat0.parseOptions(stringArray0, 1378);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "xP\"X/<ovgXgU47&";
      stringArray1[1] = "-encoding";
      stringArray1[2] = "xP\"X/<ovgXgU47&";
      outputFormat1.parseOptions(stringArray1, 1378);
      String[] stringArray2 = new String[8];
      stringArray2[0] = "`d~FqEi(*,]c";
      stringArray2[2] = "-encoding";
      stringArray2[3] = "xP\"X/<ovgXgU47&";
      stringArray2[4] = "xP\"X/<ovgXgU47&";
      stringArray2[5] = "uazAfxn";
      stringArray2[6] = "uazAfxn";
      stringArray2[7] = "\")qHyWf<o;";
      outputFormat0.parseOptions(stringArray2, 2);
      int int0 = outputFormat1.parseOptions(stringArray2, 1378);
      assertEquals("xP\"X/<ovgXgU47&", outputFormat1.getEncoding());
      assertEquals(1378, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8143075196071252
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("jY?i/Yg");
      OutputFormat outputFormat1 = new OutputFormat("jY?i/Yg", false, "jY?i/Yg");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "jY?i/Yg";
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      String[] stringArray1 = new String[3];
      stringArray1[0] = "-indentSize";
      stringArray1[1] = "jY?i/Yg";
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray1, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"jY?i/Yg\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
