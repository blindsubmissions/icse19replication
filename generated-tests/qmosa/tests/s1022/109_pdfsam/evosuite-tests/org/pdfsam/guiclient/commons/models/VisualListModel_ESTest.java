/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:37:16 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.ConvolveOp;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.RescaleOp;
import java.awt.image.renderable.ParameterBlock;
import java.math.BigInteger;
import java.net.Proxy;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import javax.media.jai.CollectionImage;
import javax.media.jai.OperationRegistry;
import javax.media.jai.PlanarImage;
import javax.media.jai.SnapshotImage;
import javax.swing.JComboBox;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = (-416);
      intArray0[1] = 0;
      intArray0[2] = (-2326);
      intArray0[3] = 181;
      intArray0[4] = (-2851);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      SnapshotImage snapshotImage0 = null;
      try {
        snapshotImage0 = new SnapshotImage((PlanarImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.media.jai.ImageLayout", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(111);
      int[] intArray0 = new int[9];
      intArray0[0] = 111;
      intArray0[1] = 106;
      intArray0[2] = 111;
      intArray0[3] = 111;
      intArray0[4] = 111;
      intArray0[5] = 111;
      intArray0[6] = 111;
      intArray0[7] = 111;
      intArray0[8] = 111;
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[0];
      visualListModel0.moveUpIndexes(intArray1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) stack0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 11;
      intArray0[2] = 1;
      intArray0[3] = 11;
      intArray0[4] = 11;
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(11, "E^i\"=#Myq", "org.pdfsam.guiclient.commons.models.VisualListModel");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      jComboBox0.enableInputMethods(false);
      visualListModel0.addListDataListener(jComboBox0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      visualListModel0.reverseElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 0;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.getSize();
      visualListModel0.getElementAt(0);
      visualListModel0.addAllElements(collection0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-629);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.subList((-629), (-629));
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.addAllElements((-629), (Collection<VisualPageListItem>) null);
      visualListModel0.removeElements((-629), 1, true);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-629));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -629
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1550);
      intArray0[1] = 1351;
      intArray0[2] = 6;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.moveDownIndexes(intArray0);
      int int0 = 0;
      visualListModel0.removeElements(1351, 0, false);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      // Undeclared exception!
      try { 
        Proxy.Type.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant java.net.Proxy.Type.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      visualListModel0.addAllElements(collection0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.moveUpIndex(0);
      VisualListModel visualListModel1 = new VisualListModel();
      int int1 = 5;
      // Undeclared exception!
      try { 
        visualListModel1.subList(5, 0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(5) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1475;
      visualListModel0.subList(93, 1475);
      visualListModel0.clearData();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      AffineTransform affineTransform0 = AffineTransform.getTranslateInstance(1475, 93);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 1475);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: 1475
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      visualListModel0.subList(0, 2482, true);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 2482;
      intArray0[2] = 0;
      intArray0[3] = 2482;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 2482;
      intArray0[8] = (-1840);
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(9, intArray0.length);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-6226);
      visualListModel0.subList((-6226), (-6226));
      int int1 = 0;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      int[] intArray0 = new int[5];
      intArray0[0] = (-2223);
      intArray0[1] = 0;
      intArray0[3] = (-179);
      intArray0[4] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-629);
      visualListModel0.rotateClockwiseElements(intArray0);
      Collection<VisualPageListItem> collection0 = new HashSet<VisualPageListItem>();
      visualListModel0.appendAllElements(collection0);
      visualListModel0.addAllElements((-629), collection0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-629));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -629
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0097091818941455
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      jComboBox0.enableInputMethods(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "FXgs%p*R";
      stringArray0[1] = "]2,5{.we";
      stringArray0[2] = "cq6/$\"e4aH:d 8T?9";
      stringArray0[3] = "\"8*xib~K|OA";
      stringArray0[4] = "`Qu48$E85x=! -phg;";
      stringArray0[5] = "";
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.addListDataListener(jComboBox1);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.subList(0, 0, true);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getSize();
      visualListModel0.getElementAt(776);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(776, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 776
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements((-2675), (Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElements((-2675), 991, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      visualListModel0.getElements();
      visualListModel0.getElements();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.addAllElements(2489, (Collection<VisualPageListItem>) hashSet0);
      visualListModel0.removeElements(1, (-4115), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0253262207700673
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>(linkedList0);
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.moveDownIndexes(intArray0);
      int int0 = 0;
      visualListModel0.removeElements(6, 0, true);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(linkedList0);
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      vector1.replaceAll(unaryOperator0);
      visualListModel1.getValidElements();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.undeleteElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.moveDownIndex(6);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.subList(0, 0, false);
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel0.removeElements(0, (-806), false);
      visualListModel1.moveUpIndex(5);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>(linkedList0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getElements();
      visualListModel1.getElements();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      assertEquals(0, linkedList0.size());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[7];
      intArray1[0] = (-1496);
      intArray1[1] = 2489;
      intArray1[2] = 1475;
      visualListModel0.reverseElements(intArray0);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0);
      Hashtable<RenderingHints.Key, Proxy.Type> hashtable0 = new Hashtable<RenderingHints.Key, Proxy.Type>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      // Undeclared exception!
      try { 
        operationRegistry0.createCollection("H", parameterBlock0, renderingHints0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"H\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.pollLast();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>(linkedList0);
      visualListModel0.subList(0, 0, false);
      int[] intArray0 = new int[6];
      intArray0[0] = (-806);
      intArray0[1] = (-806);
      intArray0[2] = 0;
      intArray0[3] = (-2470);
      intArray0[4] = 0;
      intArray0[5] = 0;
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel1.removeElements((-2470), (-806), false);
      visualListModel0.moveUpIndex(5);
      visualListModel0.addElement((VisualPageListItem) null);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      Collection<VisualPageListItem> collection0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(collection0);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 2482;
      intArray0[2] = 0;
      intArray0[3] = 2482;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 2482;
      intArray0[8] = (-1840);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 270);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3393717343898155
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1542);
      intArray0[1] = 1351;
      intArray0[2] = 6;
      visualListModel0.moveDownIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.prependAllElements(vector0);
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      vector0.replaceAll(unaryOperator0);
      visualListModel0.getValidElements();
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      visualListModel1.getSize();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel1.getValidElements();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel1.setData(visualPageListItemArray0);
      VisualPageListItem[] visualPageListItemArray1 = visualListModel1.getElements();
      assertFalse(visualPageListItemArray1.equals((Object)visualPageListItemArray0));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      visualListModel0.getValidElements();
      visualListModel0.updateElementAt(13, (VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(5, visualListModel0.getSize());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3419942522324253
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.subList((-629), (-629));
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndex((-629));
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      assertEquals(1, intArray0.length);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.1458417525947544
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.subList((-629), (-629));
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements((-629), (Collection<VisualPageListItem>) vector0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(vector0);
      UnaryOperator.identity();
      int[] intArray1 = new int[9];
      intArray1[0] = 297;
      intArray1[1] = 297;
      intArray1[2] = 976;
      intArray1[3] = (-27);
      intArray1[4] = 3100;
      visualListModel0.getElements();
      int int0 = 1;
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      // Undeclared exception!
      try { 
        arrayDeque0.add((VisualPageListItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayDeque", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.data = (Vector<VisualPageListItem>) stack0;
      visualListModel1.setData((Vector<VisualPageListItem>) stack0);
      stack0.add((VisualPageListItem) null);
      visualListModel1.updateElementAt((-13), (VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel1.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4583113296830845
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.retainAll(visualListModel0.data);
      visualListModel0.moveUpIndex((-604));
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      intArray0[0] = (-604);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.updateElementAt((-441), (VisualPageListItem) null);
      visualListModel0.removeElements((-441), (-441), false);
      int[] intArray1 = new int[3];
      intArray1[0] = (-441);
      intArray1[1] = (-441);
      intArray1[2] = 9;
      stack0.add((VisualPageListItem) null);
      visualListModel0.removeElements(intArray1, true);
      visualListModel0.subList((-441), (-604), true);
      visualListModel0.addAllElements(9, (Collection<VisualPageListItem>) null);
      visualListModel0.getSize();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-629);
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.subList((-629), (-629));
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8343719702816237
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 2909;
      visualListModel0.getValidElements();
      int int1 = (-629);
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.subList((-629), (-629));
      visualListModel0.addElement((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8343719702816237
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.data = (Vector<VisualPageListItem>) stack0;
      visualListModel1.setData((Vector<VisualPageListItem>) stack0);
      visualListModel1.setData((Vector<VisualPageListItem>) stack0);
      stack0.add((VisualPageListItem) null);
      visualListModel1.updateElementAt((-13), (VisualPageListItem) null);
      visualListModel0.getValidElements();
      int[] intArray0 = new int[6];
      intArray0[0] = (-13);
      intArray0[1] = (-13);
      intArray0[2] = (-13);
      intArray0[3] = 0;
      intArray0[4] = (-13);
      intArray0[5] = (-13);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) visualListModel1.data);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.data = (Vector<VisualPageListItem>) stack0;
      visualListModel1.setData((Vector<VisualPageListItem>) stack0);
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      try { 
        visualListModel1.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      visualListModel0.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.data = (Vector<VisualPageListItem>) stack0;
      visualListModel1.setData((Vector<VisualPageListItem>) stack0);
      stack0.add((VisualPageListItem) null);
      visualListModel1.updateElementAt((-13), (VisualPageListItem) null);
      int[] intArray0 = new int[8];
      intArray0[0] = (-13);
      intArray0[1] = (-13);
      intArray0[2] = (-13);
      intArray0[3] = (-13);
      intArray0[4] = (-13);
      intArray0[5] = 46;
      intArray0[6] = (-13);
      intArray0[7] = (-1633);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.setData(visualListModel1.data);
      assertEquals(0, visualListModel1.getSize());
      assertTrue(stack0.empty());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5631514064163308
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addAllElements(1024, (Collection<VisualPageListItem>) null);
      visualListModel0.subList(0, 0);
      int[] intArray0 = new int[1];
      visualListModel0.getListDataListeners();
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel2.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel0.reverseElements(intArray0);
      visualListModel1.removeElements(2037, (-806), true);
      int int0 = visualListModel0.getSize();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.2554823251787535
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      int[] intArray0 = new int[4];
      intArray0[0] = (-410);
      intArray0[1] = 955;
      intArray0[2] = (-1573);
      intArray0[3] = 694;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray1 = new int[1];
      visualListModel0.moveDownIndexes(intArray1);
      int int0 = 1000;
      intArray1[0] = 1000;
      try { 
        visualListModel0.moveUpIndexes(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 999
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(853);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>(vector0);
      hashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) hashSet0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.updateElementAt(853, (VisualPageListItem) null);
      visualListModel0.moveDownIndex(0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(2, visualListModel0.getSize());
  }
}
