/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 09:58:25 GMT 2018
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.clone();
      homeEnvironment0.setVideoQuality(952);
      homeEnvironment0.setSkyColor(329);
      int int0 = 3;
      homeEnvironment0.setGroundColor(329);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setPhotoWidth(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      homeEnvironment0.setVideoQuality(3);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getLightColor();
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("1Zucc:+", "1Zucc:+", resourceURLContent0, 0, (-1114.1877F), "1Zucc:+", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, 0, 0);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getGroundColor();
      homeEnvironment1.setVideoFrameRate(0);
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(300, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setPhotoQuality(2377);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setSkyColor(2377);
      assertEquals(2377, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera((-675.9714F), (-675.9714F), (-675.9714F), (-5577.0F), (-675.9714F), (-2333.61F));
      Camera.convertTimeToTimeZone(1L, "GROUND_COLOR");
      camera0.setTime(0L);
      linkedList0.add(camera0);
      homeEnvironment0.setVideoWidth(0);
      linkedList0.clear();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.getSubpartSizeUnderLight();
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment1.isAllLevelsVisible();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment1.getPhotoAspectRatio());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("RATIO_16_9", (Content) null, 980.8247F, (-943.0F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, 0, 980.8247F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.getPhotoHeight();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.setSkyTexture(homeTexture0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.HomeEnvironment$Property", propertyChangeListener0);
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.getVideoFrameRate();
      homeEnvironment1.getSkyTexture();
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment2.getVideoHeight();
      homeEnvironment2.setVideoFrameRate(300);
      assertEquals(300, homeEnvironment2.getVideoFrameRate());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoQuality(1012);
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      Camera camera0 = new Camera(22.0F, 22.0F, 22.0F, (-299.4F), 47.0F, 22.0F);
      linkedList0.add(camera0);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      assertEquals(1012, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoQuality(5);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.setGroundColor(5);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setVideoWidth(3);
      HomeEnvironment.Property.values();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.clone();
      assertEquals((-1.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = (-2164);
      int int1 = 0;
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setVideoWidth(0);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 0, 0, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1624, 0, 1624);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setVideoFrameRate(25);
      homeEnvironment0.setPhotoHeight(1624);
      AspectRatio aspectRatio0 = homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setWallsAlpha(0.0F);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getLightColor();
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      boolean boolean0 = true;
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      int int0 = 5;
      homeEnvironment0.setPhotoQuality(5);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoWidth();
      String string0 = "Mac OS X";
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(classLoader0, "Mac OS X");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource Mac OS X
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.9650156932565066
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setVideoWidth(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setPhotoWidth((-2164));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoHeight();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoWidth(2800);
      homeEnvironment0.setSubpartSizeUnderLight((-2491.536F));
      homeEnvironment0.setPhotoWidth(2800);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.getSkyColor();
      HomeEnvironment.Property.values();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("7JI=jdZ@X,#LM!2P");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.7JI=jdZ@X,#LM!2P
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setWallsAlpha(3308.328F);
      homeEnvironment0.setVideoQuality(11053224);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getDrawingMode();
      assertEquals(3308.328F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setPhotoQuality(2377);
      CatalogTexture catalogTexture0 = new CatalogTexture("H3Z", "H3Z", (Content) null, (-1063.9532F), (-1.0F), "H3Z");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "H3Z", object1, homeEnvironment0);
      propertyChangeEvent0.setPropagationId(homeTexture0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("QXhr@xq", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setGroundColor(1614);
      homeEnvironment1.setCeillingLightColor(12);
      homeEnvironment0.setPhotoQuality(2292);
      homeEnvironment1.setPhotoHeight(3273);
      assertEquals(12, homeEnvironment1.getCeillingLightColor());
      
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      int int0 = homeEnvironment2.getVideoQuality();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoQuality(5);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, temporaryURLContent0, 0, (-1.0F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setWallsAlpha((-1064.79F));
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setSubpartSizeUnderLight((-2745.2F));
      homeEnvironment0.setSkyColor(8);
      assertEquals((-1064.79F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.setVideoWidth(11053224);
      homeEnvironment0.setSkyColor(11053224);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getPhotoQuality();
      List<Camera> list1 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list1);
      HomeEnvironment.Property.values();
      homeEnvironment0.setPhotoHeight(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoCameraPath(list1);
      homeEnvironment0.setWallsAlpha(0.0F);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray1 = HomeEnvironment.DrawingMode.values();
      assertNotSame(homeEnvironment_DrawingModeArray1, homeEnvironment_DrawingModeArray0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(1012);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera((-1855.3F), 0.0F, (-1855.3F), (-657.0F), 1012, 0.0F, 1012, camera_Lens0);
      linkedList0.offer(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getDrawingMode();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", temporaryURLContent0, 400.0F, (-657.0F), "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setGroundColor(5909);
      homeEnvironment0.setCeillingLightColor(5909);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setPhotoHeight(13427964);
      homeEnvironment0.setLightColor(1012);
      assertEquals(1012, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getSubpartSizeUnderLight();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor(0);
      homeEnvironment1.setSkyColor(618);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setVideoQuality(9);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundColor((-1071));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setLightColor((-1071));
      homeEnvironment0.getWallsAlpha();
      homeEnvironment1.getSkyTexture();
      homeEnvironment1.setLightColor((-646));
      homeEnvironment1.getGroundTexture();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setLightColor((-1071));
      homeEnvironment0.setWallsAlpha(0.0F);
      homeEnvironment0.setVideoQuality((-1071));
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setSubpartSizeUnderLight((-1071));
      homeEnvironment0.setSkyColor((-1071));
      assertEquals((-1071), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("eH]^40[h2", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, "eH]^40[h2", (Object) null, homeEnvironment0);
      propertyChangeEvent0.setPropagationId(propertyChangeListenerProxy0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(propertyChangeListenerProxy0, "{@sDvCJq(i", aspectRatio0, "eH]^40[h2");
      propertyChangeEvent1.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "eH]^40[h2", temporaryURLContent0, (-1942.4762F), 1805.02F, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setWallsAlpha((-1942.4762F));
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getGroundColor();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.WALLS_ALPHA;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setGroundColor(0);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setPhotoQuality(1575);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setSubpartSizeUnderLight(1988.6958F);
      homeEnvironment1.setGroundColor((-3580));
      homeEnvironment1.setGroundColor(1575);
      homeEnvironment1.setVideoWidth(1575);
      homeEnvironment1.getVideoCameraPath();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setVideoWidth(1575);
      assertEquals(1575, homeEnvironment1.getGroundColor());
      assertEquals(1988.6958F, homeEnvironment1.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-733));
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setVideoFrameRate(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Content isn't a JAR entry", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Content isn't a JAR entry", propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoHeight(0);
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.20478541691352
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getSubpartSizeUnderLight();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setAllLevelsVisible(true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setSkyColor(13427964);
      HomeEnvironment.Property.values();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(true);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.DrawingMode.values();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("hkT");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.hkT
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 1.0F, 2120);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2120, homeTexture0, 11053224, homeTexture0, 2120, 896.0079F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(2120, homeTexture0, 2120, 11053224, (-2542.22F));
      homeEnvironment2.setAllLevelsVisible(true);
      homeEnvironment2.setAllLevelsVisible(false);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }
}
