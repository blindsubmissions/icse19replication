/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:12:35 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(":=pG%=$4I", true);
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = ":=pG%=$4I";
      stringArray0[1] = ":=pG%=$4I";
      stringArray0[2] = ":=pG%=$4I";
      stringArray0[3] = ":=pG%=$4I";
      stringArray0[4] = ":=pG%=$4I";
      stringArray0[5] = ":=pG%=$4I";
      stringArray0[6] = "nzMs_KT";
      stringArray0[7] = ":=pG%=$4I";
      stringArray0[8] = ":=pG%=$4I";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2270));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2270
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setLineSeparator("");
      outputFormat0.isExpandEmptyElements();
      outputFormat1.getNewLineAfterNTags();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setOmitEncoding(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewlines(true);
      outputFormat0.getLineSeparator();
      outputFormat0.setEncoding(";{O}C&a?ll5`/NB");
      outputFormat1.setXHTML(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setExpandEmptyElements(true);
      boolean boolean0 = outputFormat0.isTrimText();
      assertEquals(";{O}C&a?ll5`/NB", outputFormat0.getEncoding());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isNewlines());
      
      outputFormat1.setNewlines(false);
      outputFormat0.isPadText();
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat1.getLineSeparator();
      boolean boolean0 = outputFormat0.isNewlines();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, (String) null);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setPadText(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setPadText(true);
      outputFormat0.setNewLineAfterNTags((-1028));
      assertEquals((-1028), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      outputFormat0.setIndent("");
      outputFormat0.setLineSeparator("-8j4%");
      outputFormat0.setXHTML(false);
      outputFormat0.setIndent((String) null);
      outputFormat0.isTrimText();
      outputFormat0.setNewlines(false);
      outputFormat0.getLineSeparator();
      outputFormat0.getIndent();
      outputFormat0.isNewlines();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent(false);
      outputFormat1.setEncoding("O|/__Y0efT");
      outputFormat0.getIndent();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setLineSeparator("");
      outputFormat0.getIndent();
      assertEquals("", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      boolean boolean0 = true;
      outputFormat0.setSuppressDeclaration(true);
      boolean boolean1 = false;
      outputFormat0.setNewlines(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      outputFormat0.setIndent("");
      stringArray0[1] = "";
      outputFormat0.setNewLineAfterDeclaration(true);
      stringArray0[2] = "UGS";
      String string0 = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      outputFormat0.parseOptions(stringArray0, 4407);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('4');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (4)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.8133554045006157
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Y?");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isTrimText();
      outputFormat0.setLineSeparator("Y?");
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setNewlines(true);
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("Y?");
      outputFormat1.setTrimText(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setPadText(false);
      outputFormat1.setLineSeparator("@V7'ty~3%Bl[,}a");
      outputFormat1.setSuppressDeclaration(false);
      outputFormat1.isNewlines();
      outputFormat1.setNewlines(false);
      assertEquals("@V7'ty~3%Bl[,}a", outputFormat1.getLineSeparator());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("..I: PNcu^A ^", false);
      outputFormat0.getEncoding();
      outputFormat0.setNewLineAfterNTags((-2346));
      assertEquals((-2346), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("S}O0W)({", false);
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndent("S}O0W)({");
      outputFormat0.setNewLineAfterNTags((-993));
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setIndent(false);
      boolean boolean0 = outputFormat0.isTrimText();
      assertEquals((-993), outputFormat0.getNewLineAfterNTags());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2102535776209735
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, "T");
      outputFormat0.setIndent("");
      outputFormat0.setEncoding((String) null);
      outputFormat0.isNewlines();
      outputFormat0.setIndentSize((-1079));
      outputFormat0.setNewlines(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewlines(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.getEncoding();
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent("wr[[o");
      assertEquals("wr[[o", outputFormat0.getIndent());
      assertTrue(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize(0);
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setNewLineAfterNTags((-2864));
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndentSize(0);
      outputFormat1.setExpandEmptyElements(true);
      outputFormat1.isPadText();
      outputFormat1.setIndentSize(0);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setSuppressDeclaration(false);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat3.setTrimText(true);
      outputFormat2.setTrimText(true);
      outputFormat2.setIndentSize(889);
      outputFormat0.setLineSeparator("");
      assertEquals((-2864), outputFormat0.getNewLineAfterNTags());
      
      outputFormat2.getIndent();
      OutputFormat outputFormat4 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat4.isTrimText());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.659322697709517
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("12HO2{@sDvCJq");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndentSize(0);
      String[] stringArray0 = new String[2];
      outputFormat1.setLineSeparator((String) null);
      stringArray0[0] = "12HO2{@sDvCJq";
      stringArray0[1] = "12HO2{@sDvCJq";
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator("12HO2{@sDvCJq");
      outputFormat0.setIndent("08Z");
      outputFormat0.getEncoding();
      assertEquals("12HO2{@sDvCJq", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "VE6l";
      OutputFormat outputFormat0 = new OutputFormat("VE6l", true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isXHTML();
      outputFormat0.setIndent(true);
      boolean boolean0 = true;
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getIndent();
      outputFormat0.setOmitEncoding(false);
      char char0 = '9';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('9');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (9)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.599301927099795
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setXHTML(false);
      outputFormat0.setEncoding("");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.getAttributeQuoteCharacter();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterDeclaration(false);
      assertEquals("UTF-8", outputFormat1.getEncoding());
      
      outputFormat0.setIndent(true);
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertEquals("", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "qrdY0~OFIe-";
      OutputFormat outputFormat0 = new OutputFormat("qrdY0~OFIe-");
      outputFormat0.setLineSeparator("-newlines");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.670119889806817
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setEncoding("=SolfvB4#,/zLCf#Q");
      outputFormat0.getEncoding();
      outputFormat1.setNewlines(true);
      outputFormat0.setTrimText(true);
      outputFormat1.setIndent(true);
      outputFormat0.setIndent("=SolfvB4#,/zLCf#Q");
      outputFormat1.setNewlines(true);
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat1.setExpandEmptyElements(true);
      outputFormat0.setIndent(false);
      outputFormat0.setEncoding(".An.P/v/[y>.m&P8.!}");
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterNTags(370);
      outputFormat1.setIndent(true);
      outputFormat1.setNewlines(false);
      outputFormat0.isNewlines();
      outputFormat0.setSuppressDeclaration(true);
      assertEquals(370, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.727229735164184
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("qrdY0~OFIe-");
      outputFormat0.setLineSeparator("-newlines");
      outputFormat0.setExpandEmptyElements(true);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setIndent("-indent");
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setEncoding("qrdY0~OFIe-");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "?SsvyI:Z[S=cK(";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "-xhtml12XO2{@$sDvvJq";
      stringArray0[3] = "-indent";
      stringArray0[4] = "qrdY0~OFIe-";
      stringArray0[5] = "qrdY0~OFIe-";
      stringArray0[6] = "?SsvyI:Z[S=cK(";
      stringArray0[7] = "";
      outputFormat0.parseOptions(stringArray0, 2);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat3.getAttributeQuoteCharacter();
      OutputFormat outputFormat4 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat5 = OutputFormat.createCompactFormat();
      outputFormat5.setNewLineAfterDeclaration(false);
      outputFormat4.setIndent(false);
      // Undeclared exception!
      try { 
        outputFormat2.setAttributeQuoteCharacter('C');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (C)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.494972173446822
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent("12HO2{@sDvCJq");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setEncoding("-expandEmptyY?");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmptyY?";
      stringArray0[1] = "12HO2{@sDvCJq";
      stringArray0[2] = "-expandEmptyY?";
      stringArray0[3] = "12HO2{@sDvCJq";
      stringArray0[4] = "12HO2{@sDvCJq";
      stringArray0[5] = "?SsvyI:Z[S=cK(";
      stringArray0[6] = "-expandEmptyY?";
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat1.getAttributeQuoteCharacter();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat1.setIndent(false);
      // Undeclared exception!
      try { 
        outputFormat2.setAttributeQuoteCharacter('/');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (/)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.829081436908226
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat((String) null);
      outputFormat1.setIndentSize(0);
      outputFormat1.setLineSeparator("-trimText");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-trimText";
      stringArray0[1] = null;
      stringArray0[2] = null;
      outputFormat1.parseOptions(stringArray0, 1984);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.parseOptions(stringArray0, 1984);
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6726254461503203
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setExpandEmptyElements(true);
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-padText";
      stringArray0[1] = "<Bb)~Y";
      stringArray0[2] = ")(0X)9IXn";
      stringArray0[3] = "-trimText";
      outputFormat1.parseOptions(stringArray0, 0);
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isPadText());
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.893788232391138
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = new OutputFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-suppressDeclaration";
      stringArray0[1] = "*Ipq:`sA^9U}6dntL]";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "-lineSeparator";
      stringArray0[5] = ")";
      stringArray0[6] = "-trimText";
      outputFormat1.parseOptions(stringArray0, 367);
      assertFalse(outputFormat1.isSuppressDeclaration());
      
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat2 = new OutputFormat("k#3", false);
      outputFormat0.parseOptions(stringArray0, 1984);
      assertTrue(outputFormat0.isSuppressDeclaration());
      
      OutputFormat outputFormat3 = new OutputFormat((String) null, false);
      int int0 = outputFormat3.parseOptions(stringArray0, 39);
      assertEquals(39, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0140355237092673
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = new OutputFormat();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = new OutputFormat("-indent", true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "?SsvI:Z[S=cK(";
      stringArray0[1] = "-expandEmpty-nelines";
      stringArray0[2] = "-indent";
      OutputFormat.createPrettyPrint();
      outputFormat1.parseOptions(stringArray0, 0);
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      String[] stringArray1 = new String[3];
      stringArray1[0] = "-indentSize";
      outputFormat4.setIndentSize(0);
      // Undeclared exception!
      try { 
        outputFormat3.parseOptions(stringArray1, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }
}
