/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:18:31 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.Label;
import wheel.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = "";
      classWriter0.thisName = "";
      classWriter0.newClass("nQ/vWITW{6");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", "", "nQ/vWITW{6");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      Attribute attribute0 = null;
      classWriter0.newUTF8("");
      classWriter0.newLong(24);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(697);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 718, "W%Zdc,OCb3/t4", "PZdRlct", "W%Zdc,OCb3/t4", "W%Zdc,OCb3/t4");
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", true);
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.AndFileFilter");
      Attribute attribute1 = attribute0.next;
      byte[] byteArray0 = new byte[0];
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "@)w A+jEX)>=", "@)w A+jEX)>=", "@)w A+jEX)>=", "@)w A+jEX)>=");
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter0.next = fieldWriter1;
      ByteVector byteVector0 = new ByteVector(2);
      ByteVector byteVector1 = byteVector0.put12(0, 0);
      ByteVector byteVector2 = byteVector1.putByte(392);
      ByteVector byteVector3 = byteVector2.putLong(0);
      fieldWriter0.next.put(byteVector3);
      fieldWriter1.visitAnnotation("", false);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("", "Deprecated");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(697);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 718, "W%Zdc,OCb3/t4", "PZdRlct", "W%Zdc,OCb3/t4", "W%Zdc,OCb3/t4");
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      classWriter0.newMethodItem("PZdRlct", "", "7z-K](gC7GH:#y", false);
      classWriter0.newLong(718);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Object object0 = new Object();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 2, "sv$kYe/-/;Y.?Y", "LocalVariableTypeTable", "", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@68f48d7e
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6829081047004717
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "@)w A+jEX)>=", "@)w A+jEX)>=", "@)w A+jEX)>=", "@)w A+jEX)>=");
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter0.next = fieldWriter1;
      ByteVector byteVector0 = new ByteVector(2);
      classWriter0.newMethodItem("Deprecated", "Deprecated", "bx8D|6@", false);
      classWriter0.newLong(0);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Object object0 = new Object();
      FieldWriter fieldWriter2 = new FieldWriter(classWriter0, (-17), "'\":kQd!den+", "'\":kQd!den+", "@)w A+jEX)>=", "@)w A+jEX)>=");
      int int0 = fieldWriter2.getSize();
      assertEquals(36, int0);
      
      int int1 = fieldWriter1.getSize();
      assertEquals(24, int1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "@)w A+jEX)=", "@)w A+jEX)=", "@)w A+jEX)=", "@)w A+jEX)=");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 462, "", "PZdRlct", (String) null, (Object) null);
      FieldWriter fieldWriter2 = classWriter0.lastField;
      fieldWriter2.getSize();
      fieldWriter0.visitEnd();
      classWriter0.newInteger(61);
      classWriter0.newLong(8);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      String string0 = "sv$kYe/-/;Y.?Y";
      Object object0 = new Object();
      ClassWriter classWriter1 = null;
      try {
        classWriter1 = new ClassWriter((ClassReader) null, 462);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0891743498897402
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 718, "W%Zdc,OCb3/t4", "PZdRlct", "W%Zdc,OCb3/t4", "W%Zdc,OCb3/t4");
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.putInt(671);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.getSize();
      classWriter0.newMethodItem("PZdRlct", "", "7z-K](gC7GH:#y", false);
      classWriter0.newLong(718);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Object object0 = new Object();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 2, "W%Zdc,OCb3/t4", "LocalVariableTypeTable", "W%Zdc,OCb3/t4", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@4422bb7c
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9556998911125343
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newMethodItem("HOk", "VMSX:&ej=", "VMSX:&ej=", false);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "@)w A+jEX)>=", "@)w A+jEX)>=", "@)w A+jEX)>=", "@)w A+jEX)>=");
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter0.next = fieldWriter1;
      ByteVector byteVector0 = new ByteVector(2);
      classWriter0.newMethodItem("Deprecated", "Deprecated", "bx8D|6@", false);
      classWriter0.newLong(0);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Object object0 = new Object();
      FieldWriter fieldWriter2 = new FieldWriter(classWriter0, (-17), "'\":kQd!den+", "'\":kQd!den+", "@)w A+jEX)>=", "@)w A+jEX)>=");
      fieldWriter2.getSize();
      fieldWriter1.getSize();
      ByteVector byteVector1 = byteVector0.put11((-1650), 1);
      fieldWriter2.put(byteVector1);
      assertFalse(fieldWriter2.equals((Object)fieldWriter1));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9164648855394713
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", "", "nQ/vWITW{6");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      classWriter0.newUTF8("");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("nQ/vWITW{6", true);
      fieldWriter0.getSize();
      classWriter0.newMethodItem("nQ/vWITW{6", "nQ/vWITW{6", "nQ/vWITW{6", true);
      classWriter0.newLong(0L);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Object object0 = new Object();
      Object object1 = new Object();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 24, "7z-K](gC7GH:#y", "7z-K](gC7GH:#y", "", object1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@486bc0a1
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9164648855394713
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "@)w A+jEX)>=", "@)w A+jEX)>=", "@)w A+jEX)>=", "@)w A+jEX)>=");
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter0.next = fieldWriter1;
      ByteVector byteVector0 = new ByteVector(2);
      classWriter0.newMethodItem("Deprecated", "Deprecated", "bx8D|6@", false);
      classWriter0.newLong(0);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Object object0 = new Object();
      FieldWriter fieldWriter2 = new FieldWriter(classWriter0, 4, "", "Deprecated", "", "Deprecated");
      fieldWriter2.visitAnnotation("", false);
      fieldWriter2.put(byteVector0);
      assertFalse(fieldWriter2.equals((Object)fieldWriter1));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9743147528693494
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "@)w A+jEX)>=", "@)w A+jEX)>=", "@)w A+jEX)>=", "@)w A+jEX)>=");
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter0.next = fieldWriter1;
      classWriter0.version = (-2350);
      ByteVector byteVector0 = new ByteVector(2);
      classWriter0.newMethodItem("Deprecated", "Deprecated", "bx8D|6@", false);
      classWriter0.newLong(0);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Object object0 = new Object();
      FieldWriter fieldWriter2 = new FieldWriter(classWriter0, (-17), "'\":kQd!den+", "'\":kQd!den+", "@)w A+jEX)>=", "@)w A+jEX)>=");
      fieldWriter2.getSize();
      fieldWriter1.getSize();
      fieldWriter0.next.put(byteVector0);
      assertFalse(fieldWriter0.equals((Object)fieldWriter2));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6874357505033554
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "@)w A+jEX)>=", "@)w A+jEX)>=", "@)w A+jEX)>=", "@)w A+jEX)>=");
      fieldWriter0.visitAnnotation("@)w A+jEX)>=", true);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte) (-116);
      byteArray0[4] = (byte) (-3);
      byteArray0[5] = (byte)54;
      byteArray0[6] = (byte) (-82);
      byteArray0[7] = (byte)127;
      byteArray0[8] = (byte) (-51);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter0.next = fieldWriter1;
      ByteVector byteVector0 = new ByteVector(2);
      ByteVector byteVector1 = byteVector0.put12(0, 0);
      ByteVector byteVector2 = byteVector1.putByte((byte)14);
      ByteVector byteVector3 = byteVector2.putLong(0);
      fieldWriter0.next.put(byteVector3);
      Object object0 = new Object();
      FieldWriter fieldWriter2 = null;
      try {
        fieldWriter2 = new FieldWriter(classWriter0, (byte) (-82), "@)w A+jEX)>=", (String) null, (String) null, object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "@)w A+jEX)>=", "@)w A+jEX)>=", "@)w A+jEX)>=", "@)w A+jEX)>=");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte) (-116);
      byteArray0[4] = (byte) (-3);
      byteArray0[5] = (byte)54;
      byteArray0[6] = (byte)14;
      byteArray0[7] = (byte)127;
      Object object0 = new Object();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (byte)54, "", "", "@)w A+jEX)>=", (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(789);
      ByteVector byteVector1 = byteVector0.put11(8, (byte)127);
      ByteVector byteVector2 = byteVector1.putShort(24);
      fieldWriter0.put(byteVector2);
      fieldWriter1.put(byteVector0);
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8982053397041498
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "@)w A+jEX)=", "@)w A+jEX)=", "@)w A+jEX)=", "@)w A+jEX)=");
      int int0 = 462;
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 462, "", "PZdRlct", (String) null, (Object) null);
      Attribute attribute0 = new Attribute("PZdRlct");
      fieldWriter1.visitAttribute(attribute0);
      FieldWriter fieldWriter2 = classWriter0.lastField;
      // Undeclared exception!
      try { 
        fieldWriter2.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
