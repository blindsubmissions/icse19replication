/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:12:28 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.Label;
import wheel.components.StandaloneComponent;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("");
      ErrorPage errorPage0 = new ErrorPage();
      dynamicSelectModel2.setTopLevelComponent(errorPage0);
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.translator("");
      dynamicSelectModel3.label("1t1H}Pu ;?OnzMs_K");
      dynamicSelectModel3.setTopLevelComponent(errorPage0);
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getLabel(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression .values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "qirYO]%";
      ElExpression elExpression0 = new ElExpression("qirYO]%");
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression0, elExpression0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label(")wK3fN_~-");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.collection("tandalone");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.value("");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.enumeration(")wK3fN_~-");
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel4.empty(dynamicSelectModel2);
      assertSame(dynamicSelectModel3, dynamicSelectModel5);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getTopLevelComponent();
      dynamicSelectModel0.setTopLevelComponent((StandaloneComponent) null);
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.empty((Object) null);
      String string0 = "";
      dynamicSelectModel1.translator("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.empty((Object) null);
      dynamicSelectModel2.empty(dynamicSelectModel0);
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getObjects();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Object object0 = new Object();
      Label label0 = new Label(errorPage0, object0);
      label0.s();
      ActionExpression actionExpression0 = new ActionExpression(" evaluated to null. Can't build a dynamic ISelectModel");
      Any any0 = new Any(label0, actionExpression0);
      DynamicSelectModel dynamicSelectModel0 = any0.selectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label(" evaluated to null. Can't build a dynamic ISelectModel");
      errorPage0._generateComponentId(any0);
      String string0 = "xPHTul|-ESD";
      dynamicSelectModel0.translator((String) null);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.enumeration("xPHTul|-ESD");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.empty(dynamicSelectModel0);
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.translator(" evaluated to null. Can't build a dynamic ISelectModel");
      dynamicSelectModel4.validate();
      dynamicSelectModel1.reset();
      label0.li();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression xPHTul|-ESD.values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("");
      Object object0 = new Object();
      dynamicSelectModel2.translator("(liHhdEpM3H?");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.empty(object0);
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.collection("");
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel4.label("");
      // Undeclared exception!
      try { 
        dynamicSelectModel5.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression  evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("");
      Object object0 = new Object();
      dynamicSelectModel2.translator("");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.empty(object0);
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.collection("");
      dynamicSelectModel4.label("");
      ErrorPage errorPage0 = new ErrorPage();
      dynamicSelectModel4.setTopLevelComponent(errorPage0);
      dynamicSelectModel0.setComponent(errorPage0);
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getValue(3145);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression  evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "|`O";
      Object object0 = new Object();
      dynamicSelectModel0.getComponent();
      String string1 = "";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.collection("$VALUES");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.collection("$VALUES");
      dynamicSelectModel3.translator("");
      dynamicSelectModel3.label("|`O");
      String string2 = "";
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression $VALUES to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.translator("");
      Object object1 = new Object();
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.empty((Object) null);
      dynamicSelectModel1.collection("org.mvel.util.StackElement");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.label("(liHhdEpM3H?");
      // Undeclared exception!
      try { 
        dynamicSelectModel3.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression org.mvel.util.StackElement evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.empty(object0);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.label("INVOKESPECIAL org/mvel/util/FastList.<init>");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.collection("Could not create DynamicSelection model. Label attribute was null or not an el-expression.");
      dynamicSelectModel3.collection("5:YI");
      // Undeclared exception!
      try { 
        dynamicSelectModel3.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Value attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      long long0 = 2001L;
      System.setCurrentTimeMillis(2001L);
      System.setCurrentTimeMillis(2001L);
      System.setCurrentTimeMillis(2001L);
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = " evaluated to null. Can't build a dynamic ISelectModel";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.translator(" evaluated to null. Can't build a dynamic ISelectModel");
      dynamicSelectModel1.collection(" evaluated to null. Can't build a dynamic ISelectModel");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Label attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }
}
