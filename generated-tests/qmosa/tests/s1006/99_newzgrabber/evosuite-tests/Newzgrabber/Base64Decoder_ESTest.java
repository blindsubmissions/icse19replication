/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:23:00 GMT 2018
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.30463609734923813
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)10;
      byteArray0[0] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.write(byteArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      bufferedCustomInputStream0.available();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      bufferedCustomInputStream0.available();
      base64Decoder0.setTotalLines(1L);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\u0001\u00D8");
      base64Decoder1.decodeStream();
      base64Decoder1.decodeStream();
      base64Decoder1.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder1.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder1.setReader(bufferedCustomInputStream0);
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder2.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder2.decodeStream();
      Base64Decoder base64Decoder3 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder3.decodeStream();
      base64Decoder3.decodeStream();
      base64Decoder3.decodeStream();
      assertFalse(base64Decoder3.ProgressSet);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)10;
      byteArray0[0] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.write(byteArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      int int0 = base64Decoder0.MARKLIMIT;
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder1.ABORT = true;
      byteArrayOutputStream0.write(byteArray0);
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      bufferedCustomInputStream0.available();
      base64Decoder0.setTotalLines((byte)10);
      base64Decoder1.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder1.setReader(bufferedCustomInputStream0);
      Base64Decoder base64Decoder3 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(byteArrayInputStream0, false);
      Base64Decoder base64Decoder4 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream0);
      base64Decoder3.decodeStream();
      base64Decoder3.decodeStream();
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder5 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream0);
      Base64Decoder base64Decoder6 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream0);
      base64Decoder6.decodeStream();
      base64Decoder5.decodeStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Base64Decoder base64Decoder7 = new Base64Decoder(bufferedCustomInputStream1, mockPrintStream0);
      base64Decoder5.decodeStream();
      Base64Decoder base64Decoder8 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream0);
      base64Decoder6.decodeStream();
      Base64Decoder base64Decoder9 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream0);
      base64Decoder9.decodeStream();
      assertFalse(base64Decoder9.ABORT);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)10;
      byteArray0[0] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.write(byteArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      bufferedCustomInputStream0.available();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      bufferedCustomInputStream0.available();
      base64Decoder1.setTotalLines((byte)10);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2e_@ b7");
      base64Decoder1.decodeStream();
      byteArrayInputStream0.markSupported();
      base64Decoder1.decodeStream();
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder1.decodeStream();
      base64Decoder2.decodeStream();
      base64Decoder2.decodeStream();
      base64Decoder1.setReader(bufferedCustomInputStream0);
      Base64Decoder base64Decoder3 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      Base64Decoder base64Decoder4 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder2.decodeStream();
      base64Decoder1.decodeStream();
      base64Decoder3.decodeStream();
      Base64Decoder base64Decoder5 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder3.decodeStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Base64Decoder base64Decoder6 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder7 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder6.decodeStream();
      assertFalse(base64Decoder6.ProgressSet);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.2711893730418441
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[5] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "UBo;'*[=B9;KlRjY{\"q");
      byte[] byteArray1 = new byte[1];
      byteArray0[8] = (byte)10;
      byteArrayOutputStream0.write(byteArray1);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream1, mockPrintStream0);
      int int0 = base64Decoder0.MARKLIMIT;
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      byteArrayOutputStream0.write(byteArray0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.read();
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream();
      byteArrayOutputStream1.write((int) (byte)10);
      base64Decoder0.decodeStream();
      byteArrayOutputStream1.reset();
      Base64Decoder base64Decoder3 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder3.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder2.decodeStream();
      BufferedCustomInputStream bufferedCustomInputStream2 = new BufferedCustomInputStream(bufferedCustomInputStream1, 2326, true);
      Base64Decoder base64Decoder4 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream1);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder4.decodeStream();
      assertNotSame(base64Decoder4, base64Decoder1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.19144408195771734
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)47;
      byteArray0[3] = (byte)47;
      byteArray0[4] = (byte)47;
      byteArray0[5] = (byte)47;
      byteArray0[6] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      byteArrayInputStream0.reset();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)10, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?kht}(eual]V");
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(2L, base64Decoder0.getLineCount());
  }
}
