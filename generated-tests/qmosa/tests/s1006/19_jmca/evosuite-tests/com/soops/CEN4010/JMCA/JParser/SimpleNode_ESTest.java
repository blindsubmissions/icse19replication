/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:28:27 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(6);
      simpleNode0.jjtClose();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      JavaParser javaParser0 = new JavaParser("_");
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtSetParent((Node) null);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      String string0 = "";
      StringWriter stringWriter0 = new StringWriter(6);
      String string1 = "[;&.[J +(v\\pfU9YpB";
      StringReader stringReader0 = new StringReader("[;&.[J +(vpfU9YpB");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 2059);
      simpleNode0.jjtAddChild(simpleNode1, 107);
      StringWriter stringWriter1 = stringWriter0.append('p');
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "");
      int int0 = 1617;
      stringWriter2.append((CharSequence) "");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      // Undeclared exception!
      try { 
        stringWriter2.append((CharSequence) "", 0, 1617);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier("EgxPQ9~N\"f.ZJ?");
      simpleNode0.toString();
      simpleNode0.setIdentifier("}");
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(2914);
      stringWriter0.flush();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "EgxPQ9~N\"f.ZJ?");
      StringWriter stringWriter2 = stringWriter1.append('\'');
      simpleNode0.dump("cHwgDVs", stringWriter2);
      assertEquals("EgxPQ9~N\"f.ZJ?'<CompilationUnit>\n  <identifier>EgxPQ9~N\"f.ZJ?</identifier>\n</CompilationUnit>\n", stringWriter2.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.073542846408523
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(38);
      Node[] nodeArray0 = new Node[4];
      String string0 = "7q~@Jev?Ssvy";
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer("7q~@Jev?Ssvy");
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer0);
      CharBuffer charBuffer0 = CharBuffer.allocate(8);
      stringWriter1.append((CharSequence) charBuffer0);
      simpleNode0.dump("7q~@Jev?Ssvy", stringWriter1);
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.setIdentifier("hQ&>!%O4~/P4#eqv");
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(nodeArray0[3], (-950));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -950
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6248603116943127
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(38);
      Node[] nodeArray0 = new Node[4];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer("7q~@Jev?Ssvy");
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer0);
      CharBuffer charBuffer0 = CharBuffer.allocate(8);
      stringWriter1.append((CharSequence) charBuffer0);
      simpleNode0.dump("7q~@Jev?Ssvy", stringWriter1);
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.setIdentifier("hQ&>!%O4~/P4#eqv");
      simpleNode0.jjtSetParent(nodeArray0[1]);
      simpleNode0.jjtAddChild(nodeArray0[0], 38);
      String string0 = ">=";
      // Undeclared exception!
      simpleNode0.dump(">=", stringWriter1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9404479886553264
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "hQ&>!%O4~/P4#eqv", 9, 9);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "hQ&>!%O4~/P4#eqv");
      stringWriter2.write("9@5WGn}%i<");
      simpleNode0.dump("hQ&>!%O4~/P4#eqv", stringWriter2);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 9);
      simpleNode0.jjtAddChild((Node) null, 9);
      simpleNode0.jjtAddChild((Node) null, 9);
      simpleNode0.dump("hQ&>!%O4~/P4#eqv", stringWriter2);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-2021906051));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2021906051
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2014240901464586
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier("EgxPQ9~N\"f.ZJ?");
      simpleNode0.toString();
      simpleNode0.setIdentifier("}");
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(2914);
      stringWriter0.flush();
      simpleNode0.jjtAddChild((Node) null, 6);
      simpleNode0.jjtAddChild((Node) null, 2914);
      simpleNode0.dump("EgxPQ9~N\"f.ZJ?", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 36);
      assertEquals(2915, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.328515191203992
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer("synchronized");
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "synchronized");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-57);
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte) (-74);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-48);
      byteArray0[6] = (byte)94;
      byteArray0[7] = (byte) (-3);
      byteArray0[8] = (byte)15;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CharBuffer.allocate(0);
      stringWriter0.append((CharSequence) "7q~@Jev?Ssvy");
      simpleNode0.dump(">>", stringWriter1);
      simpleNode0.setIdentifier(">>");
      StringReader stringReader0 = new StringReader("<<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 8);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtSetParent((Node) null);
      SimpleNode simpleNode1 = new SimpleNode(106);
      simpleNode1.jjtAddChild(simpleNode0, 8);
      simpleNode1.dump("M6C5L2k=)tdsdr3W\",", stringWriter1);
      simpleNode0.toString();
      simpleNode0.toString("hQ&>!%O4~/P4#eqv");
      simpleNode1.jjtGetParent();
      assertEquals(9, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9459347757561138
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4);
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier("EgxPQ9~N\"f.ZJ?");
      simpleNode0.toString();
      simpleNode0.setIdentifier("}");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter(2914);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "EgxPQ9~N\"f.ZJ?");
      StringReader stringReader0 = new StringReader("}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2021614903), 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtSetParent((Node) null);
      SimpleNode simpleNode1 = new SimpleNode(924);
      simpleNode0.jjtAddChild((Node) null, 924);
      simpleNode1.dump("5!|~ggq=J+", stringWriter1);
      simpleNode0.toString();
      simpleNode0.toString("TypeDeclaration : EgxPQ9~N\"f.ZJ?");
      simpleNode1.jjtGetParent();
      simpleNode0.jjtGetNumChildren();
      assertEquals(925, simpleNode0.jjtGetNumChildren());
      
      int int0 = simpleNode1.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.450805020083924
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4);
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier("EgxPQ9~N\"f.ZJ?");
      simpleNode0.toString();
      simpleNode0.setIdentifier("");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter(2886);
      stringWriter0.append((CharSequence) "EgxPQ9~N\"f.ZJ?");
      StringWriter stringWriter1 = new StringWriter(4);
      simpleNode0.dump("cHwgDVs", stringWriter1);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 2);
      assertEquals(3, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1595888143086257
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4);
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier("EgxPQ9~N\"f.ZJ?");
      simpleNode0.toString();
      simpleNode0.setIdentifier("{");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringWriter stringWriter0 = new StringWriter(4);
      char[] charArray0 = new char[3];
      charArray0[0] = '9';
      charArray0[1] = '9';
      charArray0[2] = '9';
      stringWriter0.write(charArray0);
      simpleNode0.dump("EgxPQ9~N\"f.ZJ?", stringWriter0);
      simpleNode0.dump("EgxPQ9~N\"f.ZJ?", stringWriter0);
      simpleNode0.dump("{", stringWriter0);
      StringWriter stringWriter1 = stringWriter0.append('9');
      simpleNode0.dump(">", stringWriter1);
      assertEquals("999<TypeDeclaration>\n  <identifier>EgxPQ9~N\"f.ZJ?</identifier>\n</TypeDeclaration>\n<TypeDeclaration>\n  <identifier>EgxPQ9~N\"f.ZJ?</identifier>\n</TypeDeclaration>\n<TypeDeclaration>\n  <identifier>EgxPQ9~N\"f.ZJ?</identifier>\n</TypeDeclaration>\n9<TypeDeclaration>\n  <identifier>EgxPQ9~N\"f.ZJ?</identifier>\n</TypeDeclaration>\n", stringWriter1.toString());
      assertEquals("999<TypeDeclaration>\n  <identifier>EgxPQ9~N\"f.ZJ?</identifier>\n</TypeDeclaration>\n<TypeDeclaration>\n  <identifier>EgxPQ9~N\"f.ZJ?</identifier>\n</TypeDeclaration>\n<TypeDeclaration>\n  <identifier>EgxPQ9~N\"f.ZJ?</identifier>\n</TypeDeclaration>\n9<TypeDeclaration>\n  <identifier>EgxPQ9~N\"f.ZJ?</identifier>\n</TypeDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.7031315809655685
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4);
      simpleNode0.setIdentifier("%}");
      simpleNode0.toString();
      simpleNode0.setIdentifier("&&");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter(102);
      StringWriter stringWriter1 = new StringWriter(10);
      simpleNode0.dump("EgxPQ9~N\"f.ZJ?", stringWriter0);
      assertEquals("<TypeDeclaration>\n  <identifier>%}</identifier>\n  <identifier>*amp</identifier>\n</TypeDeclaration>\n", stringWriter0.toString());
      
      SimpleNode simpleNode1 = new SimpleNode((-117));
      simpleNode1.dump("Literal", stringWriter1);
      simpleNode1.dump("Literal", stringWriter1);
      assertEquals(0, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9320738874454946
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(38);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("&");
      simpleNode0.setIdentifier("&");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter1 = new StringWriter(38);
      StringWriter stringWriter2 = new StringWriter();
      JavaParser javaParser0 = new JavaParser("1RoL");
      simpleNode0.dump("\u0002", stringWriter1);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      int int0 = 0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-2233));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0379083330628327
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(38);
      StringWriter stringWriter0 = new StringWriter(38);
      simpleNode0.setIdentifier("\u0002");
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier("<");
      simpleNode0.setIdentifier("");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.toString();
      simpleNode0.setIdentifier("ct-!<+:8");
      simpleNode0.dump("vhbA-/{", stringWriter0);
      simpleNode0.dump("`gI,_d,hY", stringWriter0);
      simpleNode0.dump("i0XR HqI7_[/qzGD\")o", stringWriter0);
      StringReader stringReader0 = new StringReader("@8>^5j*B;d1i0V6V{q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-1));
      simpleNode1.dump("UMul\ry", stringWriter1);
      assertEquals("", stringWriter1.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6336632569776562
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(38);
      StringWriter stringWriter0 = new StringWriter(38);
      simpleNode0.setIdentifier("\u0002");
      simpleNode0.toString();
      simpleNode0.setIdentifier("Expression : \u0002");
      simpleNode0.dump("Expression : \u0002", stringWriter0);
      StringReader stringReader0 = new StringReader("\u0002");
      simpleNode0.dump("Expression : \u0002", stringWriter0);
      simpleNode0.dump("||", stringWriter0);
      simpleNode0.dump("<OCTAL_LITERAL>", stringWriter0);
      simpleNode0.setIdentifier("<=");
      simpleNode0.dump(":", stringWriter0);
      simpleNode0.dump("  <identifier>", stringWriter0);
      simpleNode0.dump("\u0002", stringWriter0);
      simpleNode0.dump("boolean", stringWriter0);
      simpleNode0.dump("boolean", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.close();
      simpleNode0.dump("  <identifier>", stringWriter1);
      assertEquals("<Expression>\n  <identifier>\u0002</identifier>\n  <identifier>Expression : \u0002</identifier>\n  <identifier>*le</identifier>\n</Expression>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9943536917623688
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.jjtGetParent();
      String string0 = "</";
      simpleNode0.setIdentifier("</");
      simpleNode0.setIdentifier("</");
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("Expression");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 6);
      simpleNode1.setIdentifier((String) null);
      simpleNode0.dump("Expression : >\u0002", stringWriter0);
      simpleNode0.dump("!=", stringWriter0);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 516);
      simpleNode2.parser = javaParser0;
      simpleNode2.dump("</", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode1.dump("<DECIMAL_LITERAL>", stringWriter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
