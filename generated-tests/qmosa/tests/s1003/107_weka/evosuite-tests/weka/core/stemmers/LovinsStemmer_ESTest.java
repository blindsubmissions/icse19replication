/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 08:59:21 GMT 2018
 */

package weka.core.stemmers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.core.stemmers.LovinsStemmer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LovinsStemmer_ESTest extends LovinsStemmer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.8143075196071252
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String string0 = lovinsStemmer0.getRevision();
      assertEquals("8034", string0);
      
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      String string2 = lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string2);
      
      lovinsStemmer0.getTechnicalInformation();
      String string3 = lovinsStemmer0.stem("lud");
      assertEquals("lus", string3);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3341923457408336
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LovinsStemmer.main((String[]) null);
      LovinsStemmer.main((String[]) null);
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      LovinsStemmer.main((String[]) null);
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.stemString("olv");
      assertEquals("olut", string0);
      
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("olut");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("qBekF+IIL&W");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[2] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      String string2 = lovinsStemmer0.stemString("8cJfMQ]:K}upMN");
      assertEquals("8cjfmq]:k}upmn", string2);
      
      String string3 = lovinsStemmer0.getRevision();
      assertEquals("8034", string3);
      
      String string4 = lovinsStemmer0.stemString("aically");
      assertEquals("aic", string4);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.527658530557932
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("The publisher's name.");
      lovinsStemmer0.getTechnicalInformation();
      String string0 = lovinsStemmer0.stemString("The publisher's name.");
      assertEquals("th publishes nam.", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.791759469228055
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.stemString("");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("S4V0!%TD");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("The edition of a book---for example, ``Second''. This should be an ordinal, and should have the first letter capitalized, as shown here; the standard styles convert to lower case when necessary.");
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("The edition of a book---for example, ``Second''. This should be an ordinal, and should have the first letter capitalized, as shown here; the standard styles convert to lower case when necessary.");
      lovinsStemmer0.stemString("");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.stem("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "ary";
      stringArray0[2] = "th edit of a book---for exampl, ``second''. th should be an ordin, and should hav th first letter capital, as shown hes; th standard styl convers to lower cas when neces.";
      LovinsStemmer.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.301273572363032
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[8];
      lovinsStemmer0.stem("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.getRevision();
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[2] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[3] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[4] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[5] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[6] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[7] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("iful");
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0223670722663725
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "1pQ}:]6)d:k\"@Z";
      stringArray0[1] = "";
      stringArray0[2] = "SIZE";
      stringArray0[3] = "-SZ)'M";
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stem("dex");
      lovinsStemmer0.getRevision();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.getRevision();
      lovinsStemmer1.stemString("ia");
      lovinsStemmer1.stem(" In: ");
      // Undeclared exception!
      try { 
        lovinsStemmer1.stemString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.stemmers.LovinsStemmer", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.518718467470038
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      String string0 = lovinsStemmer0.stemString("8'zm");
      assertEquals("8'zm", string0);
      
      lovinsStemmer0.stem("kh4fx3aub6lud");
      String string1 = lovinsStemmer0.stemString("mit");
      assertEquals("mis", string1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0086074596411065
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.stemString("");
      lovinsStemmer0.getRevision();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stem("annote");
      lovinsStemmer1.globalInfo();
      lovinsStemmer1.getTechnicalInformation();
      lovinsStemmer0.getRevision();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "pand";
      stringArray0[1] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer1.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer1.stem("8034");
      lovinsStemmer1.getRevision();
      lovinsStemmer1.getRevision();
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.stemString("8034");
      lovinsStemmer1.stemString("");
      lovinsStemmer0.stem("mitlid");
      lovinsStemmer2.stemString("~rK6N-s*ea+C%C");
      lovinsStemmer1.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer2.toString();
      LovinsStemmer.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9729150497179929
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.globalInfo();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stemString("");
      lovinsStemmer1.globalInfo();
      lovinsStemmer1.stem("S4V0!%TD");
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.getRevision();
      lovinsStemmer2.toString();
      String string0 = lovinsStemmer2.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string0);
      
      lovinsStemmer0.toString();
      String string1 = lovinsStemmer2.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      lovinsStemmer1.stem("The edition of a book---for example, ``Second''. This should be an ordinal, and should have the first letter capitalized, as shown here; the standard styles convert to lower case when necessary.");
      lovinsStemmer1.stemString("J");
      lovinsStemmer1.getRevision();
      lovinsStemmer2.toString();
      LovinsStemmer lovinsStemmer3 = new LovinsStemmer();
      lovinsStemmer0.stemString("");
      lovinsStemmer2.getRevision();
      lovinsStemmer3.stemString("miterid");
      lovinsStemmer1.stem("8034");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "J";
      stringArray0[1] = "8034";
      stringArray0[2] = "";
      stringArray0[3] = "8034";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer3.stemString("8034");
      String string2 = lovinsStemmer0.stemString("8034");
      assertEquals("8034", string2);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.882996812641714
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("yS2Qm@i?\";\rbG|>");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("0y_fUTCsi[p\"X");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("8034");
      lovinsStemmer0.stem("GD=ezb");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "gd=ezb";
      stringArray0[1] = "izability";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stem("8034pand");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.stemString("izability");
      lovinsStemmer0.stem("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.stemString("CHkH!q8Uc?");
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.135047776102027
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("annote");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("8034");
      lovinsStemmer0.stem("\r");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.toString();
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.getRevision();
      lovinsStemmer0.getRevision();
      lovinsStemmer2.stem("linguex");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray0[1] = "8034";
      stringArray0[2] = "8034";
      stringArray0[3] = "linguex";
      stringArray0[4] = "\r";
      stringArray0[5] = "";
      stringArray0[6] = "";
      LovinsStemmer.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.253568686130876
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "missing_id";
      stringArray0[1] = "missing_id";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("MvtW4*w&)93rbgf");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stem("/^pux4{A##'C");
      String string1 = lovinsStemmer0.getRevision();
      assertEquals("8034", string1);
      
      String string2 = lovinsStemmer0.stemString("/^pux4{A##'C");
      assertEquals("/^pux4{a##'c", string2);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0621675653729399
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String string0 = lovinsStemmer0.stemString("");
      lovinsStemmer0.stemString("");
      lovinsStemmer0.globalInfo();
      String string1 = lovinsStemmer0.stem("S4V0!%TD");
      assertEquals("s4v0!%td", string1);
      
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      String string2 = lovinsStemmer0.stemString("The edition of a book---for example, ``Second''. This should be an ordinal, and should have the first letter capitalized, as shown here; the standard styles convert to lower case when necessary.");
      assertEquals("th edit of a book---for exampl, ``second''. th should be an ordin, and should hav th first letter capital, as shown hes; th standard styl convers to lower cas when neces.", string2);
      
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("The edition of a book---for example, ``Second''. This should be an ordinal, and should have the first letter capitalized, as shown here; the standard styles convert to lower case when necessary.");
      lovinsStemmer0.stemString("");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray0[2] = "8034";
      stringArray0[3] = "s4v0!%td";
      stringArray0[4] = "";
      LovinsStemmer.main(stringArray0);
      String string3 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string3);
      
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stem("8034");
      lovinsStemmer1.stemString("th edit of a book---for exampl, ``second''. th should be an ordin, and should hav th first letter capital, as shown hes; th standard styl convers to lower cas when neces.");
      String string4 = lovinsStemmer1.getRevision();
      assertEquals("8034", string4);
      
      String string5 = lovinsStemmer1.stemString("N&,$m@1:[@,");
      assertFalse(string5.equals((Object)string0));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.008901177412223
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("yVC/M hhN23mMv?|v[");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("G5Y:8");
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("v+MLr'wfO");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.globalInfo();
      lovinsStemmer1.toString();
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.getRevision();
      lovinsStemmer2.getRevision();
      lovinsStemmer2.stemString("z8");
      lovinsStemmer2.getTechnicalInformation();
      lovinsStemmer2.stem(">");
      LovinsStemmer.main((String[]) null);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8945571734275531
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "ax";
      stringArray0[1] = "}XtL~i4/,3";
      stringArray0[2] = "log2(4.6): ";
      stringArray0[3] = "V";
      stringArray0[4] = "rud";
      stringArray0[5] = "yt";
      stringArray0[6] = "mhce}";
      stringArray0[7] = "fJ'@beYj";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.globalInfo();
      lovinsStemmer1.getRevision();
      String string0 = lovinsStemmer1.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      lovinsStemmer1.toString();
      lovinsStemmer2.toString();
      LovinsStemmer.main(stringArray0);
      String string1 = lovinsStemmer1.stemString("rud");
      assertEquals("rus", string1);
      
      String string2 = lovinsStemmer2.getRevision();
      assertEquals("8034", string2);
      
      LovinsStemmer lovinsStemmer3 = new LovinsStemmer();
      lovinsStemmer3.getTechnicalInformation();
      String string3 = lovinsStemmer1.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string3);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5911752986244392
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("Get position of flag -f: ");
      lovinsStemmer0.getTechnicalInformation();
      String string0 = lovinsStemmer0.stemString("Get position of flag -f: ");
      assertEquals("ges posit of flag -f: ", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9735584326028659
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("missing_id");
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "gmvikocotpex";
      stringArray0[1] = "mis_id";
      stringArray0[2] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[3] = "missing_id";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer0.getRevision();
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.getRevision();
      lovinsStemmer1.stemString("gmvikocotpex");
      lovinsStemmer1.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1851956848497927
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("yS2Qm@i?\";\rbG|>");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("0y_fUTCsi[p\"X");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("8034");
      lovinsStemmer0.stem("GD=ezb");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "gd=ezb";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stem("ys2qm@i?\";\rbg|>");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.globalInfo();
      lovinsStemmer1.stemString("GD=ezb");
      lovinsStemmer0.stem("siztex");
      lovinsStemmer1.stemString("TYPE");
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer1.toString();
      LovinsStemmer.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0472559679279883
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.stemString("");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("S4V0!%TD");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("The edition of a book---for example, ``Second''. This should be an ordinal, and should have the first letter capitalized, as shown here; the standard styles convert to lower case when necessary.");
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("The edition of a book---for example, ``Second''. This should be an ordinal, and should have the first letter capitalized, as shown here; the standard styles convert to lower case when necessary.");
      lovinsStemmer0.stemString("");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray0[2] = "8034";
      stringArray0[3] = "s4v0!%td";
      stringArray0[4] = "";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.toString();
      lovinsStemmer0.stem("uad");
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      assertEquals(5, stringArray0.length);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.2067368439362585
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String string0 = lovinsStemmer0.stemString("missing_id");
      assertEquals("mis_id", string0);
      
      String string1 = lovinsStemmer0.getRevision();
      assertEquals("8034", string1);
      
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("qPU`rPn40vajU96P<=");
      lovinsStemmer0.stem("Gr1O R@hU0S");
      String string2 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string2);
      
      String string3 = lovinsStemmer0.stem("rpt");
      assertEquals("rb", string3);
  }
}
