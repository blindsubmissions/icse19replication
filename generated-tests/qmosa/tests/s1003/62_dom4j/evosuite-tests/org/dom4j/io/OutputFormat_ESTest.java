/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 10:17:33 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(",u1+L25vG|O!&");
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.isXHTML();
      outputFormat0.setEncoding(",u1+L25vG|O!&");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = ",u1+L25vG|O!&";
      stringArray0[1] = "";
      stringArray0[2] = ",u1+L25vG|O!&";
      stringArray0[3] = ",u1+L25vG|O!&";
      stringArray0[4] = ",u1+L25vG|O!&";
      outputFormat1.parseOptions(stringArray0, 4458);
      outputFormat1.setPadText(true);
      boolean boolean0 = outputFormat0.isNewlines();
      assertEquals(",u1+L25vG|O!&", outputFormat0.getEncoding());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "3ye1lHP";
      outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("", outputFormat0.getIndent());
      
      outputFormat0.setIndent(true);
      assertEquals("  ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("iUgf_wMVr", true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterNTags(34);
      outputFormat1.setPadText(true);
      outputFormat0.isXHTML();
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat0.setIndentSize(1);
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat1.getIndent();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setPadText(true);
      outputFormat2.setAttributeQuoteCharacter('\"');
      outputFormat0.isOmitEncoding();
      outputFormat0.getEncoding();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat1.setEncoding("");
      outputFormat0.setIndent(true);
      OutputFormat.createCompactFormat();
      outputFormat0.setIndent(true);
      assertEquals(34, outputFormat0.getNewLineAfterNTags());
      
      outputFormat1.setPadText(true);
      assertEquals("  ", outputFormat1.getIndent());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      outputFormat0.setIndent(true);
      stringArray0[1] = "XO~AS`x\"ny<:8OJ|%";
      outputFormat0.parseOptions(stringArray0, 1);
      assertFalse(outputFormat0.isTrimText());
      
      outputFormat0.setTrimText(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setTrimText(true);
      assertTrue(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "{V7LYJ)fhC2~S5^:h";
      OutputFormat outputFormat0 = new OutputFormat("{V7LYJ)fhC2~S5^:h", false, "{V7LYJ)fhC2~S5^:h");
      boolean boolean0 = true;
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isPadText();
      outputFormat0.setEncoding("{V7LYJ)fhC2~S5^:h");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setPadText(true);
      outputFormat1.setNewLineAfterNTags(1960);
      outputFormat1.setExpandEmptyElements(false);
      outputFormat0.setIndent(false);
      boolean boolean1 = true;
      outputFormat1.setOmitEncoding(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "{V7LYJ)fhC2~S5^:h";
      outputFormat1.setLineSeparator("{V7LYJ)fhC2~S5^:h");
      stringArray0[1] = "{V7LYJ)fhC2~S5^:h";
      stringArray0[2] = "{V7LYJ)fhC2~S5^:h";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-2463));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2463
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5232109529528914
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(".)JDI", true);
      outputFormat0.setNewlines(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setXHTML(true);
      String[] stringArray0 = new String[0];
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      boolean boolean0 = true;
      outputFormat0.setTrimText(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(';');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (;)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("uAZXNuZ9uj");
      outputFormat0.setLineSeparator("");
      boolean boolean0 = true;
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setEncoding("d");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setXHTML(true);
      outputFormat0.isPadText();
      outputFormat0.setXHTML(true);
      outputFormat0.setTrimText(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      int int0 = outputFormat0.parseOptions(stringArray0, 37);
      assertEquals(37, int0);
      
      outputFormat0.setPadText(false);
      outputFormat0.isPadText();
      String string0 = outputFormat0.getLineSeparator();
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertEquals("\n", string0);
      assertEquals("", outputFormat0.getIndent());
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(")");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setXHTML(false);
      boolean boolean0 = false;
      int int0 = 1089;
      outputFormat0.setNewLineAfterNTags(1089);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat1.setNewlines(false);
      outputFormat1.setTrimText(false);
      outputFormat1.setSuppressDeclaration(false);
      outputFormat1.setExpandEmptyElements(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isTrimText();
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      char char0 = 'g';
      outputFormat1.setIndentSize(0);
      // Undeclared exception!
      try { 
        outputFormat2.setAttributeQuoteCharacter('g');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (g)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[1];
      String string0 = "p!eY59he!k)_66wj";
      stringArray0[0] = "p!eY59he!k)_66wj";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat.createCompactFormat();
      String string1 = "";
      outputFormat0.setIndent("");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent(false);
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-1027));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1027
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("t$]]:-", false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("t$]]:-");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setTrimText(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent("`*2bZ|sELQ,");
      assertEquals("`*2bZ|sELQ,", outputFormat0.getIndent());
      
      outputFormat0.setIndent(false);
      outputFormat2.isNewlines();
      outputFormat1.setIndentSize(0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "`*2bZ|sELQ,";
      stringArray0[1] = "`*2bZ|sELQ,";
      stringArray0[2] = "`*2bZ|sELQ,";
      stringArray0[3] = "`*2bZ|sELQ,";
      stringArray0[4] = "t$]]:-";
      stringArray0[5] = "";
      stringArray0[6] = "`*2bZ|sELQ,";
      stringArray0[7] = "t$]]:-";
      stringArray0[8] = "`*2bZ|sELQ,";
      outputFormat0.parseOptions(stringArray0, 499);
      outputFormat2.setSuppressDeclaration(false);
      outputFormat2.setOmitEncoding(true);
      outputFormat2.setIndent("`*2bZ|sELQ,");
      outputFormat1.isNewLineAfterDeclaration();
      boolean boolean0 = outputFormat2.isTrimText();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setEncoding("]}w(h$&N");
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.setLineSeparator("");
      outputFormat0.setLineSeparator("");
      outputFormat0.setEncoding("");
      outputFormat0.setIndentSize((-3218));
      outputFormat0.setIndent("c4s#Kjc7:");
      outputFormat0.isXHTML();
      outputFormat0.setXHTML(false);
      outputFormat0.setIndent(false);
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewlines(false);
      outputFormat0.setNewLineAfterNTags(1);
      assertEquals("", outputFormat0.getEncoding());
      
      boolean boolean0 = outputFormat1.isSuppressDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterNTags(1663);
      outputFormat0.setIndentSize(155);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      outputFormat0.setIndentSize(0);
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getIndent();
      outputFormat0.getIndent();
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndentSize(1);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getEncoding();
      assertEquals(1663, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.649158683274018
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = null;
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, (String) null);
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.isXHTML();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterNTags(0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-omitEncoding";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.isExpandEmptyElements();
      outputFormat1.setXHTML(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('_');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (_)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4440640460689087
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, (String) null);
      outputFormat0.setOmitEncoding(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.isXHTML();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterNTags(0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`bYq^s]S2HL";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.isExpandEmptyElements();
      outputFormat1.setXHTML(true);
      outputFormat1.parseOptions(stringArray0, 2);
      OutputFormat outputFormat2 = new OutputFormat("Lqvm0w");
      outputFormat2.isExpandEmptyElements();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat1.setAttributeQuoteCharacter('\'');
      outputFormat2.setLineSeparator("`bYq^s]S2HL");
      outputFormat2.isTrimText();
      assertEquals("`bYq^s]S2HL", outputFormat2.getLineSeparator());
      
      outputFormat0.setExpandEmptyElements(false);
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      outputFormat0.setIndent(true);
      outputFormat0.setNewlines(true);
      String string0 = null;
      outputFormat0.setIndent((String) null);
      outputFormat0.setNewLineAfterDeclaration(false);
      boolean boolean0 = false;
      outputFormat0.setIndent(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1051));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1051
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setEncoding((String) null);
      outputFormat0.isNewlines();
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "XO~AS`x\"ny<:8OJ|%";
      stringArray0[1] = "XO~AS`x\"ny<:8OJ|%";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1959));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1959
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7309439966762843
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-xhtmlp!eY59he!k)_66wj";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.getNewLineAfterNTags();
      assertFalse(outputFormat2.isXHTML());
      
      outputFormat0.parseOptions(stringArray0, 1536);
      assertTrue(outputFormat0.isXHTML());
      
      int int0 = outputFormat1.parseOptions(stringArray0, 0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3334730391185028
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "#ADe";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "-expandEmptyW";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("#ADe", outputFormat0.getLineSeparator());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6837389058487535
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty", false);
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "-expandEmpty";
      stringArray0[2] = "-expandEmpty";
      stringArray0[3] = "-expandEmpty";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.297295830625819
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "/Yq^s]SRL";
      OutputFormat outputFormat0 = new OutputFormat("<tfQjS6.wL1J");
      outputFormat0.parseOptions(stringArray0, 1397);
      outputFormat0.setIndent("<tfQjS6.wL1J");
      String[] stringArray1 = new String[9];
      stringArray1[0] = "-encoding";
      stringArray1[1] = "/Yq^s]SRL";
      stringArray1[2] = "/Yq^s]SRL";
      stringArray1[3] = "/Yq^s]SRL";
      stringArray1[4] = "CJ}mj^4rIO; ";
      stringArray1[5] = "/Yq^s]SRL";
      stringArray1[6] = "/Yq^s]SRL";
      stringArray1[7] = "/Yq^s]SRL";
      stringArray1[8] = "";
      outputFormat0.parseOptions(stringArray1, 1397);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setLineSeparator("cRp-Ykc");
      outputFormat1.parseOptions(stringArray1, 0);
      outputFormat1.parseOptions(stringArray0, 2);
      int int0 = outputFormat1.parseOptions(stringArray1, 2726);
      assertEquals("cRp-Ykc", outputFormat1.getLineSeparator());
      assertEquals(2726, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9356005054539451
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = new OutputFormat("", true);
      outputFormat1.setLineSeparator("-xhtmlLqvm0w");
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.setLineSeparator("-xhtmlLqvm0w");
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.isTrimText();
      OutputFormat outputFormat3 = new OutputFormat("-xhtmlp!eY53");
      outputFormat3.setExpandEmptyElements(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-xhtmlp!eY53";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "-xtmlp!eY53he!kY_66wj";
      outputFormat1.parseOptions(stringArray0, 0);
      OutputFormat outputFormat4 = new OutputFormat("-xtmlp!eY53he!kY_66wj", false);
      outputFormat4.parseOptions(stringArray0, 0);
      outputFormat3.parseOptions(stringArray0, 1174);
      OutputFormat outputFormat5 = OutputFormat.createCompactFormat();
      // Undeclared exception!
      try { 
        outputFormat5.parseOptions(stringArray0, (-2817));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2817
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.242973226438147
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = new OutputFormat("-xtmlp!eY53he!kY_66wj", true);
      outputFormat1.setLineSeparator("-xhtmlLqvm0w");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.setLineSeparator("-xhtmlLqvm0w");
      OutputFormat outputFormat2 = new OutputFormat("-suppressDeclaration", true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-xtmlp!eY53he!kY_66wj";
      stringArray0[1] = "-xtmlp!eY53he!kY_66wj";
      stringArray0[2] = "-suppressDeclaration";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      assertEquals('\'', outputFormat0.getAttributeQuoteCharacter());
      
      OutputFormat outputFormat3 = new OutputFormat("", true);
      outputFormat3.parseOptions(stringArray0, 2);
      int int0 = outputFormat2.parseOptions(stringArray0, 34);
      assertEquals(34, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0642580751745085
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(")", true);
      outputFormat0.setLineSeparator("-xhtmlLqvm0w");
      OutputFormat outputFormat1 = new OutputFormat(")");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[3];
      outputFormat0.setExpandEmptyElements(true);
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "6d1G%o9Sp=|";
      stringArray0[2] = "-lineSeparator";
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"6d1G%o9Sp=|\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7356388262012241
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isTrimText();
      OutputFormat outputFormat1 = new OutputFormat("K62i]&");
      OutputFormat outputFormat2 = new OutputFormat("-trimText");
      String[] stringArray0 = new String[5];
      outputFormat1.setNewlines(true);
      OutputFormat outputFormat3 = new OutputFormat("");
      OutputFormat outputFormat4 = new OutputFormat();
      String[] stringArray1 = new String[8];
      stringArray1[0] = "-padText";
      stringArray1[1] = "-xhtml";
      stringArray1[2] = "PwEp.7cU";
      stringArray1[3] = "";
      stringArray1[4] = "-xhtml";
      stringArray1[5] = "K62i]&";
      stringArray1[6] = "K62i]&";
      stringArray1[7] = "";
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat1.setNewLineAfterNTags((-1));
      OutputFormat.createCompactFormat();
      outputFormat1.setXHTML(false);
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isTrimText();
      OutputFormat outputFormat1 = new OutputFormat("K62i]&");
      outputFormat0.setPadText(false);
      OutputFormat outputFormat2 = new OutputFormat("-trmText");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-xhtmlp!eY53";
      stringArray0[2] = "K62i]&";
      OutputFormat outputFormat3 = new OutputFormat("-xhtmlp!eY53");
      OutputFormat outputFormat4 = new OutputFormat();
      outputFormat0.parseOptions(stringArray0, 0);
      int int0 = (-5);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "-newlines";
      stringArray1[1] = "-xhtml";
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray1, (-1109));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1109
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
