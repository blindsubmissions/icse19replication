/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 10:10:45 GMT 2018
 */

package com.browsersoft.openhre.hl7.impl.regular;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.browsersoft.openhre.hl7.api.config.HL7Segment;
import com.browsersoft.openhre.hl7.api.regular.ExpressionElementMapper;
import com.browsersoft.openhre.hl7.impl.parser.HL7CheckerStateImpl;
import com.browsersoft.openhre.hl7.impl.regular.ExpressionElementMapperImpl;
import com.browsersoft.openhre.hl7.impl.regular.ExpressionElementMapperItemImpl;
import com.browsersoft.openhre.hl7.impl.regular.ExpressionMatrixImpl;
import com.browsersoft.openhre.hl7.impl.regular.MessageTracerImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExpressionMatrixImpl_ESTest extends ExpressionMatrixImpl_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      expressionMatrixImpl0.toString();
      expressionMatrixImpl0.toString();
      int int0 = (-672);
      expressionMatrixImpl0.creatMatrix((-672));
      ExpressionElementMapperImpl expressionElementMapperImpl0 = new ExpressionElementMapperImpl();
      ExpressionElementMapperItemImpl expressionElementMapperItemImpl0 = new ExpressionElementMapperItemImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.getActualSegment();
      expressionElementMapperItemImpl0.setSegment((HL7Segment) null);
      expressionElementMapperImpl0.addItem(expressionElementMapperItemImpl0);
      expressionElementMapperImpl0.toString();
      expressionMatrixImpl0.outNoStandardConnections(true, expressionElementMapperImpl0);
      expressionMatrixImpl0.getValue(23, 3232);
      int int1 = (-760);
      expressionMatrixImpl0.setValue(23, 0, (-760));
      // Undeclared exception!
      try { 
        expressionMatrixImpl0.addNewNode();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.regular.ExpressionMatrixImpl", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      expressionMatrixImpl0.addNewNode();
      expressionMatrixImpl0.creatMatrix(3090);
      int int0 = 0;
      expressionMatrixImpl0.toString();
      expressionMatrixImpl0.setValue(0, 1, 1048576);
      boolean boolean0 = false;
      MessageTracerImpl messageTracerImpl0 = new MessageTracerImpl();
      ExpressionElementMapperImpl expressionElementMapperImpl0 = new ExpressionElementMapperImpl();
      // Undeclared exception!
      try { 
        expressionMatrixImpl0.outNoStandardConnections(false, expressionElementMapperImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      expressionMatrixImpl0.addNewNode();
      expressionMatrixImpl0.setValue(739, 2763, 739);
      expressionMatrixImpl0.addNewNode();
      ExpressionElementMapperImpl expressionElementMapperImpl0 = new ExpressionElementMapperImpl();
      expressionMatrixImpl0.creatMatrix(68);
      expressionMatrixImpl0.addNewNode();
      expressionMatrixImpl0.toString();
      assertEquals(68, expressionMatrixImpl0.getNumberOfElements());
      
      ExpressionElementMapperItemImpl expressionElementMapperItemImpl0 = new ExpressionElementMapperItemImpl();
      expressionElementMapperImpl0.addItem(expressionElementMapperItemImpl0);
      expressionElementMapperImpl0.removeItem(0);
      expressionElementMapperImpl0.toString();
      expressionElementMapperImpl0.removeItem((-4946));
      expressionMatrixImpl0.creatMatrix(0);
      expressionMatrixImpl0.outNoStandardConnections(false, expressionElementMapperImpl0);
      expressionMatrixImpl0.getNumberOfNodes();
      expressionMatrixImpl0.getNumberOfElements();
      expressionMatrixImpl0.toString();
      expressionMatrixImpl0.getValue((-1811), 0);
      expressionMatrixImpl0.addNewNode();
      expressionMatrixImpl0.outNoStandardConnections(false, expressionElementMapperImpl0);
      expressionMatrixImpl0.creatMatrix(0);
      expressionMatrixImpl0.getNumberOfElements();
      expressionMatrixImpl0.getValue(0, (-4946));
      expressionMatrixImpl0.getNumberOfElements();
      expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      expressionMatrixImpl0.setValue(0, 3, 23);
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      assertNotNull(expressionMatrixImpl0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      
      int int0 = expressionMatrixImpl0.getNumberOfElements();
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, int0);
      
      ExpressionElementMapperImpl expressionElementMapperImpl0 = new ExpressionElementMapperImpl();
      assertNotNull(expressionElementMapperImpl0);
      assertEquals(0, expressionElementMapperImpl0.size());
      
      ExpressionElementMapperItemImpl expressionElementMapperItemImpl0 = new ExpressionElementMapperItemImpl();
      assertNotNull(expressionElementMapperItemImpl0);
      assertEquals(0, expressionElementMapperItemImpl0.getType());
      assertNull(expressionElementMapperItemImpl0.getID());
      
      expressionElementMapperImpl0.addItem(expressionElementMapperItemImpl0);
      assertEquals(1, expressionElementMapperImpl0.size());
      assertEquals(0, expressionElementMapperItemImpl0.getType());
      assertNull(expressionElementMapperItemImpl0.getID());
      
      String string0 = expressionMatrixImpl0.outNoStandardConnections(true, expressionElementMapperImpl0);
      assertNotNull(string0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(1, expressionElementMapperImpl0.size());
      assertEquals("", string0);
      
      String string1 = expressionMatrixImpl0.outNoStandardConnections(true, expressionElementMapperImpl0);
      assertNotNull(string1);
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(1, expressionElementMapperImpl0.size());
      assertEquals("", string1);
      
      expressionMatrixImpl0.setValue(0, 0, 0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      
      int int1 = expressionMatrixImpl0.getNumberOfNodes();
      assertTrue(int1 == int0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, int1);
      
      int int2 = expressionMatrixImpl0.getValue(0, 0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals((-1), int2);
      
      expressionMatrixImpl0.setValue((-2736), 1, (-2736));
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8937882323911377
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      assertNotNull(expressionMatrixImpl0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      
      ExpressionElementMapperImpl expressionElementMapperImpl0 = new ExpressionElementMapperImpl();
      assertNotNull(expressionElementMapperImpl0);
      assertEquals(0, expressionElementMapperImpl0.size());
      
      String string0 = expressionElementMapperImpl0.toString();
      assertNotNull(string0);
      assertEquals(0, expressionElementMapperImpl0.size());
      assertEquals("", string0);
      
      String string1 = expressionMatrixImpl0.outNoStandardConnections(true, expressionElementMapperImpl0);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionElementMapperImpl0.size());
      assertEquals("", string1);
      
      String string2 = expressionMatrixImpl0.outNoStandardConnections(true, expressionElementMapperImpl0);
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string0));
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionElementMapperImpl0.size());
      assertEquals("", string2);
      
      int int0 = expressionMatrixImpl0.getNumberOfElements();
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, int0);
      
      int int1 = expressionMatrixImpl0.getNumberOfNodes();
      assertTrue(int1 == int0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, int1);
      
      expressionMatrixImpl0.creatMatrix(0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      
      expressionMatrixImpl0.setValue(0, 1842, 0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      
      int int2 = expressionMatrixImpl0.getValue(300, 1842);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals((-1), int2);
      
      int int3 = expressionMatrixImpl0.addNewNode();
      assertTrue(int3 == int0);
      assertTrue(int3 == int1);
      assertFalse(int3 == int2);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, int3);
      
      expressionMatrixImpl0.setValue(0, (-3675), 300);
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.70351618011312
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      assertNotNull(expressionMatrixImpl0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      
      String string0 = expressionMatrixImpl0.toString();
      assertNotNull(string0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("MATRIX\n-----------------------\n | \n\nCONNECTIONS\n-----------------------\n", string0);
      
      expressionMatrixImpl0.creatMatrix(194);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      String string1 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string1);
      
      int int0 = expressionMatrixImpl0.addNewNode();
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, int0);
      
      int int1 = expressionMatrixImpl0.addNewNode();
      assertFalse(int1 == int0);
      assertEquals(2, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(1, int1);
      
      int int2 = expressionMatrixImpl0.addNewNode();
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(2, int2);
      
      String string2 = expressionMatrixImpl0.toString();
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      String string3 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string3);
      
      int int3 = expressionMatrixImpl0.getValue(194, 194);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals((-1), int3);
      
      expressionMatrixImpl0.setValue(2, 0, 2);
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      String string4 = expressionMatrixImpl0.toString();
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      int int4 = expressionMatrixImpl0.getNumberOfElements();
      assertFalse(int4 == int0);
      assertFalse(int4 == int3);
      assertFalse(int4 == int1);
      assertFalse(int4 == int2);
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(194, int4);
      
      int int5 = expressionMatrixImpl0.getNumberOfElements();
      assertFalse(int5 == int3);
      assertFalse(int5 == int0);
      assertFalse(int5 == int1);
      assertTrue(int5 == int4);
      assertFalse(int5 == int2);
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(194, int5);
      
      String string5 = expressionMatrixImpl0.toString();
      assertNotNull(string5);
      assertFalse(string5.equals((Object)string2));
      assertTrue(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      int int6 = expressionMatrixImpl0.getNumberOfElements();
      assertTrue(int6 == int5);
      assertTrue(int6 == int4);
      assertFalse(int6 == int3);
      assertFalse(int6 == int1);
      assertFalse(int6 == int0);
      assertFalse(int6 == int2);
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(194, int6);
      
      int int7 = expressionMatrixImpl0.addNewNode();
      assertFalse(int7 == int5);
      assertFalse(int7 == int0);
      assertFalse(int7 == int4);
      assertFalse(int7 == int2);
      assertFalse(int7 == int3);
      assertFalse(int7 == int6);
      assertFalse(int7 == int1);
      assertEquals(4, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, int7);
      
      int int8 = expressionMatrixImpl0.getValue(2, 255);
      assertFalse(int8 == int0);
      assertFalse(int8 == int7);
      assertFalse(int8 == int5);
      assertFalse(int8 == int4);
      assertFalse(int8 == int2);
      assertFalse(int8 == int6);
      assertTrue(int8 == int3);
      assertFalse(int8 == int1);
      assertEquals(4, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals((-1), int8);
      
      int int9 = expressionMatrixImpl0.getNumberOfNodes();
      assertFalse(int9 == int1);
      assertFalse(int9 == int6);
      assertFalse(int9 == int2);
      assertFalse(int9 == int5);
      assertFalse(int9 == int7);
      assertFalse(int9 == int4);
      assertFalse(int9 == int3);
      assertFalse(int9 == int8);
      assertFalse(int9 == int0);
      assertEquals(4, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(4, int9);
      
      String string6 = expressionMatrixImpl0.toString();
      assertNotNull(string6);
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string4));
      assertEquals(4, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.478751524647954
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      assertNotNull(expressionMatrixImpl0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      
      String string0 = expressionMatrixImpl0.toString();
      assertNotNull(string0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("MATRIX\n-----------------------\n | \n\nCONNECTIONS\n-----------------------\n", string0);
      
      expressionMatrixImpl0.creatMatrix(194);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      String string1 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string1);
      
      int int0 = expressionMatrixImpl0.addNewNode();
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, int0);
      
      int int1 = expressionMatrixImpl0.addNewNode();
      assertFalse(int1 == int0);
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(2, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(1, int1);
      
      int int2 = expressionMatrixImpl0.addNewNode();
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2, int2);
      
      int int3 = expressionMatrixImpl0.addNewNode();
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(4, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(3, int3);
      
      expressionMatrixImpl0.creatMatrix(3);
      assertEquals(4, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(3, expressionMatrixImpl0.getNumberOfElements());
      
      String string2 = expressionMatrixImpl0.toString();
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(3, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("MATRIX\n-----------------------\n | A , B , C\n0| E , E , E\n1| E , E , E\n2| E , E , E\n3| E , E , E\n\nCONNECTIONS\n-----------------------\n", string2);
      
      String string3 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(3, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string3);
      
      int int4 = expressionMatrixImpl0.getValue(194, 194);
      assertFalse(int4 == int3);
      assertFalse(int4 == int1);
      assertFalse(int4 == int0);
      assertFalse(int4 == int2);
      assertEquals(4, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(3, expressionMatrixImpl0.getNumberOfElements());
      assertEquals((-1), int4);
      
      expressionMatrixImpl0.setValue(2, 0, 3);
      assertEquals(4, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(3, expressionMatrixImpl0.getNumberOfElements());
      
      String string4 = expressionMatrixImpl0.toString();
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertEquals(4, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(3, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("MATRIX\n-----------------------\n | A , B , C\n0| E , E , E\n1| E , E , E\n2| 3 , E , E\n3| E , E , E\n\nCONNECTIONS\n-----------------------\n2 --- A ---> 3\n", string4);
      
      int int5 = expressionMatrixImpl0.getNumberOfElements();
      assertFalse(int5 == int2);
      assertFalse(int5 == int4);
      assertFalse(int5 == int0);
      assertTrue(int5 == int3);
      assertFalse(int5 == int1);
      assertEquals(4, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(3, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, int5);
      
      ExpressionMatrixImpl expressionMatrixImpl1 = new ExpressionMatrixImpl();
      assertNotNull(expressionMatrixImpl1);
      assertFalse(expressionMatrixImpl1.equals((Object)expressionMatrixImpl0));
      assertEquals(0, expressionMatrixImpl1.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl1.getNumberOfNodes());
      
      int int6 = expressionMatrixImpl1.getNumberOfElements();
      assertTrue(int6 == int0);
      assertFalse(int6 == int5);
      assertFalse(int6 == int3);
      assertFalse(int6 == int1);
      assertFalse(int6 == int2);
      assertFalse(int6 == int4);
      assertFalse(expressionMatrixImpl1.equals((Object)expressionMatrixImpl0));
      assertEquals(0, expressionMatrixImpl1.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl1.getNumberOfNodes());
      assertEquals(0, int6);
      assertNotSame(expressionMatrixImpl1, expressionMatrixImpl0);
      
      int int7 = expressionMatrixImpl0.getNumberOfElements();
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertFalse(int7 == int6);
      assertFalse(int7 == int2);
      assertFalse(int7 == int1);
      assertTrue(int7 == int5);
      assertFalse(int7 == int4);
      assertTrue(int7 == int3);
      assertFalse(int7 == int0);
      assertEquals(4, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(3, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, int7);
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
      
      ExpressionMatrixImpl expressionMatrixImpl2 = new ExpressionMatrixImpl();
      assertNotNull(expressionMatrixImpl2);
      assertFalse(expressionMatrixImpl2.equals((Object)expressionMatrixImpl1));
      assertFalse(expressionMatrixImpl2.equals((Object)expressionMatrixImpl0));
      assertEquals(0, expressionMatrixImpl2.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl2.getNumberOfElements());
      
      String string5 = expressionMatrixImpl2.toString();
      assertNotNull(string5);
      assertFalse(expressionMatrixImpl2.equals((Object)expressionMatrixImpl1));
      assertFalse(expressionMatrixImpl2.equals((Object)expressionMatrixImpl0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertTrue(string5.equals((Object)string0));
      assertEquals(0, expressionMatrixImpl2.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl2.getNumberOfElements());
      assertEquals("MATRIX\n-----------------------\n | \n\nCONNECTIONS\n-----------------------\n", string5);
      assertNotSame(expressionMatrixImpl2, expressionMatrixImpl1);
      assertNotSame(expressionMatrixImpl2, expressionMatrixImpl0);
      
      int int8 = expressionMatrixImpl0.getNumberOfElements();
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl2));
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertFalse(int8 == int4);
      assertFalse(int8 == int2);
      assertTrue(int8 == int7);
      assertTrue(int8 == int5);
      assertFalse(int8 == int1);
      assertFalse(int8 == int0);
      assertTrue(int8 == int3);
      assertFalse(int8 == int6);
      assertEquals(4, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(3, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, int8);
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl2);
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
      
      expressionMatrixImpl2.creatMatrix(362);
      assertFalse(expressionMatrixImpl2.equals((Object)expressionMatrixImpl1));
      assertFalse(expressionMatrixImpl2.equals((Object)expressionMatrixImpl0));
      assertEquals(362, expressionMatrixImpl2.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl2.getNumberOfNodes());
      assertNotSame(expressionMatrixImpl2, expressionMatrixImpl1);
      assertNotSame(expressionMatrixImpl2, expressionMatrixImpl0);
      
      String string6 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertNotNull(string6);
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl2));
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string2));
      assertEquals(4, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(3, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string6);
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl2);
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
      
      String string7 = expressionMatrixImpl1.toString();
      assertNotNull(string7);
      assertFalse(string7.equals((Object)string1));
      assertTrue(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string2));
      assertTrue(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string6));
      assertFalse(expressionMatrixImpl1.equals((Object)expressionMatrixImpl0));
      assertFalse(expressionMatrixImpl1.equals((Object)expressionMatrixImpl2));
      assertEquals(0, expressionMatrixImpl1.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl1.getNumberOfNodes());
      assertEquals("MATRIX\n-----------------------\n | \n\nCONNECTIONS\n-----------------------\n", string7);
      assertNotSame(expressionMatrixImpl1, expressionMatrixImpl0);
      assertNotSame(expressionMatrixImpl1, expressionMatrixImpl2);
      
      String string8 = expressionMatrixImpl2.toString();
      assertNotNull(string8);
      assertFalse(expressionMatrixImpl2.equals((Object)expressionMatrixImpl1));
      assertFalse(expressionMatrixImpl2.equals((Object)expressionMatrixImpl0));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string1));
      assertEquals(362, expressionMatrixImpl2.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl2.getNumberOfNodes());
      assertNotSame(expressionMatrixImpl2, expressionMatrixImpl1);
      assertNotSame(expressionMatrixImpl2, expressionMatrixImpl0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.478751524647954
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      assertNotNull(expressionMatrixImpl0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      
      String string0 = expressionMatrixImpl0.toString();
      assertNotNull(string0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals("MATRIX\n-----------------------\n | \n\nCONNECTIONS\n-----------------------\n", string0);
      
      expressionMatrixImpl0.creatMatrix(194);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      String string1 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string1);
      
      int int0 = expressionMatrixImpl0.addNewNode();
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, int0);
      
      int int1 = expressionMatrixImpl0.addNewNode();
      assertFalse(int1 == int0);
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(2, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(1, int1);
      
      int int2 = expressionMatrixImpl0.addNewNode();
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(2, int2);
      
      String string2 = expressionMatrixImpl0.toString();
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      
      String string3 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals("", string3);
      
      int int3 = expressionMatrixImpl0.getValue(194, 194);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals((-1), int3);
      
      expressionMatrixImpl0.setValue(2, 0, 2);
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      
      String string4 = expressionMatrixImpl0.toString();
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      
      int int4 = expressionMatrixImpl0.getNumberOfElements();
      assertFalse(int4 == int2);
      assertFalse(int4 == int0);
      assertFalse(int4 == int1);
      assertFalse(int4 == int3);
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, int4);
      
      String string5 = expressionMatrixImpl0.toString();
      assertNotNull(string5);
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertTrue(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      
      int int5 = expressionMatrixImpl0.getNumberOfElements();
      assertFalse(int5 == int3);
      assertFalse(int5 == int2);
      assertTrue(int5 == int4);
      assertFalse(int5 == int0);
      assertFalse(int5 == int1);
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, int5);
      
      String string6 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertNotNull(string6);
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string1));
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals("2 --- A ---> 2\n", string6);
      
      String string7 = expressionMatrixImpl0.toString();
      assertNotNull(string7);
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string1));
      assertTrue(string7.equals((Object)string4));
      assertTrue(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string0));
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      
      String string8 = expressionMatrixImpl0.toString();
      assertNotNull(string8);
      assertTrue(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string3));
      assertTrue(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string2));
      assertTrue(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string0));
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      
      String string9 = expressionMatrixImpl0.outNoStandardConnections(true, (ExpressionElementMapper) null);
      assertNotNull(string9);
      assertFalse(string9.equals((Object)string6));
      assertFalse(string9.equals((Object)string8));
      assertFalse(string9.equals((Object)string2));
      assertFalse(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string5));
      assertFalse(string9.equals((Object)string4));
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals("", string9);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5990147122062977
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      assertNotNull(expressionMatrixImpl0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      
      String string0 = expressionMatrixImpl0.toString();
      assertNotNull(string0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("MATRIX\n-----------------------\n | \n\nCONNECTIONS\n-----------------------\n", string0);
      
      expressionMatrixImpl0.creatMatrix(194);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      expressionMatrixImpl0.creatMatrix(194);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      String string1 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string1);
      
      int int0 = expressionMatrixImpl0.addNewNode();
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, int0);
      
      int int1 = expressionMatrixImpl0.addNewNode();
      assertFalse(int1 == int0);
      assertEquals(2, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(1, int1);
      
      int int2 = expressionMatrixImpl0.addNewNode();
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(2, int2);
      
      String string2 = expressionMatrixImpl0.toString();
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      String string3 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string3);
      
      int int3 = expressionMatrixImpl0.getValue(194, 194);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals((-1), int3);
      
      String string4 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string4);
      
      int int4 = expressionMatrixImpl0.getValue(1, 5885);
      assertFalse(int4 == int2);
      assertFalse(int4 == int1);
      assertTrue(int4 == int3);
      assertFalse(int4 == int0);
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals((-1), int4);
      
      expressionMatrixImpl0.setValue(2, 2, 180);
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      String string5 = expressionMatrixImpl0.toString();
      assertNotNull(string5);
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      String string6 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertNotNull(string6);
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string0));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string6);
      
      int int5 = expressionMatrixImpl0.addNewNode();
      assertFalse(int5 == int1);
      assertFalse(int5 == int4);
      assertFalse(int5 == int2);
      assertFalse(int5 == int3);
      assertFalse(int5 == int0);
      assertEquals(4, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(3, int5);
      
      ExpressionMatrixImpl expressionMatrixImpl1 = new ExpressionMatrixImpl();
      assertNotNull(expressionMatrixImpl1);
      assertFalse(expressionMatrixImpl1.equals((Object)expressionMatrixImpl0));
      assertEquals(0, expressionMatrixImpl1.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl1.getNumberOfNodes());
      
      int int6 = expressionMatrixImpl0.addNewNode();
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertFalse(int6 == int2);
      assertFalse(int6 == int4);
      assertFalse(int6 == int5);
      assertFalse(int6 == int3);
      assertFalse(int6 == int0);
      assertFalse(int6 == int1);
      assertEquals(5, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(4, int6);
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
      
      expressionMatrixImpl1.creatMatrix(2);
      assertFalse(expressionMatrixImpl1.equals((Object)expressionMatrixImpl0));
      assertEquals(0, expressionMatrixImpl1.getNumberOfNodes());
      assertEquals(2, expressionMatrixImpl1.getNumberOfElements());
      assertNotSame(expressionMatrixImpl1, expressionMatrixImpl0);
      
      int int7 = expressionMatrixImpl1.getNumberOfElements();
      assertFalse(expressionMatrixImpl1.equals((Object)expressionMatrixImpl0));
      assertFalse(int7 == int1);
      assertFalse(int7 == int6);
      assertFalse(int7 == int0);
      assertFalse(int7 == int3);
      assertFalse(int7 == int5);
      assertFalse(int7 == int4);
      assertTrue(int7 == int2);
      assertEquals(0, expressionMatrixImpl1.getNumberOfNodes());
      assertEquals(2, expressionMatrixImpl1.getNumberOfElements());
      assertEquals(2, int7);
      assertNotSame(expressionMatrixImpl1, expressionMatrixImpl0);
      
      ExpressionMatrixImpl expressionMatrixImpl2 = new ExpressionMatrixImpl();
      assertNotNull(expressionMatrixImpl2);
      assertFalse(expressionMatrixImpl2.equals((Object)expressionMatrixImpl1));
      assertFalse(expressionMatrixImpl2.equals((Object)expressionMatrixImpl0));
      assertEquals(0, expressionMatrixImpl2.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl2.getNumberOfNodes());
      
      String string7 = expressionMatrixImpl2.toString();
      assertNotNull(string7);
      assertFalse(expressionMatrixImpl2.equals((Object)expressionMatrixImpl1));
      assertFalse(expressionMatrixImpl2.equals((Object)expressionMatrixImpl0));
      assertTrue(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string3));
      assertEquals(0, expressionMatrixImpl2.getNumberOfElements());
      assertEquals(0, expressionMatrixImpl2.getNumberOfNodes());
      assertEquals("MATRIX\n-----------------------\n | \n\nCONNECTIONS\n-----------------------\n", string7);
      assertNotSame(expressionMatrixImpl2, expressionMatrixImpl1);
      assertNotSame(expressionMatrixImpl2, expressionMatrixImpl0);
      
      String string8 = expressionMatrixImpl0.toString();
      assertNotNull(string8);
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl2));
      assertFalse(expressionMatrixImpl0.equals((Object)expressionMatrixImpl1));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string3));
      assertEquals(5, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl2);
      assertNotSame(expressionMatrixImpl0, expressionMatrixImpl1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4249913134082717
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ExpressionMatrixImpl expressionMatrixImpl0 = new ExpressionMatrixImpl();
      assertNotNull(expressionMatrixImpl0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      
      String string0 = expressionMatrixImpl0.toString();
      assertNotNull(string0);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(0, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("MATRIX\n-----------------------\n | \n\nCONNECTIONS\n-----------------------\n", string0);
      
      expressionMatrixImpl0.creatMatrix(194);
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      MessageTracerImpl messageTracerImpl0 = new MessageTracerImpl();
      assertNotNull(messageTracerImpl0);
      
      ExpressionElementMapper expressionElementMapper0 = messageTracerImpl0.getMapper();
      assertNull(expressionElementMapper0);
      
      String string1 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string1);
      
      int int0 = expressionMatrixImpl0.addNewNode();
      assertEquals(1, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(0, int0);
      
      int int1 = expressionMatrixImpl0.addNewNode();
      assertFalse(int1 == int0);
      assertEquals(2, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(1, int1);
      
      int int2 = expressionMatrixImpl0.addNewNode();
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(2, int2);
      
      String string2 = expressionMatrixImpl0.toString();
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      String string3 = expressionMatrixImpl0.outNoStandardConnections(true, (ExpressionElementMapper) null);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string3);
      
      int int3 = expressionMatrixImpl0.getValue(194, 74);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals((-1), int3);
      
      expressionMatrixImpl0.setValue(1, 148, 2);
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      String string4 = expressionMatrixImpl0.toString();
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      int int4 = expressionMatrixImpl0.getNumberOfElements();
      assertFalse(int4 == int3);
      assertFalse(int4 == int1);
      assertFalse(int4 == int0);
      assertFalse(int4 == int2);
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(194, int4);
      
      String string5 = expressionMatrixImpl0.toString();
      assertNotNull(string5);
      assertFalse(string5.equals((Object)string1));
      assertTrue(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      int int5 = expressionMatrixImpl0.getNumberOfElements();
      assertFalse(int5 == int1);
      assertFalse(int5 == int3);
      assertTrue(int5 == int4);
      assertFalse(int5 == int0);
      assertFalse(int5 == int2);
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals(194, int5);
      
      String string6 = expressionMatrixImpl0.outNoStandardConnections(false, (ExpressionElementMapper) null);
      assertNotNull(string6);
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string4));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("", string6);
      
      String string7 = expressionMatrixImpl0.toString();
      assertNotNull(string7);
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string0));
      assertTrue(string7.equals((Object)string5));
      assertTrue(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string3));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      String string8 = expressionMatrixImpl0.toString();
      assertNotNull(string8);
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string2));
      assertTrue(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string6));
      assertTrue(string8.equals((Object)string7));
      assertTrue(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string1));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      
      String string9 = expressionMatrixImpl0.outNoStandardConnections(true, (ExpressionElementMapper) null);
      assertNotNull(string9);
      assertFalse(string9.equals((Object)string6));
      assertFalse(string9.equals((Object)string1));
      assertFalse(string9.equals((Object)string8));
      assertFalse(string9.equals((Object)string2));
      assertFalse(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string4));
      assertFalse(string9.equals((Object)string5));
      assertFalse(string9.equals((Object)string3));
      assertEquals(3, expressionMatrixImpl0.getNumberOfNodes());
      assertEquals(194, expressionMatrixImpl0.getNumberOfElements());
      assertEquals("1 --- \u00D5 ---> 2\n", string9);
  }
}
