/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 10:30:52 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.concurrent.LinkedBlockingDeque;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.field.FBCachedLongVarCharField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertTrue(fBCachedFetcher0.isEmpty());
      
      boolean boolean0 = fBCachedFetcher0.next();
      fBCachedFetcher0.isAfterLast();
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
      
      boolean boolean1 = fBCachedFetcher0.previous();
      assertTrue(boolean1 == boolean0);
      
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      fBCachedFetcher0.absolute(2048);
      fBCachedFetcher0.last();
      boolean boolean2 = fBCachedFetcher0.isAfterLast();
      boolean boolean3 = fBCachedFetcher0.relative(0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.458311329683084
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.next();
      boolean boolean1 = fBCachedFetcher0.isAfterLast();
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
      
      fBCachedFetcher0.close();
      boolean boolean2 = fBCachedFetcher0.previous();
      assertFalse(boolean2);
      
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      fBCachedFetcher0.absolute(2048);
      fBCachedFetcher0.last();
      boolean boolean3 = fBCachedFetcher0.isLast();
      assertFalse(boolean3 == boolean1);
      
      boolean boolean4 = fBCachedFetcher0.first();
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      LinkedBlockingDeque<FBCachedLongVarCharField> linkedBlockingDeque0 = new LinkedBlockingDeque<FBCachedLongVarCharField>();
      LinkedBlockingDeque<FBCachedLongVarCharField> linkedBlockingDeque1 = new LinkedBlockingDeque<FBCachedLongVarCharField>(linkedBlockingDeque0);
      FBCachedLongVarCharField fBCachedLongVarCharField0 = mock(FBCachedLongVarCharField.class, new ViolatedAssumptionAnswer());
      linkedBlockingDeque1.add(fBCachedLongVarCharField0);
      linkedList0.removeAll(linkedBlockingDeque1);
      fBCachedFetcher0.beforeFirst();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.458311329683084
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.previous();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      fBCachedFetcher0.absolute(2048);
      fBCachedFetcher0.last();
      fBCachedFetcher0.isLast();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9072839993213795
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.previous();
      byte[][] byteArray0 = new byte[0][7];
      linkedList0.add(byteArray0);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.previous();
      byte[][] byteArray0 = new byte[1][5];
      fBCachedFetcher0.relative(0);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)29;
      byteArray1[1] = (byte)56;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.previous();
      byte[][] byteArray0 = new byte[0][7];
      linkedList0.add(byteArray0);
      fBCachedFetcher0.last();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.afterLast();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.previous();
      byte[][] byteArray0 = new byte[9][0];
      byte[] byteArray1 = new byte[0];
      fBCachedFetcher0.last();
      fBCachedFetcher0.setFetchSize(1686);
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      fBCachedFetcher0.absolute(2048);
      fBCachedFetcher0.last();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertEquals(1686, fBCachedFetcher0.getFetchSize());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.next();
      boolean boolean1 = fBCachedFetcher0.isAfterLast();
      boolean boolean2 = fBCachedFetcher0.previous();
      assertTrue(boolean2 == boolean0);
      
      fBCachedFetcher0.absolute((-1423));
      fBCachedFetcher0.last();
      fBCachedFetcher0.isAfterLast();
      boolean boolean3 = fBCachedFetcher0.relative(0);
      assertTrue(boolean3 == boolean1);
      
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9730014063936123
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      LinkedBlockingDeque<FBCachedLongVarCharField> linkedBlockingDeque0 = new LinkedBlockingDeque<FBCachedLongVarCharField>();
      LinkedBlockingDeque<FBCachedLongVarCharField> linkedBlockingDeque1 = new LinkedBlockingDeque<FBCachedLongVarCharField>(linkedBlockingDeque0);
      FBCachedLongVarCharField fBCachedLongVarCharField0 = mock(FBCachedLongVarCharField.class, new ViolatedAssumptionAnswer());
      byte[][] byteArray0 = new byte[1][2];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.clone();
      fBCachedFetcher1.updateRow(byteArray0);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[5][8];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-4);
      byteArray1[1] = (byte)73;
      byteArray1[2] = (byte) (-36);
      byteArray1[3] = (byte)74;
      byteArray1[4] = (byte)44;
      byteArray1[5] = (byte)60;
      byteArray1[6] = (byte)100;
      byteArray1[7] = (byte)19;
      byteArray1[8] = (byte)10;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)100;
      byteArray2[1] = (byte)10;
      byteArray2[2] = (byte) (-108);
      byteArray2[3] = (byte)44;
      byteArray2[4] = (byte)74;
      byteArray2[5] = (byte)19;
      byteArray2[6] = (byte)100;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte) (-23);
      byteArray3[1] = (byte) (-108);
      byteArray3[2] = (byte)73;
      byteArray3[3] = (byte)19;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[5];
      byteArray4[0] = (byte)77;
      byteArray4[1] = (byte)100;
      byteArray4[2] = (byte) (-70);
      byteArray4[3] = (byte)19;
      byteArray4[4] = (byte) (-23);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[8];
      byteArray5[0] = (byte) (-23);
      byteArray5[1] = (byte)73;
      byteArray5[2] = (byte)19;
      byteArray5[3] = (byte) (-70);
      byteArray5[4] = (byte)108;
      byteArray5[5] = (byte) (-108);
      byteArray5[6] = (byte)60;
      byteArray5[7] = (byte) (-23);
      byteArray0[4] = byteArray5;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.019814992492946
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      LinkedBlockingDeque<FBCachedLongVarCharField> linkedBlockingDeque0 = new LinkedBlockingDeque<FBCachedLongVarCharField>();
      LinkedBlockingDeque<FBCachedLongVarCharField> linkedBlockingDeque1 = new LinkedBlockingDeque<FBCachedLongVarCharField>(linkedBlockingDeque0);
      FBCachedLongVarCharField fBCachedLongVarCharField0 = mock(FBCachedLongVarCharField.class, new ViolatedAssumptionAnswer());
      byte[][] byteArray0 = new byte[1][2];
      byte byte0 = (byte) (-23);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.next();
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher2.isAfterLast();
      fBCachedFetcher0.previous();
      // Undeclared exception!
      try { 
        fBCachedFetcher2.absolute(1010);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[9];
      linkedList0.add((byte[][]) null);
      byteArray0[0] = (byte) (-4);
      byteArray0[1] = (byte)73;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.previous();
      boolean boolean1 = fBCachedFetcher0.next();
      fBCachedFetcher0.isAfterLast();
      boolean boolean2 = fBCachedFetcher0.isAfterLast();
      boolean boolean3 = fBCachedFetcher0.relative(272);
      assertTrue(boolean3 == boolean1);
      
      boolean boolean4 = fBCachedFetcher0.isFirst();
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3592367006650063
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative((-967));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.009709181894145
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher1.next();
      assertFalse(boolean0);
      
      boolean boolean1 = fBCachedFetcher1.isAfterLast();
      int int0 = fBCachedFetcher1.getRowNum();
      assertEquals(0, int0);
      
      byte[][] byteArray0 = new byte[4][7];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-62);
      byteArray1[1] = (byte)26;
      byteArray1[2] = (byte) (-86);
      byteArray1[3] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte)26;
      byteArray2[1] = (byte)0;
      byteArray2[2] = (byte) (-86);
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte) (-62);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte)26;
      byteArray3[1] = (byte)26;
      byteArray3[2] = (byte)0;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte)26;
      byteArray4[1] = (byte) (-86);
      byteArray4[2] = (byte) (-86);
      byteArray4[3] = (byte)26;
      byteArray0[3] = byteArray4;
      linkedList0.add(byteArray0);
      boolean boolean2 = fBCachedFetcher1.previous();
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FBCachedFetcher fBCachedFetcher3 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean3 = fBCachedFetcher1.relative(0);
      assertTrue(fBCachedFetcher1.isLast());
      assertTrue(boolean3 == boolean2);
      
      boolean boolean4 = fBCachedFetcher2.isLast();
      assertFalse(fBCachedFetcher2.isAfterLast());
      assertTrue(boolean4 == boolean1);
      assertTrue(fBCachedFetcher2.isBeforeFirst());
      assertFalse(boolean4);
  }
}
