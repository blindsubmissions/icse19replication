/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 10:31:46 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip(0L);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 4096, 4096);
      javaCharStream0.GetSuffix(4096);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-560), (-400));
      int int0 = (-1357);
      javaCharStream0.ReInit((Reader) stringReader0, (-560), (-1357));
      javaCharStream0.prevCharIsLF = false;
      int int1 = (-249);
      javaCharStream0.bufpos = 0;
      char[] charArray0 = new char[1];
      charArray0[0] = '\"';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      try { 
        stringReader0.read(charBuffer0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte) (-120);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-120), (-1226), (byte)1);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 8, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int0 = (-1883);
      int int1 = (-1845);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-1883), (-1883), (-1845));
      javaCharStream0.line = (-1845);
      javaCharStream0.getBeginLine();
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("uKQMZ#`#x?1Hz&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-800), (-800), 2192);
      javaCharStream0.prevCharIsLF = true;
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip((-1219L));
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      char[] charArray0 = new char[3];
      charArray0[0] = 'V';
      charArray0[1] = 'K';
      charArray0[2] = '+';
      javaCharStream0.buffer = charArray0;
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[2];
      charArray0[0] = ']';
      charArray0[1] = 'Y';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn((-3904), 0);
      assertEquals((-3903), javaCharStream0.getBeginLine());
      
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int0 = (-958);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-958), (-958), (-958));
      javaCharStream0.bufpos = (-204);
      pipedInputStream0.mark((-3419));
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -204
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yz+3t6d{");
      stringReader0.read();
      int int0 = 4052;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3036, 121, 4052);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(3036, 121);
      String string0 = "";
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "", 3036, 121);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 107, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      char[] charArray0 = new char[9];
      charArray0[0] = '';
      charArray0[1] = 'Y';
      charArray0[2] = '\"';
      charArray0[3] = 'U';
      charArray0[4] = '6';
      charArray0[5] = '`';
      charArray0[6] = 'z';
      charArray0[7] = '3';
      charArray0[8] = 'A';
      stringReader0.read(charArray0, 0, 0);
      javaCharStream0.backup(107);
      javaCharStream0.UpdateLineColumn('B');
      javaCharStream0.BeginToken();
      javaCharStream0.backup(0);
      assertEquals(3989, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(40, 40);
      StringReader stringReader0 = new StringReader("/o@?.GjTHou2o;4");
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 0, 3);
      javaCharStream0.adjustBeginLineColumn((-1), 3);
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.8662160235859526
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(0, 0);
      StringReader stringReader0 = new StringReader("/o@?.GjTHou2o;4");
      stringReader0.markSupported();
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 0, 3);
      javaCharStream0.getBeginColumn();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.43731116697345557
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[2];
      charArray0[0] = ']';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(0, (-1));
      try { 
        JavaCharStream.hexval('\"');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FDycX)$SNg{_L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2435), 1192);
      javaCharStream0.FillBuff();
      javaCharStream0.GetImage();
      char[] charArray0 = new char[3];
      charArray0[0] = '\\';
      charArray0[1] = '';
      charArray0[2] = 'I';
      javaCharStream0.buffer = charArray0;
      javaCharStream0.backup((-2435));
      javaCharStream0.UpdateLineColumn(']');
      javaCharStream0.BeginToken();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 107, 0);
      char[] charArray0 = new char[9];
      charArray0[0] = '';
      charArray0[2] = '\"';
      charArray0[3] = 'U';
      charArray0[4] = '6';
      charArray0[5] = '`';
      javaCharStream0.nextCharBuf = null;
      charArray0[6] = 'z';
      charArray0[7] = '3';
      charArray0[8] = 'A';
      stringReader0.read(charArray0, 0, 0);
      javaCharStream0.backup(107);
      javaCharStream0.UpdateLineColumn('B');
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.2351713199465555
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, 0, (-1339));
      javaCharStream0.adjustBeginLineColumn(1, (-1339));
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 0, 1);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-112);
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, (-1333), (-625));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (-726), (-2920));
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 1, 9);
      javaCharStream1.ReInit((InputStream) sequenceInputStream0);
      javaCharStream0.ExpandBuff(false);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3897154547004784
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, 0, (-1339));
      javaCharStream0.adjustBeginLineColumn(1, (-1339));
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 0, 1);
      javaCharStream0.adjustBeginLineColumn((-1), (-726));
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6837389058487535
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte) (-120);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((-2487L));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-120), (-1226), (byte)1);
      JavaCharStream.hexval('6');
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9454565408457661
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FDycX)$SNg{_L");
      char[] charArray0 = new char[9];
      charArray0[0] = 'Q';
      charArray0[1] = ']';
      charArray0[2] = 'Y';
      charArray0[3] = 'Y';
      charArray0[4] = 'L';
      charArray0[5] = 'Y';
      charArray0[6] = ']';
      charArray0[7] = 'H';
      charArray0[8] = 'Y';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(4081, 4);
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.8495247881782051
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FDycX)$SNg{_L");
      char[] charArray0 = new char[6];
      charArray0[1] = '(';
      charArray0[4] = 'U';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn((-2435), (-1904));
      JavaCharStream.hexval('C');
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.39537219111499866
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-120);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 61, (byte) (-120), (byte)0);
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char char0 = 'L';
      char[] charArray0 = new char[1];
      charArray0[0] = 'H';
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6961721930204325
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, 0, (-1339));
      javaCharStream0.adjustBeginLineColumn(1, (-1339));
      StringReader stringReader0 = new StringReader("Jbq''`+!vYlm2r~");
      char[] charArray0 = new char[6];
      charArray0[0] = 'H';
      charArray0[1] = 'H';
      charArray0[2] = 'H';
      charArray0[3] = 'H';
      charArray0[4] = 'H';
      charArray0[5] = 'H';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.adjustBeginLineColumn(6, 1742);
      JavaCharStream.hexval('b');
      javaCharStream1.GetImage();
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.19567003495657082
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((-2487L));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte) (-33), (-3631));
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.5660857389596289
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte) (-120));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4092, 4071, (-1226));
      JavaCharStream.hexval('9');
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-33);
      PipedInputStream pipedInputStream0 = new PipedInputStream(448);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (byte) (-33), (-427), (-1581));
      javaCharStream0.GetSuffix((byte)0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.6211636380876263
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[2];
      charArray0[0] = ']';
      charArray0[1] = 'Y';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, (-1), (-1));
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "FDycX)$SNg{_L";
      char[] charArray0 = new char[9];
      charArray0[0] = 'Q';
      charArray0[1] = ']';
      charArray0[2] = 'Y';
      charArray0[3] = 'Y';
      charArray0[5] = 'Y';
      charArray0[6] = ']';
      charArray0[7] = 'H';
      charArray0[8] = 'Y';
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.6514415069176382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, 0, (-1304));
      javaCharStream0.adjustBeginLineColumn(1, (-1304));
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 0, 1);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, (-1333), (-625));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[4];
      charArray0[0] = '(';
      charArray0[1] = 'C';
      charArray0[2] = 'Q';
      charArray0[3] = 'q';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.adjustBeginLineColumn((-1262), 4081);
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.7810432060838763
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FDycX)$SNg{_L");
      char[] charArray0 = new char[9];
      charArray0[0] = 'Q';
      charArray0[1] = ']';
      charArray0[2] = 'Y';
      charArray0[3] = 'Y';
      charArray0[4] = 'L';
      charArray0[5] = 'Y';
      charArray0[6] = ']';
      charArray0[7] = 'H';
      charArray0[8] = 'Y';
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1627), 3834, (-2920));
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 3834, (-1));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 3832, 8);
      javaCharStream1.ReInit((InputStream) sequenceInputStream0);
      javaCharStream1.ExpandBuff(false);
      JavaCharStream.hexval('d');
      // Undeclared exception!
      try { 
        javaCharStream1.UpdateLineColumn('I');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5810937501718234
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 107, 0);
      char[] charArray0 = new char[9];
      charArray0[0] = '';
      charArray0[2] = '\"';
      charArray0[3] = 'U';
      charArray0[4] = '6';
      charArray0[5] = '`';
      javaCharStream0.nextCharBuf = null;
      charArray0[6] = 'z';
      charArray0[7] = '3';
      charArray0[8] = 'A';
      stringReader0.read(charArray0, 0, 0);
      javaCharStream0.backup(107);
      javaCharStream0.UpdateLineColumn('B');
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.6987829895138011
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FDycX)$SNg{_L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2435), 1192);
      javaCharStream0.FillBuff();
      javaCharStream0.GetImage();
      char[] charArray0 = new char[3];
      charArray0[0] = '\\';
      JavaCharStream.hexval('0');
      StringReader stringReader1 = new StringReader("FDycX)$SNg{_L");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaCharStream1.adjustBeginLineColumn(0, 3751);
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1659908602910833
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, 0, (-1304));
      javaCharStream0.adjustBeginLineColumn(1, (-1304));
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 0, 1);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, (-1333), (-625));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[4];
      charArray0[0] = '(';
      charArray0[1] = 'C';
      charArray0[2] = 'Q';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(1509, 0);
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.343659488924038
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FDycX)$SNg{_L");
      StringReader stringReader1 = new StringReader("FDycX)$SNg{_L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      stringReader0.skip(1182L);
      javaCharStream0.GetImage();
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaCharStream0.adjustBeginLineColumn(90, 50);
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.13710616699451
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[4];
      charArray0[0] = '}';
      charArray0[1] = 'L';
      charArray0[2] = 'L';
      charArray0[3] = 'Q';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0);
      javaCharStream1.adjustBeginLineColumn((-992), (-1));
      JavaCharStream.hexval('E');
      javaCharStream1.GetImage();
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.5332555753496773
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FDycX)$SNg{_L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2435), 1192);
      javaCharStream0.FillBuff();
      javaCharStream0.GetImage();
      char[] charArray0 = new char[3];
      charArray0[0] = '\\';
      charArray0[1] = '';
      charArray0[2] = 'I';
      javaCharStream0.buffer = charArray0;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)28;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte) (-1);
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.7356219397587946
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("c}\"j'n'tFW");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream.hexval('5');
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      JavaCharStream.hexval('F');
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      int int0 = 187;
      javaCharStream0.inBuf = 187;
      javaCharStream0.readChar();
      char[] charArray0 = new char[2];
      charArray0[0] = '\u0000';
      charArray0[1] = '\u0000';
      javaCharStream0.buffer = charArray0;
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "Tu,@zmD)Mg";
      int int1 = 1;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.ReInit((Reader) null, 1, 89);
      javaCharStream0.available = 1;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.5670609309552819
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte) (-120));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4092, (byte) (-120), (byte) (-120));
      javaCharStream0.GetImage();
      JavaCharStream.hexval('A');
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.639031859650177
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, 0, (-1339));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)54;
      byteArray0[1] = (byte) (-19);
      byteArray0[2] = (byte) (-57);
      byteArray0[3] = (byte)89;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)94;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte) (-57));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, 990, (byte)94, 91);
      JavaCharStream.hexval('7');
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.246799205165493
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FDycX)$SNg{_L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn((byte)0, (byte)0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1738), (-3123));
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 1897, (-1785));
      StringReader stringReader1 = new StringReader("FDycX)$SNg{_L");
      javaCharStream0.ReInit((Reader) stringReader1, (int) (byte)0, (-3123));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-1), (-625));
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, (-726), 102);
      javaCharStream1.ReInit((InputStream) byteArrayInputStream0);
      javaCharStream1.ExpandBuff(false);
      JavaCharStream.hexval('3');
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3075019869780694
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 61, (byte)0, (byte)0);
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.2716118513009396
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FDycX)$SNg{_L");
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(2048);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1078, 61, (-1));
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 61, 1, 86);
      javaCharStream1.GetImage();
      JavaCharStream.hexval('c');
  }

  /**
  //Test case number: 46
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      char char0 = 'W';
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.19882157810301943
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte) (-120));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-120), 94, 98);
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-120);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("^rz^7{m;J hP1");
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      char char0 = 'J';
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
