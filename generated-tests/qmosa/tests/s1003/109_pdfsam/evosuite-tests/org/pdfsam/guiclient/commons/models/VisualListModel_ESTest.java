/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 08:59:02 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.event.HierarchyBoundsListener;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ColorConvertOp;
import java.awt.image.ComponentColorModel;
import java.awt.image.ConvolveOp;
import java.awt.image.DataBuffer;
import java.awt.image.DataBufferFloat;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.Raster;
import java.awt.image.WritableRaster;
import java.math.BigInteger;
import java.math.RoundingMode;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.PriorityQueue;
import java.util.SortedSet;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import javax.media.jai.LookupTableJAI;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.subList(0, 0, false);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 0;
      visualListModel1.rotateClockwiseElements(intArray0);
      assertFalse(visualListModel1.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 3027;
      intArray0[2] = 2999;
      intArray0[3] = 3869;
      intArray0[4] = (-686);
      intArray0[5] = 3;
      visualListModel0.subList((-686), 3, true);
      visualListModel0.getElements();
      intArray0[6] = 0;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.getValidElements();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = (-3712);
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveDownIndex(0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.subList(0, 0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((BufferedImage) null, 0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.appendAllElements(arrayDeque0);
      visualListModel0.removeElements(0, 0, false);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      intArray0[1] = 0;
      visualListModel0.reverseElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 1453);
      assertNull(collection0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 179;
      int int1 = (-2933);
      visualListModel0.subList(360, 179);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-3561), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3561
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      visualListModel0.subList(0, 0);
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[0];
      RenderingHints renderingHints0 = new RenderingHints((RenderingHints.Key) null, visualListModel0);
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(iCC_ProfileArray0, renderingHints0);
      byte[] byteArray0 = new byte[0];
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable(0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of components must  be at least 1
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1087;
      visualListModel0.getElements();
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(vector0);
      jComboBox0.getWidth();
      visualListModel0.addListDataListener(jComboBox0);
      boolean boolean0 = true;
      visualListModel0.subList(1087, 1087, true);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1087, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1087
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1588));
      int int0 = 0;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.elementsChanged();
      int int1 = 12;
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>(12);
      int[] intArray0 = new int[4];
      intArray0[0] = 12;
      intArray0[1] = (-1588);
      intArray0[2] = 0;
      intArray0[3] = 12;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1183, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1183
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      int int0 = 3011;
      intArray0[0] = 3011;
      intArray0[1] = (-1);
      intArray0[2] = 0;
      intArray0[3] = 2569;
      intArray0[4] = (-1983);
      intArray0[5] = 1;
      intArray0[6] = 0;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
      visualListModel0.moveDownIndexes(intArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>(priorityQueue0);
      AffineTransform affineTransform0 = new AffineTransform((double) 0, (double) (-1983), (double) 3011, (double) 1, (double) 1, (double) (-1983));
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, (-1631));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: -1631
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex((-863));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9722469794234416
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      visualListModel0.getSize();
      visualListModel0.getElements();
      visualListModel0.getElementAt(1);
      visualListModel0.removeElements(1, (int) integerArray0[1], false);
      visualListModel0.getElementAt(0);
      int[] intArray0 = new int[4];
      intArray0[0] = (-447);
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = (int) integerArray0[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      int int0 = (-1874);
      intArray0[0] = (-1874);
      int int1 = (-1399);
      intArray0[1] = (-1399);
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = (-3653);
      intArray0[5] = 1072;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      intArray0[6] = (-222);
      visualListModel0.reverseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.trimToSize();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      String string0 = ":^j{!qaX<";
      int[] intArray1 = new int[6];
      intArray1[0] = (-3653);
      intArray1[1] = (-222);
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = (-1399);
      intArray1[5] = (-1874);
      visualListModel0.moveUpIndexes(intArray1);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-1399), ":^j{!qaX<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElementAt(1);
      int int0 = 1;
      int int1 = (-35);
      float[] floatArray0 = new float[0];
      Kernel kernel0 = new Kernel((-35), 0, floatArray0);
      HashMap<RenderingHints.Key, String> hashMap0 = new HashMap<RenderingHints.Key, String>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0, (-35), renderingHints0);
      int int2 = 32;
      int int3 = 1007;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)18;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)0;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-35), (-6294), byteArray0, (byte)14, false, (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-1), (-1), false);
      int[] intArray0 = new int[6];
      int[] intArray1 = new int[9];
      intArray1[0] = (-1);
      intArray1[1] = (-1);
      intArray1[2] = (-1);
      intArray1[3] = (-1);
      intArray1[4] = (-1);
      intArray1[5] = (-1);
      intArray1[6] = 0;
      intArray1[7] = (-1);
      intArray1[8] = (-1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      intArray0[5] = (-1);
      visualListModel0.removeElements(intArray0, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      int int0 = (-3712);
      visualListModel0.rotateClockwiseElements(intArray0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) treeSet0);
      visualListModel0.moveDownIndex((-3712));
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(1, (-3712));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1) > toIndex(-3712)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(1983, 5, true);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 1983;
      visualListModel0.removeElements(intArray1, true);
      assertFalse(intArray1.equals((Object)intArray0));
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 3004;
      intArray0[1] = (-1);
      intArray0[2] = 0;
      intArray0[3] = 2569;
      intArray0[1] = (-1983);
      intArray0[5] = 1;
      intArray0[6] = (-7);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements((-7), (Collection<VisualPageListItem>) vector0);
      visualListModel0.moveDownIndexes(intArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>(priorityQueue0);
      AffineTransform affineTransform0 = new AffineTransform((double) (-7), (double) (-1983), (double) 3004, (double) 1, (double) 1, (double) (-1983));
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, (-1631));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: -1631
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      visualListModel0.addElement((VisualPageListItem) null);
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 3465;
      int int0 = (-865);
      visualListModel0.clearData();
      boolean boolean0 = false;
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      // Undeclared exception!
      try { 
        treeSet0.headSet((VisualPageListItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.2110688711446103
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      visualListModel0.getSize();
      visualListModel0.getElements();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = (-447);
      intArray0[2] = (int) integerArray0[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndex((int) integerArray0[1]);
      int[] intArray1 = new int[1];
      intArray1[0] = (-447);
      try { 
        visualListModel0.undeleteElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -447
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.945934775756114
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      visualListModel0.getSize();
      visualListModel0.getElements();
      visualListModel0.getElementAt(1);
      visualListModel0.removeElements(1, (int) integerArray0[1], false);
      visualListModel0.getElementAt(0);
      int[] intArray0 = new int[4];
      intArray0[0] = (-447);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(3, visualListModel0.getSize());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(intArray0, false);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      ConvolveOp convolveOp0 = new ConvolveOp((Kernel) null, 0, renderingHints0);
      visualListModel0.removeElements(814, (-1789), false);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.moveDownIndexes(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(intArray0, false);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      ConvolveOp convolveOp0 = new ConvolveOp((Kernel) null, 0, renderingHints0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)0;
      hashMap0.clear();
      byteArray0[2] = (byte) (-75);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)110;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndex((-665));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.098147389135067
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.subList((-1874), (-1874));
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      visualListModel0.removeElements((-447), (int) integerArray0[1], true);
      int[] intArray0 = new int[4];
      intArray0[0] = (int) integerArray0[0];
      intArray0[1] = (int) integerArray0[1];
      intArray0[2] = (int) integerArray0[0];
      intArray0[3] = (int) integerArray0[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = (-447);
      try { 
        visualListModel0.removeElements(intArray1, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -447
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(540, (Collection<VisualPageListItem>) vector0);
      int[] intArray0 = new int[9];
      intArray0[0] = 2569;
      intArray0[1] = (-1);
      intArray0[2] = 3011;
      intArray0[3] = 3011;
      intArray0[4] = 2569;
      intArray0[5] = 1;
      intArray0[6] = (-3749);
      intArray0[7] = 0;
      intArray0[8] = 1510;
      visualListModel0.moveDownIndexes(intArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Stack<String> stack0 = new Stack<String>();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(stack0);
      DefaultComboBoxModel<String> defaultComboBoxModel1 = new DefaultComboBoxModel<String>(stack0);
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel1);
      Vector<DefaultTableModel> vector1 = new Vector<DefaultTableModel>();
      JComboBox<DefaultTableModel> jComboBox1 = new JComboBox<DefaultTableModel>(vector1);
      visualListModel0.addListDataListener(jComboBox1);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      AffineTransform affineTransform0 = AffineTransform.getShearInstance(2569, 1323.464866);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(540, (-1), 2569);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 2569
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0253262207700673
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(intArray0, false);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      ConvolveOp convolveOp0 = new ConvolveOp((Kernel) null, 0, renderingHints0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)0;
      visualListModel0.addElementAt((VisualPageListItem) null, (byte)0);
      hashMap0.clear();
      byteArray0[2] = (byte) (-75);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)110;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndex(1);
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2623862541833204
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      visualListModel0.getSize();
      visualListModel0.getElements();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = (-447);
      intArray0[2] = (int) integerArray0[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndex((int) integerArray0[1]);
      int[] intArray1 = new int[1];
      intArray1[0] = (-447);
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.moveUpIndex(83);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(1983, 5, true);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndex(50);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.676987774322417
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      Boolean boolean0 = new Boolean(true);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      visualListModel0.getSize();
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8866967846580787
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 256;
      visualListModel0.removeElements((-3148), (-3148), true);
      visualListModel0.getValidElements();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      jComboBox0.enableInputMethods(true);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getElements();
      visualListModel0.removeElements((-2129), 2561, true);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      assertEquals(4, intArray0.length);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8200759753606213
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Collection<VisualPageListItem> collection0 = new ArrayList<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      visualListModel0.removeElements((-447), (int) integerArray0[1], true);
      int[] intArray0 = new int[4];
      intArray0[0] = (int) integerArray0[0];
      intArray0[1] = (int) integerArray0[1];
      intArray0[2] = (int) integerArray0[0];
      intArray0[3] = (int) integerArray0[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = (-447);
      try { 
        visualListModel0.removeElements(intArray1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -447
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      visualListModel0.getSize();
      visualListModel0.getElements();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = (-447);
      intArray0[2] = (int) integerArray0[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndex((int) integerArray0[1]);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndex(2);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9730014063936125
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      Boolean boolean0 = new Boolean(true);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getSize();
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.subList((int) integerArray0[0], (-447));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2147483647) > toIndex(-447)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.098147389135067
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      intArray0[0] = 39;
      visualListModel0.subList(39, 23, true);
      visualListModel0.addAllElements(39, (Collection<VisualPageListItem>) null);
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.elementChanged((VisualPageListItem) null);
      int int0 = 1;
      visualListModel0.subList(39, 1, false);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndex(1);
      visualListModel0.elementChanged((VisualPageListItem) null);
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 38
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      hashMap0.clear();
      int[] intArray0 = new int[2];
      intArray0[0] = 2498;
      intArray0[1] = (-447);
      visualListModel0.moveUpIndex(20);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      int[] intArray0 = new int[5];
      intArray0[0] = (-447);
      intArray0[1] = (-447);
      intArray0[2] = (-447);
      intArray0[3] = (int) integerArray0[1];
      intArray0[4] = (-920);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      int[] intArray1 = new int[3];
      intArray1[0] = 2;
      intArray1[1] = (-447);
      intArray1[2] = (int) integerArray0[0];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.moveUpIndex((int) integerArray0[1]);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveUpIndex(2);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.6792043316027068
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      Boolean boolean0 = new Boolean(true);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      visualListModel0.getListDataListeners();
      visualListModel0.getSize();
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.464816384890813
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer(1291);
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      Integer.compareUnsigned(1291, 1291);
      integerArray0[1] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      int int0 = 2873;
      int int1 = (-414);
      // Undeclared exception!
      try { 
        visualListModel0.subList(2873, (-414), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2873) > toIndex(-414)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[17];
      int int0 = (-447);
      Integer integer0 = new Integer((-447));
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      visualListModel0.getSize();
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.1873223188492537
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 39;
      visualListModel0.subList(39, 23, true);
      visualListModel0.addAllElements(39, (Collection<VisualPageListItem>) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.subList(39, 1, false);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndex(1);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.026229622995291
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.subList(23, 23, true);
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.subList(564, 23, false);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndex(1);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.3419942522324253
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(39, 39, true);
      visualListModel0.elementChanged((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.push((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndex(1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      int[] intArray0 = new int[1];
      intArray0[0] = 39;
      visualListModel1.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel1.updateElementAt(1, (VisualPageListItem) null);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      assertArrayEquals(new int[] {39}, intArray0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.253857589601352
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 39;
      visualListModel0.subList(39, 39, true);
      visualListModel0.addAllElements(39, (Collection<VisualPageListItem>) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.subList(39, 1, false);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndex(1);
      visualListModel0.moveUpIndex(1);
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 39
         //
         verifyException("java.util.Vector", e);
      }
  }
}
