/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 10:29:06 GMT 2018
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.Collection;
import java.util.Spliterator;
import java.util.stream.Stream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "Predicateform.print(): 0 elements";
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("Predicateform.print(): 0 elements");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("i7&g=i4/ZZmmC");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "m(;h+";
      StringReader stringReader0 = new StringReader("m(;h+");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.parseNumbers();
      JSPredicateForm jSPredicateForm0 = null;
      jSTerm0.equals((JSPredicateForm) null);
      stringReader0.read();
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.clear();
      jSPredicateForm0.toStr();
      jSPredicateForm0.print();
      jSPredicateForm0.print();
      jSPredicateForm0.equals((JSPredicateForm) null);
      jSPredicateForm0.print();
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Nl{W]=");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.print();
      stringReader0.ready();
      stringReader0.reset();
      streamTokenizer0.nval = (-2935.14580533275);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      streamTokenizer0.wordChars(0, 698);
      JSJshopVars.plus = 1299;
      JSJshopVars.equalT = (-1);
      stringReader0.close();
      JSJshopVars.rightPar = 698;
      JSSubstitution jSSubstitution0 = jSTerm0.matches(jSPredicateForm0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm1.matches(jSPredicateForm0);
      jSTerm0.equals(jSPredicateForm0);
      JSPredicateForm jSPredicateForm2 = new JSPredicateForm();
      jSPredicateForm2.matches(jSPredicateForm1);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSPredicateForm2.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.9730014063936123
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Nl{W]=");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.print();
      stringReader0.ready();
      stringReader0.reset();
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      streamTokenizer0.wordChars((-3), 698);
      stringReader0.close();
      JSSubstitution jSSubstitution0 = jSTerm0.matches(jSPredicateForm0);
      jSSubstitution0.spliterator();
      jSTerm0.matches(jSPredicateForm0, jSSubstitution0);
      jSPredicateForm0.standarizerPredicateForm();
      jSTerm0.print();
      jSPredicateForm0.print();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSTerm0.toStr();
      jSPredicateForm0.matches(jSPredicateForm1);
      jSPredicateForm0.toStr();
      jSTerm0.print();
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Nl{W]=");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.print();
      stringReader0.ready();
      stringReader0.reset();
      streamTokenizer0.wordChars(698, (-3));
      stringReader0.close();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.equals((JSPredicateForm) jSTerm1);
      JSSubstitution jSSubstitution0 = jSTerm1.matches((JSPredicateForm) jSTerm0);
      jSSubstitution0.spliterator();
      JSTerm jSTerm2 = new JSTerm();
      jSTerm2.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      // Undeclared exception!
      try { 
        jSTerm1.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "not";
      StringReader stringReader0 = new StringReader("not");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      Stream stream0 = jSTerm0.stream();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.toStr();
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.containsAll(jSPredicateForm1);
      jSSubstitution0.add((Object) stream0);
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm2.toStr();
      jSSubstitution0.removeAllElements();
      JSTerm jSTerm1 = new JSTerm();
      JSPredicateForm jSPredicateForm3 = new JSPredicateForm();
      jSPredicateForm3.print();
      jSPredicateForm1.toStr();
      JSTerm jSTerm2 = new JSTerm();
      StreamTokenizer streamTokenizer1 = null;
      JSPredicateForm jSPredicateForm4 = null;
      try {
        jSPredicateForm4 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8640435797520256
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Nl{W]=");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.stream();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.containsAll(jSTerm0);
      jSSubstitution0.add((Object) stringReader0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm0.toStr();
      jSSubstitution0.removeAllElements();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.add((Object) "Nl{W]=");
      jSPredicateForm1.print();
      jSPredicateForm0.print();
      jSTerm1.toStr();
      JSTerm jSTerm2 = new JSTerm();
      jSPredicateForm1.remove((Object) jSTerm2);
      JSTerm jSTerm3 = new JSTerm();
      jSPredicateForm0.remove((Object) streamTokenizer0);
      jSTerm1.equals((JSPredicateForm) jSTerm0);
      // Undeclared exception!
      try { 
        jSTerm3.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7379834485870498
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Nl{W]=");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.toStr();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.containsAll(jSTerm0);
      jSSubstitution0.add((Object) stringReader0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm0.toStr();
      jSSubstitution0.removeAllElements();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.add((Object) "Nl{W]=");
      jSPredicateForm1.print();
      jSPredicateForm0.print();
      System.setCurrentTimeMillis(0L);
      jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
      // Undeclared exception!
      try { 
        jSTerm1.get((-366172151));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -366172151
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7045514452672972
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pedicateform.print(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.print();
      stringReader0.ready();
      stringReader0.reset();
      streamTokenizer0.nval = (-2935.14580533275);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      streamTokenizer0.nextToken();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      jSTerm0.print();
      jSPredicateForm0.print();
      jSPredicateForm1.toStr();
      jSPredicateForm0.toStr();
      JSTerm jSTerm1 = new JSTerm();
      JSTerm jSTerm2 = new JSTerm();
      JSPredicateForm jSPredicateForm2 = null;
      try {
        jSPredicateForm2 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m(;h+");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.parseNumbers();
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      stringReader0.read();
      jSTerm0.print();
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      stringReader0.mark(1);
      jSPredicateForm0.equals((JSPredicateForm) jSTerm0);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) jSTerm0;
      objectArray0[2] = (Object) stringReader0;
      jSTerm0.add((Object) null);
      objectArray0[3] = (Object) stringReader0;
      objectArray0[4] = (Object) streamTokenizer0;
      objectArray0[5] = (Object) "m(;h+";
      jSPredicateForm0.toArray(objectArray0);
      jSTerm0.print();
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "Nl{W]=";
      StringReader stringReader0 = new StringReader("Nl{W]=");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.print();
      stringReader0.ready();
      stringReader0.reset();
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      streamTokenizer0.wordChars((-1), 698);
      stringReader0.close();
      jSTerm0.equals(jSPredicateForm0);
      JSSubstitution jSSubstitution0 = jSTerm0.matches(jSPredicateForm0);
      Spliterator spliterator0 = jSSubstitution0.spliterator();
      jSTerm0.matches(jSPredicateForm0, jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      jSTerm0.add((Object) spliterator0);
      jSTerm0.lastElement();
      Object[] objectArray0 = new Object[0];
      jSPredicateForm1.toArray(objectArray0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Vector$VectorSpliterator cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Nl{W]=");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.print();
      stringReader0.ready();
      Object object0 = jSTerm0.clone();
      jSTerm0.add(object0);
      stringReader0.reset();
      streamTokenizer0.nval = (-2935.14580533275);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      int int0 = 0;
      streamTokenizer0.wordChars(0, 698);
      JSJshopVars.plus = 1299;
      JSJshopVars.equalT = (-1);
      stringReader0.close();
      JSJshopVars.rightPar = 698;
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm1.toStr();
      JSTerm jSTerm1 = new JSTerm();
      jSPredicateForm0.remove((Object) jSPredicateForm1);
      JSTerm jSTerm2 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm2.set(0, jSPredicateForm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5047882836811908
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m(;h+");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      jSTerm0.print();
      stringReader0.ready();
      stringReader0.reset();
      jSTerm0.standarizerPredicateForm();
      streamTokenizer1.nextToken();
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      jSTerm0.print();
      jSTerm0.print();
      jSPredicateForm0.toStr();
      JSPredicateForm jSPredicateForm1 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm1.toStr();
      JSTerm jSTerm1 = new JSTerm();
      JSTerm jSTerm2 = new JSTerm();
      JSPredicateForm jSPredicateForm2 = null;
      try {
        jSPredicateForm2 = new JSPredicateForm(streamTokenizer1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k?q |F4p@Frl>`");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.addElement("not");
      jSTerm1.containsAll(jSTerm0);
      jSPredicateForm0.standarizerPredicateForm();
      jSTerm0.equals(jSPredicateForm0);
      // Undeclared exception!
      try { 
        jSTerm1.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1 >= 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.377819508039033
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m(;h+");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.print();
      stringReader0.ready();
      stringReader0.reset();
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      streamTokenizer0.nextToken();
      jSTerm0.print();
      jSTerm0.print();
      jSPredicateForm0.toStr();
      jSTerm0.toStr();
      JSTerm jSTerm1 = new JSTerm();
      stringReader0.reset();
      JSPredicateForm jSPredicateForm1 = null;
      try {
        jSPredicateForm1 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.71408754118701
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Nl{W]=");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.containsAll(jSTerm0);
      jSSubstitution0.add((Object) stringReader0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm0.toStr();
      jSSubstitution0.removeAllElements();
      jSTerm0.add((Object) "Nl{W]=");
      jSPredicateForm1.print();
      jSPredicateForm0.print();
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k?q |F4p@Frl>`");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StringBuffer stringBuffer0 = jSTerm0.toStr();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.equals(jSPredicateForm0);
      jSSubstitution0.add((Object) stringReader0);
      jSTerm0.toStr();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) jSSubstitution0;
      objectArray0[1] = (Object) jSSubstitution0;
      objectArray0[2] = (Object) stringBuffer0;
      objectArray0[3] = (Object) jSSubstitution0;
      objectArray0[4] = (Object) streamTokenizer0;
      jSPredicateForm0.toArray(objectArray0);
      jSSubstitution0.removeAllElements();
      JSTerm jSTerm1 = new JSTerm();
      jSPredicateForm0.add(objectArray0[4]);
      jSTerm0.add((Object) "k?q |F4p@Frl>`");
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StreamTokenizer cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4142790651247086
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k?q |F4p@Frl>`");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StringBuffer stringBuffer0 = jSTerm0.toStr();
      StringBuffer stringBuffer1 = jSTerm0.toStr();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.firstElement();
      jSTerm0.add((Object) stringBuffer1);
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      Object[] objectArray0 = new Object[8];
      jSPredicateForm1.print();
      jSPredicateForm1.print();
      objectArray0[0] = (Object) jSPredicateForm0;
      objectArray0[0] = (Object) jSTerm0;
      objectArray0[2] = (Object) jSTerm0;
      objectArray0[3] = (Object) streamTokenizer0;
      objectArray0[4] = (Object) stringBuffer1;
      objectArray0[5] = (Object) jSPredicateForm0;
      objectArray0[6] = (Object) stringBuffer0;
      objectArray0[7] = (Object) jSPredicateForm1;
      jSTerm0.toArray(objectArray0);
      jSPredicateForm0.applySubstitutionPF((JSSubstitution) null);
      stringReader0.markSupported();
      jSPredicateForm0.clonePF();
      JSTerm jSTerm1 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.StringBuffer cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.072016968563193
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m(NhS=");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = jSTerm0.call();
      stringReader0.reset();
      streamTokenizer0.nextToken();
      jSTerm0.print();
      jSTerm0.toStr();
      jSTerm0.toStr();
      jSTerm0.add((Object) jSTerm0);
      jSTerm1.equals((JSPredicateForm) jSTerm0);
      jSTerm1.clonePF();
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      System.setCurrentTimeMillis((-3));
      jSTerm1.clonePF();
      jSTerm1.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSTerm0.toArray((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector", e);
      }
  }
}
