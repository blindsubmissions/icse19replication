/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:07:16 GMT 2018
 */

package org.jsecurity.authc;

import org.junit.Test;
import static org.junit.Assert.*;
import java.net.InetAddress;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.jsecurity.authc.UsernamePasswordToken;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UsernamePasswordToken_ESTest extends UsernamePasswordToken_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = ']';
      charArray0[1] = 'i';
      charArray0[2] = 'Y';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken(", rememberMe=", charArray0, false);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setUsername(", rememberMe=");
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setUsername(", rememberMe=");
      InetAddress inetAddress0 = MockInetAddress.getByName(", rememberMe=");
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000'}, charArray0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("org.jsecurity.authc.UsernamePasswordToken", "org.jsecurity.authc.UsernamePasswordToken");
      char[] charArray0 = new char[4];
      usernamePasswordToken0.setUsername("org.jsecurity.authc.UsernamePasswordToken");
      charArray0[0] = 'l';
      usernamePasswordToken0.toString();
      usernamePasswordToken0.toString();
      charArray0[1] = '0';
      usernamePasswordToken0.clear();
      charArray0[2] = 'y';
      charArray0[3] = 'Q';
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.toString();
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.toString();
      assertTrue(usernamePasswordToken0.isRememberMe());
      
      usernamePasswordToken0.clear();
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setUsername("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=true");
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.getInetAddress();
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.getInetAddress();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      char[] charArray0 = new char[9];
      charArray0[0] = 'e';
      charArray0[1] = 'Y';
      charArray0[2] = '>';
      charArray0[3] = 'U';
      charArray0[4] = ']';
      charArray0[5] = '(';
      charArray0[6] = 'X';
      charArray0[7] = ' ';
      charArray0[8] = '3';
      usernamePasswordToken0.setPassword(charArray0);
      InetAddress inetAddress0 = MockInetAddress.getByName("\"LGdC");
      usernamePasswordToken0.setInetAddress(inetAddress0);
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false (\"LGdC/200.42.42.0)", string0);
      
      char[] charArray1 = usernamePasswordToken0.getPassword();
      usernamePasswordToken0.setPassword(charArray1);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("", "", false);
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.getPassword();
      boolean boolean0 = usernamePasswordToken0.isRememberMe();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      charArray0[1] = 'd';
      charArray0[2] = 'o';
      charArray0[3] = '8';
      charArray0[4] = '';
      charArray0[5] = '1';
      charArray0[6] = '+';
      charArray0[7] = '}';
      charArray0[8] = 'k';
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("Tx=$JIoDQ?E!^w=enG", charArray0, inetAddress0);
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.toString();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.setUsername("org.jsecurity.authc.UsernamePasswordToken - Tx=$JIoDQ?E!^w=enG, rememberMe=false (/192.168.1.42)");
      usernamePasswordToken0.toString();
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getInetAddress();
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.setPassword(charArray0);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getByName("I@ED|bWynf^Nu");
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("I@ED|bWynf^Nu", "I@ED|bWynf^Nu", false, inetAddress0);
      usernamePasswordToken0.getUsername();
      char[] charArray0 = new char[0];
      usernamePasswordToken0.setPassword(charArray0);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2102535776209735
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getByName("");
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("|NB4U}{i", (String) null, true, inetAddress0);
      char[] charArray0 = new char[0];
      usernamePasswordToken0.setPassword(charArray0);
      char[] charArray1 = new char[1];
      usernamePasswordToken0.setUsername("|NB4U}{i");
      charArray1[0] = 'S';
      usernamePasswordToken0.setPassword(charArray1);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.setUsername((String) null);
      usernamePasswordToken0.setPassword(charArray1);
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setPassword(charArray1);
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.setUsername("4]K9Q");
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.getUsername();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, (String) null, true);
      assertTrue(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0982737395252498
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("{sOV", "{sOV", inetAddress0);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.setUsername("{sOV");
      usernamePasswordToken0.setUsername("");
      char[] charArray0 = new char[5];
      charArray0[0] = '5';
      charArray0[1] = 'y';
      charArray0[2] = 'R';
      charArray0[3] = '|';
      charArray0[4] = 'y';
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.getInetAddress();
      usernamePasswordToken0.setPassword(charArray0);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '/';
      charArray0[1] = '+';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("OuCp(Sd60;z", charArray0);
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.setUsername("ga\fl=:Lgr-agXNN.F|");
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setUsername("OuCp(Sd60;z");
      usernamePasswordToken0.setUsername("");
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      InetAddress inetAddress1 = usernamePasswordToken0.getInetAddress();
      usernamePasswordToken0.setInetAddress(inetAddress1);
      assertArrayEquals(new char[] {'\u0000', '\u0000'}, charArray0);
  }
}
