/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 10:55:22 GMT 2018
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Properties;
import java.util.Stack;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBUtil.typesAreEquivalent((-69), (-69));
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setPasteMenuEnabled(true);
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, " limit ? ?", "#57)v1Y87zB", (String) null, 62);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      String string0 = "P;+7~2KN=l?";
      DBUtil.setLastStatementValues("P;+7~2KN=l?");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBUtil.getLastStatementValues();
      String string0 = null;
      String string1 = "2ja|";
      String string2 = ")zd3@$BR+7}";
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      assertTrue(list1.isEmpty());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = "umWJabfoIf?-~JqRk";
      String string1 = "";
      int int0 = 2535;
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "umWJabfoIf?-~JqRk", "", "umWJabfoIf?-~JqRk", 2535);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBUtil.setLastStatement("H$sA[QT/gra)R/.+A/");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      String string0 = "ALTER TABLE $tableName$ ADD $constraint$ $constraintName$ UNIQUE $index$ $indexName$ $indexType$ ($columnName;  separator=\",\"$)";
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "H$sA[QT/gra)R/.+A/", "H$sA[QT/gra)R/.+A/", "ALTER TABLE $tableName$ ADD $constraint$ $constraintName$ UNIQUE $index$ $indexName$ $indexType$ ($columnName;  separator=\",\"$)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBUtil.getLastStatement();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, (String) null, (-2025), (String) null, (-2025), (-2025), (-2025), (-2039), "1a0pP4HvS", (String) null, (-2025), 2282, "1a0pP4HvS");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "`**Z&10J8!";
      String string1 = "";
      int int0 = 2001;
      String string2 = "";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "`**Z&10J8!", "", "", 2001, "`**Z&10J8!", 2, 2, (-1920), 6, "", "", 2001, 2001, "null");
      DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.FOREIGN_KEY;
      ImageIcon imageIcon0 = new ImageIcon();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.fixCase((ISession) null, (String) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "", "", "", 1060);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", ";", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 12, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-3151), (-776), (-3151), 12, ";", "", 519, 2003, "#U/cJ");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBUtil.fixCase((ISession) null, "");
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      dBCopyPlugin1.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.dropTable("^tJ@C uCtk)q3", "catalog=", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ISession) null, false, (-776));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      DBUtil.convertObjectToTableList(linkedList0);
      String string0 = "VtwL";
      String string1 = null;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("1", "VtwL", "}O^#dIC#@{2", (String) null, (-5180), "Could not convert [", 1134, (-366), (-5282), 128, (String) null, "}O^#dIC#@{2", (-1174), (-5180), "VtwL");
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) imageIcon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBUtil.convertTableToObjectList(arrayList0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("}O^#dIC#@{2", (String) null, "}O^#dIC#@{2", "qL z6", 2004, (String) null, 1988, 2003, 1988, 2004, "//", "`<FX%0!2n", 2004, 3118, "Rfqt_ s8");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.getLastStatement();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "gin");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBUtil.typesAreEquivalent((-4), 0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, (String) null, (-4), "qL z6", 1031, 971, (-4), 3, (String) null, ")) from ", 2004, (-805), "oyWCgG");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.getLastStatement();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "`<FX%0!2n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.typesAreEquivalent((-978), (-978));
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object0 = new Object();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "G9zqQ#Rh");
      arrayList0.remove((Object) databaseObjectInfo0);
      dBCopyPlugin0.getDestDatabaseObject();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "?B`K4a";
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "d", "?B`K4a", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      ForeignKeyInfo[] foreignKeyInfoArray0 = new ForeignKeyInfo[2];
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      foreignKeyInfoArray0[0] = foreignKeyInfo0;
      foreignKeyInfoArray0[1] = foreignKeyInfo0;
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      stack0.add((IDatabaseObjectInfo) foreignKeyInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(stack0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo$MockitoMock$974698202 cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBUtil.typesAreEquivalent((-7), (-7));
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      assertEquals("Stored Procedure", databaseObjectType0.getName());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(false);
      DBUtil.typesAreEquivalent((-7), 0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "current_timestamp", (ITableInfo) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getSourceSession();
      Object object0 = new Object();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      String string0 = "{@QcU\\y, g\\sn*~";
      ArrayList<ITableInfo> arrayList1 = new ArrayList<ITableInfo>();
      DBUtil dBUtil0 = new DBUtil();
      ArrayList<ITableInfo> arrayList2 = new ArrayList<ITableInfo>();
      arrayList2.remove((Object) "{@QcUy, gsn*~");
      ITableInfo iTableInfo0 = null;
      String string1 = " vaues (0)";
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      vector0.add((ITableInfo) null);
      DBUtil.convertTableToObjectList(vector0);
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      assertTrue(stack0.isEmpty());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      boolean boolean0 = DBUtil.typesAreEquivalent(3314, 1939);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "I7lws]iNv$", "Co)", "net.sourceforge.squirrel_sql.plugins.dbcopy.gui.PreferencesPanel$3", 26, "POO`Im-Yh*I%X", (-2042), (-26), 93, 1106, "DBUtil.error.bindblobfailure", "`EV6e xkB>Pqx!W", (-1321), 93, "clob");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SCHEMA;
      DatabaseObjectType.createNewDatabaseObjectType("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.unload();
      dBCopyPlugin1.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "clob", ":xW I/A,tM}-s{)?5");
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBUtil.typesAreEquivalent(16, 6);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      TableColumnInfo tableColumnInfo0 = null;
      try {
        tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "E$K5_F+", " ", "E$K5_F+", 0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 6, 6, 0, (-7), "E$K5_F+", "E$K5_F+", 0, (-3887), "", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("decimal($p)", "", "", "0lEihKqNCQ7(G3.", 0, "M@?y~;c1&=DHb", 0, 0, 2004, 2004, "qL z6", "0lEihKqNCQ7(G3.", 0, (-2554), "");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
      
      int int0 = DBUtil.replaceDistinctDataType((-366), tableColumnInfo0, (ISession) null);
      assertEquals((-366), int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 4052, (String) null, 2, 4052, 2, 2, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2, 2, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PROCEDURE;
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[6];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[4] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[5] = (IDatabaseObjectInfo) tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      TimeZone.getAvailableIDs();
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 1601);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("!#92[g<%<.j-*%J", (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ".", (-173), "y5Sx0U !6#c9;Yxx6", (-1605), (-173), (-1605), (-1605), "t*jp&HEoJ{KTi_", (String) null, (-1605), (-1605), "fpSo.dh/l Bt[?nGT*");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      TableColumnInfo tableColumnInfo1 = (TableColumnInfo)DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
      assertEquals("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", tableColumnInfo1.getTableName());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("longvarbinary($l)", " 'goV", "s 1x}V6A", " ", (-3), (String) null, (-1710), (-2704), (-3834), 6, "null", "y3Ei9DXLM7&gTJ", 1236, (-2716), " ");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      DBUtil.replaceDistinctDataType((-1710), tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, " that matched ", "DBUtil.info.bindblobfile", "DBUtil.info.bindblobfile", (-4), "-;F{-'r", (-4), (-4), 702, (-2413), "Ga;aiy[z4[I-6", "Null item not allowed.", (-4), (-914), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.dropTable((String) null, "Null item not allowed.", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ISession) null, true, (-6));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ". Using 'max'", 91, ". Using 'max'", 91, (-816), (-816), 2591, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "3(GtOI]", 5, 32511, "org.apache.commons.cli.OptionBuilder");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getApplication();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TABLE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin3.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(91, int0);
      
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[1];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals(". Using 'max'", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DBUtil.typesAreEquivalent(0, 0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.dropTable("vfnabjX=\"juCf", "vfnabjX=\"juCf", " ADD FOREIGN KEY (", (ISession) null, false, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = "U";
      String string1 = "g)o";
      int int0 = (-588);
      String string2 = "Negative 'factor' argument.";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "7\"}=r9\">g$f", "net.n3.nanoxml.XMLWriter", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-2), "g)o", 3642, (-2), (-588), (-2789), "Negative 'factor' argument.", "U", (-2789), Integer.MIN_VALUE, (String) null);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getDestSession();
      int int1 = 2006;
      int int2 = 244;
      DBUtil.replaceDistinctDataType(244, tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("PreferencesPanel.promptForHibernate", "<$.\"LDo(_ZKS.4", "m*n8W&e7", "PreferencesPanel.promptForHibernate", 0, (String) null, (-551), (-2350), 1003, (-551), "<$.\"LDo(_ZKS.4", "^tJ@C uCtk)q3", 0, 0, "<$.\"LDo(_ZKS.4");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      Integer integer0 = new Integer(1003);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[6];
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo(" to 128.", "PreferencesPanel.promptForHibernate", (String) null, "^tJ@C uCtk)q3", (-2350), "O=o3(U&<", 0, (-2350), 0, (-1198), " to 128.", "y1", 0, 3924, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      tableColumnInfo1.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfoArray0[0] = tableColumnInfo1;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("^tJ@C uCtk)q3, PreferencesPanel.promptForHibernate, PreferencesPanel.promptForHibernate, PreferencesPanel.promptForHibernate, PreferencesPanel.promptForHibernate, PreferencesPanel.promptForHibernate", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), 4);
      assertFalse(boolean0);
      
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.unload();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(arrayList0);
      dBCopyPlugin0.setSourceDatabaseObjects(list0);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "Unexpected exception while attempting to determine if a table (", "case");
      boolean boolean1 = DBUtil.typesAreEquivalent(4, (-3));
      assertFalse(boolean1);
      
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      int int0 = DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "opt contains illegal character value '");
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getDestSession();
      String string0 = "|t]&6z[";
      boolean boolean0 = false;
      dBCopyPlugin0.setPasteMenuEnabled(false);
      int int0 = 211;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("[Evb", "ZF", "ZF", "|t]&6z[", 2006, "/", 1863, 1863, 2006, 2006, "[Evb", "U;{kN7#P+sf", 2006, 211, "ZF");
      DBUtil.replaceDistinctDataType(2006, tableColumnInfo0, (ISession) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      String string1 = "oldSQuirreLInstallDir";
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      DBUtil.typesAreEquivalent(2, 2006);
      TableInfo tableInfo0 = null;
      try {
        tableInfo0 = new TableInfo("U;{kN7#P+sf", "|t]&6z[", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "oldSQuirreLInstallDir", "|t]&6z[", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      dBCopyPlugin0.getDestSession();
      DBUtil.typesAreEquivalent(3, 3);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "D!~8n>$Q2Z{W.zHT&KZ");
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(3);
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier0);
      assertEquals("", sQLDriver0.getName());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getApplication();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "O4u)?yl{\f0a~;42Mh", (String) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 2011);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("The number of category keys does not match the number of categories in the data.", "The number of category keys does not match the number of categories in the data.", "?#u=v<m ", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 3, "?#u=v<m ", 3, 3, 3, 3, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "The number of category keys does not match the number of categories in the data.", 3, 3, "?#u=v<m ");
      DatabaseObjectType.createNewDatabaseObjectType("The number of category keys does not match the number of categories in the data.");
      DatabaseObjectType.createNewDatabaseObjectType("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF_TYPE_DBO;
      DBUtil.typesAreEquivalent(3, 2);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PROCEDURE;
      assertFalse(databaseObjectType1.equals((Object)databaseObjectType2));
  }
}
