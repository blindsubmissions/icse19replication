/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 10:55:19 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.RenderingHints;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.IndexColorModel;
import java.awt.image.renderable.ParameterBlock;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Predicate;
import javax.media.jai.CollectionImage;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.event.ListDataListener;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 4047;
      intArray0[1] = 4047;
      intArray0[2] = 4047;
      intArray0[3] = 4047;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getElementAt(4047);
      visualListModel0.subList(4047, 4047, false);
      int[] intArray1 = new int[7];
      intArray1[0] = 4047;
      intArray1[1] = 4047;
      intArray1[2] = 4047;
      intArray1[3] = 4047;
      intArray1[4] = 4047;
      intArray1[5] = 4047;
      intArray1[6] = 4047;
      visualListModel0.undeleteElements(intArray1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      int int1 = 810;
      boolean boolean0 = false;
      visualListModel0.removeElements(0, 810, false);
      int[] intArray0 = new int[6];
      intArray0[0] = 810;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 810;
      intArray0[5] = 810;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.getElementAt(2907);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.data = vector0;
      int[] intArray0 = new int[8];
      intArray0[0] = 46;
      visualListModel0.rotateClockwiseElements(intArray0);
      intArray0[1] = 180;
      intArray0[2] = 630;
      intArray0[3] = (-461);
      intArray0[4] = (-1319);
      intArray0[5] = (-1);
      intArray0[6] = 639;
      intArray0[7] = 0;
      visualListModel0.removeElements(intArray0, false);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[2];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(defaultTableModelArray0, 1);
      defaultTableModelArray0[0] = defaultTableModel0;
      Object[][] objectArray0 = new Object[7][5];
      objectArray0[0] = (Object[]) defaultTableModelArray0;
      objectArray0[1] = (Object[]) defaultTableModelArray0;
      objectArray0[2] = (Object[]) defaultTableModelArray0;
      Object[] objectArray1 = new Object[6];
      objectArray1[0] = (Object) visualListModel0;
      objectArray1[1] = (Object) defaultTableModel0;
      objectArray1[2] = (Object) defaultTableModel0;
      objectArray1[3] = (Object) defaultTableModel0;
      objectArray1[4] = (Object) visualListModel0;
      objectArray1[5] = (Object) defaultTableModel0;
      objectArray0[3] = objectArray1;
      objectArray0[4] = (Object[]) defaultTableModelArray0;
      objectArray0[5] = (Object[]) defaultTableModelArray0;
      objectArray0[6] = (Object[]) defaultTableModelArray0;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(objectArray0, objectArray0[5]);
      defaultTableModelArray0[1] = defaultTableModel1;
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>(defaultTableModelArray0);
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.moveDownIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.appendAllElements(vector0);
      visualListModel0.removeElements(1, 1, true);
      intArray0[0] = 1;
      intArray0[1] = (-198);
      JComboBox<VisualPageListItem> jComboBox1 = new JComboBox<VisualPageListItem>();
      visualListModel0.addListDataListener(jComboBox1);
      intArray0[2] = 5;
      intArray0[3] = (-1);
      intArray0[4] = 1;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.getSize();
      visualListModel0.appendAllElements(vector0);
      visualListModel0.subList(1, 3952, true);
      visualListModel0.setData(vector0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1472;
      intArray0[3] = (-2724);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.subList(1, 1);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-211), (-211), false);
      int[] intArray0 = new int[7];
      int int0 = (-199);
      visualListModel0.elementsChanged();
      visualListModel0.data = null;
      intArray0[0] = (-199);
      int int1 = 1;
      intArray0[1] = 1;
      int int2 = 2897;
      Collection<VisualPageListItem> collection0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndex(1552);
      int int0 = 247;
      intArray0[0] = 247;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualListModel0.rotateClockwiseElements(intArray0);
      String string0 = null;
      visualListModel0.data.parallelStream();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-1748), (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(hashSet0);
      visualListModel0.clearData();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1662;
      intArray0[4] = 164;
      intArray0[5] = 0;
      intArray0[6] = 0;
      visualListModel0.undeleteElements(intArray0);
      assertArrayEquals(new int[] {0, 0, 0, 1662, 164, 0, 0}, intArray0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-2781);
      visualListModel0.subList((-2781), (-2781));
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      visualListModel0.appendAllElements(vector0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance((-2781));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.559581156259877
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-2673);
      visualListModel0.moveDownIndexes(intArray0);
      intArray0[1] = 1000;
      intArray0[2] = 3157;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 5204;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.moveUpIndex(3157);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      visualListModel0.subList(645, 645);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int int0 = 0;
      visualListModel0.moveUpIndex(0);
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.removeElements(91, 4037, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getElements();
      visualListModel0.getElements();
      int[] intArray0 = new int[7];
      intArray0[0] = 13;
      intArray0[1] = (-1);
      intArray0[2] = (-737);
      intArray0[3] = (-47);
      intArray0[4] = 0;
      intArray0[5] = (-1150);
      intArray0[6] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-2673);
      visualListModel0.moveDownIndexes(intArray0);
      intArray0[1] = 996;
      intArray0[2] = 3157;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 5204;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.subList(0, 996, false);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-2673), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2673
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3066687254045313
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      arrayDeque0.parallelStream();
      visualListModel0.addAllElements(131, (Collection<VisualPageListItem>) arrayDeque0);
      int[] intArray0 = new int[2];
      intArray0[0] = 148;
      intArray0[1] = 1499;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.subList(131, 107);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData(visualPageListItemArray0);
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 1500
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8866967846580784
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      intArray0[0] = 0;
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-59);
      byteArray0[3] = (byte) (-1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel0.removeElements(intArray0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-2673);
      int[] intArray1 = new int[3];
      intArray1[0] = (-2673);
      intArray1[1] = (-2673);
      intArray1[2] = 4047;
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.updateElementAt((-2673), (VisualPageListItem) null);
      int[] intArray2 = new int[9];
      intArray2[0] = 5204;
      intArray2[1] = 5204;
      intArray2[2] = 5204;
      intArray2[3] = 4047;
      intArray2[4] = (-2673);
      intArray2[5] = 5204;
      intArray2[6] = 1000;
      intArray2[7] = 5204;
      intArray2[8] = 0;
      visualListModel0.removeElements(intArray2, true);
      visualListModel0.moveUpIndex(4);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(4, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 4
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6674619334292946
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-2666);
      int[] intArray0 = new int[1];
      intArray0[0] = (-2666);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveUpIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      JTable.PrintMode jTable_PrintMode0 = JTable.PrintMode.FIT_WIDTH;
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual((Object) jTable_PrintMode0);
      predicate0.negate();
      linkedHashSet0.removeIf(predicate0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2666
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.031759218569271
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      intArray0[0] = 0;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.removeElements(intArray0, true);
      visualListModel0.moveUpIndex((-106));
      VisualListModel visualListModel2 = new VisualListModel();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.getElementAt(3303);
      // Undeclared exception!
      try { 
        visualListModel1.getElementAt((-106));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -106
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 3952;
      intArray0[1] = 1281;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndex(1281);
      visualListModel0.moveDownIndex(1024);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6326309271543518
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) arrayList0);
      visualListModel0.getElements();
      Integer integer0 = new Integer(0);
      Integer.toUnsignedString((-504));
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      arrayList0.removeIf(predicate0);
      boolean boolean0 = false;
      visualListModel0.removeElements(0, 0, false);
      visualListModel0.subList(0, 2706, false);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayList0);
      int int0 = 2212;
      visualListModel0.removeElements(924, (-1), false);
      int int1 = 0;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(261, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 0
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-2673);
      int[] intArray1 = new int[3];
      intArray0[2] = (-2673);
      intArray1[1] = (-2673);
      intArray1[2] = 4047;
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.updateElementAt((-2673), (VisualPageListItem) null);
      int[] intArray2 = new int[9];
      intArray2[0] = 5204;
      intArray2[1] = 5204;
      intArray2[2] = 5204;
      visualListModel0.undeleteElements(intArray2);
      visualListModel0.moveUpIndex(5204);
      visualListModel0.moveDownIndex((-1695));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-2673);
      int[] intArray1 = new int[3];
      intArray0[2] = (-2673);
      intArray1[1] = (-2673);
      intArray1[2] = 4047;
      visualListModel0.moveDownIndexes(intArray1);
      int int0 = 0;
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.updateElementAt((-2673), (VisualPageListItem) null);
      visualListModel0.moveUpIndex(4);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-2781));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2781
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements(Integer.MIN_VALUE, (Collection<VisualPageListItem>) null);
      visualListModel0.getElements();
      int int0 = 0;
      int int1 = 360;
      Integer integer0 = new Integer(360);
      int int2 = (-504);
      Integer.toUnsignedString(360);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.removeIf(predicate0);
      boolean boolean0 = false;
      visualListModel0.subList(289, 2706, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) arrayList0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(289, 2410, 220);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 220
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.getElements();
      visualListModel0.moveDownIndex(65535);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.863679987341
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-2673);
      int[] intArray1 = new int[3];
      intArray0[2] = (-2673);
      intArray1[1] = (-2673);
      intArray1[1] = 4047;
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.updateElementAt(4047, (VisualPageListItem) null);
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.removeElements(1, 0, true);
      visualListModel0.getValidElements();
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-3294), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-3294)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0467385326945515
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      int[] intArray0 = new int[9];
      intArray0[0] = 7;
      intArray0[1] = 242;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 0;
      visualListModel0.moveDownIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.prependAllElements(stack0);
      visualListModel0.getValidElements();
      visualListModel0.moveUpIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayList0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.prependAllElements(linkedHashSet0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-2666);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveUpIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      linkedHashSet0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8462202193216333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = (-2666);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveUpIndexes(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      visualListModel0.addListDataListener((ListDataListener) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      try { 
        visualListModel0.reverseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2666
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      linkedList0.containsAll(arrayList0);
      visualListModel0.removeElements((-1530), (-1530), false);
      visualListModel0.addAllElements((-882), (Collection<VisualPageListItem>) linkedList0);
      int[] intArray0 = new int[9];
      visualListModel0.subList(10, 8, true);
      intArray0[0] = (-882);
      intArray0[1] = (-882);
      intArray0[2] = (-882);
      intArray0[3] = (-882);
      intArray0[4] = (-882);
      intArray0[5] = (-882);
      intArray0[6] = (-882);
      intArray0[7] = (-882);
      intArray0[8] = (-882);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int int0 = (-1);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(4098, (-882), (-882));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -882
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.9686932085049353
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.subList(0, 0, true);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndex(0);
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      visualListModel0.reverseElements(intArray1);
      Collection<VisualPageListItem> collection0 = null;
      Class<VisualPageListItem> class0 = VisualPageListItem.class;
      // Undeclared exception!
      try { 
        visualListModel0.getListeners((Class) class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.pdfsam.guiclient.dto.VisualPageListItem; cannot be cast to [Ljava.util.EventListener;
         //
         verifyException("javax.swing.event.EventListenerList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9459101490553132
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-2673);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveUpIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      linkedHashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray1 = new int[0];
      visualListModel1.rotateClockwiseElements(intArray1);
      visualListModel1.reverseElements(intArray1);
      visualListModel0.undeleteElements(intArray0);
      assertNotSame(intArray0, intArray1);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      visualListModel1.reverseElements(intArray1);
      int[] intArray2 = new int[0];
      visualListModel1.moveDownIndexes(intArray2);
      visualListModel1.moveUpIndex(0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.reverseElements(intArray2);
      int int0 = 478;
      int int1 = 10000;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(10000, "X&S#?10&FJ&sf}7 x[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0735428464085233
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) arrayList0);
      visualListModel0.getElements();
      int[] intArray0 = null;
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.394700405858334
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      arrayDeque0.parallelStream();
      visualListModel0.addAllElements(131, (Collection<VisualPageListItem>) arrayDeque0);
      int[] intArray0 = new int[2];
      intArray0[1] = 1499;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.subList(131, 107);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0253262207700673
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual((Object) null);
      predicate0.negate();
      linkedHashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) treeSet0);
      int[] intArray1 = new int[0];
      visualListModel1.reverseElements(intArray1);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateClockwiseElements(intArray1);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.moveUpIndexes(intArray1);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel3.reverseElements(intArray0);
      visualListModel2.undeleteElements(intArray1);
      assertEquals(0, visualListModel2.getSize());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9915093613566135
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveUpIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.prependAllElements(linkedHashSet0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 2313;
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Predicate.isEqual((Object) linkedHashSet0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      int[] intArray1 = new int[5];
      intArray1[0] = 2313;
      intArray1[1] = 2313;
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.rotateClockwiseElements(intArray1);
      int[] intArray2 = new int[0];
      visualListModel0.reverseElements(intArray2);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2313
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.updateElementAt((-2994), (VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel1.undeleteElements(intArray0);
      assertNotSame(visualListModel1, visualListModel0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndex((-1));
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray1 = new int[7];
      intArray1[0] = (-1);
      intArray1[1] = (-1);
      intArray1[2] = (-1);
      intArray1[3] = (-1);
      intArray1[4] = 2675;
      intArray1[5] = 2675;
      intArray1[6] = (-1);
      visualListModel1.rotateClockwiseElements(intArray1);
      int[] intArray2 = new int[0];
      visualListModel0.moveUpIndexes(intArray2);
      visualListModel0.rotateClockwiseElements(intArray2);
      visualListModel0.reverseElements(intArray0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.removeElements(intArray2, false);
      assertNotSame(visualListModel0, visualListModel1);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      visualListModel0.moveUpIndex((-4214));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[2];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.moveDownIndex((-4214));
      assertNotSame(visualListModel3, visualListModel1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[2];
      int int0 = (-24);
      visualListModel0.moveDownIndexes(intArray0);
      int int1 = (-337);
      visualListModel0.moveUpIndex((-337));
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.6094379124341003
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 2322;
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2321
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.253857589601352
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 2322;
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(3, visualListModel0.getSize());
      
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel1.reverseElements(intArray0);
      visualListModel1.reverseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveUpIndexes(intArray0);
      int[] intArray1 = new int[7];
      intArray1[0] = 2322;
      intArray1[1] = 2322;
      intArray1[2] = 2322;
      intArray1[3] = 2322;
      intArray1[4] = 2322;
      intArray1[5] = 2322;
      intArray1[6] = 2322;
      visualListModel1.rotateClockwiseElements(intArray1);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel2.reverseElements(intArray1);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.undeleteElements(intArray1);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      visualListModel1.setData(vector0);
      assertEquals(1, visualListModel1.getSize());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.6023807799324823
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 149;
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      arrayDeque0.spliterator();
      visualListModel0.addAllElements(149, (Collection<VisualPageListItem>) arrayDeque0);
      int[] intArray0 = new int[2];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.subList(149, 1499);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndex(1499);
      visualListModel0.getElements();
      visualListModel0.updateElementAt(148, visualPageListItemArray0[1]);
      visualListModel0.getElementAt(148);
      visualListModel0.moveDownIndex(148);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }
}
