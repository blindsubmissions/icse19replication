/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:17:09 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "XD;Q#a[mQcRh");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent(";{f");
      outputFormat0.setNewlines(false);
      outputFormat0.setLineSeparator("");
      outputFormat0.setXHTML(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("Z0vGZgv),i\"");
      outputFormat1.setPadText(true);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setEncoding("{@4l}9zuo<^g");
      outputFormat2.setNewlines(false);
      assertEquals("{@4l}9zuo<^g", outputFormat2.getEncoding());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('9');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (9)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "50,QHsCy-g^LF2U/";
      boolean boolean0 = false;
      OutputFormat outputFormat0 = new OutputFormat("50,QHsCy-g^LF2U/", false);
      int int0 = 0;
      outputFormat0.setPadText(false);
      outputFormat0.setLineSeparator("{,Y3AGGWNki %");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "50,QHsCy-g^LF2U/";
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('A');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (A)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      assertEquals("", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("s,jn[~+>0>W.&VYm=");
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("s,jn[~+>0>W.&VYm=", outputFormat0.getIndent());
      assertFalse(boolean0);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setSuppressDeclaration(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setOmitEncoding(false);
      outputFormat1.setXHTML(false);
      outputFormat0.setEncoding("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat1.setExpandEmptyElements(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat1.setIndentSize(0);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setOmitEncoding(false);
      outputFormat2.setLineSeparator("");
      outputFormat2.setIndentSize(0);
      outputFormat2.setPadText(false);
      outputFormat2.setSuppressDeclaration(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getEncoding();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("9-.(}jff e'tu|a9X/F");
      String[] stringArray0 = new String[3];
      boolean boolean0 = false;
      outputFormat0.setExpandEmptyElements(false);
      stringArray0[0] = "9-.(}jff e'tu|a9X/F";
      OutputFormat.createCompactFormat();
      stringArray0[1] = "9-.(}jff e'tu|a9X/F";
      stringArray0[2] = "9-.(}jff e'tu|a9X/F";
      int int0 = (-722);
      outputFormat0.setExpandEmptyElements(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-722));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -722
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = false;
      OutputFormat outputFormat0 = new OutputFormat("gs{%,", false, "gs{%,");
      String string0 = "";
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "gs{%,";
      stringArray0[4] = "";
      stringArray0[5] = "gs{%,";
      stringArray0[6] = "";
      stringArray0[7] = "gs{%,";
      outputFormat0.parseOptions(stringArray0, 1241);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('l');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (l)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("");
      outputFormat0.setNewlines(false);
      outputFormat1.setEncoding("");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isPadText();
      outputFormat0.setTrimText(false);
      outputFormat0.setIndent("");
      outputFormat1.setEncoding("");
      outputFormat0.isOmitEncoding();
      outputFormat1.setLineSeparator("(*qZQA[Hp4yj3p! AR");
      outputFormat1.getIndent();
      assertEquals("(*qZQA[Hp4yj3p! AR", outputFormat1.getLineSeparator());
      
      OutputFormat.createPrettyPrint();
      outputFormat0.setExpandEmptyElements(false);
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewlines(false);
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = ".J8W( 9RD7%uK=e";
      stringArray0[1] = ".J8W( 9RD7%uK=e";
      stringArray0[2] = ".J8W( 9RD7%uK=e";
      stringArray0[3] = ".J8W( 9RD7%uK=e";
      stringArray0[4] = ".J8W( 9RD7%uK=e";
      outputFormat1.parseOptions(stringArray0, 2);
      outputFormat0.setLineSeparator(".J8W( 9RD7%uK=e");
      outputFormat0.setNewLineAfterNTags((-1019));
      outputFormat0.setPadText(false);
      outputFormat0.setIndentSize(34);
      outputFormat0.isXHTML();
      outputFormat0.setOmitEncoding(true);
      outputFormat1.getEncoding();
      outputFormat0.isPadText();
      outputFormat1.isPadText();
      outputFormat0.getIndent();
      assertEquals((-1019), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("^03", false);
      outputFormat0.setIndent(true);
      outputFormat0.setEncoding("^03");
      outputFormat0.getEncoding();
      outputFormat0.setXHTML(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('_');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (_)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-47));
      outputFormat0.setNewlines(false);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.isTrimText();
      outputFormat0.setTrimText(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setEncoding("K");
      outputFormat0.setSuppressDeclaration(true);
      boolean boolean0 = outputFormat0.isXHTML();
      assertEquals((-47), outputFormat0.getNewLineAfterNTags());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false);
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "";
      stringArray0[3] = "OmZz-<.\":\"bzc";
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      outputFormat0.parseOptions(stringArray0, 1594);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterNTags(3098);
      outputFormat0.setNewLineAfterNTags(39);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getLineSeparator();
      outputFormat0.setXHTML(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setXHTML(false);
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize((-1));
      outputFormat0.setIndentSize(39);
      outputFormat1.setNewLineAfterNTags((-1));
      outputFormat0.setEncoding("");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getAttributeQuoteCharacter();
      assertEquals(39, outputFormat0.getNewLineAfterNTags());
      
      outputFormat1.getIndent();
      outputFormat1.setOmitEncoding(false);
      int int0 = outputFormat1.getNewLineAfterNTags();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewlines(false);
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = ".J8W( 9RD7%uK=e";
      stringArray0[1] = ".J8W( 9RD7%uK=e";
      stringArray0[2] = ".J8W( 9RD7%uK=e";
      stringArray0[3] = ".J8W( 9RD7%uK=e";
      stringArray0[4] = ".J8W( 9RD7%uK=e";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setLineSeparator(".J8W( 9RD7%uK=e");
      outputFormat0.setNewLineAfterNTags((-1019));
      outputFormat0.setXHTML(true);
      outputFormat1.setExpandEmptyElements(false);
      OutputFormat outputFormat2 = new OutputFormat(".J8W( 9RD7%uK=e", true);
      outputFormat2.setEncoding("x2Une`q'\"");
      outputFormat2.setIndentSize(4140);
      outputFormat2.getIndent();
      outputFormat0.setXHTML(true);
      assertEquals(".J8W( 9RD7%uK=e", outputFormat0.getLineSeparator());
      
      outputFormat1.setOmitEncoding(true);
      OutputFormat outputFormat3 = new OutputFormat("p,&2O)J$Tv_", true, "");
      outputFormat3.setIndentSize((-2732));
      boolean boolean0 = outputFormat1.isNewlines();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("vP'nQW'sx9 2%");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setIndent("vP'nQW'sx9 2%");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "vP'nQW'sx9 2%";
      stringArray0[1] = "vP'nQW'sx9 2%";
      stringArray0[2] = "-xhtml{tL*pJ!";
      stringArray0[3] = "vP'nQW'sx9 2%";
      stringArray0[4] = "vP'nQW'sx9 2%";
      stringArray0[5] = "vP'nQW'sx9 2%";
      stringArray0[6] = "vP'nQW'sx9 2%";
      int int0 = outputFormat0.parseOptions(stringArray0, 39);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(39, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("ysXr7]]?");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "{tL*pJ!";
      stringArray0[1] = "org.dom4j.io.OutputFormat";
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[1];
      outputFormat0.setIndent("X(");
      stringArray1[0] = "X(";
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setIndentSize((-1884279101));
      outputFormat0.setIndent("org.dom4j.io.OutputFormat");
      outputFormat0.parseOptions(stringArray1, 0);
      assertEquals("org.dom4j.io.OutputFormat", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[2];
      outputFormat2.setTrimText(true);
      stringArray0[0] = "ody27";
      stringArray0[1] = "";
      int int0 = outputFormat2.parseOptions(stringArray0, 0);
      assertEquals(0, int0);
      
      outputFormat0.setNewlines(true);
      outputFormat2.setTrimText(true);
      outputFormat0.setNewlines(true);
      outputFormat2.setIndentSize(0);
      assertEquals("\n", outputFormat2.getLineSeparator());
      
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat2.setLineSeparator((String) null);
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals('\"', char0);
      
      outputFormat0.setAttributeQuoteCharacter('\"');
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("\n", string0);
      
      outputFormat0.setLineSeparator((String) null);
      outputFormat1.setLineSeparator((String) null);
      assertEquals("  ", outputFormat1.getIndent());
      assertTrue(outputFormat1.isTrimText());
      assertTrue(outputFormat1.isPadText());
      
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(boolean0);
      
      outputFormat2.setEncoding((String) null);
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("", outputFormat0.getIndent());
      assertFalse(outputFormat0.isXHTML());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      
      outputFormat2.setAttributeQuoteCharacter('\"');
      assertFalse(outputFormat2.isPadText());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertFalse(outputFormat2.isNewlines());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertEquals("", outputFormat2.getIndent());
      assertTrue(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isOmitEncoding());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.829650384543406
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("-xhtmlZ&$3^-(kCjl6(");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewlines(false);
      outputFormat1.setIndent(false);
      outputFormat1.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setNewlines(true);
      outputFormat2.setLineSeparator("");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-xhtmlZ&$3^-(kCjl6(";
      stringArray0[1] = "";
      stringArray0[2] = "-xhtmlZ&$3^-(kCjl6(";
      stringArray0[3] = "!K%x;#+E{!+Dwf";
      stringArray0[4] = "";
      stringArray0[5] = "";
      outputFormat2.parseOptions(stringArray0, 2);
      outputFormat2.setLineSeparator("");
      outputFormat1.setNewLineAfterNTags(2);
      assertEquals(2, outputFormat1.getNewLineAfterNTags());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0253262207700673
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("zf?C.J}+Z");
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty=W hqv", false, "{tL*pJ!");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "zf?C.J}+Z";
      stringArray0[1] = "-expandEmpty=W hqv";
      stringArray0[2] = "org.dom4j.io.OutputFormat";
      stringArray0[3] = "-expandEmpty=W hqv";
      outputFormat0.parseOptions(stringArray0, 13);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("zf?C.J}+Z", outputFormat0.getIndent());
      
      outputFormat1.parseOptions(stringArray0, 1612);
      OutputFormat outputFormat2 = new OutputFormat("h-,F7y~4 va xgDXKr", true, "^6c#^:");
      int int0 = outputFormat2.parseOptions(stringArray0, 0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7787475133823718
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "}j#nYXz`pbeO`";
      stringArray0[1] = "}j#nYXz`pbeO`";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.getNewLineAfterNTags();
      outputFormat1.setSuppressDeclaration(false);
      OutputFormat outputFormat2 = new OutputFormat("!; $h");
      outputFormat2.parseOptions(stringArray0, 0);
      outputFormat0.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0379083330628327
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("ysXr7]]?", true);
      outputFormat0.setLineSeparator("Bmj]4KXC!,WJCV{^6");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "A7r-gM";
      stringArray0[1] = "-expandEmpty{tL*pJ!";
      stringArray0[2] = "A7r-gM";
      stringArray0[3] = "ysXr7]]?";
      stringArray0[4] = "\"LbWp%Edcq8BP";
      stringArray0[5] = "^6c#^:YehrKl";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "\"LbWp%Edcq8BP";
      stringArray1[1] = "-trimText";
      stringArray1[2] = "ysXr7]]?";
      stringArray1[3] = "^6c#^:YehrKl";
      stringArray1[4] = "\"LbWp%Edcq8BP";
      stringArray1[5] = "ysXr7]]?";
      stringArray1[6] = "ysXr7]]?";
      stringArray1[7] = "A7r-gM";
      outputFormat0.parseOptions(stringArray1, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 2);
      OutputFormat outputFormat1 = new OutputFormat("ysXr7]]?");
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat1.parseOptions(stringArray0, 2);
      outputFormat1.parseOptions(stringArray0, 2131);
      outputFormat0.parseOptions(stringArray1, 2268);
      assertEquals("Bmj]4KXC!,WJCV{^6", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7075391741350712
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = new OutputFormat("}j#nYXz`pbeO`", false, "}j#nYXz`pbeO`");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "}j#nYXz`pbeO`";
      stringArray0[1] = "}j#nYXz`pbeO`";
      boolean boolean0 = true;
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[7];
      stringArray1[0] = "}j#nYXz`pbeO`";
      stringArray1[1] = "-indentSize";
      stringArray1[2] = "";
      stringArray1[3] = "}j#nYXz`pbeO`";
      stringArray1[4] = "lQLqT^{s#'zHJvl";
      stringArray1[5] = "-indentSize";
      stringArray1[6] = "-indentSize";
      outputFormat1.parseOptions(stringArray1, 34);
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray1, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.1152090707897355
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("=W hqvLM,MA ]L");
      outputFormat0.setEncoding("-indent");
      String string0 = "";
      OutputFormat outputFormat1 = new OutputFormat("-expandEmptyZ&$3^-(kCjl6(", true, "-xhtmlZ&$3^-(kCjl6(");
      int int0 = 1;
      String[] stringArray0 = new String[4];
      stringArray0[3] = "-indent";
      stringArray0[1] = "-encoding";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.2337673247041645
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-padText");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-padText";
      stringArray0[1] = "-padText";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setIndent(true);
      String[] stringArray1 = null;
      boolean boolean0 = false;
      outputFormat0.setXHTML(false);
      outputFormat0.setExpandEmptyElements(true);
      int int0 = 2935;
      outputFormat0.setLineSeparator("-padText");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 2935);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.908908734898781
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("ysXr7]]?", true);
      outputFormat0.setLineSeparator("2sc;=?2WgoC2'e^#-!R");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmpty=W hqvLM,MA ]L";
      stringArray0[1] = "-expandEmpty{tL*pJ!";
      stringArray0[2] = "-expandEmpty=W hqvLM,MA ]L";
      stringArray0[3] = "7sXr7]]";
      stringArray0[4] = "\"LbWp%Edcq8BP";
      stringArray0[5] = "^6c#^:YehrKl";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "\"LbWp%Edcq8BP";
      stringArray1[1] = "-trimText";
      stringArray1[2] = "7sXr7]]";
      stringArray1[4] = "7sXr7]]";
      stringArray1[5] = "7sXr7]]";
      stringArray1[6] = "ysXr7]]?";
      outputFormat0.parseOptions(stringArray1, 1);
      String[] stringArray2 = new String[1];
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray2, 2);
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray3 = new String[3];
      stringArray3[0] = "-lineSeparator";
      stringArray3[1] = "ysXr7]]?";
      stringArray3[2] = "";
      int int0 = outputFormat0.parseOptions(stringArray3, 0);
      assertEquals("ysXr7]]?", outputFormat0.getLineSeparator());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-suppressDeclaration";
      stringArray0[1] = "";
      stringArray0[2] = "Ote#\"m";
      stringArray0[3] = "";
      stringArray0[4] = "@Kn&";
      stringArray0[5] = "Jbq2\"Wn";
      stringArray0[6] = ">a*\"a5";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertEquals(1, int0);
  }
}
