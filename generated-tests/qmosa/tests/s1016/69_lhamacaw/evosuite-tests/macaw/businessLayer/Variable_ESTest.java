/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:10:35 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setQuestionNumber("G*t\"P/pXD;Q#a[mQc");
      derivedVariable0.getColumnStart();
      derivedVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setIsNewRecord(false);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      User user0 = new User();
      user0.setAffiliation("G*t\"P/pXD;Q#a[mQc");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.setCleaningStatus("*u");
      rawVariable0.isNewRecord();
      rawVariable0.setNotes("");
      derivedVariable0.getColumnEnd();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("G*t\"P/pXD;Q#a[mQc", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("variable.alternativeVariable.label");
      supportingDocument0.setFileName((String) null);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setForm("g^LF2U/)MI`n.2nso");
      rawVariable0.setCoded(true);
      rawVariable0.setIsNewRecord(true);
      rawVariable0.getForm();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaned(true);
      User user0 = new User();
      user0.setCounty(",jn");
      user0.setAddressLine1("g^LF2U/)MI`n.2nso");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User((String) null, (String) null);
      user0.setUserID((String) null);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCoded(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(0);
      derivedVariable0.setCoded(true);
      ontologyTerm1.clone();
      derivedVariable0.setIdentifier((-1543));
      ontologyTerm1.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.getName();
      derivedVariable0.isNewRecord();
      derivedVariable0.setQuestionNumber("NVpJ$@D0");
      derivedVariable0.getFilePath();
      derivedVariable0.setCodeBookNumber("Yg\"0n8*EE3C");
      int int0 = derivedVariable0.getIdentifier();
      assertTrue(derivedVariable0.isCoded());
      assertEquals((-1543), int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setCleaningDescription((String) null);
      User user0 = new User("", "<");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.removeValueLabel((ValueLabel) null);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setIdentifier(0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.clone();
      rawVariable0.addOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>(2354);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      arrayList1.add(derivedVariable2);
      arrayList0.addAll((Collection<? extends Variable>) arrayList1);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.addSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setIdentifier(7);
      derivedVariable0.getNotes();
      derivedVariable0.isNewRecord();
      derivedVariable0.getCleaningDescription();
      assertEquals(7, derivedVariable0.getIdentifier());
      
      derivedVariable2.getCleaningDescription();
      assertFalse(derivedVariable2.isNewRecord());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      User user0 = new User();
      user0.setPostCode("|nYqyQ}4iEOl");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "";
      derivedVariable1.addSupportingDocument((SupportingDocument) null);
      derivedVariable1.setCodeBookNumber((String) null);
      Variable.validateFields(rawVariable0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable2);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable2.addOntologyTerm(ontologyTerm0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable2);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      valueLabel0.getDisplayName();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getForm();
      derivedVariable0.setName("p7s J){/`lm^K0.a");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.setForm("-Ok");
      derivedVariable0.getNotes();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        arrayList0.subList((-1146), (-1146));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -1146
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm(",iYj[e'M(t$Lr&");
      derivedVariable0.setCleaningDescription("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.stream();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList1.ensureCapacity(0);
      arrayList1.add((Variable) derivedVariable0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList1.sort(comparator0);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getAlternativeVariable();
      assertEquals(",iYj[e'M(t$Lr&", derivedVariable0.getForm());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.iterator();
      arrayList0.clone();
      derivedVariable0.setCategory("Pl2QT");
      // Undeclared exception!
      try { 
        arrayList0.remove(856);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 856, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      User user0 = new User("N'0M#qQ.i", "");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      arrayList0.containsAll(arrayList1);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("P8h6#h2QIY!t%");
      derivedVariable0.codeBookNumber = "P8h6#h2QIY!t%";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("P8h6#h2QIY!t%");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      derivedVariable0.getColumnEnd();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm0.setIdentifier(0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.setFilePath("variable.notes.label");
      boolean boolean0 = derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertEquals("variable.notes.label", derivedVariable1.getFilePath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "}Ymwx.q{ndBRR63}";
      rawVariable0.getDisplayItemIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.columnEnd = "0";
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      arrayList0.addAll((Collection<? extends ValueLabel>) arrayList1);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getLabel();
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User("variable.label.label", "0");
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel1, valueLabel1);
      arrayList2.add(valueLabel1);
      rawVariable0.setValueLabels(arrayList2);
      rawVariable0.getNotes();
      rawVariable0.setCategory("}Ymwx.q{ndBRR63}");
      rawVariable0.setColumnEnd("");
      rawVariable0.setCleaningStatus("}Ymwx.q{ndBRR63}");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("", rawVariable0.getColumnEnd());
      
      derivedVariable0.setName("");
      derivedVariable0.getCleaningDescription();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setCategory("z");
      derivedVariable0.setColumnStart("+t(!QR9YvROT@");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.isNewRecord();
      assertEquals("+t(!QR9YvROT@", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.7985045625517033
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.isCoded();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("B", "B");
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertTrue(arrayList1.isEmpty());
      
      rawVariable0.getLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.getQuestionNumber();
      derivedVariable0.getColumnEnd();
      rawVariable0.setAlias("");
      ValueLabel valueLabel1 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.721030401050434
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getQuestionNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User("jNHm", "");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      User user1 = new User("", "");
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      rawVariable0.getLabel();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.getQuestionNumber();
      derivedVariable0.getColumnEnd();
      rawVariable0.setAlias("");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.3758698284895265
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setCoded(true);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      derivedVariable0.getNotes();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.clone();
      User user1 = new User();
      User user2 = new User();
      User.detectFieldChanges(user2, user1, user1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1842221031));
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      assertTrue(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "_xM]/)T;J.]";
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("_xM]/)T;J.]");
      supportingDocument0.getDisplayName();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.21016767710533
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "}Ymwx.q{ndBRR63}";
      rawVariable0.getDisplayItemIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.columnEnd = "0";
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.getLabel();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User("variable.label.label", "0");
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel1, valueLabel1);
      arrayList0.add(valueLabel1);
      rawVariable0.getNotes();
      rawVariable0.setCategory("}Ymwx.q{ndBRR63}");
      rawVariable0.setColumnEnd("");
      rawVariable0.setCleaningStatus("}Ymwx.q{ndBRR63}");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.setName("");
      derivedVariable0.getCleaningDescription();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("}Ymwx.q{ndBRR63}", rawVariable0.getCleaningStatus());
      
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9458755173797666
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("P8h6#h2QIY!t%");
      derivedVariable0.codeBookNumber = "P8h6#h2QIY!t%";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("P8h6#h2QIY!t%");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("P8h6#h2QIY!t%", derivedVariable0.getCodeBookNumber());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.2864629612967997
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.setColumnEnd(")Tng%h`$qYs?;QeP");
      derivedVariable0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.setCleaningStatus("^%P\"ACl#:=k|");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("^%P\"ACl#:=k|");
      derivedVariable0.getIdentifier();
      derivedVariable0.setForm(")Tng%h`$qYs?;QeP");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.addSupportingDocuments(arrayList1);
      derivedVariable0.setCleaningDescription("");
      User user0 = new User("", "");
      try { 
        User.checkValidEmail("ontologyTerm.nameSpace.label");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"ontologyTerm.nameSpace.label\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("valueLabel.label.saveChanges", "variable.isCleaned.saveChanges.changedToNotClean");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setName("UWS!N9NlX^h2]eXB}m");
      assertEquals("UWS!N9NlX^h2]eXB}m", rawVariable0.getName());
      
      RawVariable.validateFields(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals(0, rawVariable0.getIdentifier());
  }
}
