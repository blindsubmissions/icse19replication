/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:06:12 GMT 2018
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.TagValue;
import com.ib.client.UnderComp;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Contract contract0 = new Contract();
      Vector<Object> vector0 = new Vector<Object>();
      contract0.m_comboLegs = vector0;
      contract0.m_expiry = "gv),i";
      EWrapperMsgGenerator.updatePortfolio(contract0, (-1278), 0.0, 2943.897126, (-1278), (-1278), 0, "=");
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(98, (-1278), "", (-1244), 279, (-988.460242584), (-2948));
      EWrapperMsgGenerator.tickOptionComputation((-1278), 1625, (-1.0), 3497.2838914487, 0.0, (-1.0));
      Order order0 = new Order();
      OrderState orderState0 = new OrderState("", "1H,8gacP0O^p^9!w8", "", (String) null, 1625, 1.7976931348623157E308, (-3388.1151038276175), (String) null, (String) null);
      String string1 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.managedAccounts("Connection Closed");
      assertEquals("Connected : The list of managed accounts are : [Connection Closed]", string0);
      
      String string1 = EWrapperMsgGenerator.contractDetailsEnd(0);
      String string2 = EWrapperMsgGenerator.execDetailsEnd(0);
      assertTrue(string2.equals((Object)string1));
      
      String string3 = EWrapperMsgGenerator.updateMktDepth(0, (-3169), (-3169), 0, 0.0, 1);
      assertEquals("updateMktDepth: 0 -3169 -3169 0 0.0 1", string3);
      
      String string4 = EWrapperMsgGenerator.updateMktDepthL2(1, (-1444), "Connection Closed", 0, (-1444), (-2148.28971471129), 159);
      assertEquals("updateMktDepth: 1 -1444 Connection Closed 0 -1444 -2148.28971471129 159", string4);
      
      String string5 = EWrapperMsgGenerator.receiveFA((-3169), "reqId = 0 =============== end ===============");
      assertEquals("FA: null reqId = 0 =============== end ===============", string5);
      
      String string6 = EWrapperMsgGenerator.tickEFP(0, (-2767), 1.7976931348623157E308, "FA: null reqId = 0 =============== end ===============", 907.8, 0, " %v6T{~}]", (-3743.3806246), (-1444));
      assertEquals("id=0  unknown: basisPoints = 1.7976931348623157E308/FA: null reqId = 0 =============== end =============== impliedFuture = 907.8 holdDays = 0 futureExpiry =  %v6T{~}] dividendImpact = -3743.3806246 dividends to expiry = -1444.0", string6);
      
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(0, "reqId = 0 =============== end ===============", "", "Connected : The list of managed accounts are : [Connection Closed]", 0, " %v6T{~}]", "(A[{l]p!V@'^vTodD", "{SI3~>MBO", "reqId = 0 =============== end ===============", "id=0  unknown: basisPoints = 1.7976931348623157E308/FA: null reqId = 0 =============== end =============== impliedFuture = 907.8 holdDays = 0 futureExpiry =  %v6T{~}] dividendImpact = -3743.3806246 dividends to expiry = -1444.0", vector0, "Connected : The list of managed accounts are : [Connection Closed]", true, "(A[{l]p!V@'^vTodD", "");
      Execution execution0 = new Execution(0, 0, "reqId = 0 =============== end ===============", "{i8WQGeY8%|w", "OFDrN+B20&BN;", "{SI3~>MBO", "", (-2767), (-3743.3806246), 1, 0, 1, 0.0);
      String string7 = EWrapperMsgGenerator.execDetails((-1740), contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = -1740\norderId = 0\nclientId = 0\nsymbol = reqId = 0 =============== end ===============\nsecType = \nexpiry = Connected : The list of managed accounts are : [Connection Closed]\nstrike = 0.0\nright =  %v6T{~}]\ncontractExchange = {SI3~>MBO\ncurrency = reqId = 0 =============== end ===============\nlocalSymbol = id=0  unknown: basisPoints = 1.7976931348623157E308/FA: null reqId = 0 =============== end =============== impliedFuture = 907.8 holdDays = 0 futureExpiry =  %v6T{~}] dividendImpact = -3743.3806246 dividends to expiry = -1444.0\nexecId = reqId = 0 =============== end ===============\ntime = {i8WQGeY8%|w\nacctNumber = OFDrN+B20&BN;\nexecutionExchange = {SI3~>MBO\nside = \nshares = -2767\nprice = -3743.3806246\npermId = 1\nliquidation = 0\ncumQty = 1\navgPrice = 0.0\n ---- Execution Details end ----\n", string7);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickString((-3436), 167, "");
      assertEquals("id=-3436  unknown=", string0);
      
      String string1 = EWrapperMsgGenerator.tickSize(2, 2, 0);
      assertEquals("id=2  askPrice=0", string1);
      
      String string2 = EWrapperMsgGenerator.fundamentalData(2648, "");
      assertEquals("id  = 2648 len = 0\n", string2);
      
      String string3 = EWrapperMsgGenerator.tickEFP(2, 0, (-598.1), "eNaZd8e6qhs7|-&Smn", 0.0, 121, "id=-3436  unknown=", 1.0, 2648);
      assertEquals("id=2  bidSize: basisPoints = -598.1/eNaZd8e6qhs7|-&Smn impliedFuture = 0.0 holdDays = 121 futureExpiry = id=-3436  unknown= dividendImpact = 1.0 dividends to expiry = 2648.0", string3);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EWrapperMsgGenerator.tickGeneric(0, 0, (-575.76729531));
      EWrapperMsgGenerator.receiveFA((-338), "");
      Contract contract0 = new Contract();
      Execution execution0 = new Execution();
      EWrapperMsgGenerator.execDetails((-444), contract0, execution0);
      execution0.m_price = (double) (-338);
      int int0 = (-647);
      contract0.m_primaryExch = "";
      execution0.m_cumQty = (-647);
      EWrapperMsgGenerator.updateAccountValue((String) null, "|0)Y", " futureExpiry = ", (String) null);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation(0, (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.execDetailsEnd(0);
      assertEquals("reqId = 0 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.orderStatus(0, "reqId = 0 =============== end ===============", 0, 0, 0.0, 87, 0, 0.0, (-8), "");
      assertEquals("order status: orderId=0 clientId=-8 permId=87 status=reqId = 0 =============== end =============== filled=0 remaining=0 avgFillPrice=0.0 lastFillPrice=0.0 parent Id=0 whyHeld=", string1);
      
      String string2 = EWrapperMsgGenerator.tickPrice((-8), (-1638), 0, (-4000));
      assertEquals("id=-8  unknown=0.0  canAutoExecute", string2);
      
      String string3 = EWrapperMsgGenerator.contractDetailsEnd((-8));
      assertEquals("reqId = -8 =============== end ===============", string3);
      
      String string4 = EWrapperMsgGenerator.fundamentalData((-4000), "order status: orderId=0 clientId=-8 permId=87 status=reqId = 0 =============== end =============== filled=0 remaining=0 avgFillPrice=0.0 lastFillPrice=0.0 parent Id=0 whyHeld=");
      assertEquals("id  = -4000 len = 175\norder status: orderId=0 clientId=-8 permId=87 status=reqId = 0 =============== end =============== filled=0 remaining=0 avgFillPrice=0.0 lastFillPrice=0.0 parent Id=0 whyHeld=", string4);
      
      String string5 = EWrapperMsgGenerator.realtimeBar((-8), 1615L, 0.0, 87, (-2833.0), 0.0, 87, 1615L, (-127));
      assertEquals("id=-8 time = 1615 open=0.0 high=87.0 low=-2833.0 close=0.0 volume=87 count=-127 WAP=1615.0", string5);
      
      EWrapperMsgGenerator.managedAccounts("3HBVHT[s~%CY");
      String string6 = EWrapperMsgGenerator.updateNewsBulletin(87, (-457), " count=", "reqId = 0 =============== end ===============");
      assertEquals("MsgId=87 :: MsgType=-457 :: Origin=reqId = 0 =============== end =============== :: Message= count=", string6);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(0, (-1), "", " dividendImpact = ");
      assertEquals("MsgId=0 :: MsgType=-1 :: Origin= dividendImpact =  :: Message=", string0);
      
      String string1 = EWrapperMsgGenerator.updateMktDepth((-1), (-1750), (-4298), 0, 784.3361, 0);
      assertEquals("updateMktDepth: -1 -1750 -4298 0 784.3361 0", string1);
      
      String string2 = EWrapperMsgGenerator.tickPrice(0, (-4507), 3452.7069741, (-1));
      assertEquals("id=0  unknown=3452.7069741  canAutoExecute", string2);
      
      Vector<TagValue> vector0 = new Vector<TagValue>();
      Contract contract0 = new Contract((-1872), "id=0  unknown=3452.7069741  canAutoExecute", "", "|,(BC%6;", (-4298), (String) null, "7s%", "", "id=0  unknown=3452.7069741  canAutoExecute", "O", vector0, " ===================================\n", false, "", "");
      Execution execution0 = new Execution();
      String string3 = EWrapperMsgGenerator.execDetails(3, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 3\norderId = 0\nclientId = 0\nsymbol = id=0  unknown=3452.7069741  canAutoExecute\nsecType = \nexpiry = |,(BC%6;\nstrike = -4298.0\nright = null\ncontractExchange = \ncurrency = id=0  unknown=3452.7069741  canAutoExecute\nlocalSymbol = O\nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string3);
      
      ContractDetails contractDetails0 = new ContractDetails();
      String string4 = EWrapperMsgGenerator.contractDetails((-1578), contractDetails0);
      assertEquals("reqId = -1578 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 0.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 0\nlongName = null\ncontractMonth = null\nindustry = null\ncategory = null\nsubcategory = null\ntimeZoneId = null\ntradingHours = null\nliquidHours = null\n ---- Contract Details End ----\n", string4);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EWrapperMsgGenerator.managedAccounts("");
      EWrapperMsgGenerator.fundamentalData(0, "");
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 0, (-49.74163677949), 0, 0, (-49.74163677949));
      assertEquals("id=0  bidSize: vol = N/A delta = 0.0", string0);
      
      String string1 = EWrapperMsgGenerator.updateNewsBulletin(0, 0, "ratings = ", "");
      assertEquals("MsgId=0 :: MsgType=0 :: Origin= :: Message=ratings = ", string1);
      
      String string2 = EWrapperMsgGenerator.updateAccountValue("", "", "id=0  bidSize: vol = N/A delta = 0.0", "ratings = ");
      assertEquals("updateAccountValue:   id=0  bidSize: vol = N/A delta = 0.0 ratings = ", string2);
      
      String string3 = EWrapperMsgGenerator.fundamentalData(0, "id  = 0 len = 0\n");
      assertEquals("id  = 0 len = 16\nid  = 0 len = 0\n", string3);
      
      String string4 = EWrapperMsgGenerator.tickGeneric(0, 121, 0.0);
      assertEquals("id=0  unknown=0.0", string4);
      
      ContractDetails contractDetails0 = new ContractDetails();
      String string5 = EWrapperMsgGenerator.scannerData(98, (-301), contractDetails0, "cQ-[2t!\"8", (String) null, " outsideRth=", (String) null);
      assertEquals("id = 98 rank=-301 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=cQ-[2t!\"8 benchmark=null projection= outsideRth= legsStr=null", string5);
      
      String string6 = EWrapperMsgGenerator.orderStatus(10, " lmtPrice=", 0, 630, 0, 646, 646, 0.0, 1573, "]_t-p'6'!Jf?Xa*xx_");
      assertEquals("order status: orderId=10 clientId=1573 permId=646 status= lmtPrice= filled=0 remaining=630 avgFillPrice=0.0 lastFillPrice=0.0 parent Id=646 whyHeld=]_t-p'6'!Jf?Xa*xx_", string6);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus(0, "", 0, (-816), 0, (-816), 0, 0, 0, "");
      assertEquals("order status: orderId=0 clientId=0 permId=-816 status= filled=0 remaining=-816 avgFillPrice=0.0 lastFillPrice=0.0 parent Id=0 whyHeld=", string0);
      
      String string1 = EWrapperMsgGenerator.updateMktDepthL2(0, (-3312), "", (-3312), 0, (-1975.26), (-4253));
      assertEquals("updateMktDepth: 0 -3312  -3312 0 -1975.26 -4253", string1);
      
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, "updateMktDepth: 0 -3312  -3312 0 -1975.26 -4253", 0, "|K'", "id=", 0, "h`$qYs?;QePPZR_%:", (String) null, "", (String) null, "id=", (String) null, "", "");
      String string2 = EWrapperMsgGenerator.contractDetails(1692, contractDetails0);
      assertEquals("reqId = 1692 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = updateMktDepth: 0 -3312  -3312 0 -1975.26 -4253\nminTick = 0.0\nprice magnifier = 0\norderTypes = |K'\nvalidExchanges = id=\nunderConId = 0\nlongName = h`$qYs?;QePPZR_%:\ncontractMonth = null\nindustry = \ncategory = null\nsubcategory = id=\ntimeZoneId = null\ntradingHours = \nliquidHours = \n ---- Contract Details End ----\n", string2);
      
      String string3 = EWrapperMsgGenerator.bondContractDetails(1470, contractDetails0);
      assertEquals("reqId = 1470 ===================================\n ---- Bond Contract Details begin ----\nsymbol = null\nsecType = null\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = null\ncurrency = null\nmarketName = null\ntradingClass = updateMktDepth: 0 -3312  -3312 0 -1975.26 -4253\nconid = 0\nminTick = 0.0\norderTypes = |K'\nvalidExchanges = id=\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = h`$qYs?;QePPZR_%:\n ---- Bond Contract Details End ----\n", string3);
      
      EWrapperMsgGenerator.scannerParameters("updateMktDepth: 0 -3312  -3312 0 -1975.26 -4253");
      String string4 = EWrapperMsgGenerator.tickOptionComputation((-1), (-1022), 1470, (-4487.301257910224), 0.0, (-1975.26));
      assertEquals("id=-1  unknown: vol = 1470.0 delta = N/A", string4);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSize(98, 98, 0);
      assertEquals("id=98  unknown=0", string0);
      
      String string1 = EWrapperMsgGenerator.historicalData(98, "com.ib.client.UnderComp", 0.0, 98, 0.0, 0.0, 98, 0, 0, false);
      assertEquals("id=98 date = com.ib.client.UnderComp open=0.0 high=98.0 low=0.0 close=0.0 volume=98 count=0 WAP=0.0 hasGaps=false", string1);
      
      Contract contract0 = new Contract();
      contract0.m_secId = "id=98 date = com.ib.client.UnderComp open=0.0 high=98.0 low=0.0 close=0.0 volume=98 count=0 WAP=0.0 hasGaps=false";
      String string2 = EWrapperMsgGenerator.updatePortfolio(contract0, 0, 0.0, 0, (-1744.0), 0.0, 0, "7Y");
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n0 0.0 0.0 -1744.0 0.0 0.0 7Y", string2);
      
      String string3 = EWrapperMsgGenerator.tickSize(98, 0, 0);
      assertEquals("id=98  bidSize=0", string3);
      
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, "", 763.615623, "", (String) null, (-702), (String) null, "C&", "", "e1F8Nir!V/_\"`a%6$L\"", "updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n0 0.0 0.0 -1744.0 0.0 0.0 7Y", (String) null, (String) null, "<TOl',W+Jh");
      String string4 = EWrapperMsgGenerator.scannerData(183, 0, contractDetails0, "primaryExch = ", ": vol = ", "C&", "'NXm\"-");
      assertEquals("id = 183 rank=0 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass= distance=primaryExch =  benchmark=: vol =  projection=C& legsStr='NXm\"-", string4);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth(1919, 1919, 1919, 1919, 1919, (-868));
      assertEquals("updateMktDepth: 1919 1919 1919 1919 1919.0 -868", string0);
      
      String string1 = EWrapperMsgGenerator.tickSize(5449, 1919, (-868));
      assertEquals("id=5449  unknown=-868", string1);
      
      String string2 = EWrapperMsgGenerator.updateMktDepthL2(5449, 222, "(u@xb", 0, 1534, 0.0, 0);
      assertEquals("updateMktDepth: 5449 222 (u@xb 0 1534 0.0 0", string2);
      
      String string3 = EWrapperMsgGenerator.fundamentalData(5449, "(u@xb");
      assertEquals("id  = 5449 len = 5\n(u@xb", string3);
      
      String string4 = EWrapperMsgGenerator.tickOptionComputation(222, 1534, (-681.4211), 0.0, 5449, 222);
      assertEquals("id=222  unknown: vol = N/A delta = 0.0", string4);
      
      String string5 = EWrapperMsgGenerator.tickString((-868), 0, "updateMktDepth: 1919 1919 1919 1919 1919.0 -868");
      assertEquals("id=-868  bidSize=updateMktDepth: 1919 1919 1919 1919 1919.0 -868", string5);
      
      String string6 = EWrapperMsgGenerator.historicalData(0, "updateMktDepth: 1919 1919 1919 1919 1919.0 -868", 1.0, 1919, 1.0, 1.0, (-3326), (-868), 1.0, false);
      assertEquals("id=0 date = updateMktDepth: 1919 1919 1919 1919 1919.0 -868 open=1.0 high=1919.0 low=1.0 close=1.0 volume=-3326 count=-868 WAP=1.0 hasGaps=false", string6);
      
      String string7 = EWrapperMsgGenerator.tickPrice(846, 0, 0, 222);
      assertEquals("id=846  bidSize=0.0  canAutoExecute", string7);
      
      EWrapperMsgGenerator.openOrderEnd();
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(0, "", "", "K", (-681.4211), "id=-868  bidSize=updateMktDepth: 1919 1919 1919 1919 1919.0 -868", "id  = 5449 len = 5\n(u@xb", "id=0 date = updateMktDepth: 1919 1919 1919 1919 1919.0 -868 open=1.0 high=1919.0 low=1.0 close=1.0 volume=-3326 count=-868 WAP=1.0 hasGaps=false", "(u@xb", "eLZnY%", vector0, "id=846  bidSize=0.0  canAutoExecute", false, "id  = 5449 len = 5\n(u@xb", (String) null);
      String string8 = EWrapperMsgGenerator.updatePortfolio(contract0, 5449, 0.0, 1.0, (-1.0), 0.0, 0.0, "(u@xb");
      assertEquals("updatePortfolio: conid = 0\nsymbol = \nsecType = \nexpiry = K\nstrike = -681.4211\nright = id=-868  bidSize=updateMktDepth: 1919 1919 1919 1919 1919.0 -868\nmultiplier = id  = 5449 len = 5\n(u@xb\nexchange = id=0 date = updateMktDepth: 1919 1919 1919 1919 1919.0 -868 open=1.0 high=1919.0 low=1.0 close=1.0 volume=-3326 count=-868 WAP=1.0 hasGaps=false\nprimaryExch = id=846  bidSize=0.0  canAutoExecute\ncurrency = (u@xb\nlocalSymbol = eLZnY%\n5449 0.0 1.0 -1.0 0.0 0.0 (u@xb", string8);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      EWrapperMsgGenerator.deltaNeutralValidation((-3490), underComp0);
      underComp0.m_conId = (-3490);
      underComp0.m_price = 1.7976931348623157E308;
      String string0 = EWrapperMsgGenerator.deltaNeutralValidation((-1512), underComp0);
      assertEquals("id = -1512 underComp.conId =-3490 underComp.delta =0.0 underComp.price =1.7976931348623157E308", string0);
      
      EWrapperMsgGenerator.accountDownloadEnd("id = -3490 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0");
      String string1 = EWrapperMsgGenerator.updateNewsBulletin((-1512), (-3490), ":Jq(u4>c(,k4K|lF$Q>", (String) null);
      assertEquals("MsgId=-1512 :: MsgType=-3490 :: Origin=null :: Message=:Jq(u4>c(,k4K|lF$Q>", string1);
      
      String string2 = EWrapperMsgGenerator.accountDownloadEnd("_>A#2&$#te&8cP");
      assertEquals("accountDownloadEnd: _>A#2&$#te&8cP", string2);
      
      Contract contract0 = new Contract();
      underComp0.m_conId = 0;
      String string3 = EWrapperMsgGenerator.updatePortfolio(contract0, (-1512), 0.0, 0.0, 1.7976931348623157E308, (-740.2027), 1.7976931348623157E308, (String) null);
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n-1512 0.0 0.0 1.7976931348623157E308 -740.2027 1.7976931348623157E308 null", string3);
      
      String string4 = EWrapperMsgGenerator.tickPrice(0, 0, 0.0, 486);
      assertEquals("id=0  bidSize=0.0  canAutoExecute", string4);
      
      String string5 = EWrapperMsgGenerator.updateAccountValue("id=0  bidSize=0.0  canAutoExecute", "id=0  bidSize=0.0  canAutoExecute", "=s", "");
      assertEquals("updateAccountValue: id=0  bidSize=0.0  canAutoExecute id=0  bidSize=0.0  canAutoExecute =s ", string5);
      
      String string6 = EWrapperMsgGenerator.tickOptionComputation((-3490), 961, 1.7976931348623157E308, 0.0, 0.0, 961);
      assertEquals("id=-3490  unknown: vol = N/A delta = 0.0", string6);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue("6TFi$|", "com.ib.client.OrderState", "", "com.ib.client.OrderState");
      assertEquals("updateAccountValue: 6TFi$| com.ib.client.OrderState  com.ib.client.OrderState", string0);
      
      String string1 = EWrapperMsgGenerator.currentTime((-1439L));
      assertEquals("current time = -1439 (Dec 31, 1969 11:36:01 PM)", string1);
      
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, (String) null, 0.0, (String) null, "6TFi$|", (-355), "uBD%", "current time = -1439 (Dec 31, 1969 11:36:01 PM)", "BOND", "com.ib.client.OrderState", "", (String) null, (String) null, "^hz3LZDj^Iz[.uiH6&");
      String string2 = EWrapperMsgGenerator.scannerData((-329), (-329), contractDetails0, (String) null, (String) null, (String) null, "");
      assertEquals("id = -329 rank=-329 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=null benchmark=null projection=null legsStr=", string2);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.openOrderEnd();
      assertEquals(" =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.scannerDataEnd((-938));
      assertEquals("id = -938 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.tickString(0, 0, (String) null);
      assertEquals("id=0  bidSize=null", string2);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EWrapperMsgGenerator.tickSnapshotEnd(0);
      UnderComp underComp0 = new UnderComp();
      EWrapperMsgGenerator.deltaNeutralValidation(0, underComp0);
      underComp0.m_delta = (double) 0;
      String string0 = EWrapperMsgGenerator.tickPrice(583, 583, 0.0, 0);
      EWrapperMsgGenerator.updateAccountValue("id=0 =============== end ===============", "id = 0 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0", "id=583  unknown=0.0  noAutoExecute", "QWG-rK#cSC. yvH)Fw{");
      EWrapperMsgGenerator.currentTime(0);
      EWrapperMsgGenerator.openOrderEnd();
      Contract contract0 = new Contract();
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      orderState0.m_minCommission = (-2778.84007023289);
      String string1 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.currentTime(1613L);
      assertEquals("current time = 1613 (Jan 1, 1970 12:26:53 AM)", string0);
      
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      Contract contract0 = new Contract();
      Order order0 = new Order();
      String string1 = EWrapperMsgGenerator.tickEFP(0, (-2582), 1.7976931348623157E308, ">0[AXSuQ", (-889.3889396246395), 0, "", 0, 907.3498);
      assertEquals("id=0  unknown: basisPoints = 1.7976931348623157E308/>0[AXSuQ impliedFuture = -889.3889396246395 holdDays = 0 futureExpiry =  dividendImpact = 0.0 dividends to expiry = 907.3498", string1);
      
      OrderState orderState0 = new OrderState("WtfF9%2h1]@JeESW[z", "FA:", (String) null, "IFJ7:mK&,d4}bNz", Integer.MAX_VALUE, 0, (-1), "com.ib.client.UnderComp", "");
      EWrapperMsgGenerator.openOrder((-1), contract0, order0, orderState0);
      Contract contract1 = new Contract();
      contract1.m_expiry = "@LZiO^X,JBQK";
      contract1.m_symbol = "FA:";
      contract1.clone();
      ContractDetails contractDetails0 = new ContractDetails(contract1, "[;3GKACQ9kHf-f\"eI<", "[;3GKACQ9kHf-f\"eI<", 0.0, "FA:", (String) null, (-386), (String) null, (String) null, (String) null, (String) null, "sLk0", (String) null, "", "SCANNER PARAMETERS:");
      String string2 = EWrapperMsgGenerator.contractDetails((-386), contractDetails0);
      assertEquals("reqId = -386 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = FA:\nsecType = null\nexpiry = @LZiO^X,JBQK\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = [;3GKACQ9kHf-f\"eI<\ntradingClass = [;3GKACQ9kHf-f\"eI<\nminTick = 0.0\nprice magnifier = 0\norderTypes = FA:\nvalidExchanges = null\nunderConId = -386\nlongName = null\ncontractMonth = null\nindustry = null\ncategory = null\nsubcategory = sLk0\ntimeZoneId = null\ntradingHours = \nliquidHours = SCANNER PARAMETERS:\n ---- Contract Details End ----\n", string2);
      
      String string3 = EWrapperMsgGenerator.openOrderEnd();
      assertEquals(" =============== end ===============", string3);
      
      String string4 = EWrapperMsgGenerator.accountDownloadEnd((String) null);
      assertEquals("accountDownloadEnd: null", string4);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData(3325, " | ", 3325, 0.0, 0.0, 3325, 1884, 10, 3325, false);
      assertEquals("id=3325 date =  |  open=3325.0 high=0.0 low=0.0 close=3325.0 volume=1884 count=10 WAP=3325.0 hasGaps=false", string0);
      
      String string1 = EWrapperMsgGenerator.nextValidId(10);
      assertEquals("Next Valid Order ID: 10", string1);
      
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(1884, "id=3325 date =  |  open=3325.0 high=0.0 low=0.0 close=3325.0 volume=1884 count=10 WAP=3325.0 hasGaps=false", "x`5Te~PDd*`?4X", " | ", 3722.8219909, "", "Next Valid Order ID: ", "f7`v~Ld6iB>#u(c", "", "f7`v~Ld6iB>#u(c", vector0, "Next Valid Order ID: ", true, "f7`v~Ld6iB>#u(c", " open=");
      String string2 = EWrapperMsgGenerator.contractMsg(contract0);
      assertEquals("conid = 1884\nsymbol = id=3325 date =  |  open=3325.0 high=0.0 low=0.0 close=3325.0 volume=1884 count=10 WAP=3325.0 hasGaps=false\nsecType = x`5Te~PDd*`?4X\nexpiry =  | \nstrike = 3722.8219909\nright = \nmultiplier = Next Valid Order ID: \nexchange = f7`v~Ld6iB>#u(c\nprimaryExch = Next Valid Order ID: \ncurrency = \nlocalSymbol = f7`v~Ld6iB>#u(c\n", string2);
      
      String string3 = EWrapperMsgGenerator.updateMktDepth(10, 850, (-2315), 850, 491.0, 0);
      assertEquals("updateMktDepth: 10 850 -2315 850 491.0 0", string3);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EWrapperMsgGenerator.updateAccountTime("");
      EWrapperMsgGenerator.managedAccounts("expiry = ");
      Contract contract0 = new Contract();
      UnderComp underComp0 = contract0.m_underComp;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation((-4825), (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.37677016125643675
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-665), 0, 1.0, 0, 1.0, 1.0);
      assertEquals("id=-665  bidSize: vol = 1.0 delta = 0.0", string0);
      
      String string1 = EWrapperMsgGenerator.historicalData((-665), "id=-665  bidSize: vol = 1.0 delta = 0.0", 304.9179, 1.7976931348623157E308, 0.0, 0, 1511, (-665), 4267.0, false);
      assertEquals("id=-665 date = id=-665  bidSize: vol = 1.0 delta = 0.0 open=304.9179 high=1.7976931348623157E308 low=0.0 close=0.0 volume=1511 count=-665 WAP=4267.0 hasGaps=false", string1);
      
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2147L);
      String string2 = EWrapperMsgGenerator.tickOptionComputation((-665), 31, 1.0, 2147L, 2747, 1848.4050890129947);
      assertEquals("id=-665  IndexFuturePremium: vol = 1.0 delta = N/A", string2);
      
      String string3 = EWrapperMsgGenerator.tickOptionComputation(2146288609, 13, (-49.74163677949), 304.9179, (-661.03173), 0.0);
      assertEquals("id=2146288609  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = 0.0", string3);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      contract0.m_comboLegsDescrip = null;
      order0.m_minQty = 2255;
      OrderState orderState0 = new OrderState((String) null, "bidOptComp", (String) null, "", 0, (-3146.946830388917), (-2789.2594579), "#CD3FMP^%2{qz-gD_=L", (String) null);
      orderState0.m_minCommission = (double) 0;
      orderState0.m_warningText = null;
      EWrapperMsgGenerator.tickOptionComputation(10, 10, (-390.2769661), (-1576.9287910754), 1.7976931348623157E308, (-1325.78804));
      EWrapperMsgGenerator.tickOptionComputation(1, 13, 0, 717.54091, 1.0, (-3146.946830388917));
      System.setCurrentTimeMillis(13);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      order0.m_designatedLocation = null;
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      contract0.m_multiplier = "id=6  unknown: vol = 794.3304173 delta = N/A";
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.openOrder(13, contract0, order0, orderState0);
      orderState0.m_status = null;
      contract0.m_exchange = null;
      System.setCurrentTimeMillis(0);
      EWrapperMsgGenerator.openOrder(464, contract0, order0, orderState0);
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(2144780133, 1001, 1.7976931348623157E308, 920.2964493809545, 1.0, (-339.8447));
      assertEquals("id=2144780133  unknown: vol = N/A delta = N/A", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.contractDetails((-1073741824), contractDetails0);
      assertEquals("reqId = -1073741824 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 0.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 0\nlongName = null\ncontractMonth = null\nindustry = null\ncategory = null\nsubcategory = null\ntimeZoneId = null\ntradingHours = null\nliquidHours = null\n ---- Contract Details End ----\n", string0);
      
      String string1 = EWrapperMsgGenerator.tickString((-1436639375), 0, (String) null);
      assertEquals("id=-1436639375  bidSize=null", string1);
      
      String string2 = EWrapperMsgGenerator.tickOptionComputation(13, (-665), 0.0, 26, (-1436639375), (-1.0));
      assertEquals("id=13  unknown: vol = 0.0 delta = N/A", string2);
      
      String string3 = EWrapperMsgGenerator.tickOptionComputation(13, 13, (-1170.0), (-2062.182712226), 1.7976931348623157E308, 0);
      assertEquals("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = 0.0", string3);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6869615765973234
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Order order0 = new Order();
      OrderState orderState0 = new OrderState((String) null, (String) null, (String) null, " P[w<Y#9zl,mE>c>", (-1585.6), 430.82255571, 0.0, " P[w<Y#9zl,mE>c>", "id=-665  bidSize: vol = N/A delta = 0.0");
      Contract contract0 = new Contract(31, "id=-665  bidSize: vol = N/A delta = 0.0", "BAG", "", 1.7976931348623157E308, (String) null, "n<q<I iNM", ")KW)Z", (String) null, "~R2Q}PqlfW{Ma", (Vector) null, (String) null, false, "O", "id=-665  bidSize: vol = N/A delta = 0.0");
      contract0.m_expiry = "#CD3FMP^%2{qz-gD_=L";
      Order order1 = new Order();
      order1.m_basisPoints = (double) 0;
      EWrapperMsgGenerator.openOrder(2, contract0, order1, orderState0);
      OrderState orderState1 = new OrderState();
      Order order2 = new Order();
      UnderComp underComp0 = new UnderComp();
      Contract contract1 = new Contract();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(10, 11, 309.11979434648, 10.0, 0.0, 0);
      Order order3 = new Order();
      EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract1, order3, orderState1);
      String string1 = EWrapperMsgGenerator.openOrder(31, contract0, order2, orderState1);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation((-665), (-665), (-665), (-665), (-665), (-0.06537668609924685));
      System.setCurrentTimeMillis(0L);
      EWrapperMsgGenerator.tickOptionComputation(31, 13, (-665), 1.7976931348623157E308, (-1271.594934877), 1.7976931348623157E308);
      EWrapperMsgGenerator.tickOptionComputation(31, (-665), 0.0, 891.8561483188573, 31, (-737.1781294727823));
      System.setCurrentTimeMillis(197L);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Order order0 = new Order();
      OrderState orderState0 = new OrderState((String) null, (String) null, (String) null, " P[w<Y#9zl,mE>c>", 2, 1.7976931348623157E308, 0.0, " P[w<Y#9zl,mE>c>", (String) null);
      Contract contract0 = new Contract(Integer.MAX_VALUE, " P[w<Y#9zl,mE>c>", "BAG", "", 1.7976931348623157E308, (String) null, (String) null, (String) null, (String) null, "~R2Q}PqlfW{Ma", (Vector) null, (String) null, true, "O", " P[w<Y#9zl,mE>c>");
      Order order1 = new Order();
      EWrapperMsgGenerator.openOrder(2, contract0, order1, orderState0);
      Order order2 = new Order();
      order0.m_auctionStrategy = 3;
      contract0.m_comboLegsDescrip = "";
      EWrapperMsgGenerator.openOrder(1012, contract0, order1, orderState0);
      EWrapperMsgGenerator.tickGeneric(0, 0, 1.7976931348623157E308);
      Order order3 = new Order();
      EWrapperMsgGenerator.openOrder(2, contract0, order3, orderState0);
      System.setCurrentTimeMillis(1);
      EWrapperMsgGenerator.openOrder(0, contract0, order3, orderState0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      System.setCurrentTimeMillis((-330L));
      System.setCurrentTimeMillis((-330L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1014L));
      System.setCurrentTimeMillis(0L);
      Contract contract0 = new Contract();
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      order0.m_algoStrategy = "  ";
      EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract0, order0, orderState0);
      order0.m_algoParams = contract0.m_comboLegs;
      EWrapperMsgGenerator.openOrder(2, contract0, order0, orderState0);
      Order order1 = new Order();
      OrderState orderState1 = new OrderState();
      orderState1.m_commissionCurrency = " volume=";
      EWrapperMsgGenerator.openOrder(0, contract0, order1, orderState1);
      OrderState orderState2 = new OrderState();
      EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract0, order1, orderState1);
      System.setCurrentTimeMillis(1000L);
  }
}
