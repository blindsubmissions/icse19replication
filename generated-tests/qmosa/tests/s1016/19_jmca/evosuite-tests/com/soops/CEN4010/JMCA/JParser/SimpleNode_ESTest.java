/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:10:19 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1528));
      simpleNode0.jjtGetParent();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      simpleNode0.jjtAddChild((Node) null, 2381);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = null;
      nodeArray0[1] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = null;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = null;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.toString("XD;Q#a[mQcRh");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1528
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("\"!\"");
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.toString("");
      simpleNode0.setIdentifier("5N*QB56/7oq#");
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.append((CharSequence) "\"!\"", 0, 0);
      simpleNode0.dump("\"!\"", stringWriter0);
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.setIdentifier("\"!\"");
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.dump("\"!\"", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtClose();
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetParent();
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2702));
      simpleNode0.jjtGetNumChildren();
      String string0 = null;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) null);
      char[] charArray0 = new char[6];
      charArray0[0] = '=';
      charArray0[1] = '0';
      charArray0[2] = 'V';
      charArray0[3] = '@';
      charArray0[4] = ']';
      charArray0[5] = 'D';
      stringWriter0.write(charArray0);
      // Undeclared exception!
      try { 
        simpleNode0.toString((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2702
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2337673247041645
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString("");
      simpleNode0.jjtGetParent();
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("", stringWriter0);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = null;
      nodeArray0[1] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = null;
      SimpleNode simpleNode1 = new SimpleNode(0);
      nodeArray0[4] = (Node) simpleNode1;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = null;
      simpleNode1.setIdentifier((String) null);
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
      // Undeclared exception!
      try { 
        simpleNode0.dump("", stringWriter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2852930241200993
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("\"!\"");
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild((Node) null, 0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.setIdentifier("");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      assertEquals(1, simpleNode0.jjtGetNumChildren());
      
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('/');
      stringWriter1.append((CharSequence) "\"!\"");
      simpleNode1.dump("<=", stringWriter1);
      simpleNode1.dump((String) null, stringWriter0);
      assertEquals("/\"!\"<CompilationUnit>\n</CompilationUnit>\n<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3897154547004784
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.jjtClose();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtAddChild((Node) null, 724);
      StringWriter stringWriter1 = stringWriter0.append('`');
      char[] charArray0 = new char[7];
      charArray0[0] = '#';
      charArray0[1] = '`';
      charArray0[2] = '`';
      charArray0[3] = '#';
      charArray0[4] = '#';
      charArray0[5] = '`';
      charArray0[6] = '#';
      stringWriter0.write(charArray0);
      simpleNode0.dump("<gidentifier>", stringWriter1);
      simpleNode0.toString();
      simpleNode0.toString("\u0006W");
      simpleNode0.jjtGetChild(1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1651);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1651
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.7549967581308246
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 10);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 76);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('/');
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) "{");
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      SimpleNode simpleNode1 = new SimpleNode(javaParser1, 27);
      Node[] nodeArray0 = new Node[0];
      simpleNode1.children = nodeArray0;
      simpleNode1.dump("{", stringWriter2);
      simpleNode0.dump("", stringWriter0);
      simpleNode0.dump("{", stringWriter0);
      SimpleNode simpleNode2 = new SimpleNode(javaParser1, 27);
      simpleNode2.dump("{", stringWriter1);
      simpleNode1.dump("1:,).ldHf", stringWriter0);
      simpleNode2.dump("u)qs}i", stringWriter0);
      assertEquals("/{<EmptyStatement>\n</EmptyStatement>\n<EmptyStatement>\n</EmptyStatement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6336632569776562
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(46);
      StringReader stringReader0 = new StringReader("j{ndA.`");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 46);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, (-1074265344));
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('/');
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "j{ndA.`");
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      SimpleNode simpleNode3 = new SimpleNode(javaParser1, 46);
      simpleNode0.dump("TryStatement", stringWriter0);
      simpleNode2.dump("<=", stringWriter2);
      simpleNode1.dump("j{ndA.`", stringWriter1);
      SimpleNode simpleNode4 = new SimpleNode(javaParser1, 27);
      SimpleNode simpleNode5 = new SimpleNode(19);
      simpleNode5.dump("du", stringWriter2);
      simpleNode1.dump("{", stringWriter2);
      SimpleNode simpleNode6 = new SimpleNode(46);
      StringWriter stringWriter3 = stringWriter0.append((CharSequence) "j{ndA.`");
      simpleNode6.dump("TryStatement", stringWriter3);
      assertEquals("/j{ndA.`<EqualityExpression>\n  <identifier>*le</identifier>\n</EqualityExpression>\nj{ndA.`", stringWriter0.toString());
      assertEquals("/j{ndA.`<EqualityExpression>\n  <identifier>*le</identifier>\n</EqualityExpression>\nj{ndA.`", stringWriter3.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.7356219397587946
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.CANADA_FRENCH;
      Locale locale1 = Locale.FRENCH;
      Set<String> set0 = locale1.getUnicodeLocaleAttributes();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.setIdentifier("8");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.getBuffer();
      simpleNode0.dump("EqualityExpression", stringWriter0);
      simpleNode1.setIdentifier(";");
      simpleNode1.dump("EqualityExpression", stringWriter0);
      simpleNode0.dump("EqualityExpression", stringWriter0);
      SystemInUtil.addInputLine("");
      simpleNode0.dump("mFnOD;owHHS,O:2$", stringWriter0);
      simpleNode0.dump("\"[\"", stringWriter0);
      simpleNode1.dump("\"[\"", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>8</identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier>8</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.349792396172401
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(33);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&");
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.bufcolumn = javaParserTokenManager0.jjnewLexState;
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-1));
      simpleNode0.jjtAddChild(simpleNode1, 2);
      simpleNode0.jjtOpen();
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter(2);
      simpleNode0.dump("", stringWriter0);
      assertEquals(3, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6885673693022826
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 10);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(10);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 10);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('W');
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "");
      simpleNode0.dump("", stringWriter1);
      simpleNode0.dump("", stringWriter2);
      simpleNode1.dump("", stringWriter1);
      simpleNode1.dump((String) null, stringWriter0);
      SimpleNode simpleNode2 = new SimpleNode(10);
      simpleNode1.setIdentifier(">=");
      simpleNode1.dump("", stringWriter0);
      simpleNode0.dump(">", stringWriter2);
      simpleNode0.dump("", stringWriter1);
      SystemInUtil.addInputLine("ri=M)4HK4w YfM~/gB");
      simpleNode0.dump("!", stringWriter2);
      simpleNode2.setIdentifier(">");
      simpleNode0.dump("case", stringWriter1);
      simpleNode0.dump("", stringWriter2);
      simpleNode2.dump("", stringWriter0);
      String string0 = "*ge";
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) ">=", 10, (-3378));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
