/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:17:17 GMT 2018
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.Comparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "(";
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Predicateform.print(): 0 elements");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      stringReader0.skip(41);
      char[] charArray0 = new char[2];
      charArray0[0] = '_';
      charArray0[1] = '+';
      stringReader0.read(charArray0);
      stringReader0.read();
      streamTokenizer0.commentChar((-1681));
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.sort(comparator0);
      jSPredicateForm0.containsAll(jSTerm0);
      JSSubstitution jSSubstitution0 = jSTerm0.matches(jSPredicateForm0);
      jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      // Undeclared exception!
      try { 
        jSSubstitution0.listIterator((-1681));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1681
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.print();
      JSJshopVars.lessT = 0;
      StringReader stringReader0 = new StringReader("call");
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals(0, stringBuffer0.length());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9564632038266851
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(FUobV.4)^eo");
      JSJshopVars.astherisk = 0;
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm0.add((Object) jSPredicateForm1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm1.clonePF();
      jSPredicateForm2.print();
      jSPredicateForm3.toStr();
      jSPredicateForm2.standarizerPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSPredicateForm cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.38635042016015
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(FUobV.4)^eo");
      StringReader stringReader0 = new StringReader("(FUobV.4)^eo");
      stringReader0.skip((-1L));
      char[] charArray0 = new char[4];
      charArray0[0] = '_';
      charArray0[1] = '_';
      charArray0[2] = '+';
      charArray0[3] = 'L';
      stringReader0.read(charArray0);
      stringReader0.read();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.commentChar(4);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.clonePF();
      jSPredicateForm2.matches(jSPredicateForm0);
      Comparator<JSPredicateForm> comparator0 = (Comparator<JSPredicateForm>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSTerm0.sort(comparator0);
      jSTerm0.containsAll(jSPredicateForm2);
      JSSubstitution jSSubstitution0 = jSTerm0.matches(jSPredicateForm0);
      jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution1.addElements(jSSubstitution0);
      // Undeclared exception!
      try { 
        jSSubstitution0.listIterator((-1681));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1681
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6674619334292948
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(FUobV.4)^eo");
      JSJshopVars.astherisk = 0;
      JSJshopVars.astherisk = (-186);
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      jSPredicateForm0.print();
      StringReader stringReader0 = new StringReader("(FUobV.4)^eo");
      stringReader0.skip(0L);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      jSPredicateForm0.JSPredicateFormInit(streamTokenizer0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Expecting Term");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.cloneT();
      streamTokenizer0.whitespaceChars(1076, 1);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm0.print();
      jSTerm0.matches(jSPredicateForm0, jSSubstitution0);
      jSTerm0.equals(jSPredicateForm0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1761856615603072
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(FUobV.4)^eo");
      JSJshopVars.astherisk = 0;
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm0.add((Object) jSPredicateForm1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm1.clonePF();
      jSPredicateForm2.print();
      jSPredicateForm3.toStr();
      jSPredicateForm0.matches(jSPredicateForm3);
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(UobV.4)^eo");
      StreamTokenizer streamTokenizer0 = null;
      JSPredicateForm jSPredicateForm1 = null;
      try {
        jSPredicateForm1 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.854806284951481
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(FUobV.4)^eo");
      StringReader stringReader0 = new StringReader("(FUobV.4)^eo");
      stringReader0.skip((-1L));
      char[] charArray0 = new char[4];
      charArray0[0] = '_';
      charArray0[1] = '_';
      charArray0[2] = '+';
      charArray0[3] = 'L';
      stringReader0.read(charArray0);
      stringReader0.read();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader("f$+:e$u dL\"y");
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.equals(jSPredicateForm0);
      jSTerm0.equals(jSPredicateForm0);
      jSTerm0.print();
      assertFalse(jSTerm0.isVariable());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("9=(8|Q/$_UYOnmIxUA}");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.print();
      StringReader stringReader1 = new StringReader("9=(8|Q/$_UYOnmIxUA}");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.937106175829318
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("not");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.add((Object) jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm0.print();
      jSPredicateForm0.standarizerPredicateForm();
      jSTerm0.equals((JSPredicateForm) null);
      jSTerm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      jSPredicateForm0.toStr();
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.972811239983358
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(FUobV.4)^eo");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm0.add((Object) jSPredicateForm1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.listIterator();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm2.print();
      JSPredicateForm jSPredicateForm3 = jSPredicateForm2.standarizerPredicateForm();
      jSPredicateForm2.equals(jSPredicateForm1);
      jSPredicateForm3.matches(jSPredicateForm2, jSSubstitution0);
      jSPredicateForm1.toStr();
      jSPredicateForm2.equals(jSPredicateForm0);
      StringReader stringReader0 = new StringReader("(FUobV.4)^eo");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      jSPredicateForm1.JSPredicateFormInit(streamTokenizer0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.equals(jSPredicateForm1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSPredicateForm cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.2868359830561607
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "(HUobV.4i^eo";
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(HUobV.4i^eo");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringReader stringReader0 = new StringReader("^tXW vB?lRq;Wt");
      stringReader0.skip((-41L));
      stringReader0.read();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StringReader cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0900728601744656
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(FUo TTV)o");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
      StringReader stringReader0 = new StringReader("(FUo TTV)o");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSPredicateForm1.print();
      jSPredicateForm2.print();
      jSTerm0.print();
      JSPredicateForm jSPredicateForm3 = jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm1.print();
      JSPredicateForm jSPredicateForm4 = jSTerm0.standarizerPredicateForm();
      jSTerm0.equals(jSPredicateForm0);
      jSPredicateForm4.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm5 = new JSPredicateForm((String) null);
      jSPredicateForm4.spliterator();
      jSPredicateForm1.matches(jSPredicateForm3, jSSubstitution0);
      jSPredicateForm3.toStr();
      JSPredicateForm jSPredicateForm6 = null;
      try {
        jSPredicateForm6 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }
}
