/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:52:55 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Component;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.ColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.MultiPixelPackedSampleModel;
import java.awt.image.Raster;
import java.awt.image.SampleModel;
import java.awt.image.WritableRaster;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import javax.media.jai.LookupTableJAI;
import javax.media.jai.PlanarImage;
import javax.media.jai.SnapshotImage;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import javax.swing.border.SoftBevelBorder;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = (-3251);
      intArray0[1] = (-1);
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = (Integer) (-1);
      integerArray0[1] = (Integer) (-3251);
      integerArray0[2] = (Integer) (-3251);
      integerArray0[3] = (Integer) (-1);
      integerArray0[4] = (Integer) (-1);
      integerArray0[5] = (Integer) (-1);
      integerArray0[6] = (Integer) (-1);
      integerArray0[7] = (Integer) (-1);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      intArray0[2] = 0;
      intArray0[3] = 0;
      visualListModel0.undeleteElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(1, 6);
      assertNull(collection0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      int int0 = 65535;
      intArray0[0] = 65535;
      intArray0[1] = 3;
      int int1 = 1434;
      intArray0[2] = 1434;
      intArray0[3] = 6;
      intArray0[4] = (-735);
      intArray0[5] = (-137);
      visualListModel0.reverseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.listIterator();
      visualListModel0.appendAllElements(vector0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[5];
      visualListModel0.getElements();
      intArray0[0] = 14;
      intArray0[1] = 0;
      int int0 = (-1);
      visualListModel0.moveUpIndex((-1));
      visualListModel0.subList((-1), 1771, true);
      Class<Locale.Category> class0 = Locale.Category.class;
      // Undeclared exception!
      try { 
        visualListModel0.getListeners((Class) class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.util.Locale$Category; cannot be cast to [Ljava.util.EventListener;
         //
         verifyException("javax.swing.event.EventListenerList", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      visualListModel0.prependAllElements(collection0);
      visualListModel0.getElements();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(0, stack0.size());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      visualListModel0.addAllElements(0, collection0);
      visualListModel0.getSize();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.getSize();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      visualListModel0.setData(vector0);
      assertEquals(0, vector0.size());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1697;
      visualListModel0.getElementAt(1697);
      visualListModel0.getListDataListeners();
      // Undeclared exception!
      try { 
        visualListModel0.removeElements((int[]) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      boolean boolean0 = false;
      visualListModel0.removeElements(intArray0, false);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.isEmpty();
      visualListModel0.appendAllElements(treeSet0);
      int int0 = 0;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-1118), (-1118));
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int int0 = 572;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.subList(572, (-978), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(572) > toIndex(-978)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.9730014063936123
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(11, 345);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.removeElements((-4429), 7, true);
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      visualListModel0.setData(vector0);
      visualListModel0.addAllElements(11, (Collection<VisualPageListItem>) vector0);
      int[] intArray0 = new int[1];
      intArray0[0] = 11;
      visualListModel0.moveUpIndexes(intArray0);
      assertNotSame(visualListModel0, visualListModel1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 604;
      visualListModel0.moveDownIndexes(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.prependAllElements(arrayList0);
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1557;
      visualListModel0.getListDataListeners();
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1557, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1557
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      boolean boolean0 = false;
      int int0 = (-3366);
      visualListModel0.subList((-3366), 4588, false);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-1), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      int int1 = 0;
      visualListModel0.removeElements(0, 0, true);
      int[] intArray0 = new int[1];
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        vector0.containsAll((Collection<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractCollection", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.appendAllElements(arrayList0);
      visualListModel0.elementsChanged();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[2] = integer2;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.addAllElements((-2194), (Collection<VisualPageListItem>) arrayDeque0);
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.clearData();
      visualListModel0.elementsChanged();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Class<DefaultTableModel> class0 = DefaultTableModel.class;
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getListeners((Class) class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljavax.swing.table.DefaultTableModel; cannot be cast to [Ljava.util.EventListener;
         //
         verifyException("javax.swing.event.EventListenerList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 240;
      intArray0[2] = 828;
      intArray0[3] = 7;
      intArray0[4] = (-4641);
      intArray0[5] = (-80);
      intArray0[6] = 1000;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.clearData();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(46, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 46
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.moveUpIndex(2598);
      visualListModel0.addAllElements(2598, (Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = (-3251);
      int int0 = (-1);
      intArray0[1] = (-1);
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = (Integer) (-1);
      integerArray0[1] = (Integer) (-3251);
      integerArray0[2] = (Integer) (-3251);
      integerArray0[3] = (Integer) (-1);
      integerArray0[4] = (Integer) (-1);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      integerArray0[5] = (Integer) (-1);
      integerArray0[6] = (Integer) (-1);
      integerArray0[7] = (Integer) (-1);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.subList((-3251), int0);
      visualListModel0.updateElementAt((-3251), (VisualPageListItem) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 728;
      intArray0[8] = 0;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.clearData();
      VisualListModel visualListModel1 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel1.prependAllElements(treeSet0);
      visualListModel1.moveDownIndex(1024);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) treeSet0);
      int int0 = 1;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, "", "org.pdfsam.guiclient.commons.models.VisualListModel");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.351783994289646
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = (-1394);
      intArray0[1] = 1;
      intArray0[2] = 270;
      intArray0[3] = (-4211);
      intArray0[4] = 1;
      intArray0[5] = 270;
      intArray0[6] = 907;
      intArray0[7] = 6;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[7];
      intArray1[0] = (-307);
      intArray1[1] = (-2303);
      intArray1[2] = 264;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 32;
      intArray1[6] = 4;
      visualListModel0.reverseElements(intArray1);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.removeElements(10, (-1858), false);
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      visualListModel1.setData(vector0);
      visualListModel0.addAllElements((-2211), (Collection<VisualPageListItem>) vector0);
      visualListModel1.moveUpIndexes(intArray0);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1697;
      visualListModel0.getElementAt(1697);
      visualListModel0.getListDataListeners();
      int int1 = (-803);
      visualListModel0.moveDownIndex((-803));
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-803), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -803
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1383972463477248
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[1];
      intArray0[0] = 11;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.moveDownIndex(11);
      visualListModel0.subList(716, 11, false);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.getElements();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel1.setData((Vector<VisualPageListItem>) stack0);
      assertTrue(stack0.empty());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-978));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -978
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.1383330595080277
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[1];
      intArray0[0] = 11;
      visualListModel0.getElements();
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.moveDownIndex(11);
      visualListModel0.subList(716, 11, false);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7480673485460891
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      visualListModel0.addAllElements(0, collection0);
      visualListModel0.getSize();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.getSize();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      assertEquals(1, visualListModel1.getSize());
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1177;
      intArray0[3] = 23;
      intArray0[4] = 23;
      intArray0[5] = 23;
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualPageListItem visualPageListItem0 = null;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.moveUpIndex((-317));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      intArray0[2] = 1177;
      intArray0[3] = 23;
      intArray0[4] = 23;
      intArray0[5] = 23;
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[8];
      visualPageListItemArray1[0] = null;
      visualPageListItemArray1[1] = null;
      visualPageListItemArray1[2] = null;
      visualPageListItemArray1[3] = null;
      visualPageListItemArray1[4] = null;
      visualPageListItemArray1[5] = null;
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.trimToSize();
      stack0.setSize(20000);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.6674619334292948
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.moveUpIndex((-317));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[0];
      visualListModel0.moveUpIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[11];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1177;
      intArray0[3] = 23;
      intArray0[4] = 23;
      intArray0[5] = 23;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElementAt(visualPageListItemArray0[4], 0);
      int int0 = visualListModel0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.143952200643869
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      visualListModel0.addAllElements(0, collection0);
      visualListModel0.getSize();
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[0];
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      assertEquals(2, visualListModel1.getSize());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8462202193216335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualPageListItem visualPageListItem0 = null;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      visualListModel0.moveUpIndex(1177);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(7, visualListModel0.getSize());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndex((-317));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements((-317), (Collection<VisualPageListItem>) vector0);
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      intArray0[2] = 1177;
      intArray0[3] = 23;
      intArray0[4] = 23;
      intArray0[5] = 23;
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[7];
      visualListModel0.setData(visualPageListItemArray1);
      int int0 = 1;
      int[] intArray1 = new int[2];
      intArray1[0] = 1177;
      intArray1[1] = (-317);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1177
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.addElementAt(visualPageListItemArray0[1], 23);
      int int0 = visualListModel0.getSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.9701814400260844
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      visualListModel0.moveUpIndex(1177);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.clearData();
      visualListModel2.elementChanged(visualPageListItemArray0[1]);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      visualListModel0.moveUpIndex(1177);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndex(0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel1.addElementAt(visualPageListItemArray0[6], 0);
      VisualListModel visualListModel2 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = visualPageListItemArray0[0];
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.6094379124341
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.setData(visualPageListItemArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) arrayList0);
      visualListModel0.moveUpIndex(1);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      ArrayList<VisualPageListItem> arrayList1 = new ArrayList<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) arrayList0);
      assertEquals(1, visualListModel1.getSize());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.0982737395252498
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.clearData();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = visualPageListItemArray0[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(intArray0, true);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      int[] intArray1 = new int[0];
      visualListModel2.rotateAnticlockwiseElements(intArray1);
      assertNotSame(intArray1, intArray0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.9701814400260844
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[0] = 2414;
      intArray0[1] = (-533);
      intArray0[2] = (-1670);
      intArray0[3] = 1782;
      intArray0[4] = (-2116);
      intArray0[5] = (-1201);
      intArray0[6] = (-31);
      intArray0[7] = 10000;
      Integer[] integerArray0 = new Integer[0];
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      visualListModel0.addListDataListener(jComboBox0);
      intArray0[8] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      visualListModel0.moveDownIndexes(intArray1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.getListDataListeners();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(1, 1, false);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }
}
