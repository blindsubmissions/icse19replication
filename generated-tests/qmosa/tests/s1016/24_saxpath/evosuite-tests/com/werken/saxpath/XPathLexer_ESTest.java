/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:11:04 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.werken.saxpath.Token", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4l}9");
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("t{");
      xPathLexer0.not();
      xPathLexer0.literal();
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-1111));
      assertEquals("t{", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      char char0 = 'O';
      Token token0 = xPathLexer0.dots();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.werken.saxpath.Token", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertNotNull(token2);
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-n!^HhqVan$d:HClS,");
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("!^", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("H", token2.getTokenText());
      
      xPathLexer0.equals();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (17) (-)", string0);
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("q", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      Token token4 = xPathLexer0.rightParen();
      assertEquals("V", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("a", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("n", token6.getTokenText());
      
      xPathLexer0.star();
      xPathLexer0.consume();
      Token token7 = xPathLexer0.star();
      assertEquals(":", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals("H", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.getPreviousToken();
      assertEquals("-", token9.getTokenText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.8133554045006153
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",jn");
      Token token0 = xPathLexer0.minus();
      assertEquals(",", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("j", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("n", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token5);
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertNotNull(token1);
      
      xPathLexer0.consume(0);
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("?", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.dots();
      assertEquals("c", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals("`", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("$", token6.getTokenText());
      
      xPathLexer0.minus();
      xPathLexer0.or();
      xPathLexer0.getXPath();
      xPathLexer0.and();
      xPathLexer0.endPosition();
      Token token7 = xPathLexer0.minus();
      assertEquals("A", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      assertEquals("c", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("o", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      
      xPathLexer0.equals();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.consume(287);
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      char char0 = xPathLexer0.LA(287);
      assertEquals('\uFFFF', char0);
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer0.notEquals();
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.100546977552823
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.star();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.equals();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token6.getTokenType());
      
      char char0 = xPathLexer0.LA(1357);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(11, int0);
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.consume(2667);
      xPathLexer0.identifierOrOperatorName();
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      int int1 = xPathLexer0.endPosition();
      assertEquals(0, int1);
      
      Token token11 = xPathLexer0.rightParen();
      assertEquals(2, token11.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.consume(31);
      xPathLexer0.colon();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      xPathLexer0.div();
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.710366938160241
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xCs5`.");
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.literal();
      xPathLexer0.literal();
      xPathLexer0.at();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.2435566421942243
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(")");
      xPathLexer0.consume(0);
      Token token0 = xPathLexer0.pipe();
      assertEquals(")", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.setXPath("!X=tK_/\"K");
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      xPathLexer0.rightParen();
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer0.endPosition();
      Token token6 = xPathLexer0.literal();
      assertEquals(27, token6.getTokenType());
      assertNotNull(token6);
      assertEquals("_/\"", token6.getTokenText());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.hasMoreChars();
      xPathLexer0.setXPath("!X=tK_/\"K");
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer0.rightParen();
      assertEquals("!", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals("X", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      xPathLexer0.and();
      Token token10 = xPathLexer0.identifier();
      assertEquals(15, token10.getTokenType());
      assertEquals("", token10.getTokenText());
      
      xPathLexer0.hasMoreChars();
      xPathLexer0.setXPath("p7s J){/`lm^K0.a");
      Token token11 = xPathLexer0.at();
      assertEquals("p", token11.getTokenText());
      assertEquals(16, token11.getTokenType());
      
      xPathLexer0.consume(9);
      Token token12 = xPathLexer0.number();
      assertEquals(30, token12.getTokenType());
      assertEquals("", token12.getTokenText());
      
      xPathLexer0.consume(9);
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('o');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8261310407908403
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("*", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("0", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      xPathLexer0.getPreviousToken();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals("lNH", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.2273116032345115
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.consume(0);
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-4401));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6016223038259187
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Fw{r;J$yOCUTP/W&");
      xPathLexer0.setXPath("Fw{r;J$yOCUTP/W&");
      xPathLexer0.plus();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      xPathLexer0.isIdentifierChar('D');
      xPathLexer0.relationalOperator();
      token0.toString();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("Fw{r;J$yOCUTP/W&");
      xPathLexer1.notEquals();
      xPathLexer1.operatorName();
      xPathLexer1.LA(1);
      xPathLexer1.mod();
      xPathLexer1.whitespace();
      xPathLexer1.div();
      Token token1 = xPathLexer1.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8505253737979601
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      xPathLexer0.getPreviousToken();
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals("om.werken.saxpath.XPathLexer", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.253001469915882
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Fw{r;J$yOCUTP/W&");
      xPathLexer0.plus();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      xPathLexer0.isIdentifierChar('D');
      xPathLexer0.relationalOperator();
      token0.toString();
      token0.toString();
      xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.getXPath();
      token0.toString();
      xPathLexer0.colon();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      token0.toString();
      xPathLexer0.comma();
      xPathLexer0.minus();
      xPathLexer0.setXPath("[ (32) ({)");
      xPathLexer0.hasMoreChars();
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.getPreviousToken();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-1111));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3362888356828417
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.comma();
      assertEquals("v", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.plus();
      assertEquals("Z", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.setXPath("=vZ]8-Y ?4I");
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("v", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer1.leftParen();
      xPathLexer0.mod();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("Z", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("xSl;k\"[l\b6SP'Up\"");
      xPathLexer2.or();
      Token token6 = xPathLexer0.doubleColon();
      assertEquals("]8", token6.getTokenText());
      assertEquals(19, token6.getTokenType());
      
      xPathLexer2.operatorName();
      Token token7 = xPathLexer1.leftParen();
      assertEquals(1, token7.getTokenType());
      assertEquals("v", token7.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.div();
      Token token8 = xPathLexer2.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("x", token8.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9029324993362039
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.consume(31);
      xPathLexer0.colon();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.getPreviousToken();
      Token token5 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.609928039062188
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.minus();
      xPathLexer1.isIdentifierStartChar('[');
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer2.number();
      xPathLexer0.number();
      xPathLexer1.setXPath(":o+M\"");
      xPathLexer1.getPreviousToken();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.2451300452365077
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1K(");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("1K", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.consume(31);
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer(";8C");
      Token token1 = xPathLexer1.colon();
      assertEquals(";", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer1.leftParen();
      assertEquals("8", token3.getTokenText());
      
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token4 = xPathLexer2.nextToken();
      assertEquals(3, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      xPathLexer1.or();
      Token token5 = xPathLexer1.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer1.operatorName();
      Token token6 = xPathLexer1.leftParen();
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertNull(token7);
      
      xPathLexer2.div();
      Token token8 = xPathLexer1.dollar();
      assertEquals(26, token8.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = new Token(0, "com.werken.saxpath.XPathLexer", 0, 0);
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.setPreviousToken(token0);
      assertEquals(18, token0.getTokenType());
      
      xPathLexer1.comma();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("P<S_NAU)CUKJ/WylBJ|");
      Token token3 = xPathLexer2.comma();
      assertEquals("P", token3.getTokenText());
      
      Token token4 = xPathLexer2.relationalOperator();
      assertEquals(7, token4.getTokenType());
      
      Token token5 = xPathLexer2.minus();
      assertEquals("S", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.or();
      xPathLexer3.consume(0);
      Token token6 = xPathLexer2.identifierOrOperatorName();
      assertNotNull(token6);
      assertEquals("_NAU", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer3.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer3.rightParen();
      assertEquals(2, token8.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.642535465168865
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":G8IGI{x(A");
      xPathLexer0.doubleColon();
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.setXPath(":G8IGI{x(A");
      xPathLexer0.consume(1);
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer0.consume(1);
      xPathLexer0.doubleColon();
      xPathLexer0.or();
      xPathLexer0.whitespace();
      xPathLexer0.isIdentifierStartChar('E');
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.number();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }
}
