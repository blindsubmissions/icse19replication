/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:08:00 GMT 2018
 */

package org.quickserver.net.server;

import org.junit.Test;
import static org.junit.Assert.*;
import java.net.Socket;
import java.nio.channels.SocketChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.junit.runner.RunWith;
import org.quickserver.net.qsadmin.CommandHandler;
import org.quickserver.net.qsadmin.Data;
import org.quickserver.net.server.Authenticator;
import org.quickserver.net.server.ClientAuthenticationHandler;
import org.quickserver.net.server.ClientBinaryHandler;
import org.quickserver.net.server.ClientCommandHandler;
import org.quickserver.net.server.ClientData;
import org.quickserver.net.server.ClientEvent;
import org.quickserver.net.server.ClientEventHandler;
import org.quickserver.net.server.ClientExtendedEventHandler;
import org.quickserver.net.server.ClientObjectHandler;
import org.quickserver.net.server.ClientWriteHandler;
import org.quickserver.net.server.QuickServer;
import org.quickserver.net.server.TheClient;
import org.quickserver.net.server.impl.BlockingClientHandler;
import org.quickserver.net.server.impl.DefaultClientEventHandler;
import org.quickserver.net.server.impl.NonBlockingClientHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TheClient_ESTest extends TheClient_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setCommunicationLogging(true);
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      QuickServer quickServer0 = new QuickServer("'gnie7?c`$qAt.", 1);
      theClient0.setServer(quickServer0);
      theClient0.setTrusted(false);
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getMaxAuthTryMsg();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getSocket();
      theClient0.setSocket((Socket) null);
      NonBlockingClientHandler nonBlockingClientHandler0 = new NonBlockingClientHandler(125);
      nonBlockingClientHandler0.getSocketChannel();
      assertEquals("<ClientHandler-Pool#125-ID:1>", nonBlockingClientHandler0.getName());
      
      theClient0.setSocketChannel((SocketChannel) null);
      theClient0.getSocketChannel();
      int int0 = theClient0.getTimeout();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setSocket((Socket) null);
      theClient0.setMaxAuthTryMsg("l1rfSF|u!g");
      theClient0.setTimeoutMsg("l1rfSF|u!g");
      theClient0.setSocket((Socket) null);
      theClient0.getClientCommandHandler();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientAuthenticationHandler();
      theClient0.setTimeout(2667);
      theClient0.getCommunicationLogging();
      theClient0.getClientCommandHandler();
      assertEquals(2667, theClient0.getTimeout());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.setMaxAuthTryMsg("");
      theClient0.setTimeoutMsg((String) null);
      theClient0.getClientAuthenticationHandler();
      theClient0.getAuthenticator();
      theClient0.getClientEvent();
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      theClient0.setClientEventHandler(defaultClientEventHandler0);
      TheClient theClient1 = new TheClient();
      theClient1.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.getClientWriteHandler();
      theClient1.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientAuthenticationHandler();
      theClient1.getClientCommandHandler();
      theClient0.setMaxAuthTry(65536);
      theClient0.getTimeoutMsg();
      theClient1.setTimeoutMsg((String) null);
      theClient0.setTimeout((-2833));
      theClient1.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setAuthenticator((Authenticator) null);
      assertEquals(65536, theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      ClientEvent clientEvent0 = ClientEvent.MAX_CON;
      theClient0.setClientEvent(clientEvent0);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getSocket();
      theClient0.setSocket((Socket) null);
      TheClient theClient1 = new TheClient();
      theClient1.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getSocketChannel();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientBinaryHandler();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.setMaxAuthTryMsg((String) null);
      theClient0.getClientData();
      int int0 = theClient0.getMaxAuthTry();
      assertEquals(0, int0);
      
      theClient0.setTimeout(0);
      theClient0.setSocketChannel((SocketChannel) null);
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setClientData((ClientData) null);
      ClientEvent clientEvent1 = ClientEvent.WRITE;
      theClient0.setClientEvent(clientEvent1);
      assertEquals(0, theClient0.getTimeout());
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeoutMsg("no socket");
      Data data0 = new Data();
      theClient0.setClientData(data0);
      theClient0.getClientWriteHandler();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.setTimeoutMsg("no socket");
      theClient0.getClientWriteHandler();
      theClient0.setTimeout(2352);
      theClient0.setTrusted(false);
      theClient0.setTrusted(false);
      theClient0.getClientWriteHandler();
      theClient0.getTimeoutMsg();
      QuickServer quickServer0 = new QuickServer();
      theClient0.setServer(quickServer0);
      theClient0.getMaxConnectionMsg();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setMaxAuthTryMsg("Gy='B;");
      assertEquals(2352, theClient0.getTimeout());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      assertFalse(theClient0.getTrusted());
      
      theClient0.setTrusted(true);
      theClient0.setMaxConnectionMsg("=$lz<9C3 'MZA");
      assertTrue(theClient0.getTrusted());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.getAuthenticator();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      blockingClientHandler0.getServer();
      theClient0.setServer((QuickServer) null);
      theClient0.setAuthenticator((Authenticator) null);
      blockingClientHandler0.getClientData();
      assertEquals("<ClientHandler-Pool#-1-ID:1>", blockingClientHandler0.getName());
      
      theClient0.setClientData((ClientData) null);
      theClient0.setTrusted(true);
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.getClientWriteHandler();
      theClient0.getSocketChannel();
      theClient0.getClientEventHandler();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getMaxAuthTryMsg();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientBinaryHandler();
      assertTrue(theClient0.getTrusted());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTryMsg("<W<ZTrNI1F8u)DO");
      theClient0.setTimeoutMsg("<W<ZTrNI1F8u)DO");
      theClient0.getSocket();
      theClient0.setSocket((Socket) null);
      theClient0.setCommunicationLogging(true);
      theClient0.setMaxAuthTry(0);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setCommunicationLogging(true);
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getServer();
      theClient0.setServer((QuickServer) null);
      theClient0.setMaxAuthTry(4280);
      theClient0.toString();
      theClient0.getClientWriteHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientEventHandler();
      theClient0.setMaxAuthTry(4280);
      theClient0.getClientData();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getClientData();
      theClient0.setClientData((ClientData) null);
      theClient0.getMaxAuthTryMsg();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      assertEquals(4280, theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTrusted(false);
      theClient0.setTimeout(0);
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getCommunicationLogging();
      theClient0.getTrusted();
      theClient0.getAuthenticator();
      theClient0.getSocketChannel();
      theClient0.toString();
      theClient0.setTrusted(true);
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler(0);
      blockingClientHandler0.getServer();
      theClient0.setServer((QuickServer) null);
      theClient0.getClientEvent();
      theClient0.setTimeoutMsg("VihVV*+;_z9");
      assertTrue(theClient0.getTrusted());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      MockSocket mockSocket0 = new MockSocket();
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      theClient0.setClientEventHandler(defaultClientEventHandler0);
      theClient0.setTimeoutMsg((String) null);
      theClient0.setSocket(mockSocket0);
      theClient0.setClientData((ClientData) null);
      theClient0.getClientObjectHandler();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getServer();
      theClient0.toString();
      String string0 = theClient0.toString();
      assertFalse(theClient0.getTrusted());
      assertEquals("{TheClient Socket[unconnected], Event: (ClientEvent-Run Blocking)}", string0);
      assertTrue(theClient0.getCommunicationLogging());
  }
}
