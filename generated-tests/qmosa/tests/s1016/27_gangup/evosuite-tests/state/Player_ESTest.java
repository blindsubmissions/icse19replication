/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:56:54 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.FilterOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-1528), "\"P/pXD;Q", "h'+sa+i:`%oQ8K<5C+", 3);
      Party party0 = new Party();
      party0.add(player0);
      party0.id = 2381;
      player0.remove(party0);
      player0.reset(false);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      Party party1 = new Party(108);
      player0.next = party1;
      byteArray0[2] = (byte) (-128);
      player0.unpack(byteArray0);
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      float float0 = player0.getY();
      assertFalse(player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(4919, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 4919, 4919);
      player0.pack();
      assertEquals(4919, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(4919, player0.getPictureId());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      player0.getTimeOfDeath();
      player0.type();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      Player player1 = new Player();
      // Undeclared exception!
      try { 
        dataInputStream0.readFloat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "eTm~jD";
      Player player0 = new Player(1409, "eTm~jD", 1409);
      player0.getSubparty();
      player0.getMoney();
      player0.setDead((long) 1409, false);
      player0.reset(false);
      player0.setConnected(true);
      player0.reset(true);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(5);
      String string0 = player0.getName();
      assertEquals("Player5", string0);
      
      player0.reset(false);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-1735));
      player0.id = (-1735);
      player0.id = (-1735);
      player0.setMoney((-1902.5538F));
      player0.gangStrength();
      player0.getName();
      player0.setDead((long) (-1735));
      player0.setConnected(false);
      player0.setX((-1735));
      player0.getIP();
      assertEquals((-1735L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(185, "M\r>h$", "0.0.0.0", (-912));
      player0.setConnected(false);
      Player player1 = new Player((-1498), "VF[GqK)D3HB", 0);
      player0.isJoinOK(player1, false);
      MockFile mockFile0 = new MockFile("0.0.0.0", "VF[GqK)D3HB");
      mockFile0.setReadable(false, false);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(4, "7=e{R!z9+W'", 4);
      player0.pack();
      player0.getName();
      player0.getX();
      player0.id = (-1424);
      player0.setDead((long) 4, true);
      Player player1 = new Player(4, "", (-1108));
      player0.prev = (Party) player1;
      player1.add(player0);
      player0.setX(0.2F);
      player0.gangStrength();
      player0.getMoney();
      assertEquals(0.2F, player0.getX(), 0.01F);
      
      int int0 = player1.gangStrength();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.add(player1);
      int int0 = player0.gangStrength();
      assertEquals(2, int0);
      
      Player player2 = new Player();
      byte[] byteArray0 = new byte[0];
      player2.unpack(byteArray0);
      player0.setJoinOK(player2, true);
      assertEquals("0.0.0.0", player2.getIP());
      assertEquals("Player-1", player2.toString());
      assertTrue(player2.isConnected());
      assertEquals(0, player2.getPictureId());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertFalse(player2.isDead());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(2845, "", "", 2638);
      player0.setDead((long) 2638);
      player0.gangStrength();
      player0.remove((Party) null);
      player0.setX(2638);
      player0.setZ(0.0F);
      player0.setDead((long) 2845);
      player0.pack();
      player0.isConnected();
      player0.type();
      int int0 = player0.getStrength();
      assertEquals(2845L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(440);
      Player player1 = new Player();
      player0.add(player1);
      player0.setY(440);
      player1.setDead((-270L));
      player1.remove(player0);
      player0.setConnected(false);
      player0.setX(440);
      player0.setDead();
      player1.isJoinOK(player0, false);
      player0.setDead();
      player1.getIP();
      player0.getMoney();
      player0.getStrength();
      player1.pack();
      player0.isJoinOK(player1, false);
      Player player2 = new Player(1);
      player1.isJoinOK(player2, false);
      assertEquals((-270L), player1.getTimeOfDeath());
      
      player2.setDead((long) 1, false);
      assertEquals("Player1", player2.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0, "m/,6CzXU &Q_(tHQ", "m/,6CzXU &Q_(tHQ", 0, 0);
      player0.getIP();
      player0.setDead();
      player0.getZ();
      float float0 = player0.getMoney();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.615630577027551
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(2, "", "FT", 0);
      player0.gangStrength();
      player0.setZ(2);
      player0.prev = null;
      player0.getX();
      player0.setDead((-512L));
      player0.setConnected(true);
      Party party0 = player0.next;
      player0.add((Party) null);
      player0.getIP();
      player0.isConnected();
      player0.toString();
      player0.isDead();
      player0.setDead((long) 0);
      player0.setY((-10.053585F));
      assertEquals((-10.053585F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(0);
      boolean boolean0 = player0.isDead();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player0", player0.getName());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-417), ":`v,ZzS ;Gq", "_hS0[vuf;", (-1728), (-417));
      assertEquals((-417), player0.getStrength());
      assertEquals(":`v,ZzS ;Gq", player0.getIP());
      
      Player player1 = new Player(5, "9PzhfV", "9PzhfV", 1399);
      Player player2 = new Player(1399, "LQ-7jQ0\"", "LQ-7jQ0\"", (-1728));
      player2.setJoinOK(player1, false);
      boolean boolean0 = player2.isJoinOK(player1, false);
      assertTrue(player2.isConnected());
      assertFalse(player2.isDead());
      assertEquals(1, player2.getStrength());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals((-1728), player2.getPictureId());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(440);
      Player player1 = new Player();
      player0.add(player1);
      player0.setY(440);
      player1.setDead((-270L));
      player1.remove(player0);
      player0.setConnected(false);
      player0.setX(440);
      player0.setDead();
      player1.isJoinOK(player0, false);
      player0.setDead();
      player0.getMoney();
      player0.getStrength();
      byte[] byteArray0 = player1.pack();
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      player0.unpack(byteArray0);
      System.setCurrentTimeMillis(186L);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(1458, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "^", 2094);
      Player player1 = new Player((-1), "^", "", (-1));
      player1.reset(true);
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis(1392409296320L);
      boolean boolean1 = player0.isJoinOK(player1, false);
      assertEquals(0.0F, player1.getMoney(), 0.01F);
      assertEquals((-1), player1.getPictureId());
      assertFalse(boolean1 == boolean0);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("^", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertFalse(boolean1);
  }
}
