/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:58:12 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1995));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 285212675, "8P>L1dr_Y&n", "8P>L1dr_Y&n", "(tXQZ&X@U", "8P>L1dr_Y&n");
      ByteVector byteVector0 = new ByteVector(1);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteVector0.put12((-779), 2218);
      byteArray0[3] = (byte) (-11);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)112;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byteVector0.putByteArray(byteArray0, (byte)0, (byte)0);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitEnd();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4609));
      classWriter0.newDouble((-4609));
      classWriter0.newClass("LzDo~?.=0V@]");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-4609), "org.apache.commons.io.filefilter.DirectoryFileFilter", "", "org.apache.commons.io.filefilter.DirectoryFileFilter", "");
      classWriter0.visit((-1570), 4, "", "", "LzDo~?.=0V@]", (String[]) null);
      FieldWriter fieldWriter1 = fieldWriter0.next;
      fieldWriter0.getSize();
      FieldWriter fieldWriter2 = null;
      try {
        fieldWriter2 = new FieldWriter(classWriter0, 2420, "Deprecated", "org.apache.commons.io.filefilter.HiddenFileFilter", "", fieldWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.FieldWriter@c
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.045098040870533
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1995));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 285212675, "8P>L1dr_Y&n", "8P>L1dr_Y&n", "(tXQZ&X@U", "8P>L1dr_Y&n");
      ByteVector byteVector0 = new ByteVector(1);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteVector0.put12((-779), 2218);
      byteArray0[3] = (byte) (-11);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)112;
      ByteVector byteVector1 = byteVector0.put11((-1995), 5);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("8P>L1dr_Y&n", false);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector1);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newDouble(3244.14);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Oa", "", "{9R!GB", (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(8);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.914285581467099
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1995));
      ClassWriter classWriter1 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, 7, "Class not found", "Class not found", "", "8P>L1dr_Y&n");
      ByteVector byteVector0 = new ByteVector(1124);
      ByteVector byteVector1 = byteVector0.put12(3164, (byte)0);
      ByteVector byteVector2 = byteVector1.putByteArray((byte[]) null, 1, 65535);
      fieldWriter0.put(byteVector2);
      fieldWriter0.visitEnd();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 65535, "Label offset position has not been resolved yet", "|", "", "|");
      int int0 = fieldWriter1.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0114042647073518
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1995));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "8P>L1dr_Y&n", "l=i=zLyk+}@o[<*", "", "(tXQZ&X@U");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put11((-1654), 4096);
      fieldWriter0.put(byteVector1);
      ByteVector byteVector2 = new ByteVector(2);
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter1.put(byteVector2);
      fieldWriter0.put(byteVector2);
      int int0 = fieldWriter1.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3667110520552042
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1995));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 285212675, "<c/", "<c/", "(tXQZ&X@U", "<c/");
      ByteVector byteVector0 = new ByteVector(1);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      fieldWriter0.visitAnnotation(":", true);
      Attribute attribute0 = new Attribute(":");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitEnd();
      Attribute attribute1 = new Attribute("<c/");
      fieldWriter0.visitAttribute(attribute1);
      ByteVector byteVector1 = byteVector0.putByte(6);
      ByteVector byteVector2 = byteVector1.putLong((byte)0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9743147528693494
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "value ", "", "", "value ");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-4816), "value ", "", "", "value ");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putUTF8("@^h!klXPn");
      ByteVector byteVector2 = byteVector1.putInt(491);
      ByteVector byteVector3 = byteVector2.putByte((-602));
      ByteVector byteVector4 = byteVector3.put11(1, 353);
      byteVector4.put11(0, 1);
      fieldWriter1.put(byteVector4);
      assertSame(byteVector0, byteVector4);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0359364314600865
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1995));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 285212675, "8P>L1dr_Y&n", "8P>L1dr_Y&n", "(tXQZ&X@U", "8P>L1dr_Y&n");
      ByteVector byteVector0 = new ByteVector(1);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteVector0.putLong(285212675);
      byteArray0[1] = (byte)0;
      ByteVector byteVector1 = byteVector0.put11(131072, 1);
      fieldWriter0.visitAnnotation("ConstantValue", true);
      fieldWriter0.put(byteVector0);
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter1.visitAnnotation("Signature", true);
      fieldWriter1.getSize();
      fieldWriter0.put(byteVector1);
      fieldWriter1.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6829081047004717
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1995));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", (String) null, "");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9002046513038222
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1995));
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.version = (-1995);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "8P>L1dr_Y&n", "l=i=zLyk+}@o[<*", "", "(tXQZ&X@U");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put11((-1654), 4096);
      fieldWriter0.put(byteVector1);
      ByteVector byteVector2 = new ByteVector(2);
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter1.put(byteVector2);
      fieldWriter0.put(byteVector2);
      fieldWriter1.getSize();
      fieldWriter1.put(byteVector1);
      assertSame(fieldWriter1, fieldWriter0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1892379099281574
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1995));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 285212675, "8Pc>L1dr_Y&n", "8Pc>L1dr_Y&n", "8Pc>L1dr_Y&n", "8Pc>L1dr_Y&n");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put11(1000, 2);
      byteVector1.putLong(0L);
      fieldWriter0.visitAnnotation("PRsyp@ze_v!}K", true);
      fieldWriter0.put(byteVector1);
      FieldWriter fieldWriter1 = classWriter0.firstField;
      Attribute attribute0 = new Attribute("8Pc>L1dr_Y&n");
      fieldWriter1.visitAttribute(attribute0);
      fieldWriter1.next = fieldWriter0;
      fieldWriter1.visitAnnotation("", true);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9743147528693494
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-398));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put11(2, 1);
      fieldWriter0.put(byteVector1);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }
}
