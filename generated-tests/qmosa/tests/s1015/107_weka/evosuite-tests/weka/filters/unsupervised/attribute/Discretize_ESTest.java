/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:30:06 GMT 2018
 */

package weka.filters.unsupervised.attribute;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.Range;
import weka.core.SparseInstance;
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.Discretize;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Discretize_ESTest extends Discretize_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      boolean boolean0 = true;
      discretize0.getCapabilities();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      discretize0.toString();
      stringArray0[1] = "";
      stringArray0[2] = "inv(";
      discretize0.getAttributeIndices();
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Range range0 = discretize0.m_DiscretizeCols;
      discretize0.m_DiscretizeCols = range0;
      String string0 = discretize0.desiredWeightOfInstancesPerIntervalTipText();
      assertEquals("Sets the desired weight of instances per interval for equal-frequency binning.", string0);
      
      boolean boolean0 = discretize0.getUseEqualFrequency();
      assertFalse(boolean0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getFindNumBins());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setFindNumBins(true);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getBinRangesString((-1718));
      discretize0.getRevision();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "8964";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "8964";
      stringArray0[4] = "8964";
      stringArray0[5] = "8964";
      stringArray0[6] = "8964";
      stringArray0[7] = null;
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Discretize discretize0 = new Discretize("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      discretize0.setOptions(stringArray0);
      discretize0.setBins(3215);
      discretize0.invertSelectionTipText();
      discretize0.globalInfo();
      assertEquals(3215, discretize0.getBins());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Discretize discretize0 = new Discretize("-R <col1,col2-col4,...>");
      discretize0.setUseBinNumbers(false);
      discretize0.getCapabilities();
      discretize0.getInvertSelection();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-R <col1,col2-col4,...>";
      Filter.runFilter(discretize0, stringArray0);
      String[] stringArray1 = new String[7];
      stringArray1[0] = "-R <col1,col2-col4,...>";
      stringArray1[1] = "-R <col1,col2-col4,...>";
      stringArray1[2] = "weka/core/Capabilities.props";
      stringArray1[3] = "c04y=^Z;DTFy";
      stringArray1[4] = "-R <col1,col2-col4,...>";
      stringArray1[5] = "weka/core/Capabilities.props";
      stringArray1[6] = "-R <col1,col2-col4,...>";
      discretize0.setOptions(stringArray1);
      discretize0.getCutPoints(14);
      discretize0.getAttributeIndices();
      discretize0.attributeIndicesTipText();
      discretize0.findNumBinsTipText();
      discretize0.getBins();
      discretize0.getUseEqualFrequency();
      String string0 = discretize0.getAttributeIndices();
      assertEquals("-R <col1,col2-col4,...>", string0);
      
      Discretize.main(stringArray1);
      discretize0.getBins();
      discretize0.setOutputFormat();
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[8][6];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (-1704.640496385331);
      doubleArray1[1] = 0.0;
      doubleArray1[2] = 1.0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (-1838.2979);
      doubleArray2[1] = 0.0;
      doubleArray2[2] = 1.0;
      doubleArray2[3] = 1.0;
      doubleArray2[4] = 0.0;
      doubleArray2[5] = (-1704.640496385331);
      doubleArray2[6] = (-1704.640496385331);
      doubleArray2[7] = 0.0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[6];
      doubleArray3[0] = (-1704.640496385331);
      doubleArray3[1] = 1.0;
      doubleArray3[2] = (-1704.640496385331);
      doubleArray3[3] = (-3462.31722586882);
      doubleArray3[4] = (-1704.640496385331);
      doubleArray3[5] = 1.0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[9];
      doubleArray4[0] = 1.0;
      doubleArray4[1] = (-3462.31722586882);
      doubleArray4[2] = (-3462.31722586882);
      doubleArray4[3] = 0.0;
      doubleArray4[4] = (-3462.31722586882);
      doubleArray4[5] = 1.0;
      doubleArray4[6] = (-3462.31722586882);
      doubleArray4[7] = (-3462.31722586882);
      doubleArray4[8] = (-519.3);
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[4];
      doubleArray5[0] = 491.4;
      doubleArray5[1] = 2244.684;
      doubleArray5[2] = 1.0;
      doubleArray5[3] = (-1704.640496385331);
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[0];
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[0];
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[0];
      doubleArray0[7] = doubleArray8;
      discretize0.m_CutPoints = doubleArray0;
      discretize0.attributeIndicesTipText();
      // Undeclared exception!
      try { 
        discretize0.getBinRangesString(66);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 66
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.invertSelectionTipText();
      assertEquals("Set attribute selection mode. If false, only selected (numeric) attributes in the range will be discretized; if true, only non-selected attributes will be discretized.", string0);
      
      int[] intArray0 = new int[8];
      intArray0[0] = 10;
      intArray0[1] = (-2845);
      intArray0[2] = (-1158);
      intArray0[3] = (-1026);
      intArray0[4] = 1860;
      intArray0[5] = 0;
      intArray0[6] = (-3581);
      intArray0[7] = 79;
      discretize0.setAttributeIndicesArray(intArray0);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Discretize discretize0 = new Discretize("");
      discretize0.getOptions();
      discretize0.m_IgnoreClass = true;
      discretize0.m_NumBins = 0;
      discretize0.setOutputFormat();
      String[] stringArray0 = new String[9];
      discretize0.getInvertSelection();
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      discretize0.setBins(0);
      stringArray0[3] = "`";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "aGzCE0uQ3*:}V_:O";
      stringArray0[7] = "";
      stringArray0[8] = "";
      discretize0.setOptions(stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "";
      Discretize.main(stringArray1);
      int int0 = 0;
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Discretize discretize0 = new Discretize("Wey");
      int[] intArray0 = new int[4];
      intArray0[0] = (-2902);
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = (-565);
      discretize0.setAttributeIndicesArray(intArray0);
      discretize0.m_MakeBinary = false;
      discretize0.m_IgnoreClass = false;
      discretize0.setIgnoreClass(false);
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.133628922152431
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getOptions();
      int int0 = 68;
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Discretize discretize0 = new Discretize("nR");
      discretize0.getBins();
      discretize0.makeBinaryTipText();
      discretize0.useBinNumbersTipText();
      discretize0.setOutputFormat();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPoints();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.binsTipText();
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals("Number of bins.", string0);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Discretize discretize0 = new Discretize("(-inf-");
      discretize0.getBinRangesString((-3879));
      String string0 = discretize0.useEqualFrequencyTipText();
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals("If set to true, equal-frequency binning will be used instead of equal-width binning.", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3383717048035724
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Discretize discretize0 = new Discretize("UYo4X+m~r4H");
      Filter.runFilter(discretize0, (String[]) null);
      // Undeclared exception!
      try { 
        discretize0.input((Instance) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.1634240504234032
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Discretize discretize0 = new Discretize("(c_^7M0;NY,BJ");
      String[] stringArray0 = discretize0.getOptions();
      discretize0.setOutputFormat();
      discretize0.getInvertSelection();
      int int0 = (-3382);
      discretize0.setBins((-3382));
      discretize0.setOptions(stringArray0);
      Discretize.main(stringArray0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(104);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setDesiredWeightOfInstancesPerInterval((-678.1));
      double[][] doubleArray0 = new double[2][6];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (-678.1);
      doubleArray1[1] = (-678.1);
      doubleArray1[2] = (-678.1);
      doubleArray1[3] = (-678.1);
      doubleArray1[4] = (-678.1);
      doubleArray1[5] = (-678.1);
      doubleArray1[6] = (-678.1);
      doubleArray1[7] = (-678.1);
      doubleArray1[8] = (-678.1);
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (-2895.0);
      doubleArray2[1] = (-678.1);
      doubleArray2[2] = (-678.1);
      doubleArray2[3] = (-678.1);
      doubleArray2[4] = (-678.1);
      doubleArray2[5] = (-678.1);
      doubleArray2[6] = (-678.1);
      doubleArray2[7] = 0.0;
      doubleArray0[1] = doubleArray2;
      discretize0.m_CutPoints = doubleArray0;
      // Undeclared exception!
      try { 
        discretize0.getCutPoints(1550);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1550
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.458311329683084
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Discretize discretize0 = new Discretize("      else if (format.attribute(i).isNumeric())\n");
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 2609.0;
      discretize0.m_IgnoreClass = true;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-1177.063);
      doubleArray0[3] = (-1177.063);
      doubleArray0[4] = (-1177.063);
      doubleArray0[5] = (-1177.063);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1177.063), doubleArray0);
      discretize0.getOptions();
      discretize0.mayRemoveInstanceAfterFirstBatchDone();
      discretize0.getOptions();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPoints();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4036404106149494
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getUseBinNumbers());
      
      discretize0.setUseBinNumbers(true);
      discretize0.getOptions();
      assertTrue(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Discretize discretize0 = new Discretize("      else if (format.attribute(i).isNumeric())\n");
      double[][] doubleArray0 = new double[2][5];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (-1009.31);
      doubleArray1[1] = (-1.0);
      doubleArray1[2] = 224.51444802211;
      doubleArray1[3] = 5164.7781685921;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (-1009.31);
      doubleArray2[1] = (-1009.31);
      doubleArray2[2] = (-1009.31);
      doubleArray2[3] = (-1.0);
      doubleArray2[4] = (-1009.31);
      doubleArray2[5] = 224.51444802211;
      doubleArray2[6] = 224.51444802211;
      doubleArray2[7] = (-1009.31);
      doubleArray2[8] = (-1009.31);
      doubleArray0[1] = doubleArray2;
      discretize0.m_CutPoints = doubleArray0;
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5070264355574183
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      int int0 = 2908;
      boolean boolean0 = true;
      discretize0.setUseEqualFrequency(true);
      discretize0.setBins(2908);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      discretize0.getOptions();
      // Undeclared exception!
      try { 
        discretize0.findNumBins(11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.846762831366273
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      discretize0.setFindNumBins(true);
      discretize0.m_NumBins = (-2058005160);
      discretize0.getRevision();
      discretize0.setBins((-117));
      String[] stringArray0 = discretize0.getOptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      discretize0.setOutputFormat();
      discretize0.setOptions(stringArray0);
      assertTrue(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.458311329683084
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Discretize discretize0 = new Discretize("      else if (format.attriQute(i).isNumeric())\n");
      assertFalse(discretize0.getMakeBinary());
      
      discretize0.setMakeBinary(true);
      discretize0.mayRemoveInstanceAfterFirstBatchDone();
      discretize0.getOptions();
      assertTrue(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.102854761722186
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Discretize discretize0 = new Discretize("      ese if (format.attribute(i).isNumeric())\n");
      discretize0.m_UseBinNumbers = true;
      discretize0.setInvertSelection(true);
      discretize0.getOptions();
      discretize0.mayRemoveInstanceAfterFirstBatchDone();
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Discretize discretize0 = new Discretize("      else if (format.attriQute(i).isNumeric())\n");
      String[] stringArray0 = new String[0];
      discretize0.setOptions(stringArray0);
      discretize0.m_MakeBinary = true;
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.Filter", e);
      }
  }
}
