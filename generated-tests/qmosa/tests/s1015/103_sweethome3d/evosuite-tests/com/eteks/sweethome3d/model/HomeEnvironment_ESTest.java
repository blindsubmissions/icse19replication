/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:17:35 GMT 2018
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, "d,!kNPAg/SV?I`");
      URLContent uRLContent0 = new URLContent(uRL1);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, uRLContent0, 0.0F, 1.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setLightColor(833);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setAllLevelsVisible(false);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("jSc)", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoHeight(659);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setVideoQuality(12);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(833);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.getGroundColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("*");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.*
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getSkyTexture();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(861, (HomeTexture) null, 119, 2, 119);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setWallsAlpha(861);
      homeEnvironment1.getSubpartSizeUnderLight();
      homeEnvironment0.setSkyColor(861);
      homeEnvironment0.getVideoWidth();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setPhotoWidth(2);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setVideoQuality(119);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "#'jF~V#U!>ok,)5", homeEnvironment1, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, homeEnvironment2, aspectRatio0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      assertEquals(861.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = 0;
      homeEnvironment0.setVideoQuality(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy(">4Fw!gJ)WkpA+L}u", propertyChangeListener0);
      float float0 = 2235.32F;
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(0, 2.0F, 0, 2.0F, 3215.09F, 2235.32F, 0, camera_Lens0);
      String string0 = "v";
      Object object0 = new Object();
      Class<Camera> class0 = Camera.class;
      boolean boolean0 = false;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "v", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource v
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setCeillingLightColor(400);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setSkyColor(0);
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(12);
      homeEnvironment0.clone();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setAllLevelsVisible(true);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = (-98);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(20, (HomeTexture) null, 3455, (HomeTexture) null, (-98), 3390.944F);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setGroundColor((-98));
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = homeEnvironment0.getDrawingMode();
      homeEnvironment0.setPhotoHeight((-3583));
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment0.setCeillingLightColor(3347);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment0.setLightColor(1837);
      homeEnvironment0.setSubpartSizeUnderLight((-3583));
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setVideoQuality(20);
      HomeEnvironment.Property.values();
      homeEnvironment0.clone();
      homeEnvironment0.setSkyColor(20);
      int int1 = 0;
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("!.L5`,l%2!n+", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "!.L5`,l%2!n+", propertyChangeListenerProxy0, homeEnvironment1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Object object0 = new Object();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      propertyChangeEvent0.setPropagationId(object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setGroundColor((-694));
      homeEnvironment0.setVideoWidth(13427964);
      assertEquals((-694), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor(0);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setLightColor(908);
      homeEnvironment0.setGroundColor((-1));
      homeEnvironment0.setCeillingLightColor(194);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setWallsAlpha(908);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.getGroundTexture();
      homeEnvironment1.getPhotoAspectRatio();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getPhotoHeight();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, int0);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setSkyColor((-4655));
      homeEnvironment1.setSkyColor(334);
      homeEnvironment0.setVideoQuality((-4655));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.setAllLevelsVisible(true);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("!K<n\"Gl=p4>h", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.getLightColor();
      Camera camera0 = new Camera(0, (-1595.747F), 334, 0, 0.0F, (-421.72482F));
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "g~ <Vd0q7ll]po", homeEnvironment0, homeEnvironment2);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment2.setLightColor(334);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setVideoWidth((-2150));
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      int int0 = homeEnvironment1.getLightColor();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(33, (HomeTexture) null, 33, (HomeTexture) null, 33, 0.0F);
      homeEnvironment0.setLightColor(33);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setWallsAlpha(0.0F);
      homeEnvironment0.getLightColor();
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("q$0w&", propertyChangeListener0);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera((-731.9742F), 0.0F, 33, 1.0F, 0.0F, 33, 33, camera_Lens0);
      Camera camera1 = camera0.clone();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "com.eteks.sweethome3d.model.Camera$Lens", camera1, homeEnvironment1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("q$0w&", "!/", homeEnvironment0, (Object) null);
      propertyChangeEvent1.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.isAllLevelsVisible();
      assertEquals(0, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", resourceURLContent0, 1.5F, 1373.449F, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2845), homeTexture0, 911, homeTexture0, 911, 911);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setSubpartSizeUnderLight((-2845));
      homeEnvironment0.getVideoAspectRatio();
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getDrawingMode();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals((-2845.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-1213));
      homeEnvironment0.setLightColor(1565);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getDrawingMode();
      homeEnvironment1.setSkyColor((-1213));
      homeEnvironment0.getVideoQuality();
      homeEnvironment1.getPhotoWidth();
      homeEnvironment1.setCeillingLightColor((-1213));
      homeEnvironment0.getCeillingLightColor();
      int int0 = homeEnvironment1.getPhotoWidth();
      assertEquals((-1213), homeEnvironment0.getPhotoQuality());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, (-2662), 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(0);
      int int0 = homeEnvironment1.getVideoQuality();
      assertEquals(0, int0);
      
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertTrue(boolean0);
      
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(0, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0, homeEnvironment1.getGroundColor());
      assertEquals((-2662), homeEnvironment1.getLightColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.615630577027551
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("!.L5`,l%2!n+", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "!.L5`,l%2!n+", propertyChangeListenerProxy0, homeEnvironment1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Object object0 = new Object();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      propertyChangeEvent0.setPropagationId(object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setCeillingLightColor(619);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setWallsAlpha(619);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getPhotoAspectRatio();
      // Undeclared exception!
      try { 
        homeEnvironment1.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("*p]5", "*p]5", 0, "", uRLStreamHandler0);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("0lU", temporaryURLContent0, 0, 0.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, (-1072), 0.0F);
      homeEnvironment0.setAllLevelsVisible(true);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getGroundTexture();
      HomeEnvironment.Property.values();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.getVideoQuality();
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture1);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoQuality(0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      int int0 = homeEnvironment0.getPhotoHeight();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(300, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8714761180548676
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.setPhotoHeight(908);
      homeEnvironment0.getSkyTexture();
      homeEnvironment1.setVideoQuality(400);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setPhotoWidth(400);
      List<Camera> list0 = homeEnvironment2.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setPhotoQuality(400);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getGroundColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4036404106149494
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setGroundColor(0);
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.model.HomeEnvironment", uRLContent0, 0, 0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment1.setGroundTexture(homeTexture0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("_{}aP4'_'Od<hh", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("_{}aP4'_'Od<hh", (PropertyChangeListener) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setCeillingLightColor(3694);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("3700-", propertyChangeListenerProxy1);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment1.setPhotoHeight(0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setSkyColor(978);
      assertEquals(978, homeEnvironment2.getSkyColor());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6674619334292948
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("8)JFH4D6)@g/LC}J/9", "8)JFH4D6)@g/LC}J/9", uRLContent0, 13427964, 13427964, "8)JFH4D6)@g/LC}J/9", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13427964, homeTexture0, 13427964, homeTexture0, 13427964, 1.0F);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setVideoFrameRate((-3654));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      System.setCurrentTimeMillis(1860L);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.403640410614949
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13427964, (HomeTexture) null, 13427964, (HomeTexture) null, 1737, 1737);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setVideoWidth((-10));
      homeEnvironment0.isAllLevelsVisible();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(13427964, (HomeTexture) null, 11, 11, (-1518.453F));
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("x2i*=+AMc4,%", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment1.setCeillingLightColor(1146);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy2);
      homeEnvironment1.setPhotoHeight(9);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setSkyColor(1737);
      homeEnvironment0.setSkyColor(13427964);
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoWidth((-10));
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setGroundColor((-10));
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.clone();
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setVideoFrameRate(8);
      homeEnvironment0.setVideoWidth((-10));
      System.setCurrentTimeMillis((-10));
      Random.setNextRandom(2557);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setVideoWidth((-10));
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setCeillingLightColor((-10));
      homeEnvironment1.setPhotoWidth((-10));
      homeEnvironment1.setLightColor(20);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setGroundColor((-1));
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.setGroundColor(320);
      homeEnvironment1.setCeillingLightColor(2637);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("[>%O'-", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("[>%O'-", (PropertyChangeListener) null);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      HomeEnvironment homeEnvironment4 = homeEnvironment1.clone();
      homeEnvironment4.setVideoCameraPath((List<Camera>) null);
      homeEnvironment2.setSkyTexture((HomeTexture) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setPhotoHeight(4472);
      homeEnvironment3.setSkyColor(3280);
      HomeEnvironment.Property.values();
      HomeEnvironment.Property.values();
      homeEnvironment3.setPhotoHeight(2637);
      assertEquals(4472, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5400363038209806
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setCeillingLightColor(400);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setSkyColor(0);
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(25);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }
}
