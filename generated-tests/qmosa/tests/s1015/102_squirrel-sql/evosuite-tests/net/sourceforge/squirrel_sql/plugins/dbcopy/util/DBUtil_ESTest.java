/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:29:29 GMT 2018
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBUtil.getLastStatementValues();
      String string0 = "|;]$`";
      String string1 = "W6],pzWi";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = 65532;
      // Undeclared exception!
      try { 
        DBUtil.dropTable("", "|;]$`", "W6],pzWi", (ISession) null, true, 65532);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = " ) values ( ";
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, " ) values ( ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "";
      DBUtil.setLastStatement("");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string1 = "number($p,$s)";
      dBCopyPlugin0.getApplication();
      dBCopyPlugin0.unload();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      TableInfo tableInfo0 = null;
      try {
        tableInfo0 = new TableInfo((String) null, "c9fZ", "%sqlupper(", "c9fZ", "number($p,$s)", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = null;
      int int0 = 1616;
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, (String) null, "UOF,", "Unexpected exception while attempting to determine if a table (", 1616);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "DBUtil.error.tablenotfound");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.fixCase((ISession) null, (String) null);
      DBUtil dBUtil0 = new DBUtil();
      assertNull(dBUtil0.getLastStatement());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "QceU/H[EAq", 1810, "C.ha,j7]44\".{e4", 1111, 0, 28, 28, "A? p$3J", " tE7zN;W,&%[}l", 1111, 0, "");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1810, int0);
      
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("", "", "", " to 128.", 1810, "A? p$3J", (-6), 1105, 0, 1105, " to 128.", (String) null, 2851, 0, "");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(stack0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      DBUtil.convertObjectToTableList(list1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "~4Ig,Kk^qht*'", "Q=jE}rXTs[j/", "", (-128), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2, 146, (-128), 1445, "null ISQLDriver passed", "ty^4v}R]([}zP", 1839, 2, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "|e7A=JzYP^", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.getLastStatement();
      String string0 = "";
      String string1 = "ABSOLUTE";
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "", "ABSOLUTE");
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, " tableName = ", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "3.UY%J8wE&w;TL ^E", "", "Encountered unexpected exception when attempting to call schemaInfo.getTables with catalog = ", 1111, "!Pfh+_C^e'Gxc$X*w[", (-616), (-2461), 12, 32767, "Encountered unexpected exception when attempting to call schemaInfo.getTables with catalog = ", "", (-616), (-2461), "Ra");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1111, int0);
      
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("Ra", "Ra", " to 128.", "Ra", 1810, (String) null, 12, (-3146), (-2105376123), 1105, "!Pfh+_C^e'Gxc$X*w[", "3.UY%J8wE&w;TL ^E", 1072, 2004, "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo((String) null, "QceU/H[EAq", " tE7zN;W,&%[}l");
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) databaseObjectInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      DBUtil.convertObjectToTableList(stack0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = (-1999);
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "3.UY%J8wE&w;TL ^E", "", "Encountered unexpected exception when attempting to call schemaInfo.getTables with catalog = ", 1111, "!Pfh+_C^e'Gxc$X*w[", (-616), (-2461), 12, 32767, "Encountered unexpected exception when attempting to call schemaInfo.getTables with catalog = ", "", (-616), (-2461), "Ra");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPluginJarFilePath();
      dBCopyPlugin1.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.COLUMN;
      DatabaseObjectType.createNewDatabaseObjectType("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin2.getDestSession();
      dBCopyPlugin2.getSourceSession();
      DBUtil.replaceDistinctDataType(1796, tableColumnInfo0, (ISession) null);
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = null;
      try {
        sQLConnection0 = new SQLConnection((Connection) null, sQLDriverPropertyCollection0, sQLDriver0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLConnection == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLConnection", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      vector0.add((ITableInfo) null);
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(vector0);
      assertEquals(1, list0.size());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      DBUtil.setLastStatementValues("@0Z^i)");
  }

  /**
  //Test case number: 16
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, (String) null, (String) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 144);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("e", "_B~Cfkw9Cm;", "dg9{SX!");
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, (SchemaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" tE7zN;W,&%[}l", (String) null, " tE7zN;W,&%[}l", "", 2851, ")AZr!x0b", 2851, 3057, 1000000, 1000000, "sr'", ":U:#Uo1bkb='RZ|", (-19), 2278, ":U:#Uo1bkb='RZ|");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATABASE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[1];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      String string0 = "org.hibernate.util.ReflectHelper";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "setApplicationFiles");
      // Undeclared exception!
      try { 
        DBUtil.dropTable("org.hibernate.util.ReflectHelper", "", ":U:#Uo1bkb='RZ|", (ISession) null, false, 2278);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "t8{+s:txA}H[}0Dh", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "t8{+s:txA}H[}0Dh", 91, "q-^a]!L{IM&[XG Gvaj", 91, 91, 91, 91, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "A]uHTIxi=H>+", 91, 91, "A]uHTIxi=H>+");
      dBCopyPlugin0.setPasteToTableName("t8{+s:txA}H[}0Dh");
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin0.getDestSession();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      stack0.add((IDatabaseObjectInfo) tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(stack0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = ":U:#Uo1bkb='RZ|\\";
      int int0 = 2278;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("mnemonic", (String) null, "mnemonic", ">", 2851, ")AZr!x0b", 2851, 3057, 1000000, 1000000, "sr'", ":U:#Uo1bkb='RZ|", (-19), 2278, ":U:#Uo1bkb='RZ|");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATABASE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[20];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("G", "G", "dg9{SX63!");
      DatabaseObjectInfo databaseObjectInfo1 = new DatabaseObjectInfo("dg9{SX63!", (String) null, "dg9{SX63!");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "dg9{SX63!", "The key (");
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "The key (", (ITableInfo) null, (-1364));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("DBUtil.info.bindclobmem", (String) null, "E2fih}p@C", (String) null, 2004, (String) null, 3868, 405, 2004, (-462), (String) null, "E2fih}p@C", 405, 3868, "eaEYyp");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "$extract(", "7LCBk_&U@6k\u0002}opk");
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, (-2573));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPluginJarFilePath();
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), (-7));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(0, 0);
      boolean boolean1 = DBUtil.typesAreEquivalent(3, (-1580));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.fixCase((ISession) null, "");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      assertFalse(dBCopyPlugin1.equals((Object)dBCopyPlugin0));
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("VC", "DBUtil.eror.missingtable", "                                ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.OTHER;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.typesAreEquivalent(16, 1427);
      assertFalse(boolean0);
      
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("DBUtil.eror.missingtable", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("                                ", "#Mf:Irc]3YGtCn", "#Mf:Irc]3YGtCn", "cXN|M*aY.n", (-3), "#Mf:Irc]3YGtCn", 1051, 1051, 3555, 3158, "                                ", "cXN|M*aY.n", (-7), 300, "AwA*fZ#");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      boolean boolean1 = DBUtil.typesAreEquivalent(1351, 1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("exec|teQuery: TimesTen allows a GaBimum fetch size of 128.  Altering referred fetch size from ", "VSf&jc%5}>zxE:", (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATABASE_TYPE_DBO;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PROCEDURE;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBUtil.typesAreEquivalent(16, (-7));
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      assertEquals("license.txt", dBCopyPlugin0.getLicenceFileName());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      dBCopyPlugin1.getPasteToTableInfo((ISQLConnection) null, "", "?SQ?(q)bS8");
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "create global temporary table", "can't load image: ");
      int int0 = DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "ag#FY2wy*W*,Xa3mm");
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("                                ", "VC", "VC");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectInfo databaseObjectInfo1 = (DatabaseObjectInfo)DBUtil.getSchemaFromDbObject(databaseObjectInfo0, (SchemaInfo) null);
      assertEquals("VC", databaseObjectInfo1.toString());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), 16);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("o4nV+3T[A1*|Ck", "H?+ asmL4?", "H?+ asmL4?", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-4), "whereColumnName", (-4), 629, 314, (-238), ">YLJU3", "H?+ asmL4?", (-957), 629, "");
      DBUtil.isBinaryType(tableColumnInfo0);
      dBCopyPlugin0.setCopyMenuEnabled(true);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("y", "                                ", "select ", "select 'CREATE VIEW ' || VIEWNAME || ' AS ' || VIEWDEFINITION ", (-2), "select ", 1496, (-2), 3158, (-2080374781), "1)q,B7", "select * from ( select ", (-3), (-2), "uiIPOm\"D- T5!}_O");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-3817), (-3817), (-3817), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin1.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "org.jfree.util.SortOrder");
      dBCopyPlugin1.setDestSession((ISession) null);
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
      String string0 = "DBUtil.mappingErrorKeyword";
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("q6l`+", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "DBUtil.mappingErrorKeyword", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
