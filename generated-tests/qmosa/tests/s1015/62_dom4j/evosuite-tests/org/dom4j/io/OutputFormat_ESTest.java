/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:43:55 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setEncoding("");
      outputFormat0.setIndent(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setTrimText(true);
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertTrue(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isXHTML());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndentSize(1);
      outputFormat0.setLineSeparator("");
      outputFormat0.setEncoding("a{?y");
      outputFormat0.isNewlines();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('I');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (I)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "o0q";
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat("o0q", true);
      outputFormat0.setLineSeparator("o0q");
      outputFormat0.setNewLineAfterNTags(0);
      boolean boolean1 = false;
      boolean boolean2 = false;
      outputFormat0.setIndentSize(0);
      outputFormat0.setOmitEncoding(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('p');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (p)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      boolean boolean0 = true;
      outputFormat0.setTrimText(true);
      outputFormat0.getEncoding();
      outputFormat0.setXHTML(false);
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      outputFormat1.setExpandEmptyElements(false);
      outputFormat0.setIndent((String) null);
      outputFormat0.isXHTML();
      int int0 = 39;
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('?');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (?)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("");
      outputFormat0.setNewLineAfterNTags(1741);
      outputFormat0.setTrimText(false);
      outputFormat0.setNewLineAfterNTags(1607);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("");
      outputFormat1.setIndentSize(1607);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent(false);
      outputFormat0.isPadText();
      outputFormat1.isOmitEncoding();
      outputFormat0.setIndentSize(0);
      outputFormat0.setOmitEncoding(true);
      assertEquals(1607, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("HZ&lv2x2", true);
      outputFormat0.setNewlines(true);
      outputFormat0.isOmitEncoding();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "HZ&lv2x2";
      stringArray0[1] = "HZ&lv2x2";
      outputFormat0.setIndent("HZ&lv2x2");
      OutputFormat.createCompactFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("mIo9yN^qr[g;>");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setEncoding("");
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertTrue(outputFormat0.isTrimText());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat0.isNewlines());
      
      outputFormat0.setNewlines(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isTrimText();
      outputFormat0.setIndentSize((-1));
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setTrimText(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getIndent();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setTrimText(false);
      outputFormat1.setSuppressDeclaration(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "  ";
      stringArray0[1] = "  ";
      stringArray0[2] = "  ";
      stringArray0[3] = "  ";
      stringArray0[4] = "  ";
      stringArray0[5] = "  ";
      stringArray0[6] = " ";
      stringArray0[7] = "  ";
      stringArray0[8] = "=rd21wC96kGhOt~";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-1137));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1137
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[1] = null;
      outputFormat0.setIndent("");
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 796);
      outputFormat0.setOmitEncoding(false);
      assertFalse(outputFormat0.isTrimText());
      
      outputFormat0.setTrimText(true);
      outputFormat0.isNewLineAfterDeclaration();
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertTrue(outputFormat0.isTrimText());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("z1f", true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getEncoding();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getEncoding();
      outputFormat0.setPadText(true);
      outputFormat0.isTrimText();
      outputFormat0.getIndent();
      outputFormat0.getLineSeparator();
      outputFormat0.setSuppressDeclaration(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setIndent("w$");
      outputFormat2.setXHTML(true);
      outputFormat1.setLineSeparator("UTF-8");
      outputFormat1.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent(true);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("UTF-8");
      outputFormat3.getNewLineAfterNTags();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('G');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (G)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.670119889806817
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterNTags(34);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getEncoding();
      outputFormat0.setLineSeparator("UTF-8");
      outputFormat0.setEncoding((String) null);
      outputFormat1.setNewlines(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setEncoding((String) null);
      outputFormat1.setTrimText(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setIndentSize(0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = "UTF-8";
      stringArray0[2] = null;
      stringArray0[3] = "UTF-8";
      stringArray0[4] = "";
      stringArray0[5] = "UTF-8";
      stringArray0[6] = "UTF-8";
      outputFormat0.setAttributeQuoteCharacter('\"');
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1383972463477248
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setEncoding("");
      outputFormat0.isPadText();
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "du8S%u";
      stringArray0[2] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setXHTML(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewlines(false);
      outputFormat0.parseOptions(stringArray0, 1);
      String[] stringArray1 = new String[5];
      stringArray1[0] = "du8S%u";
      stringArray1[1] = "du8S%u";
      stringArray1[2] = "-omitEncoding";
      stringArray1[3] = "";
      stringArray1[4] = "";
      outputFormat0.parseOptions(stringArray1, 1);
      String[] stringArray2 = new String[7];
      stringArray2[0] = "du8S%u";
      stringArray2[1] = "";
      stringArray2[2] = "";
      stringArray2[3] = "-omitEncoding";
      stringArray2[4] = "";
      stringArray2[5] = "du8S%u";
      stringArray2[6] = "Yn";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray2, (-97));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -97
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.829650384543406
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setEncoding("");
      outputFormat0.isPadText();
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "du8S%u";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-omitEncoding";
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setXHTML(true);
      outputFormat0.setOmitEncoding(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewlines(false);
      outputFormat0.parseOptions(stringArray0, 5214);
      outputFormat0.parseOptions(stringArray0, 5214);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-97));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -97
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9708267273298157
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", false);
      outputFormat0.setNewlines(false);
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent("-lineSeparator");
      OutputFormat outputFormat1 = new OutputFormat("-lineSeparator", false);
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "-lineSeparator";
      stringArray0[4] = "-lineSeparator";
      stringArray0[5] = "-lineSeparator";
      stringArray0[6] = "-lineSeparator";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8546526185598233
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setEncoding("");
      outputFormat0.isPadText();
      outputFormat0.setPadText(true);
      OutputFormat outputFormat1 = new OutputFormat("", false);
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[5];
      outputFormat0.setLineSeparator("qt#Z-URO7AKSW$");
      stringArray0[0] = "-expandEmptyXm1'oTFHT_b5oEH|+";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "-omitEncoding";
      stringArray0[4] = "-omitEncoding";
      outputFormat1.parseOptions(stringArray0, 14);
      outputFormat1.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1888544515));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1888544515
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(" huev+jg`gTMB}");
      String[] stringArray0 = null;
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent(" huev+jg`gTMB}");
      outputFormat0.setIndent("oe,dsSEh;");
      char char0 = '\'';
      outputFormat0.setIndentSize((-906));
      outputFormat0.setAttributeQuoteCharacter('\'');
      int int0 = 1979;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 1979);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.022808529414704
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "&='&#Jk2Vw;";
      stringArray0[1] = "&='&#Jk2Vw;";
      stringArray0[2] = "&='&#Jk2Vw;";
      stringArray0[3] = "&='&#Jk2Vw;";
      stringArray0[4] = "&='&#Jk2Vw;";
      stringArray0[5] = "&='&#Jk2Vw;";
      stringArray0[6] = "&='&#Jk2Vw;";
      stringArray0[7] = "&='&#Jk2Vw;";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setTrimText(false);
      OutputFormat outputFormat1 = new OutputFormat("-suppressDeclaration", false);
      outputFormat1.setNewLineAfterNTags(0);
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.parseOptions(stringArray0, 0);
      outputFormat2.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[7];
      stringArray1[0] = "-suppressDeclaration";
      stringArray1[1] = "&='&#Jk2Vw;";
      stringArray1[2] = "&='&#Jk2Vw;";
      stringArray1[3] = "&='&#Jk2Vw;";
      stringArray1[4] = "&='&#Jk2Vw;";
      stringArray1[5] = "-suppressDeclaration";
      stringArray1[6] = "&='&#Jk2Vw;";
      outputFormat1.parseOptions(stringArray1, 903);
      outputFormat0.setXHTML(false);
      outputFormat1.setOmitEncoding(false);
      int int0 = outputFormat0.parseOptions(stringArray1, 0);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.2446445889704454
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setEncoding("du8S%u");
      outputFormat0.isPadText();
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[4];
      stringArray0[3] = "du8S%u";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-xhtml";
      stringArray0[3] = "du8S%u";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.parseOptions(stringArray0, 76);
      outputFormat0.parseOptions(stringArray0, 76);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1514106794));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1514106794
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7309439966762843
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setEncoding("du8S%u");
      outputFormat0.isPadText();
      assertEquals("du8S%u", outputFormat0.getEncoding());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setPadText(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmpty-trimText";
      stringArray0[1] = "du8S%u";
      stringArray0[2] = "-omitEncoding";
      stringArray0[3] = "-omitEncoding";
      stringArray0[4] = "-omitEncoding";
      stringArray0[5] = "-padText";
      int int0 = outputFormat1.parseOptions(stringArray0, 3);
      assertEquals(6, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.2265558156134033
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-expandEmpty-trimText";
      stringArray0[2] = "du8S%u";
      stringArray0[3] = "-newlines";
      stringArray0[4] = "-encoding";
      stringArray0[5] = "du8S%u";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "du8S%u";
      stringArray1[1] = "-newlines";
      stringArray1[2] = "du8S%u";
      stringArray1[3] = "-expandEmpty-trimText";
      stringArray1[4] = "du8S%u";
      stringArray1[5] = "-newlines";
      stringArray1[6] = "-encoding";
      outputFormat1.parseOptions(stringArray1, 1);
      outputFormat1.parseOptions(stringArray0, 2);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5990147122062977
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "AGHk^@QBn@hY'";
      stringArray0[1] = "Da~hcsl#^cX";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "-omitEncoding";
      outputFormat0.parseOptions(stringArray0, 1237);
      outputFormat1.parseOptions(stringArray0, 2);
      int int0 = outputFormat1.parseOptions(stringArray0, 4);
      assertEquals("-omitEncoding", outputFormat1.getEncoding());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.589026915173973
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String string0 = "Q-VF&)Ik7";
      outputFormat0.setEncoding("Q-VF&)Ik7");
      outputFormat0.isPadText();
      String string1 = "-omitEncoding";
      String string2 = "Da~hcsl#^cX";
      String string3 = "WKC+):0LJ&SE%";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setPadText(false);
      int int0 = 2;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Da~hcsl#^cX";
      stringArray0[1] = "-omitEncoding";
      String string4 = "-indentSize";
      stringArray0[2] = "-indentSize";
      stringArray0[3] = "-NWWuqY";
      stringArray0[4] = "-omitEncoding";
      stringArray0[5] = "-NWWuqY";
      stringArray0[6] = "Da~hcsl#^cX";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-NWWuqY\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
