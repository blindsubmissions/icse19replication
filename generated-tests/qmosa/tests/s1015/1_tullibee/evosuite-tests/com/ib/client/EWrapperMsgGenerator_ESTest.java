/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:53:15 GMT 2018
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.AnyWrapperMsgGenerator;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.TagValue;
import com.ib.client.UnderComp;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(0, ",9%*", ",9%*", "[7rB])-@y", (-684.997683), ",9%*", "[7rB])-@y", "M>F&v7Gf", "M>F&v7Gf", ",9%*", vector0, "BOND", false, "", "[7rB])-@y");
      vector0.listIterator();
      contract0.m_right = "M>F&v7Gf";
      vector0.ensureCapacity(1296);
      vector0.add("");
      vector0.add(",9%*");
      contract0.m_currency = "M>F&v7Gf";
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, 3307, 1.7976931348623157E308, 0, 1221.0, 232.9068438272729, 1221.0, (String) null);
      assertEquals("updatePortfolio: conid = 0\nsymbol = ,9%*\nsecType = ,9%*\nexpiry = [7rB])-@y\nstrike = -684.997683\nright = M>F&v7Gf\nmultiplier = [7rB])-@y\nexchange = M>F&v7Gf\nprimaryExch = BOND\ncurrency = M>F&v7Gf\nlocalSymbol = ,9%*\n3307 1.7976931348623157E308 0.0 1221.0 232.9068438272729 1221.0 null", string0);
      
      String string1 = EWrapperMsgGenerator.updatePortfolio(contract0, 0, 4464.662564286, (-318.0), 0, 1221.0, (-318.0), "");
      assertEquals("updatePortfolio: conid = 0\nsymbol = ,9%*\nsecType = ,9%*\nexpiry = [7rB])-@y\nstrike = -684.997683\nright = M>F&v7Gf\nmultiplier = [7rB])-@y\nexchange = M>F&v7Gf\nprimaryExch = BOND\ncurrency = M>F&v7Gf\nlocalSymbol = ,9%*\n0 4464.662564286 -318.0 0.0 1221.0 -318.0 ", string1);
      
      String string2 = EWrapperMsgGenerator.scannerParameters("v");
      assertEquals("SCANNER PARAMETERS:\nv", string2);
      
      String string3 = EWrapperMsgGenerator.currentTime(0);
      assertEquals("current time = 0 (Jan 1, 1970 12:00:00 AM)", string3);
      
      String string4 = EWrapperMsgGenerator.updateAccountValue("updatePortfolio: conid = 0\nsymbol = ,9%*\nsecType = ,9%*\nexpiry = [7rB])-@y\nstrike = -684.997683\nright = M>F&v7Gf\nmultiplier = [7rB])-@y\nexchange = M>F&v7Gf\nprimaryExch = BOND\ncurrency = M>F&v7Gf\nlocalSymbol = ,9%*\n3307 1.7976931348623157E308 0.0 1221.0 232.9068438272729 1221.0 null", "TQLX?+A? p$3J", (String) null, "");
      assertEquals("updateAccountValue: updatePortfolio: conid = 0\nsymbol = ,9%*\nsecType = ,9%*\nexpiry = [7rB])-@y\nstrike = -684.997683\nright = M>F&v7Gf\nmultiplier = [7rB])-@y\nexchange = M>F&v7Gf\nprimaryExch = BOND\ncurrency = M>F&v7Gf\nlocalSymbol = ,9%*\n3307 1.7976931348623157E308 0.0 1221.0 232.9068438272729 1221.0 null TQLX?+A? p$3J null ", string4);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.execDetailsEnd((-613));
      assertEquals("reqId = -613 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.scannerDataEnd(0);
      assertEquals("id = 0 =============== end ===============", string1);
      
      Contract contract0 = new Contract();
      contract0.m_localSymbol = "com.ib.client.Execution";
      Execution execution0 = new Execution();
      String string2 = EWrapperMsgGenerator.execDetails(0, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 0\norderId = 0\nclientId = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\ncontractExchange = null\ncurrency = null\nlocalSymbol = com.ib.client.Execution\nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string2);
      
      String string3 = EWrapperMsgGenerator.tickGeneric(200, 10, 0.0);
      assertEquals("id=200  bidOptComp=0.0", string3);
      
      String string4 = EWrapperMsgGenerator.fundamentalData(63, " | ");
      assertEquals("id  = 63 len = 3\n | ", string4);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountTime((String) null);
      assertEquals("updateAccountTime: null", string0);
      
      ContractDetails contractDetails0 = new ContractDetails();
      contractDetails0.m_coupon = (double) 1938;
      contractDetails0.m_putable = false;
      contractDetails0.m_ratings = "";
      contractDetails0.m_descAppend = null;
      contractDetails0.m_putable = true;
      String string1 = EWrapperMsgGenerator.bondContractDetails(1938, contractDetails0);
      assertEquals("reqId = 1938 ===================================\n ---- Bond Contract Details begin ----\nsymbol = null\nsecType = null\ncusip = null\ncoupon = 1938.0\nmaturity = null\nissueDate = null\nratings = \nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = true\ndescAppend = null\nexchange = null\ncurrency = null\nmarketName = null\ntradingClass = null\nconid = 0\nminTick = 0.0\norderTypes = null\nvalidExchanges = null\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = null\n ---- Bond Contract Details End ----\n", string1);
      
      String string2 = EWrapperMsgGenerator.managedAccounts((String) null);
      assertEquals("Connected : The list of managed accounts are : [null]", string2);
      
      String string3 = EWrapperMsgGenerator.updatePortfolio(contractDetails0.m_summary, 0, 0, (-1.0), (-1.0), (-1296.56887963), 3215.09013232891, "contractExchange = ");
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n0 0.0 -1.0 -1.0 -1296.56887963 3215.09013232891 contractExchange = ", string3);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(0, 0, "Jx5dFko~5VvWN>f`NhN", "ynz\"rf");
      assertEquals("MsgId=0 :: MsgType=0 :: Origin=ynz\"rf :: Message=Jx5dFko~5VvWN>f`NhN", string0);
      
      EWrapperMsgGenerator.nextValidId(10);
      String string1 = EWrapperMsgGenerator.openOrderEnd();
      assertEquals(" =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.scannerDataEnd(0);
      assertEquals("id = 0 =============== end ===============", string2);
      
      EWrapperMsgGenerator.updateAccountValue("ynz\"rf", "J4", "J4", "J4");
      EWrapperMsgGenerator.nextValidId(0);
      String string3 = EWrapperMsgGenerator.tickOptionComputation(Integer.MAX_VALUE, 0, 0.0, 0, 0.0, 10);
      assertEquals("id=2147483647  bidSize: vol = 0.0 delta = 0.0", string3);
      
      String string4 = EWrapperMsgGenerator.nextValidId(2414);
      assertEquals("Next Valid Order ID: 2414", string4);
      
      String string5 = EWrapperMsgGenerator.currentTime((-2190L));
      assertEquals("current time = -2190 (Dec 31, 1969 11:23:30 PM)", string5);
      
      String string6 = EWrapperMsgGenerator.historicalData(0, "9~QsS.jR)0Eam~", 0.0, 10, Integer.MAX_VALUE, 0, (-1499), (-66), (-1499), true);
      assertEquals("id=0 date = 9~QsS.jR)0Eam~ open=0.0 high=10.0 low=2.147483647E9 close=0.0 volume=-1499 count=-66 WAP=-1499.0 hasGaps=true", string6);
      
      EWrapperMsgGenerator.managedAccounts("current time = -2190 (Dec 31, 1969 11:23:30 PM)");
      String string7 = EWrapperMsgGenerator.updateAccountValue("com.ib.client.Execution", "Connected : The list of managed accounts are : [current time = -2190 (Dec 31, 1969 11:23:30 PM)]", "2MZt%@8=rd21wC96", "com.ib.client.Order");
      assertEquals("updateAccountValue: com.ib.client.Execution Connected : The list of managed accounts are : [current time = -2190 (Dec 31, 1969 11:23:30 PM)] 2MZt%@8=rd21wC96 com.ib.client.Order", string7);
      
      String string8 = EWrapperMsgGenerator.updateMktDepth(0, (-1499), 10, 0, 490.45562, 0);
      assertEquals("updateMktDepth: 0 -1499 10 0 490.45562 0", string8);
      
      String string9 = EWrapperMsgGenerator.orderStatus(0, "Next Valid Order ID: 2414", 2414, 0, 0.0, 0, 0, (-2190L), (-2024), "ZX*0$@rVdl#%R<rL");
      assertEquals("order status: orderId=0 clientId=-2024 permId=0 status=Next Valid Order ID: 2414 filled=2414 remaining=0 avgFillPrice=0.0 lastFillPrice=-2190.0 parent Id=0 whyHeld=ZX*0$@rVdl#%R<rL", string9);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice(110, 0, 0.0, 1);
      assertEquals("id=110  bidSize=0.0  canAutoExecute", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 0;
      EWrapperMsgGenerator.fundamentalData(0, "BzqWcrDq");
      EWrapperMsgGenerator.tickSnapshotEnd(0);
      Contract contract0 = null;
      int int1 = 1275;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.updatePortfolio((Contract) null, 1275, 1275, 0, 1.7976931348623157E308, 0.0, 1275, "BzqWcrDq");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus(0, "", (-123), 0, 0, (-1560), 0, (-123), 0, "");
      assertEquals("order status: orderId=0 clientId=0 permId=-1560 status= filled=-123 remaining=0 avgFillPrice=0.0 lastFillPrice=-123.0 parent Id=0 whyHeld=", string0);
      
      String string1 = EWrapperMsgGenerator.updateAccountTime("[{KBt@xWk^");
      assertEquals("updateAccountTime: [{KBt@xWk^", string1);
      
      String string2 = EWrapperMsgGenerator.tickString((-1560), 109, "updateAccountTime: [{KBt@xWk^");
      assertEquals("id=-1560  unknown=updateAccountTime: [{KBt@xWk^", string2);
      
      UnderComp underComp0 = new UnderComp();
      underComp0.m_price = 0.0;
      underComp0.m_delta = 364.47251029613;
      String string3 = EWrapperMsgGenerator.deltaNeutralValidation(0, underComp0);
      assertEquals("id = 0 underComp.conId =0 underComp.delta =364.47251029613 underComp.price =0.0", string3);
      
      Contract contract0 = new Contract();
      contract0.m_symbol = "order status: orderId=0 clientId=0 permId=-1560 status= filled=-123 remaining=0 avgFillPrice=0.0 lastFillPrice=-123.0 parent Id=0 whyHeld=";
      contract0.m_multiplier = "";
      contract0.m_includeExpired = false;
      String string4 = EWrapperMsgGenerator.updatePortfolio(contract0, (-831), 364.47251029613, (-1222.0), 3384.702289903134, 0, 364.47251029613, "+DuH2L");
      assertEquals("updatePortfolio: conid = 0\nsymbol = order status: orderId=0 clientId=0 permId=-1560 status= filled=-123 remaining=0 avgFillPrice=0.0 lastFillPrice=-123.0 parent Id=0 whyHeld=\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = \nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n-831 364.47251029613 -1222.0 3384.702289903134 0.0 364.47251029613 +DuH2L", string4);
      
      String string5 = EWrapperMsgGenerator.contractDetailsEnd(0);
      assertEquals("reqId = 0 =============== end ===============", string5);
      
      String string6 = EWrapperMsgGenerator.currentTime(0);
      assertEquals("current time = 0 (Jan 1, 1970 12:00:00 AM)", string6);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerParameters((String) null);
      assertEquals("SCANNER PARAMETERS:\nnull", string0);
      
      String string1 = EWrapperMsgGenerator.updateNewsBulletin(13, (-1158), "vw$iB8I/{AJy", "SCANNER PARAMETERS:\nnull");
      assertEquals("MsgId=13 :: MsgType=-1158 :: Origin=SCANNER PARAMETERS:\nnull :: Message=vw$iB8I/{AJy", string1);
      
      String string2 = EWrapperMsgGenerator.realtimeBar(13, (-1026L), (-1158), (-1158), (-54.81821059), (-1026L), 0L, 1.7976931348623157E308, 3);
      assertEquals("id=13 time = -1026 open=-1158.0 high=-1158.0 low=-54.81821059 close=-1026.0 volume=0 count=3 WAP=1.7976931348623157E308", string2);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.contractDetailsEnd(0);
      assertEquals("reqId = 0 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.tickPrice(0, 0, 0.0, 0);
      assertEquals("id=0  bidSize=0.0  noAutoExecute", string1);
      
      String string2 = EWrapperMsgGenerator.fundamentalData(0, "");
      assertEquals("id  = 0 len = 0\n", string2);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.fundamentalData((-3489), "");
      assertEquals("id  = -3489 len = 0\n", string0);
      
      String string1 = EWrapperMsgGenerator.scannerParameters("com.ib.client.Contract");
      assertEquals("SCANNER PARAMETERS:\ncom.ib.client.Contract", string1);
      
      String string2 = EWrapperMsgGenerator.tickSnapshotEnd(819);
      assertEquals("id=819 =============== end ===============", string2);
      
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, "", 0, "", (String) null, (-642), " | ", "", (String) null, " firmQuoteOnly=", "id  = -3489 len = 0\n", (String) null, "", "zA) @FJb");
      String string3 = EWrapperMsgGenerator.scannerData((-3489), 99, contractDetails0, (String) null, "6wK", "6wK", ")^3-;@[~,N`_@w)@4{s");
      assertEquals("id = -3489 rank=99 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass= distance=null benchmark=6wK projection=6wK legsStr=)^3-;@[~,N`_@w)@4{s", string3);
      
      String string4 = EWrapperMsgGenerator.orderStatus(0, ",l%", 0, 0, (-1.0), 0, (-1), 0, (-642), "$K");
      assertEquals("order status: orderId=0 clientId=-642 permId=0 status=,l% filled=0 remaining=0 avgFillPrice=-1.0 lastFillPrice=0.0 parent Id=-1 whyHeld=$K", string4);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.contractDetails(0, contractDetails0);
      assertEquals("reqId = 0 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 0.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 0\nlongName = null\ncontractMonth = null\nindustry = null\ncategory = null\nsubcategory = null\ntimeZoneId = null\ntradingHours = null\nliquidHours = null\n ---- Contract Details End ----\n", string0);
      
      String string1 = EWrapperMsgGenerator.tickEFP(0, 0, 0.0, (String) null, 1.7976931348623157E308, 1827, (String) null, 0, (-1.0));
      assertEquals("id=0  bidSize: basisPoints = 0.0/null impliedFuture = 1.7976931348623157E308 holdDays = 1827 futureExpiry = null dividendImpact = 0.0 dividends to expiry = -1.0", string1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSnapshotEnd(1);
      assertEquals("id=1 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.updateMktDepthL2((-614), (-614), "&+", 1582, 0, 0.0, 0);
      assertEquals("updateMktDepth: -614 -614 &+ 1582 0 0.0 0", string1);
      
      String string2 = EWrapperMsgGenerator.updateMktDepth(0, 199, 1, (-2470), 199, 0);
      assertEquals("updateMktDepth: 0 199 1 -2470 199.0 0", string2);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.execDetailsEnd(0);
      assertEquals("reqId = 0 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.updateNewsBulletin(54, (-4152), "reqId = 0 =============== end ===============", "reqId = 0 =============== end ===============");
      assertEquals("MsgId=54 :: MsgType=-4152 :: Origin=reqId = 0 =============== end =============== :: Message=reqId = 0 =============== end ===============", string1);
      
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, "", 0.0, "8mk'3", "", 0, (String) null, "$2(K0 ~", "", (String) null, (String) null, (String) null, " (", "");
      String string2 = EWrapperMsgGenerator.bondContractDetails((-4152), contractDetails0);
      assertEquals("reqId = -4152 ===================================\n ---- Bond Contract Details begin ----\nsymbol = null\nsecType = null\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = null\ncurrency = null\nmarketName = null\ntradingClass = \nconid = 0\nminTick = 0.0\norderTypes = 8mk'3\nvalidExchanges = \nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = null\n ---- Bond Contract Details End ----\n", string2);
      
      contractDetails0.m_underConId = 54;
      Contract contract1 = new Contract();
      Order order0 = new Order();
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      OrderState orderState0 = new OrderState("com.ib.client.UnderComp", (String) null, (String) null, "", 0.0, (-842.9129), 0, "o|$kn2zJX2uA", (String) null);
      EWrapperMsgGenerator.openOrder(54, contract1, order0, orderState0);
      String string3 = EWrapperMsgGenerator.updateMktDepth(Integer.MAX_VALUE, Integer.MAX_VALUE, 646, 0, 198.3989917, 0);
      assertEquals("updateMktDepth: 2147483647 2147483647 646 0 198.3989917 0", string3);
      
      String string4 = EWrapperMsgGenerator.updateAccountValue("", "nextOptionPartial = ", "n>gOO-", (String) null);
      assertEquals("updateAccountValue:  nextOptionPartial =  n>gOO- null", string4);
      
      String string5 = EWrapperMsgGenerator.deltaNeutralValidation(Integer.MAX_VALUE, contract0.m_underComp);
      assertEquals("id = 2147483647 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0", string5);
      
      String string6 = EWrapperMsgGenerator.tickEFP(273, (-1), 1513.6409545737, (String) null, 2979.762596, 0, "((~`&", 0.0, 3821.75488620497);
      assertEquals("id=273  unknown: basisPoints = 1513.6409545737/null impliedFuture = 2979.762596 holdDays = 0 futureExpiry = ((~`& dividendImpact = 0.0 dividends to expiry = 3821.75488620497", string6);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.accountDownloadEnd("w/gdDFip?pMbA\"k<G");
      assertEquals("accountDownloadEnd: w/gdDFip?pMbA\"k<G", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      MockException mockException0 = new MockException();
      MockThrowable mockThrowable0 = new MockThrowable(mockException0);
      MockException mockException1 = new MockException(mockThrowable0);
      AnyWrapperMsgGenerator.ioError(mockException1);
      String string0 = EWrapperMsgGenerator.managedAccounts("");
      assertEquals("Connected : The list of managed accounts are : []", string0);
      
      String string1 = EWrapperMsgGenerator.receiveFA(0, "Connected : The list of managed accounts are : []");
      assertEquals("FA: null Connected : The list of managed accounts are : []", string1);
      
      String string2 = EWrapperMsgGenerator.updateAccountTime((String) null);
      assertEquals("updateAccountTime: null", string2);
      
      String string3 = EWrapperMsgGenerator.historicalData(0, "Error - org.evosuite.runtime.mock.java.lang.MockThrowable: org.evosuite.runtime.mock.java.lang.MockThrowable: org.evosuite.runtime.mock.java.lang.MockThrowable", 0, 0, 0, 0, 98, 0, 98, true);
      assertEquals("id=0 date = Error - org.evosuite.runtime.mock.java.lang.MockThrowable: org.evosuite.runtime.mock.java.lang.MockThrowable: org.evosuite.runtime.mock.java.lang.MockThrowable open=0.0 high=0.0 low=0.0 close=0.0 volume=98 count=0 WAP=98.0 hasGaps=true", string3);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Contract contract0 = new Contract(2, "Connection Closed", "Connection Closed", "Connection Closed", 2064.34781181042, "Connection Closed", "U@0SYiqnbb+}g<b", "U@0SYiqnbb+}g<b", "c\"*-)", "U@0SYiqnbb+}g<b", (Vector) null, ",rC%m/", false, (String) null, "");
      Vector<Integer> vector0 = new Vector<Integer>();
      contract0.m_includeExpired = false;
      contract0.m_comboLegs = vector0;
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.openOrder(2, contract0, order0, orderState0);
      String string0 = EWrapperMsgGenerator.tickSize((-46), 0, 0);
      assertEquals("id=-46  bidSize=0", string0);
      
      String string1 = EWrapperMsgGenerator.updateAccountTime((String) null);
      assertEquals("updateAccountTime: null", string1);
      
      String string2 = EWrapperMsgGenerator.currentTime(0);
      assertEquals("current time = 0 (Jan 1, 1970 12:00:00 AM)", string2);
      
      String string3 = EWrapperMsgGenerator.tickOptionComputation((-104), 0, 0, 0.0, 0, Integer.MAX_VALUE);
      assertEquals("id=-104  bidSize: vol = 0.0 delta = 0.0", string3);
      
      System.setCurrentTimeMillis(0);
      String string4 = EWrapperMsgGenerator.tickOptionComputation((-675), 0, 1.7976931348623157E308, 1074.30142, 0, 1.7976931348623157E308);
      assertEquals("id=-675  bidSize: vol = N/A delta = N/A", string4);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(0, 0, "P!", "P!");
      assertEquals("MsgId=0 :: MsgType=0 :: Origin=P! :: Message=P!", string0);
      
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(0, "P!", "MsgId=0 :: MsgType=0 :: Origin=P! :: Message=P!", "P!", 0, "O", "com.ib.client.UnderComp", "com.ib.client.UnderComp", "doR=\"t3<n@%{ ", "", vector0, "", false, "MsgId=0 :: MsgType=0 :: Origin=P! :: Message=P!", "#]e-M4Y/AaA@=P5e]Yw");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState("BD^:W'^&kndwG>", "", "", "", 1.7976931348623157E308, Integer.MAX_VALUE, (-1746.46), (String) null, (String) null);
      EWrapperMsgGenerator.openOrder((-1), contract0, order0, orderState0);
      String string1 = EWrapperMsgGenerator.tickOptionComputation(2019, 2, (-1461.0), 1.7976931348623157E308, Integer.MAX_VALUE, 1120.4424627559963);
      assertEquals("id=2019  askPrice: vol = N/A delta = N/A", string1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.execDetailsEnd(0);
      assertEquals("reqId = 0 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.updateNewsBulletin(54, (-4152), "reqId = 0 =============== end ===============", "reqId = 0 =============== end ===============");
      assertEquals("MsgId=54 :: MsgType=-4152 :: Origin=reqId = 0 =============== end =============== :: Message=reqId = 0 =============== end ===============", string1);
      
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, "", 0.0, "8mk'3", "", 0, (String) null, "$2(K0 ~", "", (String) null, (String) null, (String) null, " (", "");
      String string2 = EWrapperMsgGenerator.bondContractDetails((-4152), contractDetails0);
      assertEquals("reqId = -4152 ===================================\n ---- Bond Contract Details begin ----\nsymbol = null\nsecType = null\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = null\ncurrency = null\nmarketName = null\ntradingClass = \nconid = 0\nminTick = 0.0\norderTypes = 8mk'3\nvalidExchanges = \nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = null\n ---- Bond Contract Details End ----\n", string2);
      
      contractDetails0.m_underConId = 54;
      Contract contract1 = new Contract();
      Order order0 = new Order();
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      OrderState orderState0 = new OrderState("com.ib.client.UnderComp", (String) null, (String) null, "", 0.0, (-842.9129), 0, "o|$kn2zJX2uA", (String) null);
      Order order1 = new Order();
      OrderState orderState1 = new OrderState();
      EWrapperMsgGenerator.openOrder(2215, contract0, order0, orderState1);
      String string3 = EWrapperMsgGenerator.tickSize(2318, 0, (-1809));
      assertEquals("id=2318  bidSize=-1809", string3);
      
      String string4 = EWrapperMsgGenerator.updateAccountTime("it?iN#'_F2w<zNa]@");
      assertEquals("updateAccountTime: it?iN#'_F2w<zNa]@", string4);
      
      String string5 = EWrapperMsgGenerator.currentTime(54);
      assertEquals("current time = 54 (Jan 1, 1970 12:00:54 AM)", string5);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(20, 20, "P!", "P!");
      assertEquals("MsgId=20 :: MsgType=20 :: Origin=P! :: Message=P!", string0);
      
      Vector<Object> vector0 = new Vector<Object>();
      vector0.removeAllElements();
      vector0.removeElement((Object) null);
      Contract contract0 = new Contract();
      Order order0 = new Order();
      Vector<TagValue> vector1 = new Vector<TagValue>();
      Contract contract1 = new Contract(0, "P!", "", "(", (-1.0), (String) null, "P!", ".*:,<{Suo", "\u0004+", "Vl", vector1, "MsgId=20 :: MsgType=20 :: Origin=P! :: Message=P!", false, "", (String) null);
      Order order1 = new Order();
      OrderState orderState0 = new OrderState((String) null, "3&?S6k${x", (String) null, "3&?S6k${x", 905.2385063945, (-1440.24), 0.0, (String) null, " algoParams={");
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      String string1 = EWrapperMsgGenerator.tickOptionComputation(Integer.MAX_VALUE, 13, 2136.6362892, 0.0, 0.0, 1.7976931348623157E308);
      assertEquals("id=2147483647  modelOptComp: vol = 2136.6362892 delta = 0.0: modelPrice = 0.0: pvDividend = N/A", string1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Contract contract0 = new Contract(2, "TSKJ8s)", "  It does not support historical data backfill.", "c\"*-)", 2, "cbEM?B:;4-xvh'9fj+", "c\"*-)", "c\"*-)", (String) null, "c\"*-)", vector0, "", false, "v~xJ4<+O{oK|", " ocaType=");
      Order order0 = new Order();
      order0.m_parentId = 13;
      String string0 = EWrapperMsgGenerator.tickOptionComputation(Integer.MAX_VALUE, 13, Integer.MAX_VALUE, (-492.28), 0.0, 0.0);
      assertEquals("id=2147483647  modelOptComp: vol = 2.147483647E9 delta = N/A: modelPrice = 0.0: pvDividend = 0.0", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(Integer.MAX_VALUE, 0, (-1002.62), 1.7976931348623157E308, 1, 3.1);
      assertEquals("id=2147483647  bidSize: vol = N/A delta = N/A", string1);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      System.setCurrentTimeMillis((-9L));
      Vector<Integer> vector0 = new Vector<Integer>(2);
      Contract contract0 = new Contract(2, "P!", ">-$n>@5Bc*.ZS=s", ": vol = ", 2, ">-$n>@5Bc*.ZS=s", "\"lI", "Qp~8H", "`tW5", (String) null, vector0, "XPT+P", false, "Qp~8H", "P!");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract0, order0, orderState0);
      order0.m_algoStrategy = "  It does not support notHeld parameter.";
      EWrapperMsgGenerator.openOrder(3, contract0, order0, orderState0);
      System.setCurrentTimeMillis(Integer.MAX_VALUE);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      System.setCurrentTimeMillis((-9L));
      Vector<Integer> vector0 = new Vector<Integer>(2);
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-2021637739), 2, 2, 1763.696771597, 1763.696771597, (-2021637739));
      assertEquals("id=-2021637739  askPrice: vol = 2.0 delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(2146409906, 2146409906, (-2021637739), 1.0, 1763.696771597, 2146409906);
      assertEquals("id=2146409906  unknown: vol = N/A delta = 1.0", string1);
      
      System.setCurrentTimeMillis((-1L));
      String string2 = EWrapperMsgGenerator.tickOptionComputation(2375, 13, 1763.696771597, 119.05504, (-2071.33), 13);
      assertEquals("id=2375  modelOptComp: vol = 1763.696771597 delta = N/A: modelPrice = N/A: pvDividend = 13.0", string2);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      EWrapperMsgGenerator.tickOptionComputation(13, 13, 2249, 2302.5, 13, (-39.65149992122));
      System.setCurrentTimeMillis(13);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Order order0 = new Order();
      order0.m_permId = 2;
      order0.m_parentId = 13;
      EWrapperMsgGenerator.tickOptionComputation(Integer.MAX_VALUE, 13, Integer.MAX_VALUE, (-492.28), 1.7976931348623157E308, 0.0);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(Integer.MAX_VALUE, 0, (-1002.62), 1.7976931348623157E308, 1, 1.7976931348623157E308);
      Vector<TagValue> vector1 = new Vector<TagValue>();
      Contract contract0 = new Contract(2, (String) null, (String) null, "r<)w^\"G`>5", 581.418785715, (String) null, (String) null, " auctionStrategy=", (String) null, (String) null, vector1, "id=2147483647  modelOptComp: vol = 2.147483647E9 delta = N/A: modelPrice = N/A: pvDividend = 0.0", true, "%4!@[3OB=vT&HfauOeX", "r<)w^\"G`>5");
      Order order1 = new Order();
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      Contract contract1 = new Contract(Integer.MAX_VALUE, (String) null, "O", "", Integer.MAX_VALUE, (String) null, "/%L{'9qO2{", "  It does not support secIdType and secId parameters.", (String) null, (String) null, (Vector) null, (String) null, false, ")QV$", (String) null);
      EWrapperMsgGenerator.openOrder((-105), contract1, order1, orderState0);
      Contract contract2 = new Contract(1027, "*", "(=I", (String) null, 0, (String) null, " Ky<P;7", "}zg'", "id=2147483647  modelOptComp: vol = 2.147483647E9 delta = N/A: modelPrice = N/A: pvDividend = 0.0", (String) null, (Vector) null, "I$oR9Au", false, (String) null, (String) null);
      String string1 = EWrapperMsgGenerator.openOrder(0, contract2, order0, orderState0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      Vector<TagValue> vector0 = new Vector<TagValue>();
      Contract contract0 = new Contract(6, "ML8b9FJ", "BAG", "9E(avlWW%RU", 1.7976931348623157E308, "9E(avlWW%RU", "ML8b9FJ", " clearingAccount=", "\"", " clearingAccount=", vector0, "ML8b9FJ", true, "SqL", ";EQ912[l");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder((-145265444), contract0, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      Vector<TagValue> vector0 = new Vector<TagValue>();
      Contract contract0 = new Contract(6, "ML8b9FJ", "BAG", "9E(avlWW%RU", 1.7976931348623157E308, "9E(avlWW%RU", "ML8b9FJ", " clearingAccount=", "\"", " clearingAccount=", vector0, "ML8b9FJ", true, "SqL", " EQD12['");
      contract0.m_secId = " EQD12['";
      contract0.m_comboLegsDescrip = ";OY<6r=grfZ";
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder((-145265444), contract0, order0, orderState0);
      OrderState orderState1 = new OrderState("O", string0, (String) null, (String) null, 6, 1380.707, Integer.MAX_VALUE, "", " EQD12['");
      String string1 = EWrapperMsgGenerator.openOrder((-2360), contract0, order0, orderState1);
      System.setCurrentTimeMillis(0);
      String string2 = EWrapperMsgGenerator.openOrder(1866, contract0, order0, orderState0);
      assertFalse(string2.equals((Object)string1));
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      System.setCurrentTimeMillis(1000L);
      Vector<TagValue> vector0 = new Vector<TagValue>();
      Contract contract0 = new Contract((-145265433), "ML8b9FJ", "BAG", "ML8b9FJ", 1000L, "E", "BAG", "ML8b9FJ", "E", "BAG", vector0, "BAG", true, "E", "(dX5Qf._BCi6Bid+jf");
      Order order0 = new Order();
      order0.m_algoStrategy = "BAG";
      OrderState orderState0 = new OrderState("E", "BAG", "E", "E", 'f', 1.7976931348623157E308, 0.0, "ML8b9FJ", "ML8b9FJ");
      TagValue tagValue0 = new TagValue();
      vector0.add(tagValue0);
      vector0.add(tagValue0);
      orderState0.m_minCommission = (double) 0;
      order0.m_algoParams = contract0.m_comboLegs;
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      System.setCurrentTimeMillis(0);
      EWrapperMsgGenerator.openOrder(7, contract0, order0, orderState0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      System.setCurrentTimeMillis(1000L);
      Vector<TagValue> vector0 = new Vector<TagValue>();
      Contract contract0 = new Contract((-145265433), "ML8b9FJ", "BAG", "ML8b9FJ", 1000L, "E", "BAG", "ML8b9FJ", "E", "BAG", vector0, "BAG", true, "E", "(dX5Qf._BCi6Bid+jf");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState("E", "BAG", "E", "E", 'f', 1.7976931348623157E308, 0.0, "ML8b9FJ", "ML8b9FJ");
      orderState0.m_minCommission = (double) 0;
      order0.m_basisPoints = 34.0;
      order0.m_algoParams = contract0.m_comboLegs;
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(0L);
  }
}
