/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:55:20 GMT 2018
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import java.io.File;
import java.io.OutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("mK[v9/mK[v90.tmp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "mK[v9");
      MockFile mockFile0 = new MockFile((String) null, "mK[v9");
      File file0 = MockFile.createTempFile("mK[v9", (String) null, (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.release();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals((-19995), mockFileInputStream0.available());
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "mK[v9");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("mK[v9/mK[v90.tmp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "mK[v9");
      MockFile mockFile0 = new MockFile((String) null, "mK[v9");
      File file0 = MockFile.createTempFile("mK[v9", (String) null, (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.release();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-126);
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)5;
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ".");
      byteArray0[4] = (byte)0;
      mockFileInputStream0.read(byteArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals((-39998), mockFileInputStream0.available());
      assertEquals(2L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.2711893730418441
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("mK[v9/mK[v90.tmp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "mK[v9");
      MockFile mockFile0 = new MockFile((String) null, "mK[v9");
      File file0 = MockFile.createTempFile("mK[v9", (String) null, (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.read();
      mockFileInputStream0.release();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals((-39996), mockFileInputStream0.available());
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.2868359830561607
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("mK[v9/mK[v90.tmp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "mK[v9");
      MockFile mockFile0 = new MockFile((String) null, "mK[v9");
      File file0 = MockFile.createTempFile("mK[v9", (String) null, (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte) (-126);
      byteArray0[2] = (byte) (-126);
      byteArray0[3] = (byte)5;
      mockFileInputStream0.read(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, (byte)91);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(2L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("mK[v9/mK[v90.tmp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "mK[v9");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-92);
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)77;
      byteArray0[3] = (byte)91;
      byteArray0[4] = (byte)91;
      byteArray0[5] = (byte) (-39);
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte)16;
      byteArray0[8] = (byte) (-126);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = new MockFile((String) null, "mK[v9");
      File file0 = MockFile.createTempFile("mK[v9", (String) null, (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.read();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.ABORT = true;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      bufferedCustomInputStream0.read();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals((-69988), mockFileInputStream0.available());
      assertEquals(0L, base64Decoder0.getLineCount());
      assertEquals((-79988), mockFileInputStream0.available());
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.19144408195771734
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "mK[v9");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("mK[v9/mK[v90.tmp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "mK[v9");
      MockFile mockFile0 = new MockFile((String) null, "mK[v9");
      File file0 = MockFile.createTempFile("mK[v9", (String) null, (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.release();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-126);
      byteArray1[1] = (byte) (-126);
      byteArray1[2] = (byte) (-126);
      byteArray1[3] = (byte) (-126);
      byteArray1[4] = (byte) (-126);
      byteArray1[5] = (byte) (-126);
      byteArray1[6] = (byte) (-126);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray1);
      byteArray0[0] = (byte) (-126);
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)5;
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ".");
      byteArray0[4] = (byte)0;
      mockFileInputStream0.read(byteArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals((-49991), mockFileInputStream0.available());
      assertEquals(2L, base64Decoder0.getLineCount());
  }
}
