/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:29:28 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.DataBuffer;
import java.awt.image.DataBufferDouble;
import java.awt.image.IndexColorModel;
import java.awt.image.LookupOp;
import java.awt.image.Raster;
import java.awt.image.WritableRaster;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-857), (-857), true);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 4;
      visualListModel0.moveDownIndex(4);
      int int1 = (-1784);
      int int2 = 2088;
      visualListModel0.subList((-1784), 2088);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      BufferedImage bufferedImage0 = null;
      int int3 = 0;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((BufferedImage) null, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      intArray0[1] = 0;
      intArray0[2] = 0;
      int int0 = (-617);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.data = vector0;
      intArray0[3] = (-617);
      intArray0[4] = 0;
      int int1 = 65535;
      intArray0[5] = 65535;
      visualListModel0.removeElements(0, 376, true);
      intArray0[6] = 1;
      visualListModel0.getElements();
      intArray0[7] = 0;
      boolean boolean0 = true;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(1000, "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      visualListModel0.addAllElements((-4262), (Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndex((-646));
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(1000.0, (double) 0, (double) 0);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: 0
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      visualListModel0.undeleteElements(intArray0);
      intArray0[0] = 803;
      intArray0[1] = 90;
      intArray0[2] = 0;
      intArray0[3] = (-3324);
      intArray0[4] = (-4865);
      intArray0[5] = 9999;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.getSize();
      String string0 = "Jar files";
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(985, "Jar files");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-503);
      int int1 = 0;
      int int2 = 1;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveDownIndex(0);
      int int3 = 13;
      boolean boolean0 = true;
      visualListModel0.removeElements((-503), 13, true);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      int int0 = 0;
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>(0);
      ArrayDeque<VisualPageListItem> arrayDeque1 = arrayDeque0.clone();
      arrayDeque1.spliterator();
      arrayDeque1.poll();
      visualListModel0.appendAllElements(arrayDeque1);
      int int1 = 91;
      intArray0[0] = 91;
      intArray0[1] = 1000;
      int int2 = (-1);
      intArray0[2] = (-1);
      // Undeclared exception!
      try { 
        arrayDeque0.add((VisualPageListItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayDeque", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = 0;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-1), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9730014063936123
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(0);
      int[] intArray0 = new int[4];
      intArray0[0] = 1223;
      intArray0[1] = 1952;
      intArray0[2] = (-1);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements(132, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.moveUpIndexes(intArray0);
      intArray0[3] = 0;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(2290, 1713, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0114042647073518
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = 586;
      intArray0[1] = (-1);
      intArray0[2] = (-123);
      intArray0[3] = (-1);
      intArray0[4] = 2510;
      intArray0[5] = (-1);
      intArray0[6] = (-1187);
      intArray0[7] = 9999;
      visualListModel0.rotateClockwiseElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 2438;
      intArray0[2] = (-1);
      intArray0[3] = 180;
      intArray0[4] = 0;
      int int0 = 0;
      intArray0[5] = 0;
      intArray0[6] = (-1);
      int int1 = 0;
      intArray0[7] = 0;
      intArray0[8] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.getElementAt(93);
      visualListModel0.removeElements(intArray0, false);
      byte[] byteArray0 = null;
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable(0, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ByteLookupTable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 50;
      visualListModel0.subList(50, 50, true);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-486));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -486
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      stack0.addAll((Collection<? extends VisualPageListItem>) linkedHashSet0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      int int0 = 265;
      int int1 = 14;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(14, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 14
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-857), (-857), true);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      visualListModel0.getValidElements();
      visualListModel0.elementsChanged();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int int0 = (-574);
      visualListModel0.moveDownIndex((-574));
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      int int1 = 111;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(111);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.709472776584213
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndex((-646));
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      visualListModel0.prependAllElements(collection0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = (-646);
      intArray0[2] = 0;
      intArray0[3] = (-646);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1121));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1121
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(220);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      priorityQueue0.poll();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.moveDownIndex(0);
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements(1000, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndex((-3740));
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((-3740), (Collection<VisualPageListItem>) linkedList0);
      int[] intArray0 = new int[7];
      intArray0[0] = 1000;
      intArray0[1] = (-3740);
      intArray0[2] = 1637;
      intArray0[3] = (-646);
      intArray0[5] = 0;
      intArray0[6] = 1637;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel1.subList(256, 1637, false);
      assertNull(collection0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.220025327834538
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.addAllElements(462, (Collection<VisualPageListItem>) hashSet0);
      visualListModel0.moveUpIndex(7);
      int[] intArray0 = new int[7];
      intArray0[0] = (-3679);
      intArray0[1] = (-646);
      intArray0[2] = (-486);
      intArray0[3] = 462;
      intArray0[4] = (-646);
      intArray0[5] = 7;
      intArray0[6] = (-646);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.subList((-1470), 1276, true);
      visualListModel1.removeElements(864, (-574), true);
      assertNotSame(visualListModel1, visualListModel0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-857), (-857), false);
      visualListModel0.updateElementAt((-857), (VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElementAt((VisualPageListItem) null, (-857));
      visualListModel0.moveDownIndex((-486));
      visualListModel1.elementChanged((VisualPageListItem) null);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9730014063936123
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex((-646));
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements(1703, (Collection<VisualPageListItem>) linkedList0);
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(1637, 50000, false);
      assertNull(collection0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.undeleteElements(intArray0);
      int[] intArray1 = new int[7];
      intArray1[0] = 1637;
      intArray1[1] = 553;
      intArray1[2] = 0;
      intArray1[3] = 1637;
      intArray1[4] = 1637;
      intArray1[5] = 0;
      intArray1[6] = 553;
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack0.addAll((Collection<? extends VisualPageListItem>) stack1);
      visualListModel0.setData((Vector<VisualPageListItem>) stack1);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.removeElements(intArray0, false);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.clone();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.getSize();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.9518484392238882
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.clone();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndex(7);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      priorityQueue0.poll();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 7;
      intArray0[2] = 0;
      intArray0[3] = 0;
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 7;
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.updateElementAt(270, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7671949977916748
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.clone();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndex(7);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      priorityQueue0.poll();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 7;
      intArray0[2] = 0;
      intArray0[3] = 0;
      visualListModel1.addElementAt((VisualPageListItem) null, 7);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveDownIndex(0);
      visualListModel2.prependAllElements(linkedHashSet0);
      visualListModel2.elementChanged((VisualPageListItem) null);
      assertEquals(1, visualListModel2.getSize());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.2206072645530175
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.clone();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      int int0 = 7;
      visualListModel0.moveUpIndex(7);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      int[] intArray0 = new int[1];
      intArray0[0] = 7;
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 7
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.2047854169135204
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      int[] intArray0 = new int[9];
      intArray0[0] = 242;
      intArray0[1] = 242;
      intArray0[2] = 242;
      intArray0[3] = 242;
      intArray0[4] = 242;
      intArray0[5] = 242;
      intArray0[6] = 242;
      intArray0[7] = 242;
      intArray0[8] = 242;
      visualListModel0.rotateClockwiseElements(intArray0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      visualListModel1.elementsChanged();
      linkedHashSet0.forEach(consumer0);
      visualListModel1.addAllElements(242, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel1.getValidElements();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      visualListModel1.subList(92, 92, true);
      vector0.addElement((VisualPageListItem) null);
      visualListModel1.updateElementAt(6, (VisualPageListItem) null);
      visualListModel1.getElements();
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.0097091818941455
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.elementsChanged();
      HashSet<Object> hashSet0 = new HashSet<Object>();
      linkedHashSet0.containsAll(hashSet0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.clone();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndex(0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      int[] intArray0 = new int[1];
      visualListModel0.removeElements(intArray0, true);
      intArray0[0] = 0;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      int int0 = (-2479);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.106170916206464
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.elementsChanged();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.clone();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndex(0);
      visualListModel0.getElements();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.removeElements(0, 0, true);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      int int0 = (-2479);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6987829895138011
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.clone();
      int int0 = 0;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      int int1 = 23;
      visualListModel0.moveUpIndex(23);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.moveDownIndex(23);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0291545628109144
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.clone();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndex(23);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.removeElements(intArray0, false);
      visualListModel1.moveDownIndex((-2991));
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel1.reverseElements(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.moveDownIndex((-1463));
      visualListModel0.reverseElements(intArray0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.470131920408841
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.clone();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndex(168);
      visualListModel0.removeElements(0, 0, false);
      visualListModel0.moveDownIndex(1302);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5832584594204766
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.clone();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel1.subList(0, 126, false);
      visualListModel1.subList(0, 1204, false);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0751393240053735
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.parallelStream();
      visualListModel0.addAllElements((-4059), (Collection<VisualPageListItem>) linkedList0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.clone();
      linkedHashSet0.add((VisualPageListItem) null);
      int int0 = 0;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.addAllElements(4292, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.moveUpIndex(0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }
}
