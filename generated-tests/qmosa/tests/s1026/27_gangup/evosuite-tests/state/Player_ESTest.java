/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:53:19 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FilterOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      player0.type();
      MockFile mockFile0 = new MockFile("Bbxp", "Bbxp");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
      player0.setX(5);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      filterOutputStream0.flush();
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      player0.pack(dataOutputStream0);
      player0.getMoney();
      player0.getIP();
      player0.setDead((long) 5, true);
      player0.type();
      player0.isDead();
      Player player1 = new Player(1, "Bbxp", "}4yp", 1, (-861));
      player0.isJoinOK(player1, true);
      player0.setX(1296.0F);
      assertEquals(5L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(4919, "", "", (-1));
      player0.setConnected(false);
      player0.pack();
      Player player1 = new Player(4919, "", "0.0.0.0", 0);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(player0.isConnected());
      assertTrue(player1.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(0);
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte) (-9);
      player0.unpack(byteArray0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player0", player0.toString());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-2333), "6s:GO>ga:", (-2333));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)67;
      byteArray0[1] = (byte)86;
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte) (-95);
      byteArray0[4] = (byte)43;
      byteArray0[5] = (byte)5;
      player0.pack();
      player0.unpack(byteArray0);
      player0.getY();
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(3032, "", "", 3032);
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.getY();
      player0.gangStrength();
      player0.getName();
      assertFalse(player0.isConnected());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0);
      player0.setZ(0.0F);
      long long0 = 0L;
      Party party0 = null;
      player0.head = null;
      Party party1 = player0.boss;
      player0.head = null;
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(367, "0)x6Qo1Yy-%[91=.p", ",~i; z)1a0f", 714, 2053);
      player0.setX((-1008.1553F));
      byte[] byteArray0 = player0.pack();
      player0.reset(true);
      player0.setX((-1008.1553F));
      boolean boolean0 = false;
      player0.setConnected(false);
      player0.unpack(byteArray0);
      player0.setY(0.0F);
      int int0 = (-1224);
      Party party0 = player0.head;
      player0.next = null;
      BufferedOutputStream bufferedOutputStream0 = null;
      try {
        bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, (-1224));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedOutputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(170, (String) null, (String) null, 170);
      player0.gangStrength();
      player0.gangStrength();
      player0.setMoney(805.4F);
      player0.getMoney();
      player0.getStrength();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(0, "@7[r}!eor&Z\"5'vti/x", "@7[r}!eor&Z\"5'vti/x", 0, 3646);
      player0.getIP();
      player0.reset(false);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(3646, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "JWR", (String) null, (short)4919);
      player1.setJoinOK(player0, true);
      player0.remove(player1);
      player0.reset(true);
      player0.setDead((-3353L), false);
      player0.setConnected(false);
      player0.setZ(0.0F);
      player0.getMoney();
      player0.setZ((-1695.2754F));
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-151), "4M_aM1y-\"EH", (-151));
      player0.toString();
      Player player1 = new Player((-57), "state.Party", "state.Party", (-151), 2783);
      player0.setJoinOK(player1, false);
      assertEquals((-151), player1.getPictureId());
      assertEquals(2783, player1.getStrength());
      
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      player0.toString();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(1273);
      player0.setY(1273);
      player0.reset(true);
      player0.setDead();
      boolean boolean0 = player0.isDead();
      assertEquals(1273.0F, player0.getY(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-5254));
      player0.setX((-5254));
      player0.add((Party) null);
      player0.setDead((long) (-5254), false);
      player0.gangStrength();
      player0.reset(false);
      Player player1 = new Player(4919, ".*[.]class$", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 0);
      player0.add(player1);
      player0.getZ();
      player0.getStrength();
      player0.reset(false);
      player0.getX();
      player0.setMoney(1);
      player0.setX(1);
      player0.setDead(1L);
      assertEquals(1L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(2213, "", "", (-1051), 2213);
      Party party0 = new Party();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-86);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)72;
      byteArray0[8] = (byte)71;
      player0.unpack(byteArray0);
      party0.prev = (Party) player0;
      player0.add(party0);
      player0.getTimeOfDeath();
      player0.setX(2213);
      player0.setY((-2060.378F));
      assertEquals(2213.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(4919, "", "", 3493, 3493);
      player0.gangStrength();
      player0.getMoney();
      player0.getPictureId();
      player0.gangStrength();
      player0.setZ(971.0056F);
      assertEquals(971.0056F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5400363038209806
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(578, "", "", (-421), 578);
      player0.setDead((long) 578, false);
      Player player1 = (Player)player0.gangBoss();
      player1.next = (Party) player0;
      Player player2 = new Player(578, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (-421));
      player0.setJoinOK(player2, false);
      player2.next = (Party) player1;
      player0.remove(player1);
      player0.setZ((-421));
      player0.setDead((long) 578);
      player2.getY();
      player0.setZ(281.88F);
      player2.toString();
      player0.setZ((-2323.564F));
      Player player3 = new Player((short)4919, "", 171);
      player2.isJoinOK(player3, false);
      player3.isConnected();
      player3.isJoinOK(player2, true);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(578L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4260151319598084
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(578, "", "", (-421), 578);
      player0.setDead((long) 578, false);
      Player player1 = (Player)player0.gangBoss();
      player1.next = (Party) player0;
      Player player2 = new Player(578, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (-421));
      player0.setJoinOK(player2, false);
      player2.next = (Party) player1;
      player0.remove(player1);
      player0.setZ((-421));
      player0.setDead((long) 578);
      player2.getY();
      player1.setZ((-421));
      player0.toString();
      player1.setZ(0.0F);
      Player player3 = new Player(4, "", 4);
      player1.isJoinOK(player2, true);
      player1.isConnected();
      boolean boolean0 = player1.isJoinOK(player2, false);
      assertEquals(0.0F, player1.getZ(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6674619334292948
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      System.setCurrentTimeMillis(1073L);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(1073L);
      System.setCurrentTimeMillis((-3050L));
      Player player0 = new Player((-2707), "", (-2707));
      Player player1 = (Player)player0.gangBoss();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player2 = new Player((-2707), "", 0);
      player1.remove(player0);
      player0.setJoinOK(player2, false);
      player2.remove(player0);
      player0.setZ(0.2F);
      Player player3 = new Player((-2707));
      player3.isJoinOK(player0, false);
      player3.setJoinOK(player2, false);
      player0.next = (Party) player1;
      player1.isJoinOK(player0, false);
      System.setCurrentTimeMillis(1392409311330L);
      boolean boolean0 = player3.isJoinOK(player1, false);
      assertEquals(0.2F, player1.getZ(), 0.01F);
      assertFalse(boolean0);
  }
}
