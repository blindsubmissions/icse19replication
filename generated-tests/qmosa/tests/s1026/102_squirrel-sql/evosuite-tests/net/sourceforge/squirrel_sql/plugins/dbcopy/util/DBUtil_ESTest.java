/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:45:41 GMT 2018
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import javax.swing.Icon;
import javax.swing.JLayeredPane;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.fw.id.IIdentifier;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.IndexInfo;
import net.sourceforge.squirrel_sql.fw.sql.PrimaryKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBUtil.getLastStatement();
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, (String) null, "`wto}5P");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 418;
      DBUtil.typesAreEquivalent(418, 418);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.unload();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBUtil.setLastStatement("");
      String string0 = "<eZid+4@;.[s/od\\n";
      String string1 = "";
      String string2 = "";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string3 = "!qI|0";
      String string4 = "net.sourceforge.squirrel_sql.client.session.schemainfo.FilterMatcher";
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("!qI|0", "<eZid+4@;.[s/od\n", "net.sourceforge.squirrel_sql.client.session.schemainfo.FilterMatcher");
      dBCopyPlugin0.setDestDatabaseObject(databaseObjectInfo0);
      // Undeclared exception!
      try { 
        dBCopyPlugin0.sessionStarted((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBUtil.setLastStatementValues("dbcopytest");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, " CASCADE", (String) null, "number($p)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "_AQ%}4 [v#C%PV", (-104));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBUtil.typesAreEquivalent((-2395), (-3256));
      TableColumnInfo tableColumnInfo0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = null;
      dBCopyPlugin0.setPasteToTableName((String) null);
      dBCopyPlugin0.getPluginUserSettingsFolder();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = "1";
      String string1 = " in schema ";
      dBCopyPlugin0.setDestDatabaseObject((IDatabaseObjectInfo) null);
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "1", " in schema ", 2004);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "";
      DBUtil.setLastStatementValues("");
      DBUtil.getLastStatementValues();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(0);
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier0);
      SQLConnection sQLConnection0 = null;
      try {
        sQLConnection0 = new SQLConnection((Connection) null, sQLDriverPropertyCollection0, sQLDriver0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLConnection == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLConnection", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = "Encountered unexpected exception while attempting to determine if schemas are used in table definitions";
      String string1 = "PUB";
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "START", "Encountered unexpected exception while attempting to determine if schemas are used in table definitions", "PUB");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ISQLConnection iSQLConnection0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "NO";
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "NO", " 2B<]@W&]PR` 6+lYu");
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBUtil.getLastStatement();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[2];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertEquals(2, list0.size());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin0.getDestSession();
      DBUtil.fixCase((ISession) null, (String) null);
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "", 7, "", 7, 7, (-1158), 0, "", "cF", 514, 514, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(12);
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier0);
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "", "getCatSep: Unexpected Exception - ");
      // Undeclared exception!
      try { 
        DBUtil.getColumnName(sQLConnection0, (ITableInfo) null, 7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("w ]~&|SYNk.1axRO", "w ]~&|SYNk.1axRO", "w ]~&|SYNk.1axRO", "w ]~&|SYNk.1axRO", 1, "w ]~&|SYNk.1axRO", 1299, (-201), 1299, (-201), "w ]~&|SYNk.1axRO", "w ]~&|SYNk.1axRO", (-1754), 1299, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBUtil.typesAreEquivalent(418, 418);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      Integer[] integerArray0 = new Integer[5];
      integerArray0[0] = integer0;
      integerArray0[1] = integer2;
      integerArray0[2] = integer1;
      integerArray0[3] = integer0;
      integerArray0[4] = integer3;
      stack0.toArray(integerArray0);
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(stack0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      List<ITableInfo> list2 = DBUtil.convertObjectToTableList(list1);
      assertNotSame(list2, list0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteToTableName("Encountered unexpected exception while attempting to determine if schemas are used in table definitions");
      dBCopyPlugin0.getSourceSession();
      SQLDriver sQLDriver0 = new SQLDriver();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "<)#!LxN[0", "clob", "Z");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      dBCopyPlugin0.setSourceSession((ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "name", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      Integer.valueOf(2823);
      Integer integer0 = new Integer(2823);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      DBUtil.typesAreEquivalent((-2395), 1616);
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestDatabaseObject();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo(") - table ", ") - table ", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("+/", "{XXHuo3&{%&v`Ja", (String) null, "+/", (-3177), "Hjw*8Jw%^-4.n2", 92, (-1591), (-3), 2011, "Hjw*8Jw%^-4.n2", (String) null, (-2448), (-1591), "C=2sGjkUS#;");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[6];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "Missing required option", "sF", "+/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      boolean boolean0 = DBUtil.typesAreEquivalent((-6), (-6));
      assertTrue(boolean0);
      
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, ":Y[pFD9:M[JVSU#l", "ZAO");
      int int0 = DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "+/");
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      DBUtil.typesAreEquivalent((-6), (-6));
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "jar:", (ITableInfo) null, 1854);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("w ]~&|SYNk.1axRO", "w ]~&|SYNk.1axRO", "w ]~&|SYNk.1axRO", "w ]~&|SYNk.1axRO", 1, "w ]~&|SYNk.1axRO", 1, 1, 1, 1, "w ]~&|SYNk.1axRO", "w ]~&|SYNk.1axRO", (-1754), 1, "w ]~&|SYNk.1axRO");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType((-712), tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "w ]~&|SYNk.1axRO");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      DBUtil.convertObjectToTableList(stack0);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("RBR# \\", "RBR# \\", "r]&AM`$ssEarw");
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("RBR# \\", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", (String) null, 7, "", 7, 7, (-1158), 7, (String) null, "cF", 514, 514, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.CATALOG;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.VIEW;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBUtil.isBinaryType(tableColumnInfo0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, (String) null, "");
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("dnyu<'6u", "dnyu<'6u", "HdLO r^=59 cKN!)", "dnyu<'6u", (-4), " tableName = ", (-4), (-4), (-4), (-4), "HdLO r^=59 cKN!)", " tableName = ", (-1341), 213, (String) null);
      arrayList0.add((IDatabaseObjectInfo) tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("|d?k}%ud@SO_3iCwA", "7;|M [y9eV(plf%|", " in schema ", "tqD>U!=O$9a@]0\"UZ", (-2), "|d?k}%ud@SO_3iCwA", 1111, 1507, 2435, 448, "Y6B\"", " in schema ", 1111, 2003, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getDestDatabaseObject();
      dBCopyPlugin1.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "m3(se2*(3");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      ITableInfo iTableInfo0 = null;
      stack0.add((ITableInfo) null);
      DBUtil.convertTableToObjectList(stack0);
      System.setCurrentTimeMillis(0L);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = " CASCADE";
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", " CASCADE");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      String string0 = "*b\\F!@o";
      dBCopyPlugin0.setPasteToTableName("*bF!@o");
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 93;
      DBUtil.typesAreEquivalent((-7), 93);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.fixCase((ISession) null, "");
      // Undeclared exception!
      try { 
        dBCopyPlugin0.sessionStarted((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("d4 CIC>aV", "d4 CIC>aV", "d4 CIC>aV", "generated by default as identity", (-17), "generated by default as identity", (-17), 158, 29, (-17), "generated by default as identity", "d4 CIC>aV", 158, (-2696), (String) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)71;
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte) (-61);
      byteArray0[4] = (byte) (-37);
      byteArray0[5] = (byte) (-42);
      byteArray0[6] = (byte) (-3);
      byteArray0[7] = (byte) (-100);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("log4j.rootLogger", "/rAXEfik", "length", "d4 CIC>aV", 1111, "", (-2696), (-3112), (-2696), (-17), "/rAXEfik", "n^s", 158, 90, "iPiBuFZZ.IzwvY?f]S");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getOpenIcon();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      defaultTreeCellRenderer0.getTextNonSelectionColor();
      Icon icon0 = defaultTreeCellRenderer0.getClosedIcon();
      tableColumnInfo1.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType("] does not exist.", icon0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.setPasteMenuEnabled(true);
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo1, (ISession) null);
      assertEquals(1111, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("w ]~&|SYNk.1a xO", "w ]~&|SYNk.1a xO", "w ]~&|SYNk.1a xO", "w ]~&|SYNk.1a xO", 57, "w ]~&|SYNk.1a xO", 57, (-184), 57, (-184), "w ]~&|SYNk.1a xO", "w ]~&|SYNk.1a xO", (-184), 57, "w ]~&|SYNk.1a xO");
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DBUtil.typesAreEquivalent(3, 3);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      System.setCurrentTimeMillis(3);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      dBCopyPlugin0.setPasteToTableName("*bF!@o");
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin0.getPluginJarFilePath();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "6thy4AK>cR{ql~,(4^", "*bF!@o", "Q:->Zre@/,?qa:J/=a", (-4), "B[r}byuK{R)+^?N-h9P", 2803, (-182), (-182), (-182), "ALTER TABLE ", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 182, (-6), "select cout(*) from ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType.createNewDatabaseObjectType("E?Vyw`dzQx+qMd");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        dBCopyPlugin1.load((IApplication) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null IApplication passed
         //
         verifyException("net.sourceforge.squirrel_sql.client.plugin.DefaultPlugin", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DBUtil.typesAreEquivalent(2, 2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IDatabaseObjectInfo iDatabaseObjectInfo0 = dBCopyPlugin0.getDestDatabaseObject();
      assertNull(iDatabaseObjectInfo0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("?*Cpoob48V^?`Cu", "?*Cpoob48V^?`Cu", "?*Cpoob48V^?`Cu", "?*Cpoob48V^?`Cu", 79, "?*Cpoob48V^?`Cu", 79, 79, 79, 79, "?*Cpoob48V^?`Cu", "?*Cpoob48V^?`Cu", 79, 79, "?*Cpoob48V^?`Cu");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("w", "&Lr5Z_9Re3, OP@0RQ.", "RamKA9~+X-hvgmGsC", "iLbYPI@u<h;?{ZL8^}", 2579, "iLbYPI@u<h;?{ZL8^}", 79, 2467, (-3), (-531), ">20L>R%iR,9?^$", "RamKA9~+X-hvgmGsC", 2467, (-2850), "Cq3UsYAcl\"$65");
      TableColumnInfo tableColumnInfo2 = new TableColumnInfo("RamKA9~+X-hvgmGsC", "'w]%oQYvV\"_.LL", "w", (String) null, 2004, "ActionCollection.createActionInfo", 16, 10, 10, 2004, (String) null, "reWFu", 2004, 17, "?*Cpoob48V^?`Cu");
      DBUtil.isBinaryType(tableColumnInfo2);
      System.setCurrentTimeMillis((-2850));
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("\" was already parsed.", "\" was already parsed.", "\" was already parsed.", "\" was already parsed.", 57, "\" was already parsed.", 57, 57, 57, 57, "\" was already parsed.", "\" was already parsed.", 57, 57, "\" was already parsed.");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBUtil.typesAreEquivalent(16, (-2710));
      String string0 = "CREATE OR REPLACE TRIGGER $triggerName$ \nBEFORE INSERT ON $tableName$ \nFOR EACH ROW \nDECLARE \n    nextid number(8) := 0; \nBEGIN \n    SELECT $sequenceName$.nextval into nextid from dual; \n    :new.$columnName$ := nextid; \nEND; ";
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey((String) null, (String) null, "CREATE OR REPLACE TRIGGER $triggerName$ \nBEFORE INSERT ON $tableName$ \nFOR EACH ROW \nDECLARE \n    nextid number(8) := 0; \nBEGIN \n    SELECT $sequenceName$.nextval into nextid from dual; \n    :new.$columnName$ := nextid; \nEND; ", foreignKeyInfo0, (SessionInfoProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("8s}Y7{16", "of8BR^us(", "\" not a decimal integer.", "mcGj-y~|@].$pHhN$y?", 2016, (String) null, 2, 2, 1762, 2001, "CREATE GENERATOR $generatorName$", "AND table_schema = '", 2001, 2, "of8BR^us(");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("m3(se2*n3", "m3(se2*n3", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "kdl(iN9fxVO", 937, "long varbinary(1073741823)", 937, (-2105376123), (-1895), 46, "DBUtil.info.executeupdate", "kdl(iN9fxVO", (-1895), 1823, "long varbinary(1073741823)");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.getSchemaFromDbObject(tableColumnInfo0, (SchemaInfo) null);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("m3(se2*n3", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "long varbinary(1073741823)");
      System.setCurrentTimeMillis((-3188L));
  }
}
