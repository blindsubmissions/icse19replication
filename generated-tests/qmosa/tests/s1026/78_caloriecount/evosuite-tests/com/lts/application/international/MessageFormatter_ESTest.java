/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 18:11:54 GMT 2018
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.StringReader;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.getLastException();
      MockThrowable mockThrowable0 = new MockThrowable("resources.messages.standard", (Throwable) null);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("resources.messages.standard", mockThrowable0);
      ApplicationException applicationException0 = new ApplicationException((Throwable) null, "resources.messages.standard", messageFormatter0, messageFormatter_LoadBundleError0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = "critcal.error.unknown";
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      List list0 = messageFormatter0.listResources("critcal.error.unknown", classLoader0);
      messageFormatter0.createLoadException(list0);
      classLoader0.getParent();
      String string1 = "";
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("critcal.error.unknown", "critcal.error.unknown");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<PropertyResourceBundle> linkedList0 = new LinkedList<PropertyResourceBundle>();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      char[] charArray0 = new char[6];
      charArray0[0] = '|';
      charArray0[1] = 'T';
      charArray0[2] = '2';
      charArray0[3] = '\"';
      charArray0[4] = 'x';
      charArray0[5] = 'h';
      stringReader0.read(charArray0);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      linkedList0.addLast(propertyResourceBundle0);
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.PropertyResourceBundle cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "G@Q{*q)IG";
      objectArray0[1] = (Object) "G@Q{*q)IG";
      objectArray0[2] = (Object) messageFormatter0;
      objectArray0[3] = (Object) messageFormatter0;
      objectArray0[4] = (Object) "G@Q{*q)IG";
      objectArray0[5] = (Object) "G@Q{*q)IG";
      try { 
        messageFormatter0.getMessage("G@Q{*q)IG", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = "";
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      messageFormatter0.listToString(list0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader1.setDefaultAssertionStatus(true);
      classLoader1.setDefaultAssertionStatus(true);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("ch", (Object) "ch", object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString((List<String>) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.getLastException();
      messageFormatter0.initializeResourceBundle();
      messageFormatter0.temp();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.loadCriticalBundles();
      List<String> list1 = ResourceBundle.Control.FORMAT_DEFAULT;
      messageFormatter0.listToString(list1);
      messageFormatter0.temp();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.containsAll(list0);
      List<String> list2 = ResourceBundle.Control.FORMAT_CLASS;
      linkedList0.addAll(0, (Collection<? extends String>) list2);
      MessageFormatter.buildList(messageFormatter0.DEFAULT_BUNDLE_PATH);
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<ApplicationException> linkedList0 = new LinkedList<ApplicationException>();
      ApplicationException applicationException0 = messageFormatter0.createLoadException(linkedList0);
      Throwable throwable0 = messageFormatter0.myLastException;
      applicationException0.initCause((Throwable) null);
      messageFormatter0.addBundle((ResourceBundle) null);
      messageFormatter0.loadCriticalBundles();
      linkedList0.add(applicationException0);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "<";
      objectArray0[1] = (Object) linkedList0;
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) null;
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("<", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<ApplicationException> linkedList0 = new LinkedList<ApplicationException>();
      ApplicationException applicationException0 = messageFormatter0.createLoadException(linkedList0);
      Throwable throwable0 = messageFormatter0.myLastException;
      applicationException0.initCause((Throwable) null);
      messageFormatter0.addBundle((ResourceBundle) null);
      List list0 = new LinkedList<MessageFormatter.LoadBundleError>();
      linkedList0.add(applicationException0);
      Throwable throwable1 = null;
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<ApplicationException> linkedList0 = new LinkedList<ApplicationException>();
      ApplicationException applicationException0 = messageFormatter0.createLoadException(linkedList0);
      Throwable throwable0 = messageFormatter0.myLastException;
      Throwable throwable1 = applicationException0.initCause((Throwable) null);
      messageFormatter0.addBundle((ResourceBundle) null);
      messageFormatter0.loadCriticalBundles();
      linkedList0.add(applicationException0);
      Object[] objectArray0 = new Object[4];
      throwable1.printStackTrace();
      objectArray0[0] = (Object) "<";
      objectArray0[1] = (Object) linkedList0;
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) throwable1;
      objectArray1[1] = (Object) null;
      objectArray1[2] = (Object) "<";
      objectArray1[3] = (Object) linkedList0;
      objectArray1[4] = (Object) applicationException0;
      objectArray1[5] = (Object) "<";
      objectArray1[6] = (Object) "<";
      objectArray1[7] = (Object) linkedList0;
      Object object3 = new Object();
      objectArray1[8] = object3;
      MessageFormatter.buildList(objectArray1);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("X1f!<iH", object1, (Object) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      MessageFormatter.buildList(objectArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      ApplicationException applicationException0 = new ApplicationException((Throwable) null, "critcal.error.unknown", propertyResourceBundle0);
      MockThrowable mockThrowable0 = new MockThrowable("resources.messages.standard", (Throwable) null);
      mockThrowable0.printStackTrace();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      MessageFormatter.buildList((Object[]) null);
      MessageFormatter messageFormatter1 = new MessageFormatter();
      ApplicationException applicationException1 = new ApplicationException((Throwable) null, "]z`)L:?aBg>R5");
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("X1f!<iH", applicationException1);
      ApplicationException applicationException2 = new ApplicationException(mockThrowable0, "X1f!<iH", applicationException1, messageFormatter1, messageFormatter_LoadBundleError0);
      // Undeclared exception!
      try { 
        messageFormatter1.getMessage("critcal.error.unknown", (Object) null, object5, (Object) applicationException2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ResourceBundle resourceBundle0 = null;
      Throwable throwable0 = messageFormatter0.myLastException;
      MockThrowable mockThrowable0 = new MockThrowable("resources.messages.standard");
      messageFormatter0.addBundle((ResourceBundle) null);
      LinkedList<MessageFormatter.LoadBundleError> linkedList0 = new LinkedList<MessageFormatter.LoadBundleError>();
      Object object0 = new Object();
      String string0 = "cu9\\\"RaY";
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("cu9\"RaY", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }
}
