/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 18:24:43 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("general.fieldValue.unknown");
      derivedVariable0.setQuestionNumber("general.fieldValue.unknown");
      derivedVariable0.setForm("general.fieldValue.unknown");
      derivedVariable0.setCoded(true);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("general.fieldValue.unknown");
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      valueLabel0.getDisplayName();
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      valueLabel0.clone();
      user0.setPhone("general.error.blankField");
      valueLabel0.setMissingValue(true);
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName((String) null);
      derivedVariable0.cloneAttributes(derivedVariable1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable1.getName();
      assertEquals("general.fieldValue.unknown", derivedVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.4339872044851467
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getFilePath();
      rawVariable0.setAlias((String) null);
      rawVariable0.setIsNewRecord(true);
      rawVariable0.getLabel();
      rawVariable0.getAlias();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.getSourceVariables();
      rawVariable0.getColumnStart();
      rawVariable0.setIdentifier(4);
      rawVariable0.setColumnStart("");
      rawVariable0.clone();
      derivedVariable0.getCategory();
      rawVariable0.setAvailability("Unknown");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setName("");
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getYear();
      derivedVariable0.setCoded(true);
      rawVariable0.setFilePath("");
      derivedVariable0.setLabel("&-1j+(M:pBHQ9Puvw[");
      derivedVariable0.getValueLabels();
      assertEquals("&-1j+(M:pBHQ9Puvw[", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(boolean0);
      
      User user0 = new User("", "");
      user0.setIdentifier(0);
      user0.setAddressLine2("macaw.businessLayer.User");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      rawVariable0.setCoded(false);
      rawVariable0.setIsNewRecord(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      supportingDocument0.getDisplayName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(arrayList0);
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getYear();
      rawVariable0.getFilePath();
      rawVariable0.addSupportingDocuments(arrayList0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList2);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.401197381662154
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      valueLabel0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList0.add(valueLabel0);
      derivedVariable0.cloneAttributes(derivedVariable1);
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      Function<ValueLabel, String> function0 = (Function<ValueLabel, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super ValueLabel, ?>) function0);
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable1.setCoded(true);
      derivedVariable1.setCodeBookNumber((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "-";
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.3632670703667644
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "Z(E%dyxX+T<q$";
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setIdentifier((-1860));
      derivedVariable0.setQuestionNumber("Z(E%dyxX+T<q$");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("Z(E%dyxX+T<q$", derivedVariable0.getQuestionNumber());
      
      rawVariable0.notes = "Z(E%dyxX+T<q$";
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.cloneAttributes(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      rawVariable0.columnEnd = "Z(E%dyxX+T<q$";
      rawVariable1.setCategory("YNb6S/zNck>");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.addOntologyTerms(arrayList0);
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("macaw.businessLayer.OntologyTerm");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getAlias();
      derivedVariable0.getIdentifier();
      derivedVariable0.setCategory("aw,$");
      derivedVariable0.setAvailability("kXD|2i055J#");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("macaw.businessLayer.OntologyTerm", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.4339872044851467
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      valueLabel0.setIdentifier(1105);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.columnStart = "}OA";
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.createVariableSummary();
      rawVariable0.setCodeBookNumber("general.error.blankField");
      rawVariable0.getCodeBookNumber();
      rawVariable0.clone();
      rawVariable0.getQuestionNumber();
      rawVariable0.setCleaningDescription("}OA");
      assertEquals("general.error.blankField", rawVariable0.getCodeBookNumber());
      
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setIdentifier(0);
      String string0 = rawVariable0.getCategory();
      assertEquals("Unknown", string0);
      assertNotNull(string0);
      
      boolean boolean1 = rawVariable0.isNewRecord();
      assertTrue(boolean1 == boolean0);
      
      String string1 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertNotNull(string1);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setCounty("3E$Zx7?a06P(i%-");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getIdentifier();
      rawVariable0.getSupportingDocuments();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.setCleaned(false);
      rawVariable0.setCategory("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setColumnEnd("#g%~");
      assertEquals("#g%~", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.8066624897703174
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getYear();
      User user0 = new User("", "");
      user0.setEmail(" [RI-@");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.cloneAttributes(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      derivedVariable1.addSupportingDocuments(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel0);
      user0.setLastName("");
      derivedVariable0.setLabel("`2Gp  uI");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, (RawVariable) null, (RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.422493145939175
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      ontologyTerm0.setOntologyName("user.postCode.label");
      user0.setFirstName("user.postCode.label");
      user0.setUserID("1s>ax!R84tyt<dq");
      ontologyTerm0.setOntologyName("user.postCode.label");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ontologyTerm0.setOntologyName("");
      derivedVariable0.setValueLabels(arrayList0);
      ontologyTerm0.setOntologyName("");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlias(">bh=X5");
      User user1 = new User();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      derivedVariable0.getNotes();
      derivedVariable0.setCodeBookNumber("user.email.saveChanges");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      derivedVariable1.setSupportingDocuments(arrayList1);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.getNotes();
      derivedVariable0.getLabel();
      derivedVariable0.getYear();
      assertEquals("user.email.saveChanges", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6912178196483576
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("K");
      rawVariable0.setAvailability("");
      rawVariable0.getDisplayName();
      rawVariable0.setColumnStart((String) null);
      User user0 = new User();
      user0.setAddressLine2((String) null);
      user0.setAddressLine1("K");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("K", rawVariable0.getQuestionNumber());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.396914420218569
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-29));
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("xICBu0N6=<<03)W");
      User user0 = new User();
      user0.setLastName("");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setIdentifier(0);
      derivedVariable0.setCoded(true);
      derivedVariable0.clone();
      derivedVariable0.getLabel();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      Variable.validateFields(rawVariable0);
      derivedVariable0.setYear("xICBu0N6=<<03)W");
      assertEquals("xICBu0N6=<<03)W", derivedVariable0.getYear());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = null;
      rawVariable0.setLabel((String) null);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber((String) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setCleaningStatus((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.2551105127277413
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("Unknown", rawVariable0.getCategory());
      
      rawVariable0.setCategory("=");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("2Jg\"N<0");
      ontologyTerm0.setNewRecord(false);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setCleaningStatus("=");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      rawVariable0.getValueLabels();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.551277054248658
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "1w {u+W";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("1w {u+W");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.columnStart = "1w {u+W";
      derivedVariable0.setColumnStart("1w {u+W");
      derivedVariable0.isCleaned();
      rawVariable0.setCleaningDescription("'a@ ?$+!/vk5|O=pS9");
      rawVariable0.setColumnStart("1w {u+W");
      Variable.validateFields(rawVariable0);
      rawVariable0.getNotes();
      rawVariable0.getAlias();
      rawVariable0.getCleaningStatus();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User();
      user0.setLastName("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("1w {u+W", rawVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.801119456538554
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      valueLabel0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList0.add(valueLabel0);
      derivedVariable0.cloneAttributes(derivedVariable1);
      UnaryOperator.identity();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      derivedVariable1.setOntologyTerms(arrayList1);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.getDisplayName();
      User user0 = new User("-", "-");
      User user1 = new User();
      User.detectFieldChanges(user0, user0, user1);
      ValueLabel.detectFieldChanges(user1, derivedVariable1, valueLabel1, valueLabel1);
      valueLabel0.clone();
      user0.setPhone("variable.cleaningDescription.label");
      valueLabel0.setMissingValue(false);
      ValueLabel.differencesExist(user0, derivedVariable1, valueLabel1, valueLabel1);
      derivedVariable1.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.setName("l~mH5vSg=v>U.G");
      derivedVariable2.cloneAttributes(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getName();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable2);
      assertEquals("l~mH5vSg=v>U.G", derivedVariable1.getName());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.128279560827871
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getValueLabels();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      arrayList0.add((Variable) rawVariable1);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add((SupportingDocument) null);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.setSourceVariables(arrayList0);
      RawVariable rawVariable2 = (RawVariable)rawVariable1.clone();
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertFalse(rawVariable2.isCoded());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertFalse(rawVariable2.isCleaned());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertFalse(rawVariable2.isNewRecord());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.992196960885483
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("1w {u+W");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("1w {u+W", rawVariable0.getYear());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5388250703883175
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("@W&]PR` 6+lYu");
      derivedVariable0.setCoded(true);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("#{ttpx!]yG\"q");
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      valueLabel0.getDisplayName();
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel1);
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.clone();
      user0.setPhone("#{ttpx!]yG\"q");
      valueLabel2.setMissingValue(true);
      valueLabel1.setMissingValue(true);
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel2, valueLabel2);
      derivedVariable0.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("@W&]PR` 6+lYu", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.8461062681080582
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      System.setCurrentTimeMillis(1736L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setAlias("UNABLE_TO_GET_CHANGES_FOR_VARIABLE");
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "UNABLE_TO_GET_CHANGES_FOR_VARIABLE");
      arrayList0.removeIf(predicate0);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.remove((Object) null);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("variable.questionNumber.label");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      arrayList0.spliterator();
      derivedVariable0.removeSourceVariables(arrayList0);
      System.setCurrentTimeMillis(1736L);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.clone();
      User user0 = new User();
      user0.setAffiliation("%");
      user0.setIdentifier(1164);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      derivedVariable0.clone();
      rawVariable1.clone();
      rawVariable1.getValueLabels();
      // Undeclared exception!
      try { 
        rawVariable1.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }
}
