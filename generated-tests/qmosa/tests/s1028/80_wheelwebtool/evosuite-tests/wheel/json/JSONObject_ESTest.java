/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 18:48:19 GMT 2018
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Short, Object> hashMap0 = new HashMap<Short, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getLong("LIY6@~1W|iIY1s$");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"LIY6@~1W|iIY1s$\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<Double, Integer> hashMap0 = new HashMap<Double, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optJSONArray((String) null);
      jSONObject0.toJSONArray((JSONArray) null);
      try { 
        jSONObject0.get("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "-6G@:@p8r`";
      HashMap<Double, JSONArray> hashMap0 = new HashMap<Double, JSONArray>();
      JSONObject jSONObject1 = jSONObject0.put("-6G@:@p8r`", (Map) hashMap0);
      jSONObject1.toString();
      hashMap0.values();
      jSONObject0.optDouble("d|PU0hWSA5", 0.0);
      jSONObject0.put("-6G@:@p8r`", (Map) hashMap0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      try { 
        jSONArray0.getJSONObject(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[0] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      String[] stringArray0 = new String[0];
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('8');
      JSONObject.quote((String) null);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "\"\"");
      jSONArray0.write(stringWriter2);
      JSONObject jSONObject0 = new JSONObject(jSONArray0, stringArray0);
      jSONObject0.optString("");
      try { 
        jSONObject0.getLong("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Short short0 = new Short((short)44);
      String[] stringArray0 = new String[4];
      Short.compare((short)627, (short)1137);
      stringArray0[0] = "n-t^D*vKq>u(zv";
      stringArray0[1] = "w.2=B2l1&r/Iz$aa<";
      stringArray0[2] = "";
      stringArray0[3] = "?+(@vFn-";
      JSONObject jSONObject0 = new JSONObject(short0, stringArray0);
      String string0 = "N]Sz";
      jSONObject0.remove("Y-kF+yrqCfB7pw");
      try { 
        jSONObject0.getBoolean("Dn=h~qC");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Dn=h~qC\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Short short0 = new Short((short)3201);
      JSONObject jSONObject0 = new JSONObject(short0);
      jSONObject0.optBoolean("");
      String string0 = "";
      String string1 = "";
      try { 
        jSONObject0.getBoolean("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 0 of 
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("{");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must end with '}' at character 1 of {
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      int int0 = 60;
      StringWriter stringWriter0 = new StringWriter(60);
      int int1 = (-90);
      JSONObject.valueToString(boolean0, (-90), (-90));
      String string0 = "+:.qWE%e0M,#}\"{Rkx";
      jSONObject0.optLong("+:.qWE%e0M,#}\"{Rkx");
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "java.lang.Boolean@0000000002", (-90), (-90));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      long long0 = 1534L;
      JSONObject jSONObject1 = jSONObject0.put("", 1534L);
      jSONObject1.append("=e", "=e");
      jSONObject0.optLong("");
      String string1 = "] is not a Boolean.";
      JSONObject jSONObject2 = jSONObject0.accumulate("] is not a Boolean.", "");
      String string2 = "";
      Byte byte0 = new Byte((byte) (-53));
      JSONObject jSONObject3 = jSONObject2.putOpt("", byte0);
      String string3 = ",\n";
      try { 
        jSONObject3.get(",\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",\\n\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7957098200302992
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[1];
      String string0 = "[]";
      stringArray0[0] = "[]";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject0.optLong("[]", 0L);
      jSONObject1.optInt("[]");
      Float float0 = new Float(148.9F);
      Float.sum(0.0F, 0.0F);
      Float.max(0.0F, 0);
      jSONObject1.names();
      Float.max((-1.0F), (-26.373657F));
      try { 
        jSONObject1.getDouble("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSONObject.doubleToString(1894.84190249657);
      String string0 = ")vq'<RC~50,l@;el_";
      JSONTokener jSONTokener0 = new JSONTokener(")vq'<RC~50,l@;el_");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of )vq'<RC~50,l@;el_
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("Y", (Map) hashMap0);
      JSONObject.valueToString(jSONObject1);
      jSONObject1.optLong((String) null, 1651L);
      jSONObject1.toString(9, (-3368));
      String string0 = "221Wc6N]7)JclMc";
      hashMap0.clone();
      JSONObject jSONObject2 = jSONObject0.put("221Wc6N]7)JclMc", 0);
      try { 
        jSONObject2.getJSONArray("\f");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\f\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.159369405127713
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      String string0 = "!";
      String string1 = "{]T:z/W#%z";
      jSONObject0.put("{]T:z/W#%z", (-1L));
      jSONObject0.optLong("!");
      int int0 = 330;
      Double.sum(0.0, (-1478.44204392));
      Double.min((-1L), 0L);
      int int1 = 3377;
      // Undeclared exception!
      jSONObject0.toString(330, 3377);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optDouble("");
      String[] stringArray0 = new String[1];
      String string0 = "0SL/p_Q=n";
      jSONObject0.optDouble("");
      stringArray0[0] = "0SL/p_Q=n";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject0.put("", (Map) null);
      Boolean boolean0 = Boolean.FALSE;
      JSONObject.getNames((Object) boolean0);
      try { 
        jSONObject1.getString("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4068545224417544
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@(B";
      stringArray0[1] = "*SDeI07PA8P&d:Qm{h-";
      stringArray0[2] = "JW'f`'^[bXjfTb";
      stringArray0[3] = "{";
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      Integer integer0 = new Integer(58);
      JSONObject jSONObject1 = jSONObject0.accumulate("@{^56NjI,z~h.A.+SdA", integer0);
      JSONObject jSONObject2 = jSONObject1.put("wheel.json.JSONObject$1", (double) 58);
      jSONObject0.optDouble("@{^56NjI,z~h.A.+SdA");
      jSONObject0.optLong("@(B");
      jSONObject0.optInt("]QddM>ZS9;{KGF", (-1882));
      jSONObject0.length();
      jSONObject0.optInt("Iz/ykd &80Ex7&^ZR8k");
      jSONObject1.toString();
      JSONObject jSONObject3 = jSONObject0.put("Missing value", (Object) "Null pointer");
      assertSame(jSONObject3, jSONObject2);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<Double, Integer> hashMap0 = new HashMap<Double, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject.getNames(jSONObject0);
      jSONObject0.length();
      String string0 = "\"sLq3c";
      jSONObject0.remove("\"sLq3c");
      jSONObject0.remove((String) null);
      jSONObject0.toString(4);
      jSONObject0.optJSONObject("'");
      JSONTokener jSONTokener0 = new JSONTokener("R8}MM-");
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of R8}MM-
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9330394932818358
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Float float0 = new Float(0.0F);
      JSONObject jSONObject0 = new JSONObject(float0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(13);
      linkedList0.add(integer0);
      jSONObject0.toString();
      jSONObject0.put("", (Collection) linkedList0);
      try { 
        jSONObject0.getJSONArray("n7u+9&");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"n7u+9&\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      StringWriter stringWriter0 = new StringWriter();
      jSONArray0.put(4, 0L);
      stringWriter0.append('8');
      JSONObject.quote("dou");
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "\"dou\"");
      jSONArray0.write(stringWriter1);
      String[] stringArray0 = new String[8];
      stringArray0[0] = null;
      stringArray0[1] = "qI";
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = "\"dou\"";
      stringArray0[5] = "(lZ5!9!-";
      stringArray0[6] = null;
      stringArray0[7] = "get";
      JSONObject jSONObject0 = new JSONObject(stringWriter1, stringArray0);
      try { 
        jSONArray0.getJSONObject(649);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[649] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7516666169315163
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put("", (Collection) linkedList0);
      JSONObject jSONObject1 = jSONObject0.put("Y", (Map) hashMap0);
      Boolean boolean0 = new Boolean("fwe&o%");
      JSONObject.valueToString(boolean0);
      jSONObject1.optLong((String) null, 0L);
      jSONObject1.toString((-695), 4);
      HashMap<Boolean, String> hashMap1 = new HashMap<Boolean, String>();
      hashMap1.clone();
      try { 
        jSONObject1.put((String) null, (-695));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9662238672517087
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      long long0 = 1534L;
      JSONObject jSONObject1 = jSONObject0.put("", 1534L);
      jSONObject1.append("=e", "=e");
      jSONObject0.optLong("");
      JSONObject jSONObject2 = jSONObject0.accumulate("=e", "");
      String string1 = "";
      Byte byte0 = new Byte((byte) (-53));
      JSONObject jSONObject3 = jSONObject2.putOpt("", byte0);
      String string2 = ",\n";
      JSONObject.quote((String) null);
      try { 
        jSONObject3.getString("OQ3=HHUF0*M8u");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"OQ3=HHUF0*M8u\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5936174605927704
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Float float0 = new Float(0.0F);
      JSONObject jSONObject0 = new JSONObject(float0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject jSONObject1 = jSONObject0.put("", (Collection) linkedList0);
      jSONObject1.getJSONArray("");
      jSONObject0.append("", jSONObject1);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8757918757035523
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Double double0 = new Double(0.0);
      Double.sum(0.0, (-1.0));
      Double.max((-802.0), (-802.0));
      JSONObject.testValidity(double0);
      Float float0 = new Float((-802.0));
      JSONObject.valueToString(float0, 1711, 1711);
      short short0 = (short)60;
      Short short1 = new Short((short)60);
      JSONObject jSONObject0 = new JSONObject(short1);
      Long long0 = new Long((-3202L));
      jSONObject0.append("java.lang.Float@0000000001", long0);
      int int0 = 92;
      JSONObject.valueToString("java.lang.Float@0000000001", 54, 92);
      JSONObject.valueToString(double0, (short)60, (short)60);
      try { 
        jSONObject0.getBoolean("ishashCode");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"ishashCode\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }
}
