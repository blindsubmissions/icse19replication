/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:20:56 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.ColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.Raster;
import java.awt.image.WritableRaster;
import java.awt.image.renderable.ParameterBlock;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import javax.media.jai.CollectionImage;
import javax.media.jai.OperationRegistry;
import javax.swing.JComboBox;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[0] = (-2938);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.data = vector0;
      intArray0[1] = (-1);
      intArray0[2] = (-939);
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = (-2240);
      intArray0[6] = 145;
      intArray0[7] = (-1);
      intArray0[8] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.subList(753, 753);
      visualListModel0.moveDownIndex((-2240));
      visualListModel0.rotateClockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1;
      visualListModel0.moveUpIndex(1);
      int[] intArray0 = new int[2];
      boolean boolean0 = true;
      visualListModel0.removeElements(1, 1, true);
      intArray0[0] = 1;
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = (-1646);
      intArray0[1] = 1133;
      intArray0[2] = (-1646);
      intArray0[3] = 0;
      intArray0[4] = (-1646);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.removeElements(1, (-1646), true);
      visualListModel0.clearData();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(hashSet0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      visualListModel0.subList(1260, 256, true);
      int[] intArray0 = new int[3];
      visualListModel0.getValidElements();
      intArray0[0] = 256;
      visualListModel0.appendAllElements(collection0);
      intArray0[1] = 256;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      intArray0[2] = 1260;
      visualListModel0.undeleteElements(intArray0);
      int int0 = (-627);
      visualListModel0.removeElements(6, (-627), true);
      boolean boolean0 = false;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.elementsChanged();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.elementsChanged();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getValidElements();
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.getSize();
      int int1 = 0;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements((-2876), (Collection<VisualPageListItem>) treeSet0);
      intArray0[0] = 556;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      visualListModel0.reverseElements(intArray0);
      assertEquals(5, intArray0.length);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      visualListModel0.removeListDataListener(jComboBox0);
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 573;
      visualListModel0.getListDataListeners();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[2];
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      try { 
        ICC_Profile.getInstance((InputStream) mockFileInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1383330595080277
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = 1011;
      intArray0[1] = (-4130);
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 93;
      intArray0[5] = (-1342);
      intArray0[6] = 1000;
      intArray0[7] = 0;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.subList(0, 0);
      visualListModel0.subList(1011, 1);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.elementsChanged();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-1), (-1));
      visualListModel0.getElements();
      visualListModel0.addAllElements(2872, (Collection<VisualPageListItem>) null);
      visualListModel0.clearData();
      int[] intArray0 = new int[5];
      intArray0[0] = (-1);
      visualListModel0.elementsChanged();
      intArray0[1] = (-1);
      visualListModel0.elementsChanged();
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 2872);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveDownIndex(91);
      visualListModel0.elementsChanged();
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.updateElementAt(2872, (VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndex(12);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      visualListModel0.getElementAt(2139);
      visualListModel0.moveUpIndex((-1));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      visualListModel0.reverseElements(intArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      PriorityQueue<VisualPageListItem> priorityQueue1 = new PriorityQueue<VisualPageListItem>(priorityQueue0);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) priorityQueue1);
      visualListModel0.moveUpIndex((-77));
      visualListModel0.removeElements((-77), (-5525), false);
      visualListModel0.moveDownIndex(1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4843668399738017
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      visualListModel0.reverseElements(intArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      visualListModel0.prependAllElements(priorityQueue0);
      visualListModel0.moveDownIndex(10);
      visualListModel0.elementsChanged();
      visualListModel0.removeElements(intArray0, false);
      int int0 = (-1053);
      visualListModel0.updateElementAt((-1053), (VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndex((-1053));
      visualListModel0.undeleteElements(intArray0);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      String string0 = "org.pdfsam.guiclient.commons.models.VisualListModel";
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1053));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1053
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(93, (-2035), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(93) > toIndex(-2035)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.elementsChanged();
      visualListModel0.removeElements(intArray0, false);
      int int0 = (-1053);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.updateElementAt(1480, (VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndex(1480);
      visualListModel0.undeleteElements(intArray0);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      String string0 = "org.pdfsam.guiclient.commons.models.VisualListModel";
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-673));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -673
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel1.moveUpIndex(0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) priorityQueue0);
      visualListModel0.moveUpIndex(0);
      visualListModel1.moveDownIndex((-1916));
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.getElements();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      stack0.addAll((Collection<? extends VisualPageListItem>) vector0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      PriorityQueue<VisualPageListItem> priorityQueue1 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.addAllElements(406, (Collection<VisualPageListItem>) vector0);
      visualListModel0.moveUpIndex(406);
      visualListModel0.removeElements(406, 2866, false);
      int int0 = 0;
      visualListModel0.getElements();
      visualListModel0.moveDownIndex(0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6393405872324323
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.subList(607, 4255, true);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElementAt((VisualPageListItem) null, 421);
      visualListModel1.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveDownIndex((-2035));
      visualListModel0.elementsChanged();
      visualListModel0.removeElements(intArray0, false);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel1.elementChanged((VisualPageListItem) null);
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.moveDownIndex(93);
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.undeleteElements(intArray0);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      visualListModel4.getElements();
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel4.reverseElements(intArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, visualListModel3);
      visualListModel1.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertFalse(visualListModel0.equals((Object)visualListModel3));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5229550675313184
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.clearData();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel1.moveUpIndex(3785);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.addAllElements(1548, (Collection<VisualPageListItem>) priorityQueue0);
      visualListModel0.addAllElements(3785, (Collection<VisualPageListItem>) priorityQueue0);
      assertEquals(0, priorityQueue0.size());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5066618124970015
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      visualListModel0.prependAllElements(priorityQueue0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndex(0);
      visualListModel1.elementsChanged();
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.updateElementAt((-1053), (VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) priorityQueue0);
      visualListModel1.moveUpIndex(1);
      visualListModel1.removeElements((-1053), 10, true);
      visualListModel0.moveDownIndex(11);
      visualListModel0.moveUpIndexes(intArray0);
      assertFalse(visualListModel0.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9002560512685369
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 2011, false);
      visualListModel0.moveUpIndex(1);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayList0);
      visualListModel0.subList((-2240), 3915, false);
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(745);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      int[] intArray0 = new int[8];
      intArray0[0] = (-1900);
      intArray0[1] = 12;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getSize();
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1900
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.6434177197931799
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(745);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.subList((-2401), 745, true);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      int[] intArray0 = new int[8];
      visualListModel0.reverseElements(intArray0);
      AffineTransform.getShearInstance(0.0, 1640.7352325151423);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(745);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      int[] intArray0 = new int[4];
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(745);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      visualListModel0.moveUpIndex(1);
      visualListModel0.getElements();
      assertEquals(745, visualListModel0.getSize());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int int0 = 745;
      stack0.setSize(745);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray0 = new int[8];
      visualListModel0.prependAllElements(stack0);
      AffineTransform.getShearInstance(745, (-1887.36));
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(683);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      int[] intArray0 = new int[7];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(683);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      int[] intArray0 = new int[7];
      intArray0[0] = (-1062);
      intArray0[1] = 683;
      intArray0[2] = 683;
      intArray0[3] = 683;
      intArray0[4] = 683;
      intArray0[5] = (-1502);
      intArray0[6] = 683;
      visualListModel0.moveDownIndexes(intArray0);
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1062
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int int0 = 683;
      stack0.setSize(683);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int[] intArray0 = new int[23];
      intArray0[0] = 683;
      intArray0[1] = 683;
      intArray0[2] = 683;
      intArray0[3] = 683;
      intArray0[4] = 683;
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 683
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7480673485460891
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(8);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData((Vector<VisualPageListItem>) stack0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      int[] intArray0 = new int[7];
      intArray0[0] = 8;
      intArray0[1] = 8;
      intArray0[2] = 8;
      intArray0[3] = 8;
      intArray0[4] = 8;
      visualListModel1.prependAllElements(stack0);
      intArray0[5] = 8;
      intArray0[6] = 8;
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel0.getSize();
      int[] intArray1 = new int[4];
      intArray1[0] = 8;
      intArray1[1] = 8;
      intArray1[2] = 8;
      intArray1[3] = (-19);
      try { 
        visualListModel1.moveDownIndexes(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -18
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0198149924929463
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(683);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      intArray0[0] = 683;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      AffineTransform.getShearInstance(0.0, 0.0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.moveDownIndex(1);
      Vector<String> vector0 = new Vector<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      visualListModel0.addListDataListener(jComboBox0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.undeleteElements(intArray0);
      OperationRegistry.getThreadSafeOperationRegistry();
      try { 
        visualListModel1.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 683
         //
         verifyException("java.util.Vector", e);
      }
  }
}
