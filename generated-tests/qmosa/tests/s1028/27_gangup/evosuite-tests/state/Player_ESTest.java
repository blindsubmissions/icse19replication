/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 17:29:07 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(10, "", 10);
      player0.gangStrength();
      player0.setY(10);
      player0.gangStrength();
      player0.setY(213.43724F);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((File) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 1695;
      Player player0 = new Player(1695, (String) null, (String) null, (-1));
      player0.setMoney((-1));
      player0.setY((-1));
      player0.isConnected();
      player0.getTimeOfDeath();
      player0.setZ((-1));
      MockPrintStream mockPrintStream0 = new MockPrintStream("gfR8={H6");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(0, "&sb|';M7)R2It8$X", "&sb|';M7)R2It8$X", 0);
      Player player1 = new Player(0, "&sb|';M7)R2It8$X", "&sb|';M7)R2It8$X", 0, 0);
      player1.setDead((long) 0);
      player1.setDead((long) 0, false);
      player0.setJoinOK(player1, true);
      player0.getIP();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-923), (String) null, (String) null, (-923));
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player0.getTimeOfDeath();
      player0.getZ();
      PipedInputStream pipedInputStream0 = new PipedInputStream(4);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.boss = (Party) player0;
      player0.setJoinOK(player1, true);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      dataInputStream0.skipBytes((-2317));
      // Undeclared exception!
      try { 
        dataInputStream0.readUnsignedShort();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(3, "/~2%-}B<fT[(lM", "/~2%-}B<fT[(lM", 3, 577);
      player0.setZ(1.0F);
      player0.getPictureId();
      Party party0 = player0.next;
      player0.next = null;
      player0.setY(577);
      player0.setZ((-1168.0603F));
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-3619), "", "", 363, (-3619));
      player0.setDead((long) (-3619));
      player0.type();
      player0.remove((Party) null);
      player0.pack();
      player0.getName();
      player0.getPictureId();
      player0.setDead(0L);
      player0.setDead();
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-752), "{79dfORHw;V", 1);
      player0.getY();
      player0.setConnected(false);
      player0.getSubparty();
      player0.type();
      player0.setDead();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player0.unpack(dataInputStream0);
      player0.next = null;
      player0.add((Party) null);
      player0.prev = null;
      player0.getTimeOfDeath();
      player0.setX(0.0F);
      player0.setConnected(false);
      player0.setMoney(5);
      player0.head = null;
      player0.setConnected(false);
      player0.setMoney(1392409281320L);
      player0.getName();
      player0.getX();
      player0.getMoney();
      player0.setZ(1392409281320L);
      player0.reset(false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      player0.unpack(byteArray0);
      assertEquals(1.39240931E12F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(0);
      player0.reset(true);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player0", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(4254, " ", " ", 4254);
      player0.setDead();
      Player player1 = new Player(4254, " ", 1);
      player0.setJoinOK(player1, true);
      player0.setConnected(false);
      player0.setY(4254);
      player0.setZ(1);
      player0.id = 1;
      Player player2 = new Player(1, " ", 1);
      player0.add(player2);
      player0.reset(true);
      player0.reset(true);
      player0.toString();
      player0.getY();
      player2.head = (Party) player1;
      player0.setZ(4254.0F);
      player0.isDead();
      player2.getSubparty();
      player0.getIP();
      player2.setDead((-13L));
      player1.isJoinOK(player2, false);
      player0.setDead((-13L));
      player0.getStrength();
      assertEquals((-13L), player0.getTimeOfDeath());
      
      player1.setMoney(0.0F);
      assertEquals(0.0F, player1.getMoney(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(0, ";?bms>YyfM)e,O!~c", ";?bms>YyfM)e,O!~c", 0, 0);
      player0.setX((-4755.0F));
      byte[] byteArray0 = player0.pack();
      byte[] byteArray1 = player0.pack();
      player0.unpack(byteArray1);
      player0.getStrength();
      player0.getMoney();
      player0.type();
      player0.unpack(byteArray0);
      player0.reset(false);
      player0.getZ();
      player0.setDead();
      player0.setY(0.0F);
      player0.setY(5);
      player0.unpack(byteArray1);
      player0.setMoney(475.13F);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0, "&sb|';M7)R2It8$X", "&sb|';M7)R2It8$X", 0);
      Player player1 = new Player(0, "&sb|';M7)R2It8$X", "&sb|';M7)R2It8$X", 0, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      player1.setDead((long) 0);
      player0.setJoinOK(player1, true);
      player0.getIP();
      player0.getIP();
      player0.reset(true);
      Player player2 = new Player((-1513));
      player2.getName();
      player1.getZ();
      player1.setDead((long) (short)4919);
      boolean boolean0 = player1.isDead();
      assertEquals(4919L, player1.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5400363038209806
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(1327, ",-xCbA(PVI", "K$u:!DFqIZ/TWOD", 1327, 1327);
      Player player1 = new Player(1327);
      player0.remove(player1);
      player1.gangStrength();
      player1.setConnected(false);
      player1.setJoinOK(player0, true);
      player0.isJoinOK(player1, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K$u:!DFqIZ/TWOD");
      System.setCurrentTimeMillis((-900L));
      System.setCurrentTimeMillis((short)4919);
      System.setCurrentTimeMillis((-1499L));
      player0.setDead();
      System.setCurrentTimeMillis(0L);
      player0.reset(true);
      System.setCurrentTimeMillis(1139L);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K$u:!DFqIZ/TWOD");
      System.setCurrentTimeMillis(0L);
      player1.isJoinOK(player0, false);
      player1.isJoinOK(player0, false);
      player1.isJoinOK(player0, true);
      System.setCurrentTimeMillis((-900L));
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(1327);
      player0.remove(player0);
      player0.setConnected(false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",-xCbA(PVI");
      System.setCurrentTimeMillis((-900L));
      System.setCurrentTimeMillis((short)4919);
      player0.setDead();
      System.setCurrentTimeMillis((-900L));
      player0.reset(false);
      System.setCurrentTimeMillis((-87L));
      player0.setDead();
      System.setCurrentTimeMillis((-900L));
      player0.reset(true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player1 = new Player(411, ".Q^|QM964`$R(%%6Ma", 1327);
      player1.setJoinOK(player0, true);
      System.setCurrentTimeMillis(15000L);
      player1.isJoinOK(player0, false);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }
}
