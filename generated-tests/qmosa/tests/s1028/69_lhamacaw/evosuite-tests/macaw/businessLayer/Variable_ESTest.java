/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 19:00:49 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getQuestionNumber();
      User user0 = new User();
      rawVariable0.setCleaningDescription("");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getColumnEnd();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "";
      derivedVariable0.setAvailability("={vXwnFKgB:PN%");
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertEquals("={vXwnFKgB:PN%", derivedVariable0.getAvailability());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.7841896339182655
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      derivedVariable0.setLabel("e#&");
      derivedVariable0.notes = "e#&";
      derivedVariable0.clone();
      derivedVariable0.addValueLabel((ValueLabel) null);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setNotes("G1P/R,l\"f|:WH!4P");
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel0);
      valueLabel1.setMissingValue(true);
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel0.hasSameDisplayName(valueLabel1);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.isCoded();
      derivedVariable0.getColumnEnd();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("G1P/R,l\"f|:WH!4P", derivedVariable0.getNotes());
      
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getQuestionNumber();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "l(l klg{79";
      User user0 = new User("l(l klg{79", "l(l klg{79");
      user0.setCity("l(l klg{79");
      user0.setFirstName("l(l klg{79");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      SupportingDocument supportingDocument0 = null;
      rawVariable1.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      rawVariable0.removeValueLabel((ValueLabel) null);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields((ValueLabel) null);
      rawVariable1.addValueLabel(valueLabel0);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "0bu<vLyE";
      rawVariable0.getCleaningDescription();
      rawVariable0.setLabel("");
      rawVariable0.isCleaned();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.form = "variable.notes.label";
      rawVariable0.getYear();
      derivedVariable0.addSourceVariable(rawVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName((String) null);
      supportingDocument0.setFileName("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument0.setIdentifier((-1));
      rawVariable0.removeSupportingDocument(supportingDocument0);
      User user0 = new User("", "");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setAvailability((String) null);
      derivedVariable0.setYear("");
      derivedVariable0.setLabel("");
      rawVariable0.setIsNewRecord(false);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      rawVariable0.addValueLabel((ValueLabel) null);
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("/");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.notes = "/";
      derivedVariable0.setAvailability("/");
      derivedVariable1.setCleaningStatus("d?w&,r#s.<=i=,V4 ");
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      assertEquals("/", derivedVariable0.getAlias());
      
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.setOntologyTerms(arrayList0);
      int int0 = derivedVariable1.getIdentifier();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setDescription("R");
      supportingDocument0.setFileName("");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setCodeBookNumber(";?bms>YyfM)e,O!~c");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList1);
      User user0 = new User("l?17)2nw<y)UkcD@:", "R4;Q1$C*Qe{(R;'5l");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setAvailability("variable.cleaningStatus.label");
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.setCleaned(false);
      assertEquals(";?bms>YyfM)e,O!~c", derivedVariable0.getCodeBookNumber());
      
      rawVariable0.getIdentifier();
      derivedVariable1.setAlias("R4;Q1$C*Qe{(R;'5l");
      assertEquals("R4;Q1$C*Qe{(R;'5l", derivedVariable1.getAlias());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add((SupportingDocument) null);
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.setNotes("variable.saveChanges.valueChanged");
      derivedVariable0.getColumnStart();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.retainAll(arrayList0);
      derivedVariable0.removeOntologyTerms(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setLabel("W-NEZd:WA:s~{O4gp");
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.getValueLabels();
      derivedVariable0.setNotes("");
      assertEquals("W-NEZd:WA:s~{O4gp", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.4657359027997248
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getColumnEnd();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null, locale_FilteringMode0);
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      arrayList0.retainAll(list1);
      LinkedList<ValueLabel> linkedList1 = new LinkedList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      linkedList1.add(valueLabel0);
      arrayList0.removeAll(linkedList1);
      derivedVariable0.setFilePath("macaw.system.ChangeEventType");
      derivedVariable0.setValueLabels(arrayList0);
      rawVariable0.setNotes(")8r5qAlX5b+[3T\"Q");
      derivedVariable0.getSourceVariables();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.clone();
      valueLabel1.setValue("");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      valueLabel1.clone();
      rawVariable0.addValueLabel(valueLabel1);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getColumnEnd();
      rawVariable0.setCleaningDescription((String) null);
      derivedVariable0.getCleaningStatus();
      rawVariable0.setCategory((String) null);
      rawVariable0.getOntologyTerms();
      rawVariable0.setCleaned(true);
      rawVariable0.getColumnEnd();
      rawVariable0.clone();
      assertEquals(")8r5qAlX5b+[3T\"Q", rawVariable0.getNotes());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4334941814155746
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.setAvailability("VARIABLE");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("f1>Nv|lZCqm<,");
      rawVariable0.notes = "y3ttrJeDOBsSDVu4";
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getValueLabels();
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.setColumnEnd("");
      rawVariable0.getAvailability();
      User user0 = new User("", "");
      user0.setAddressLine1("f1>Nv|lZCqm<,");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("y3ttrJeDOBsSDVu4", rawVariable1.getNotes());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.setColumnEnd("))O;ulFW");
      rawVariable0.getCleaningStatus();
      rawVariable0.setCleaningStatus("Unknown");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.setCodeBookNumber("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setAlias("");
      rawVariable0.getForm();
      derivedVariable0.getAvailability();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getDisplayItemIdentifier();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.stream();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.4339872044851467
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.columnStart = "";
      rawVariable0.codeBookNumber = "C,1t";
      rawVariable0.setColumnEnd("C,1t");
      rawVariable0.setForm("");
      rawVariable0.setFilePath("C,1t");
      rawVariable0.getIdentifier();
      derivedVariable0.getAlias();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.getDisplayItemIdentifier();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.isCleaned();
      rawVariable0.getAlias();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getLabel();
      rawVariable0.getCodeBookNumber();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      valueLabel0.clone();
      rawVariable0.setValueLabels(arrayList1);
      derivedVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setAlias("");
      derivedVariable0.setColumnStart("C,1t");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.setAlias("C,1t");
      assertEquals("C,1t", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.3825226034158513
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("A_5,T~;EB#u9er_^>");
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.setFilePath("A_5,T~;EB#u9er_^>");
      rawVariable0.setCodeBookNumber("XsOk23lm");
      rawVariable0.setColumnStart("Sw!NO4)(wt$&yX");
      rawVariable0.setName("Sw!NO4)(wt$&yX");
      rawVariable0.setAlias("Sw!NO4)(wt$&yX");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("Sw!NO4)(wt$&yX");
      ontologyTerm0.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaningDescription("Sw!NO4)(wt$&yX");
      rawVariable0.setLabel("GpV?ET?Vtc5Bu}?");
      rawVariable0.getFilePath();
      User user0 = new User("variable.alias.label", "\"p+2l2b2");
      user0.setAddressLine1("A_5,T~;EB#u9er_^>");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable2);
      assertEquals("Sw!NO4)(wt$&yX", rawVariable0.getColumnStart());
      
      rawVariable2.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.2491274088747426
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("NzSf8iX{GQFvWLQj");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.cloneAttributes(rawVariable0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      String string0 = "";
      rawVariable1.setAvailability("");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-2045222519));
      valueLabel0.getDisplayName();
      rawVariable1.addValueLabel(valueLabel0);
      rawVariable0.hasSameDisplayName(rawVariable1);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.726795348291239
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("A_5,T~;EB#u9er_^>");
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.setFilePath("A_5,T~;EB#u9er_^>");
      rawVariable0.setCodeBookNumber("XsOk23lm");
      rawVariable0.setColumnStart("Sw!NO4)(wt$&yX");
      rawVariable0.setName("Sw!NO4)(wt$&yX");
      rawVariable0.setAlias("Sw!NO4)(wt$&yX");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("Sw!NO4)(wt$&yX");
      ontologyTerm0.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaningDescription("Sw!NO4)(wt$&yX");
      User user0 = new User("zt^Q =|Zp%(90-J", "W~|o\"");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getLabel();
      derivedVariable0.setAlias("macaw.businessLayer.Variable");
      rawVariable1.getCodeBookNumber();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      valueLabel0.clone();
      User user1 = new User("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE", "VARIABLE");
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable1);
      assertEquals("Sw!NO4)(wt$&yX", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.044804882954829
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("qT^F/>r>'(*MW", "supportingDocument.fileName.label");
      assertEquals("supportingDocument.fileName.label", user0.getPassword());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.229926694309035
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.cloneAttributes(rawVariable1);
      Variable.validateFields(rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.columnStart = "x^";
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable1.cloneAttributes(rawVariable0);
      assertEquals("", rawVariable0.getColumnStart());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }
}
