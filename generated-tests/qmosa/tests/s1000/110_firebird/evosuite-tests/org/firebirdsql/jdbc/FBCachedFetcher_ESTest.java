/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 09:45:41 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Set;
import javax.security.auth.Subject;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.AbstractIscStmtHandle;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.isc_db_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][9];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.previous();
      byte[][] byteArray0 = new byte[7][4];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)73;
      byteArray1[2] = (byte)44;
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)73;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte)0;
      byteArray2[5] = (byte)0;
      byteArray2[6] = (byte)0;
      byteArray2[7] = (byte)0;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[2];
      byteArray3[0] = (byte)0;
      byteArray3[1] = (byte)0;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[3];
      byteArray4[0] = (byte)0;
      byteArray4[1] = (byte)0;
      byteArray4[2] = (byte)73;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[1];
      byteArray5[0] = (byte)73;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[6];
      byteArray6[0] = (byte)0;
      byteArray6[1] = (byte)0;
      byteArray6[2] = (byte)0;
      byteArray6[3] = (byte)73;
      byteArray6[4] = (byte)0;
      byteArray6[5] = (byte)0;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[9];
      byteArray7[0] = (byte)0;
      byteArray7[1] = (byte)44;
      byteArray7[2] = (byte)44;
      byteArray7[3] = (byte)0;
      byteArray7[4] = (byte)73;
      byteArray7[5] = (byte) (-43);
      byteArray7[6] = (byte)0;
      byteArray7[7] = (byte)0;
      byteArray7[8] = (byte)0;
      byteArray0[6] = byteArray7;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8065071652616693
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][9];
      linkedList0.add(byteArray0);
      byte[][] byteArray1 = new byte[0][9];
      linkedList0.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1537419427010902
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.previous();
      boolean boolean0 = fBCachedFetcher0.absolute((-1116));
      boolean boolean1 = fBCachedFetcher0.previous();
      assertFalse(boolean1);
      
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
      
      fBCachedFetcher0.close();
      assertTrue(fBCachedFetcher0.isEmpty());
      
      boolean boolean2 = fBCachedFetcher0.next();
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.previous();
      byte[][] byteArray0 = new byte[7][4];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)73;
      byteArray1[2] = (byte)44;
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte)0;
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher1.beforeFirst();
      boolean boolean1 = fBCachedFetcher0.isAfterLast();
      boolean boolean2 = fBCachedFetcher1.isLast();
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      
      boolean boolean3 = fBCachedFetcher0.absolute((byte)73);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][9];
      linkedList0.add(byteArray0);
      byte[][] byteArray1 = new byte[0][9];
      linkedList0.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      
      fBCachedFetcher0.updateRow(byteArray0);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][3];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-92);
      byteArray1[1] = (byte) (-126);
      byteArray1[2] = (byte) (-62);
      byteArray1[3] = (byte)4;
      byteArray1[4] = (byte)50;
      byteArray1[5] = (byte) (-44);
      byteArray1[6] = (byte)72;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte) (-62);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte)72;
      byteArray3[1] = (byte)72;
      byteArray3[2] = (byte) (-44);
      byteArray3[3] = (byte) (-126);
      byteArray3[4] = (byte) (-126);
      byteArray3[5] = (byte)4;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[0];
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[9];
      byteArray5[0] = (byte)50;
      byteArray5[1] = (byte)4;
      byteArray5[2] = (byte) (-62);
      byteArray5[3] = (byte) (-62);
      byteArray5[4] = (byte)72;
      byteArray5[5] = (byte) (-126);
      byteArray5[6] = (byte) (-126);
      byteArray5[7] = (byte) (-44);
      byteArray5[8] = (byte)72;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[1];
      byteArray6[0] = (byte) (-62);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[0];
      byteArray0[6] = byteArray7;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedHashSet<byte[][]> linkedHashSet0 = new LinkedHashSet<byte[][]>();
      linkedList0.addAll((Collection<? extends byte[][]>) linkedHashSet0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.afterLast();
      try { 
        fBCachedFetcher0.absolute((-1));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8407487285692812
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.offerLast((byte[][]) null);
      fBCachedFetcher0.isLast();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0253262207700673
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[7][4];
      byte[] byteArray1 = new byte[15];
      byteArray1[0] = (byte)0;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.previous();
      // Undeclared exception!
      try { 
        fBCachedFetcher1.absolute(827);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0449311748495913
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.absolute((-1116));
      byte[][] byteArray0 = new byte[2][1];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-36);
      byteArray1[1] = (byte)73;
      byteArray1[2] = (byte) (-88);
      byteArray1[3] = (byte) (-23);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-36);
      byteArray2[1] = (byte)73;
      byteArray2[2] = (byte) (-88);
      byteArray2[3] = (byte) (-88);
      byteArray2[4] = (byte) (-88);
      byteArray2[5] = (byte) (-23);
      byteArray2[6] = (byte)73;
      byteArray0[1] = byteArray2;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][9];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.3114234446919735
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBuffer0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      Subject subject0 = new Subject();
      Class<byte[][]> class0 = byte[][].class;
      Set<byte[][]> set0 = subject0.getPublicCredentials(class0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(set0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.absolute(16384);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      boolean boolean0 = fBCachedFetcher0.last();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.setFetchSize(1);
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.next();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.setFetchSize(0);
      assertEquals(0, fBCachedFetcher0.getFetchSize());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0611128325795947
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.parallelStream();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.previous();
      boolean boolean0 = fBCachedFetcher0.absolute(591);
      assertFalse(boolean0);
      
      boolean boolean1 = fBCachedFetcher0.previous();
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
      
      boolean boolean2 = fBCachedFetcher0.next();
      assertTrue(boolean2 == boolean1);
      
      boolean boolean3 = fBCachedFetcher0.isLast();
      boolean boolean4 = fBCachedFetcher0.isFirst();
      assertFalse(boolean4 == boolean3);
      assertFalse(boolean4);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBuffer0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      Subject subject0 = new Subject();
      Class<byte[][]> class0 = byte[][].class;
      Set<byte[][]> set0 = subject0.getPublicCredentials(class0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(set0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.absolute(16384);
      fBCachedFetcher0.relative(16384);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.last();
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.12343225891592
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp1 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp1, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      Subject subject0 = new Subject();
      Class<byte[][]> class0 = byte[][].class;
      Set<byte[][]> set0 = subject0.getPublicCredentials(class0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(set0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.absolute(16384);
      fBCachedFetcher0.relative(16384);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.last();
      fBCachedFetcher0.deleteRow();
      assertFalse(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp1 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp1, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      Subject subject0 = new Subject();
      Class<byte[][]> class0 = byte[][].class;
      Set<byte[][]> set0 = subject0.getPublicCredentials(class0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(set0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.absolute(16384);
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.3135019426172296
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp1 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp1, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      Subject subject0 = new Subject();
      Class<byte[][]> class0 = byte[][].class;
      Set<byte[][]> set0 = subject0.getPublicCredentials(class0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(set0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.absolute(16384);
      fBCachedFetcher0.relative(16384);
      boolean boolean0 = fBCachedFetcher0.previous();
      isc_stmt_handle_impl.printRow((byte[][]) null);
      byte[][] byteArray0 = new byte[3][4];
      byteArray0[0] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[1] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[2] = gDSHelper0.BLOB_LENGTH_REQUEST;
      linkedList0.offerFirst(byteArray0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.updateRow(byteArray0);
      fBCachedFetcher0.deleteRow();
      assertTrue(fBCachedFetcher0.isLast());
      
      fBCachedFetcher0.insertRow((byte[][]) null);
      boolean boolean1 = fBCachedFetcher0.isLast();
      assertFalse(boolean1 == boolean0);
  }
}
