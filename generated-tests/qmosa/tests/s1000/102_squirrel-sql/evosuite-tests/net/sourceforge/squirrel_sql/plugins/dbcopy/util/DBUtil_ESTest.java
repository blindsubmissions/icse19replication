/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 07:59:50 GMT 2018
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Consumer;
import javax.swing.Icon;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaProperties;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.fw.dialects.DialectFactory;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBUtil.setLastStatement("sqlNbrOfRowsToShow");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("k?,i'O|qn]w%,zrA", " ( ", "", "#^c]$$e", (-2587), "#^c]$$e", (-2587), 0, (-2587), (-1818), "dQV6fr^y&1'", "{vMso", 365, (-2587), "dQV6fr^y&1'");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-2587), int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      DBUtil.convertTableToObjectList(stack0);
      DBUtil dBUtil0 = new DBUtil();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[8];
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestDatabaseObject();
      iDatabaseObjectInfoArray0[0] = null;
      String string0 = "";
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "", "");
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) null;
      String string1 = null;
      String string2 = "6.I5DD";
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, (String) null, "6.I5DD");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBUtil.getLastStatementValues();
      // Undeclared exception!
      try { 
        DBUtil.getColumnList((TableColumnInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBUtil.setPreferences((DBCopyPreferenceBean) null);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBUtil.getLastStatement();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, (String) null, (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 92);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "WITH CHECK OPTION", "WITH CHECK OPTION", 0, "", 0, 0, 0, 0, "net.sourceforge.squirrel_sql.fw.dialects.DaffodilDialectExt$DaffodilDialectHelper", "", 0, 0, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBUtil.setLastStatementValues("");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      DBUtil.typesAreEquivalent(23502, (-692));
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("N6|[&q@Q", " is not a valid index into the main tabbed pane.", "", (String) null, 0, "", 885, (-1576), 2006, 2126, "", "N6|[&q@Q", 2001, 1624, "");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setPasteToTableName("H;\"\bF*\u0003yp^|G0`lP");
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "", "H;\"\bF*\u0003yp^|G0`lP", "H;\"\bF*\u0003yp^|G0`lP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      dBCopyPlugin0.setCopyMenuEnabled(false);
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(vector0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      dBCopyPlugin0.setSourceDatabaseObjects(list1);
      int int0 = 92;
      DBUtil.typesAreEquivalent(92, 92);
      ISQLConnection iSQLConnection0 = null;
      dBCopyPlugin0.getDestSession();
      String string0 = "M>dd";
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "M>dd", "cascade");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[5];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      DBUtil.convertTableToObjectList(list0);
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.fixCase((ISession) null, (String) null);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      String string0 = null;
      int int0 = 2004;
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall((String) null, 2004, 2004, 2004);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "", "|,cb8&?x@iga", (String) null, 110);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("%hm", "%hm", "", "0zYS3KXf&-R", 1111, "p}glXW|@", 2000000000, 2000000000, 212, 212, "DatabaseObjectType.PROC_TYPE_DBO", "%hm", (-1935), 19, "zh");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "DatabaseObjectType.PROC_TYPE_DBO", "DatabaseObjectType.PROC_TYPE_DBO", "`a JKH1h|'L^(_", (-1088), "!H$", 335, Integer.MIN_VALUE, (-1088), (-1250), "emdz/<+jO1s9", "p}glXW|@", 0, 663, "zh");
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "fAo?<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBUtil.typesAreEquivalent(2979, (-2587));
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      String string0 = "Null 'range' argument.";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(".Dely,>bM", "FC}gIcN%", "FC}gIcN%", "FC}gIcN%", (-2587), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2446, 839, (-2587), (-2587), "FC}gIcN%", "Null 'range' argument.", (-1440), 839, "Null 'range' argument.");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "Null 'range' argument.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("&g-&!6Y\"y", "x}@<ZU~", "&g-&!6Y\"y", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 0, "fd:L5;_u%M:#a~ZG", 0, 1, Integer.MIN_VALUE, 3258, "&g-&!6Y\"y", "B),", (-276), 1, "WITH CHECK OPTION");
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      DBUtil.convertObjectToTableList(stack0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("@jh3]?`[XpRAEM", "Null 'range' argument.", "@jh3]?`[XpRAEM", "Null 'range' argument.", (-4669), "2", (-4669), (-4669), 3769, (-399), "@jh3]?`[XpRAEM", "[m,", (-4669), (-399), "key");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)119;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-5);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBUtil dBUtil0 = new DBUtil();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Null 'range' argument.", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ":", 2, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-1104), 0, 2, (-2244), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-3), (-1104), "+@=il(0d_d+");
      DBUtil.typesAreEquivalent(2, (-1104));
      TableColumnInfo tableColumnInfo1 = null;
      try {
        tableColumnInfo1 = new TableColumnInfo("@/{&]k>p8lQW&gD", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "@/{&]k>p8lQW&gD", "Null 'range' argument.", (byte)119, "pVdE7a", (byte)85, (-4975), (-1104), 20000, "@/{&]k>p8lQW&gD", "qMY", 2, (byte)85, " schema = ", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("kqEa^5.[cH9}G@C", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "kqEa^5.[cH9}G@C", "", 341, "TimePeriodAnchor.END", 341, (-1169), (-4), (-323), "TimePeriodAnchor.END", "", (-4), (-323), "kqEa^5.[cH9}G@C");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", string0);
      
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 2979);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("%", "DBUtil.info.bindblobmem", " for update nowait", "@/{&]k>p8lQW&gD", (-2), " for update nowait", (-2004318069), 5, 663, (-2004318069), "@/{&]k>p8lQW&gD", "DBUtil.info.bindblobmem", (-2004318069), Integer.MIN_VALUE, "DBUtil.info.bindblobmem");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "DBUtil.info.executeupdate";
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FOREIGN_KEY;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ITableInfo iTableInfo0 = null;
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.setPasteMenuEnabled(false);
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ITableInfo) null, (-2852));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[2];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("7~OE[[", "7~OE[[", "\t", "\t", 759, "|x4Sa", (-54), 759, (-2564), (-288), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-691), 3118, "|5Jx~5");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("\t", "|x4Sa", "Y'o(.4C (i4", "\t", (-691), "eK|F/9QF", 4054, 1676, (-54), 48, "|5Jx~5", "7~OE[[", (-691), (-691), "\t");
      tableColumnInfoArray0[1] = tableColumnInfo1;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("\t, \t", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Null 'range' argument.", "", (String) null, "Ezn!p?UpnBfAVy", 2004, "Null 'range' argument.", (-1544), (-521), (-521), 0, "getCatSep: Unexpected Exception - ", " to 128.", (-2088), 2000, "Null 'range' argument.");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "N6|[&q@Q", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBUtil.typesAreEquivalent(5, 2001);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      stack0.add((IDatabaseObjectInfo) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stack0.forEach(consumer0);
      DBUtil.convertObjectToTableList(stack0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      assertEquals("1.15", dBCopyPlugin0.getVersion());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "", "<X8An<dD_oboKD7nRa", "BJ0_=4H", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      DialectFactory.isPromptForDialect = false;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "(Lodx=i", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " ) values ( ");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      DatabaseObjectType.createNewDatabaseObjectType(" ) values ( ");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "}", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      IDatabaseObjectInfo iDatabaseObjectInfo0 = DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo0);
      assertEquals("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", iDatabaseObjectInfo0.getCatalogName());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.typesAreEquivalent(16, 16);
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "M", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Application.splash.loadingplugins", "IH[V0V|m[KnmCl|", "a<<<#'V+p_,alqq", "user-settings-dir", (-7), "nkz", 0, 366, (-7), (-2), "1h", "klVrF", 0, 0, "kqEa^5.[cH9}G@C");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("a<<<#'V+p_,alqq", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ISQLConnection iSQLConnection0 = null;
      ITableInfo iTableInfo0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("@0]6Y,", "_V&TCaX3LO;b4T>#", "@0]6Y,", "<X8An<dD_oboKD7nRa", (-3), "mddc.BE%-X!T5Ja", 4, (-3), 1722, (-3), "mddc.BE%-X!T5Ja", "|Zj6$7mR!1q>Ls=OF0", (-1), 5, "_V&TCaX3LO;b4T>#");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.796311640173813
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.typesAreEquivalent((-7), 7);
      dBCopyPlugin0.getApplication();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      System.setCurrentTimeMillis(1777L);
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 1159);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("|Zj6$7mR!1q>Ls=OF0", "Max function is null for dialect=", ":F'Y0YMS9", "Max function is null for dialect=", (-4), "Max function is null for dialect=", (-4), (-624), (-624), (-4), "9glm[", ":F'Y0YMS9", (-624), (-4), (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      System.setCurrentTimeMillis((-624));
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = 4192;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 4192, 4192, 4192, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ISQLConnection iSQLConnection0 = null;
      String string0 = "Dw'wavf";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Dw'wavf");
      ITableInfo iTableInfo0 = null;
      int int0 = (-684);
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (-684));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPluginUserSettingsFolder();
      dBCopyPlugin1.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "categories.default-prefix");
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
      dBCopyPlugin0.getSourceSession();
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, (TableColumnInfo) null, "parentTableName", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(16, (-7));
      boolean boolean1 = DBUtil.typesAreEquivalent(16, 3995);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("executeQuery: TmesTen allows a maximum fetch size of 128.  Altering peferred fetch size from", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "Year outside valid range.", "executeQuery: TmesTen allows a maximum fetch size of 128.  Altering peferred fetch size from", 41, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 41, (-1088), 41, (-1184), "executeQuery: TmesTen allows a maximum fetch size of 128.  Altering peferred fetch size from", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 193, 11448517, "f0");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.CATALOG;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin0.setPasteToTableName("f0");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(41, int0);
      
      dBCopyPlugin0.getApplication();
      int int1 = DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, " schema = ");
      assertEquals((-1), int1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = 2001;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2001, (-470), 2001, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = (-490);
      int int1 = 2000;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2000, (-490), 2000, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
