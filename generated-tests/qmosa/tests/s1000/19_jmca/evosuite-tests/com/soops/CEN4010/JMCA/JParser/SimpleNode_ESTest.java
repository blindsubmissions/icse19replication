/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 09:45:26 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3694);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      StringReader stringReader0 = new StringReader("{");
      int int0 = (-982);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-982), 3694);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-669));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -669. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(255);
      simpleNode0.jjtGetNumChildren();
      String string0 = "\\LU";
      simpleNode0.setIdentifier("LU");
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("LU", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 255
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3065);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
      
      simpleNode0.setIdentifier("T");
      simpleNode0.jjtClose();
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      simpleNode0.toString();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode1.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 44;
      SimpleNode simpleNode0 = new SimpleNode(44);
      JavaParser javaParser0 = new JavaParser("");
      try { 
        javaParser0.SwitchLabel();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      int int1 = 480;
      simpleNode1.jjtAddChild(simpleNode0, 480);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.toString((String) null);
      String string0 = "";
      int int2 = 0;
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.setIdentifier("nullCompilationUnit");
      int int3 = 0;
      // Undeclared exception!
      try { 
        stringWriter0.write((char[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<IDENTIFIER>");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      StringReader stringReader1 = new StringReader("");
      JavaParser javaParser1 = new JavaParser(stringReader0);
      JJTJavaParserState jJTJavaParserState0 = javaParser1.jjtree;
      // Undeclared exception!
      try { 
        jJTJavaParserState0.peekNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2829);
      JavaParser javaParser0 = new JavaParser("\"64fShzDm^=3*");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-1910504865));
      simpleNode0.jjtAddChild(simpleNode1, 2829);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(2830, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.7892773734611849
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" ");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 10);
      simpleNode0.setIdentifier(" ");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('V');
      simpleNode0.dump(" ", stringWriter1);
      StringReader stringReader1 = new StringReader("P;|ARWM-j,O\"Z_c");
      JavaParser javaParser1 = new JavaParser(stringReader1);
      simpleNode0.dump("f~R82%/[T;C", stringWriter1);
      assertEquals("V<EnumConstant>\n  <identifier> </identifier>\n</EnumConstant>\n<EnumConstant>\n  <identifier> </identifier>\n</EnumConstant>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("EnumConstant :  ", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4978661367769954
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>(0);
      simpleNode0.identifiers = arrayList0;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.dump("", (Writer) null);
      SimpleNode simpleNode1 = new SimpleNode(0);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)10;
      byteArray1[1] = (byte)10;
      byteArray1[2] = (byte) (-42);
      simpleNode1.jjtOpen();
      simpleNode1.jjtGetParent();
      simpleNode1.jjtAddChild((Node) null, 685);
      simpleNode1.toString();
      simpleNode1.jjtAddChild(simpleNode0, (byte)10);
      simpleNode0.jjtAddChild(simpleNode1, 256);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1105601886));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1105601886
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6852557260599839
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<IDENTIFIER>");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser(stringReader0);
      stringReader0.markSupported();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 67);
      simpleNode0.setIdentifier("*lt");
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 67);
      simpleNode0.jjtAddChild(simpleNode1, 67);
      simpleNode0.dump("hv~7yhUBCU|3hN", stringWriter0);
      StringReader stringReader1 = new StringReader("CompilationUnit");
      JavaParser javaParser1 = new JavaParser(stringReader1);
      JJTJavaParserState jJTJavaParserState0 = javaParser1.jjtree;
      StringReader stringReader2 = new StringReader("hv~7yhUBCU|3hN");
      JavaParser javaParser2 = new JavaParser(stringReader1);
      simpleNode0.jjtAddChild(simpleNode1, 2735);
      assertEquals(2736, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.073542846408523
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<IDENTIFIER>");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JavaParser javaParser1 = new JavaParser(stringReader0);
      JavaParser javaParser2 = new JavaParser(javaParser1.token_source);
      SimpleNode simpleNode0 = new SimpleNode(javaParser2, 67);
      simpleNode0.setIdentifier(";");
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(";", stringWriter0);
      StringReader stringReader1 = new StringReader("<IDENTIFIER>");
      JavaParser javaParser3 = new JavaParser(stringReader1);
      assertFalse(javaParser3.equals((Object)javaParser1));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.7356219397587946
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" ");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier(" ");
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(" ", stringWriter0);
      JavaParser javaParser1 = new JavaParser(stringReader0);
      JJTJavaParserState jJTJavaParserState0 = javaParser1.jjtree;
      // Undeclared exception!
      try { 
        jJTJavaParserState0.peekNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9404479886553264
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = " ";
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.setIdentifier(" ");
      StringWriter stringWriter0 = new StringWriter(30);
      simpleNode0.dump(" ", stringWriter0);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump(" ", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(30);
      simpleNode0.toString();
      simpleNode0.dump("d*:,ijk[IV_!t:&zsu!", stringWriter0);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) " ", (-1086873190), 2103);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8369882167858358
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("PrimitiveType");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('E');
      simpleNode0.dump("PrimitiveType", stringWriter1);
      StringReader stringReader0 = new StringReader("PrimitiveType");
      stringReader0.read();
      JavaParser javaParser0 = new JavaParser(stringReader0);
      stringWriter1.flush();
      StringWriter stringWriter2 = new StringWriter(1);
      simpleNode0.dump("PrimitiveType", stringWriter2);
      simpleNode0.toString();
      simpleNode0.dump((String) null, stringWriter0);
      StringWriter stringWriter3 = new StringWriter(1);
      simpleNode0.dump("<=", stringWriter3);
      simpleNode0.dump("VCA^)]", stringWriter2);
      simpleNode0.dump("VariableDeclaratorId : PrimitiveType", stringWriter1);
      assertEquals("E<VariableDeclaratorId>\n  <identifier>PrimitiveType</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>PrimitiveType</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>PrimitiveType</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
      
      simpleNode0.dump("PrimitiveType", stringWriter3);
      assertEquals("<VariableDeclaratorId>\n  <identifier>PrimitiveType</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>PrimitiveType</identifier>\n</VariableDeclaratorId>\n", stringWriter3.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8222900060250078
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<");
      StringReader stringReader1 = new StringReader("[|4R)] ");
      JavaParser javaParser0 = new JavaParser(stringReader1);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 9);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(")", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-177));
      simpleNode1.dump(" ", stringWriter0);
      JavaParser javaParser1 = new JavaParser(stringReader0);
      SimpleNode simpleNode2 = new SimpleNode(9);
      simpleNode1.dump("@dg{$ARA))/O?", stringWriter0);
      simpleNode0.toString();
      simpleNode0.dump("(l{m%3|md", stringWriter0);
      JavaParser javaParser2 = new JavaParser("<");
      SimpleNode simpleNode3 = new SimpleNode(javaParser2, 7);
      simpleNode3.dump("%k6&/G6", stringWriter0);
      simpleNode3.jjtAddChild(simpleNode1, 10);
      simpleNode2.dump(")", stringWriter0);
      simpleNode2.dump("@dg{$ARA))/O?", stringWriter0);
      simpleNode3.dump("<SINGLE_LINE_COMMENT>", stringWriter0);
      assertEquals("<EnumBody>\n  <identifier>*lshft</identifier>\n</EnumBody>\n<EnumBody>\n  <identifier>*lshft</identifier>\n</EnumBody>\n<ImplementsList></ImplementsList>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6885673693022826
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<");
      StringReader stringReader1 = new StringReader("[443)] ");
      JavaParser javaParser0 = new JavaParser(stringReader1);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 9);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(")", stringWriter0);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.write(9);
      stringWriter1.write(">>");
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.dump((String) null, stringWriter1);
      simpleNode0.dump("<", stringWriter0);
      simpleNode0.dump(" ", stringWriter0);
      assertEquals("<EnumBody>\n  <identifier>*lshft</identifier>\n</EnumBody>\n\t<EnumBody>\n  <identifier>*lshft</identifier>\n  <identifier>*rshft</identifier>\n</EnumBody>\n<EnumBody>\n  <identifier>*lshft</identifier>\n  <identifier>*rshft</identifier>\n</EnumBody>\n<EnumBody>\n  <identifier>*lshft</identifier>\n  <identifier>*rshft</identifier>\n</EnumBody>\n", stringWriter0.toString());
  }
}
