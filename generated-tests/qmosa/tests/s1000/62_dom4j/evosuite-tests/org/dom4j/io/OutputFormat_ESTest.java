/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 09:44:50 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration");
      String[] stringArray0 = null;
      outputFormat0.setNewLineAfterDeclaration(true);
      int int0 = 1213;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 1213);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "";
      boolean boolean0 = false;
      OutputFormat outputFormat0 = new OutputFormat("", false);
      outputFormat0.setTrimText(false);
      boolean boolean1 = true;
      outputFormat0.setExpandEmptyElements(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('P');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (P)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setEncoding("");
      outputFormat0.getIndent();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-302));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -302
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isXHTML();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setXHTML(false);
      outputFormat0.setIndentSize((-222));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "l3<X7";
      stringArray0[1] = "";
      boolean boolean0 = true;
      outputFormat0.setIndentSize((-222));
      outputFormat0.setOmitEncoding(true);
      stringArray0[2] = "xi%=:_%&st:2J'~e";
      stringArray0[3] = "4l";
      stringArray0[4] = "Em?amarRZg5z";
      outputFormat0.setEncoding("s}<6KkC'eAc");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-222));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -222
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      outputFormat0.setNewlines(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('x');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (x)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = null;
      boolean boolean0 = false;
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, (String) null);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent((String) null);
      outputFormat0.setTrimText(false);
      char char0 = 'l';
      boolean boolean1 = true;
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "}";
      stringArray0[4] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-572));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -572
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(false);
      String string0 = "";
      outputFormat0.setLineSeparator("");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      String string1 = "(evSh8Cs;GF";
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('h');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (h)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("aWHD#^c]$$e&");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterNTags((-1401));
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.isOmitEncoding();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('f');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (f)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setTrimText(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat1.setPadText(true);
      outputFormat0.setIndent(true);
      outputFormat0.setXHTML(true);
      outputFormat0.getIndent();
      outputFormat1.isNewLineAfterDeclaration();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setXHTML(true);
      outputFormat0.setIndentSize((-1466));
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      outputFormat3.setTrimText(false);
      outputFormat0.setIndentSize((-1466));
      outputFormat0.getLineSeparator();
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      boolean boolean0 = true;
      outputFormat0.setPadText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setPadText(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent("!SZ");
      outputFormat0.getEncoding();
      outputFormat0.setNewlines(true);
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setEncoding("!SZ");
      outputFormat0.setEncoding((String) null);
      outputFormat0.isXHTML();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setTrimText(true);
      outputFormat1.setNewLineAfterNTags(0);
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('S');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (S)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setLineSeparator("Mm6E");
      outputFormat0.getIndent();
      assertEquals("Mm6E", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("j\b'1277q~", false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndent("(hY'6AwP mW<'LhvM:4");
      outputFormat0.setNewlines(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setXHTML(false);
      outputFormat0.getEncoding();
      outputFormat0.setEncoding("UTF-8");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setIndentSize((-1));
      outputFormat0.isSuppressDeclaration();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.isXHTML();
      outputFormat0.isOmitEncoding();
      outputFormat0.setTrimText(false);
      outputFormat0.isXHTML();
      outputFormat0.setXHTML(false);
      assertEquals("", outputFormat0.getIndent());
      
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.599301927099795
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "de";
      stringArray0[2] = "j~j9/L9ZP";
      stringArray0[3] = "";
      stringArray0[4] = "v*Nq|:W";
      outputFormat0.parseOptions(stringArray0, 251);
      outputFormat0.setIndent(false);
      outputFormat0.isSuppressDeclaration();
      String[] stringArray1 = new String[5];
      stringArray1[0] = "de";
      stringArray1[1] = "de";
      stringArray1[2] = "";
      stringArray1[3] = "de";
      stringArray1[4] = "";
      outputFormat0.setPadText(false);
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.isXHTML();
      outputFormat0.getEncoding();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndent("j~j9/L9ZP");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setEncoding("de");
      outputFormat1.getEncoding();
      outputFormat0.getEncoding();
      assertEquals("j~j9/L9ZP", outputFormat0.getIndent());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("#v{%<\"UmszwY}", false, "-encoding");
      outputFormat0.setPadText(true);
      outputFormat0.setNewlines(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setXHTML(false);
      outputFormat0.isTrimText();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "#v{%<\"UmszwY}";
      stringArray0[1] = "xG_lA0)fEeA";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "-encoding";
      stringArray0[4] = "";
      stringArray0[5] = "#v{%<\"UmszwY}";
      stringArray0[6] = "#v{%<\"UmszwY}";
      stringArray0[7] = "\n";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setNewlines(false);
      outputFormat0.isPadText();
      outputFormat0.isOmitEncoding();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewlines(false);
      boolean boolean0 = outputFormat0.isXHTML();
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isPadText());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setPadText(true);
      outputFormat0.setXHTML(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setOmitEncoding(false);
      outputFormat0.setExpandEmptyElements(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setEncoding("");
      outputFormat0.setIndentSize(0);
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setXHTML(true);
      outputFormat0.isNewlines();
      outputFormat1.getNewLineAfterNTags();
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      outputFormat3.isOmitEncoding();
      outputFormat4.isTrimText();
      outputFormat0.setNewLineAfterNTags(0);
      assertTrue(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setExpandEmptyElements(true);
      outputFormat0.setXHTML(true);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setTrimText(false);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.getIndent();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(false);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(false);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8571028374420018
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimText", true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setNewlines(true);
      outputFormat0.setLineSeparator("|B7vq`t_N>\"");
      outputFormat0.isTrimText();
      outputFormat0.isTrimText();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("|LLM/G]{;");
      outputFormat1.setXHTML(true);
      outputFormat1.setIndentSize(0);
      outputFormat1.setAttributeQuoteCharacter('\"');
      outputFormat1.setNewLineAfterNTags(2);
      outputFormat1.isOmitEncoding();
      outputFormat1.isPadText();
      outputFormat1.isPadText();
      outputFormat1.isSuppressDeclaration();
      boolean boolean0 = outputFormat1.isSuppressDeclaration();
      assertEquals(2, outputFormat1.getNewLineAfterNTags());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.9264175554979963
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Invalid attribute quote character (", false);
      OutputFormat outputFormat1 = new OutputFormat("Invalid attribute quote character (", true, "");
      outputFormat1.isNewLineAfterDeclaration();
      OutputFormat outputFormat2 = new OutputFormat("p6M#o", false);
      outputFormat2.getAttributeQuoteCharacter();
      outputFormat1.setNewlines(true);
      outputFormat0.setLineSeparator("Invalid attribute quote character (");
      outputFormat2.isTrimText();
      outputFormat0.isTrimText();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat3.setIndent("");
      outputFormat3.setXHTML(true);
      outputFormat0.setIndentSize(139);
      outputFormat2.setAttributeQuoteCharacter('\"');
      outputFormat1.setNewLineAfterNTags(139);
      outputFormat1.isOmitEncoding();
      outputFormat3.isPadText();
      outputFormat1.isPadText();
      outputFormat1.isSuppressDeclaration();
      assertEquals(139, outputFormat1.getNewLineAfterNTags());
      
      boolean boolean0 = outputFormat3.isSuppressDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6661022550876021
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      boolean boolean0 = false;
      OutputFormat outputFormat0 = new OutputFormat("#v{%<\"UmszwY}", false, "-encoding");
      outputFormat0.setPadText(true);
      outputFormat0.setNewlines(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setXHTML(false);
      outputFormat0.isTrimText();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "#v{%<\"UmszwY}";
      stringArray0[1] = "#v{%<\"UmszwY}";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "-encoding";
      stringArray0[4] = "-encoding";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6075751554588926
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimText", true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("|B7vq`t_N>\"");
      outputFormat0.getAttributeQuoteCharacter();
      assertEquals("|B7vq`t_N>\"", outputFormat0.getIndent());
      
      outputFormat0.setIndent(false);
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-trimText";
      stringArray0[1] = ")";
      stringArray0[2] = ")";
      stringArray0[3] = "-trimText";
      stringArray0[4] = "-trimText";
      stringArray0[5] = "|B7vq`t_N>\"";
      outputFormat0.parseOptions(stringArray0, 0);
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.839296747977661
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[5];
      outputFormat0.setNewLineAfterNTags((-885));
      String string0 = "";
      outputFormat0.setIndent(false);
      outputFormat0.setTrimText(true);
      stringArray0[0] = "";
      stringArray0[1] = "-indent";
      String string1 = "";
      stringArray0[2] = "";
      String string2 = ":`R&^x&pV'zg/8";
      stringArray0[3] = ":`R&^x&pV'zg/8";
      String string3 = "-newlines";
      outputFormat0.setExpandEmptyElements(true);
      stringArray0[4] = "-newlines";
      outputFormat0.parseOptions(stringArray0, 1);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('j');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (j)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7787475133823718
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Invalid attribute quote character (", false);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setPadText(false);
      outputFormat0.setNewlines(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isTrimText();
      outputFormat0.setIndent("Invalid attribute quote character (");
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setIndent(false);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setIndent(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Invalid attribute quote character (";
      stringArray0[1] = "Invalid attribute quote character (";
      stringArray0[2] = "Invalid attribute quote character (";
      stringArray0[3] = "Invalid attribute quote character (";
      stringArray0[4] = "Invalid attribute quote character (";
      stringArray0[5] = "Invalid attribute quote character (";
      stringArray0[6] = "Invalid attribute quote character (";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.setAttributeQuoteCharacter('\'');
      int int0 = outputFormat1.parseOptions(stringArray0, 0);
      assertEquals('\'', outputFormat1.getAttributeQuoteCharacter());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5808414563590492
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "#v{%<\"UmszwY}";
      stringArray0[1] = "#v{%<\"UmszwY}";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "-encoding";
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.parseOptions(stringArray0, 1292);
      OutputFormat outputFormat1 = new OutputFormat("Invalid attribute quote character (");
      outputFormat1.setNewlines(true);
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat1.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "-xhtml,G^B<H<W31ot&u";
      stringArray1[1] = "Invalid attribute quote character (";
      stringArray1[2] = "#v{%<\"UmszwY}";
      outputFormat1.parseOptions(stringArray1, 1292);
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat1.parseOptions(stringArray0, 4469);
      outputFormat1.parseOptions(stringArray1, 1);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.345862464011635
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("/g.o g*", false, "/g.o g*");
      outputFormat0.setIndent("/g.o g*");
      outputFormat0.setPadText(true);
      outputFormat0.setNewlines(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setXHTML(false);
      outputFormat0.setIndent("/g.o g*");
      assertTrue(outputFormat0.isPadText());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent(true);
      OutputFormat outputFormat2 = new OutputFormat("-expandEmptym");
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat3 = new OutputFormat((String) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expandEmptym";
      stringArray0[1] = "WI";
      stringArray0[2] = "/g.o g*";
      stringArray0[3] = "-expandEmptym";
      outputFormat2.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[7];
      stringArray1[0] = "/g.o g*";
      stringArray1[1] = "-expandEmptym";
      stringArray1[2] = "/g.o g*";
      stringArray1[3] = null;
      stringArray1[4] = "/g.o g*";
      stringArray1[5] = null;
      int int0 = outputFormat1.parseOptions(stringArray1, 0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.6484383345463107
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("/g.o g*", false, "/g.o g*");
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setIndent("");
      outputFormat0.setPadText(false);
      outputFormat1.setNewlines(false);
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat1.setXHTML(false);
      outputFormat0.setIndent("");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent(true);
      OutputFormat outputFormat3 = new OutputFormat("-expandEmpty-trimText");
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat4 = new OutputFormat("-suppressDeclaration");
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-expandEmptym";
      stringArray0[1] = "-suppressDeclaration";
      stringArray0[2] = "-expandEmptym";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat5 = new OutputFormat("-suppressDeclaration");
      int int0 = outputFormat2.parseOptions(stringArray0, 0);
      assertTrue(outputFormat2.isSuppressDeclaration());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.186938238780991
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("/g.o g*", false, "/g.o g*");
      outputFormat0.setIndent("/g.o g*");
      outputFormat0.setPadText(true);
      outputFormat0.setNewlines(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setXHTML(true);
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "+5?zFb#g:";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "-xhtml,G^B<H<W31ot&u";
      stringArray0[3] = "/g.o g*";
      stringArray0[4] = "/g.o g*";
      stringArray0[0] = "-xhtml,G^B<H<W31ot&u";
      stringArray0[6] = "-xhtml,G^B<H<W31ot&u";
      stringArray0[7] = "/g.o g*";
      stringArray0[8] = "-xhtml,G^B<H<W31ot&u";
      int int0 = outputFormat1.parseOptions(stringArray0, 0);
      assertEquals("-xhtml,G^B<H<W31ot&u", outputFormat1.getLineSeparator());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6661022550876021
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "-indentSize";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.getNewLineAfterNTags();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
