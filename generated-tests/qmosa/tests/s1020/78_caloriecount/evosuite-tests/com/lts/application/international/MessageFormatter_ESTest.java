/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:23:42 GMT 2018
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.StringReader;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.loadCriticalBundles();
      messageFormatter0.temp();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null, (Object) null, (Object) null, (Object) list0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "; and resource path: ";
      objectArray0[1] = (Object) messageFormatter0;
      objectArray0[2] = (Object) "?IlHp'uH!-@SU$";
      objectArray0[3] = (Object) "?IlHp'uH!-@SU$";
      objectArray0[4] = (Object) "?IlHp'uH!-@SU$";
      Object object0 = new Object();
      objectArray0[5] = object0;
      StringReader stringReader0 = new StringReader("e!%>ThzC.)");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.formatMessage("; and resource path: ", objectArray0, (ResourceBundle) propertyResourceBundle0);
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("?IlHp'uH!-@SU$", "alC.AXF1Qx@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      ApplicationException applicationException0 = messageFormatter0.createLoadException(linkedList0);
      assertEquals("critical.com.lts.application.errors.resourceBundle.load", applicationException0.getKey());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("com.lts.application.international.MessageFormatter", (Object) "com.lts.application.international.MessageFormatter", (Object) "com.lts.application.international.MessageFormatter");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = "com.lts.application.errors.repository.renaming";
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) messageFormatter0;
      ApplicationException applicationException0 = new ApplicationException("resources.messages.standard");
      MockThrowable mockThrowable0 = new MockThrowable("PFH&+\"~Na", applicationException0);
      ApplicationException applicationException1 = new ApplicationException(mockThrowable0, "com.lts.application.errors.repository.renaming", messageFormatter0);
      ApplicationException applicationException2 = new ApplicationException(applicationException1, "9pK0z-ouF'7", applicationException0, mockThrowable0, applicationException1);
      Object object0 = new Object();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("com.lts.application.errors.optionSwitchNotAtEnd", applicationException2);
      ApplicationException applicationException3 = new ApplicationException(applicationException2, "", object0, messageFormatter_LoadBundleError0);
      messageFormatter0.myLastException = (Throwable) applicationException3;
      objectArray0[1] = (Object) messageFormatter0;
      objectArray0[2] = (Object) "com.lts.application.errors.repository.renaming";
      messageFormatter_LoadBundleError0.error = (Throwable) applicationException2;
      objectArray0[3] = (Object) messageFormatter0;
      objectArray0[4] = (Object) "com.lts.application.errors.repository.renaming";
      try { 
        messageFormatter0.getMessage("com.lts.application.errors.repository.renaming", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      List list0 = MessageFormatter.buildList(objectArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("com.lts.application.international.MessageFormatter");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = null;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader0.setPackageAssertionStatus("resources.messages.standard", true);
      classLoader1.setDefaultAssertionStatus(true);
      ClassLoader.getSystemClassLoader();
      String string1 = "";
      classLoader1.setClassAssertionStatus("", false);
      // Undeclared exception!
      try { 
        messageFormatter0.listResources((String) null, classLoader1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.initializeResourceBundle();
      messageFormatter0.temp();
      messageFormatter0.initializeResourceBundle();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      String string0 = "O*";
      Locale locale0 = new Locale("O*", "O*");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      String string1 = null;
      boolean boolean0 = false;
      classLoader0.setClassAssertionStatus((String) null, false);
      locale0.getScript();
      locale0.hasExtensions();
      ClassLoader classLoader1 = classLoader0.getParent();
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) linkedList0, list0, locale0, classLoader1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: java.class; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = "&";
      linkedList0.add((Object) "&");
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: &; and resource path: &
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = "";
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list1, locale_FilteringMode0);
      try { 
        messageFormatter0.initializeResourceBundle(list2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.temp();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      messageFormatter0.listToString(list0);
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("", "java.class, java.properties");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      messageFormatter0.temp();
      Throwable throwable0 = messageFormatter0.getLastException();
      assertNull(throwable0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "; and resource path: ";
      objectArray0[1] = (Object) messageFormatter0;
      objectArray0[2] = (Object) "?IlHp'uH!-@SU$";
      objectArray0[3] = (Object) "?IlHp'uH!-@SU$";
      objectArray0[4] = (Object) "?IlHp'uH!-@SU$";
      Object object0 = new Object();
      objectArray0[5] = object0;
      StringReader stringReader0 = new StringReader("e!%>ThzC.)");
      stringReader0.reset();
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.formatMessage("a'\"Ce'@_uj", objectArray0, (ResourceBundle) propertyResourceBundle0);
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, "Lto$%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      MessageFormatter.buildList(objectArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable("x~t0&K`nb9GSL*O y");
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object[] objectArray0 = new Object[18];
      Object object0 = new Object();
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.listToString(list0);
      Object object1 = new Object();
      MockThrowable mockThrowable0 = new MockThrowable("resources.messages.standard");
      String string0 = "[t\\pncxh ]2Px";
      ApplicationException applicationException0 = new ApplicationException("(fh!3^J", objectArray0);
      ApplicationException applicationException1 = new ApplicationException(mockThrowable0, "[tpncxh ]2Px", "java.class", applicationException0);
      ApplicationException applicationException2 = new ApplicationException(applicationException1, "@_a9`.(\"n9`");
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = null;
      MessageFormatter.buildList((Object[]) null);
      MessageFormatter messageFormatter1 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable("resources.messages.standard");
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = null;
      messageFormatter0.listToString((List<String>) null);
      Object object0 = new Object();
      MockThrowable mockThrowable0 = new MockThrowable((String) null);
      String string0 = "(fh!3^J";
      String string1 = null;
      ApplicationException applicationException0 = new ApplicationException((String) null, (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH);
      ApplicationException applicationException1 = new ApplicationException(mockThrowable0, ".", messageFormatter0, ".");
      ApplicationException applicationException2 = new ApplicationException(applicationException1, "resources.messages.standard");
      messageFormatter0.getLastException();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.GERMAN;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) set0);
      Object object0 = new Object();
      Locale locale1 = Locale.KOREAN;
      locale0.getDisplayName();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("com.lts.application.interntional.MessageFormatter");
      Locale.forLanguageTag("com.lts.application.interntional.MessageFormatter");
      stringReader0.read();
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.formatMessage("German", (Object[]) null, (ResourceBundle) propertyResourceBundle0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter1 = new MessageFormatter();
      ClassLoader classLoader1 = classLoader0.getParent();
      try { 
        messageFormatter1.initializeResourceBundle(list0, list0, locale1, classLoader1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }
}
