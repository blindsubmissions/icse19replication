/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:36:23 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.Spliterator;
import java.util.function.Consumer;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.ChangeEventType;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.583518938456111
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getLabel();
      rawVariable0.clone();
      User user0 = new User("user.password.saveChanges", "&i}5<bMc%s");
      user0.setCity("2hdKcER,W");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      Variable.validateFields(rawVariable0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      Variable.validateFields(rawVariable0);
      rawVariable0.getAlias();
      rawVariable0.getLabel();
      rawVariable0.setCleaningStatus("ontologyTerm.term.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList1);
      assertEquals("ontologyTerm.term.label", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("GBN_");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("sB");
      rawVariable0.setCleaningStatus("variable.label.label");
      derivedVariable0.addSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.isNewRecord();
      User user0 = new User("sB", (String) null);
      User.checkValidUserIDField("GBN_");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("GBN_", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      valueLabel1.clone();
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel0.setValue((String) null);
      derivedVariable0.setColumnEnd("user.status.unverified");
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.isCleaned();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("g|");
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.setCleaningDescription((String) null);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(derivedVariable0);
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("g|");
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      rawVariable1.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setFilePath("valueLabel.label.saveChanges");
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      assertEquals("valueLabel.label.saveChanges", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setCleaningStatus("");
      valueLabel0.clone();
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      try { 
        User.checkValidEmail("variable.year.label");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"variable.year.label\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.8286413964890924
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "tmMbq(v-D";
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.getFilePath();
      rawVariable0.setFilePath("");
      Variable.validateFields(rawVariable0);
      derivedVariable0.getDisplayItemIdentifier();
      rawVariable0.setLabel("tmMbq(v-D");
      User user0 = new User("NzRvmU$;vc9Jx72UVa", "0");
      rawVariable0.codeBookNumber = "tmMbq(v-D";
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable1.getCleaningStatus();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getSourceVariables();
      assertEquals("tmMbq(v-D", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.732165102891343
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("general.fieldValue.blank");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      ChangeEventType changeEventType0 = ChangeEventType.ONTOLOGY_TERM;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "apWhk", "apWhk");
      macawChangeEvent0.getVariableOwnerID();
      linkedList0.add((Integer) null);
      arrayList0.retainAll(linkedList0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.clone();
      User user0 = new User("general.fieldValue.blank", "general.fieldValue.blank");
      user0.setAddressLine1("general.fieldValue.blank");
      user0.setStatus(" w8*\u0001if^m");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.getLabel();
      derivedVariable0.getCleaningStatus();
      rawVariable0.getCleaningStatus();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.clone();
      User user1 = new User("Unknown", "");
      user1.setIdentifier((-981));
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      derivedVariable0.getLabel();
      assertEquals("general.fieldValue.blank", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("variable.name.label");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      Consumer<OntologyTerm> consumer0 = (Consumer<OntologyTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      arrayList0.add((OntologyTerm) null);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      User user0 = new User();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel1);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.columnEnd = "-`b>g*yjd";
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getColumnStart();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(rawVariable0);
      derivedVariable1.cloneAttributes(rawVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable1);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      
      boolean boolean0 = derivedVariable1.isCoded();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5400363038209806
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertNotNull(rawVariable0);
      
      rawVariable0.setColumnStart((String) null);
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertNull(rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      
      String string0 = rawVariable0.getForm();
      assertEquals("", string0);
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertNull(rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertNotNull(string0);
      
      rawVariable0.setColumnEnd((String) null);
      assertNull(rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertNull(rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      
      RawVariable rawVariable1 = new RawVariable();
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getNotes());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertNotNull(rawVariable1);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable1);
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getNotes());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(string0));
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertNotSame(rawVariable1, rawVariable0);
      
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      assertNotNull(ontologyTerm0);
      
      ontologyTerm0.setTerm("variable.alternativeVariable.label");
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("variable.alternativeVariable.label", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      
      boolean boolean0 = arrayList1.add(ontologyTerm0);
      assertTrue(boolean0);
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("variable.alternativeVariable.label", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      assertTrue(arrayList1.contains(ontologyTerm0));
      
      rawVariable1.removeOntologyTerms(arrayList1);
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getNotes());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertTrue(arrayList1.contains(ontologyTerm0));
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertNotSame(rawVariable1, rawVariable0);
      
      RawVariable rawVariable2 = new RawVariable();
      assertEquals("", rawVariable2.getName());
      assertEquals(0, rawVariable2.getIdentifier());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("", rawVariable2.getQuestionNumber());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("", rawVariable2.getYear());
      assertEquals("", rawVariable2.getNotes());
      assertEquals("", rawVariable2.getCodeBookNumber());
      assertFalse(rawVariable2.isCoded());
      assertEquals("", rawVariable2.getAlias());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertEquals("", rawVariable2.getFilePath());
      assertEquals("", rawVariable2.getDisplayName());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("", rawVariable2.getCleaningDescription());
      assertEquals("", rawVariable2.getForm());
      assertFalse(rawVariable2.isNewRecord());
      assertEquals("", rawVariable2.getColumnEnd());
      assertEquals("", rawVariable2.getColumnStart());
      assertEquals("", rawVariable2.getLabel());
      assertFalse(rawVariable2.isCleaned());
      assertNotNull(rawVariable2);
      assertFalse(rawVariable2.equals((Object)rawVariable0));
      assertFalse(rawVariable2.equals((Object)rawVariable1));
      
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      
      rawVariable2.removeSupportingDocuments(arrayList2);
      assertEquals("", rawVariable2.getName());
      assertEquals(0, rawVariable2.getIdentifier());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("", rawVariable2.getQuestionNumber());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("", rawVariable2.getYear());
      assertEquals("", rawVariable2.getNotes());
      assertEquals("", rawVariable2.getCodeBookNumber());
      assertFalse(rawVariable2.isCoded());
      assertEquals("", rawVariable2.getAlias());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertEquals("", rawVariable2.getFilePath());
      assertEquals("", rawVariable2.getDisplayName());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("", rawVariable2.getCleaningDescription());
      assertEquals("", rawVariable2.getForm());
      assertFalse(rawVariable2.isNewRecord());
      assertEquals("", rawVariable2.getColumnEnd());
      assertEquals("", rawVariable2.getColumnStart());
      assertEquals("", rawVariable2.getLabel());
      assertFalse(rawVariable2.isCleaned());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertFalse(rawVariable2.equals((Object)rawVariable0));
      assertFalse(rawVariable2.equals((Object)rawVariable1));
      assertNotSame(rawVariable2, rawVariable0);
      assertNotSame(rawVariable2, rawVariable1);
      
      boolean boolean1 = rawVariable1.hasSameDisplayName(rawVariable2);
      assertTrue(boolean1);
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getNotes());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable2.getName());
      assertEquals(0, rawVariable2.getIdentifier());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("", rawVariable2.getQuestionNumber());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("", rawVariable2.getYear());
      assertEquals("", rawVariable2.getNotes());
      assertEquals("", rawVariable2.getCodeBookNumber());
      assertFalse(rawVariable2.isCoded());
      assertEquals("", rawVariable2.getAlias());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertEquals("", rawVariable2.getFilePath());
      assertEquals("", rawVariable2.getDisplayName());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("", rawVariable2.getCleaningDescription());
      assertEquals("", rawVariable2.getForm());
      assertFalse(rawVariable2.isNewRecord());
      assertEquals("", rawVariable2.getColumnEnd());
      assertEquals("", rawVariable2.getColumnStart());
      assertEquals("", rawVariable2.getLabel());
      assertFalse(rawVariable2.isCleaned());
      assertFalse(rawVariable1.equals((Object)rawVariable2));
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertFalse(rawVariable2.equals((Object)rawVariable0));
      assertFalse(rawVariable2.equals((Object)rawVariable1));
      assertTrue(boolean1 == boolean0);
      assertNotSame(rawVariable1, rawVariable2);
      assertNotSame(rawVariable1, rawVariable0);
      assertNotSame(rawVariable2, rawVariable0);
      assertNotSame(rawVariable2, rawVariable1);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertNotNull(derivedVariable0);
      
      ArrayList<Variable> arrayList3 = derivedVariable0.getSourceVariables();
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertNotNull(arrayList3);
      
      derivedVariable0.setCategory((String) null);
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertNull(derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertNotNull(supportingDocument0);
      
      supportingDocument0.setDescription("");
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      
      supportingDocument0.setIsNewRecord(true);
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFileName());
      assertTrue(supportingDocument0.isNewRecord());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.751079214184735
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      User user0 = new User();
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals(0, user0.getIdentifier());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getCounty());
      assertNotNull(user0);
      
      user0.setLastName("B4)5u`/Q>5");
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals("B4)5u`/Q>5", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getCounty());
      
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertNotNull(rawVariable0);
      
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals("B4)5u`/Q>5", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getCounty());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      user0.setPostCode("B4)5u`/Q>5");
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getDisplayName());
      assertEquals("B4)5u`/Q>5", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getAffiliation());
      assertEquals("B4)5u`/Q>5", user0.getPostCode());
      assertEquals("", user0.getCounty());
      
      user0.setAddressLine2("2Z`sTL");
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getDisplayName());
      assertEquals("2Z`sTL", user0.getAddressLine2());
      assertEquals("B4)5u`/Q>5", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getAffiliation());
      assertEquals("B4)5u`/Q>5", user0.getPostCode());
      assertEquals("", user0.getCounty());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertNotNull(derivedVariable0);
      
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getDisplayName());
      assertEquals("2Z`sTL", user0.getAddressLine2());
      assertEquals("B4)5u`/Q>5", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getAffiliation());
      assertEquals("B4)5u`/Q>5", user0.getPostCode());
      assertEquals("", user0.getCounty());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertNotSame(arrayList1, arrayList0);
      
      derivedVariable0.setColumnStart("B4)5u`/Q>5");
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getColumnStart());
      
      derivedVariable0.setCleaningDescription("B4)5u`/Q>5");
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getColumnStart());
      
      boolean boolean0 = derivedVariable0.containsSourceVariable(rawVariable0);
      assertFalse(boolean0);
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getColumnStart());
      
      rawVariable0.setIsNewRecord(false);
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getColumnStart());
      assertNotNull(string0);
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getTitle());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertNotNull(supportingDocument0);
      
      rawVariable0.removeSupportingDocument(supportingDocument0);
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getTitle());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getColumnStart());
      
      rawVariable0.setYear("OOsNw|3Z(K");
      assertEquals("OOsNw|3Z(K", rawVariable0.getYear());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      
      derivedVariable0.setAlternativeVariable(rawVariable0);
      assertEquals("OOsNw|3Z(K", rawVariable0.getYear());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getColumnStart());
      
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("B4)5u`/Q>5", rawVariable0.getCleaningDescription());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("B4)5u`/Q>5", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getColumnStart());
      
      rawVariable0.setIsNewRecord(false);
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("B4)5u`/Q>5", rawVariable0.getCleaningDescription());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("B4)5u`/Q>5", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getColumnStart());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getFilePath());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getName());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertNotNull(derivedVariable1);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      
      boolean boolean1 = rawVariable0.hasSameDisplayName(derivedVariable1);
      assertFalse(boolean1);
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("B4)5u`/Q>5", rawVariable0.getCleaningDescription());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("B4)5u`/Q>5", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getColumnStart());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getFilePath());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getName());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertTrue(boolean1 == boolean0);
      assertNotSame(derivedVariable1, derivedVariable0);
      
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      
      boolean boolean2 = arrayList2.retainAll(arrayList1);
      assertFalse(boolean2);
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getDisplayName());
      assertEquals("2Z`sTL", user0.getAddressLine2());
      assertEquals("B4)5u`/Q>5", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getAffiliation());
      assertEquals("B4)5u`/Q>5", user0.getPostCode());
      assertEquals("", user0.getCounty());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("B4)5u`/Q>5", rawVariable0.getCleaningDescription());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("B4)5u`/Q>5", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertNotSame(arrayList1, arrayList0);
      
      derivedVariable1.setSourceVariables(arrayList2);
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getColumnStart());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getFilePath());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getName());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertNotSame(derivedVariable1, derivedVariable0);
      
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getColumnStart());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getName());
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getDisplayName());
      assertFalse(variableSummary0.isDerived());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertNotNull(variableSummary0);
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertNotSame(derivedVariable0, derivedVariable1);
      
      derivedVariable0.setAlias((String) null);
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertNull(derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("B4)5u`/Q>5", derivedVariable0.getColumnStart());
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertNotSame(derivedVariable0, derivedVariable1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.401197381662154
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(derivedVariable0);
      
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getForm());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getName());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getColumnStart());
      assertNotNull(derivedVariable1);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      
      derivedVariable0.setCleaningDescription("d?2:E|");
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("d?2:E|", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertNotSame(derivedVariable0, derivedVariable1);
      
      boolean boolean0 = arrayList0.add((Variable) derivedVariable1);
      assertTrue(boolean0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("d?2:E|", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getForm());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getName());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getColumnStart());
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertNotSame(derivedVariable0, derivedVariable1);
      assertNotSame(derivedVariable1, derivedVariable0);
      
      Spliterator<Variable> spliterator0 = arrayList0.spliterator();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("d?2:E|", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNotNull(spliterator0);
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertNotSame(derivedVariable0, derivedVariable1);
      
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("d?2:E|", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertNotSame(derivedVariable0, derivedVariable1);
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      assertEquals("", derivedVariable2.getDisplayName());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("", derivedVariable2.getCodeBookNumber());
      assertEquals("", derivedVariable2.getFilePath());
      assertEquals("", derivedVariable2.getCleaningDescription());
      assertEquals("", derivedVariable2.getLabel());
      assertEquals("", derivedVariable2.getAlias());
      assertEquals("", derivedVariable2.getQuestionNumber());
      assertEquals("", derivedVariable2.getColumnStart());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("", derivedVariable2.getNotes());
      assertEquals("", derivedVariable2.getYear());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("", derivedVariable2.getColumnEnd());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("", derivedVariable2.getName());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertEquals("", derivedVariable2.getForm());
      assertNotNull(derivedVariable2);
      assertFalse(derivedVariable2.equals((Object)derivedVariable1));
      assertFalse(derivedVariable2.equals((Object)derivedVariable0));
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertNotNull(supportingDocument0);
      
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals("", supportingDocument1.getFileName());
      assertEquals("", supportingDocument1.getDescription());
      assertNotNull(supportingDocument1);
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotSame(supportingDocument0, supportingDocument1);
      assertNotSame(supportingDocument1, supportingDocument0);
      
      supportingDocument0.setIsNewRecord(true);
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFileName());
      assertTrue(supportingDocument0.isNewRecord());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertNotSame(supportingDocument0, supportingDocument1);
      
      derivedVariable2.addSupportingDocument(supportingDocument0);
      assertEquals("", derivedVariable2.getDisplayName());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("", derivedVariable2.getCodeBookNumber());
      assertEquals("", derivedVariable2.getFilePath());
      assertEquals("", derivedVariable2.getCleaningDescription());
      assertEquals("", derivedVariable2.getLabel());
      assertEquals("", derivedVariable2.getAlias());
      assertEquals("", derivedVariable2.getQuestionNumber());
      assertEquals("", derivedVariable2.getColumnStart());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("", derivedVariable2.getNotes());
      assertEquals("", derivedVariable2.getYear());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("", derivedVariable2.getColumnEnd());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("", derivedVariable2.getName());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertEquals("", derivedVariable2.getForm());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFileName());
      assertTrue(supportingDocument0.isNewRecord());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertFalse(derivedVariable2.equals((Object)derivedVariable1));
      assertFalse(derivedVariable2.equals((Object)derivedVariable0));
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertNotSame(derivedVariable2, derivedVariable1);
      assertNotSame(derivedVariable2, derivedVariable0);
      assertNotSame(supportingDocument0, supportingDocument1);
      
      boolean boolean1 = derivedVariable0.containsSourceVariable(derivedVariable2);
      assertTrue(boolean1);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("d?2:E|", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable2.getDisplayName());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("", derivedVariable2.getCodeBookNumber());
      assertEquals("", derivedVariable2.getFilePath());
      assertEquals("", derivedVariable2.getCleaningDescription());
      assertEquals("", derivedVariable2.getLabel());
      assertEquals("", derivedVariable2.getAlias());
      assertEquals("", derivedVariable2.getQuestionNumber());
      assertEquals("", derivedVariable2.getColumnStart());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("", derivedVariable2.getNotes());
      assertEquals("", derivedVariable2.getYear());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("", derivedVariable2.getColumnEnd());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("", derivedVariable2.getName());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertEquals("", derivedVariable2.getForm());
      assertFalse(derivedVariable0.equals((Object)derivedVariable2));
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertFalse(derivedVariable2.equals((Object)derivedVariable1));
      assertFalse(derivedVariable2.equals((Object)derivedVariable0));
      assertTrue(boolean1 == boolean0);
      assertNotSame(derivedVariable0, derivedVariable2);
      assertNotSame(derivedVariable0, derivedVariable1);
      assertNotSame(derivedVariable2, derivedVariable1);
      assertNotSame(derivedVariable2, derivedVariable0);
      
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("d?2:E|", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      assertFalse(derivedVariable0.equals((Object)derivedVariable2));
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertNotSame(derivedVariable0, derivedVariable2);
      assertNotSame(derivedVariable0, derivedVariable1);
      
      derivedVariable0.setQuestionNumber("");
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("d?2:E|", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.equals((Object)derivedVariable2));
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertNotSame(derivedVariable0, derivedVariable2);
      assertNotSame(derivedVariable0, derivedVariable1);
      
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotNull(arrayList2);
      assertFalse(arrayList2.equals((Object)arrayList0));
      
      derivedVariable2.addSourceVariables(arrayList2);
      assertEquals("", derivedVariable2.getDisplayName());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("", derivedVariable2.getCodeBookNumber());
      assertEquals("", derivedVariable2.getFilePath());
      assertEquals("", derivedVariable2.getCleaningDescription());
      assertEquals("", derivedVariable2.getLabel());
      assertEquals("", derivedVariable2.getAlias());
      assertEquals("", derivedVariable2.getQuestionNumber());
      assertEquals("", derivedVariable2.getColumnStart());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("", derivedVariable2.getNotes());
      assertEquals("", derivedVariable2.getYear());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("", derivedVariable2.getColumnEnd());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("", derivedVariable2.getName());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertEquals("", derivedVariable2.getForm());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(derivedVariable2.equals((Object)derivedVariable1));
      assertFalse(derivedVariable2.equals((Object)derivedVariable0));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertNotSame(derivedVariable2, derivedVariable1);
      assertNotSame(derivedVariable2, derivedVariable0);
      assertNotSame(arrayList2, arrayList0);
      
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("d?2:E|", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(string0);
      assertFalse(derivedVariable0.equals((Object)derivedVariable2));
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertNotSame(derivedVariable0, derivedVariable2);
      assertNotSame(derivedVariable0, derivedVariable1);
      
      String string1 = derivedVariable0.getCodeBookNumber();
      assertEquals("", string1);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("d?2:E|", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(string1);
      assertFalse(derivedVariable0.equals((Object)derivedVariable2));
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertNotSame(derivedVariable0, derivedVariable2);
      assertNotSame(derivedVariable0, derivedVariable1);
      
      DerivedVariable derivedVariable3 = (DerivedVariable)derivedVariable2.clone();
      assertEquals("", derivedVariable3.getCleaningDescription());
      assertEquals("", derivedVariable3.getLabel());
      assertEquals("", derivedVariable3.getYear());
      assertEquals("0", derivedVariable3.getDisplayItemIdentifier());
      assertEquals("", derivedVariable3.getForm());
      assertFalse(derivedVariable3.isNewRecord());
      assertEquals("", derivedVariable3.getColumnEnd());
      assertEquals("", derivedVariable3.getAlias());
      assertEquals(0, derivedVariable3.getIdentifier());
      assertEquals("Unknown", derivedVariable3.getCleaningStatus());
      assertEquals("", derivedVariable3.getDisplayName());
      assertEquals("", derivedVariable3.getFilePath());
      assertFalse(derivedVariable3.isCoded());
      assertEquals("", derivedVariable3.getCodeBookNumber());
      assertEquals("", derivedVariable3.getName());
      assertEquals("", derivedVariable3.getNotes());
      assertEquals("Unknown", derivedVariable3.getAvailability());
      assertEquals("", derivedVariable3.getQuestionNumber());
      assertEquals("", derivedVariable3.getColumnStart());
      assertEquals("Unknown", derivedVariable3.getCategory());
      assertFalse(derivedVariable3.isCleaned());
      assertEquals("", derivedVariable2.getDisplayName());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("", derivedVariable2.getCodeBookNumber());
      assertEquals("", derivedVariable2.getFilePath());
      assertEquals("", derivedVariable2.getCleaningDescription());
      assertEquals("", derivedVariable2.getLabel());
      assertEquals("", derivedVariable2.getAlias());
      assertEquals("", derivedVariable2.getQuestionNumber());
      assertEquals("", derivedVariable2.getColumnStart());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("", derivedVariable2.getNotes());
      assertEquals("", derivedVariable2.getYear());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("", derivedVariable2.getColumnEnd());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("", derivedVariable2.getName());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertEquals("", derivedVariable2.getForm());
      assertNotNull(derivedVariable3);
      assertFalse(derivedVariable3.equals((Object)derivedVariable2));
      assertFalse(derivedVariable3.equals((Object)derivedVariable1));
      assertFalse(derivedVariable3.equals((Object)derivedVariable0));
      assertFalse(derivedVariable2.equals((Object)derivedVariable1));
      assertFalse(derivedVariable2.equals((Object)derivedVariable0));
      assertNotSame(derivedVariable3, derivedVariable2);
      assertNotSame(derivedVariable3, derivedVariable1);
      assertNotSame(derivedVariable3, derivedVariable0);
      assertNotSame(derivedVariable2, derivedVariable3);
      assertNotSame(derivedVariable2, derivedVariable1);
      assertNotSame(derivedVariable2, derivedVariable0);
      
      derivedVariable2.setFilePath("");
      assertEquals("", derivedVariable2.getDisplayName());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("", derivedVariable2.getCodeBookNumber());
      assertEquals("", derivedVariable2.getFilePath());
      assertEquals("", derivedVariable2.getCleaningDescription());
      assertEquals("", derivedVariable2.getLabel());
      assertEquals("", derivedVariable2.getAlias());
      assertEquals("", derivedVariable2.getQuestionNumber());
      assertEquals("", derivedVariable2.getColumnStart());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("", derivedVariable2.getNotes());
      assertEquals("", derivedVariable2.getYear());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("", derivedVariable2.getColumnEnd());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("", derivedVariable2.getName());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertEquals("", derivedVariable2.getForm());
      assertFalse(derivedVariable2.equals((Object)derivedVariable3));
      assertFalse(derivedVariable2.equals((Object)derivedVariable1));
      assertFalse(derivedVariable2.equals((Object)derivedVariable0));
      assertNotSame(derivedVariable2, derivedVariable3);
      assertNotSame(derivedVariable2, derivedVariable1);
      assertNotSame(derivedVariable2, derivedVariable0);
      
      derivedVariable0.addSourceVariables(arrayList2);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("d?2:E|", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(derivedVariable0.equals((Object)derivedVariable3));
      assertFalse(derivedVariable0.equals((Object)derivedVariable2));
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertNotSame(derivedVariable0, derivedVariable3);
      assertNotSame(derivedVariable0, derivedVariable2);
      assertNotSame(derivedVariable0, derivedVariable1);
      assertNotSame(arrayList2, arrayList0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertNotNull(ontologyTerm0);
      
      User user0 = new User((String) null, "");
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getCounty());
      assertNull(user0.getUserID());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getFirstName());
      assertNull(user0.getDisplayName());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getEmail());
      assertNotNull(user0);
      
      ArrayList<MacawChangeEvent> arrayList3 = OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getCounty());
      assertNull(user0.getUserID());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getFirstName());
      assertNull(user0.getDisplayName());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getEmail());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertNotNull(arrayList3);
      
      derivedVariable2.addOntologyTerm(ontologyTerm0);
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("", derivedVariable2.getDisplayName());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("", derivedVariable2.getCodeBookNumber());
      assertEquals("", derivedVariable2.getFilePath());
      assertEquals("", derivedVariable2.getCleaningDescription());
      assertEquals("", derivedVariable2.getLabel());
      assertEquals("", derivedVariable2.getAlias());
      assertEquals("", derivedVariable2.getQuestionNumber());
      assertEquals("", derivedVariable2.getColumnStart());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("", derivedVariable2.getNotes());
      assertEquals("", derivedVariable2.getYear());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("", derivedVariable2.getColumnEnd());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("", derivedVariable2.getName());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertEquals("", derivedVariable2.getForm());
      assertFalse(derivedVariable2.equals((Object)derivedVariable3));
      assertFalse(derivedVariable2.equals((Object)derivedVariable1));
      assertFalse(derivedVariable2.equals((Object)derivedVariable0));
      assertNotSame(derivedVariable2, derivedVariable3);
      assertNotSame(derivedVariable2, derivedVariable1);
      assertNotSame(derivedVariable2, derivedVariable0);
      
      String string2 = derivedVariable0.getDisplayItemIdentifier();
      assertEquals("0", string2);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("d?2:E|", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(string2);
      assertFalse(derivedVariable0.equals((Object)derivedVariable3));
      assertFalse(derivedVariable0.equals((Object)derivedVariable2));
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotSame(derivedVariable0, derivedVariable3);
      assertNotSame(derivedVariable0, derivedVariable2);
      assertNotSame(derivedVariable0, derivedVariable1);
      
      DerivedVariable derivedVariable4 = (DerivedVariable)derivedVariable1.clone();
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getForm());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getName());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable4.getLabel());
      assertEquals("", derivedVariable4.getForm());
      assertEquals("", derivedVariable4.getCleaningDescription());
      assertEquals("", derivedVariable4.getYear());
      assertEquals("0", derivedVariable4.getDisplayItemIdentifier());
      assertEquals("", derivedVariable4.getColumnEnd());
      assertFalse(derivedVariable4.isNewRecord());
      assertEquals("Unknown", derivedVariable4.getCategory());
      assertFalse(derivedVariable4.isCleaned());
      assertEquals("Unknown", derivedVariable4.getAvailability());
      assertFalse(derivedVariable4.isCoded());
      assertEquals("", derivedVariable4.getColumnStart());
      assertEquals("", derivedVariable4.getNotes());
      assertEquals("", derivedVariable4.getName());
      assertEquals("", derivedVariable4.getQuestionNumber());
      assertEquals("", derivedVariable4.getCodeBookNumber());
      assertEquals(0, derivedVariable4.getIdentifier());
      assertEquals("", derivedVariable4.getAlias());
      assertEquals("", derivedVariable4.getDisplayName());
      assertEquals("", derivedVariable4.getFilePath());
      assertEquals("Unknown", derivedVariable4.getCleaningStatus());
      assertNotNull(derivedVariable4);
      assertFalse(derivedVariable1.equals((Object)derivedVariable2));
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertFalse(derivedVariable1.equals((Object)derivedVariable3));
      assertFalse(derivedVariable4.equals((Object)derivedVariable0));
      assertFalse(derivedVariable4.equals((Object)derivedVariable3));
      assertFalse(derivedVariable4.equals((Object)derivedVariable2));
      assertFalse(derivedVariable4.equals((Object)derivedVariable1));
      assertNotSame(derivedVariable1, derivedVariable2);
      assertNotSame(derivedVariable1, derivedVariable0);
      assertNotSame(derivedVariable1, derivedVariable3);
      assertNotSame(derivedVariable1, derivedVariable4);
      assertNotSame(derivedVariable4, derivedVariable0);
      assertNotSame(derivedVariable4, derivedVariable3);
      assertNotSame(derivedVariable4, derivedVariable2);
      assertNotSame(derivedVariable4, derivedVariable1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertNotNull(rawVariable0);
      
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      rawVariable0.removeOntologyTerms(arrayList0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      RawVariable rawVariable1 = new RawVariable();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getDisplayName());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getNotes());
      assertNotNull(rawVariable1);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getDescription());
      assertNotNull(supportingDocument0);
      
      rawVariable0.removeSupportingDocument(supportingDocument0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getDescription());
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      rawVariable1.columnStart = null;
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertNull(rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getDisplayName());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getNotes());
      
      rawVariable0.setCoded(true);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertTrue(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      rawVariable0.addValueLabel((ValueLabel) null);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertTrue(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      rawVariable1.setCleaningDescription("supportingDocument.title.saveChanges");
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("supportingDocument.title.saveChanges", rawVariable1.getCleaningDescription());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertNull(rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getAlias());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getDisplayName());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getNotes());
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertNotSame(rawVariable1, rawVariable0);
      
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertNotNull(derivedVariable0);
      
      String string0 = derivedVariable0.getAlias();
      assertEquals("", string0);
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertNotNull(string0);
      
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getTerm());
      assertNotNull(ontologyTerm0);
      
      ontologyTerm0.setTerm("");
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getTerm());
      
      String string1 = ontologyTerm0.getDisplayName();
      assertEquals("-LHA", string1);
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getTerm());
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      
      arrayList0.clear();
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(ontologyTerm0));
      
      boolean boolean0 = arrayList0.add(ontologyTerm0);
      assertTrue(boolean0);
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getTerm());
      assertTrue(arrayList0.contains(ontologyTerm0));
      
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5400363038209806
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertNotNull(derivedVariable0);
      
      String string0 = derivedVariable0.getYear();
      assertEquals("", string0);
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertNotNull(string0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertTrue(ontologyTerm0.isNewRecord());
      assertNotNull(ontologyTerm0);
      
      ontologyTerm0.setNewRecord(false);
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals("", ontologyTerm0.getDescription());
      assertFalse(ontologyTerm0.isNewRecord());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals("", ontologyTerm0.getDescription());
      assertFalse(ontologyTerm0.isNewRecord());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      derivedVariable0.setSupportingDocuments(arrayList0);
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      ValueLabel valueLabel0 = new ValueLabel();
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
      assertEquals("", valueLabel0.getValue());
      assertFalse(valueLabel0.isMissingValue());
      assertFalse(valueLabel0.isDeletedNewRecord());
      assertFalse(valueLabel0.isDeletedRecord());
      assertEquals("", valueLabel0.getLabel());
      assertFalse(valueLabel0.isEditingExistingRecord());
      assertTrue(valueLabel0.isNewRecord());
      assertEquals(ValueLabel.EditingOperationType.NEW, valueLabel0.getEditingOperationType());
      assertEquals(0, valueLabel0.getIdentifier());
      assertNotNull(valueLabel0);
      
      derivedVariable0.addValueLabel(valueLabel0);
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
      assertEquals("", valueLabel0.getValue());
      assertFalse(valueLabel0.isMissingValue());
      assertFalse(valueLabel0.isDeletedNewRecord());
      assertFalse(valueLabel0.isDeletedRecord());
      assertEquals("", valueLabel0.getLabel());
      assertFalse(valueLabel0.isEditingExistingRecord());
      assertTrue(valueLabel0.isNewRecord());
      assertEquals(ValueLabel.EditingOperationType.NEW, valueLabel0.getEditingOperationType());
      assertEquals(0, valueLabel0.getIdentifier());
      
      boolean boolean0 = derivedVariable0.isCoded();
      assertFalse(boolean0);
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
      
      derivedVariable0.setCleaningStatus("");
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      assertEquals("LHA", ontologyTerm1.getOntologyName());
      assertEquals(0, ontologyTerm1.getIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertEquals("", ontologyTerm1.getDescription());
      assertEquals("0", ontologyTerm1.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm1.getTerm());
      assertTrue(ontologyTerm1.isNewRecord());
      assertNotNull(ontologyTerm1);
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm0));
      
      OntologyTerm ontologyTerm2 = (OntologyTerm)ontologyTerm1.clone();
      assertEquals("LHA", ontologyTerm1.getOntologyName());
      assertEquals(0, ontologyTerm1.getIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertEquals("", ontologyTerm1.getDescription());
      assertEquals("0", ontologyTerm1.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm1.getTerm());
      assertTrue(ontologyTerm1.isNewRecord());
      assertEquals("0", ontologyTerm2.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm2.getTerm());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm2.getNameSpace());
      assertEquals("", ontologyTerm2.getDescription());
      assertEquals(0, ontologyTerm2.getIdentifier());
      assertEquals("LHA", ontologyTerm2.getOntologyName());
      assertTrue(ontologyTerm2.isNewRecord());
      assertNotNull(ontologyTerm2);
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm0));
      assertFalse(ontologyTerm2.equals((Object)ontologyTerm0));
      assertFalse(ontologyTerm2.equals((Object)ontologyTerm1));
      assertNotSame(ontologyTerm1, ontologyTerm2);
      assertNotSame(ontologyTerm1, ontologyTerm0);
      assertNotSame(ontologyTerm2, ontologyTerm0);
      assertNotSame(ontologyTerm2, ontologyTerm1);
      
      ontologyTerm1.setIdentifier(0);
      assertEquals("LHA", ontologyTerm1.getOntologyName());
      assertEquals(0, ontologyTerm1.getIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertEquals("", ontologyTerm1.getDescription());
      assertEquals("0", ontologyTerm1.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm1.getTerm());
      assertTrue(ontologyTerm1.isNewRecord());
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm2));
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm0));
      assertNotSame(ontologyTerm1, ontologyTerm2);
      assertNotSame(ontologyTerm1, ontologyTerm0);
      
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("LHA", ontologyTerm1.getOntologyName());
      assertEquals(0, ontologyTerm1.getIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertEquals("", ontologyTerm1.getDescription());
      assertEquals("0", ontologyTerm1.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm1.getTerm());
      assertTrue(ontologyTerm1.isNewRecord());
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm2));
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm0));
      assertNotSame(ontologyTerm1, ontologyTerm2);
      assertNotSame(ontologyTerm1, ontologyTerm0);
      
      derivedVariable0.setFilePath("");
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
      
      derivedVariable0.setForm("");
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
      
      boolean boolean1 = derivedVariable0.isNewRecord();
      assertFalse(boolean1);
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertTrue(boolean1 == boolean0);
      
      derivedVariable0.setCategory("");
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.292449107659739
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getAlias());
      assertNotNull(rawVariable0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertNotNull(derivedVariable0);
      
      ValueLabel valueLabel0 = new ValueLabel();
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
      assertEquals("", valueLabel0.getValue());
      assertFalse(valueLabel0.isMissingValue());
      assertEquals(ValueLabel.EditingOperationType.NEW, valueLabel0.getEditingOperationType());
      assertEquals(0, valueLabel0.getIdentifier());
      assertFalse(valueLabel0.isEditingExistingRecord());
      assertTrue(valueLabel0.isNewRecord());
      assertFalse(valueLabel0.isDeletedNewRecord());
      assertFalse(valueLabel0.isDeletedRecord());
      assertEquals("", valueLabel0.getLabel());
      assertNotNull(valueLabel0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertNotNull(ontologyTerm0);
      
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      
      derivedVariable0.setName("9IdN#Dfq");
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("9IdN#Dfq", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("9IdN#Dfq", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      
      User user0 = new User("nCK;]^!BD%", "4;$&.Izw");
      assertEquals(0, user0.getIdentifier());
      assertEquals("nCK;]^!BD%", user0.getDisplayName());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("4;$&.Izw", user0.getPassword());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getAddressLine2());
      assertEquals("nCK;]^!BD%", user0.getUserID());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getCity());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getPostCode());
      assertNotNull(user0);
      
      User user1 = (User)user0.clone();
      assertEquals(0, user0.getIdentifier());
      assertEquals("nCK;]^!BD%", user0.getDisplayName());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("4;$&.Izw", user0.getPassword());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getAddressLine2());
      assertEquals("nCK;]^!BD%", user0.getUserID());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getCity());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getPostCode());
      assertEquals("", user1.getEmail());
      assertEquals("", user1.getCounty());
      assertEquals("UNVERIFIED", user1.getStatus());
      assertEquals("4;$&.Izw", user1.getPassword());
      assertEquals("", user1.getFirstName());
      assertEquals("", user1.getPostCode());
      assertEquals("", user1.getCity());
      assertEquals("nCK;]^!BD%", user1.getUserID());
      assertEquals(0, user1.getIdentifier());
      assertEquals("", user1.getAddressLine2());
      assertEquals("0", user1.getDisplayItemIdentifier());
      assertEquals("nCK;]^!BD%", user1.getDisplayName());
      assertEquals("", user1.getAffiliation());
      assertEquals("", user1.getPhone());
      assertEquals("", user1.getLastName());
      assertEquals("", user1.getAddressLine1());
      assertNotNull(user1);
      assertFalse(user1.equals((Object)user0));
      assertNotSame(user0, user1);
      assertNotSame(user1, user0);
      
      ArrayList<MacawChangeEvent> arrayList0 = ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
      assertEquals("", valueLabel0.getValue());
      assertFalse(valueLabel0.isMissingValue());
      assertEquals(ValueLabel.EditingOperationType.NEW, valueLabel0.getEditingOperationType());
      assertEquals(0, valueLabel0.getIdentifier());
      assertFalse(valueLabel0.isEditingExistingRecord());
      assertTrue(valueLabel0.isNewRecord());
      assertFalse(valueLabel0.isDeletedNewRecord());
      assertFalse(valueLabel0.isDeletedRecord());
      assertEquals("", valueLabel0.getLabel());
      assertEquals(0, user0.getIdentifier());
      assertEquals("nCK;]^!BD%", user0.getDisplayName());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("4;$&.Izw", user0.getPassword());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getAddressLine2());
      assertEquals("nCK;]^!BD%", user0.getUserID());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getCity());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getPostCode());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      assertFalse(user0.equals((Object)user1));
      assertNotSame(user0, user1);
      
      derivedVariable0.setForm("4;$&.Izw");
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("9IdN#Dfq", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("4;$&.Izw", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("9IdN#Dfq", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      
      derivedVariable0.addValueLabel(valueLabel0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("9IdN#Dfq", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("4;$&.Izw", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("9IdN#Dfq", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
      assertEquals("", valueLabel0.getValue());
      assertFalse(valueLabel0.isMissingValue());
      assertEquals(ValueLabel.EditingOperationType.NEW, valueLabel0.getEditingOperationType());
      assertEquals(0, valueLabel0.getIdentifier());
      assertFalse(valueLabel0.isEditingExistingRecord());
      assertTrue(valueLabel0.isNewRecord());
      assertFalse(valueLabel0.isDeletedNewRecord());
      assertFalse(valueLabel0.isDeletedRecord());
      assertEquals("", valueLabel0.getLabel());
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getName());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getAlias());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getDisplayName());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertNotNull(rawVariable1);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertNotSame(rawVariable0, rawVariable1);
      assertNotSame(rawVariable1, rawVariable0);
      
      rawVariable0.setAlternativeVariable(derivedVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getAlias());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("9IdN#Dfq", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("4;$&.Izw", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("9IdN#Dfq", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getAlias());
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getAlias());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      assertFalse(arrayList1.contains(ontologyTerm0));
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      String string0 = rawVariable0.getDisplayName();
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getAlias());
      assertNotNull(string0);
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      rawVariable0.setForm("9IdN#Dfq");
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("9IdN#Dfq", rawVariable0.getForm());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getAlias());
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.4733407643129888
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertNotNull(rawVariable0);
      
      RawVariable rawVariable1 = new RawVariable();
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getYear());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getNotes());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertNotNull(rawVariable1);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      
      rawVariable0.setCodeBookNumber("");
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      rawVariable1.questionNumber = "";
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getYear());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getNotes());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getYear());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getNotes());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertNotSame(rawVariable0, rawVariable1);
      assertNotSame(rawVariable1, rawVariable0);
      
      String string0 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertNotNull(string0);
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      rawVariable0.removeOntologyTerms(arrayList0);
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      assertFalse(arrayList1.contains(""));
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      ArrayList<ValueLabel> arrayList2 = rawVariable0.getValueLabels();
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotNull(arrayList2);
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      ListIterator<ValueLabel> listIterator0 = arrayList2.listIterator();
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(listIterator0.hasNext());
      assertFalse(listIterator0.hasPrevious());
      assertNotNull(listIterator0);
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      ArrayList arrayList3 = (ArrayList)arrayList2.clone();
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotNull(arrayList3);
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      rawVariable1.setIdentifier(1);
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getYear());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals(1, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("1", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertNotSame(rawVariable1, rawVariable0);
      
      rawVariable1.setValueLabels(arrayList2);
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getYear());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals(1, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("1", rawVariable1.getDisplayItemIdentifier());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertNotSame(rawVariable0, rawVariable1);
      assertNotSame(rawVariable1, rawVariable0);
      
      rawVariable0.setAvailability("Unknown");
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      int int0 = rawVariable0.getIdentifier();
      assertEquals(0, int0);
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      int int1 = rawVariable1.getIdentifier();
      assertEquals(1, int1);
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getYear());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals(1, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("1", rawVariable1.getDisplayItemIdentifier());
      assertFalse(int1 == int0);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertNotSame(rawVariable1, rawVariable0);
      
      User user0 = new User("", "uBV7 lW|");
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals("uBV7 lW|", user0.getPassword());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getFirstName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertNotNull(user0);
      
      rawVariable0.setColumnEnd("Q8#GkaT=ukY6umXz");
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Q8#GkaT=ukY6umXz", rawVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      ArrayList<MacawChangeEvent> arrayList4 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Q8#GkaT=ukY6umXz", rawVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals("uBV7 lW|", user0.getPassword());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getFirstName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getYear());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals(1, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("1", rawVariable1.getDisplayItemIdentifier());
      assertEquals(1, arrayList4.size());
      assertFalse(arrayList4.isEmpty());
      assertNotNull(arrayList4);
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertNotSame(rawVariable0, rawVariable1);
      assertNotSame(rawVariable1, rawVariable0);
      
      rawVariable0.setCoded(false);
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Q8#GkaT=ukY6umXz", rawVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      rawVariable1.setAvailability("");
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getYear());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getName());
      assertEquals(1, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("1", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertNotSame(rawVariable1, rawVariable0);
      
      rawVariable1.setColumnEnd("");
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getYear());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getName());
      assertEquals(1, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("1", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertNotSame(rawVariable1, rawVariable0);
      
      RawVariable rawVariable2 = (RawVariable)rawVariable1.clone();
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getYear());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getName());
      assertEquals(1, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("1", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable2.isCoded());
      assertEquals("", rawVariable2.getNotes());
      assertEquals("", rawVariable2.getQuestionNumber());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals(1, rawVariable2.getIdentifier());
      assertEquals("", rawVariable2.getName());
      assertFalse(rawVariable2.isCleaned());
      assertEquals("", rawVariable2.getCleaningDescription());
      assertEquals("", rawVariable2.getColumnStart());
      assertEquals("", rawVariable2.getForm());
      assertEquals("", rawVariable2.getYear());
      assertEquals("", rawVariable2.getLabel());
      assertEquals("", rawVariable2.getColumnEnd());
      assertFalse(rawVariable2.isNewRecord());
      assertEquals("1", rawVariable2.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("", rawVariable2.getAvailability());
      assertEquals("", rawVariable2.getDisplayName());
      assertEquals("", rawVariable2.getCodeBookNumber());
      assertEquals("", rawVariable2.getFilePath());
      assertEquals("", rawVariable2.getAlias());
      assertNotNull(rawVariable2);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertFalse(rawVariable2.equals((Object)rawVariable0));
      assertFalse(rawVariable2.equals((Object)rawVariable1));
      assertNotSame(rawVariable1, rawVariable0);
      assertNotSame(rawVariable1, rawVariable2);
      assertNotSame(rawVariable2, rawVariable0);
      assertNotSame(rawVariable2, rawVariable1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.488327743368588
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getAlias());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertNotNull(rawVariable0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertNotNull(derivedVariable0);
      
      String string0 = derivedVariable0.getYear();
      assertEquals("", string0);
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertNotNull(string0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getDescription());
      assertNotNull(ontologyTerm0);
      
      ontologyTerm0.setNewRecord(false);
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertFalse(ontologyTerm0.isNewRecord());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getDescription());
      
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertFalse(ontologyTerm0.isNewRecord());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getDescription());
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      derivedVariable0.setSupportingDocuments(arrayList0);
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      ValueLabel valueLabel0 = new ValueLabel();
      assertTrue(valueLabel0.isNewRecord());
      assertEquals(0, valueLabel0.getIdentifier());
      assertFalse(valueLabel0.isDeletedRecord());
      assertEquals("", valueLabel0.getLabel());
      assertFalse(valueLabel0.isMissingValue());
      assertEquals(ValueLabel.EditingOperationType.NEW, valueLabel0.getEditingOperationType());
      assertFalse(valueLabel0.isDeletedNewRecord());
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
      assertEquals("", valueLabel0.getValue());
      assertFalse(valueLabel0.isEditingExistingRecord());
      assertNotNull(valueLabel0);
      
      derivedVariable0.addValueLabel(valueLabel0);
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertTrue(valueLabel0.isNewRecord());
      assertEquals(0, valueLabel0.getIdentifier());
      assertFalse(valueLabel0.isDeletedRecord());
      assertEquals("", valueLabel0.getLabel());
      assertFalse(valueLabel0.isMissingValue());
      assertEquals(ValueLabel.EditingOperationType.NEW, valueLabel0.getEditingOperationType());
      assertFalse(valueLabel0.isDeletedNewRecord());
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
      assertEquals("", valueLabel0.getValue());
      assertFalse(valueLabel0.isEditingExistingRecord());
      
      boolean boolean0 = derivedVariable0.isCoded();
      assertFalse(boolean0);
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      
      derivedVariable0.setCleaningStatus("[9t\"C,(FR^`gv>Y.t");
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("[9t\"C,(FR^`gv>Y.t", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      assertEquals("0", ontologyTerm1.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm1.getTerm());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertEquals(0, ontologyTerm1.getIdentifier());
      assertEquals("LHA", ontologyTerm1.getOntologyName());
      assertTrue(ontologyTerm1.isNewRecord());
      assertEquals("", ontologyTerm1.getDescription());
      assertNotNull(ontologyTerm1);
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm0));
      
      OntologyTerm ontologyTerm2 = (OntologyTerm)ontologyTerm1.clone();
      assertEquals("0", ontologyTerm1.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm1.getTerm());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertEquals(0, ontologyTerm1.getIdentifier());
      assertEquals("LHA", ontologyTerm1.getOntologyName());
      assertTrue(ontologyTerm1.isNewRecord());
      assertEquals("", ontologyTerm1.getDescription());
      assertEquals(0, ontologyTerm2.getIdentifier());
      assertEquals("LHA", ontologyTerm2.getOntologyName());
      assertEquals("", ontologyTerm2.getDescription());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm2.getNameSpace());
      assertEquals("0", ontologyTerm2.getDisplayItemIdentifier());
      assertTrue(ontologyTerm2.isNewRecord());
      assertEquals("", ontologyTerm2.getTerm());
      assertNotNull(ontologyTerm2);
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm0));
      assertFalse(ontologyTerm2.equals((Object)ontologyTerm1));
      assertFalse(ontologyTerm2.equals((Object)ontologyTerm0));
      assertNotSame(ontologyTerm1, ontologyTerm0);
      assertNotSame(ontologyTerm1, ontologyTerm2);
      assertNotSame(ontologyTerm2, ontologyTerm1);
      assertNotSame(ontologyTerm2, ontologyTerm0);
      
      ontologyTerm1.setIdentifier((-2730));
      assertEquals("", ontologyTerm1.getTerm());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertEquals("-2730", ontologyTerm1.getDisplayItemIdentifier());
      assertEquals("LHA", ontologyTerm1.getOntologyName());
      assertTrue(ontologyTerm1.isNewRecord());
      assertEquals((-2730), ontologyTerm1.getIdentifier());
      assertEquals("", ontologyTerm1.getDescription());
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm0));
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm2));
      assertNotSame(ontologyTerm1, ontologyTerm0);
      assertNotSame(ontologyTerm1, ontologyTerm2);
      
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("[9t\"C,(FR^`gv>Y.t", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", ontologyTerm1.getTerm());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertEquals("-2730", ontologyTerm1.getDisplayItemIdentifier());
      assertEquals("LHA", ontologyTerm1.getOntologyName());
      assertTrue(ontologyTerm1.isNewRecord());
      assertEquals((-2730), ontologyTerm1.getIdentifier());
      assertEquals("", ontologyTerm1.getDescription());
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm0));
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm2));
      assertNotSame(ontologyTerm1, ontologyTerm0);
      assertNotSame(ontologyTerm1, ontologyTerm2);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getFilePath());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertNotNull(derivedVariable1);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      
      derivedVariable1.setFilePath("GBN_");
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("GBN_", derivedVariable1.getFilePath());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertNotSame(derivedVariable1, derivedVariable0);
      
      derivedVariable1.setForm("GBN_");
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("GBN_", derivedVariable1.getForm());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("GBN_", derivedVariable1.getFilePath());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertNotSame(derivedVariable1, derivedVariable0);
      
      boolean boolean1 = derivedVariable0.isNewRecord();
      assertFalse(boolean1);
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("[9t\"C,(FR^`gv>Y.t", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertTrue(boolean1 == boolean0);
      assertNotSame(derivedVariable0, derivedVariable1);
      
      derivedVariable1.setCategory("blank");
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("blank", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("GBN_", derivedVariable1.getForm());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("GBN_", derivedVariable1.getFilePath());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertNotSame(derivedVariable1, derivedVariable0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.3938506685577265
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertNotNull(rawVariable0);
      
      rawVariable0.setColumnEnd("g|");
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("g|", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getAlias());
      
      rawVariable0.setAlias("UR6FSpO");
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("UR6FSpO", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("g|", rawVariable0.getColumnEnd());
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("UR6FSpO", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("g|", rawVariable0.getColumnEnd());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getName());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getLabel());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("g|", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getYear());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("UR6FSpO", rawVariable1.getAlias());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertNotNull(rawVariable1);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertNotSame(rawVariable0, rawVariable1);
      assertNotSame(rawVariable1, rawVariable0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertNotNull(ontologyTerm0);
      
      rawVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("UR6FSpO", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("g|", rawVariable0.getColumnEnd());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      User user0 = new User("g|", "UR6FSpO");
      assertEquals("", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getAddressLine1());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getAddressLine2());
      assertEquals("g|", user0.getDisplayName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("UR6FSpO", user0.getPassword());
      assertEquals("g|", user0.getUserID());
      assertNotNull(user0);
      
      user0.setAffiliation("UR6FSpO");
      assertEquals("", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("UR6FSpO", user0.getAffiliation());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getAddressLine1());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getAddressLine2());
      assertEquals("g|", user0.getDisplayName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("UR6FSpO", user0.getPassword());
      assertEquals("g|", user0.getUserID());
      
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("UR6FSpO", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("g|", rawVariable0.getColumnEnd());
      assertEquals("", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("UR6FSpO", user0.getAffiliation());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getAddressLine1());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getAddressLine2());
      assertEquals("g|", user0.getDisplayName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("UR6FSpO", user0.getPassword());
      assertEquals("g|", user0.getUserID());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getForm());
      assertNotNull(derivedVariable0);
      
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("UR6FSpO", user0.getAffiliation());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getAddressLine1());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getAddressLine2());
      assertEquals("g|", user0.getDisplayName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("UR6FSpO", user0.getPassword());
      assertEquals("g|", user0.getUserID());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getForm());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertNotSame(arrayList1, arrayList0);
      
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("UR6FSpO", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("g|", rawVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getForm());
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.4036404106149494
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertNotNull(rawVariable0);
      
      String string0 = rawVariable0.getLabel();
      assertEquals("", string0);
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertNotNull(string0);
      
      User user0 = new User("user.passwor.saveChanges", "&i}5<bMc%s");
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCounty());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getPhone());
      assertEquals("user.passwor.saveChanges", user0.getUserID());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("&i}5<bMc%s", user0.getPassword());
      assertEquals("user.passwor.saveChanges", user0.getDisplayName());
      assertNotNull(user0);
      
      user0.setStatus("&i}5<bMc%s");
      assertEquals(0, user0.getIdentifier());
      assertEquals("&i}5<bMc%s", user0.getStatus());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getPhone());
      assertEquals("user.passwor.saveChanges", user0.getUserID());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("&i}5<bMc%s", user0.getPassword());
      assertEquals("user.passwor.saveChanges", user0.getDisplayName());
      
      user0.setCity("2hdKcER,W");
      assertEquals(0, user0.getIdentifier());
      assertEquals("&i}5<bMc%s", user0.getStatus());
      assertEquals("2hdKcER,W", user0.getCity());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getPhone());
      assertEquals("user.passwor.saveChanges", user0.getUserID());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("&i}5<bMc%s", user0.getPassword());
      assertEquals("user.passwor.saveChanges", user0.getDisplayName());
      
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals(0, user0.getIdentifier());
      assertEquals("&i}5<bMc%s", user0.getStatus());
      assertEquals("2hdKcER,W", user0.getCity());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getPhone());
      assertEquals("user.passwor.saveChanges", user0.getUserID());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("&i}5<bMc%s", user0.getPassword());
      assertEquals("user.passwor.saveChanges", user0.getDisplayName());
      assertEquals("user.passwor.saveChanges", macawChangeEvent0.getUserID());
      assertEquals(ChangeEventType.VARIABLE, macawChangeEvent0.getChangeType());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains("&i}5<bMc%s"));
      
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFilePath());
      assertNotNull(supportingDocument0);
      
      boolean boolean0 = arrayList1.add(supportingDocument0);
      assertTrue(boolean0);
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFilePath());
      assertTrue(arrayList1.contains(supportingDocument0));
      
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.129781002319465
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertNotNull(rawVariable0);
      
      String string0 = rawVariable0.getLabel();
      assertEquals("", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertNotNull(string0);
      
      User user0 = new User("", "&i}5<bMc%s");
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("&i}5<bMc%s", user0.getPassword());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getPhone());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPostCode());
      assertNotNull(user0);
      
      user0.setCity("2hdKcER,W");
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("&i}5<bMc%s", user0.getPassword());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getPhone());
      assertEquals("2hdKcER,W", user0.getCity());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getPostCode());
      
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("&i}5<bMc%s", user0.getPassword());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getPhone());
      assertEquals("2hdKcER,W", user0.getCity());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getPostCode());
      assertEquals("", macawChangeEvent0.getUserID());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals(ChangeEventType.VARIABLE, macawChangeEvent0.getChangeType());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(string0));
      
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      rawVariable0.removeSupportingDocuments(arrayList1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      String string1 = rawVariable0.getAlias();
      assertEquals("", string1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertNotNull(string1);
      
      String string2 = rawVariable0.getLabel();
      assertEquals("", string2);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertNotNull(string2);
      
      rawVariable0.setCleaningStatus("ontologyTerm.term.label");
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("ontologyTerm.term.label", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getForm());
      assertNotNull(derivedVariable0);
      
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getForm());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertNotSame(arrayList2, arrayList1);
      
      rawVariable0.addSupportingDocuments(arrayList2);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("ontologyTerm.term.label", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getForm());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertNotSame(arrayList2, arrayList1);
      
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotNull(arrayList3);
      
      derivedVariable0.removeSourceVariables(arrayList3);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getForm());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      
      RawVariable rawVariable1 = new RawVariable();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getNotes());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getColumnEnd());
      assertNotNull(rawVariable1);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      
      ArrayList<MacawChangeEvent> arrayList4 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getNotes());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("ontologyTerm.term.label", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(arrayList4.isEmpty());
      assertEquals(1, arrayList4.size());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("&i}5<bMc%s", user0.getPassword());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getPhone());
      assertEquals("2hdKcER,W", user0.getCity());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getPostCode());
      assertNotNull(arrayList4);
      assertFalse(arrayList4.contains(macawChangeEvent0));
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable1, rawVariable0);
      assertNotSame(rawVariable0, rawVariable1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.401985104501782
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getAlias());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(derivedVariable0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getDescription());
      assertNotNull(ontologyTerm0);
      
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getAlias());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getDescription());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      assertEquals(0, ontologyTerm1.getIdentifier());
      assertEquals("", ontologyTerm1.getTerm());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertEquals("LHA", ontologyTerm1.getOntologyName());
      assertEquals("", ontologyTerm1.getDescription());
      assertTrue(ontologyTerm1.isNewRecord());
      assertEquals("0", ontologyTerm1.getDisplayItemIdentifier());
      assertNotNull(ontologyTerm1);
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm0));
      
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getAlias());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, ontologyTerm1.getIdentifier());
      assertEquals("", ontologyTerm1.getTerm());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertEquals("LHA", ontologyTerm1.getOntologyName());
      assertEquals("", ontologyTerm1.getDescription());
      assertTrue(ontologyTerm1.isNewRecord());
      assertEquals("0", ontologyTerm1.getDisplayItemIdentifier());
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm0));
      assertNotSame(ontologyTerm1, ontologyTerm0);
      
      User user0 = new User();
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getEmail());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getAffiliation());
      assertNotNull(user0);
      
      user0.setCity("VARIABLE");
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getEmail());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      assertEquals("VARIABLE", user0.getCity());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getAffiliation());
      
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getAlias());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains("VARIABLE"));
      
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getAlias());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getTitle());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertNotNull(supportingDocument0);
      
      boolean boolean1 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean1);
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getAlias());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getTitle());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertFalse(boolean1 == boolean0);
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      assertTrue(ontologyTerm2.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm2.getNameSpace());
      assertEquals("LHA", ontologyTerm2.getOntologyName());
      assertEquals(0, ontologyTerm2.getIdentifier());
      assertEquals("", ontologyTerm2.getTerm());
      assertEquals("0", ontologyTerm2.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm2.getDescription());
      assertNotNull(ontologyTerm2);
      assertFalse(ontologyTerm2.equals((Object)ontologyTerm1));
      assertFalse(ontologyTerm2.equals((Object)ontologyTerm0));
      
      boolean boolean2 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean2);
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getAlias());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertTrue(ontologyTerm2.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm2.getNameSpace());
      assertEquals("LHA", ontologyTerm2.getOntologyName());
      assertEquals(0, ontologyTerm2.getIdentifier());
      assertEquals("", ontologyTerm2.getTerm());
      assertEquals("0", ontologyTerm2.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm2.getDescription());
      assertFalse(ontologyTerm2.equals((Object)ontologyTerm1));
      assertFalse(ontologyTerm2.equals((Object)ontologyTerm0));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertNotSame(ontologyTerm2, ontologyTerm1);
      assertNotSame(ontologyTerm2, ontologyTerm0);
      
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertNotNull(rawVariable0);
      
      ArrayList<MacawChangeEvent> arrayList2 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getEmail());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      assertEquals("VARIABLE", user0.getCity());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getAffiliation());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotNull(arrayList3);
      
      derivedVariable0.setSourceVariables(arrayList3);
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getAlias());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.292449107659739
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertNotNull(rawVariable0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getAlias());
      assertNotNull(derivedVariable0);
      
      ValueLabel valueLabel0 = new ValueLabel();
      assertEquals(ValueLabel.EditingOperationType.NEW, valueLabel0.getEditingOperationType());
      assertFalse(valueLabel0.isDeletedNewRecord());
      assertFalse(valueLabel0.isDeletedRecord());
      assertFalse(valueLabel0.isEditingExistingRecord());
      assertEquals("", valueLabel0.getValue());
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
      assertFalse(valueLabel0.isMissingValue());
      assertEquals(0, valueLabel0.getIdentifier());
      assertEquals("", valueLabel0.getLabel());
      assertTrue(valueLabel0.isNewRecord());
      assertNotNull(valueLabel0);
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      derivedVariable0.setSupportingDocuments(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getAlias());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      ValueLabel valueLabel1 = new ValueLabel();
      assertEquals("", valueLabel1.getValue());
      assertEquals("0", valueLabel1.getDisplayItemIdentifier());
      assertEquals("", valueLabel1.getLabel());
      assertFalse(valueLabel1.isDeletedNewRecord());
      assertEquals(ValueLabel.EditingOperationType.NEW, valueLabel1.getEditingOperationType());
      assertFalse(valueLabel1.isDeletedRecord());
      assertFalse(valueLabel1.isMissingValue());
      assertFalse(valueLabel1.isEditingExistingRecord());
      assertTrue(valueLabel1.isNewRecord());
      assertEquals(0, valueLabel1.getIdentifier());
      assertNotNull(valueLabel1);
      assertFalse(valueLabel1.equals((Object)valueLabel0));
      
      derivedVariable0.addValueLabel(valueLabel0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals(ValueLabel.EditingOperationType.NEW, valueLabel0.getEditingOperationType());
      assertFalse(valueLabel0.isDeletedNewRecord());
      assertFalse(valueLabel0.isDeletedRecord());
      assertFalse(valueLabel0.isEditingExistingRecord());
      assertEquals("", valueLabel0.getValue());
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
      assertFalse(valueLabel0.isMissingValue());
      assertEquals(0, valueLabel0.getIdentifier());
      assertEquals("", valueLabel0.getLabel());
      assertTrue(valueLabel0.isNewRecord());
      assertFalse(valueLabel0.equals((Object)valueLabel1));
      assertNotSame(valueLabel0, valueLabel1);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getForm());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getAlias());
      assertNotNull(derivedVariable1);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      
      boolean boolean0 = derivedVariable1.isCoded();
      assertFalse(boolean0);
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getForm());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getAlias());
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertNotSame(derivedVariable1, derivedVariable0);
      
      derivedVariable0.setCleaningStatus("GBN_");
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("GBN_", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getAlias());
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertNotSame(derivedVariable0, derivedVariable1);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertNotNull(ontologyTerm0);
      
      OntologyTerm ontologyTerm1 = (OntologyTerm)ontologyTerm0.clone();
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertTrue(ontologyTerm1.isNewRecord());
      assertEquals("LHA", ontologyTerm1.getOntologyName());
      assertEquals(0, ontologyTerm1.getIdentifier());
      assertEquals("", ontologyTerm1.getTerm());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertEquals("0", ontologyTerm1.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm1.getDescription());
      assertNotNull(ontologyTerm1);
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm0));
      assertNotSame(ontologyTerm0, ontologyTerm1);
      assertNotSame(ontologyTerm1, ontologyTerm0);
      
      ontologyTerm0.setIdentifier(1289);
      assertEquals(1289, ontologyTerm0.getIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("", ontologyTerm0.getTerm());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("1289", ontologyTerm0.getDisplayItemIdentifier());
      assertFalse(ontologyTerm0.equals((Object)ontologyTerm1));
      assertNotSame(ontologyTerm0, ontologyTerm1);
      
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getForm());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals(1289, ontologyTerm0.getIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("", ontologyTerm0.getTerm());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("1289", ontologyTerm0.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertFalse(ontologyTerm0.equals((Object)ontologyTerm1));
      assertNotSame(derivedVariable1, derivedVariable0);
      assertNotSame(ontologyTerm0, ontologyTerm1);
      
      derivedVariable1.setFilePath("variable.alternativeVariable.label");
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getForm());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("variable.alternativeVariable.label", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getAlias());
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertNotSame(derivedVariable1, derivedVariable0);
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      assertEquals("", derivedVariable2.getName());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isCoded());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertEquals("", derivedVariable2.getNotes());
      assertEquals("", derivedVariable2.getColumnEnd());
      assertEquals("", derivedVariable2.getQuestionNumber());
      assertEquals("", derivedVariable2.getLabel());
      assertEquals("", derivedVariable2.getColumnStart());
      assertEquals("", derivedVariable2.getCleaningDescription());
      assertEquals("", derivedVariable2.getFilePath());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("", derivedVariable2.getCodeBookNumber());
      assertEquals("", derivedVariable2.getForm());
      assertEquals("", derivedVariable2.getDisplayName());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("", derivedVariable2.getYear());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("", derivedVariable2.getAlias());
      assertNotNull(derivedVariable2);
      assertFalse(derivedVariable2.equals((Object)derivedVariable1));
      assertFalse(derivedVariable2.equals((Object)derivedVariable0));
      
      derivedVariable2.setForm("");
      assertEquals("", derivedVariable2.getName());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isCoded());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertEquals("", derivedVariable2.getNotes());
      assertEquals("", derivedVariable2.getColumnEnd());
      assertEquals("", derivedVariable2.getQuestionNumber());
      assertEquals("", derivedVariable2.getLabel());
      assertEquals("", derivedVariable2.getColumnStart());
      assertEquals("", derivedVariable2.getCleaningDescription());
      assertEquals("", derivedVariable2.getFilePath());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("", derivedVariable2.getCodeBookNumber());
      assertEquals("", derivedVariable2.getForm());
      assertEquals("", derivedVariable2.getDisplayName());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("", derivedVariable2.getYear());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("", derivedVariable2.getAlias());
      assertFalse(derivedVariable2.equals((Object)derivedVariable1));
      assertFalse(derivedVariable2.equals((Object)derivedVariable0));
      assertNotSame(derivedVariable2, derivedVariable1);
      assertNotSame(derivedVariable2, derivedVariable0);
      
      boolean boolean1 = derivedVariable2.isNewRecord();
      assertFalse(boolean1);
      assertEquals("", derivedVariable2.getName());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isCoded());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertEquals("", derivedVariable2.getNotes());
      assertEquals("", derivedVariable2.getColumnEnd());
      assertEquals("", derivedVariable2.getQuestionNumber());
      assertEquals("", derivedVariable2.getLabel());
      assertEquals("", derivedVariable2.getColumnStart());
      assertEquals("", derivedVariable2.getCleaningDescription());
      assertEquals("", derivedVariable2.getFilePath());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("", derivedVariable2.getCodeBookNumber());
      assertEquals("", derivedVariable2.getForm());
      assertEquals("", derivedVariable2.getDisplayName());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("", derivedVariable2.getYear());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("", derivedVariable2.getAlias());
      assertTrue(boolean1 == boolean0);
      assertFalse(derivedVariable2.equals((Object)derivedVariable1));
      assertFalse(derivedVariable2.equals((Object)derivedVariable0));
      assertNotSame(derivedVariable2, derivedVariable1);
      assertNotSame(derivedVariable2, derivedVariable0);
      
      derivedVariable2.setCategory("GBN_");
      assertEquals("", derivedVariable2.getName());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isCoded());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertEquals("", derivedVariable2.getNotes());
      assertEquals("", derivedVariable2.getColumnEnd());
      assertEquals("", derivedVariable2.getQuestionNumber());
      assertEquals("", derivedVariable2.getLabel());
      assertEquals("", derivedVariable2.getColumnStart());
      assertEquals("", derivedVariable2.getCleaningDescription());
      assertEquals("", derivedVariable2.getFilePath());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("GBN_", derivedVariable2.getCategory());
      assertEquals("", derivedVariable2.getCodeBookNumber());
      assertEquals("", derivedVariable2.getForm());
      assertEquals("", derivedVariable2.getDisplayName());
      assertEquals("", derivedVariable2.getYear());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("", derivedVariable2.getAlias());
      assertFalse(derivedVariable2.equals((Object)derivedVariable1));
      assertFalse(derivedVariable2.equals((Object)derivedVariable0));
      assertNotSame(derivedVariable2, derivedVariable1);
      assertNotSame(derivedVariable2, derivedVariable0);
      
      User user0 = new User();
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getUserID());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCounty());
      assertNotNull(user0);
      
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getUserID());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCounty());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getForm());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("variable.alternativeVariable.label", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("", derivedVariable2.getName());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isCoded());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertEquals("", derivedVariable2.getNotes());
      assertEquals("", derivedVariable2.getColumnEnd());
      assertEquals("", derivedVariable2.getQuestionNumber());
      assertEquals("", derivedVariable2.getLabel());
      assertEquals("", derivedVariable2.getColumnStart());
      assertEquals("", derivedVariable2.getCleaningDescription());
      assertEquals("", derivedVariable2.getFilePath());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("GBN_", derivedVariable2.getCategory());
      assertEquals("", derivedVariable2.getCodeBookNumber());
      assertEquals("", derivedVariable2.getForm());
      assertEquals("", derivedVariable2.getDisplayName());
      assertEquals("", derivedVariable2.getYear());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("", derivedVariable2.getAlias());
      assertNotNull(arrayList1);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertFalse(derivedVariable1.equals((Object)derivedVariable2));
      assertFalse(derivedVariable2.equals((Object)derivedVariable1));
      assertFalse(derivedVariable2.equals((Object)derivedVariable0));
      assertNotSame(derivedVariable1, derivedVariable0);
      assertNotSame(derivedVariable1, derivedVariable2);
      assertNotSame(derivedVariable2, derivedVariable1);
      assertNotSame(derivedVariable2, derivedVariable0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.2994270309115614
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertNotNull(rawVariable0);
      
      String string0 = rawVariable0.getLabel();
      assertEquals("", string0);
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertNotNull(string0);
      
      RawVariable rawVariable1 = new RawVariable();
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getColumnStart());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getName());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getColumnEnd());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertNotNull(rawVariable1);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      
      User user0 = new User();
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getAffiliation());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getPhone());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertNotNull(user0);
      
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getAffiliation());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getPhone());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotSame(rawVariable0, rawVariable1);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertNotNull(derivedVariable0);
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable1.getName());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertNotNull(derivedVariable1);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertNotSame(derivedVariable0, derivedVariable1);
      assertNotSame(derivedVariable1, derivedVariable0);
      
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }
}
