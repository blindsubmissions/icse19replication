/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:36:12 GMT 2018
 */

package wheel.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStream;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;
import org.xmlpull.mxp1_serializer.MXSerializer;
import org.xmlpull.v1.XmlPullParserFactory;
import org.xmlpull.v1.XmlSerializer;
import org.xmlpull.v1.wrapper.XmlPullWrapperFactory;
import org.xmlpull.v1.wrapper.XmlSerializerWrapper;
import org.xmlpull.v1.wrapper.classic.StaticXmlSerializerWrapper;
import org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.CheckboxGroup;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Hidden;
import wheel.components.Image;
import wheel.components.Label;
import wheel.components.Link;
import wheel.components.NumberInput;
import wheel.components.Radio;
import wheel.components.Select;
import wheel.components.StandaloneComponent;
import wheel.components.Submit;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.TableRow;
import wheel.components.Text;
import wheel.components.TextArea;
import wheel.components.TextInput;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;
import wheel.util.InitialFieldValue;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Form form0 = new Form("BvyGDe8N>^Kv>x;");
      Form form1 = form0.addFormValidationError("reader used in parser must implement Cloneable!");
      DynamicSelectModel dynamicSelectModel0 = form1.selectModel();
      dynamicSelectModel0.collection("reader used in parser must implement Cloneable!");
      String string0 = "dt";
      Radio radio0 = new Radio(form1, "", "dt");
      ElExpression elExpression0 = new ElExpression("T3kt%K=");
      // Undeclared exception!
      try { 
        form0.pre((Object) elExpression0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "G`A{71(J|7oWi`U*";
      String string1 = "(=Kc5,Gz#(Q";
      TextInput textInput0 = new TextInput(errorPage0, "G`A{71(J|7oWi`U*", "(=Kc5,Gz#(Q");
      String string2 = "";
      // Undeclared exception!
      try { 
        textInput0.thead();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("9+''");
      String string0 = "";
      String string1 = "AS";
      Checkbox checkbox0 = new Checkbox(xmlEntityRef0, "", "AS");
      // Undeclared exception!
      try { 
        checkbox0.isInt();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "Kn4!kN[Za";
      Form form0 = new Form("Kn4!kN[Za");
      // Undeclared exception!
      try { 
        form0.noscript();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "cannot coerce Long to Integer since the value (";
      Form form0 = new Form("cannot coerce Long to Integer since the value (");
      String string1 = "Ovo+^h";
      // Undeclared exception!
      try { 
        form0.h3();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "strike";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("strike");
      NumberInput numberInput0 = new NumberInput(xmlEntityRef0, "?7", "?7");
      FileInput fileInput0 = new FileInput(numberInput0, "?7", "strike");
      // Undeclared exception!
      try { 
        numberInput0.dl();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      NumberInput numberInput0 = new NumberInput(errorPage0, "", "");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "Could not evaluate expression ";
      stringArray0[6] = "";
      numberInput0._setSubmitValue(stringArray0);
      FileInput fileInput0 = new FileInput(numberInput0, "", "");
      ElExpression elExpression0 = new ElExpression("");
      ElExpression elExpression1 = elExpression0.errorMessage("");
      fileInput0.setMetadataBind(elExpression1);
      XmlPullParserFactory xmlPullParserFactory0 = XmlPullParserFactory.newInstance();
      xmlPullParserFactory0.setNamespaceAware(false);
      XmlPullWrapperFactory xmlPullWrapperFactory0 = XmlPullWrapperFactory.newInstance(xmlPullParserFactory0);
      XmlSerializerWrapper xmlSerializerWrapper0 = xmlPullWrapperFactory0.newSerializerWrapper();
      // Undeclared exception!
      try { 
        numberInput0.renderComponent(xmlSerializerWrapper0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // startTag() must be called before attribute()
         //
         verifyException("org.xmlpull.mxp1_serializer.MXSerializer", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Component component0 = null;
      String string0 = "`~_e5J~},6M+4";
      Table table0 = null;
      try {
        table0 = new Table((Component) null, "`~_e5J~},6M+4");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "\"Rq.Shz[s-", "\"Rq.Shz[s-");
      String string0 = "N,#q[:#$n@^Pb}8K75";
      textInput0.value("N,#q[:#$n@^Pb}8K75");
      String string1 = "ckZjb:o^6San=U";
      String string2 = "when namespaces processing enabled colon can not be at element name start";
      // Undeclared exception!
      try { 
        textInput0.placeholder("when namespaces processing enabled colon can not be at element name start");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Form form0 = new Form("fieldset");
      Form form1 = form0.renderHint("fieldset");
      String string0 = "pXMyge<H&2Z?=w^>=";
      FileInput fileInput0 = new FileInput(form0, "pXMyge<H&2Z?=w^>=", "pXMyge<H&2Z?=w^>=");
      // Undeclared exception!
      try { 
        form1.addFormElement(fileInput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Form form0 = new Form("PPG@\"a!L%M1.#C)rq");
      TextArea textArea0 = new TextArea(form0, "PPG@\"a!L%M1.#C)rq", "\"");
      FormElement formElement0 = textArea0.value("");
      // Undeclared exception!
      try { 
        formElement0.htmlText((Object) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "DmH9?W#";
      Form form0 = new Form("DmH9?W#");
      String string1 = "0OyA\"";
      Form form1 = form0.addFormValidationError("0OyA\"");
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        form1.th();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Th component can be added only to a TableRow.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Component component0 = null;
      String string0 = "^r]JKY.";
      TextInput textInput0 = new TextInput((Component) null, "^r]JKY.", "^r]JKY.");
      String string1 = "6__/!,/uRD";
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string2 = null;
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection((String) null);
      dynamicSelectModel1.enumeration("6__/!,/uRD");
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        textInput0.param((CharSequence) null, (CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      NumberInput numberInput0 = null;
      try {
        numberInput0 = new NumberInput(xmlEntityRef0, (String) null, (String) null, (CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2290512419743322
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[1] = (Object) actionExpression0;
      objectArray0[2] = (Object) "vs!9j|4";
      objectArray0[3] = (Object) actionExpression0;
      objectArray0[4] = (Object) "vs!9j|4";
      objectArray0[5] = (Object) actionExpression0;
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      ActionExpression actionExpression3 = actionExpression2.event("vs!9j|4");
      Any any0 = new Any(errorPage0, actionExpression3);
      any0.defaultTagName();
      // Undeclared exception!
      try { 
        any0.address();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.544521737379147
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[1] = (Object) actionExpression0;
      objectArray0[2] = (Object) "vs!9j|4";
      objectArray0[3] = (Object) actionExpression0;
      objectArray0[4] = (Object) "vs!9j|4";
      objectArray0[5] = (Object) actionExpression0;
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      ActionExpression actionExpression3 = actionExpression2.event("vs!9j|4");
      Any any0 = new Any(errorPage0, actionExpression3);
      // Undeclared exception!
      try { 
        any0.form("vs!9j|4", actionExpression1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3662893177133646
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[1] = (Object) actionExpression0;
      objectArray0[2] = (Object) "vs!9j|4";
      objectArray0[3] = (Object) actionExpression0;
      objectArray0[4] = (Object) "vs!9j|4";
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      ActionExpression actionExpression3 = actionExpression2.event("vs!9j|4");
      Any any0 = new Any(errorPage0, actionExpression3);
      TableBlock tableBlock0 = new TableBlock(errorPage0, "could not determine namespace bound to attribute prefix ");
      // Undeclared exception!
      try { 
        tableBlock0.id("could not determine namespace bound to attribute prefix ");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[2] = (Object) "vs!9j|4";
      objectArray0[3] = (Object) actionExpression0;
      objectArray0[4] = (Object) "vs!9j|4";
      objectArray0[5] = (Object) actionExpression0;
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      actionExpression2.event("vs!9j|4");
      Integer integer0 = new Integer((-2588));
      Integer.divideUnsigned((-2588), (-1));
      TableBlock tableBlock0 = new TableBlock(errorPage0);
      TableRow tableRow0 = tableBlock0.tr();
      Block block0 = tableRow0.createTh();
      TextArea textArea0 = new TextArea(errorPage0, (String) null, (String) null);
      block0.p((Object) textArea0);
      assertTrue(block0._isGeneratedId());
      
      errorPage0.action("org.mvel.conversion.BigDecimalCH$9");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9251211907908183
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "EJME^][Ut6=S\"!\\&4Q";
      Form form0 = new Form("EJME^][Ut6=S\"!&4Q");
      assertEquals("EJME^][Ut6=S\"!&4Q", form0.getComponentId());
      assertEquals("form", form0.defaultTagName());
      assertFalse(form0._isBuilt());
      assertFalse(form0._isGeneratedId());
      assertNotNull(form0);
      
      String string1 = "? ~";
      Submit submit0 = new Submit(form0, "? ~", "? ~");
      assertEquals("EJME^][Ut6=S\"!&4Q", form0.getComponentId());
      assertEquals("form", form0.defaultTagName());
      assertFalse(form0._isBuilt());
      assertFalse(form0._isGeneratedId());
      assertTrue(submit0.isValid());
      assertEquals("input", submit0.defaultTagName());
      assertEquals("? ~", submit0.getComponentId());
      assertFalse(submit0._isGeneratedId());
      assertTrue(submit0.isEmpty());
      assertEquals("? ~", submit0.getFormElementName());
      assertNotNull(submit0);
      
      MXSerializer mXSerializer0 = new MXSerializer();
      assertNull(mXSerializer0.getName());
      assertEquals(0, mXSerializer0.getDepth());
      assertNull(mXSerializer0.getNamespace());
      assertNotNull(mXSerializer0);
      
      String string2 = "";
      // Undeclared exception!
      try { 
        submit0.h4((Object) "? ~");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertNotNull(errorPage0);
      
      String string0 = "vs\\!9j|4";
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getEvent());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[1] = (Object) actionExpression0;
      objectArray0[2] = (Object) "vs!9j|4";
      objectArray0[3] = (Object) actionExpression0;
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getEvent());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertFalse(actionExpression1.isExternalUrl());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertFalse(actionExpression1.isSubmissible());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals(7, actionExpression1.length());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression0.submissible(false);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression1);
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getEvent());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertFalse(actionExpression2.isSubmissible());
      assertNull(actionExpression2.getEvent());
      assertEquals(7, actionExpression2.length());
      assertFalse(actionExpression2.isExternalUrl());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertNotNull(actionExpression2);
      
      ActionExpression actionExpression3 = actionExpression1.event("vs!9j|4");
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression3, actionExpression2);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression0);
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertFalse(actionExpression1.isSubmissible());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertNull(actionExpression3.getJavascript());
      assertFalse(actionExpression3.isExternalUrl());
      assertFalse(actionExpression3.isSubmissible());
      assertEquals(7, actionExpression3.length());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertNotNull(actionExpression3);
      
      Any any0 = new Any(errorPage0, actionExpression0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(any0._isGeneratedId());
      assertEquals("Any_1", any0.getComponentId());
      assertNull(any0.defaultTagName());
      assertNotNull(any0);
      
      // Undeclared exception!
      try { 
        any0.ins(objectArray0[0]);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertFalse(errorPage0._isBuilt());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(errorPage0.isPage());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertFalse(actionExpression0.isSubmissible());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals(7, actionExpression0.length());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[1] = (Object) actionExpression0;
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(5, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertFalse(actionExpression0.isSubmissible());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression1.isSubmissible());
      assertEquals(7, actionExpression1.length());
      assertNull(actionExpression1.getEvent());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      assertEquals(5, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression1);
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals(7, actionExpression1.length());
      assertNull(actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertFalse(actionExpression2.isExternalUrl());
      assertNull(actionExpression2.getEvent());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals(7, actionExpression2.length());
      assertTrue(actionExpression2.isSubmissible());
      assertNotNull(actionExpression2);
      
      ActionExpression actionExpression3 = actionExpression1.event("69");
      assertEquals(5, objectArray0.length);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression3, actionExpression2);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("69", actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals(7, actionExpression1.length());
      assertEquals("69", actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertFalse(actionExpression3.isExternalUrl());
      assertNull(actionExpression3.getJavascript());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertEquals("69", actionExpression3.getEvent());
      assertEquals(7, actionExpression3.length());
      assertTrue(actionExpression3.isSubmissible());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertNotNull(actionExpression3);
      
      Any any0 = new Any(errorPage0, actionExpression1);
      assertEquals(5, objectArray0.length);
      assertFalse(errorPage0._isBuilt());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(errorPage0.isPage());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("69", actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals(7, actionExpression1.length());
      assertEquals("69", actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertNotNull(any0);
      
      String string0 = any0.defaultTagName();
      assertEquals(5, objectArray0.length);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertFalse(errorPage0._isBuilt());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(errorPage0.isPage());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("69", actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals(7, actionExpression1.length());
      assertEquals("69", actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertNull(string0);
      
      // Undeclared exception!
      try { 
        any0.span((Object) actionExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.43324126121961
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertFalse(actionExpression0.isSubmissible());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[6];
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertFalse(actionExpression0.isSubmissible());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertFalse(actionExpression1.isSubmissible());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertTrue(actionExpression1.isSubmissible());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertTrue(actionExpression2.isSubmissible());
      assertFalse(actionExpression2.isExternalUrl());
      assertNull(actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals(7, actionExpression2.length());
      assertNotNull(actionExpression2);
      
      ActionExpression actionExpression3 = actionExpression2.event("vs!9j|4");
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression2);
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertTrue(actionExpression1.isSubmissible());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertTrue(actionExpression2.isSubmissible());
      assertFalse(actionExpression2.isExternalUrl());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals(7, actionExpression2.length());
      assertNull(actionExpression3.getJavascript());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertTrue(actionExpression3.isSubmissible());
      assertFalse(actionExpression3.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertEquals(7, actionExpression3.length());
      assertNotNull(actionExpression3);
      
      ActionExpression actionExpression4 = actionExpression2.event((String) null);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression4);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression4);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression4);
      assertSame(actionExpression4, actionExpression3);
      assertSame(actionExpression4, actionExpression1);
      assertSame(actionExpression4, actionExpression0);
      assertSame(actionExpression4, actionExpression2);
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertTrue(actionExpression1.isSubmissible());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertTrue(actionExpression2.isSubmissible());
      assertFalse(actionExpression2.isExternalUrl());
      assertNull(actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals(7, actionExpression2.length());
      assertTrue(actionExpression4.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression4.getExpression());
      assertNull(actionExpression4.getJavascript());
      assertEquals("vs!9j|4", actionExpression4.toString());
      assertFalse(actionExpression4.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression4.getActionExpression());
      assertTrue(actionExpression4.isSubmissible());
      assertNull(actionExpression4.getEvent());
      assertEquals(7, actionExpression4.length());
      assertNotNull(actionExpression4);
      
      Any any0 = new Any(errorPage0, "vs!9j|4");
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertEquals("Any_1", any0.getComponentId());
      assertNotNull(any0);
      
      String string0 = any0.defaultTagName();
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertEquals("Any_1", any0.getComponentId());
      assertNull(string0);
      
      Block block0 = (Block)errorPage0.i();
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", block0.defaultTagName());
      assertEquals("Block_1", block0.getComponentId());
      assertTrue(block0._isGeneratedId());
      assertNotNull(block0);
      
      Table table0 = new Table(block0, ">VH_)ETr2`I!Cl3,'");
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", block0.defaultTagName());
      assertEquals("Block_1", block0.getComponentId());
      assertTrue(block0._isGeneratedId());
      assertEquals("table", table0.defaultTagName());
      assertFalse(table0._isGeneratedId());
      assertEquals(">VH_)ETr2`I!Cl3,'", table0.getComponentId());
      assertNotNull(table0);
      
      Table table1 = table0.renderHint((CharSequence) null);
      assertSame(table0, table1);
      assertSame(table1, table0);
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", block0.defaultTagName());
      assertEquals("Block_1", block0.getComponentId());
      assertTrue(block0._isGeneratedId());
      assertEquals("table", table0.defaultTagName());
      assertFalse(table0._isGeneratedId());
      assertEquals(">VH_)ETr2`I!Cl3,'", table0.getComponentId());
      assertEquals("table", table1.defaultTagName());
      assertEquals(">VH_)ETr2`I!Cl3,'", table1.getComponentId());
      assertFalse(table1._isGeneratedId());
      assertNotNull(table1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNull(actionExpression0.getEvent());
      assertFalse(actionExpression0.isExternalUrl());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[1] = (Object) actionExpression0;
      objectArray0[2] = (Object) "vs!9j|4";
      objectArray0[3] = (Object) actionExpression0;
      objectArray0[4] = (Object) "vs!9j|4";
      objectArray0[5] = (Object) actionExpression0;
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNull(actionExpression0.getEvent());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals(7, actionExpression1.length());
      assertFalse(actionExpression1.isExternalUrl());
      assertFalse(actionExpression1.isSubmissible());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getJavascript());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNull(actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression1.isSubmissible());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals(7, actionExpression1.length());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertNull(actionExpression2.getEvent());
      assertEquals(7, actionExpression2.length());
      assertFalse(actionExpression2.isExternalUrl());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertNotNull(actionExpression2);
      
      ActionExpression actionExpression3 = actionExpression2.event("vs!9j|4");
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression2);
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getJavascript());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals(7, actionExpression1.length());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals(7, actionExpression2.length());
      assertFalse(actionExpression2.isExternalUrl());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertTrue(actionExpression3.isSubmissible());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals(7, actionExpression3.length());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertFalse(actionExpression3.isExternalUrl());
      assertNull(actionExpression3.getJavascript());
      assertNotNull(actionExpression3);
      
      Any any0 = new Any(errorPage0, actionExpression3);
      assertEquals(6, objectArray0.length);
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getJavascript());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals(7, actionExpression1.length());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals(7, actionExpression2.length());
      assertFalse(actionExpression2.isExternalUrl());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertTrue(actionExpression3.isSubmissible());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals(7, actionExpression3.length());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertFalse(actionExpression3.isExternalUrl());
      assertNull(actionExpression3.getJavascript());
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertEquals("Any_1", any0.getComponentId());
      assertNotNull(any0);
      
      String string0 = any0.defaultTagName();
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression2);
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getJavascript());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals(7, actionExpression1.length());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals(7, actionExpression2.length());
      assertFalse(actionExpression2.isExternalUrl());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertTrue(actionExpression3.isSubmissible());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals(7, actionExpression3.length());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertFalse(actionExpression3.isExternalUrl());
      assertNull(actionExpression3.getJavascript());
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertEquals("Any_1", any0.getComponentId());
      assertNull(string0);
      
      // Undeclared exception!
      try { 
        any0.sup();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertNotNull(errorPage0);
      
      String string0 = "C:T";
      NumberInput numberInput0 = new NumberInput(errorPage0, "C:T", "*");
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(numberInput0.isEmpty());
      assertTrue(numberInput0.isValid());
      assertEquals("*", numberInput0.getComponentId());
      assertEquals("C:T", numberInput0.getFormElementName());
      assertEquals("input", numberInput0.defaultTagName());
      assertFalse(numberInput0._isGeneratedId());
      assertNotNull(numberInput0);
      
      ActionExpression actionExpression0 = new ActionExpression("<!DOCTYPE");
      assertFalse(actionExpression0.isSubmissible());
      assertEquals(9, actionExpression0.length());
      assertNull(actionExpression0.getJavascript());
      assertEquals("<!DOCTYPE", actionExpression0.toString());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertNull(actionExpression0.getEvent());
      assertEquals("<!DOCTYPE", actionExpression0.getExpression());
      assertEquals("<!DOCTYPE", actionExpression0.getActionExpression());
      assertNotNull(actionExpression0);
      
      String string1 = "";
      // Undeclared exception!
      try { 
        numberInput0.numberInput("C:T", (CharSequence) "<!DOCTYPE");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertFalse(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals(7, actionExpression0.length());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[6];
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertFalse(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals(7, actionExpression0.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertFalse(actionExpression1.isSubmissible());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertNull(actionExpression1.getEvent());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression0.submissible(true);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals(7, actionExpression0.length());
      assertTrue(actionExpression0.isSubmissible());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertTrue(actionExpression2.isSubmissible());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals(7, actionExpression2.length());
      assertNull(actionExpression2.getEvent());
      assertNull(actionExpression2.getJavascript());
      assertNotNull(actionExpression2);
      
      ActionExpression actionExpression3 = actionExpression1.event((String) null);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression3, actionExpression2);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals(7, actionExpression0.length());
      assertTrue(actionExpression0.isSubmissible());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals(7, actionExpression1.length());
      assertTrue(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertTrue(actionExpression3.isSubmissible());
      assertFalse(actionExpression3.isExternalUrl());
      assertNull(actionExpression3.getEvent());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertEquals(7, actionExpression3.length());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertNull(actionExpression3.getJavascript());
      assertNotNull(actionExpression3);
      
      ActionExpression actionExpression4 = actionExpression1.event("q'-3X~bIu\"d1\u0003y");
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression4);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression4);
      assertSame(actionExpression4, actionExpression0);
      assertSame(actionExpression4, actionExpression1);
      assertSame(actionExpression4, actionExpression3);
      assertSame(actionExpression4, actionExpression2);
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("q'-3X~bIu\"d1\u0003y", actionExpression0.getEvent());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals(7, actionExpression0.length());
      assertTrue(actionExpression0.isSubmissible());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("q'-3X~bIu\"d1\u0003y", actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals(7, actionExpression1.length());
      assertTrue(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertNull(actionExpression4.getJavascript());
      assertEquals("vs!9j|4", actionExpression4.toString());
      assertEquals(7, actionExpression4.length());
      assertTrue(actionExpression4.isSubmissible());
      assertFalse(actionExpression4.isExternalUrl());
      assertTrue(actionExpression4.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression4.getExpression());
      assertEquals("q'-3X~bIu\"d1\u0003y", actionExpression4.getEvent());
      assertEquals("vs!9j|4", actionExpression4.getActionExpression());
      assertNotNull(actionExpression4);
      
      Any any0 = new Any(errorPage0, actionExpression0);
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("q'-3X~bIu\"d1\u0003y", actionExpression0.getEvent());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals(7, actionExpression0.length());
      assertTrue(actionExpression0.isSubmissible());
      assertNull(any0.defaultTagName());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNotNull(any0);
      
      String string0 = any0.defaultTagName();
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression4);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("q'-3X~bIu\"d1\u0003y", actionExpression0.getEvent());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals(7, actionExpression0.length());
      assertTrue(actionExpression0.isSubmissible());
      assertNull(any0.defaultTagName());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(string0);
      
      Block block0 = (Block)errorPage0.i();
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", block0.defaultTagName());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertNotNull(block0);
      
      FileInput fileInput0 = new FileInput(any0, (String) null, "q'-3X~bIu\"d1\u0003y");
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("q'-3X~bIu\"d1\u0003y", actionExpression0.getEvent());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals(7, actionExpression0.length());
      assertTrue(actionExpression0.isSubmissible());
      assertNull(any0.defaultTagName());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(fileInput0.getFormElementName());
      assertEquals(1000, fileInput0.getMaxMemoryFileSize());
      assertFalse(fileInput0._isGeneratedId());
      assertEquals("q'-3X~bIu\"d1\u0003y", fileInput0.getComponentId());
      assertEquals("/tmp", fileInput0.getTempFileLocation());
      assertEquals(1000, fileInput0.getMaxRequestSize());
      assertTrue(fileInput0.isEmpty());
      assertEquals("input", fileInput0.defaultTagName());
      assertTrue(fileInput0.isValid());
      assertNotNull(fileInput0);
      
      ElExpression elExpression0 = new ElExpression("vs!9j|4");
      assertEquals("vs!9j|4", elExpression0.toString());
      assertEquals(7, elExpression0.length());
      assertEquals("vs!9j|4", elExpression0.getExpression());
      assertNotNull(elExpression0);
      
      fileInput0.setMetadataBind(elExpression0);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression4);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("q'-3X~bIu\"d1\u0003y", actionExpression0.getEvent());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals(7, actionExpression0.length());
      assertTrue(actionExpression0.isSubmissible());
      assertNull(any0.defaultTagName());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(fileInput0.getFormElementName());
      assertEquals(1000, fileInput0.getMaxMemoryFileSize());
      assertFalse(fileInput0._isGeneratedId());
      assertEquals("q'-3X~bIu\"d1\u0003y", fileInput0.getComponentId());
      assertEquals("/tmp", fileInput0.getTempFileLocation());
      assertEquals(1000, fileInput0.getMaxRequestSize());
      assertTrue(fileInput0.isEmpty());
      assertEquals("input", fileInput0.defaultTagName());
      assertTrue(fileInput0.isValid());
      assertEquals("vs!9j|4", elExpression0.toString());
      assertEquals(7, elExpression0.length());
      assertEquals("vs!9j|4", elExpression0.getExpression());
      
      // Undeclared exception!
      try { 
        errorPage0.frame("q'-3X~bIu\"d1\u0003y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertEquals(7, actionExpression0.length());
      assertFalse(actionExpression0.isSubmissible());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[1] = (Object) actionExpression0;
      objectArray0[2] = (Object) "vs!9j|4";
      objectArray0[3] = (Object) actionExpression0;
      objectArray0[4] = (Object) "vs!9j|4";
      objectArray0[5] = (Object) actionExpression0;
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertEquals(7, actionExpression0.length());
      assertFalse(actionExpression0.isSubmissible());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertFalse(actionExpression1.isSubmissible());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression1.isExternalUrl());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression1.length());
      assertTrue(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression1.isExternalUrl());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertNull(actionExpression2.getEvent());
      assertEquals(7, actionExpression2.length());
      assertFalse(actionExpression2.isExternalUrl());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertNotNull(actionExpression2);
      
      ActionExpression actionExpression3 = actionExpression2.event("vs!9j|4");
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression2);
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals(7, actionExpression2.length());
      assertFalse(actionExpression2.isExternalUrl());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertTrue(actionExpression3.isSubmissible());
      assertFalse(actionExpression3.isExternalUrl());
      assertEquals(7, actionExpression3.length());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertNull(actionExpression3.getJavascript());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertNotNull(actionExpression3);
      
      ActionExpression actionExpression4 = actionExpression3.setOwner(errorPage0);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression4);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression1, actionExpression4);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression2, actionExpression4);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression2);
      assertSame(actionExpression3, actionExpression4);
      assertSame(actionExpression4, actionExpression3);
      assertSame(actionExpression4, actionExpression0);
      assertSame(actionExpression4, actionExpression2);
      assertSame(actionExpression4, actionExpression1);
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals("wheel_ErrorPage", actionExpression0.getSourceId());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("wheel_ErrorPage", actionExpression1.getSourceId());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals(7, actionExpression2.length());
      assertEquals("wheel_ErrorPage", actionExpression2.getSourceId());
      assertFalse(actionExpression2.isExternalUrl());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertTrue(actionExpression3.isSubmissible());
      assertFalse(actionExpression3.isExternalUrl());
      assertEquals(7, actionExpression3.length());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertNull(actionExpression3.getJavascript());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals("wheel_ErrorPage", actionExpression3.getSourceId());
      assertTrue(actionExpression4.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression4.getExpression());
      assertEquals("vs!9j|4", actionExpression4.getEvent());
      assertEquals("wheel_ErrorPage", actionExpression4.getSourceId());
      assertTrue(actionExpression4.isSubmissible());
      assertFalse(actionExpression4.isExternalUrl());
      assertNull(actionExpression4.getJavascript());
      assertEquals(7, actionExpression4.length());
      assertEquals("vs!9j|4", actionExpression4.toString());
      assertEquals("vs!9j|4", actionExpression4.getActionExpression());
      assertNotNull(actionExpression4);
      
      Any any0 = new Any(errorPage0, actionExpression3);
      assertEquals(6, objectArray0.length);
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals("wheel_ErrorPage", actionExpression0.getSourceId());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("wheel_ErrorPage", actionExpression1.getSourceId());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals(7, actionExpression2.length());
      assertEquals("wheel_ErrorPage", actionExpression2.getSourceId());
      assertFalse(actionExpression2.isExternalUrl());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertTrue(actionExpression3.isSubmissible());
      assertFalse(actionExpression3.isExternalUrl());
      assertEquals(7, actionExpression3.length());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertNull(actionExpression3.getJavascript());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals("wheel_ErrorPage", actionExpression3.getSourceId());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertNotNull(any0);
      
      Label label0 = (Label)errorPage0.dd(objectArray0[0]);
      assertEquals(6, objectArray0.length);
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
      assertEquals("Label_1", label0.getComponentId());
      assertEquals("span", label0.defaultTagName());
      assertNotNull(label0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertFalse(actionExpression0.isSubmissible());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[6];
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertFalse(actionExpression0.isSubmissible());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals(7, actionExpression1.length());
      assertNull(actionExpression1.getEvent());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals(7, actionExpression0.length());
      assertTrue(actionExpression0.isSubmissible());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals(7, actionExpression1.length());
      assertNull(actionExpression1.getEvent());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression2.isSubmissible());
      assertNull(actionExpression2.getEvent());
      assertEquals(7, actionExpression2.length());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertNull(actionExpression2.getJavascript());
      assertFalse(actionExpression2.isExternalUrl());
      assertNotNull(actionExpression2);
      
      ActionExpression actionExpression3 = actionExpression2.event("vs!9j|4");
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression2);
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals(7, actionExpression0.length());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertEquals(7, actionExpression2.length());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertNull(actionExpression2.getJavascript());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertNull(actionExpression3.getJavascript());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals(7, actionExpression3.length());
      assertTrue(actionExpression3.isSubmissible());
      assertFalse(actionExpression3.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertNotNull(actionExpression3);
      
      String string0 = null;
      ActionExpression actionExpression4 = actionExpression2.event((String) null);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression4);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression4);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression4);
      assertSame(actionExpression4, actionExpression0);
      assertSame(actionExpression4, actionExpression2);
      assertSame(actionExpression4, actionExpression1);
      assertSame(actionExpression4, actionExpression3);
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals(7, actionExpression0.length());
      assertTrue(actionExpression0.isSubmissible());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals(7, actionExpression1.length());
      assertNull(actionExpression1.getEvent());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression2.isSubmissible());
      assertNull(actionExpression2.getEvent());
      assertEquals(7, actionExpression2.length());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertNull(actionExpression2.getJavascript());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression4.getActionExpression());
      assertNull(actionExpression4.getEvent());
      assertEquals(7, actionExpression4.length());
      assertFalse(actionExpression4.isExternalUrl());
      assertTrue(actionExpression4.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression4.getExpression());
      assertNull(actionExpression4.getJavascript());
      assertTrue(actionExpression4.isSubmissible());
      assertEquals("vs!9j|4", actionExpression4.toString());
      assertNotNull(actionExpression4);
      
      Any any0 = new Any(errorPage0, "vs!9j|4");
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertNotNull(any0);
      
      String string1 = any0.defaultTagName();
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertNull(string1);
      
      Block block0 = (Block)errorPage0.i();
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertEquals("div", block0.defaultTagName());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertNotNull(block0);
      
      String string2 = "cite";
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      assertNotNull(dynamicSelectModel0);
      
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("cite");
      assertSame(dynamicSelectModel0, dynamicSelectModel1);
      assertSame(dynamicSelectModel1, dynamicSelectModel0);
      assertNotNull(dynamicSelectModel1);
      
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.enumeration("");
      assertSame(dynamicSelectModel0, dynamicSelectModel1);
      assertSame(dynamicSelectModel0, dynamicSelectModel2);
      assertSame(dynamicSelectModel1, dynamicSelectModel2);
      assertSame(dynamicSelectModel1, dynamicSelectModel0);
      assertSame(dynamicSelectModel2, dynamicSelectModel1);
      assertSame(dynamicSelectModel2, dynamicSelectModel0);
      assertNotNull(dynamicSelectModel2);
      
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef0.getComponentId());
      assertFalse(xmlEntityRef0._isGeneratedId());
      assertNull(xmlEntityRef0.defaultTagName());
      assertNotNull(xmlEntityRef0);
      
      Link link0 = new Link(block0, xmlEntityRef0);
      assertEquals("Link_1", link0.getComponentId());
      assertTrue(link0._isGeneratedId());
      assertEquals("a", link0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertEquals("div", block0.defaultTagName());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef0.getComponentId());
      assertFalse(xmlEntityRef0._isGeneratedId());
      assertNull(xmlEntityRef0.defaultTagName());
      assertNotNull(link0);
      
      InitialFieldValue initialFieldValue0 = new InitialFieldValue(link0, "");
      assertEquals("Link_1", link0.getComponentId());
      assertTrue(link0._isGeneratedId());
      assertEquals("a", link0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertEquals("", initialFieldValue0.getStringReplacement());
      assertEquals("div", block0.defaultTagName());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef0.getComponentId());
      assertFalse(xmlEntityRef0._isGeneratedId());
      assertNull(xmlEntityRef0.defaultTagName());
      assertNotNull(initialFieldValue0);
      
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.empty(initialFieldValue0);
      assertSame(dynamicSelectModel3, dynamicSelectModel1);
      assertSame(dynamicSelectModel3, dynamicSelectModel0);
      assertSame(dynamicSelectModel3, dynamicSelectModel2);
      assertSame(dynamicSelectModel0, dynamicSelectModel1);
      assertSame(dynamicSelectModel0, dynamicSelectModel3);
      assertSame(dynamicSelectModel0, dynamicSelectModel2);
      assertSame(dynamicSelectModel1, dynamicSelectModel2);
      assertSame(dynamicSelectModel1, dynamicSelectModel0);
      assertSame(dynamicSelectModel1, dynamicSelectModel3);
      assertSame(dynamicSelectModel2, dynamicSelectModel1);
      assertSame(dynamicSelectModel2, dynamicSelectModel3);
      assertSame(dynamicSelectModel2, dynamicSelectModel0);
      assertEquals("Link_1", link0.getComponentId());
      assertTrue(link0._isGeneratedId());
      assertEquals("a", link0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertEquals("", initialFieldValue0.getStringReplacement());
      assertEquals("div", block0.defaultTagName());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef0.getComponentId());
      assertFalse(xmlEntityRef0._isGeneratedId());
      assertNull(xmlEntityRef0.defaultTagName());
      assertNotNull(dynamicSelectModel3);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "cite";
      stringArray0[3] = "vs!9j|4";
      stringArray0[4] = "vs!9j|4";
      stringArray0[5] = "vs!9j|4";
      stringArray0[6] = null;
      stringArray0[7] = "cite";
      // Undeclared exception!
      try { 
        errorPage0.rollback(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4602362397253197
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[0] = (Object) errorPage0;
      Object object0 = new Object();
      assertNotNull(object0);
      
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "vs!9j|4";
      objectArray0[4] = (Object) "vs!9j|4";
      objectArray0[5] = (Object) errorPage0;
      objectArray0[6] = (Object) "vs!9j|4";
      objectArray0[7] = (Object) errorPage0;
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(8, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals(7, actionExpression1.length());
      assertFalse(actionExpression1.isSubmissible());
      assertNull(actionExpression1.getEvent());
      assertNull(actionExpression1.getJavascript());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      assertEquals(8, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression1);
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals(7, actionExpression1.length());
      assertNull(actionExpression1.getEvent());
      assertNull(actionExpression1.getJavascript());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression2.isSubmissible());
      assertNull(actionExpression2.getEvent());
      assertEquals(7, actionExpression2.length());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertNotNull(actionExpression2);
      
      ActionExpression actionExpression3 = actionExpression0.event("vs!9j|4");
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression2);
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertEquals(7, actionExpression3.length());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertTrue(actionExpression3.isSubmissible());
      assertNull(actionExpression3.getJavascript());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertFalse(actionExpression3.isExternalUrl());
      assertNotNull(actionExpression3);
      
      ActionExpression actionExpression4 = actionExpression1.event("vs!9j|4");
      assertEquals(8, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression4);
      assertSame(actionExpression1, actionExpression4);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression4, actionExpression1);
      assertSame(actionExpression4, actionExpression0);
      assertSame(actionExpression4, actionExpression2);
      assertSame(actionExpression4, actionExpression3);
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals(7, actionExpression1.length());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression4.getActionExpression());
      assertEquals(7, actionExpression4.length());
      assertTrue(actionExpression4.isSubmissible());
      assertEquals("vs!9j|4", actionExpression4.toString());
      assertEquals("vs!9j|4", actionExpression4.getEvent());
      assertEquals("vs!9j|4", actionExpression4.getExpression());
      assertNull(actionExpression4.getJavascript());
      assertFalse(actionExpression4.isExternalUrl());
      assertTrue(actionExpression4.isSubmitForm());
      assertNotNull(actionExpression4);
      
      Any any0 = new Any(errorPage0, actionExpression4);
      assertEquals(8, objectArray0.length);
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals(7, actionExpression1.length());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression4.getActionExpression());
      assertEquals(7, actionExpression4.length());
      assertTrue(actionExpression4.isSubmissible());
      assertEquals("vs!9j|4", actionExpression4.toString());
      assertEquals("vs!9j|4", actionExpression4.getEvent());
      assertEquals("vs!9j|4", actionExpression4.getExpression());
      assertNull(actionExpression4.getJavascript());
      assertFalse(actionExpression4.isExternalUrl());
      assertTrue(actionExpression4.isSubmitForm());
      assertNotNull(any0);
      
      String string0 = any0.defaultTagName();
      assertEquals(8, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression4);
      assertSame(actionExpression1, actionExpression4);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression4, actionExpression1);
      assertSame(actionExpression4, actionExpression0);
      assertSame(actionExpression4, actionExpression2);
      assertSame(actionExpression4, actionExpression3);
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals(7, actionExpression1.length());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression4.getActionExpression());
      assertEquals(7, actionExpression4.length());
      assertTrue(actionExpression4.isSubmissible());
      assertEquals("vs!9j|4", actionExpression4.toString());
      assertEquals("vs!9j|4", actionExpression4.getEvent());
      assertEquals("vs!9j|4", actionExpression4.getExpression());
      assertNull(actionExpression4.getJavascript());
      assertFalse(actionExpression4.isExternalUrl());
      assertTrue(actionExpression4.isSubmitForm());
      assertNull(string0);
      
      Block block0 = (Block)errorPage0.i();
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("div", block0.defaultTagName());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertNotNull(block0);
      
      // Undeclared exception!
      try { 
        errorPage0.imageSubmit("vs!9j|4", "WMeLlF!1c]tzY");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "EJME^][Ut6=S\"!\\&4Q";
      Form form0 = new Form("EJME^][Ut6=S\"!&4Q");
      assertEquals("form", form0.defaultTagName());
      assertFalse(form0._isBuilt());
      assertEquals("EJME^][Ut6=S\"!&4Q", form0.getComponentId());
      assertFalse(form0._isGeneratedId());
      assertNotNull(form0);
      
      // Undeclared exception!
      try { 
        form0.dd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertNotNull(errorPage0);
      
      String string0 = "vs\\!9j|4";
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertFalse(actionExpression0.isSubmissible());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNull(actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals(7, actionExpression0.length());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[1] = (Object) actionExpression0;
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertFalse(actionExpression0.isSubmissible());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNull(actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression1.isSubmissible());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNull(actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertNull(actionExpression2.getJavascript());
      assertNull(actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmissible());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertEquals(7, actionExpression2.length());
      assertNotNull(actionExpression2);
      
      ActionExpression actionExpression3 = actionExpression2.event("vs!9j|4");
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression2);
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmissible());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertEquals(7, actionExpression2.length());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertTrue(actionExpression3.isSubmissible());
      assertFalse(actionExpression3.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertNull(actionExpression3.getJavascript());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertEquals(7, actionExpression3.length());
      assertNotNull(actionExpression3);
      
      Any any0 = (Any)errorPage0.meta();
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertNotNull(any0);
      
      Any any1 = (Any)any0.attribute("vs!9j|4", actionExpression3);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression2);
      assertSame(any0, any1);
      assertSame(any1, any0);
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmissible());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertEquals(7, actionExpression2.length());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertTrue(actionExpression3.isSubmissible());
      assertFalse(actionExpression3.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertNull(actionExpression3.getJavascript());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertEquals(7, actionExpression3.length());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertNull(any1.defaultTagName());
      assertEquals("Any_1", any1.getComponentId());
      assertTrue(any1._isGeneratedId());
      assertNotNull(any1);
      
      // Undeclared exception!
      try { 
        any0.cite();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.156088380862759
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isBuilt());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[1] = (Object) actionExpression0;
      objectArray0[2] = (Object) "vs!9j|4";
      objectArray0[3] = (Object) actionExpression0;
      objectArray0[4] = (Object) "vs!9j|4";
      objectArray0[5] = (Object) actionExpression0;
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertFalse(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertNull(actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals(7, actionExpression1.length());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression1);
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertNull(actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals(7, actionExpression2.length());
      assertNull(actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertNotNull(actionExpression2);
      
      ActionExpression actionExpression3 = actionExpression2.event("vs!9j|4");
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression2);
      assertSame(actionExpression3, actionExpression0);
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals(7, actionExpression2.length());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertNull(actionExpression3.getJavascript());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertTrue(actionExpression3.isSubmissible());
      assertFalse(actionExpression3.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertEquals(7, actionExpression3.length());
      assertNotNull(actionExpression3);
      
      // Undeclared exception!
      try { 
        errorPage0.get("vs!9j|4");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id 'vs!9j|4'.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9251211907908183
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = "EJME^][Ut6=S\"!\\&4Q";
      Form form0 = new Form("EJME^][Ut6=S\"!&4Q");
      assertFalse(form0._isBuilt());
      assertEquals("form", form0.defaultTagName());
      assertFalse(form0._isGeneratedId());
      assertEquals("EJME^][Ut6=S\"!&4Q", form0.getComponentId());
      assertNotNull(form0);
      
      String string1 = "? ~";
      Submit submit0 = new Submit(form0, "? ~", "? ~");
      assertFalse(form0._isBuilt());
      assertEquals("form", form0.defaultTagName());
      assertFalse(form0._isGeneratedId());
      assertEquals("EJME^][Ut6=S\"!&4Q", form0.getComponentId());
      assertEquals("? ~", submit0.getComponentId());
      assertFalse(submit0._isGeneratedId());
      assertTrue(submit0.isEmpty());
      assertTrue(submit0.isValid());
      assertEquals("input", submit0.defaultTagName());
      assertEquals("? ~", submit0.getFormElementName());
      assertNotNull(submit0);
      
      Checkbox checkbox0 = new Checkbox(submit0, "wA*i?e9Q]6fT+<", "s;Ne");
      assertFalse(form0._isBuilt());
      assertEquals("form", form0.defaultTagName());
      assertFalse(form0._isGeneratedId());
      assertEquals("EJME^][Ut6=S\"!&4Q", form0.getComponentId());
      assertEquals("? ~", submit0.getComponentId());
      assertFalse(submit0._isGeneratedId());
      assertTrue(submit0.isEmpty());
      assertTrue(submit0.isValid());
      assertEquals("input", submit0.defaultTagName());
      assertEquals("? ~", submit0.getFormElementName());
      assertEquals("wA*i?e9Q]6fT+<", checkbox0.getFormElementName());
      assertTrue(checkbox0.isValid());
      assertEquals("s;Ne", checkbox0.getComponentId());
      assertTrue(checkbox0.isEmpty());
      assertEquals("input", checkbox0.defaultTagName());
      assertFalse(checkbox0._isGeneratedId());
      assertNotNull(checkbox0);
      
      // Undeclared exception!
      try { 
        form0.legend((Object) checkbox0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2652388315858114
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertNotNull(errorPage0);
      
      String string0 = "C:T";
      Block block0 = new Block(errorPage0);
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertNotNull(block0);
      
      errorPage0._setParent(block0);
      assertFalse(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      
      NumberInput numberInput0 = new NumberInput(errorPage0, "C:T", "*");
      assertFalse(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("input", numberInput0.defaultTagName());
      assertEquals("C:T", numberInput0.getFormElementName());
      assertFalse(numberInput0._isGeneratedId());
      assertEquals("*", numberInput0.getComponentId());
      assertTrue(numberInput0.isEmpty());
      assertTrue(numberInput0.isValid());
      assertNotNull(numberInput0);
      
      ActionExpression actionExpression0 = new ActionExpression("<!DOCTYPE");
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getEvent());
      assertEquals("<!DOCTYPE", actionExpression0.toString());
      assertEquals("<!DOCTYPE", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("<!DOCTYPE", actionExpression0.getActionExpression());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals(9, actionExpression0.length());
      assertTrue(actionExpression0.isSubmitForm());
      assertNotNull(actionExpression0);
      
      String string1 = "";
      numberInput0.numberInput("C:T", (CharSequence) "<!DOCTYPE");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef(string1);
      ActionExpression actionExpression1 = actionExpression0.setOwner(xmlEntityRef0);
      boolean boolean0 = true;
      ActionExpression actionExpression2 = actionExpression1.submitForm(boolean0);
      actionExpression2.event(string0);
      String string2 = "'d";
      Class<Long> class0 = Long.class;
      XmlPullParserFactory xmlPullParserFactory0 = XmlPullParserFactory.newInstance(string2, class0);
      XmlSerializer xmlSerializer0 = xmlPullParserFactory0.newSerializer();
      XmlPullWrapperFactory xmlPullWrapperFactory0 = XmlPullWrapperFactory.newInstance();
      StaticXmlSerializerWrapper staticXmlSerializerWrapper0 = new StaticXmlSerializerWrapper(xmlSerializer0, xmlPullWrapperFactory0);
      staticXmlSerializerWrapper0.element(string2, xmlPullParserFactory0.PROPERTY_NAME);
      String string3 = "FyRs5|q[^s";
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string4 = "C=zbZw7uru~%\"Q";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection(string4);
      String string5 = "";
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.label(string5);
      String string6 = "}";
      ElExpression elExpression0 = new ElExpression(string6);
      CheckboxGroup checkboxGroup0 = new CheckboxGroup(xmlEntityRef0, xmlPullParserFactory0.PROPERTY_NAME, string3, dynamicSelectModel2, elExpression0);
      numberInput0.address((Object) checkboxGroup0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.022808529414704
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Form form0 = new Form("EJME^][Ut6=S\"!&4Q");
      assertEquals("EJME^][Ut6=S\"!&4Q", form0.getComponentId());
      assertFalse(form0._isBuilt());
      assertFalse(form0._isGeneratedId());
      assertEquals("form", form0.defaultTagName());
      assertNotNull(form0);
      
      String string0 = "<!DOCTYPE";
      ActionExpression actionExpression0 = new ActionExpression((String) null);
      assertNull(actionExpression0.getJavascript());
      assertNull(actionExpression0.toString());
      assertNull(actionExpression0.getEvent());
      assertNull(actionExpression0.getExpression());
      assertFalse(actionExpression0.isSubmissible());
      assertTrue(actionExpression0.isSubmitForm());
      assertNull(actionExpression0.getActionExpression());
      assertNotNull(actionExpression0);
      
      NumberInput numberInput0 = new NumberInput(form0, "(", "? ~");
      assertEquals("EJME^][Ut6=S\"!&4Q", form0.getComponentId());
      assertFalse(form0._isBuilt());
      assertFalse(form0._isGeneratedId());
      assertEquals("form", form0.defaultTagName());
      assertTrue(numberInput0.isValid());
      assertEquals("? ~", numberInput0.getComponentId());
      assertEquals("(", numberInput0.getFormElementName());
      assertTrue(numberInput0.isEmpty());
      assertEquals("input", numberInput0.defaultTagName());
      assertFalse(numberInput0._isGeneratedId());
      assertNotNull(numberInput0);
      
      // Undeclared exception!
      try { 
        numberInput0.numberInput("<", (CharSequence) "EJME^][Ut6=S\"!&4Q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertNotNull(errorPage0);
      
      String string0 = "vs\\!9j|4";
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertFalse(actionExpression0.isSubmissible());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[6];
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertFalse(actionExpression0.isSubmissible());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertFalse(actionExpression1.isSubmissible());
      assertEquals(7, actionExpression1.length());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression1);
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals(7, actionExpression1.length());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertTrue(actionExpression1.isSubmissible());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression2.isSubmissible());
      assertFalse(actionExpression2.isExternalUrl());
      assertNull(actionExpression2.getEvent());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals(7, actionExpression2.length());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNotNull(actionExpression2);
      
      ActionExpression actionExpression3 = actionExpression1.parameters(objectArray0);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression2);
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals(7, actionExpression1.length());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertTrue(actionExpression1.isSubmissible());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertTrue(actionExpression3.isSubmissible());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertNull(actionExpression3.getEvent());
      assertEquals(7, actionExpression3.length());
      assertNull(actionExpression3.getJavascript());
      assertFalse(actionExpression3.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertNotNull(actionExpression3);
      
      ActionExpression actionExpression4 = actionExpression3.submissible(true);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression4);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression4);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression4);
      assertSame(actionExpression3, actionExpression2);
      assertSame(actionExpression4, actionExpression2);
      assertSame(actionExpression4, actionExpression0);
      assertSame(actionExpression4, actionExpression1);
      assertSame(actionExpression4, actionExpression3);
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals(7, actionExpression1.length());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertTrue(actionExpression1.isSubmissible());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertTrue(actionExpression3.isSubmissible());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertNull(actionExpression3.getEvent());
      assertEquals(7, actionExpression3.length());
      assertNull(actionExpression3.getJavascript());
      assertFalse(actionExpression3.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertEquals("vs!9j|4", actionExpression4.getActionExpression());
      assertTrue(actionExpression4.isSubmissible());
      assertFalse(actionExpression4.isExternalUrl());
      assertNull(actionExpression4.getEvent());
      assertTrue(actionExpression4.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression4.getExpression());
      assertEquals(7, actionExpression4.length());
      assertEquals("vs!9j|4", actionExpression4.toString());
      assertNull(actionExpression4.getJavascript());
      assertNotNull(actionExpression4);
      
      String string1 = "f=Rfq";
      ActionExpression actionExpression5 = actionExpression4.event("f=Rfq");
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression5);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression4);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression4);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression5);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression5);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression4);
      assertSame(actionExpression3, actionExpression2);
      assertSame(actionExpression4, actionExpression2);
      assertSame(actionExpression4, actionExpression0);
      assertSame(actionExpression4, actionExpression1);
      assertSame(actionExpression4, actionExpression3);
      assertSame(actionExpression4, actionExpression5);
      assertSame(actionExpression5, actionExpression3);
      assertSame(actionExpression5, actionExpression2);
      assertSame(actionExpression5, actionExpression4);
      assertSame(actionExpression5, actionExpression1);
      assertSame(actionExpression5, actionExpression0);
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals(7, actionExpression0.length());
      assertEquals("f=Rfq", actionExpression0.getEvent());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("f=Rfq", actionExpression1.getEvent());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertTrue(actionExpression1.isSubmissible());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertTrue(actionExpression3.isSubmissible());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals(7, actionExpression3.length());
      assertEquals("f=Rfq", actionExpression3.getEvent());
      assertNull(actionExpression3.getJavascript());
      assertFalse(actionExpression3.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertEquals("vs!9j|4", actionExpression4.getActionExpression());
      assertTrue(actionExpression4.isSubmissible());
      assertFalse(actionExpression4.isExternalUrl());
      assertEquals("f=Rfq", actionExpression4.getEvent());
      assertTrue(actionExpression4.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression4.getExpression());
      assertEquals(7, actionExpression4.length());
      assertEquals("vs!9j|4", actionExpression4.toString());
      assertNull(actionExpression4.getJavascript());
      assertTrue(actionExpression5.isSubmissible());
      assertFalse(actionExpression5.isExternalUrl());
      assertTrue(actionExpression5.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression5.getExpression());
      assertEquals("vs!9j|4", actionExpression5.getActionExpression());
      assertNull(actionExpression5.getJavascript());
      assertEquals("vs!9j|4", actionExpression5.toString());
      assertEquals("f=Rfq", actionExpression5.getEvent());
      assertEquals(7, actionExpression5.length());
      assertNotNull(actionExpression5);
      
      Any any0 = new Any(errorPage0, "vs!9j|4");
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Any_1", any0.getComponentId());
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertNotNull(any0);
      
      String string2 = any0.defaultTagName();
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Any_1", any0.getComponentId());
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertNull(string2);
      
      String string3 = "p";
      // Undeclared exception!
      try { 
        any0.textInput("p");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertFalse(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[1] = (Object) actionExpression0;
      objectArray0[2] = (Object) "vs!9j|4";
      objectArray0[3] = (Object) actionExpression0;
      objectArray0[4] = (Object) "vs!9j|4";
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(5, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertFalse(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertFalse(actionExpression1.isSubmissible());
      assertEquals(7, actionExpression1.length());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      assertEquals(5, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression1);
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals(7, actionExpression1.length());
      assertEquals(7, actionExpression2.length());
      assertNull(actionExpression2.getJavascript());
      assertNull(actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertTrue(actionExpression2.isSubmissible());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertNotNull(actionExpression2);
      
      ActionExpression actionExpression3 = actionExpression2.event("vs!9j|4");
      assertEquals(5, objectArray0.length);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression2);
      assertSame(actionExpression3, actionExpression1);
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals(7, actionExpression1.length());
      assertEquals(7, actionExpression2.length());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertTrue(actionExpression2.isSubmissible());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertNull(actionExpression3.getJavascript());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertTrue(actionExpression3.isSubmissible());
      assertFalse(actionExpression3.isExternalUrl());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertEquals(7, actionExpression3.length());
      assertNotNull(actionExpression3);
      
      Any any0 = new Any(errorPage0, actionExpression3);
      assertEquals(5, objectArray0.length);
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals(7, actionExpression1.length());
      assertEquals(7, actionExpression2.length());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertTrue(actionExpression2.isSubmissible());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertNull(actionExpression3.getJavascript());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertTrue(actionExpression3.isSubmissible());
      assertFalse(actionExpression3.isExternalUrl());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertEquals(7, actionExpression3.length());
      assertNull(any0.defaultTagName());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNotNull(any0);
      
      String string0 = "could not determine namespace bound to attribute prefix ";
      // Undeclared exception!
      try { 
        any0.link();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9251211907908183
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = "EJME^][Ut6=S\"!\\&4Q";
      Form form0 = new Form("EJME^][Ut6=S\"!&4Q");
      assertFalse(form0._isGeneratedId());
      assertFalse(form0._isBuilt());
      assertEquals("form", form0.defaultTagName());
      assertEquals("EJME^][Ut6=S\"!&4Q", form0.getComponentId());
      assertNotNull(form0);
      
      String string1 = "? ~";
      Submit submit0 = new Submit(form0, "? ~", "? ~");
      assertFalse(form0._isGeneratedId());
      assertFalse(form0._isBuilt());
      assertEquals("form", form0.defaultTagName());
      assertEquals("EJME^][Ut6=S\"!&4Q", form0.getComponentId());
      assertEquals("? ~", submit0.getFormElementName());
      assertEquals("? ~", submit0.getComponentId());
      assertTrue(submit0.isEmpty());
      assertTrue(submit0.isValid());
      assertFalse(submit0._isGeneratedId());
      assertEquals("input", submit0.defaultTagName());
      assertNotNull(submit0);
      
      MXSerializer mXSerializer0 = new MXSerializer();
      assertEquals(0, mXSerializer0.getDepth());
      assertNull(mXSerializer0.getName());
      assertNull(mXSerializer0.getNamespace());
      assertNotNull(mXSerializer0);
      
      Object object0 = mXSerializer0.getProperty("z:Yz?*,%M5MyE8*");
      assertEquals(0, mXSerializer0.getDepth());
      assertNull(mXSerializer0.getName());
      assertNull(mXSerializer0.getNamespace());
      assertNull(object0);
      
      String string2 = "";
      // Undeclared exception!
      try { 
        submit0.q();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertFalse(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[1] = (Object) actionExpression0;
      objectArray0[2] = (Object) "vs!9j|4";
      objectArray0[3] = (Object) actionExpression0;
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(5, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertFalse(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression1.isSubmissible());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertFalse(actionExpression1.isExternalUrl());
      assertNull(actionExpression1.getEvent());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression0.event("'P-NnD7y3@#e|(y9el;");
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression1);
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals(7, actionExpression0.length());
      assertEquals("'P-NnD7y3@#e|(y9el;", actionExpression0.getEvent());
      assertFalse(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertFalse(actionExpression2.isSubmissible());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertNull(actionExpression2.getJavascript());
      assertEquals(7, actionExpression2.length());
      assertEquals("'P-NnD7y3@#e|(y9el;", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertNotNull(actionExpression2);
      
      ActionExpression actionExpression3 = actionExpression1.submissible(true);
      assertEquals(5, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression3, actionExpression2);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertEquals("'P-NnD7y3@#e|(y9el;", actionExpression0.getEvent());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("'P-NnD7y3@#e|(y9el;", actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("'P-NnD7y3@#e|(y9el;", actionExpression3.getEvent());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertTrue(actionExpression3.isSubmissible());
      assertFalse(actionExpression3.isExternalUrl());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertNull(actionExpression3.getJavascript());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals(7, actionExpression3.length());
      assertNotNull(actionExpression3);
      
      ActionExpression actionExpression4 = actionExpression3.event("vs!9j|4");
      assertEquals(5, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression4);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression4);
      assertSame(actionExpression3, actionExpression4);
      assertSame(actionExpression3, actionExpression2);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression4, actionExpression3);
      assertSame(actionExpression4, actionExpression2);
      assertSame(actionExpression4, actionExpression0);
      assertSame(actionExpression4, actionExpression1);
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertTrue(actionExpression3.isSubmissible());
      assertFalse(actionExpression3.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertNull(actionExpression3.getJavascript());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals(7, actionExpression3.length());
      assertTrue(actionExpression4.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression4.getExpression());
      assertTrue(actionExpression4.isSubmissible());
      assertFalse(actionExpression4.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression4.getEvent());
      assertNull(actionExpression4.getJavascript());
      assertEquals(7, actionExpression4.length());
      assertEquals("vs!9j|4", actionExpression4.getActionExpression());
      assertEquals("vs!9j|4", actionExpression4.toString());
      assertNotNull(actionExpression4);
      
      Any any0 = new Any(errorPage0, actionExpression4);
      assertEquals(5, objectArray0.length);
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertTrue(actionExpression3.isSubmissible());
      assertFalse(actionExpression3.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertNull(actionExpression3.getJavascript());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals(7, actionExpression3.length());
      assertTrue(actionExpression4.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression4.getExpression());
      assertTrue(actionExpression4.isSubmissible());
      assertFalse(actionExpression4.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression4.getEvent());
      assertNull(actionExpression4.getJavascript());
      assertEquals(7, actionExpression4.length());
      assertEquals("vs!9j|4", actionExpression4.getActionExpression());
      assertEquals("vs!9j|4", actionExpression4.toString());
      assertNull(any0.defaultTagName());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNotNull(any0);
      
      String string0 = "could not determine namespace bound to attribute prefix ";
      TableBlock tableBlock0 = new TableBlock(errorPage0, "could not determine namespace bound to attribute prefix ");
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertFalse(tableBlock0._isGeneratedId());
      assertEquals("div", tableBlock0.defaultTagName());
      assertEquals("could not determine namespace bound to attribute prefix ", tableBlock0.getComponentId());
      assertNotNull(tableBlock0);
      
      // Undeclared exception!
      try { 
        errorPage0.checkbox("could not determine namespace bound to attribute prefix ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertNotNull(errorPage0);
      
      String string0 = "ServletContext data:";
      TableBlock tableBlock0 = new TableBlock(errorPage0, "ServletContext data:");
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", tableBlock0.defaultTagName());
      assertEquals("ServletContext data:", tableBlock0.getComponentId());
      assertFalse(tableBlock0._isGeneratedId());
      assertNotNull(tableBlock0);
      
      Block block0 = tableBlock0.placeholder("ServletContext data:");
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", tableBlock0.defaultTagName());
      assertEquals("ServletContext data:", tableBlock0.getComponentId());
      assertFalse(tableBlock0._isGeneratedId());
      assertEquals("ServletContext data:", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertFalse(block0._isGeneratedId());
      assertNotNull(block0);
      
      String string1 = "h";
      ElExpression elExpression0 = new ElExpression("N|K)1#C/oF");
      assertEquals(10, elExpression0.length());
      assertEquals("N|K)1#C/oF", elExpression0.toString());
      assertEquals("N|K)1#C/oF", elExpression0.getExpression());
      assertNotNull(elExpression0);
      
      elExpression0.expression = null;
      assertNull(elExpression0.getExpression());
      assertNull(elExpression0.toString());
      
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      assertNotNull(dynamicSelectModel0);
      
      // Undeclared exception!
      try { 
        errorPage0.head();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertFalse(actionExpression0.isSubmissible());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals(7, actionExpression0.length());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[1] = (Object) actionExpression0;
      objectArray0[2] = (Object) "vs!9j|4";
      objectArray0[3] = (Object) actionExpression0;
      objectArray0[4] = (Object) "vs!9j|4";
      objectArray0[5] = (Object) actionExpression0;
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertFalse(actionExpression0.isSubmissible());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression1.getEvent());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression1.isSubmissible());
      assertEquals(7, actionExpression1.length());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression1);
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals(7, actionExpression1.length());
      assertTrue(actionExpression2.isSubmissible());
      assertFalse(actionExpression2.isExternalUrl());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertNull(actionExpression2.getEvent());
      assertEquals(7, actionExpression2.length());
      assertNotNull(actionExpression2);
      
      Table table0 = new Table(errorPage0, "vs!9j|4");
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(table0._isGeneratedId());
      assertEquals("table", table0.defaultTagName());
      assertEquals("vs!9j|4", table0.getComponentId());
      assertNotNull(table0);
      
      TableBlock tableBlock0 = table0.thead();
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(table0._isGeneratedId());
      assertEquals("table", table0.defaultTagName());
      assertEquals("vs!9j|4", table0.getComponentId());
      assertEquals("div", tableBlock0.defaultTagName());
      assertTrue(tableBlock0._isGeneratedId());
      assertEquals("TableBlock_1", tableBlock0.getComponentId());
      assertNotNull(tableBlock0);
      
      Any any0 = tableBlock0.col();
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(table0._isGeneratedId());
      assertEquals("table", table0.defaultTagName());
      assertEquals("vs!9j|4", table0.getComponentId());
      assertEquals("div", tableBlock0.defaultTagName());
      assertTrue(tableBlock0._isGeneratedId());
      assertEquals("TableBlock_1", tableBlock0.getComponentId());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertNotNull(any0);
      
      String string0 = any0.defaultTagName();
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(table0._isGeneratedId());
      assertEquals("table", table0.defaultTagName());
      assertEquals("vs!9j|4", table0.getComponentId());
      assertEquals("div", tableBlock0.defaultTagName());
      assertTrue(tableBlock0._isGeneratedId());
      assertEquals("TableBlock_1", tableBlock0.getComponentId());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertNull(string0);
      
      Block block0 = (Block)errorPage0.i();
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertNotNull(block0);
      
      String string1 = "bIJT";
      // Undeclared exception!
      try { 
        table0.buttonInput("title");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertFalse(actionExpression0.isSubmissible());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[1] = (Object) actionExpression0;
      objectArray0[2] = (Object) "vs!9j|4";
      objectArray0[3] = (Object) actionExpression0;
      objectArray0[5] = (Object) actionExpression0;
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertFalse(actionExpression0.isSubmissible());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertNull(actionExpression1.getJavascript());
      assertEquals(7, actionExpression1.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertFalse(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertNull(actionExpression1.getJavascript());
      assertEquals(7, actionExpression1.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression2.isSubmissible());
      assertNull(actionExpression2.getEvent());
      assertEquals(7, actionExpression2.length());
      assertNotNull(actionExpression2);
      
      ActionExpression actionExpression3 = actionExpression2.event("vs!9j|4");
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression2);
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertEquals(7, actionExpression1.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals(7, actionExpression2.length());
      assertEquals(7, actionExpression3.length());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertTrue(actionExpression3.isSubmissible());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertNull(actionExpression3.getJavascript());
      assertFalse(actionExpression3.isExternalUrl());
      assertNotNull(actionExpression3);
      
      Table table0 = new Table(errorPage0, "vs!9j|4");
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertEquals("table", table0.defaultTagName());
      assertFalse(table0._isGeneratedId());
      assertEquals("vs!9j|4", table0.getComponentId());
      assertNotNull(table0);
      
      Table table1 = table0.renderHint(actionExpression2);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression3);
      assertSame(table0, table1);
      assertSame(table1, table0);
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertEquals(7, actionExpression1.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals(7, actionExpression2.length());
      assertEquals("table", table0.defaultTagName());
      assertFalse(table0._isGeneratedId());
      assertEquals("vs!9j|4", table0.getComponentId());
      assertFalse(table1._isGeneratedId());
      assertEquals("vs!9j|4", table1.getComponentId());
      assertEquals("table", table1.defaultTagName());
      assertNotNull(table1);
      
      TableBlock tableBlock0 = table1.colgroup();
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression3);
      assertSame(table0, table1);
      assertSame(table1, table0);
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertEquals(7, actionExpression1.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals(7, actionExpression2.length());
      assertEquals("table", table0.defaultTagName());
      assertFalse(table0._isGeneratedId());
      assertEquals("vs!9j|4", table0.getComponentId());
      assertFalse(table1._isGeneratedId());
      assertEquals("vs!9j|4", table1.getComponentId());
      assertEquals("table", table1.defaultTagName());
      assertEquals("div", tableBlock0.defaultTagName());
      assertEquals("TableBlock_1", tableBlock0.getComponentId());
      assertTrue(tableBlock0._isGeneratedId());
      assertNotNull(tableBlock0);
      
      TableBlock tableBlock1 = tableBlock0.renderHint("vs!9j|4");
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression3);
      assertSame(table0, table1);
      assertSame(table1, table0);
      assertSame(tableBlock0, tableBlock1);
      assertSame(tableBlock1, tableBlock0);
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertEquals(7, actionExpression1.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals(7, actionExpression2.length());
      assertEquals("table", table0.defaultTagName());
      assertFalse(table0._isGeneratedId());
      assertEquals("vs!9j|4", table0.getComponentId());
      assertFalse(table1._isGeneratedId());
      assertEquals("vs!9j|4", table1.getComponentId());
      assertEquals("table", table1.defaultTagName());
      assertEquals("div", tableBlock0.defaultTagName());
      assertEquals("TableBlock_1", tableBlock0.getComponentId());
      assertTrue(tableBlock0._isGeneratedId());
      assertTrue(tableBlock1._isGeneratedId());
      assertEquals("TableBlock_1", tableBlock1.getComponentId());
      assertEquals("div", tableBlock1.defaultTagName());
      assertNotNull(tableBlock1);
      
      Any any0 = tableBlock1.col();
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression3);
      assertSame(table0, table1);
      assertSame(table1, table0);
      assertSame(tableBlock0, tableBlock1);
      assertSame(tableBlock1, tableBlock0);
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertEquals(7, actionExpression1.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals(7, actionExpression2.length());
      assertEquals("table", table0.defaultTagName());
      assertFalse(table0._isGeneratedId());
      assertEquals("vs!9j|4", table0.getComponentId());
      assertFalse(table1._isGeneratedId());
      assertEquals("vs!9j|4", table1.getComponentId());
      assertEquals("table", table1.defaultTagName());
      assertEquals("div", tableBlock0.defaultTagName());
      assertEquals("TableBlock_1", tableBlock0.getComponentId());
      assertTrue(tableBlock0._isGeneratedId());
      assertTrue(tableBlock1._isGeneratedId());
      assertEquals("TableBlock_1", tableBlock1.getComponentId());
      assertEquals("div", tableBlock1.defaultTagName());
      assertNull(any0.defaultTagName());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNotNull(any0);
      
      String string0 = any0.defaultTagName();
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression3);
      assertSame(table0, table1);
      assertSame(table1, table0);
      assertSame(tableBlock0, tableBlock1);
      assertSame(tableBlock1, tableBlock0);
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertEquals(7, actionExpression1.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals(7, actionExpression2.length());
      assertEquals("table", table0.defaultTagName());
      assertFalse(table0._isGeneratedId());
      assertEquals("vs!9j|4", table0.getComponentId());
      assertFalse(table1._isGeneratedId());
      assertEquals("vs!9j|4", table1.getComponentId());
      assertEquals("table", table1.defaultTagName());
      assertEquals("div", tableBlock0.defaultTagName());
      assertEquals("TableBlock_1", tableBlock0.getComponentId());
      assertTrue(tableBlock0._isGeneratedId());
      assertTrue(tableBlock1._isGeneratedId());
      assertEquals("TableBlock_1", tableBlock1.getComponentId());
      assertEquals("div", tableBlock1.defaultTagName());
      assertNull(any0.defaultTagName());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(string0);
      
      ErrorPage errorPage1 = new ErrorPage();
      assertTrue(errorPage1.equals((Object)errorPage0));
      assertEquals("wheel_ErrorPage", errorPage1.getComponentId());
      assertFalse(errorPage1._isBuilt());
      assertEquals("div", errorPage1.defaultTagName());
      assertFalse(errorPage1._isGeneratedId());
      assertTrue(errorPage1.isPage());
      assertNotNull(errorPage1);
      
      Block block0 = (Block)errorPage1.i();
      assertTrue(errorPage1.equals((Object)errorPage0));
      assertNotSame(errorPage1, errorPage0);
      assertEquals("wheel_ErrorPage", errorPage1.getComponentId());
      assertFalse(errorPage1._isBuilt());
      assertEquals("div", errorPage1.defaultTagName());
      assertFalse(errorPage1._isGeneratedId());
      assertTrue(errorPage1.isPage());
      assertEquals("div", block0.defaultTagName());
      assertEquals("Block_1", block0.getComponentId());
      assertTrue(block0._isGeneratedId());
      assertNotNull(block0);
      
      Table table2 = new Table(table0, "4y&");
      assertTrue(errorPage0.equals((Object)errorPage1));
      assertFalse(table2.equals((Object)table1));
      assertFalse(table2.equals((Object)table0));
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertEquals("table", table2.defaultTagName());
      assertFalse(table2._isGeneratedId());
      assertEquals("4y&", table2.getComponentId());
      assertEquals("table", table0.defaultTagName());
      assertFalse(table0._isGeneratedId());
      assertEquals("vs!9j|4", table0.getComponentId());
      assertNotNull(table2);
      
      Table table3 = table2.renderHint(actionExpression3);
      assertTrue(errorPage0.equals((Object)errorPage1));
      assertFalse(table2.equals((Object)table1));
      assertFalse(table2.equals((Object)table0));
      assertFalse(table3.equals((Object)table1));
      assertFalse(table3.equals((Object)table0));
      assertFalse(table0.equals((Object)table2));
      assertEquals(6, objectArray0.length);
      assertNotSame(errorPage0, errorPage1);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression3);
      assertNotSame(table2, table1);
      assertNotSame(table2, table0);
      assertSame(table2, table3);
      assertSame(table3, table2);
      assertNotSame(table3, table1);
      assertNotSame(table3, table0);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression2);
      assertSame(table0, table1);
      assertNotSame(table0, table3);
      assertNotSame(table0, table2);
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("table", table2.defaultTagName());
      assertFalse(table2._isGeneratedId());
      assertEquals("4y&", table2.getComponentId());
      assertEquals("table", table3.defaultTagName());
      assertFalse(table3._isGeneratedId());
      assertEquals("4y&", table3.getComponentId());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertEquals(7, actionExpression1.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals(7, actionExpression2.length());
      assertEquals(7, actionExpression3.length());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertTrue(actionExpression3.isSubmissible());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertNull(actionExpression3.getJavascript());
      assertFalse(actionExpression3.isExternalUrl());
      assertEquals("table", table0.defaultTagName());
      assertFalse(table0._isGeneratedId());
      assertEquals("vs!9j|4", table0.getComponentId());
      assertNotNull(table3);
      
      ErrorPage errorPage2 = (ErrorPage)block0.end();
      assertTrue(errorPage1.equals((Object)errorPage0));
      assertTrue(errorPage2.equals((Object)errorPage0));
      assertSame(errorPage1, errorPage2);
      assertNotSame(errorPage1, errorPage0);
      assertNotSame(errorPage2, errorPage0);
      assertSame(errorPage2, errorPage1);
      assertEquals("wheel_ErrorPage", errorPage1.getComponentId());
      assertFalse(errorPage1._isBuilt());
      assertEquals("div", errorPage1.defaultTagName());
      assertFalse(errorPage1._isGeneratedId());
      assertTrue(errorPage1.isPage());
      assertEquals("div", block0.defaultTagName());
      assertEquals("Block_1", block0.getComponentId());
      assertTrue(block0._isGeneratedId());
      assertFalse(errorPage2._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage2.getComponentId());
      assertFalse(errorPage2._isGeneratedId());
      assertEquals("div", errorPage2.defaultTagName());
      assertTrue(errorPage2.isPage());
      assertNotNull(errorPage2);
      
      TableBlock tableBlock2 = table3.tfoot();
      assertTrue(errorPage0.equals((Object)errorPage1));
      assertTrue(errorPage0.equals((Object)errorPage2));
      assertFalse(table2.equals((Object)table1));
      assertFalse(table2.equals((Object)table0));
      assertFalse(table3.equals((Object)table1));
      assertFalse(table3.equals((Object)table0));
      assertFalse(tableBlock2.equals((Object)tableBlock1));
      assertFalse(tableBlock2.equals((Object)tableBlock0));
      assertFalse(table0.equals((Object)table3));
      assertFalse(table0.equals((Object)table2));
      assertEquals(6, objectArray0.length);
      assertNotSame(errorPage0, errorPage1);
      assertNotSame(errorPage0, errorPage2);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression3);
      assertNotSame(table2, table1);
      assertNotSame(table2, table0);
      assertSame(table2, table3);
      assertSame(table3, table2);
      assertNotSame(table3, table1);
      assertNotSame(table3, table0);
      assertNotSame(tableBlock2, tableBlock1);
      assertNotSame(tableBlock2, tableBlock0);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression2);
      assertSame(table0, table1);
      assertNotSame(table0, table3);
      assertNotSame(table0, table2);
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("table", table2.defaultTagName());
      assertFalse(table2._isGeneratedId());
      assertEquals("4y&", table2.getComponentId());
      assertEquals("table", table3.defaultTagName());
      assertFalse(table3._isGeneratedId());
      assertEquals("4y&", table3.getComponentId());
      assertEquals("TableBlock_2", tableBlock2.getComponentId());
      assertTrue(tableBlock2._isGeneratedId());
      assertEquals("div", tableBlock2.defaultTagName());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertEquals(7, actionExpression1.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertTrue(actionExpression2.isSubmissible());
      assertEquals(7, actionExpression2.length());
      assertEquals(7, actionExpression3.length());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertTrue(actionExpression3.isSubmissible());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertNull(actionExpression3.getJavascript());
      assertFalse(actionExpression3.isExternalUrl());
      assertEquals("table", table0.defaultTagName());
      assertFalse(table0._isGeneratedId());
      assertEquals("vs!9j|4", table0.getComponentId());
      assertNotNull(tableBlock2);
      
      // Undeclared exception!
      try { 
        any0.map("org.mvel.AbstractParser");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.3596612545186137
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNotNull(actionExpression0);
      
      Block block0 = (Block)errorPage0.tt();
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertNotNull(block0);
      
      Any any0 = new Any(errorPage0, "vs!9j|4");
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertEquals("Any_1", any0.getComponentId());
      assertNotNull(any0);
      
      String string0 = any0.defaultTagName();
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertEquals("Any_1", any0.getComponentId());
      assertNull(string0);
      
      Block block1 = (Block)errorPage0.i();
      assertFalse(block1.equals((Object)block0));
      assertNotSame(block1, block0);
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("Block_2", block1.getComponentId());
      assertTrue(block1._isGeneratedId());
      assertEquals("div", block1.defaultTagName());
      assertNotNull(block1);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertNotNull(errorPage0);
      
      NumberInput numberInput0 = new NumberInput(errorPage0, "C:T", "*");
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertFalse(numberInput0._isGeneratedId());
      assertEquals("*", numberInput0.getComponentId());
      assertEquals("input", numberInput0.defaultTagName());
      assertEquals("C:T", numberInput0.getFormElementName());
      assertTrue(numberInput0.isValid());
      assertTrue(numberInput0.isEmpty());
      assertNotNull(numberInput0);
      
      ActionExpression actionExpression0 = new ActionExpression("sup");
      assertNull(actionExpression0.getJavascript());
      assertTrue(actionExpression0.isSubmitForm());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals("sup", actionExpression0.toString());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getEvent());
      assertEquals(3, actionExpression0.length());
      assertEquals("sup", actionExpression0.getActionExpression());
      assertEquals("sup", actionExpression0.getExpression());
      assertNotNull(actionExpression0);
      
      ActionExpression actionExpression1 = actionExpression0.parameter(numberInput0);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertFalse(numberInput0._isGeneratedId());
      assertEquals("*", numberInput0.getComponentId());
      assertEquals("input", numberInput0.defaultTagName());
      assertEquals("C:T", numberInput0.getFormElementName());
      assertTrue(numberInput0.isValid());
      assertTrue(numberInput0.isEmpty());
      assertNull(actionExpression0.getJavascript());
      assertTrue(actionExpression0.isSubmitForm());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals("sup", actionExpression0.toString());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getEvent());
      assertEquals(3, actionExpression0.length());
      assertEquals("sup", actionExpression0.getActionExpression());
      assertEquals("sup", actionExpression0.getExpression());
      assertEquals("sup", actionExpression1.getActionExpression());
      assertNull(actionExpression1.getEvent());
      assertEquals("sup", actionExpression1.getExpression());
      assertEquals(3, actionExpression1.length());
      assertFalse(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertNull(actionExpression1.getJavascript());
      assertEquals("sup", actionExpression1.toString());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression1.event("C:T");
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertFalse(numberInput0._isGeneratedId());
      assertEquals("*", numberInput0.getComponentId());
      assertEquals("input", numberInput0.defaultTagName());
      assertEquals("C:T", numberInput0.getFormElementName());
      assertTrue(numberInput0.isValid());
      assertTrue(numberInput0.isEmpty());
      assertNull(actionExpression0.getJavascript());
      assertTrue(actionExpression0.isSubmitForm());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals("sup", actionExpression0.toString());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals(3, actionExpression0.length());
      assertEquals("C:T", actionExpression0.getEvent());
      assertEquals("sup", actionExpression0.getActionExpression());
      assertEquals("sup", actionExpression0.getExpression());
      assertEquals("sup", actionExpression1.getActionExpression());
      assertEquals("C:T", actionExpression1.getEvent());
      assertEquals("sup", actionExpression1.getExpression());
      assertEquals(3, actionExpression1.length());
      assertFalse(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertNull(actionExpression1.getJavascript());
      assertEquals("sup", actionExpression1.toString());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals(3, actionExpression2.length());
      assertEquals("C:T", actionExpression2.getEvent());
      assertEquals("sup", actionExpression2.getExpression());
      assertNull(actionExpression2.getJavascript());
      assertEquals("sup", actionExpression2.getActionExpression());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("sup", actionExpression2.toString());
      assertFalse(actionExpression2.isSubmissible());
      assertNotNull(actionExpression2);
      
      ActionExpression actionExpression3 = actionExpression0.javascript("strong");
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression3, actionExpression2);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertEquals("strong", actionExpression0.getJavascript());
      assertTrue(actionExpression0.isSubmitForm());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals("sup", actionExpression0.toString());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals(3, actionExpression0.length());
      assertEquals("C:T", actionExpression0.getEvent());
      assertEquals("sup", actionExpression0.getActionExpression());
      assertEquals("sup", actionExpression0.getExpression());
      assertFalse(actionExpression3.isExternalUrl());
      assertEquals(3, actionExpression3.length());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("sup", actionExpression3.toString());
      assertEquals("strong", actionExpression3.getJavascript());
      assertEquals("sup", actionExpression3.getExpression());
      assertFalse(actionExpression3.isSubmissible());
      assertEquals("sup", actionExpression3.getActionExpression());
      assertEquals("C:T", actionExpression3.getEvent());
      assertNotNull(actionExpression3);
      
      Any any0 = new Any(numberInput0, "C:T");
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertFalse(numberInput0._isGeneratedId());
      assertEquals("*", numberInput0.getComponentId());
      assertEquals("input", numberInput0.defaultTagName());
      assertEquals("C:T", numberInput0.getFormElementName());
      assertTrue(numberInput0.isValid());
      assertTrue(numberInput0.isEmpty());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertNotNull(any0);
      
      String string0 = any0.defaultTagName();
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertFalse(numberInput0._isGeneratedId());
      assertEquals("*", numberInput0.getComponentId());
      assertEquals("input", numberInput0.defaultTagName());
      assertEquals("C:T", numberInput0.getFormElementName());
      assertTrue(numberInput0.isValid());
      assertTrue(numberInput0.isEmpty());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertNull(string0);
      
      Block block0 = (Block)errorPage0.i();
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("Block_1", block0.getComponentId());
      assertTrue(block0._isGeneratedId());
      assertEquals("div", block0.defaultTagName());
      assertNotNull(block0);
      
      Table table0 = new Table(any0, "java.lang.String@0000000004");
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertFalse(numberInput0._isGeneratedId());
      assertEquals("*", numberInput0.getComponentId());
      assertEquals("input", numberInput0.defaultTagName());
      assertEquals("C:T", numberInput0.getFormElementName());
      assertTrue(numberInput0.isValid());
      assertTrue(numberInput0.isEmpty());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertEquals("table", table0.defaultTagName());
      assertFalse(table0._isGeneratedId());
      assertNotNull(table0);
      
      Table table1 = table0.renderHint("noscript");
      assertSame(table0, table1);
      assertSame(table1, table0);
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertFalse(numberInput0._isGeneratedId());
      assertEquals("*", numberInput0.getComponentId());
      assertEquals("input", numberInput0.defaultTagName());
      assertEquals("C:T", numberInput0.getFormElementName());
      assertTrue(numberInput0.isValid());
      assertTrue(numberInput0.isEmpty());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertEquals("table", table0.defaultTagName());
      assertFalse(table0._isGeneratedId());
      assertEquals("table", table1.defaultTagName());
      assertFalse(table1._isGeneratedId());
      assertNotNull(table1);
      
      // Undeclared exception!
      try { 
        table0.body();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertEquals(7, actionExpression0.length());
      assertFalse(actionExpression0.isSubmissible());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) errorPage0;
      ActionExpression actionExpression1 = new ActionExpression((String) null);
      assertFalse(actionExpression1.equals((Object)actionExpression0));
      assertTrue(actionExpression1.isSubmitForm());
      assertNull(actionExpression1.toString());
      assertNull(actionExpression1.getEvent());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isSubmissible());
      assertNull(actionExpression1.getExpression());
      assertNull(actionExpression1.getActionExpression());
      assertNotNull(actionExpression1);
      
      Any any0 = new Any(errorPage0, actionExpression1);
      assertFalse(actionExpression1.equals((Object)actionExpression0));
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(actionExpression1.isSubmitForm());
      assertNull(actionExpression1.toString());
      assertNull(actionExpression1.getEvent());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isSubmissible());
      assertNull(actionExpression1.getExpression());
      assertNull(actionExpression1.getActionExpression());
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertEquals("Any_1", any0.getComponentId());
      assertNotNull(any0);
      
      String string0 = any0.defaultTagName();
      assertFalse(actionExpression1.equals((Object)actionExpression0));
      assertNotSame(actionExpression1, actionExpression0);
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(actionExpression1.isSubmitForm());
      assertNull(actionExpression1.toString());
      assertNull(actionExpression1.getEvent());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isSubmissible());
      assertNull(actionExpression1.getExpression());
      assertNull(actionExpression1.getActionExpression());
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertEquals("Any_1", any0.getComponentId());
      assertNull(string0);
      
      Block block0 = (Block)errorPage0.i();
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertNotNull(block0);
      
      Block block1 = (Block)errorPage0.script();
      assertFalse(block1.equals((Object)block0));
      assertNotSame(block1, block0);
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", block1.defaultTagName());
      assertEquals("Block_2", block1.getComponentId());
      assertTrue(block1._isGeneratedId());
      assertNotNull(block1);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.420137463407742
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertEquals(7, actionExpression0.length());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNull(actionExpression0.getEvent());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isSubmissible());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNotNull(actionExpression0);
      
      Any any0 = new Any(errorPage0, "vs!9j|4");
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertEquals("Any_1", any0.getComponentId());
      assertNotNull(any0);
      
      any0._setParent(errorPage0);
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertEquals("Any_1", any0.getComponentId());
      
      String string0 = any0.defaultTagName();
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertEquals("Any_1", any0.getComponentId());
      assertNull(string0);
      
      Block block0 = (Block)errorPage0.i();
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("div", block0.defaultTagName());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertNotNull(block0);
      
      Block block1 = (Block)errorPage0.pre();
      assertFalse(block1.equals((Object)block0));
      assertNotSame(block1, block0);
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(block1._isGeneratedId());
      assertEquals("div", block1.defaultTagName());
      assertEquals("Block_2", block1.getComponentId());
      assertNotNull(block1);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertFalse(errorPage0._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertTrue(errorPage0.isPage());
      assertFalse(errorPage0._isGeneratedId());
      assertNotNull(errorPage0);
      
      String string0 = "vs\\!9j|4";
      // Undeclared exception!
      try { 
        errorPage0.title("vs!9j|4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals(7, actionExpression0.length());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertNull(actionExpression0.getEvent());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[1] = (Object) actionExpression0;
      objectArray0[2] = (Object) "vs!9j|4";
      ActionExpression actionExpression1 = actionExpression0.event("vs!9j|4");
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertFalse(actionExpression0.isExternalUrl());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals(7, actionExpression0.length());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertEquals(7, actionExpression1.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertFalse(actionExpression1.isSubmissible());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression0.javascript("Ww^%$b98Vp");
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression2, actionExpression1);
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals(7, actionExpression0.length());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals("Ww^%$b98Vp", actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertFalse(actionExpression2.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertEquals(7, actionExpression2.length());
      assertFalse(actionExpression2.isSubmissible());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertEquals("Ww^%$b98Vp", actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertNotNull(actionExpression2);
      
      Any any0 = new Any(errorPage0, "Ww^%$b98Vp");
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertEquals("Any_1", any0.getComponentId());
      assertNotNull(any0);
      
      String string0 = any0.defaultTagName();
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertEquals("Any_1", any0.getComponentId());
      assertNull(string0);
      
      Block block0 = (Block)errorPage0.i();
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertNotNull(block0);
      
      Table table0 = new Table(block0, "=wbY");
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertEquals("table", table0.defaultTagName());
      assertEquals("=wbY", table0.getComponentId());
      assertFalse(table0._isGeneratedId());
      assertNotNull(table0);
      
      Table table1 = table0.renderHint("Ww^%$b98Vp");
      assertSame(table0, table1);
      assertSame(table1, table0);
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertEquals("table", table0.defaultTagName());
      assertEquals("=wbY", table0.getComponentId());
      assertFalse(table0._isGeneratedId());
      assertEquals("=wbY", table1.getComponentId());
      assertFalse(table1._isGeneratedId());
      assertEquals("table", table1.defaultTagName());
      assertNotNull(table1);
      
      ErrorPage errorPage1 = (ErrorPage)block0.end();
      assertSame(errorPage0, errorPage1);
      assertSame(errorPage1, errorPage0);
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertTrue(errorPage1.isPage());
      assertFalse(errorPage1._isBuilt());
      assertEquals("div", errorPage1.defaultTagName());
      assertFalse(errorPage1._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage1.getComponentId());
      assertNotNull(errorPage1);
      
      TableBlock tableBlock0 = table1.tfoot();
      assertSame(errorPage0, errorPage1);
      assertSame(table0, table1);
      assertSame(table1, table0);
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertEquals("table", table0.defaultTagName());
      assertEquals("=wbY", table0.getComponentId());
      assertFalse(table0._isGeneratedId());
      assertEquals("=wbY", table1.getComponentId());
      assertFalse(table1._isGeneratedId());
      assertEquals("table", table1.defaultTagName());
      assertEquals("TableBlock_1", tableBlock0.getComponentId());
      assertTrue(tableBlock0._isGeneratedId());
      assertEquals("div", tableBlock0.defaultTagName());
      assertNotNull(tableBlock0);
      
      Block block1 = (Block)tableBlock0.dl();
      assertFalse(block1.equals((Object)block0));
      assertSame(errorPage0, errorPage1);
      assertNotSame(block0, block1);
      assertSame(table0, table1);
      assertSame(table1, table0);
      assertNotSame(block1, block0);
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertEquals("table", table0.defaultTagName());
      assertEquals("=wbY", table0.getComponentId());
      assertFalse(table0._isGeneratedId());
      assertEquals("=wbY", table1.getComponentId());
      assertFalse(table1._isGeneratedId());
      assertEquals("table", table1.defaultTagName());
      assertEquals("TableBlock_1", tableBlock0.getComponentId());
      assertTrue(tableBlock0._isGeneratedId());
      assertEquals("div", tableBlock0.defaultTagName());
      assertEquals("Block_2", block1.getComponentId());
      assertTrue(block1._isGeneratedId());
      assertEquals("div", block1.defaultTagName());
      assertNotNull(block1);
      
      Any any1 = tableBlock0.col();
      assertFalse(any1.equals((Object)any0));
      assertFalse(block0.equals((Object)block1));
      assertNotSame(any1, any0);
      assertSame(errorPage0, errorPage1);
      assertNotSame(block0, block1);
      assertSame(table0, table1);
      assertSame(table1, table0);
      assertNull(any1.defaultTagName());
      assertTrue(any1._isGeneratedId());
      assertEquals("Any_2", any1.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertEquals("table", table0.defaultTagName());
      assertEquals("=wbY", table0.getComponentId());
      assertFalse(table0._isGeneratedId());
      assertEquals("=wbY", table1.getComponentId());
      assertFalse(table1._isGeneratedId());
      assertEquals("table", table1.defaultTagName());
      assertEquals("TableBlock_1", tableBlock0.getComponentId());
      assertTrue(tableBlock0._isGeneratedId());
      assertEquals("div", tableBlock0.defaultTagName());
      assertNotNull(any1);
      
      Table table2 = (Table)table1.nbsp();
      assertFalse(block0.equals((Object)block1));
      assertSame(errorPage0, errorPage1);
      assertSame(table2, table1);
      assertSame(table2, table0);
      assertNotSame(block0, block1);
      assertSame(table0, table2);
      assertSame(table0, table1);
      assertSame(table1, table0);
      assertSame(table1, table2);
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("table", table2.defaultTagName());
      assertFalse(table2._isGeneratedId());
      assertEquals("=wbY", table2.getComponentId());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertEquals("table", table0.defaultTagName());
      assertEquals("=wbY", table0.getComponentId());
      assertFalse(table0._isGeneratedId());
      assertEquals("=wbY", table1.getComponentId());
      assertFalse(table1._isGeneratedId());
      assertEquals("table", table1.defaultTagName());
      assertNotNull(table2);
      
      // Undeclared exception!
      try { 
        any1.map("_5pe4d");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5445217373791467
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertNotNull(errorPage0);
      
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNull(actionExpression0.getEvent());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) errorPage0;
      objectArray0[1] = (Object) actionExpression0;
      objectArray0[2] = (Object) "vs!9j|4";
      objectArray0[3] = (Object) actionExpression0;
      objectArray0[4] = (Object) "vs!9j|4";
      objectArray0[5] = (Object) actionExpression0;
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNull(actionExpression0.getEvent());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals(7, actionExpression0.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertFalse(actionExpression1.isSubmissible());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertNotNull(actionExpression1);
      
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertNull(actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals(7, actionExpression0.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertNull(actionExpression1.getEvent());
      assertTrue(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertNull(actionExpression2.getEvent());
      assertEquals(7, actionExpression2.length());
      assertTrue(actionExpression2.isSubmissible());
      assertFalse(actionExpression2.isExternalUrl());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertNotNull(actionExpression2);
      
      ActionExpression actionExpression3 = actionExpression2.event("vs!9j|4");
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression2);
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals(7, actionExpression0.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertEquals(7, actionExpression2.length());
      assertTrue(actionExpression2.isSubmissible());
      assertFalse(actionExpression2.isExternalUrl());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertEquals(7, actionExpression3.length());
      assertTrue(actionExpression3.isSubmissible());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertFalse(actionExpression3.isExternalUrl());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertNull(actionExpression3.getJavascript());
      assertNotNull(actionExpression3);
      
      Any any0 = new Any(errorPage0, actionExpression3);
      assertEquals(6, objectArray0.length);
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals(7, actionExpression0.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertEquals(7, actionExpression2.length());
      assertTrue(actionExpression2.isSubmissible());
      assertFalse(actionExpression2.isExternalUrl());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertEquals(7, actionExpression3.length());
      assertTrue(actionExpression3.isSubmissible());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertFalse(actionExpression3.isExternalUrl());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertNull(actionExpression3.getJavascript());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertNotNull(any0);
      
      String string0 = any0.defaultTagName();
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression2);
      assertSame(actionExpression0, actionExpression3);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression2);
      assertSame(actionExpression1, actionExpression3);
      assertSame(actionExpression1, actionExpression0);
      assertSame(actionExpression2, actionExpression3);
      assertSame(actionExpression2, actionExpression1);
      assertSame(actionExpression2, actionExpression0);
      assertSame(actionExpression3, actionExpression0);
      assertSame(actionExpression3, actionExpression1);
      assertSame(actionExpression3, actionExpression2);
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertTrue(actionExpression0.isSubmissible());
      assertFalse(actionExpression0.isExternalUrl());
      assertEquals("vs!9j|4", actionExpression0.getEvent());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertEquals(7, actionExpression0.length());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertEquals("vs!9j|4", actionExpression1.getEvent());
      assertNull(actionExpression1.getJavascript());
      assertFalse(actionExpression1.isExternalUrl());
      assertEquals(7, actionExpression1.length());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertTrue(actionExpression1.isSubmissible());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertNull(actionExpression2.getJavascript());
      assertEquals("vs!9j|4", actionExpression2.toString());
      assertEquals("vs!9j|4", actionExpression2.getEvent());
      assertEquals(7, actionExpression2.length());
      assertTrue(actionExpression2.isSubmissible());
      assertFalse(actionExpression2.isExternalUrl());
      assertTrue(actionExpression2.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression2.getExpression());
      assertEquals("vs!9j|4", actionExpression2.getActionExpression());
      assertEquals("vs!9j|4", actionExpression3.getActionExpression());
      assertEquals(7, actionExpression3.length());
      assertTrue(actionExpression3.isSubmissible());
      assertEquals("vs!9j|4", actionExpression3.toString());
      assertEquals("vs!9j|4", actionExpression3.getEvent());
      assertFalse(actionExpression3.isExternalUrl());
      assertTrue(actionExpression3.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression3.getExpression());
      assertNull(actionExpression3.getJavascript());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(any0._isGeneratedId());
      assertNull(any0.defaultTagName());
      assertNull(string0);
      
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(16, 16, 73, 179, 17, (-1840));
      assertNotNull(mockGregorianCalendar0);
      
      Label label0 = (Label)errorPage0.dfn((Object) mockGregorianCalendar0);
      assertFalse(errorPage0._isGeneratedId());
      assertTrue(errorPage0.isPage());
      assertEquals("div", errorPage0.defaultTagName());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(errorPage0._isBuilt());
      assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=?,YEAR=16,MONTH=16,WEEK_OF_YEAR=?,WEEK_OF_MONTH=?,DAY_OF_MONTH=73,DAY_OF_YEAR=?,DAY_OF_WEEK=?,DAY_OF_WEEK_IN_MONTH=?,AM_PM=0,HOUR=179,HOUR_OF_DAY=179,MINUTE=17,SECOND=-1840,MILLISECOND=?,ZONE_OFFSET=?,DST_OFFSET=?]", mockGregorianCalendar0.toString());
      assertEquals(1, mockGregorianCalendar0.getFirstDayOfWeek());
      assertEquals(1, mockGregorianCalendar0.getMinimalDaysInFirstWeek());
      assertTrue(mockGregorianCalendar0.isLenient());
      assertTrue(label0._isGeneratedId());
      assertEquals("span", label0.defaultTagName());
      assertEquals("Label_1", label0.getComponentId());
      assertNotNull(label0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertNotNull(errorPage0);
      
      String string0 = "vs\\!9j|4";
      ActionExpression actionExpression0 = new ActionExpression("vs!9j|4");
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertFalse(actionExpression0.isSubmissible());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertNotNull(actionExpression0);
      
      Object[] objectArray0 = new Object[6];
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals(6, objectArray0.length);
      assertSame(actionExpression0, actionExpression1);
      assertSame(actionExpression1, actionExpression0);
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertFalse(actionExpression0.isSubmissible());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertTrue(actionExpression1.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression1.getExpression());
      assertNull(actionExpression1.getEvent());
      assertEquals("vs!9j|4", actionExpression1.toString());
      assertEquals(7, actionExpression1.length());
      assertFalse(actionExpression1.isSubmissible());
      assertNull(actionExpression1.getJavascript());
      assertEquals("vs!9j|4", actionExpression1.getActionExpression());
      assertFalse(actionExpression1.isExternalUrl());
      assertNotNull(actionExpression1);
      
      String string1 = actionExpression0.extractMethod();
      assertFalse(string1.equals((Object)string0));
      assertSame(actionExpression0, actionExpression1);
      assertEquals("vs!9j|4", actionExpression0.getActionExpression());
      assertEquals(7, actionExpression0.length());
      assertNull(actionExpression0.getEvent());
      assertEquals("vs!9j|4", actionExpression0.toString());
      assertFalse(actionExpression0.isSubmissible());
      assertTrue(actionExpression0.isSubmitForm());
      assertEquals("vs!9j|4", actionExpression0.getExpression());
      assertNull(actionExpression0.getJavascript());
      assertFalse(actionExpression0.isExternalUrl());
      assertNotNull(string1);
      assertEquals("vs!9j|4", string1);
      
      String string2 = null;
      Any any0 = new Any(errorPage0, "vs!9j|4");
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertEquals("Any_1", any0.getComponentId());
      assertNotNull(any0);
      
      String string3 = any0.defaultTagName();
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertNull(any0.defaultTagName());
      assertTrue(any0._isGeneratedId());
      assertEquals("Any_1", any0.getComponentId());
      assertNull(string3);
      
      Block block0 = (Block)errorPage0.i();
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertNotNull(block0);
      
      String string4 = "cite";
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      assertNotNull(dynamicSelectModel0);
      
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("cite");
      assertSame(dynamicSelectModel0, dynamicSelectModel1);
      assertSame(dynamicSelectModel1, dynamicSelectModel0);
      assertNotNull(dynamicSelectModel1);
      
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.enumeration("");
      assertSame(dynamicSelectModel0, dynamicSelectModel2);
      assertSame(dynamicSelectModel0, dynamicSelectModel1);
      assertSame(dynamicSelectModel1, dynamicSelectModel2);
      assertSame(dynamicSelectModel1, dynamicSelectModel0);
      assertSame(dynamicSelectModel2, dynamicSelectModel0);
      assertSame(dynamicSelectModel2, dynamicSelectModel1);
      assertNotNull(dynamicSelectModel2);
      
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      assertNull(xmlEntityRef0.defaultTagName());
      assertFalse(xmlEntityRef0._isGeneratedId());
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef0.getComponentId());
      assertNotNull(xmlEntityRef0);
      
      Link link0 = new Link(block0, xmlEntityRef0);
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertNull(xmlEntityRef0.defaultTagName());
      assertFalse(xmlEntityRef0._isGeneratedId());
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef0.getComponentId());
      assertTrue(link0._isGeneratedId());
      assertEquals("Link_1", link0.getComponentId());
      assertEquals("a", link0.defaultTagName());
      assertNotNull(link0);
      
      InitialFieldValue initialFieldValue0 = new InitialFieldValue(link0, "");
      assertEquals("", initialFieldValue0.getStringReplacement());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertNull(xmlEntityRef0.defaultTagName());
      assertFalse(xmlEntityRef0._isGeneratedId());
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef0.getComponentId());
      assertTrue(link0._isGeneratedId());
      assertEquals("Link_1", link0.getComponentId());
      assertEquals("a", link0.defaultTagName());
      assertNotNull(initialFieldValue0);
      
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.empty(initialFieldValue0);
      assertSame(dynamicSelectModel3, dynamicSelectModel2);
      assertSame(dynamicSelectModel3, dynamicSelectModel0);
      assertSame(dynamicSelectModel3, dynamicSelectModel1);
      assertSame(dynamicSelectModel0, dynamicSelectModel2);
      assertSame(dynamicSelectModel0, dynamicSelectModel3);
      assertSame(dynamicSelectModel0, dynamicSelectModel1);
      assertSame(dynamicSelectModel1, dynamicSelectModel2);
      assertSame(dynamicSelectModel1, dynamicSelectModel0);
      assertSame(dynamicSelectModel1, dynamicSelectModel3);
      assertSame(dynamicSelectModel2, dynamicSelectModel3);
      assertSame(dynamicSelectModel2, dynamicSelectModel0);
      assertSame(dynamicSelectModel2, dynamicSelectModel1);
      assertEquals("", initialFieldValue0.getStringReplacement());
      assertFalse(errorPage0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", errorPage0.defaultTagName());
      assertFalse(errorPage0._isBuilt());
      assertTrue(errorPage0.isPage());
      assertTrue(block0._isGeneratedId());
      assertEquals("Block_1", block0.getComponentId());
      assertEquals("div", block0.defaultTagName());
      assertNull(xmlEntityRef0.defaultTagName());
      assertFalse(xmlEntityRef0._isGeneratedId());
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef0.getComponentId());
      assertTrue(link0._isGeneratedId());
      assertEquals("Link_1", link0.getComponentId());
      assertEquals("a", link0.defaultTagName());
      assertNotNull(dynamicSelectModel3);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = null;
      // Undeclared exception!
      try { 
        any0.ul();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = "java.lang.String@0000000004";
      Form form0 = new Form("java.lang.String@0000000004");
      assertFalse(form0._isGeneratedId());
      assertEquals("form", form0.defaultTagName());
      assertFalse(form0._isBuilt());
      assertNotNull(form0);
      
      String string1 = "";
      Hidden hidden0 = new Hidden(form0, "", "java.lang.String@0000000004");
      assertFalse(form0._isGeneratedId());
      assertEquals("form", form0.defaultTagName());
      assertFalse(form0._isBuilt());
      assertFalse(hidden0._isGeneratedId());
      assertEquals("", hidden0.getFormElementName());
      assertEquals("input", hidden0.defaultTagName());
      assertTrue(hidden0.isEmpty());
      assertTrue(hidden0.isValid());
      assertNotNull(hidden0);
      
      hidden0.useXhtml = true;
      assertFalse(form0._isGeneratedId());
      assertEquals("form", form0.defaultTagName());
      assertFalse(form0._isBuilt());
      assertFalse(hidden0._isGeneratedId());
      assertEquals("", hidden0.getFormElementName());
      assertEquals("input", hidden0.defaultTagName());
      assertTrue(hidden0.isEmpty());
      assertTrue(hidden0.isValid());
      
      String string2 = " on the page.";
      FormElement formElement0 = hidden0.value(" on the page.");
      assertSame(hidden0, formElement0);
      assertSame(formElement0, hidden0);
      assertFalse(form0._isGeneratedId());
      assertEquals("form", form0.defaultTagName());
      assertFalse(form0._isBuilt());
      assertFalse(hidden0._isGeneratedId());
      assertEquals("", hidden0.getFormElementName());
      assertEquals("input", hidden0.defaultTagName());
      assertTrue(hidden0.isEmpty());
      assertTrue(hidden0.isValid());
      assertEquals("", formElement0.getFormElementName());
      assertFalse(formElement0._isGeneratedId());
      assertTrue(formElement0.isEmpty());
      assertTrue(formElement0.isValid());
      assertEquals("input", formElement0.defaultTagName());
      assertNotNull(formElement0);
      
      // Undeclared exception!
      try { 
        formElement0.br();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
