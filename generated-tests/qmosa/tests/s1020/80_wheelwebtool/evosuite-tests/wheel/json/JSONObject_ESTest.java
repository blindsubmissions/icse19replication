/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:36:19 GMT 2018
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.toString();
      jSONObject0.isNull("{\"java.lang.String@0000000002\":\"java.lang.Class@0000000003\"}");
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7776612957621659
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<Byte, String> hashMap0 = new HashMap<Byte, String>();
      HashMap<Byte, String> hashMap1 = new HashMap<Byte, String>(hashMap0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap1);
      try { 
        jSONObject0.getBoolean("kBg|");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"kBg|\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "{";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must end with '}' at character 1 of {
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "z_9:O+\"";
      stringArray0[1] = "!X.~";
      stringArray0[2] = "6C]|)w(U!QlgLY3T6H";
      stringArray0[3] = "_@3";
      stringArray0[4] = "";
      stringArray0[5] = "U'";
      stringArray0[6] = "()M?,2>Ue(e/6eS";
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      double double0 = jSONObject0.optDouble("()M?,2>Ue(e/6eS", Double.NaN);
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      Double.sum(2006.6138068361, (-809.0));
      jSONObject1.put("", (Collection) null);
      jSONObject1.optBoolean("", false);
      JSONObject.doubleToString((-1440.9102671));
      JSONObject.getNames((Object) jSONObject1);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 0 of 
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      String string0 = JSONObject.valueToString(boolean0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Byte byte0 = new Byte((byte)91);
      String string0 = JSONObject.valueToString(byte0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<Object, Boolean> hashMap0 = new HashMap<Object, Boolean>(45);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Boolean boolean0 = Boolean.FALSE;
      hashMap0.replace((Object) jSONObject0, boolean0);
      Boolean.getBoolean("Ctb|ksf6P");
      Boolean.getBoolean("Ctb|ksf6P");
      jSONObject0.optString(")Ws");
      JSONObject.getNames((Object) boolean0);
      jSONObject0.toString(0, 45);
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      jSONObject0.put("Ctb|ksf6P", (Collection) linkedList0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Long long0 = new Long((-1049L));
      JSONObject jSONObject0 = new JSONObject(long0);
      int int0 = 218;
      Long.divideUnsigned(0L, 1334L);
      jSONObject0.toString(218, 218);
      jSONObject0.isNull("");
      jSONObject0.optLong("");
      JSONObject.valueToString(long0);
      try { 
        jSONObject0.getDouble("{\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{\\\"java.lang.String@0000000002\\\": \\\"java.lang.Class@0000000003\\\"}\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.put("", (-1.0));
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Boolean, Integer> hashMap0 = new HashMap<Boolean, Integer>();
      Integer integer0 = new Integer((-732));
      Integer integer1 = Integer.getInteger("", integer0);
      hashMap0.put((Boolean) null, integer1);
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      JSONObject.getNames(jSONObject1);
      JSONObject jSONObject2 = jSONObject0.put("HE", false);
      jSONObject0.optInt("b_dJRi8#[Q'i3p", 32);
      jSONObject0.keys();
      HashMap<Integer, Boolean> hashMap1 = new HashMap<Integer, Boolean>();
      jSONObject2.put("r-(6BU^5", (Map) hashMap1);
      try { 
        jSONObject1.getLong("6{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"6{\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<JSONObject, Boolean> hashMap0 = new HashMap<JSONObject, Boolean>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      BiFunction<JSONObject, Boolean, Boolean> biFunction0 = (BiFunction<JSONObject, Boolean, Boolean>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.replaceAll(biFunction0);
      String string0 = null;
      jSONObject0.optLong((String) null);
      try { 
        jSONObject0.getString((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Byte byte0 = new Byte((byte)10);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Z8v;)fn";
      stringArray0[1] = "\r";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "G@\"a";
      stringArray0[5] = "M1.#C)rq /Rn:[0nB";
      stringArray0[6] = "{}";
      stringArray0[7] = "-8+";
      stringArray0[8] = ")U5xq:UR|SEJME^";
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      try { 
        jSONObject0.append((String) null, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      long long0 = new Short((short) (-527));
      Short.toUnsignedInt((short) (-1782));
      JSONObject jSONObject0 = new JSONObject(short0);
      jSONObject0.put("", (short) (-527));
      JSONObject.getNames(jSONObject0);
      Byte byte0 = new Byte((byte)69);
      jSONObject0.append("9@[,qqosh1A@", byte0);
      jSONObject0.optLong("9@[,qqosh1A@");
      jSONObject0.toString((int) (short) (-1782));
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.194989579566304
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Boolean, Integer> hashMap0 = new HashMap<Boolean, Integer>();
      Integer integer0 = new Integer((-732));
      Integer integer1 = Integer.getInteger("", integer0);
      hashMap0.put((Boolean) null, integer1);
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      JSONObject.getNames(jSONObject1);
      JSONObject jSONObject2 = jSONObject0.put("HE", false);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      jSONObject2.put("b_dJRi8#[Q'i3p", (Collection) linkedList0);
      jSONObject1.optBoolean("b_dJRi8#[Q'i3p", false);
      JSONObject.doubleToString((-1440.9102671));
      String[] stringArray0 = JSONObject.getNames((Object) linkedList0);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      Double.sum(2006.6138068361, (-809.0));
      JSONObject.valueToString(jSONObject0, 3234, (-3307));
      jSONObject1.optInt((String) null, 4);
      jSONObject0.keys();
      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>();
      JSONObject jSONObject2 = jSONObject1.put("r-(6BU^5", (Map) hashMap0);
      jSONObject1.getLong("");
      jSONObject2.names();
      assertEquals(5, jSONObject1.length());
      assertEquals(5, jSONObject0.length());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.615630577027551
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("m$lon`@OKE2XBRd", 2128);
      Byte byte0 = new Byte((byte)0);
      JSONObject.numberToString(byte0);
      jSONObject0.remove("m$lon`@OKE2XBRd");
      JSONObject jSONObject2 = jSONObject0.put("m$lon`@OKE2XBRd", true);
      JSONObject jSONObject3 = jSONObject1.put("yb8xbFQ}p", true);
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      jSONObject2.put("Substring bounds error", (Collection) linkedList0);
      jSONObject3.optDouble((String) null, 0.0);
      jSONObject0.keys();
      jSONObject2.keys();
      jSONObject0.optJSONObject("yb8xbFQ}p");
      JSONObject.doubleToString(Double.NaN);
      String[] stringArray0 = JSONObject.getNames((Object) null);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.121834165223816
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      Double.sum(2006.6138068361, (-809.0));
      JSONObject jSONObject2 = jSONObject1.put("", (Collection) null);
      jSONObject1.optBoolean("", false);
      jSONObject1.names();
      jSONObject2.append("", (Object) null);
      jSONObject1.length();
      jSONObject1.optLong("JSONArray initial value should be a string or collection or array.", (-1L));
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      short short1 = (short) (-1782);
      Short.toUnsignedInt((short) (-1782));
      JSONObject jSONObject0 = new JSONObject(short0);
      jSONObject0.put("", 65009L);
      String string0 = "9@[,qqosh1A@";
      JSONObject jSONObject1 = jSONObject0.putOpt("9@[,qqosh1A@", short0);
      JSONObject.getNames(jSONObject0);
      Byte byte0 = new Byte((byte)110);
      jSONObject1.optInt("");
      try { 
        jSONObject1.append("9@[,qqosh1A@", byte0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[9@[,qqosh1A@] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.156750971308615
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "z_9:O+\"";
      stringArray0[1] = "!X.~";
      stringArray0[2] = "6C]|)w(U!QlgLY3T6H";
      stringArray0[3] = "_@3";
      stringArray0[4] = "";
      stringArray0[5] = "U'";
      stringArray0[6] = "()M?,2>Ue(e/6eS";
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      try { 
        jSONObject0.getDouble("\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\n\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HashMap<Object, Boolean> hashMap0 = new HashMap<Object, Boolean>(45);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Boolean boolean0 = Boolean.FALSE;
      hashMap0.replace((Object) jSONObject0, boolean0);
      Boolean.getBoolean("Ctb|ksf6P");
      Boolean.getBoolean("Ctb|ksf6P");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONArray jSONArray1 = jSONArray0.put(45, (Object) ")Ws");
      JSONArray jSONArray2 = new JSONArray();
      jSONArray2.toString();
      Object object0 = new Object();
      JSONObject.getNames(object0);
      JSONObject jSONObject1 = new JSONObject(jSONArray1);
      jSONObject1.has(")Ws");
      jSONObject1.optLong("K$*OPivW5U!^G&`", (long) 45);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3034884952192693
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      Short.toUnsignedInt((short) (-1782));
      JSONObject jSONObject0 = new JSONObject(short0);
      String string0 = "";
      JSONObject jSONObject1 = jSONObject0.put("", 65009L);
      Integer.getInteger("9@[,qqosh1A@");
      jSONObject1.putOpt("", (Object) null);
      JSONObject.getNames(jSONObject0);
      byte byte0 = (byte)57;
      Byte byte1 = new Byte((byte)57);
      Long long0 = new Long(65009L);
      jSONObject1.append("9@[,qqosh1A@", long0);
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      try { 
        jSONArray0.getJSONObject((short) (-1782));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[-1782] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2626597631498506
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Long long0 = new Long((-1049L));
      JSONObject jSONObject0 = new JSONObject(long0);
      Long.divideUnsigned(0L, 1334L);
      jSONObject0.toString(218, 218);
      jSONObject0.isNull("");
      jSONObject0.optLong("");
      JSONObject jSONObject1 = jSONObject0.put("", true);
      jSONObject1.optString("", (String) null);
      jSONObject1.remove((String) null);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.1368497752564632
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.putOpt("", double0);
      Double.sum(2006.6138068361, (-809.0));
      jSONObject0.isNull("isintValue");
      HashMap<Integer, JSONObject> hashMap0 = new HashMap<Integer, JSONObject>();
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      jSONObject1.optLong("");
      JSONArray jSONArray0 = new JSONArray();
      JSONObject.valueToString(jSONArray0);
      try { 
        jSONObject1.getDouble("ha");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"ha\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4887634871805178
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      Short.toUnsignedInt((short) (-527));
      JSONObject jSONObject0 = new JSONObject(short0);
      JSONObject jSONObject1 = jSONObject0.put("", 65009L);
      Byte byte0 = new Byte((byte)110);
      jSONObject1.optInt("");
      jSONObject1.append("9@[,qqosh1A@", byte0);
      JSONArray jSONArray0 = new JSONArray();
      jSONObject1.toJSONArray(jSONArray0);
      jSONObject0.optLong("9@[,qqosh1A@");
      jSONObject1.toString((int) (short) (-527));
      assertEquals(3, jSONObject1.length());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.451583060521786
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "m$lon`@OKE2XBRd";
      JSONObject jSONObject1 = jSONObject0.put("m$lon`@OKE2XBRd", 2128);
      byte byte0 = (byte)0;
      Byte byte1 = new Byte((byte)0);
      Byte.toUnsignedInt((byte)0);
      JSONObject.numberToString(byte1);
      jSONObject0.remove("m$lon`@OKE2XBRd");
      jSONObject0.put("m$lon`@OKE2XBRd", true);
      jSONObject0.isNull("m$lon`@OKE2XBRd");
      String string1 = null;
      try { 
        jSONObject1.getJSONObject((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5158897179861475
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short short1 = new Short((short) (-527));
      Short.toUnsignedInt((short) (-1782));
      JSONObject jSONObject0 = new JSONObject(short0);
      jSONObject0.put("", (long) short1);
      JSONObject.getNames(jSONObject0);
      Byte byte0 = new Byte((byte) (-84));
      jSONObject0.optInt("9@[,qqosh1A@");
      JSONObject jSONObject1 = jSONObject0.append("getsum", "9@[,qqosh1A@");
      JSONArray jSONArray0 = new JSONArray();
      jSONObject0.toJSONArray(jSONArray0);
      jSONObject0.optLong("getsum");
      // Undeclared exception!
      jSONObject1.toString(63754);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4249913134082715
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "\\u";
      jSONObject0.optLong(string0);
      try { 
        jSONObject0.getJSONObject("LcC0)8XOr+f2%/s=");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"LcC0)8XOr+f2%/s=\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      Short.toUnsignedInt((short) (-1782));
      JSONObject jSONObject0 = new JSONObject(short0);
      JSONObject jSONObject1 = jSONObject0.put("", 65009L);
      JSONObject jSONObject2 = jSONObject0.putOpt("9@[,qqosh1A@", short0);
      JSONObject.getNames(jSONObject0);
      Byte byte0 = new Byte((byte)110);
      jSONObject2.optInt("");
      JSONArray jSONArray0 = new JSONArray();
      jSONObject1.optBoolean("");
      Float float0 = new Float((double) (short) (-1782));
      jSONObject1.put("eY'mdwz|/[u8*", (Object) float0);
      jSONObject1.toJSONArray(jSONArray0);
      jSONObject0.optLong("9@[,qqosh1A@");
      String string0 = jSONObject2.toString((int) (short) (-1782));
      assertNotNull(string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.145248715798618
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Long long0 = new Long((-1049L));
      JSONObject jSONObject0 = new JSONObject(long0);
      Byte.valueOf((byte)41);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      Short.toUnsignedInt((short)1031);
      JSONObject jSONObject1 = new JSONObject();
      Float float0 = new Float((float) 1031);
      JSONObject jSONObject2 = jSONObject0.putOpt((String) null, float0);
      JSONObject.getNames(jSONObject2);
      Byte byte0 = new Byte((byte)41);
      jSONObject0.append("9@[,qqosh1A@", jSONObject1);
      jSONObject0.optLong("0+\"3#EEMH`-");
      jSONObject2.toString(1031);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.137808159182962
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "z_9:O+\"";
      String string0 = "!X.~";
      stringArray0[1] = "!X.~";
      stringArray0[2] = "6C]|)w(U!QlgLY3T6H";
      stringArray0[3] = "_@3";
      stringArray0[4] = "";
      stringArray0[5] = "U'";
      stringArray0[6] = "()M?,2>Ue(e/6eS";
      JSONObject jSONObject0 = new JSONObject((Map) null);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      try { 
        jSONObject1.getJSONObject("RpnB`q");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"RpnB`q\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Short.toUnsignedLong((short) (-527));
      Short.toUnsignedInt((short) (-527));
      Byte byte0 = new Byte((byte)110);
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject();
      Byte byte1 = new Byte((byte) (-53));
      jSONObject0.accumulate("{RL)", byte1);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.44585110184381
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Long long0 = new Long((-1049L));
      JSONObject jSONObject0 = new JSONObject(long0);
      Byte byte0 = Byte.valueOf((byte)41);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "0JHi4Uc|K4ZK0d^[";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      JSONObject jSONObject1 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject2 = jSONObject0.putOpt("", jSONObject1);
      Double.sum((-3004.0982786), 2006.6138068361);
      JSONObject jSONObject3 = jSONObject2.put("S@R]4;$&.", (Collection) null);
      jSONObject2.optBoolean("Z", true);
      jSONObject2.toString(60, (int) (byte)41);
      JSONObject.doubleToString(0.0);
      JSONObject.getNames((Object) byte0);
      jSONObject2.names();
      jSONObject3.optJSONArray("IWf'rg|*");
      JSONObject.valueToString((Object) null);
      JSONObject.doubleToString((byte)41);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short short1 = new Short((short) (-527));
      Short.toUnsignedInt((short) (-1782));
      JSONObject jSONObject0 = new JSONObject(short0);
      Byte byte0 = new Byte((byte)69);
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(object0, 70, (byte)69);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2428855786090867
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "z_9:O+\"";
      stringArray0[1] = "!X.~";
      JSONObject jSONObject0 = new JSONObject((Object) "z_9:O+\"");
      jSONObject0.optInt("z_9:O+\"", 0);
      JSONObject.getNames(jSONObject0);
      Byte byte0 = new Byte((byte) (-50));
      jSONObject0.toString((int) (byte) (-50));
      jSONObject0.names();
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HashMap<Double, Double> hashMap0 = new HashMap<Double, Double>();
      Double double0 = new Double(Double.NaN);
      hashMap0.put(double0, double0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "va";
      JSONArray jSONArray0 = new JSONArray();
      jSONObject0.accumulate("va", jSONArray0);
      hashMap0.clear();
      String string1 = "17";
      jSONObject0.optDouble("17");
      double double1 = 0.0;
      Double double2 = new Double(0.0);
      Double.isFinite(0.0);
      int int0 = 34;
      Double.min(Double.NaN, Double.NaN);
      try { 
        JSONObject.valueToString(jSONObject0, 13, 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSON does not allow non-finite numbers.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }
}
