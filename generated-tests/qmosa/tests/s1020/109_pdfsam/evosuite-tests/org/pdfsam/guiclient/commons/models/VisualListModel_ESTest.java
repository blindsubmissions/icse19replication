/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:50:49 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Point;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.DataBuffer;
import java.awt.image.DataBufferUShort;
import java.awt.image.Raster;
import java.awt.image.WritableRaster;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Predicate;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.event.ListDataListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1;
      visualListModel0.removeElements(1, 5, false);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.getValidElements();
      visualListModel0.elementsChanged();
      visualListModel0.getSize();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(5, "f", "!6;?zZo2c$ A<i");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.appendAllElements(stack0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.subList((-1729), (-1729), true);
      visualListModel0.appendAllElements(vector0);
      int int0 = visualListModel0.getSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 1072;
      intArray0[2] = 1;
      intArray0[3] = (-1900);
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.appendAllElements(linkedList0);
      int[] intArray1 = new int[0];
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.elementsChanged();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[7];
      intArray1[0] = 1672;
      intArray1[1] = 1672;
      intArray1[2] = 1672;
      intArray1[3] = 1672;
      intArray1[4] = 0;
      intArray1[5] = 1672;
      intArray1[6] = 1672;
      visualListModel0.reverseElements(intArray1);
      intArray0[0] = 1672;
      visualListModel0.moveDownIndexes(intArray0);
      assertArrayEquals(new int[] {1672}, intArray0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 2109, true);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-495), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-495)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      visualListModel0.rotateClockwiseElements(intArray0);
      intArray0[0] = 7;
      visualListModel0.moveUpIndex(7);
      intArray0[1] = 0;
      intArray0[2] = (-1548);
      intArray0[3] = (-44);
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = (-556);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.clearData();
      visualListModel0.clearData();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      vector0.listIterator();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-1548), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1548)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = (-3055);
      intArray0[1] = 0;
      intArray0[2] = (-1569);
      intArray0[3] = 0;
      intArray0[4] = 5;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.clearData();
      visualListModel0.elementsChanged();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((-2811), (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.getSize();
      visualListModel0.prependAllElements(linkedList0);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeElements(intArray0, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 849;
      int int1 = 0;
      // Undeclared exception!
      try { 
        visualListModel0.subList(849, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(849) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1);
      visualListModel0.getValidElements();
      int[] intArray0 = new int[5];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getElements();
      intArray0[4] = (-1);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.subList((-1), (-1), true);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.rotateClockwiseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.clone();
      visualListModel0.prependAllElements(linkedHashSet0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 732;
      visualListModel0.getElementAt(732);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.data = vector0;
      visualListModel0.getValidElements();
      int[] intArray0 = new int[7];
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(732, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(2719);
      visualListModel0.getValidElements();
      visualListModel0.removeElements(1741, 2719, false);
      int int0 = 0;
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.data = vector0;
      visualListModel0.moveUpIndex(0);
      int[] intArray0 = new int[6];
      intArray0[0] = 1741;
      intArray0[1] = 2719;
      intArray0[2] = (-4208);
      intArray0[3] = 1741;
      intArray0[4] = 1741;
      intArray0[5] = 2719;
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[0];
      visualListModel0.removeElements(intArray1, false);
      visualListModel0.getElements();
      visualListModel0.getElementAt(2719);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.removeElements(913, 1, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.getElements();
      visualListModel0.data = vector0;
      intArray0[1] = 12;
      intArray0[2] = (-1143);
      intArray0[3] = 1021;
      intArray0[4] = 2146;
      intArray0[5] = 0;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.addAllElements(12, (Collection<VisualPageListItem>) vector0);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-2944));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2944
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.559581156259877
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.removeElements(1741, 2719, false);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.data = vector0;
      visualListModel0.moveUpIndex(0);
      int[] intArray0 = new int[6];
      intArray0[0] = 1741;
      intArray0[1] = 2719;
      intArray0[2] = (-4208);
      intArray0[3] = 1741;
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 1741, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      visualListModel0.rotateClockwiseElements(intArray0);
      int int0 = 7;
      intArray0[0] = 7;
      visualListModel0.moveUpIndex(7);
      intArray0[1] = 0;
      intArray0[2] = (-1548);
      intArray0[3] = (-44);
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = (-556);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.clearData();
      visualListModel0.clearData();
      visualListModel0.elementsChanged();
      visualListModel0.clearData();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) null);
      visualListModel0.getValidElements();
      int int1 = 351;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, ",l", ",l");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1);
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(stack0);
      vector0.listIterator();
      boolean boolean0 = false;
      visualListModel1.subList((-1), (-1), false);
      VisualListModel visualListModel2 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel2.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0467385326945515
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.clearData();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel0.getValidElements();
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.removeElements(1, (-1), false);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1458417525947544
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.data = vector0;
      intArray0[0] = 0;
      intArray0[1] = 12;
      intArray0[2] = (-1143);
      intArray0[3] = 1021;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.elementsChanged();
      visualListModel0.getSize();
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(6, intArray0.length);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.clearData();
      visualListModel0.addAllElements(1741, (Collection<VisualPageListItem>) null);
      visualListModel0.getValidElements();
      visualListModel0.clearData();
      visualListModel0.updateElementAt(399, (VisualPageListItem) null);
      visualListModel0.removeElements(13, (-961), false);
      int[] intArray0 = new int[5];
      intArray0[0] = (-961);
      intArray0[1] = 1741;
      intArray0[2] = (-961);
      intArray0[3] = 13;
      intArray0[4] = (-961);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9072839993213795
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.clearData();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel0.getValidElements();
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      int int0 = (-3322);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.019814992492946
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.moveUpIndex(384);
      int[] intArray0 = new int[2];
      intArray0[0] = (-279);
      intArray0[1] = 384;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.getElements();
      visualListModel0.reverseElements(intArray0);
      stack0.spliterator();
      visualListModel0.removeElements((-1284), 632, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1);
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7118451352339121
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.clearData();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements((-1), (Collection<VisualPageListItem>) stack0);
      visualListModel1.getSize();
      visualListModel1.subList((-2227), 224);
      visualListModel1.prependAllElements((Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[5];
      intArray0[0] = (-2716);
      intArray0[1] = 224;
      intArray0[2] = 224;
      intArray0[3] = (-2227);
      intArray0[4] = 0;
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4205719259467045
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      linkedList0.removeIf(predicate3);
      visualListModel0.addAllElements((-2811), (Collection<VisualPageListItem>) linkedList0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-2811), (VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.clearData();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel0.subList(0, 0, true);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      int int0 = 5;
      boolean boolean0 = false;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.removeElements(1, 5, false);
      visualListModel0.elementChanged((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.2459520807289133
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      visualListModel0.reverseElements(intArray0);
      intArray0[0] = 2;
      intArray0[1] = 50;
      int int0 = (-167);
      intArray0[2] = (-167);
      intArray0[3] = 452;
      intArray0[4] = (-3584);
      visualListModel0.moveDownIndex(18);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getSize();
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndex(0);
      visualListModel0.getElements();
      int[] intArray1 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray1);
      int[] intArray2 = new int[4];
      intArray2[0] = 452;
      intArray2[1] = (-167);
      intArray2[2] = 50;
      intArray2[3] = 0;
      visualListModel0.reverseElements(intArray2);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      ColorModel.getRGBdefault();
      short[] shortArray0 = new short[6];
      shortArray0[0] = (short)4550;
      shortArray0[1] = (short)1;
      shortArray0[2] = (short)0;
      shortArray0[3] = (short) (-1759);
      shortArray0[4] = (short) (-2298);
      shortArray0[5] = (short)270;
      DataBufferUShort dataBufferUShort0 = new DataBufferUShort(shortArray0, (-378), 360);
      Point point0 = new Point();
      Point point1 = new Point(point0);
      // Undeclared exception!
      try { 
        Raster.createPackedRaster((DataBuffer) dataBufferUShort0, (-3016), 11, (int) (short) (-2298), intArray2, point1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-3016) and height (11) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0981473891350673
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(1, 5, false);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.getValidElements();
      Vector<Locale.Category> vector0 = new Vector<Locale.Category>();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      visualListModel0.removeElements(11, (-883), false);
      vector0.add(locale_Category0);
      JComboBox<Locale.Category> jComboBox0 = new JComboBox<Locale.Category>(vector0);
      visualListModel0.removeListDataListener(jComboBox0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements(1254, (Collection<VisualPageListItem>) stack0);
      visualListModel0.getValidElements();
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      visualListModel0.removeElements(1, 5, false);
      visualListModel0.getSize();
      visualListModel0.moveUpIndex(1);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      visualListModel0.addElementAt((VisualPageListItem) null, 5);
      visualListModel0.removeElements(1, 90, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.245035274126178
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(1, 5, false);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.getValidElements();
      Vector<Locale.Category> vector0 = new Vector<Locale.Category>();
      vector0.spliterator();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      vector0.add(locale_Category0);
      JComboBox<Locale.Category> jComboBox0 = new JComboBox<Locale.Category>(vector0);
      visualListModel0.removeListDataListener(jComboBox0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.clearData();
      visualListModel0.addAllElements((-648), (Collection<VisualPageListItem>) stack0);
      visualListModel0.getValidElements();
      visualListModel0.updateElementAt(952, (VisualPageListItem) null);
      visualListModel0.removeElements(1, 1978, false);
      visualListModel0.getSize();
      visualListModel0.moveUpIndex(1978);
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.094729047527649
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(6);
      visualListModel0.updateElementAt(6, (VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.clearData();
      visualListModel0.getElements();
      visualListModel0.subList(0, 0, true);
      visualListModel0.moveUpIndex(6);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2047854169135204
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1);
      visualListModel0.moveDownIndex((-1));
      visualListModel0.getListDataListeners();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.clearData();
      visualListModel0.elementsChanged();
      visualListModel0.moveDownIndex(0);
      visualListModel0.clearData();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel1.reverseElements(intArray0);
      visualListModel0.getElements();
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndex((-1));
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.438882950216986
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(4);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      stack0.iterator();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndex(0);
      int[] intArray0 = new int[5];
      intArray0[0] = 4;
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4791328074296435
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndex(0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel1.moveDownIndex(0);
      visualListModel1.reverseElements(intArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 0;
      visualListModel1.moveDownIndexes(intArray1);
      assertEquals(1, visualListModel1.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndex((-1));
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndex((-1));
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      intArray0[0] = (-1);
      visualListModel0.getSize();
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndex((-1));
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndex(1);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.3034884952192693
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-32));
      visualListModel0.updateElementAt((-32), (VisualPageListItem) null);
      visualListModel0.clearData();
      visualListModel0.getElements();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.updateElementAt((-32), (VisualPageListItem) null);
      visualListModel0.removeElements(0, 0, false);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElementAt((VisualPageListItem) null, (-32));
      visualListModel0.getSize();
      visualListModel1.moveUpIndex(1);
      visualListModel0.addElementAt((VisualPageListItem) null, 360);
      visualListModel1.addElementAt((VisualPageListItem) null, 8);
      int[] intArray0 = new int[1];
      intArray0[0] = 8;
      visualListModel1.moveDownIndexes(intArray0);
      assertNotSame(visualListModel1, visualListModel0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.2459520807289133
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-32));
      visualListModel0.updateElementAt((-32), (VisualPageListItem) null);
      visualListModel0.clearData();
      visualListModel0.getElements();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.removeElements(0, 0, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElementAt((VisualPageListItem) null, (-32));
      visualListModel0.getSize();
      visualListModel1.moveUpIndex(0);
      visualListModel0.addElementAt((VisualPageListItem) null, 360);
      visualListModel1.addElementAt((VisualPageListItem) null, 8);
      int[] intArray0 = new int[1];
      intArray0[0] = 8;
      visualListModel1.moveDownIndexes(intArray0);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-32));
      visualListModel0.updateElementAt((-32), (VisualPageListItem) null);
      visualListModel0.clearData();
      visualListModel0.getElements();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      intArray0[0] = 20000;
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 20000
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.704551445267297
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndex((-1));
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      stack0.push((VisualPageListItem) null);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-32));
      visualListModel0.updateElementAt((-32), (VisualPageListItem) null);
      visualListModel0.clearData();
      visualListModel0.elementsChanged();
      visualListModel0.getElements();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, stack0);
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual((Object) defaultTableModel0);
      Predicate<VisualPageListItem> predicate1 = predicate0.negate();
      stack0.removeIf(predicate1);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.updateElementAt((-32), (VisualPageListItem) null);
      visualListModel0.moveUpIndex(1);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      stack0.push((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.push((VisualPageListItem) null);
      stack0.push((VisualPageListItem) null);
      int[] intArray0 = new int[2];
      intArray0[0] = 1875;
      intArray0[1] = (-5);
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1874
         //
         verifyException("java.util.Vector", e);
      }
  }
}
