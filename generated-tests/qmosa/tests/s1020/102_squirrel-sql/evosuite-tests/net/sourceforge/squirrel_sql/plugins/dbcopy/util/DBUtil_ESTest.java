/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:50:54 GMT 2018
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Stack;
import java.util.TimeZone;
import java.util.Vector;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.fw.id.IIdentifier;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.PrimaryKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.ProcedureInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.fw.sql.UDTInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = "";
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBUtil.getLastStatementValues();
      DBUtil dBUtil0 = new DBUtil();
      String string0 = "6=Opp;N^Z?IlHp";
      String string1 = "U$M<P1oYkal";
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SESSION;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      DatabaseObjectInfo databaseObjectInfo0 = null;
      try {
        databaseObjectInfo0 = new DatabaseObjectInfo((String) null, "6=Opp;N^Z?IlHp", "U$M<P1oYkal", databaseObjectType0, (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setRecordDelayMillis(4L);
      dBCopyPreferenceBean0.setUseFileCaching(false);
      dBCopyPreferenceBean0.setCopyForeignKeys(true);
      dBCopyPreferenceBean0.setCopyForeignKeys(false);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      String string0 = "";
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "-Kj5mh0%e$93W&5", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBUtil.setLastStatement("");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      TableColumnInfo tableColumnInfo0 = null;
      try {
        tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, " CHAR(10) )", 0, "org.jfree.data.category.CategoryToPieDataset", 0, 0, 0, 0, "", " CHAR(10) )", 0, 0, "\\Ao@8I-=(o", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getUserSQLHistoryFile();
      applicationFileWrappersImpl0.getLibraryDirectory();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBUtil.fixCase((ISession) null, (String) null);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(arrayList0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "c:MM", (-2229));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = (-2429);
      Stack<ProcedureInfo> stack0 = new Stack<ProcedureInfo>();
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>(stack0);
      DBUtil.convertObjectToTableList(vector0);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      TableColumnInfo tableColumnInfo0 = null;
      try {
        tableColumnInfo0 = new TableColumnInfo("@\"a", "C)rq /R", "Null IMainPanelTab passed", "", (-8), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1304, (-3042), 1304, (-2429), "NgD\"@sZh|? ", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 0, (-1039), " from ", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)126;
      byteArray0[1] = (byte) (-2);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo(".", ".", ".");
      DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      boolean boolean0 = DBUtil.typesAreEquivalent(1136, 1136);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      String string0 = "\t";
      DBUtil.setLastStatementValues("\t");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "\t", "\t", ")) from ", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)126;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte) (-2);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.fw.dialects.H2DialectExt$H2DialectHelper", ".");
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("net.sourceforge.squirrel_sql.fw.dialects.H2DialectExt$H2DialectHelper", string0);
      
      boolean boolean0 = DBUtil.typesAreEquivalent((-866), (byte) (-2));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)126;
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte)126;
      byteArray0[3] = (byte) (-2);
      byteArray0[2] = (byte) (-5);
      byteArray0[1] = (byte) (-2);
      byteArray0[6] = (byte)126;
      byteArray0[7] = (byte)126;
      byteArray0[8] = (byte)126;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean0 = DBUtil.typesAreEquivalent((byte)126, (-1073741822));
      assertFalse(boolean0);
      
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[5];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("V2MIJ:WJp%/5", "V2MIJ:WJp%/5", "V2MIJ:WJp%/5", "V2MIJ:WJp%/5", (byte) (-2), (String) null, (byte)126, (byte)126, (byte) (-5), 35, "-1wJn!p_&~`Kr", (String) null, (-1730), (-2229), (String) null);
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("-1wJn!p_&~`Kr", (String) null, "-1wJn!p_&~`Kr", "-1wJn!p_&~`Kr", (byte)126, "", (-1407), (byte)126, 3385, (byte) (-5), "V2MIJ:WJp%/5", "-1wJn!p_&~`Kr", 994, (byte)126, "DBUtil.error.missingtable");
      tableColumnInfoArray0[1] = tableColumnInfo1;
      TableColumnInfo tableColumnInfo2 = new TableColumnInfo((String) null, "-1wJn!p_&~`Kr", (String) null, "DBUtil.error.missingtable", (-1073741822), (String) null, (byte) (-2), (-2), 2003, 2895, "z2", " ", 60, 2005, "-1wJn!p_&~`Kr");
      tableColumnInfoArray0[2] = tableColumnInfo2;
      TableColumnInfo tableColumnInfo3 = new TableColumnInfo("-1wJn!p_&~`Kr", (String) null, "/CoR*^\"", " ", (-3695), "+X", 2005, 1541, (-2), (-1407), "+X", "NO", (byte)126, (-5301), "NO");
      tableColumnInfoArray0[3] = tableColumnInfo3;
      TableColumnInfo tableColumnInfo4 = new TableColumnInfo("DBUtil.error.tablenotfound", "\t", "select count(*) from ", "DBUtil.error.tablenotfound", (-1828), (String) null, (-1364), 3, (-1982292595), (byte) (-2), (String) null, "V2MIJ:WJp%/5", (-3549), (-1724), "DBUtil.error.missingtable");
      tableColumnInfoArray0[4] = tableColumnInfo4;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("V2MIJ:WJp%/5, -1wJn!p_&~`Kr, DBUtil.error.missingtable,  , DBUtil.error.tablenotfound", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getApplication();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setDestSession((ISession) null);
      dBCopyPlugin0.getSourceSession();
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "BTREE");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "BahLvt:");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "\t", "fixCase: unexpected exception: ", (String) null, (-536), "ALTER TABLE ", (-536), (-895), (-536), 1896, "fixCase: unexpected exception: ", "", 1896, 1896, "ALTER SEQUENCE $sequenceName$ $startWith$ $increment$ $minimum$ $maximum$ $cache$ $cycle$");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-536), int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getDestSession();
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), (-7));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Stack<ProcedureInfo> stack0 = new Stack<ProcedureInfo>();
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>(stack0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "Zf%0N:pXM", "Zf%0N:pXM", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 365, "Zf%0N:pXM", (-332), 4499, 121, (-332), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "xy|V~7~G8", 63, 365, "xy|V~7~G8");
      vector0.add((IDatabaseObjectInfo) tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(vector0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setDestSession((ISession) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("plugins");
      FileSystemHandling.createFolder(evoSuiteFile0);
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("6b:k$lY-?jsRes\"}(vA", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ",", ",", (-43), ",", (-34), 2000000000, 2000, Integer.MIN_VALUE, "jH r s15`3?#B:", "V2MIJ:WJp%/5", (-862), (-801), "V2MIJ:WJp%/5");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "V2MIJ:WJp%/5", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "DBUtil.getTableInfo: found ";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("AUMjpV>vC", "DBUtil.getTableInfo: found ", (String) null, "", (-716), ";3`352nn*%BuO</[udK", (-716), 2045, 2182, 2182, "6qma27uV4^yzaR", "drop sequence ", 2045, 355, ";3`352nn*%BuO</[udK");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setDestDatabaseObject(tableColumnInfo0);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getDestSession();
      boolean boolean0 = DBUtil.typesAreEquivalent(0, 1);
      assertFalse(boolean0);
      
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "du/}F-odR", "du/}F-odR", 1, "du/}F-odR", 2006, 0, 1, (-553), "DBUtil.info.bindblobfile", "njar:", 2006, 1, " and table_schema = ? ");
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("9zI", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ")k_t");
      DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      boolean boolean0 = DBUtil.typesAreEquivalent(20, 3040);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("BTREE", ")k_t", ")k_t", (String) null, 3040, "Rro", 254, (-75), 125, (-75), "OQ%,+SA^!t#w", "Rro", (-670), 3040, "");
      boolean boolean1 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean1 == boolean0);
      
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = "BTREE";
      boolean boolean0 = false;
      dBCopyPlugin0.setPasteMenuEnabled(false);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("DBUtil.error.bindblobfailure", "BTREE", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "BTREE", 144, "clob", 2, 999, 2, 144, "getTableTypes", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2, (-998), "7owg,,AM");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      int int0 = 1189;
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getDestSession();
      DBUtil.typesAreEquivalent(1, 2291);
      ISQLConnection iSQLConnection0 = null;
      String string0 = "blob";
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "blob", "blob");
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (-3432));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, " =p.B");
      dBCopyPlugin0.getApplication();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, " from ", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = " L\"J";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("SessionManager.confirmClose", "SessionManager.confirmClose", ";3`352nn*%BuO</[udK", " L\"J", 1111, ";3`352nn*%BuO</[udK", (-4), (-4), (-1279), 62, "SessionManager.confirmClose", "SessionManager.confirmClose", 16, (-536), " L\"J");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FOREIGN_KEY;
      DatabaseObjectType.createNewDatabaseObjectType("SessionManager.confirmClose");
      DatabaseObjectType.createNewDatabaseObjectType(";3`352nn*%BuO</[udK");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      String string1 = "(";
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, " L\"J", "?9y-@]O[[t", "(", 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-530), 1, 1, 1, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1, 1, "S3[cW&P");
      dBCopyPlugin0.getPluginAppSettingsFolder();
      DBUtil.typesAreEquivalent(2, 2);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setPasteMenuEnabled(false);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("sZe~d", "S3[cW&P", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "ci$H<_P(|d)Im=2Xm", (-4), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-4), (-44), (-998), (-4096), "jp,S]6Y=TN:-y", ") has a particular foreign ", (-4096), (-1748), ") has a particular foreign ");
      dBCopyPlugin0.getSourceSession();
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.getLastStatement();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "ci$H<_P(|d)Im=2Xm");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ITableInfo iTableInfo0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "YN;{iUmQvH\"raEf%", (ITableInfo) null, (-390));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[7];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      DBUtil.convertTableToObjectList(list0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" L\"J", "ALTER SEQUENCE $sequenceName$ $startWith$ $increment$ $minium$ $maximum$ $cache$ $cycle$", "?9y-@]O[[t", (String) null, (-2), "catalog=", (-2), (-2344), (-2), (-2), (String) null, " L\"J", 64000, 2000, "j6");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("&<y^iU`M+{Lzfk8", "&<y^iU`M+{Lzfk8", "NF", "&<y^iU`M+{Lzfk8", (-5), "}0", 2000, (-353), 3, 679, "&<y^iU`M+{Lzfk8", "&<y^iU`M+{Lzfk8", (-5), 679, "PrefeAencesPanel.apgendRecordsToExistAngCheckBox");
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 2000);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPluginJarFilePath();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("$uh.k+hMY0h;_?&Hn4", "/ujhzT\"sd@ik>63~", (String) null, "/ujhzT\"sd@ik>63~", (-353), "$uh.k+hMY0h;_?&Hn4", 1997, (-1849), 113, 1400, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "replaceDistinctDataType: Unexpected exception - ", (-403), (-1849), "&<y^iU`M+{Lzfk8");
      DBUtil.replaceDistinctDataType((-67), tableColumnInfo0, (ISession) null);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "6Cdp", "6Cdp");
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ".T%6CtC", ".T%6CtC", "zYL(", 1765, "zYL(", 1765, (-1524), 1765, 1765, ".T%6CtC", ",/{vyj", (-4), (-4), "h}u0>");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals(".T%6CtC", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("interbase", "current timestamp", "yes_no", (String) null, (-3), "interbase", (-3), (-5), (-5), (-104), (String) null, "current timestamp", (-3), (-104), "!3=MEX?>f+d_>W[");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "G`&h#3(YLB6SU*Z,BM", "ADO52G`|");
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 1669);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "j|mPf_,e\".V]nGET O", "                                ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = DBUtil.typesAreEquivalent(16, 2005);
      assertFalse(boolean0);
  }
}
