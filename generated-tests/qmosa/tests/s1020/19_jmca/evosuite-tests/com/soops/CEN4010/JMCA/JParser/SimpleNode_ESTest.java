/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:18:24 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.ByteArrayInputStream;
import java.io.PushbackInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1495));
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1495));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(5260);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
      simpleNode0.dump("", stringWriter1);
      // Undeclared exception!
      try { 
        simpleNode0.toString("-D_\"+ilAG`A{71(J|");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5260
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("y-p}/fW*$lW<;Xt");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1692));
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtSetParent((Node) null);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString("Mk9|L>zkj1!d{O5hOm");
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.toString(";>UCp=E|WnP");
      simpleNode0.setIdentifier("&&");
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 291);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager1);
      simpleNode0.parser = javaParser1;
      simpleNode0.jjtGetParent();
      simpleNode0.parent = null;
      simpleNode0.setIdentifier("{");
      javaParserTokenManager1.debugStream = javaParserTokenManager0.debugStream;
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      javaParserTokenManager1.defaultLexState = 291;
      javaParser0.jjtree = jJTJavaParserState0;
      javaParserTokenManager0.MoreLexicalActions();
      simpleNode0.setIdentifier((String) null);
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtClose();
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 291
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString("X_,rqvQ$QM<}DaIP");
      simpleNode0.setIdentifier("");
      JavaParser javaParser0 = new JavaParser("X_,rqvQ$QM<}DaIP");
      Node node0 = javaParser0.currNode;
      simpleNode0.parent = null;
      simpleNode0.toString();
      simpleNode0.jjtClose();
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = ']';
      charArray0[1] = 'Y';
      charArray0[2] = 'y';
      charArray0[3] = 'j';
      charArray0[4] = '*';
      charArray0[5] = '$';
      charArray0[6] = '.';
      charArray0[7] = 'T';
      charArray0[8] = '$';
      stringWriter0.write(charArray0);
      simpleNode0.dump("X_,rqvQ$QM<}DaIP", stringWriter0);
      assertEquals("]Yyj*$.T$<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2652));
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = '>';
      charArray0[1] = ':';
      charArray0[2] = 'O';
      charArray0[3] = 'b';
      charArray0[4] = 'b';
      charArray0[5] = ':';
      charArray0[6] = '/';
      charArray0[7] = '8';
      charArray0[8] = 'X';
      stringWriter0.write(charArray0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtAddChild((Node) null, 57);
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtSetParent((Node) null);
      assertEquals(58, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = ";";
      StringReader stringReader0 = new StringReader(";");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 5260);
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 5260);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode2.identifiers = arrayList0;
      simpleNode2.jjtAddChild(simpleNode0, 1886);
      simpleNode2.jjtAddChild(simpleNode1, 1886);
      int int0 = 0;
      char[] charArray0 = new char[3];
      charArray0[0] = 'J';
      charArray0[1] = 'J';
      charArray0[2] = 'E';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, 2931, 1886);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("PrimarySuffix", stringWriter1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5171515848932913
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";");
      JavaParser javaParser0 = new JavaParser(";");
      JavaParser javaParser1 = new JavaParser("*le");
      Node node0 = javaParser0.currNode;
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 77);
      simpleNode0.toString();
      simpleNode0.jjtClose();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("JwM>J", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 1886);
      simpleNode0.dump("StatementExpression", stringWriter0);
      assertEquals(1887, simpleNode0.jjtGetNumChildren());
      assertEquals("<StatementExpression></StatementExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1240357221909014
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString("L");
      simpleNode0.setIdentifier(">");
      JavaParser javaParser0 = new JavaParser("VariableDeclaratorId");
      Node node0 = javaParser0.currNode;
      simpleNode0.toString();
      simpleNode0.jjtClose();
      StringWriter stringWriter0 = new StringWriter();
      Writer writer0 = null;
      simpleNode0.dump("0jVL", stringWriter0);
      simpleNode0.setIdentifier("L");
      int int1 = 3441;
      SimpleNode simpleNode1 = new SimpleNode(3441);
      // Undeclared exception!
      try { 
        simpleNode0.dump("K%r5rI", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.07468728385077
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString((String) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser((String) null);
      simpleNode0.setIdentifier("'P)4");
      simpleNode0.setIdentifier("nullCompilationUnit");
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtAddChild(simpleNode0, 2119);
      JavaParser javaParser1 = new JavaParser("nullCompilationUnit");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-1792749739));
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.04138000510499
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(36);
      simpleNode0.setIdentifier("&");
      JavaParser javaParser0 = new JavaParser("Literal");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParser0.token_source = javaParserTokenManager0;
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 77);
      simpleNode0.toString();
      simpleNode0.jjtClose();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("Name : &", stringWriter0);
      simpleNode1.jjtAddChild(simpleNode0, 36);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, (-1789569704));
      simpleNode1.dump("Name : &", stringWriter0);
      assertEquals(37, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4205719259467042
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";");
      JavaParser javaParser0 = new JavaParser(";");
      SimpleNode simpleNode0 = new SimpleNode(33);
      simpleNode0.setIdentifier(";");
      JavaParser javaParser1 = new JavaParser("VariableDeclaratorId");
      JavaParser javaParser2 = new JavaParser(javaParser0.token_source);
      Node node0 = javaParser2.currNode;
      simpleNode0.toString();
      simpleNode0.jjtClose();
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(javaParser1, 1685);
      simpleNode1.dump("VariableDeclaratorId", stringWriter0);
      simpleNode1.setIdentifier("|koe}jb");
      simpleNode0.setIdentifier(" ");
      SimpleNode simpleNode2 = new SimpleNode(33);
      simpleNode0.dump("", stringWriter0);
      simpleNode0.dump("0jVL", stringWriter0);
      assertEquals("<WildcardBounds>\n  <identifier> </identifier>\n</WildcardBounds>\n<WildcardBounds>\n  <identifier> </identifier>\n</WildcardBounds>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0102750119258221
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(36);
      simpleNode0.setIdentifier("&&");
      JavaParser javaParser0 = new JavaParser("Literal");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 77);
      simpleNode1.toString();
      simpleNode0.jjtClose();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("Literal", stringWriter0);
      simpleNode0.jjtAddChild(simpleNode1, 36);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, (-1842260461));
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "StatementExpression");
      simpleNode2.dump("for", stringWriter1);
      simpleNode2.dump("\"final\"", stringWriter1);
      simpleNode2.dump("nHG9tIDQoZ+qbD,", stringWriter0);
      assertEquals("<Name>\n  <identifier>*amp</identifier>\n</Name>\nStatementExpression", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8377716126398524
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("Literal");
      Node node0 = javaParser0.currNode;
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-9);
      JavaParser javaParser1 = new JavaParser("|wEWN sVAYEjQx76F");
      Node node1 = javaParser1.currNode;
      SimpleNode simpleNode0 = new SimpleNode(32);
      simpleNode0.toString();
      simpleNode0.jjtClose();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("|wEWN sVAYEjQx76F", stringWriter1);
      stringWriter1.write(25);
      simpleNode0.setIdentifier(");Ad-LP0].,BeMkV");
      simpleNode0.setIdentifier(">>");
      SimpleNode simpleNode1 = new SimpleNode((byte) (-9));
      simpleNode1.dump("q[$)4Y,", stringWriter1);
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) "TypeArgument");
      simpleNode1.dump("pQ(`Alg/}+\"wC */", stringWriter2);
      simpleNode0.dump("|wEWN sVAYEjQx76F", stringWriter0);
      assertEquals("TypeArgument<TypeArgument>\n  <identifier>);Ad-LP0].,BeMkV</identifier>\n  <identifier>*rshft</identifier>\n</TypeArgument>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1674);
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "MethodDeclaration");
      simpleNode0.dump("MethodDeclaration", stringWriter1);
      simpleNode0.dump("MethodDeclaration", stringWriter0);
      simpleNode0.dump("WYyqO", stringWriter0);
      char[] charArray0 = new char[6];
      charArray0[0] = '\"';
      charArray0[1] = 'n';
      charArray0[2] = '2';
      charArray0[3] = 'L';
      charArray0[4] = '*';
      charArray0[5] = '|';
      stringWriter0.write(charArray0);
      simpleNode0.dump(" ", stringWriter0);
      simpleNode0.dump("s]zOu-r1A^wO}6$MVU'", stringWriter1);
      simpleNode0.dump("s]zOu-r1A^wO}6$MVU'", stringWriter1);
      assertSame(stringWriter1, stringWriter0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9320738874454946
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(70);
      simpleNode0.setIdentifier("&&");
      JavaParser javaParser0 = new JavaParser("&&");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 77);
      simpleNode1.toString();
      simpleNode0.jjtClose();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("`X+*^r|GnVL$fMQ y", stringWriter0);
      simpleNode1.setIdentifier("StatementExpression");
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("EnumConstant", stringWriter1);
      simpleNode1.dump("*CJ|>$IcxZyH[", stringWriter1);
      simpleNode1.dump((String) null, stringWriter0);
      simpleNode1.dump((String) null, stringWriter1);
      simpleNode0.dump("", stringWriter1);
      assertEquals("<Statement>\n  <identifier>*amp</identifier>\n  <identifier>*le</identifier>\n</Statement>\n<StatementExpression>\n  <identifier>StatementExpression</identifier>\n</StatementExpression>\n<StatementExpression>\n  <identifier>StatementExpression</identifier>\n</StatementExpression>\n<Statement>\n  <identifier>*amp</identifier>\n  <identifier>*le</identifier>\n</Statement>\n", stringWriter1.toString());
      
      StringWriter stringWriter2 = new StringWriter(70);
      simpleNode1.dump("NormalAnnotation", stringWriter2);
      assertEquals("<StatementExpression>\n  <identifier>StatementExpression</identifier>\n</StatementExpression>\n", stringWriter2.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.349792396172401
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")");
      JavaParser javaParser0 = new JavaParser((String) null);
      SimpleNode simpleNode0 = new SimpleNode(77);
      simpleNode0.toString();
      simpleNode0.jjtClose();
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 77);
      simpleNode1.setIdentifier("}");
      SimpleNode simpleNode2 = new SimpleNode((-1922));
      simpleNode0.dump("^Rf-/&BHDd) N=FIhdc", stringWriter0);
      simpleNode1.dump((String) null, stringWriter0);
      assertEquals("<StatementExpression>\n</StatementExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.7201248812718097
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(70);
      simpleNode0.setIdentifier("&&");
      JavaParser javaParser0 = new JavaParser("&&");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      Node node0 = javaParser0.currNode;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("J2mB", stringWriter0);
      String string0 = " (";
      simpleNode0.setIdentifier("&&");
      simpleNode0.setIdentifier("<");
      simpleNode0.dump("&&", stringWriter0);
      StringWriter stringWriter1 = new StringWriter(70);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 70);
      simpleNode1.dump("<5`v}y:Jk/", stringWriter0);
      StringReader stringReader0 = new StringReader("<5`v}y:Jk/");
      JavaParser javaParser1 = new JavaParser(stringReader0);
      SimpleNode simpleNode2 = new SimpleNode(javaParser1, (-1082936567));
      SimpleNode simpleNode3 = new SimpleNode(javaParser1, (-1082936567));
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      SimpleNode simpleNode4 = new SimpleNode(1542);
      simpleNode1.dump("<5`v}y:Jk/", stringWriter1);
      // Undeclared exception!
      try { 
        stringWriter1.append((CharSequence) " (", 75, (-3080));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
