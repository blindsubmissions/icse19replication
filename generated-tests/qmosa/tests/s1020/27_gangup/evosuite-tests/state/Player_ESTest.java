/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:02:56 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(0L);
      player0.gangStrength();
      player0.getTimeOfDeath();
      byte[] byteArray0 = new byte[2];
      player0.reset(false);
      byteArray0[0] = (byte) (-33);
      player0.setY(1);
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      player0.pack(dataOutputStream0);
      byteArray0[1] = (byte)0;
      player0.unpack(byteArray0);
      float float0 = player0.getMoney();
      assertEquals(1.0F, player0.getY(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-1856), "C", (-1856));
      player0.getSubparty();
      player0.setDead();
      Party party0 = new Party();
      player0.next = party0;
      player0.reset(false);
      Player player1 = new Player((-1856), "C", "Q,aJyf2[", 0, (-1856));
      player1.remove(party0);
      byte[] byteArray0 = player0.pack();
      player0.head = (Party) player1;
      player0.setDead();
      party0.getSubparty();
      player1.gangStrength();
      player0.unpack(byteArray0);
      player1.setY((-391.0F));
      player0.pack();
      player0.isConnected();
      party0.prev = (Party) player1;
      player0.setMoney(0.2F);
      player0.unpack(byteArray0);
      player1.setMoney((short)4919);
      player0.getStrength();
      player1.setJoinOK(player0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((-842), "1JN;", (String) null, (-842));
      player0.getY();
      player0.setConnected(true);
      Player player1 = new Player();
      player0.remove(player1);
      player0.getIP();
      player0.getTimeOfDeath();
      player0.setY((-2182.0F));
      player0.getMoney();
      player0.setY((-842));
      assertEquals((-842.0F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(0, "T3kt%K=", 0);
      player0.setDead(0L, false);
      byte[] byteArray0 = player0.pack();
      player0.setY((-3489.2961F));
      Player player1 = new Player(2, "T3kt%K=", "T3kt%K=", (-1995));
      player1.gangStrength();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.markSupported();
      dataInputStream0.readUnsignedShort();
      player0.unpack(dataInputStream0);
      player1.setZ(0L);
      player1.setDead(0L, true);
      player1.setDead(0L, true);
      player1.next = (Party) player0;
      player1.setY(0);
      player0.setJoinOK(player1, false);
      player1.setMoney((short)4919);
      player0.getIP();
      player0.pack();
      player1.type();
      player0.getMoney();
      player0.getMoney();
      player0.setDead(0L, false);
      player1.reset(false);
      int int0 = player0.getStrength();
      assertEquals((-3489.2961F), player0.getY(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(2809, "Player", "Player", 2809);
      float float0 = 0.0F;
      boolean boolean0 = true;
      player0.reset(true);
      player0.next = (Party) null;
      player0.setZ(2809);
      player0.setMoney(1.0F);
      player0.setDead();
      player0.id = 2809;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(1356);
      player0.setX((-1650.8F));
      player0.head = null;
      player0.setMoney(10.0F);
      player0.setMoney(1356);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte)91;
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte) (-122);
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)112;
      player0.unpack(byteArray0);
      player0.isConnected();
      player0.setDead(1800L, true);
      int int0 = player0.gangStrength();
      assertEquals(1356.0F, player0.getMoney(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = (-3268);
      Player player0 = new Player((-3268));
      player0.getName();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      mockFile0.getAbsolutePath();
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      player0.setDead((long) (-3268), true);
      DataOutputStream dataOutputStream1 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-1449), "y?W;>UCp=E|WnP", "y?W;>UCp=E|WnP", (-1449));
      byte[] byteArray0 = new byte[2];
      player0.setZ((-1449));
      player0.setY((-1449));
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-76);
      player0.unpack(byteArray0);
      player0.toString();
      MockPrintStream mockPrintStream0 = new MockPrintStream("y?W;>UCp=E|WnP");
      PrintStream printStream0 = mockPrintStream0.format("", (Object[]) null);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      player0.pack(dataOutputStream0);
      player0.pack();
      player0.setDead();
      player0.getX();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("y?W;>UCp=E|WnP");
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockFileOutputStream0);
      int int0 = 2111;
      mockPrintStream1.println();
      mockPrintStream1.println();
      // Undeclared exception!
      try { 
        mockPrintStream1.append((CharSequence) "y?W;>UCp=E|WnP", 2111, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(1948, "9,*&`{>^A;", 1);
      Party party0 = player0.head;
      player0.add((Party) null);
      player0.type();
      Player player1 = new Player(0, "%Rxm(2*V", "9,*&`{>^A;", 1948);
      player0.setJoinOK(player1, true);
      player0.setZ(1);
      player0.getZ();
      player0.reset(false);
      assertEquals(1.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(3);
      player0.setZ(0.0F);
      Player player1 = new Player(3, (String) null, (short)4919);
      player0.setDead(1L);
      boolean boolean0 = false;
      player0.isJoinOK(player1, false);
      byte[] byteArray0 = new byte[0];
      player1.unpack(byteArray0);
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-725));
      player0.setY(4468.8F);
      Player player1 = new Player((short)4919, ">g*yjdKv%cMsBa", "", 5);
      player0.remove(player1);
      player0.reset(false);
      player0.setMoney(727.4001F);
      player0.setMoney(727.4001F);
      player0.isDead();
      boolean boolean0 = player0.isConnected();
      assertEquals(4468.8F, player0.getY(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0, "x[qKDX5vf<", 4);
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      int int1 = player0.getPictureId();
      assertEquals(4, int1);
      
      player0.setMoney(0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(0, "", "", 223);
      player0.setY(1.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.setY(213);
      Player player1 = new Player(213, " ", 213);
      player0.isJoinOK(player1, false);
      player0.isDead();
      player0.setDead();
      System.setCurrentTimeMillis((short)4919);
      player1.isDead();
      System.setCurrentTimeMillis((short)4919);
      boolean boolean0 = player0.isDead();
      assertEquals(213.0F, player0.getY(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(0, "", "", 223);
      player0.setY(1.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.setY(213);
      Player player1 = new Player(213, " ", 213);
      player0.isJoinOK(player1, false);
      player0.isDead();
      System.setCurrentTimeMillis((short)4919);
      player1.setJoinOK(player0, false);
      player1.isDead();
      System.setCurrentTimeMillis((short)4919);
      player0.isDead();
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(213.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-725));
      player0.setY(4468.8F);
      player0.setY(0.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.setY(0.0F);
      Player player1 = new Player((short)4919, "r>Hb8O&cv", 5);
      player0.isDead();
      System.setCurrentTimeMillis(5);
      player1.setJoinOK(player0, false);
      player1.isDead();
      System.setCurrentTimeMillis(19919L);
      player1.isDead();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.893788232391138
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(0, "", "", 223);
      player0.setY(1.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.setY((-566.21783F));
      Player player1 = new Player(5, "", 0);
      player0.isJoinOK(player1, true);
      player1.isDead();
      System.setCurrentTimeMillis(213);
      player1.setJoinOK(player0, false);
      player0.isDead();
      System.setCurrentTimeMillis((-89L));
      player1.isDead();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals((-566.21783F), player0.getY(), 0.01F);
      assertTrue(boolean0);
  }
}
