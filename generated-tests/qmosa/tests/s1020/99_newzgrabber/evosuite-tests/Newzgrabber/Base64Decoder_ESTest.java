/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:23:01 GMT 2018
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.PushbackInputStream;
import java.time.Month;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte) (-33);
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte) (-112);
      byteArray0[8] = (byte) (-105);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 488);
      byteArrayInputStream0.mark(1);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte) (-33);
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte) (-112);
      byteArray0[8] = (byte) (-105);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 488);
      byteArrayInputStream0.mark(1);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.ABORT = true;
      base64Decoder0.decodeStream();
      assertEquals(0L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.2868359830561607
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte) (-33);
      byteArray0[4] = (byte)48;
      byteArray0[5] = (byte)10;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)48;
      byteArray1[1] = (byte) (-33);
      byteArray1[2] = (byte) (-112);
      byteArray1[3] = (byte)10;
      byteArray1[4] = (byte)10;
      byteArray1[5] = (byte)50;
      byteArray1[6] = (byte)1;
      byteArray1[7] = (byte) (-33);
      byteArray1[8] = (byte)48;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)10);
      byteArrayInputStream0.mark(851);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte) (-112);
      byteArray2[1] = (byte) (-11);
      byteArrayInputStream0.read(byteArray2);
      base64Decoder0.decodeStream();
      assertEquals(2L, base64Decoder0.getLineCount());
      
      base64Decoder0.decodeStream();
      assertEquals(2L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.2868359830561607
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte) (-33);
      byteArray0[4] = (byte)5;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)48;
      byteArray1[1] = (byte) (-33);
      byteArray1[2] = (byte) (-112);
      byteArray1[4] = (byte)10;
      byteArray1[5] = (byte)50;
      byteArray1[6] = (byte)1;
      byteArray1[7] = (byte) (-33);
      byteArray1[8] = (byte)48;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)10);
      byteArrayInputStream0.mark(851);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      Month month0 = Month.FEBRUARY;
      base64Decoder0.setStatusObject(month0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte) (-33);
      byteArray0[4] = (byte)48;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      byteArray0[5] = (byte)10;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)48;
      byteArray1[1] = (byte) (-33);
      byteArray1[3] = (byte)10;
      byteArray1[4] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 43);
      byteArrayInputStream0.mark((byte)10);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      Month month0 = Month.FEBRUARY;
      base64Decoder0.LineCount = (long) (byte)48;
      base64Decoder0.setStatusObject((Object) null);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(50L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-33);
      byteArray0[6] = (byte)5;
      byteArray0[5] = (byte)10;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream1, (byte)5);
      byteArrayInputStream1.mark((byte)5);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(byteArrayInputStream2, (byte)5);
      byteArrayInputStream1.mark((byte)5);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream1);
      byteArrayInputStream1.read(byteArray0);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder1.decodeStream();
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream0);
      Newzgrabber.IsBatch = true;
      base64Decoder2.decodeStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedCustomInputStream1, 3209);
      Base64Decoder base64Decoder3 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream1);
      base64Decoder3.setReader(bufferedCustomInputStream1);
      byteArrayInputStream0.mark((byte)5);
      Base64Decoder base64Decoder4 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream0);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArrayInputStream3.read(byteArray0);
      base64Decoder3.decodeStream();
      Base64Decoder base64Decoder5 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream1);
      base64Decoder5.decodeStream();
      base64Decoder4.decodeStream();
      base64Decoder3.decodeStream();
      assertFalse(base64Decoder3.equals((Object)base64Decoder0));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.2145591551764051
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)58;
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)90;
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, false);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0, 70);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "UGA(3_WD14#e[WD^-T");
      byteArrayInputStream0.mark((-46));
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream0);
      byteArrayInputStream0.reset();
      Month month0 = Month.FEBRUARY;
      base64Decoder0.foundbegin = false;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(2L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.19144408195771734
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)97;
      byteArray0[1] = (byte)97;
      byteArray0[5] = (byte)97;
      byteArray0[3] = (byte) (-33);
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)10;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)97;
      byteArray1[1] = (byte) (-33);
      byteArray1[2] = (byte) (-112);
      byteArray1[4] = (byte)10;
      byteArray1[5] = (byte)0;
      byteArray1[6] = (byte)1;
      byteArray1[7] = (byte) (-33);
      byteArray1[8] = (byte)97;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)10);
      byteArrayInputStream0.mark(851);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      Month month0 = Month.APRIL;
      base64Decoder0.setStatusObject(month0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, " $cDEd;S");
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.17884491271684755
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)53;
      byteArray0[1] = (byte)53;
      byteArray0[2] = (byte)53;
      byteArray0[3] = (byte)47;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, false);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0, 70);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "UGA(3_WD14#e[WD^-T");
      byteArrayInputStream0.mark((-64));
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArrayInputStream0.reset();
      Month month0 = Month.MAY;
      bufferedCustomInputStream1.INCR = (int) (byte)10;
      base64Decoder0.setStatusObject("\u0090");
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream0);
      base64Decoder1.decodeStream();
      base64Decoder1.decodeStream();
      assertEquals(3, byteArrayOutputStream0.size());
      assertEquals("\uFFFD", byteArrayOutputStream0.toString());
  }
}
