/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 17:37:08 GMT 2018
 */

package wheel.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import java.util.Calendar;
import java.util.List;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;
import org.xmlpull.mxp1_serializer.MXSerializer;
import org.xmlpull.v1.XmlPullParserFactory;
import org.xmlpull.v1.XmlSerializer;
import org.xmlpull.v1.wrapper.XmlPullWrapperFactory;
import org.xmlpull.v1.wrapper.XmlSerializerWrapper;
import org.xmlpull.v1.wrapper.classic.StaticXmlSerializerWrapper;
import org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.CheckboxGroup;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Hidden;
import wheel.components.ISelectModel;
import wheel.components.Image;
import wheel.components.Label;
import wheel.components.NumberInput;
import wheel.components.Radio;
import wheel.components.Select;
import wheel.components.Submit;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.TableRow;
import wheel.components.Text;
import wheel.components.TextArea;
import wheel.components.TextInput;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "~%", "duplicated attributes ");
      // Undeclared exception!
      try { 
        checkbox0.isInt();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = null;
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      Checkbox checkbox0 = null;
      try {
        checkbox0 = new Checkbox(xmlEntityRef0, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("6Wl6ekM|h");
      // Undeclared exception!
      try { 
        xmlEntityRef0.object();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "$sq&";
      Checkbox checkbox0 = new Checkbox(errorPage0, "$sq&", "$sq&");
      // Undeclared exception!
      try { 
        checkbox0.isInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5691529462031188
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "guE";
      FileInput fileInput0 = new FileInput((Component) null, "guE", "guE");
      ActionExpression actionExpression0 = new ActionExpression("guE");
      Form form0 = null;
      try {
        form0 = new Form(fileInput0, "guE", actionExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "";
      String string1 = "";
      NumberInput numberInput0 = null;
      try {
        numberInput0 = new NumberInput(errorPage0, "", "", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to initialize DecimalFormat with pattern ''.
         //
         verifyException("wheel.components.NumberInput", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TextInput textInput0 = new TextInput((Component) null, "TextInput", "j\"S!=");
      textInput0.defaultTagName();
      textInput0.getAttributes();
      String string0 = "-!.#";
      Hidden hidden0 = new Hidden((Component) null, "j\"S!=", "-!.#");
      Label label0 = null;
      try {
        label0 = new Label((Component) null, hidden0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "C_n";
      Form form0 = new Form("C_n");
      form0.selectModel();
      // Undeclared exception!
      try { 
        form0.kbd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "map";
      // Undeclared exception!
      try { 
        errorPage0.dateInput("map", "map");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      radio0.config();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        radio0.meta();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        radio0.li((Object) "rh");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        radio0.acronym((Object) "rh");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Component component0 = null;
      Checkbox checkbox0 = new Checkbox((Component) null, "baF", "baF");
      Integer integer0 = new Integer(3);
      String string0 = null;
      // Undeclared exception!
      try { 
        checkbox0.checkbox((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.333196714286247
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "~%";
      String string1 = "duplicated attributes ";
      Checkbox checkbox0 = new Checkbox((Component) null, "~%", "duplicated attributes ");
      // Undeclared exception!
      try { 
        checkbox0.ins((Object) "~%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      String[] stringArray0 = new String[0];
      Component component0 = radio0.attributes(stringArray0);
      radio0.renderId = true;
      FormElement formElement0 = radio0.value("rh");
      assertSame(formElement0, component0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      // Undeclared exception!
      try { 
        radio0.img("rh", "rh");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      // Undeclared exception!
      try { 
        radio0.tfoot();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tfoot component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "reset";
      String string1 = "small";
      FileInput fileInput0 = new FileInput((Component) null, "reset", "small");
      fileInput0.getTagName();
      Any any0 = null;
      try {
        any0 = new Any(fileInput0, "reset");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "duplicated attributes ";
      Radio radio0 = new Radio((Component) null, "duplicated attributes ", "VK");
      radio0._getChildren();
      Checkbox checkbox0 = new Checkbox(radio0, "VK", "{1Ymsx><:+!");
      // Undeclared exception!
      try { 
        checkbox0.u();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "guE";
      FileInput fileInput0 = new FileInput((Component) null, "guE", "guE");
      // Undeclared exception!
      try { 
        fileInput0.pre((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "{1Ymsx><:+!", "'");
      // Undeclared exception!
      try { 
        checkbox0.address();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        radio0.attributes(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attributes must be given in name, value pairs.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      radio0.renderId = true;
      radio0.value("rh");
      // Undeclared exception!
      try { 
        radio0.a();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "button";
      String string1 = "duplicated attributes ";
      Checkbox checkbox0 = new Checkbox((Component) null, "button", "duplicated attributes ");
      // Undeclared exception!
      try { 
        checkbox0.strong();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.90853528164356
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      // Undeclared exception!
      try { 
        radio0.hr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "{1Ymsx><:+!", "'");
      Checkbox checkbox1 = new Checkbox(checkbox0, "~-!d`8biN!=&/iaJ", "duplicated attributes ");
      DynamicSelectModel dynamicSelectModel0 = checkbox0.selectModel();
      Object object0 = new Object();
      dynamicSelectModel0.empty(object0);
      Radio radio0 = new Radio((Component) null, "~-!d`8biN!=&/iaJ", "{1Ymsx><:+!");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "'";
      stringArray0[1] = "~-!d`8biN!=&/iaJ";
      stringArray0[2] = "";
      stringArray0[3] = "'";
      radio0.attributes(stringArray0);
      FormElement formElement0 = radio0.value("'");
      assertEquals("{1Ymsx><:+!", formElement0.getComponentId());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      // Undeclared exception!
      try { 
        radio0.button();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "", "rh");
      radio0._classReferenceFromHints();
      String[] stringArray0 = new String[0];
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection((String) null);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.label((String) null);
      // Undeclared exception!
      try { 
        radio0.multiSelect("rh", dynamicSelectModel2, "rh");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      boolean boolean0 = true;
      radio0._classReferenceFromHints();
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        radio0.dfn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("6Wl6ekM|h");
      // Undeclared exception!
      try { 
        xmlEntityRef0.strike();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Component component0 = null;
      String string0 = "";
      String string1 = "small";
      FileInput fileInput0 = new FileInput((Component) null, "", "small");
      int int0 = 5;
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        fileInput0.em((Object) errorPage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      boolean boolean0 = true;
      radio0._classReferenceFromHints();
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        radio0.tr();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tr component can be added only to a TableBlock.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9072839993213795
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      String string0 = ")U@P.Hv9vq+rucm'";
      Submit submit0 = new Submit((Component) null, "rh", ")U@P.Hv9vq+rucm'");
      // Undeclared exception!
      try { 
        radio0.u((Object) submit0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Component component0 = null;
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        radio0.colgroup();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Colgroup component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = "duplicated attributes ";
      Checkbox checkbox0 = new Checkbox((Component) null, "duplicated attributes ", "'");
      // Undeclared exception!
      try { 
        checkbox0.iframe();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.9072839993213795
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Component component0 = null;
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      radio0.renderId = true;
      List<Component> list0 = radio0._getChildren();
      // Undeclared exception!
      try { 
        radio0.address((Object) list0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Component component0 = null;
      String string0 = "{1Ymsx><:+!";
      String string1 = "'";
      Checkbox checkbox0 = new Checkbox((Component) null, "{1Ymsx><:+!", "'");
      checkbox0.fieldBinding("{1Ymsx><:+!");
      String string2 = "D\\n+5!y;ysW";
      String string3 = "$IGzf|v V(kd9";
      ElExpression elExpression0 = new ElExpression("'");
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression0, elExpression0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      // Undeclared exception!
      try { 
        radio0.i();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "cite";
      String string1 = "duplicated attributes ";
      Checkbox checkbox0 = new Checkbox(errorPage0, "dd", "duplicated attributes ");
      String string2 = "T8&7$";
      Boolean boolean0 = new Boolean("");
      // Undeclared exception!
      try { 
        checkbox0.a((Object) boolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9521156165403368
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Component component0 = null;
      Checkbox checkbox0 = new Checkbox((Component) null, "{1Ymsx><:+!", "'");
      String string0 = "~-!d`8biN!=&/iaJ";
      Checkbox checkbox1 = new Checkbox(checkbox0, "~-!d`8biN!=&/iaJ", "duplicated attributes ");
      // Undeclared exception!
      try { 
        checkbox1.span();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      radio0._classReferenceFromHints();
      // Undeclared exception!
      try { 
        radio0.h6();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.9072839993213795
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "{1Ymsx><:+!", "'");
      // Undeclared exception!
      try { 
        checkbox0.h2();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8364223867541591
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "{1Ymsx><:+!", "'");
      Checkbox checkbox1 = new Checkbox(checkbox0, "~-!d`8biN!=&/iaJ", "duplicated attributes ");
      checkbox1.end();
      // Undeclared exception!
      try { 
        checkbox1.buttonInput("~-!d`8biN!=&/iaJ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "{1Ymsx><:+!", "'");
      // Undeclared exception!
      try { 
        checkbox0.head();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Component component0 = null;
      String string0 = "duplicated attributes ";
      String string1 = "~-!d`8biN!=&/iaJ";
      Checkbox checkbox0 = new Checkbox((Component) null, "duplicated attributes ", "duplicated attributes ");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) checkbox0;
      objectArray0[1] = (Object) "duplicated attributes ";
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) null;
      // Undeclared exception!
      try { 
        checkbox0.ul();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Component component0 = null;
      FileInput fileInput0 = new FileInput((Component) null, "", "eOE");
      ActionExpression actionExpression0 = new ActionExpression("eOE");
      String string0 = "";
      Form form0 = new Form("");
      actionExpression0.setOwner(fileInput0);
      Form form1 = form0.addFormValidationError("");
      // Undeclared exception!
      try { 
        form1.del();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9521156165403368
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = "duplicated attributes ";
      Checkbox checkbox0 = new Checkbox((Component) null, "{1Ymsx><:+!", "'");
      String string1 = "~-!d`8biN!=&/iaJ";
      Checkbox checkbox1 = new Checkbox(checkbox0, "~-!d`8biN!=&/iaJ", "duplicated attributes ");
      // Undeclared exception!
      try { 
        checkbox1.encode("'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileInput fileInput0 = new FileInput((Component) null, "guE", "guE");
      ActionExpression actionExpression0 = new ActionExpression("guE");
      Checkbox checkbox0 = new Checkbox(fileInput0, "guE", "'");
      String string0 = "~-!d`8biN!=&/iaJ";
      String string1 = "4-0n;C=A!mGrEZm=G";
      String string2 = ".ogmq#jdIzyFYhyu\\";
      Checkbox checkbox1 = new Checkbox((Component) null, "4-0n;C=A!mGrEZm=G", ".ogmq#jdIzyFYhyu");
      Float float0 = new Float(0.0);
      // Undeclared exception!
      try { 
        checkbox1.sup((Object) float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Hidden hidden0 = new Hidden((Component) null, "empty number value", "empty number value");
      // Undeclared exception!
      try { 
        hidden0.code((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = "A`,";
      Form form0 = new Form("A`,");
      Form form1 = form0.addFormValidationRule("del", "A`,");
      String[] stringArray0 = new String[0];
      Form form2 = form1._buildFromSerializedString(stringArray0);
      // Undeclared exception!
      try { 
        form2.end();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not end compoennt, already at root.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.7485471551746843
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = "~-!d`8biN!=&/iaJ";
      String string1 = "";
      Object object0 = new Object();
      Radio radio0 = new Radio((Component) null, "~-!d`8biN!=&/iaJ", "{1Ymsx><:+!");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "'";
      stringArray0[1] = "~-!d`8biN!=&/iaJ";
      stringArray0[2] = "";
      stringArray0[3] = "'";
      radio0.attributes(stringArray0);
      Radio radio1 = (Radio)radio0.value("'");
      // Undeclared exception!
      try { 
        radio1.sub();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.7485471551746843
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = "'";
      String string1 = "~-!d`8biN!=&/iaJ";
      String string2 = "";
      Object object0 = new Object();
      Radio radio0 = new Radio((Component) null, "~-!d`8biN!=&/iaJ", "{1Ymsx><:+!");
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        radio0.p((Object) "duplicated attributes ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "small", "dd");
      String string0 = "";
      Boolean boolean0 = new Boolean("");
      // Undeclared exception!
      try { 
        checkbox0.a((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.0262296229952916
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = "{1Ymsx><:+!";
      Checkbox checkbox0 = new Checkbox((Component) null, (String) null, "nFbU{>1$9");
      // Undeclared exception!
      try { 
        checkbox0.map("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "w";
      TextInput textInput0 = new TextInput(errorPage0, "cite", "w");
      errorPage0.strike();
      Checkbox checkbox0 = new Checkbox(textInput0, "w", "cite");
      FormElement formElement0 = checkbox0.label("H]C9I^c5ANe4_H2r");
      // Undeclared exception!
      try { 
        formElement0.title("cite");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.6242225882334722
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = "'";
      String string1 = "~-!d`8biN!=&/iaJ";
      String string2 = "";
      Object object0 = new Object();
      Radio radio0 = new Radio((Component) null, "~-!d`8biN!=&/iaJ", "{1Ymsx><:+!");
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        radio0.placeholder("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.samp();
      component0.getComponents();
      component0._getForm(false);
      String string0 = "5I1~mtdXCT J";
      Checkbox checkbox0 = new Checkbox((Component) null, "5I1~mtdXCT J", "5I1~mtdXCT J");
      // Undeclared exception!
      try { 
        checkbox0.legend();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Component component0 = null;
      String string0 = "{1Ymsx><:+!";
      String string1 = "'";
      Object object0 = new Object();
      Radio radio0 = new Radio((Component) null, "~-!d`8biN!=&/iaJ", "{1Ymsx><:+!");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "'";
      stringArray0[1] = "~-!d`8biN!=&/iaJ";
      ElExpression elExpression0 = new ElExpression("'");
      String string2 = "Tfoot component can be added only to a Table.";
      TextArea textArea0 = new TextArea(radio0, "Tfoot component can be added only to a Table.", "Fy");
      String string3 = ";rOf1D;o-!0d";
      TextArea textArea1 = new TextArea((Component) null, "c&IV", ";rOf1D;o-!0d");
      // Undeclared exception!
      try { 
        textArea1.sub((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.0317592185692717
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        radio0.form("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.strike();
      Component component1 = component0.button();
      component1.u();
      Component component2 = component0.sub();
      Object object0 = new Object();
      ElExpression elExpression0 = new ElExpression("k&B-M9l");
      component0._setParent(component2);
      assertTrue(component2._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.9072839993213795
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Component component0 = null;
      Checkbox checkbox0 = new Checkbox((Component) null, "&\"\"l)k_S0w[", "&\"\"l)k_S0w[");
      checkbox0._getChildren();
      // Undeclared exception!
      try { 
        checkbox0.fileInput((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.7485471551746843
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      String string0 = "{1Ymsx><:+!";
      String string1 = "'";
      String string2 = "~-!d`8biN!=&/iaJ";
      String string3 = "";
      Object object0 = new Object();
      Radio radio0 = new Radio((Component) null, "~-!d`8biN!=&/iaJ", "{1Ymsx><:+!");
      Float float0 = new Float(0.0);
      // Undeclared exception!
      try { 
        radio0.h6((Object) float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "&\"\"l)k_S0w[", "&\"\"l)k_S0w[");
      XmlPullParserFactory xmlPullParserFactory0 = XmlPullParserFactory.newInstance();
      XmlSerializer xmlSerializer0 = xmlPullParserFactory0.newSerializer();
      checkbox0._renderClassReferenceFromHints(xmlSerializer0);
      checkbox0._getChildren();
      // Undeclared exception!
      try { 
        checkbox0.br();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.058223904131167
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "{1Ymsx><:+!", "duplicated attributes ");
      Checkbox checkbox1 = new Checkbox(checkbox0, "small", "small");
      String string0 = "xi<CcB^#?h?crEz:f";
      checkbox1.actionBinding("xi<CcB^#?h?crEz:f");
      // Undeclared exception!
      try { 
        checkbox1.buttonInput("{1Ymsx><:+!");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "w";
      TextInput textInput0 = new TextInput(errorPage0, "cite", "w");
      Component component0 = errorPage0.strike();
      Checkbox checkbox0 = new Checkbox(textInput0, "w", "cite");
      component0.sub();
      errorPage0.b();
      Object object0 = new Object();
      checkbox0._applyFormat(object0);
      // Undeclared exception!
      try { 
        checkbox0.style();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "cite", "w");
      Checkbox checkbox0 = new Checkbox(errorPage0, "5I1~mtdXCT J", "cite");
      // Undeclared exception!
      try { 
        checkbox0.label((Object) errorPage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.338371704803573
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Form form0 = new Form("6UaijN\"Qv.r,r");
      String string0 = "";
      Checkbox checkbox0 = new Checkbox(form0, "", "6UaijN\"Qv.r,r");
      Checkbox checkbox1 = new Checkbox(form0, "wheelSubmitId", "{1Ymsx><:+!");
      checkbox1.actionBinding("6UaijN\"Qv.r,r");
      // Undeclared exception!
      try { 
        checkbox1.buttonInput("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      String string0 = "rh";
      Radio radio0 = new Radio((Component) null, "rh", "rh");
      // Undeclared exception!
      try { 
        radio0.dl();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
