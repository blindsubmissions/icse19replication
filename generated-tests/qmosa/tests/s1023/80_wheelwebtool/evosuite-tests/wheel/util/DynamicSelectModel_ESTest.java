/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:16:57 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.ErrorPage;
import wheel.components.Any;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.StandaloneComponent;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "FKFVz@B";
      ElExpression elExpression0 = new ElExpression("FKFVz@B");
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression0, elExpression0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("+'2^f,");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.enumeration((String) null);
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.value("");
      dynamicSelectModel2.empty((Object) null);
      dynamicSelectModel3.collection("m~ZEC<-%X`Pq");
      dynamicSelectModel3.reset();
      dynamicSelectModel2.reset();
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel1.label("+'2^f,");
      dynamicSelectModel4.getTopLevelComponent();
      dynamicSelectModel4.setTopLevelComponent((StandaloneComponent) null);
      dynamicSelectModel3.translator("$l}f|N");
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel1.translator("");
      assertSame(dynamicSelectModel5, dynamicSelectModel0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getOptionCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.setComponent((Component) null);
      dynamicSelectModel0.reset();
      dynamicSelectModel0.getComponent();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("L%b>$#9O,yro");
      assertSame(dynamicSelectModel0, dynamicSelectModel1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.empty(dynamicSelectModel0);
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.label("");
      // Undeclared exception!
      try { 
        dynamicSelectModel3.getObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression  evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.empty(object0);
      dynamicSelectModel1.enumeration("Q|X");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.collection("Expression ");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.translator("content");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.label("");
      dynamicSelectModel4.empty(dynamicSelectModel0);
      dynamicSelectModel1.value("content");
      dynamicSelectModel4.validate();
      dynamicSelectModel2.validate();
      // Undeclared exception!
      try { 
        dynamicSelectModel3.getLabel(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression Expression  to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9730014063936125
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = new DynamicSelectModel();
      dynamicSelectModel1.enumeration("Q|X");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.collection("Expression ");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.translator("c6 e2t");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.label("");
      dynamicSelectModel4.empty(dynamicSelectModel0);
      dynamicSelectModel1.value("c6 e2t");
      dynamicSelectModel4.validate();
      int int0 = 0;
      // Undeclared exception!
      try { 
        dynamicSelectModel2.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Label attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      char[] charArray0 = new char[9];
      charArray0[0] = 't';
      charArray0[1] = '/';
      charArray0[2] = ',';
      charArray0[3] = 'I';
      charArray0[4] = '|';
      charArray0[5] = 'J';
      charArray0[6] = '6';
      charArray0[7] = '+';
      charArray0[8] = 'y';
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.empty(object0);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.enumeration("|MrUf}I;");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.label("ADIiy*");
      dynamicSelectModel1.translator("ADIiy*");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.collection("org.mvel.ast.LiteralNode");
      // Undeclared exception!
      try { 
        dynamicSelectModel4.getLabel((-2283));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression org.mvel.ast.LiteralNode evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6674619334292948
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.collection("Could not create DynamicSelection model. Collection attribute was null or not an el-expression.");
      DynamicSelectModel dynamicSelectModel1 = new DynamicSelectModel();
      String string0 = "UfFA4?jEF>lTz9{";
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.label("UfFA4?jEF>lTz9{");
      Object object0 = new Object();
      dynamicSelectModel2.empty(object0);
      dynamicSelectModel1.value("");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Value attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("[]");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.translator("{9(g$-*ZtW6 }u");
      dynamicSelectModel2.empty((Object) null);
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.collection("[]");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      dynamicSelectModel1.translateValue("{9(g$-*ZtW6 }u");
      Collection collection0 = dynamicSelectModel3.getObjects();
      Collection collection1 = dynamicSelectModel1.getObjects();
      assertSame(collection1, collection0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.17157089695751
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.empty(dynamicSelectModel0);
      dynamicSelectModel2.enumeration("toString()");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel0.label("[]");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel0.translator("ADIiy*");
      dynamicSelectModel4.reset();
      dynamicSelectModel3.collection("[]");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("feature name can not be null");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.translateValue("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression ordinal() to create a value for dynamic ISelectModel. Index was 0
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }
}
