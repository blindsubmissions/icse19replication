/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 17:25:08 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("}d{A2$0di9*2MM");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      arrayList0.retainAll(arrayList1);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("}d{A2$0di9*2MM", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      User user0 = new User("variable.availability.label", "ontologyTerm.ontologyName.saveChanges");
      user0.setAffiliation("variable.availability.label");
      user0.setCity("jh");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.isCoded();
      rawVariable0.setCoded(false);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getNotes();
      rawVariable0.setColumnEnd("variable.columnEnd.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setCleaningStatus("");
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(boolean0);
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "";
      rawVariable0.setNotes("(!");
      rawVariable0.getValueLabels();
      rawVariable0.getForm();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      rawVariable0.removeValueLabel(valueLabel0);
      assertEquals("(!", rawVariable0.getNotes());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel0.getDisplayName();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.form = "";
      derivedVariable0.setCodeBookNumber("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      assertNotNull(string0);
      
      derivedVariable0.setCleaningDescription("");
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(1282);
      Variable.validateFields(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.codeBookNumber = null;
      derivedVariable0.setColumnStart("(Q;C)=GbY(QZo1Y");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getCodeBookNumber();
      assertEquals("1282", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setCleaningDescription("user.firstName.label");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.ensureCapacity(128);
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getDisplayItemIdentifier();
      assertEquals("user.firstName.label", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getColumnStart();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      User user0 = new User();
      user0.setEmail("");
      User.detectFieldChanges(user0, user0, user0);
      user0.setAddressLine1("");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.setCoded(true);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.createVariableSummary();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      arrayList1.spliterator();
      ontologyTerm0.setNameSpace("");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.setLabel("variable.codeBookNumber.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User("variable.alias.label", (String) null);
      user0.setEmail("");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      assertEquals("variable.codeBookNumber.label", rawVariable0.getLabel());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.6789308025149405
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(true);
      rawVariable0.getCleaningDescription();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.clone();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setCleaned(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.columnStart = "R<";
      rawVariable0.setForm("");
      rawVariable0.getOntologyTerms();
      rawVariable0.getFilePath();
      User user1 = new User("general.fieldValue.unknown", "R<");
      user1.setAddressLine2("");
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getValueLabels();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      assertEquals("R<", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setCleaned(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.isCleaned();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.isCleaned();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.setCleaned(true);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Comparator<SupportingDocument> comparator0 = (Comparator<SupportingDocument>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.clone();
      arrayList0.sort(comparator0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      String string0 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(false);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("uw\" ");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("uw\" ");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("by{v");
      derivedVariable0.setQuestionNumber("");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList1);
      assertEquals("uw\" ", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.867201380449728
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setColumnEnd("variable.alias.label");
      rawVariable0.clone();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.iterator();
      User user0 = new User("variable.alias.label", "I[CI-sap?ePxD");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      user0.setPassword("");
      user0.setCity("I[CI-sap?ePxD");
      user0.clone();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getIdentifier();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setYear("variable.questionNumber.label");
      rawVariable0.getValueLabels();
      user0.setPhone("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.getCodeBookNumber();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getLabel();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      arrayList1.add(0, valueLabel0);
      derivedVariable0.setValueLabels(arrayList1);
      rawVariable0.addOntologyTerms(arrayList0);
      assertEquals("variable.questionNumber.label", rawVariable0.getYear());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.134162458586648
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getColumnEnd();
      derivedVariable0.setCategory("uF{e");
      User user0 = new User("u'Jm", "variable.alias.label");
      user0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable1.addSupportingDocuments(arrayList0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getIdentifier();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.trimToSize();
      derivedVariable1.setSupportingDocuments(arrayList1);
      derivedVariable0.setSupportingDocuments(arrayList1);
      assertEquals("uF{e", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.319492576154752
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("ontologyTerm.term.label");
      derivedVariable0.clone();
      derivedVariable0.setCleaningDescription("macaw.system.MacawChangeEvent");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.columnEnd = "macaw.system.MacawChangeEvent";
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.setCleaningDescription("variable.category.label");
      supportingDocument1.clone();
      supportingDocument1.setFileName("macaw.system.MacawChangeEvent");
      supportingDocument1.setIdentifier(1);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.notes = "macaw.system.MacawChangeEvent";
      derivedVariable0.setCleaningDescription("cv#f{O(+n!D}{ib;4");
      derivedVariable0.getCategory();
      derivedVariable0.getCleaningDescription();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.1634240504234032
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("n{)|yfWmMUf=TdB}f");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User((String) null, "<EM*gz+)");
      user0.setEmail("user.city.label");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      assertEquals("n{)|yfWmMUf=TdB}f", rawVariable0.getLabel());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.4226292109584904
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      User user0 = new User("variable.alternativeVariable.label", "variable.alternativeVariable.label");
      rawVariable0.setColumnStart("n{)|yfWmMUf=TdB}f");
      user0.setIdentifier(0);
      user0.setIdentifier(2885);
      Variable.validateFields(derivedVariable0);
      User user1 = new User();
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable1);
      rawVariable1.clone();
      RawVariable rawVariable2 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.612301431550835
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(true);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getCleaningDescription();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable1.clone();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.385885352166055
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(true);
      rawVariable0.getCleaningDescription();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getAlternativeVariable();
      derivedVariable0.isCoded();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable1);
      assertFalse(rawVariable1.isCleaned());
      
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.414284027138995
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("ontologyTerm.term.label");
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.setCleaningDescription("macaw.system.MacawChangeEvent");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.columnEnd = "macaw.system.MacawChangeEvent";
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable1.setNotes("macaw.system.MacawChangeEvent");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.setCleaningDescription("variable.category.label");
      supportingDocument1.clone();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList1);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      assertEquals("macaw.system.MacawChangeEvent", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.3790925052297367
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("ontologyTerm.term.label");
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.isCleaned();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.setIsNewRecord(false);
      derivedVariable0.isCleaned();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCleaned(false);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable2, derivedVariable1);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable0);
      assertEquals("ontologyTerm.term.label", derivedVariable0.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }
}
