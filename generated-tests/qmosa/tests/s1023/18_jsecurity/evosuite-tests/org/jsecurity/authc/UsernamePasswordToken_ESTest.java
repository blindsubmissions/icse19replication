/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:56:31 GMT 2018
 */

package org.jsecurity.authc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetAddress;
import java.net.UnknownHostException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.jsecurity.authc.UsernamePasswordToken;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UsernamePasswordToken_ESTest extends UsernamePasswordToken_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken(" - ", "");
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.clear();
      InetAddress inetAddress1 = MockInetAddress.anyLocalAddress();
      usernamePasswordToken0.setInetAddress(inetAddress1);
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.toString();
      assertTrue(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      usernamePasswordToken0.setRememberMe(true);
      boolean boolean0 = false;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)0;
      try { 
        MockInetAddress.getByAddress("K$+Gxq", byteArray0);
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Not IPv4: [-32, 58, 0]
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'A';
      charArray0[1] = '4';
      charArray0[2] = '8';
      charArray0[3] = 'Z';
      charArray0[4] = 'W';
      charArray0[5] = 'v';
      charArray0[6] = 'N';
      charArray0[7] = 'G';
      charArray0[8] = '|';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, charArray0, true);
      usernamePasswordToken0.setUsername("k&");
      usernamePasswordToken0.setUsername("JM86Cs{l'LLGYY0r#");
      usernamePasswordToken0.getInetAddress();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.getCredentials();
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - JM86Cs{l'LLGYY0r#, rememberMe=true", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'Z';
      charArray0[1] = 'R';
      charArray0[2] = '(';
      charArray0[3] = '%';
      charArray0[4] = 'P';
      charArray0[5] = '\\';
      charArray0[6] = 'V';
      charArray0[7] = 'B';
      charArray0[8] = '/';
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("84$CC:w7", charArray0, inetAddress0);
      usernamePasswordToken0.toString();
      usernamePasswordToken0.isRememberMe();
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - 84$CC:w7, rememberMe=false (/192.168.1.42)", string0);
      
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.setUsername("org.jsecurity.authc.UsernamePasswordToken");
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.getInetAddress();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'R';
      charArray0[1] = '~';
      charArray0[2] = 'X';
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, charArray0, true, inetAddress0);
      usernamePasswordToken0.setUsername("");
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      char[] charArray1 = usernamePasswordToken0.getPassword();
      usernamePasswordToken0.setUsername((String) null);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.setPassword(charArray1);
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=true (/192.168.1.42)", string0);
      
      usernamePasswordToken0.setUsername((String) null);
      usernamePasswordToken0.setUsername("B|v\"^`/h");
      usernamePasswordToken0.getCredentials();
      assertTrue(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'O';
      charArray0[1] = '*';
      charArray0[2] = 'y';
      charArray0[3] = 'F';
      charArray0[4] = 'w';
      charArray0[5] = 'F';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("y7p", charArray0);
      usernamePasswordToken0.setUsername("y7p");
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.getUsername();
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      InetAddress inetAddress1 = usernamePasswordToken0.getInetAddress();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setInetAddress(inetAddress1);
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.setUsername("");
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.9730014063936125
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken(",`e7e,M6yqL", ")", inetAddress0);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.isRememberMe();
      usernamePasswordToken0.setRememberMe(false);
      char[] charArray0 = new char[1];
      charArray0[0] = 'Q';
      usernamePasswordToken0.setPassword(charArray0);
      char[] charArray1 = new char[0];
      usernamePasswordToken0.setPassword(charArray1);
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.setUsername(":ylP`='f;");
      usernamePasswordToken0.getUsername();
      assertTrue(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.425479708432719
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken(")", ")", true, inetAddress0);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.setUsername("");
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.setUsername("- qYw.KNRfVR*?");
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.setRememberMe(false);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.setUsername("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false");
      usernamePasswordToken0.setPassword((char[]) null);
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.getInetAddress();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.setUsername((String) null);
      usernamePasswordToken0.setRememberMe(false);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken(" - ", " - ", true);
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      usernamePasswordToken0.setInetAddress(inetAddress0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'L';
      charArray0[1] = '2';
      charArray0[2] = 'y';
      charArray0[3] = ' ';
      charArray0[4] = '0';
      charArray0[5] = '<';
      charArray0[6] = '\"';
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.setRememberMe(true);
      String string0 = usernamePasswordToken0.toString();
      assertTrue(usernamePasswordToken0.isRememberMe());
      assertEquals("org.jsecurity.authc.UsernamePasswordToken -  - , rememberMe=true (/192.168.1.42)", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("", (String) null, false, inetAddress0);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.isRememberMe();
      char[] charArray0 = new char[5];
      charArray0[0] = 'g';
      charArray0[1] = 'R';
      usernamePasswordToken0.setRememberMe(false);
      charArray0[2] = '.';
      charArray0[3] = 'X';
      charArray0[4] = 'O';
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.setPassword((char[]) null);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }
}
