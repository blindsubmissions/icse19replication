/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:07:43 GMT 2018
 */

package org.quickserver.util.xmlreader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.quickserver.util.xmlreader.AdvancedSettings;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AdvancedSettings_ESTest extends AdvancedSettings_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      int int0 = 0;
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.setClientSocketTrafficClass("");
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.setPerformancePreferencesConnectionTime(0);
      int int1 = 0;
      advancedSettings0.setPerformancePreferencesLatency(0);
      advancedSettings0.toXML("%,oe4qq7;,-h*}~Q}~");
      boolean boolean0 = true;
      String string0 = "m.80-TmG;^zO7-g";
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("m.80-TmG;^zO7-g");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // m.80-TmG;^zO7-g
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setMaxThreadsForNioWrite(802);
      advancedSettings0.setDebugNonBlockingMode(false);
      advancedSettings0.setPerformancePreferencesBandwidth((-1431));
      advancedSettings0.setBacklog(0);
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.setClientSocketSendBufferSize((-873));
      advancedSettings0.setMaxThreadsForNioWrite((-873));
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.setBacklog((-1431));
      advancedSettings0.setUseDirectByteBuffer(false);
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setClientSocketTrafficClass(",D1$OImJM86Cs{l'LL");
      advancedSettings0.setQSObjectPoolMaker((String) null);
      advancedSettings0.setPerformancePreferencesConnectionTime((-873));
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setPerformancePreferencesBandwidth((-873));
      advancedSettings0.setUseDirectByteBuffer(false);
      advancedSettings0.setPerformancePreferencesBandwidth((-1431));
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.toXML("org.quickserver.util.pool.MakeQSObjectPool");
      assertTrue(advancedSettings0.getDebugNonBlockingMode());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketTrafficClass("\"&>Iz");
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.toXML("b>984$CC:w7|I");
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.setPerformancePreferencesLatency(1222);
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.setClientIdentifier(",tC?");
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.toXML(",tC?");
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.setBacklog(1);
      advancedSettings0.setPerformancePreferencesBandwidth(1864);
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.setClientSocketReceiveBufferSize(0);
      advancedSettings0.setDebugNonBlockingMode(true);
      int int0 = advancedSettings0.getByteBufferSize();
      assertEquals(1864, advancedSettings0.getPerformancePreferencesBandwidth());
      assertEquals(65536, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.014946880179594
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketReceiveBufferSize(0);
      advancedSettings0.toXML((String) null);
      advancedSettings0.getQSObjectPoolMaker();
      int int0 = 0;
      String string0 = "'B9(Yx,S:]";
      advancedSettings0.setMaxThreadsForNioWrite(0);
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("'B9(Yx,S:]");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // 'B9(Yx,S:]
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.282693997278065
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setPerformancePreferencesConnectionTime(287);
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.setClientSocketTrafficClass("?!71\"+'2^f,y7");
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setClientSocketReceiveBufferSize(287);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setQSObjectPoolMaker("4tEp`M^E<[6$l}f|N");
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.toXML("4tEp`M^E<[6$l}f|N");
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.getByteBufferSize();
      advancedSettings0.getBacklog();
      advancedSettings0.setDebugNonBlockingMode(false);
      int int0 = advancedSettings0.getPerformancePreferencesBandwidth();
      assertEquals(287, advancedSettings0.getPerformancePreferencesConnectionTime());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.setUseDirectByteBuffer(false);
      advancedSettings0.setSocketLinger((-1086));
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setPerformancePreferencesLatency(941);
      advancedSettings0.toXML("xL IfW3N$O`@");
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setUseDirectByteBuffer(false);
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.getPerformancePreferencesBandwidth();
      advancedSettings0.setPerformancePreferencesConnectionTime(0);
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.getPerformancePreferencesBandwidth();
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.setPerformancePreferencesLatency(65536);
      assertTrue(advancedSettings0.getDebugNonBlockingMode());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2826939972780647
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setCharset("");
      advancedSettings0.setDebugNonBlockingMode(false);
      advancedSettings0.setMaxThreadsForNioWrite(1899);
      advancedSettings0.setClientSocketReceiveBufferSize((-3373));
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.setQSObjectPoolMaker("");
      advancedSettings0.setClientSocketSendBufferSize(1899);
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.setClientSocketSendBufferSize((-3373));
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.toXML("&q$70:8bUEL");
      advancedSettings0.setCharset("");
      advancedSettings0.setSocketLinger(1899);
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.getCharset();
      int int0 = advancedSettings0.getPerformancePreferencesConnectionTime();
      assertEquals((-3373), advancedSettings0.getClientSocketReceiveBufferSize());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setQSObjectPoolMaker((String) null);
      advancedSettings0.setPerformancePreferencesBandwidth((-460));
      advancedSettings0.setClientIdentifier((String) null);
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientIdentifier("!D-");
      advancedSettings0.setClientIdentifier((String) null);
      advancedSettings0.setQSObjectPoolMaker((String) null);
      advancedSettings0.setByteBufferSize(1988);
      advancedSettings0.getCharset();
      advancedSettings0.setPerformancePreferencesBandwidth(0);
      advancedSettings0.setPerformancePreferencesConnectionTime(0);
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.getByteBufferSize();
      int int0 = advancedSettings0.getByteBufferSize();
      assertEquals("!D-", advancedSettings0.getClientIdentifier());
      assertEquals(1988, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getQSObjectPoolMaker();
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("org.quickserver.util.pool.MakeQSObjectPool");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // org.quickserver.util.pool.MakeQSObjectPool
         //
         verifyException("org.quickserver.util.xmlreader.AdvancedSettings", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.toXML("1I5@3HAl/7%d9aTCd>6");
      advancedSettings0.setPerformancePreferencesBandwidth((-3879));
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setPerformancePreferencesBandwidth(2507);
      advancedSettings0.setCharset("");
      advancedSettings0.setCharset((String) null);
      assertEquals(2507, advancedSettings0.getPerformancePreferencesBandwidth());
  }
}
