/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:02:33 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.NotActiveException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Player player0 = new Player(0, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", (-502), 2040);
      player0.setZ(2040);
      player0.setMoney(0.0F);
      player0.isDead();
      player0.setDead();
      player0.setZ(0.0F);
      player0.getStrength();
      player0.getY();
      player0.getName();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("N1z=Gq", false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(0.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Player player0 = new Player((-1549), "@6P69+1A", "@6P69+1A", (-1549), (-1549));
      player0.pack();
      player0.setMoney((-1549));
      player0.setDead(2796L, true);
      player0.getStrength();
      player0.getZ();
      player0.setDead(0L);
      player0.getY();
      player0.setDead();
      player0.getTimeOfDeath();
      player0.getName();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0, "1\"+'2^f", "E}DO*yFwF?dUxPiO", 0, 2937);
      player0.reset(false);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((OutputStream) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Player player0 = new Player(0, "a|xpC]@]h|?Ayrr}", "*F?=p", 0, 0);
      Player player1 = new Player(10, "a|xpC]@]h|?Ayrr}", "*F?=p", 2516, 3);
      player0.remove(player1);
      player0.setDead();
      player0.setConnected(true);
      player0.isConnected();
      player0.toString();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Player player0 = new Player();
      player0.getX();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        pipedInputStream0.skip(7113L);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.setZ(1705.3754F);
      Player player1 = new Player(2109);
      Party party0 = player1.head;
      player0.prev = null;
      player0.getZ();
      player0.getPictureId();
      Party party1 = new Party();
      party1.remove(player0);
      party1.getSubparty();
      party1.add(player0);
      party1.next = (Party) player0;
      party1.add(player0);
      player0.add(party1);
      player0.isDead();
      MockPrintStream mockPrintStream0 = new MockPrintStream("state.Player$JoinInfo");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      mockPrintStream0.println(0);
      objectOutputStream0.write(0);
      try { 
        objectOutputStream0.defaultWriteObject();
        fail("Expecting exception: NotActiveException");
      
      } catch(NotActiveException e) {
         //
         // not in call to writeObject
         //
         verifyException("java.io.ObjectOutputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Player player0 = new Player((-2907), "state.Player", "state.Player", (-2907));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      Player player1 = new Player((-2907), "state.Player", "fv<", 0);
      player0.setZ(0.2F);
      player1.next = (Party) player0;
      player0.add(player1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-3);
      byteArray0[5] = (byte)25;
      byteArray0[6] = (byte) (-19);
      byteArray0[7] = (byte)126;
      player0.unpack(byteArray0);
      player0.getIP();
      player0.getStrength();
      player0.gangStrength();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5400363038209806
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Player player0 = new Player((-2907), "state.Player", "state.Player", (-2907));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      player0.setDead((long) (byte)0, true);
      Player player1 = new Player(10, "fv<", "state.Player", (byte)0, (-459));
      player0.setConnected(true);
      player0.setJoinOK(player1, false);
      player1.setY(0.0F);
      player1.isJoinOK(player0, false);
      player1.unpack(byteArray0);
      player0.isJoinOK(player1, true);
      player1.setZ(1401.227F);
      assertEquals(1401.227F, player1.getZ(), 0.01F);
      
      player0.unpack(byteArray0);
      player0.setConnected(false);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4036404106149494
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Player player0 = new Player((-2907), "state.Player", "state.Player", (-2907));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      player0.setDead((long) (byte)0, true);
      Player player1 = new Player(10, "fv<", "state.Player", (byte)0, (-459));
      player0.setConnected(true);
      player0.setJoinOK(player1, false);
      player1.setY(0.0F);
      player0.unpack(byteArray0);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals("fv<", player1.getIP());
      assertEquals((-459), player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals((-2907), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.505289990918418
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Player player0 = new Player();
      player0.getSubparty();
      player0.gangStrength();
      byte[] byteArray0 = new byte[2];
      player0.setY(0.1F);
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte) (-3);
      player0.unpack(byteArray0);
      player0.unpack(byteArray0);
      player0.setJoinOK(player0, true);
      Player player1 = new Player((-51));
      byte[] byteArray1 = player1.pack();
      player0.isJoinOK(player0, false);
      Player player2 = new Player(265, (String) null, (String) null, 1, 1);
      player2.isJoinOK(player1, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player2.unpack(byteArray1);
      Player player3 = new Player((-1));
      System.setCurrentTimeMillis((byte)16);
  }
}
