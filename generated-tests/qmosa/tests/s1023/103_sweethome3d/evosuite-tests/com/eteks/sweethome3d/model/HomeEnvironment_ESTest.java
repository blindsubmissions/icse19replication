/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:48:38 GMT 2018
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.clone();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray1 = HomeEnvironment.Property.values();
      assertNotSame(homeEnvironment_PropertyArray1, homeEnvironment_PropertyArray0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment1.setGroundColor(0);
      homeEnvironment0.setWallsAlpha(0);
      homeEnvironment1.getGroundTexture();
      homeEnvironment1.getVideoQuality();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setVideoQuality(1602);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^V?_}[G5bh><=", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment1.setCeillingLightColor(46);
      homeEnvironment1.setAllLevelsVisible(false);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment0.setVideoQuality(46);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.setVideoFrameRate(46);
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.getSkyColor();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListener1);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.Property homeEnvironment_Property2 = HomeEnvironment.Property.GROUND_COLOR;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property2, propertyChangeListenerProxy1);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(46, homeEnvironment0.getVideoQuality());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyColor((-4008));
      int int0 = homeEnvironment0.getLightColor();
      assertEquals((-4008), homeEnvironment0.getSkyColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(752, (HomeTexture) null, 33, 752, 33);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("nsFDOl", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      Camera camera0 = new Camera(33, 752, 33, 1261.841F, 2.0F, (-2546.0F));
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "RATIO_2_1", (Object) null, object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("xDQN6R.W!", propertyChangeListener1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.getPhotoHeight();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment.Property homeEnvironment_Property2 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property2, propertyChangeListenerProxy0);
      homeEnvironment0.setLightColor(752);
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight((-2408));
      homeEnvironment1.setPhotoHeight(1054);
      homeEnvironment0.getPhotoQuality();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setLightColor((-2568));
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getVideoQuality();
      String string0 = "com.eteks.sweethome3d.model.HomeEnvironment$DrawingMode";
      String string1 = "WALLS_ALPHA";
      Class<Object> class0 = Object.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "sun.net.www.protocol");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource sun.net.www.protocol
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3693821196946767
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setGroundColor((-1301));
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.clone();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoWidth(2347);
      homeEnvironment0.setVideoQuality(2347);
      homeEnvironment0.getVideoWidth();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(300, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality(14);
      assertEquals(14, homeEnvironment1.getPhotoQuality());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(0, 0, 0.0F, 0.0F, 0.0F, 0.0F, (-1L), camera_Lens0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(list0, "", (Object) null, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setWallsAlpha(1.0F);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2494), (HomeTexture) null, 0, (HomeTexture) null, (-2494), 1.5F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.listIterator();
      Camera camera0 = new Camera((-2494), (-2494), 1.5F, 0, (-2494), 1.5F);
      Camera camera1 = camera0.clone();
      linkedList0.add(camera0);
      linkedList0.add(camera1);
      homeEnvironment0.getVideoCameraPath();
      linkedList0.removeLast();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals((-2494), int0);
      
      homeEnvironment0.setVideoQuality(0);
      int int1 = homeEnvironment0.getSkyColor();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-2494), homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(1.5F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0, homeEnvironment0.getVideoQuality());
      assertEquals(0, int1);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setVideoFrameRate(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoWidth((-902));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.setVideoWidth(1431);
      homeEnvironment1.setVideoQuality(400);
      homeEnvironment0.setWallsAlpha(2333.65F);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      assertEquals(2333.65F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(8192, (HomeTexture) null, 8192, 8192, 8192);
      homeEnvironment0.setPhotoHeight(8192);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.isAllLevelsVisible();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setGroundColor(8192);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getVideoHeight();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(8192, homeEnvironment0.getPhotoHeight());
      assertEquals(8192, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment.Property.values();
      homeEnvironment0.getSubpartSizeUnderLight();
      String string0 = "";
      // Undeclared exception!
      try { 
        MockURL.URL((String) null, "", 300, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("ufs~@", resourceURLContent0, 1215, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1215, homeTexture0, 1215, homeTexture0, 1306, 1215);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality(0);
      assertEquals(1215.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(1215, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(1306, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(1215, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(0, homeEnvironment1.getPhotoQuality());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-551));
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "SKY_TEXTURE", (Object) null, homeEnvironment1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      int int0 = (-312);
      homeEnvironment0.setGroundColor((-551));
      homeEnvironment0.setGroundColor((-312));
      homeEnvironment0.setCeillingLightColor(1160);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoWidth();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("UTC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.UTC
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, (-2881), (-2881), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-2881), homeTexture0, 611, 0, (-2881));
      homeEnvironment0.setPhotoHeight(13427964);
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment2.isAllLevelsVisible();
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment3.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment homeEnvironment4 = new HomeEnvironment(13427964, homeTexture0, 2146563816, 11, 611);
      homeEnvironment4.setGroundColor(0);
      homeEnvironment2.getSubpartSizeUnderLight();
      homeEnvironment1.setGroundTexture(homeTexture0);
      HomeEnvironment homeEnvironment5 = new HomeEnvironment(1231, homeTexture0, 11, 859, 11);
      homeEnvironment5.getPhotoHeight();
      homeEnvironment2.getVideoHeight();
      int int0 = homeEnvironment4.getGroundColor();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.9264175554979963
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^V?_}[G5bh><=", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setCeillingLightColor((-551));
      homeEnvironment0.setAllLevelsVisible(false);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoQuality(46);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.setVideoFrameRate(46);
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.getSkyColor();
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy3);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      int int0 = homeEnvironment1.getPhotoWidth();
      assertEquals(46, homeEnvironment0.getVideoQuality());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^V?_}[G5bh><=", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment1.setCeillingLightColor(46);
      homeEnvironment1.setAllLevelsVisible(false);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment0.setVideoQuality(46);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.setVideoFrameRate(46);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.getSkyColor();
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListener1);
      homeEnvironment0.setSkyColor(13427964);
      int int0 = homeEnvironment1.getLightColor();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("K$rr~ $<%wLaz72?o*$", (Content) null, 2.0F, 2.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 2911, 2911, 2911);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(2542, homeTexture1, 2146563816, homeTexture0, 2146563816, 1.7777778F);
      // Undeclared exception!
      try { 
        homeEnvironment1.setSkyTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.6393405872324323
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-551));
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "SKY_TEXTURE", (Object) null, homeEnvironment1);
      homeEnvironment0.setGroundColor((-551));
      homeEnvironment0.setSubpartSizeUnderLight((-2775.4883F));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setGroundColor((-312));
      homeEnvironment0.setCeillingLightColor(1160);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment1.setVideoQuality(1160);
      homeEnvironment0.setWallsAlpha((-312));
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.Property.values();
      System.setCurrentTimeMillis((-1));
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7072697097848133
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^V?_}[G5bh><=", propertyChangeListener0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setCeillingLightColor(46);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setVideoQuality(46);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.setVideoFrameRate((-1));
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment3.getSkyColor();
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("^V?_}[G5bh><=", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("2{iha?FP\u0007PqO", propertyChangeListenerProxy1);
      homeEnvironment3.getCeillingLightColor();
      homeEnvironment3.setVideoCameraPath(list0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment3.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(46, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.6674619334292946
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera((-2727.0867F), (-4008), (-4008), 3190.21F, (-4008), (-1198.5F), (-4008), camera_Lens0);
      Object object0 = new Object();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Camera camera1 = new Camera((-1198.5F), 1.3333334F, 3190.21F, (-2843.8196F), (-1198.5F), 1.3333334F, (-4008), camera_Lens0);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "", camera1, object1);
      homeEnvironment1.setWallsAlpha((-1198.5F));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment1.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.458311329683084
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-551));
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.getVideoCameraPath();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment3.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoWidth((-551));
      homeEnvironment1.setVideoFrameRate((-1));
      homeEnvironment2.setVideoQuality(33);
      homeEnvironment3.getVideoWidth();
      int int0 = homeEnvironment3.getPhotoHeight();
      assertEquals((-413), homeEnvironment0.getVideoHeight());
      assertEquals((-551), int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^V?_}[G5bh><=", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment1.setCeillingLightColor(46);
      homeEnvironment1.setAllLevelsVisible(false);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.setCeillingLightColor(46);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setVideoQuality(46);
      homeEnvironment0.setWallsAlpha(0.0F);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setCeillingLightColor(25);
      assertEquals(25, homeEnvironment2.getCeillingLightColor());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setSkyColor((-4008));
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals((-4008), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.599301927099795
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setVideoFrameRate(0);
      homeEnvironment0.setVideoFrameRate(3450);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setCeillingLightColor((-2171));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment1.setVideoQuality(13427964);
      homeEnvironment0.setWallsAlpha((-2171));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_FRAME_RATE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("rcS", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.Property.values();
      HomeEnvironment.Property.values();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoHeight(19);
      homeEnvironment0.setPhotoHeight(19);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.setCeillingLightColor(46);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment0.setVideoQuality(46);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.setVideoFrameRate(46);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setWallsAlpha(0.0F);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener1);
      homeEnvironment0.setSkyColor(13427964);
      homeEnvironment1.getLightColor();
      homeEnvironment1.setVideoWidth(46);
      homeEnvironment0.setVideoFrameRate(13427964);
      homeEnvironment0.setSkyColor(46);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.getLightColor();
      homeEnvironment1.setVideoWidth(46);
      assertEquals(46, homeEnvironment0.getVideoQuality());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }
}
