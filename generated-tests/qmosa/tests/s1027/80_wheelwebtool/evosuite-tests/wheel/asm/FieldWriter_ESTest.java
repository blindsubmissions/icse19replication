/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 17:15:47 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2685));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "8FQWqQiZtbM+1#qSN", "8FQWqQiZtbM+1#qSN", "LineNumberTable", "8FQWqQiZtbM+1#qSN");
      ByteVector byteVector0 = new ByteVector(8);
      byte[] byteArray0 = new byte[0];
      byteVector0.data = byteArray0;
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitEnd();
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0114042647073518
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-73));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-889275714), "", "", "", "dV2[wB[*mlb");
      ByteVector byteVector0 = new ByteVector(431);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.put(byteVector0);
      FieldWriter fieldWriter2 = classWriter0.lastField;
      fieldWriter2.visitEnd();
      fieldWriter0.put(byteVector0);
      assertSame(fieldWriter0, fieldWriter2);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Attribute attribute0 = new Attribute((String) null);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "u1:KI", "", (String) null, attribute0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Attribute@6
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1248));
      classWriter0.newNameType("", "");
      classWriter0.version = 0;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2885), "Wcsr_S-hE%f", "", "", "ConstantValue");
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter0.next = fieldWriter1;
      fieldWriter0.visitEnd();
      fieldWriter1.visitAnnotation("Synthetic", false);
      Object object0 = new Object();
      FieldWriter fieldWriter2 = null;
      try {
        fieldWriter2 = new FieldWriter(classWriter0, (-1248), "", "_&k", "-Y&Xp!SKwQlbI", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@515ed439
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2636256721237273
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-73));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-889275714), "", "", "", "dV2[wB[*mlb");
      ByteVector byteVector0 = new ByteVector(431);
      fieldWriter0.visitEnd();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor1 = fieldWriter0.visitAnnotation("s", false);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8599672810355049
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 171, "", "", "", "");
      ByteVector byteVector0 = new ByteVector(4);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      // Undeclared exception!
      try { 
        fieldWriter1.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0359364314600865
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.threshold = 0;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", "", "");
      fieldWriter0.visitAnnotation("|Duhu#z7/X3w", true);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt(177);
      ByteVector byteVector2 = byteVector1.putByte(2);
      fieldWriter0.put(byteVector2);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector2);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2554823251787535
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1248));
      classWriter0.version = (-481);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2885), "Wcsr_S-hE%f", "", "", "");
      ByteVector byteVector0 = new ByteVector(2);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitEnd();
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1248));
      classWriter0.newNameType("", "");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1725), ":Bnh", "wheel.asm.FieldWriter", "~$='wWy(6Qt9_\" -t:", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt(2);
      ByteVector byteVector2 = byteVector1.putByte(1);
      fieldWriter0.put(byteVector0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte) (-50);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)6;
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)3;
      // Undeclared exception!
      try { 
        byteVector2.putByteArray(byteArray0, 1953, (byte)80);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6546695645285008
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-73));
      classWriter0.newNameType("wheel.asm.ClassReader", "");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3, "", "", "7)c\"O+`:Mm>UUP-k", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector();
      ByteVector byteVector2 = byteVector1.putInt(2);
      byteVector0.putByte(1);
      fieldWriter0.put(byteVector2);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1682824501765625
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1248));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1248), "Signature", "", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(423);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter0.put(byteVector0);
      FieldWriter fieldWriter2 = classWriter0.lastField;
      FieldWriter fieldWriter3 = classWriter0.lastField;
      fieldWriter3.visitEnd();
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter2.getSize();
      assertEquals(20, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-73));
      ClassWriter classWriter1 = new ClassWriter(7);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-889), "", "", "mZW", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
