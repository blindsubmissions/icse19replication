/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Aug 24 15:46:36 GMT 2018
 */

package accessories.plugins.time;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class JDayChooser_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "accessories.plugins.time.JDayChooser"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/ubuntu/evosuite_readability_gen/projects/105_freemind"); 
    java.lang.System.setProperty("user.home", "/home/ubuntu"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "ubuntu"); 
    java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JDayChooser_ESTest_scaffolding.class.getClassLoader() ,
      "accessories.plugins.time.JSpinField",
      "freemind.modes.MapAdapter",
      "org.apache.xml.dtm.ref.IncrementalSAXSource",
      "freemind.main.FreeMind",
      "org.apache.xml.serializer.AttributesImplSerializer",
      "freemind.modes.common.actions.FindAction",
      "freemind.main.FreeMindApplet",
      "org.apache.xml.serializer.SerializerBase",
      "org.hsqldb.lib.Set",
      "freemind.modes.schememode.SchemeToolBar",
      "org.hsqldb.lib.HsqlByteArrayOutputStream",
      "freemind.modes.ModeController$NodeSelectionListener",
      "org.hsqldb.lib.HsqlList",
      "freemind.modes.common.actions.FindAction$FindNextAction",
      "accessories.plugins.time.JDayChooser",
      "freemind.main.FreeMindMain",
      "org.hsqldb.jdbc.jdbcStatement",
      "accessories.plugins.time.JYearChooser",
      "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter",
      "freemind.extensions.HookFactory",
      "org.apache.xml.serializer.DOMSerializer",
      "freemind.modes.filemode.FileMapModel",
      "org.apache.xml.serializer.Serializer",
      "freemind.preferences.FreemindPropertyListener",
      "org.hsqldb.persist.HsqlProperties",
      "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter$StopException",
      "org.apache.xml.dtm.ref.CoroutineManager",
      "freemind.main.FreeMindMain$VersionInformation",
      "org.hsqldb.lib.Collection",
      "org.hsqldb.jdbc.jdbcConnection",
      "org.hsqldb.SessionInterface",
      "org.apache.xml.serializer.XSLOutputAttributes",
      "freemind.modes.filemode.FileController",
      "freemind.modes.NodeAdapter",
      "freemind.modes.viewmodes.CommonToggleChildrenFoldedAction",
      "freemind.main.FreeMindMain$StartupDoneListener",
      "freemind.modes.FreeMindJFileDialog",
      "freemind.view.mindmapview.MapView",
      "freemind.extensions.NodeHook",
      "freemind.controller.MapMouseMotionListener$MapMouseMotionReceiver",
      "org.hsqldb.jdbc.jdbcPreparedStatement",
      "org.hsqldb.types.JavaObject",
      "org.hsqldb.resources.BundleHandler",
      "org.hsqldb.store.BaseHashMap",
      "freemind.modes.FreeMindAwtFileDialog",
      "freemind.main.XMLElement",
      "freemind.modes.FreeMindFileDialog",
      "freemind.modes.attributes.AttributeController",
      "tests.freemind.FreeMindMainMock",
      "freemind.common.NamedObject",
      "freemind.controller.MapModuleManager$MapModuleChangeObserver",
      "org.hsqldb.jdbc.Util",
      "org.hsqldb.types.Binary",
      "freemind.controller.Controller",
      "freemind.modes.ControllerAdapter",
      "org.hsqldb.lib.HashMap",
      "freemind.modes.ControllerAdapter$ControllerPopupMenuListener",
      "freemind.main.FeedBack",
      "freemind.modes.FreeMindFileDialog$DirectoryResultListener",
      "freemind.modes.MindMapNode",
      "org.hsqldb.lib.Iterator",
      "org.apache.xml.serializer.SerializationHandler",
      "freemind.main.IFreeMindSplash",
      "freemind.modes.schememode.SchemeMode",
      "freemind.modes.common.CommonToggleFoldedAction",
      "accessories.plugins.time.JDayChooser$DecoratorButton",
      "freemind.view.mindmapview.NodeView",
      "org.apache.xml.serializer.SerializerConstants",
      "freemind.modes.common.CommonNodeKeyListener$EditHandler",
      "freemind.controller.MapModuleManager",
      "org.apache.xml.serializer.ExtendedContentHandler",
      "freemind.main.LoggingOutputStream",
      "accessories.plugins.time.JMonthChooser",
      "freemind.main.FreeMindStarter$ProxyAuthenticator",
      "org.apache.xml.serializer.ExtendedLexicalHandler",
      "freemind.controller.LastStateStorageManagement",
      "org.hsqldb.lib.FileAccess",
      "org.hsqldb.lib.HsqlArrayList",
      "freemind.main.Resources",
      "org.hsqldb.DatabaseURL",
      "org.hsqldb.HsqlException",
      "org.apache.xml.serializer.NamespaceMappings",
      "org.hsqldb.Trace",
      "accessories.plugins.time.JDayChooser$1",
      "freemind.view.MapModule",
      "org.hsqldb.lib.BaseList",
      "org.hsqldb.store.HashIndex",
      "freemind.modes.filemode.FilePopupMenu",
      "org.hsqldb.Result",
      "freemind.controller.MenuBar",
      "freemind.modes.Mode",
      "freemind.modes.ModeController$NodeLifetimeListener",
      "freemind.extensions.MindMapHook",
      "org.apache.xml.serializer.TransformStateSetter",
      "freemind.main.LogFileLogHandler",
      "freemind.main.FreeMindSecurityManager",
      "freemind.main.XMLParseException",
      "freemind.view.mindmapview.MapView$ScrollPane",
      "freemind.main.StdFormatter",
      "freemind.modes.MindMap",
      "freemind.controller.NodeMouseMotionListener$NodeMouseMotionObserver",
      "freemind.controller.StructuredMenuHolder",
      "freemind.modes.viewmodes.ViewControllerAdapter",
      "org.hsqldb.jdbc.jdbcCallableStatement",
      "freemind.main.FreeMindCommon",
      "freemind.common.TextTranslator",
      "org.hsqldb.Session",
      "freemind.main.FreeMindStarter",
      "org.apache.xml.serializer.ToHTMLSAXHandler",
      "freemind.modes.ModeController",
      "org.apache.xml.serializer.ToSAXHandler"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("java.beans.VetoableChangeListener", false, JDayChooser_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("javax.swing.event.AncestorListener", false, JDayChooser_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JDayChooser_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "accessories.plugins.time.JDayChooser",
      "accessories.plugins.time.JDayChooser$DecoratorButton",
      "accessories.plugins.time.JDayChooser$1",
      "accessories.plugins.time.JSpinField",
      "accessories.plugins.time.JYearChooser",
      "accessories.plugins.time.JSpinField$1",
      "freemind.extensions.HookAdapter",
      "freemind.extensions.NodeHookAdapter",
      "freemind.modes.mindmapmode.hooks.MindMapNodeHookAdapter",
      "plugins.collaboration.database.DatabaseBasics",
      "plugins.collaboration.database.DatabaseConnectionHook",
      "freemind.main.Resources",
      "tests.freemind.FreeMindMainMock",
      "freemind.main.FreeMindStarter",
      "freemind.main.FreeMindMain$VersionInformation",
      "freemind.main.FreeMind",
      "freemind.main.FreeMindApplet",
      "freemind.modes.Mode",
      "freemind.modes.schememode.SchemeMode",
      "freemind.modes.ControllerAdapter",
      "freemind.modes.viewmodes.ViewControllerAdapter",
      "freemind.modes.filemode.FileController",
      "freemind.modes.ControllerAdapter$ControllerPopupMenuListener",
      "org.apache.xml.utils.UnImplNode",
      "org.apache.xalan.templates.ElemTemplateElement",
      "org.apache.xalan.templates.ElemComment",
      "org.apache.batik.svggen.SVGGeneratorContext",
      "org.apache.batik.svggen.SVGIDGenerator",
      "org.apache.batik.svggen.DefaultExtensionHandler",
      "org.apache.batik.svggen.DefaultImageHandler",
      "org.apache.batik.svggen.ImageHandlerBase64Encoder",
      "org.apache.batik.svggen.SimpleImageHandler",
      "org.apache.batik.svggen.DefaultStyleHandler",
      "org.apache.batik.svggen.DefaultErrorHandler",
      "org.apache.batik.ext.awt.g2d.AbstractGraphics2D",
      "org.apache.batik.svggen.SVGGraphics2D",
      "org.apache.batik.ext.awt.g2d.GraphicContext",
      "org.apache.batik.svggen.SVGGraphicObjectConverter",
      "org.apache.batik.svggen.SVGShape",
      "org.apache.batik.svggen.SVGArc",
      "org.apache.batik.svggen.SVGEllipse",
      "org.apache.batik.svggen.SVGLine",
      "org.apache.batik.svggen.SVGPath",
      "org.apache.batik.svggen.SVGPolygon",
      "org.apache.batik.svggen.SVGRectangle",
      "org.apache.batik.svggen.DOMTreeManager",
      "org.apache.xml.res.XMLMessages",
      "org.apache.xpath.res.XPATHMessages",
      "org.apache.xalan.res.XSLMessages",
      "org.apache.xalan.res.XSLTErrorResources",
      "org.apache.xalan.res.XSLTErrorResources_en",
      "org.apache.fop.image.FopImage$ImageInfo",
      "org.apache.commons.logging.impl.Log4JLogger",
      "org.apache.log4j.Category",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "org.apache.log4j.Logger",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootCategory",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "org.apache.fop.image.AbstractFopImage",
      "org.apache.fop.image.JpegImage",
      "freemind.modes.schememode.SchemeController",
      "freemind.modes.filemode.FileMode",
      "freemind.modes.mindmapmode.MindMapController",
      "org.apache.batik.gvt.GraphicsNode",
      "freemind.controller.actions.generated.instance.JiBX_bindingFactory",
      "freemind.modes.browsemode.BrowseController",
      "accessories.plugins.time.JMonthChooser",
      "accessories.plugins.time.JMonthChooser$1",
      "org.hsqldb.Result",
      "org.hsqldb.Session",
      "org.hsqldb.jdbc.jdbcConnection",
      "org.hsqldb.persist.HsqlProperties",
      "org.hsqldb.DatabaseURL",
      "org.hsqldb.jdbc.Util",
      "org.hsqldb.store.BaseHashMap",
      "org.hsqldb.lib.HashMap",
      "org.hsqldb.store.HashIndex",
      "org.hsqldb.lib.BaseList",
      "org.hsqldb.lib.HsqlArrayList",
      "org.hsqldb.resources.BundleHandler",
      "org.hsqldb.Trace",
      "org.hsqldb.HsqlException"
    );
  }
}
