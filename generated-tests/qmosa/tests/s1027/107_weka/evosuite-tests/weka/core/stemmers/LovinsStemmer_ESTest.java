/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:57:38 GMT 2018
 */

package weka.core.stemmers;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.core.TechnicalInformation;
import weka.core.stemmers.LovinsStemmer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LovinsStemmer_ESTest extends LovinsStemmer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1017207475369135
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("%2Mlu*&0=6jBk");
      lovinsStemmer0.stemString("z]}G[/c+J<Hrb['");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("z]}g[/c+j<hrb['");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("&B9-QV:^oypC");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getTechnicalInformation();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "z]}g[/c+j<hrb['";
      stringArray0[2] = "z]}g[/c+j<hrb['";
      stringArray0[3] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[4] = "PNKb|4@lYsHo6MdT]o";
      stringArray0[5] = "%2mlu*&0=6jbk";
      stringArray0[6] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[7] = "";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("");
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("%2mlu*&0=6jbk");
      LovinsStemmer.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9526718761409796
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      lovinsStemmer0.stem(",");
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      String string1 = lovinsStemmer0.stem("ably");
      assertEquals("abl", string1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0917409599931827
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.stem("&%XK");
      assertEquals("&%xk", string0);
      
      String string1 = lovinsStemmer0.stemString("age");
      assertEquals("ag", string1);
      
      String string2 = lovinsStemmer0.stemString("%eC3pO7{UlPd|Fpcq'}");
      assertEquals("%ec3po7{ulpd|fpcq'}", string2);
      
      String string3 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string3);
      
      lovinsStemmer0.getTechnicalInformation();
      String string4 = lovinsStemmer0.stemString("mastersthesis");
      assertEquals("mastersthes", string4);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8945571734275531
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.stem("A report published by a school or other institution, usually numbered within a series.");
      lovinsStemmer0.globalInfo();
      String string0 = lovinsStemmer0.stemString("a report published by a school or other institution, usually numbered within a series.");
      assertEquals("a report publ by a school or other institut, usu number within a ser.", string0);
      
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("|8_kk");
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      String string2 = lovinsStemmer0.getRevision();
      assertEquals("8034", string2);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("Can't add object to itself!");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "price";
      lovinsStemmer0.getRevision();
      stringArray0[1] = "R";
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("dhI-GJ#9");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0642580751745085
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("Ross Quinlan");
      lovinsStemmer0.stemString("%u");
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("Ie{ckPK5H+");
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      String[] stringArray1 = new String[6];
      stringArray1[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray1[1] = "%u";
      stringArray1[2] = "Ross Quinlan";
      stringArray1[3] = "weka.core.stemmers.LovinsStemmer";
      stringArray1[4] = "weka.core.stemmers.LovinsStemmer";
      stringArray1[5] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray1);
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.stem("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.stemString("Ie{ckPK5H+");
      lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray1);
      assertEquals(6, stringArray1.length);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.8945571734275531
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getRevision();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "8034";
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("rj");
      stringArray0[1] = "8034";
      stringArray0[2] = "8034";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("8034");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("8034");
      lovinsStemmer0.stem("K'PPvc");
      lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      LovinsStemmer.main(stringArray0);
      String string1 = lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string1);
      
      lovinsStemmer0.stem("lingurud");
      lovinsStemmer0.getTechnicalInformation();
      String string2 = lovinsStemmer0.stem("ied");
      assertEquals("ied", string2);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0136769766637608
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("8034");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("enced");
      lovinsStemmer0.stem("enc");
      lovinsStemmer0.getTechnicalInformation();
      String[] stringArray0 = new String[1];
      lovinsStemmer0.stemString("efully");
      stringArray0[0] = ";N~z&fk($/.[*Ki0";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("enced");
      lovinsStemmer0.stem("A journal name. Abbreviations are provided for many journals.");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem(" 2c9'X<25`gf:B~*27n");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("a journal name. abbreviations are provided for many journals.");
      lovinsStemmer0.globalInfo();
      TechnicalInformation technicalInformation0 = lovinsStemmer0.getTechnicalInformation();
      assertEquals(TechnicalInformation.Type.ARTICLE, technicalInformation0.getType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.8804901314870051
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("~");
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("3'CQ-!x@Fh3G");
      lovinsStemmer0.stem("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.stemString("`kOr>}&OX/N(D/SDVW");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "3'CQ-!x@Fh3G";
      stringArray0[1] = "~";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "`kOr>}&OX/N(D/SDVW";
      LovinsStemmer.main(stringArray1);
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.globalInfo();
      lovinsStemmer0.stemString("dRG\" }v{MZ(s");
      lovinsStemmer1.stem("r PRBz'8V");
      lovinsStemmer1.stemString("`kOr>}&OX/N(D/SDVW");
      lovinsStemmer1.stemString("mit");
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray1);
      assertNotSame(stringArray1, stringArray0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0279045553325876
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("Can't add object to itself!");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "price";
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("AUTHOR");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("ux'x'N7XNuk`Kl;");
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.getTechnicalInformation();
      lovinsStemmer0.getRevision();
      lovinsStemmer1.stemString("PNKb|4@lYsHo6MdT]o");
      String[] stringArray1 = new String[8];
      stringArray1[0] = "8034";
      stringArray1[1] = "author";
      stringArray1[2] = "wek.cor.stemmer.lovinsstemmer";
      stringArray1[3] = "pnkb|4@lysho6mdt]o";
      stringArray1[4] = "can't ad object to itself!";
      stringArray1[5] = "";
      stringArray1[6] = "AUTHOR";
      stringArray1[7] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray1);
      assertNotSame(stringArray1, stringArray0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0821955300387673
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "Y<f1XME)S&H3#omZ<5";
      stringArray0[2] = " ";
      stringArray0[3] = "C";
      stringArray0[4] = "&2{0yNR^MvLUnjr&A6";
      stringArray0[5] = "efully";
      stringArray0[6] = "0~g(iQ";
      stringArray0[7] = "yish";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      LovinsStemmer.main(stringArray0);
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("lysho6mdtpand");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.getRevision();
      String string1 = lovinsStemmer1.stemString("lysho6mdttex");
      assertEquals("lysho6mdttic", string1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.7999137620083928
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[11];
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("efully");
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("lysho6mdtherrudex");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.toString();
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      assertEquals(11, stringArray0.length);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.7492371052659756
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("%2Mlu*&0=6jBk");
      lovinsStemmer0.stemString("z]}G[/c+J<Hrb['");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("z]}g[/c+j<hrb['");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("&B9-QV:^oypC");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      TechnicalInformation technicalInformation0 = lovinsStemmer0.getTechnicalInformation();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "z]}g[/c+j<hrb['";
      stringArray0[2] = "z]}g[/c+j<hrb['";
      stringArray0[3] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[4] = "PNKb|4@lYsHo6MdT]o";
      stringArray0[5] = "%2mlu*&0=6jbk";
      stringArray0[6] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[7] = "";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stem("ablyt");
      TechnicalInformation technicalInformation1 = lovinsStemmer0.getTechnicalInformation();
      assertNotSame(technicalInformation1, technicalInformation0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.012845336286074
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("ent");
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.stemString("ablix");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getRevision();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stemString("weka.core.stemmers.LovinsStemmer");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "wek.cor.stemmer.lovinsstemmer";
      LovinsStemmer.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.7606176920415182
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("ent");
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stem("invalid CVS revision - not dots!");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer1.getRevision();
      lovinsStemmer1.getTechnicalInformation();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "invalid cvs revision - not dots!";
      stringArray0[1] = "yz";
      stringArray0[2] = "PNKb|4@lYsHo6MdT]o";
      stringArray0[3] = "invalid CVS revision - not dots!";
      stringArray0[4] = "";
      stringArray0[5] = "8034";
      stringArray0[6] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer1.stemString("-o <output-file>");
      lovinsStemmer0.stemString("Get option -o: ");
      lovinsStemmer1.getTechnicalInformation();
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.getRevision();
      lovinsStemmer2.stemString("~}1:iNMvZh#R");
      LovinsStemmer.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0472559679279883
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "UE3J/?";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      String string0 = lovinsStemmer0.stemString("1gncid");
      assertEquals("1gncis", string0);
      
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getRevision();
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
  }
}
