/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:57:15 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.color.ICC_ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.ColorModel;
import java.awt.image.ConvolveOp;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.Raster;
import java.awt.image.SampleModel;
import java.awt.image.ShortLookupTable;
import java.awt.image.SinglePixelPackedSampleModel;
import java.awt.image.WritableRaster;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Properties;
import java.util.Stack;
import java.util.Vector;
import javax.media.jai.PlanarImage;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.event.ListDataListener;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex((-1));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      int int0 = 9999;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(9999, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 9999
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1691;
      visualListModel0.getElements();
      visualListModel0.moveUpIndex(1691);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 14;
      intArray0[2] = 160;
      intArray0[3] = (-778);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.appendAllElements(priorityQueue0);
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = (-1102);
      intArray0[2] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      int[] intArray1 = new int[8];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 0;
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      stack0.ensureCapacity(0);
      intArray1[7] = 0;
      visualListModel0.reverseElements(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = (-1742);
      intArray0[1] = 90;
      intArray0[2] = 0;
      intArray0[3] = 32;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.subList(821, 1);
      PlanarImage.getDefaultColorModel((-734), 821);
      SinglePixelPackedSampleModel singlePixelPackedSampleModel0 = null;
      try {
        singlePixelPackedSampleModel0 = new SinglePixelPackedSampleModel(4578, 2, 0, intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (2) and height (0) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayDeque0);
      int[] intArray0 = new int[1];
      intArray0[0] = (-4202);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.removeElements((-4202), 0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      visualListModel0.removeElements(intArray0, false);
      intArray0[1] = (-761);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      int int0 = 0;
      int int1 = 0;
      visualListModel0.getListDataListeners();
      visualListModel0.subList(0, 0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-432);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-432));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -432
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeListDataListener((ListDataListener) null);
      visualListModel0.getElements();
      int[] intArray0 = new int[7];
      intArray0[0] = (-993);
      intArray0[1] = (-993);
      intArray0[2] = (-993);
      intArray0[3] = (-993);
      intArray0[4] = (-993);
      intArray0[5] = (-993);
      intArray0[6] = (-993);
      visualListModel0.reverseElements(intArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      hashSet0.clone();
      visualListModel0.addAllElements((-993), (Collection<VisualPageListItem>) hashSet0);
      visualListModel0.clearData();
      visualListModel0.getElementAt(2871);
      visualListModel0.removeElements(64, (-993), true);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      int int0 = visualListModel0.getSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 5381;
      visualListModel0.subList((-2817), 5381, false);
      visualListModel0.moveDownIndex(5381);
      visualListModel0.clearData();
      visualListModel0.subList(5381, 46);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.setData(visualPageListItemArray0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(3000, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      visualListModel0.prependAllElements(vector0);
      int int0 = 2;
      visualListModel0.moveDownIndex(2);
      visualListModel0.appendAllElements(vector0);
      int int1 = 1;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 0, true);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.undeleteElements(intArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short) (-3289);
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable((-2233), shortArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Offset must be greater than 0
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(2382, 0, true);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[1];
      intArray0[0] = 3261;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements(3261, (Collection<VisualPageListItem>) stack1);
      visualListModel0.subList((-3601), (-1478), false);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack1);
      visualListModel0.undeleteElements(intArray0);
      assertArrayEquals(new int[] {3261}, intArray0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int int0 = 217;
      boolean boolean0 = false;
      visualListModel0.subList(2132, 217, false);
      int int1 = 0;
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      String string0 = "";
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      int[] intArray1 = new int[8];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[3] = 0;
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 32, true);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray1 = new int[0];
      visualListModel1.rotateAnticlockwiseElements(intArray1);
      assertEquals(0, intArray1.length);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.844621476365503
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(2382, 0, true);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[1];
      intArray0[0] = 3267;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements(3267, (Collection<VisualPageListItem>) stack1);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.subList(3267, (-2253), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(3267) > toIndex(-2253)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[2] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int int0 = 0;
      stack0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      int[] intArray1 = new int[8];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 0;
      visualListModel0.prependAllElements(stack0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1347));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.339371734389815
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getElements();
      int[] intArray0 = new int[6];
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clear();
      visualListModel1.setData((Vector<VisualPageListItem>) stack0);
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel0.subList(0, 0, true);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) null);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.reverseElements(intArray0);
      visualListModel2.undeleteElements(intArray0);
      assertEquals(6, intArray0.length);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.4583113296830845
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getElements();
      int[] intArray0 = new int[6];
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      int[] intArray1 = new int[5];
      intArray1[0] = (-1);
      intArray1[1] = (-3116);
      intArray1[2] = 49;
      intArray1[3] = 1;
      intArray1[4] = (-4144);
      visualListModel1.rotateClockwiseElements(intArray1);
      visualListModel1.setData((Vector<VisualPageListItem>) stack1);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.addAllElements((-1262), (Collection<VisualPageListItem>) null);
      visualListModel0.subList(10000, 1, true);
      visualListModel2.addAllElements((Collection<VisualPageListItem>) stack1);
      VisualListModel visualListModel3 = new VisualListModel();
      int[] intArray2 = new int[1];
      intArray2[0] = 1;
      visualListModel3.reverseElements(intArray2);
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel2.setData((Vector<VisualPageListItem>) stack0);
      VisualListModel visualListModel5 = new VisualListModel();
      visualListModel5.undeleteElements(intArray1);
      assertNotSame(intArray1, intArray0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0449311748495913
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      int int0 = 21;
      visualListModel0.removeElements(0, 0, true);
      int int1 = 3267;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack1);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack1);
      int int2 = (-1702);
      // Undeclared exception!
      try { 
        visualListModel0.subList(21, 0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(21) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      visualListModel0.subList(598, 598, true);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(598, 21, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 695);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.subList(1, 1039, true);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.setData((Vector<VisualPageListItem>) stack1);
      visualListModel3.undeleteElements(intArray0);
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel2.removeElements((-193), 1, true);
      assertNotSame(visualListModel2, visualListModel0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getElements();
      int[] intArray1 = new int[4];
      intArray1[0] = 10;
      intArray1[1] = 1756;
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.prependAllElements(arrayDeque0);
      intArray1[2] = (-608);
      intArray1[3] = 2870;
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.removeElements(intArray0, false);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-1653), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.9356005054539458
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      int[] intArray1 = new int[8];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[3] = 0;
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.512658529529802
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      visualListModel0.getElements();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[0];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clear();
      visualListModel1.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.addAllElements((-3459), (Collection<VisualPageListItem>) stack0);
      visualListModel0.subList(1, 1, true);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector1);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel2.reverseElements(intArray0);
      visualListModel2.undeleteElements(intArray0);
      visualListModel2.moveUpIndexes(intArray0);
      visualListModel2.moveDownIndex(0);
      visualListModel1.moveDownIndex(84);
      assertNotSame(visualListModel1, visualListModel0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0253262207700677
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 4418;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel1.setData(visualPageListItemArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.getValidElements();
      visualListModel1.moveUpIndexes(intArray0);
      try { 
        visualListModel1.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 4418
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.1383972463477243
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 4418;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel1.getValidElements();
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 4418
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      visualListModel0.getSize();
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8200759753606213
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElementAt((VisualPageListItem) null, (-1));
      Boolean boolean0 = new Boolean(true);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2877732291622817
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int[] intArray0 = new int[2];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 50);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[7] = null;
      visualListModel1.setData(visualPageListItemArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel4.undeleteElements(intArray0);
      visualListModel1.reverseElements(intArray0);
      assertEquals(8, visualListModel1.getSize());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.1458417525947544
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int[] intArray0 = new int[3];
      int int0 = 83;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.updateElementAt(83, (VisualPageListItem) null);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[15];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.351673301904631
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int[] intArray0 = new int[3];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.updateElementAt(83, (VisualPageListItem) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveUpIndexes(intArray0);
      int int0 = 0;
      visualListModel0.moveDownIndex(0);
      int[] intArray1 = new int[9];
      Integer[] integerArray0 = new Integer[8];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[6] = integer6;
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      integerArray0[7] = integer7;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel2.addListDataListener(jComboBox0);
      intArray1[0] = 83;
      intArray1[0] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 83;
      intArray1[7] = int0;
      intArray1[0] = 83;
      visualListModel2.rotateAnticlockwiseElements(intArray1);
      visualListModel1.undeleteElements(intArray0);
      visualListModel2.reverseElements(intArray0);
      assertNotSame(visualListModel2, visualListModel0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      Boolean boolean0 = new Boolean(true);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel2.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.6792043316027068
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveUpIndex(1);
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 1;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }
}
