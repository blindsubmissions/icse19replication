/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 17:02:56 GMT 2018
 */

package org.quickserver.net.server;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.Socket;
import java.nio.channels.SocketChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.quickserver.net.qsadmin.CommandHandler;
import org.quickserver.net.qsadmin.Data;
import org.quickserver.net.server.Authenticator;
import org.quickserver.net.server.ClientAuthenticationHandler;
import org.quickserver.net.server.ClientBinaryHandler;
import org.quickserver.net.server.ClientCommandHandler;
import org.quickserver.net.server.ClientData;
import org.quickserver.net.server.ClientEvent;
import org.quickserver.net.server.ClientExtendedEventHandler;
import org.quickserver.net.server.ClientHandler;
import org.quickserver.net.server.ClientObjectHandler;
import org.quickserver.net.server.ClientWriteHandler;
import org.quickserver.net.server.QuickServer;
import org.quickserver.net.server.TheClient;
import org.quickserver.net.server.impl.DefaultClientEventHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TheClient_ESTest extends TheClient_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTrusted(false);
      theClient0.getClientData();
      theClient0.getClientData();
      TheClient theClient1 = new TheClient();
      theClient1.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      boolean boolean0 = theClient0.getCommunicationLogging();
      assertTrue(boolean0);
      
      theClient0.getClientBinaryHandler();
      int int0 = theClient1.getMaxAuthTry();
      assertEquals(0, int0);
      
      SocketChannel socketChannel0 = SocketChannel.open();
      theClient0.setSocketChannel(socketChannel0);
      theClient1.getClientObjectHandler();
      theClient0.getClientObjectHandler();
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      theClient0.getClientCommandHandler();
      defaultClientEventHandler0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setClientEventHandler(defaultClientEventHandler0);
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getClientData();
      theClient0.getSocket();
      TheClient theClient1 = new TheClient();
      theClient1.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientBinaryHandler();
      theClient0.setTimeoutMsg("Rpq");
      theClient0.getMaxAuthTryMsg();
      theClient0.getClientEventHandler();
      theClient1.setSocket((Socket) null);
      theClient0.getClientEvent();
      theClient0.getClientAuthenticationHandler();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getTimeout();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.setClientData((ClientData) null);
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setCommunicationLogging(true);
      theClient0.setCommunicationLogging(true);
      theClient0.getClientData();
      theClient0.getSocketChannel();
      theClient0.getMaxAuthTryMsg();
      theClient0.getTrusted();
      theClient0.setCommunicationLogging(true);
      theClient0.getSocket();
      theClient0.getClientEvent();
      theClient0.setClientData((ClientData) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      QuickServer quickServer0 = new QuickServer("no socket", 0);
      // Undeclared exception!
      try { 
        quickServer0.findFirstClientById("IGNORED: Could not return ClientHandler to pool: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.quickserver.net.server.QuickServer", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      ClientEvent clientEvent0 = theClient0.getClientEvent();
      theClient0.setClientEvent(clientEvent0);
      theClient0.setTimeout(125);
      theClient0.setClientEvent(clientEvent0);
      theClient0.getServer();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setTrusted(false);
      theClient0.getTimeoutMsg();
      theClient0.setTimeoutMsg((String) null);
      theClient0.setMaxAuthTry(1);
      theClient0.setTrusted(false);
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getServer();
      assertEquals(125, theClient0.getTimeout());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      QuickServer quickServer0 = new QuickServer("89X", 0);
      theClient0.setServer(quickServer0);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      assertFalse(theClient0.getTrusted());
      
      theClient0.setTrusted(true);
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxAuthTryMsg("-Mll#LON E1");
      theClient0.getClientEvent();
      theClient0.getClientAuthenticationHandler();
      theClient0.setTimeoutMsg("{TheClient ");
      Data data0 = new Data();
      data0.setUsername("-Mll#LON E1");
      data0.setLastAsked("-Mll#LON E1");
      theClient0.setClientData(data0);
      theClient0.setCommunicationLogging(true);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getSocket();
      theClient0.getClientBinaryHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getMaxConnectionMsg();
      theClient0.getClientAuthenticationHandler();
      theClient0.getServer();
      assertTrue(theClient0.getTrusted());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.setMaxConnectionMsg((String) null);
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.setTrusted(true);
      theClient0.getTrusted();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientBinaryHandler();
      theClient0.setTimeout(675);
      theClient0.getTimeoutMsg();
      theClient0.getCommunicationLogging();
      theClient0.setTimeoutMsg("client-data-pool-info");
      theClient0.getSocketChannel();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      assertEquals(675, theClient0.getTimeout());
  }
}
