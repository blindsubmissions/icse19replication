/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 10:06:41 GMT 2018
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.UnderComp;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSnapshotEnd(10);
      assertEquals("id=10 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.scannerDataEnd(10);
      assertEquals("id = 10 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.orderStatus(10, "7MGmyf", 10, 10, 10, 10, 0, 0.0, 10, "id=10 =============== end ===============");
      assertEquals("order status: orderId=10 clientId=10 permId=10 status=7MGmyf filled=10 remaining=10 avgFillPrice=10.0 lastFillPrice=0.0 parent Id=0 whyHeld=id=10 =============== end ===============", string2);
      
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(0, "", "", "", 0.0, "", "%.?d&QjxvjHbyH!E9d", "Btj'CA5L S#;.", "", "", vector0, "order status: orderId=10 clientId=10 permId=10 status=7MGmyf filled=10 remaining=10 avgFillPrice=10.0 lastFillPrice=0.0 parent Id=0 whyHeld=id=10 =============== end ===============", false, "L@ &hS;-#0~ng", "L@ &hS;-#0~ng");
      Execution execution0 = new Execution();
      String string3 = EWrapperMsgGenerator.execDetails(13, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 13\norderId = 0\nclientId = 0\nsymbol = \nsecType = \nexpiry = \nstrike = 0.0\nright = \ncontractExchange = Btj'CA5L S#;.\ncurrency = \nlocalSymbol = \nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string3);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Contract contract0 = new Contract();
      contract0.m_secIdType = "";
      contract0.m_secIdType = null;
      contract0.m_comboLegs = null;
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, 0, 0, 0.0, 1.0, 0.0, 0, "");
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n0 0.0 0.0 1.0 0.0 0.0 ", string0);
      
      contract0.m_symbol = null;
      EWrapperMsgGenerator.managedAccounts((String) null);
      ContractDetails contractDetails0 = new ContractDetails();
      contract0.m_localSymbol = null;
      contractDetails0.m_notes = null;
      contractDetails0.m_coupon = (double) (-740);
      contract0.m_secId = "Error - ";
      String string1 = EWrapperMsgGenerator.contractDetails((-740), contractDetails0);
      assertEquals("reqId = -740 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 0.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 0\nlongName = null\ncontractMonth = null\nindustry = null\ncategory = null\nsubcategory = null\ntimeZoneId = null\ntradingHours = null\nliquidHours = null\n ---- Contract Details End ----\n", string1);
      
      contractDetails0.m_marketName = "{jJ+U:(3)\"rliv9F";
      String string2 = EWrapperMsgGenerator.updateMktDepthL2(0, 0, "!)C6m1z?J7<aA{6$", 0, 0, (-740), 0);
      assertEquals("updateMktDepth: 0 0 !)C6m1z?J7<aA{6$ 0 0 -740.0 0", string2);
      
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      String string3 = EWrapperMsgGenerator.updateAccountValue((String) null, (String) null, (String) null, (String) null);
      assertEquals("updateAccountValue: null null null null", string3);
      
      EWrapperMsgGenerator.managedAccounts("");
      String string4 = EWrapperMsgGenerator.managedAccounts("updateMktDepth: 0 0 !)C6m1z?J7<aA{6$ 0 0 -740.0 0");
      assertEquals("Connected : The list of managed accounts are : [updateMktDepth: 0 0 !)C6m1z?J7<aA{6$ 0 0 -740.0 0]", string4);
      
      String string5 = EWrapperMsgGenerator.updateNewsBulletin(275, (-1061), (String) null, "reqId = -740 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 0.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 0\nlongName = null\ncontractMonth = null\nindustry = null\ncategory = null\nsubcategory = null\ntimeZoneId = null\ntradingHours = null\nliquidHours = null\n ---- Contract Details End ----\n");
      assertEquals("MsgId=275 :: MsgType=-1061 :: Origin=reqId = -740 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 0.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 0\nlongName = null\ncontractMonth = null\nindustry = null\ncategory = null\nsubcategory = null\ntimeZoneId = null\ntradingHours = null\nliquidHours = null\n ---- Contract Details End ----\n :: Message=null", string5);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountTime("Ao93;bH[");
      assertEquals("updateAccountTime: Ao93;bH[", string0);
      
      String string1 = EWrapperMsgGenerator.execDetailsEnd(964);
      assertEquals("reqId = 964 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.realtimeBar(964, 0L, 0.0, 0.0, 0L, (-769.25493), (-1961L), 964, (-1));
      assertEquals("id=964 time = 0 open=0.0 high=0.0 low=0.0 close=-769.25493 volume=-1961 count=-1 WAP=964.0", string2);
      
      String string3 = EWrapperMsgGenerator.accountDownloadEnd(" .|)sZ(u6;!D");
      assertEquals("accountDownloadEnd:  .|)sZ(u6;!D", string3);
      
      String string4 = EWrapperMsgGenerator.historicalData(964, " scalePriceIncrement=", (-769.25493), (-1961L), 293.35817808, (-1961L), (-377), (-1), 964, false);
      assertEquals("id=964 date =  scalePriceIncrement= open=-769.25493 high=-1961.0 low=293.35817808 close=-1961.0 volume=-377 count=-1 WAP=964.0 hasGaps=false", string4);
      
      String string5 = EWrapperMsgGenerator.historicalData((-1), "EGq|!b7EUN%;V:n\"W4", (-769.25493), 805.6727109, 1.7976931348623157E308, (-769.25493), (-580), (-377), (-1.0), false);
      assertEquals("id=-1 date = EGq|!b7EUN%;V:n\"W4 open=-769.25493 high=805.6727109 low=1.7976931348623157E308 close=-769.25493 volume=-580 count=-377 WAP=-1.0 hasGaps=false", string5);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 0, 0, 0, (-832.8096467004403), 0);
      assertEquals("id=0  bidSize: vol = 0.0 delta = 0.0", string0);
      
      EWrapperMsgGenerator.scannerDataEnd(0);
      String string1 = EWrapperMsgGenerator.scannerParameters("id = 0 =============== end ===============");
      assertEquals("SCANNER PARAMETERS:\nid = 0 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.execDetailsEnd(0);
      assertEquals("reqId = 0 =============== end ===============", string2);
      
      String string3 = EWrapperMsgGenerator.scannerDataEnd(1872);
      assertEquals("id = 1872 =============== end ===============", string3);
      
      String string4 = EWrapperMsgGenerator.tickEFP(0, 1872, 1.7976931348623157E308, "SCANNER PARAMETERS:\nid = 0 =============== end ===============", 1.7976931348623157E308, 121, "id=0  bidSize: vol = 0.0 delta = 0.0", 121, (-1.0));
      assertEquals("id=0  unknown: basisPoints = 1.7976931348623157E308/SCANNER PARAMETERS:\nid = 0 =============== end =============== impliedFuture = 1.7976931348623157E308 holdDays = 121 futureExpiry = id=0  bidSize: vol = 0.0 delta = 0.0 dividendImpact = 121.0 dividends to expiry = -1.0", string4);
      
      String string5 = EWrapperMsgGenerator.updateMktDepthL2(98, 13, " underComp.delta =", 0, 1872, 0.0, 906);
      assertEquals("updateMktDepth: 98 13  underComp.delta = 0 1872 0.0 906", string5);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Contract contract0 = new Contract();
      contract0.m_symbol = "";
      Order order0 = new Order();
      order0.m_goodAfterTime = "#yde-uOKz,t@';V^+";
      order0.m_auctionStrategy = 121;
      OrderState orderState0 = new OrderState("mKI", (String) null, (String) null, "", 1.7976931348623157E308, 0, 0.0, (String) null, "com.ib.client.AnyWrapperMsgGenerator");
      orderState0.m_initMargin = "";
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      Execution execution0 = new Execution();
      String string0 = EWrapperMsgGenerator.execDetails(0, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 0\norderId = 0\nclientId = 0\nsymbol = \nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\ncontractExchange = null\ncurrency = null\nlocalSymbol = null\nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string0);
      
      ContractDetails contractDetails0 = new ContractDetails();
      order0.m_clientId = 4955;
      String string1 = EWrapperMsgGenerator.scannerData(0, (-1), contractDetails0, "C=|((XMO", "NX<0SAR]8Avuht", " tradingClass=", "b)");
      assertEquals("id = 0 rank=-1 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=C=|((XMO benchmark=NX<0SAR]8Avuht projection= tradingClass= legsStr=b)", string1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EWrapperMsgGenerator.realtimeBar(2, 0L, (-1032.536278), 0L, 0.0, (-3037.7), 2, (-1032.536278), 0);
      EWrapperMsgGenerator.tickSize(0, (-72), 0);
      EWrapperMsgGenerator.updateNewsBulletin(Integer.MAX_VALUE, Integer.MAX_VALUE, "id=2 time = 0 open=-1032.536278 high=0.0 low=0.0 close=-3037.7 volume=2 count=0 WAP=-1032.536278", "Connection Closed");
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(10, "com.ib.client.Contract", "com.ib.client.Contract", "", (-1332.981582426), "9i/@(", "Connection Closed", "id=0  unknown=0", "Connection Closed", "Connection Closed", vector0, "; _a.++-KLz@XmlcpH}", false, "", "9i/@(");
      UnderComp underComp0 = contract0.m_underComp;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation(10, (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.openOrderEnd();
      assertEquals(" =============== end ===============", string0);
      
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract((-1), " | ", " | ", "", 1.0, "pRZBl", "", "com.ib.client.ContractDetails", "YW+U\"* V0Y8", " =============== end ===============", vector0, "com.ib.client.Execution", true, "=", "M!8Gf'DqQ<]C T");
      String string1 = EWrapperMsgGenerator.updatePortfolio(contract0, 2012, (-1), 1.0, 1.0, 0.0, (-1.0), "2>cnz%33");
      assertEquals("updatePortfolio: conid = -1\nsymbol =  | \nsecType =  | \nexpiry = \nstrike = 1.0\nright = pRZBl\nmultiplier = \nexchange = com.ib.client.ContractDetails\nprimaryExch = com.ib.client.Execution\ncurrency = YW+U\"* V0Y8\nlocalSymbol =  =============== end ===============\n2012 -1.0 1.0 1.0 0.0 -1.0 2>cnz%33", string1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation((-1), (-1), (-1), (-1), (-1), (-1));
      String string0 = EWrapperMsgGenerator.updateMktDepth((-1), (-1), (-1), (-1), (-1), (-1));
      EWrapperMsgGenerator.historicalData(0, "", (-1), (-1), (-1837.6034616), (-1837.6034616), (-2536), 0, 0, true);
      EWrapperMsgGenerator.contractDetailsEnd((-2536));
      Contract contract0 = new Contract();
      Order order0 = new Order();
      OrderState orderState0 = new OrderState("7(Qf|X9'G'-H8W/", "8;U*1PmrJd,", "", "id=-1  unknown: vol = N/A delta = -1.0", 0.0, 0, Integer.MAX_VALUE, "nXx\"SI009", (String) null);
      String string1 = EWrapperMsgGenerator.openOrder((-2536), contract0, order0, orderState0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EWrapperMsgGenerator.tickSize(0, (-926), (-926));
      String string0 = EWrapperMsgGenerator.updateMktDepthL2((-926), (-926), "id=0  unknown=-926", 0, (-4912), (-926), (-104));
      EWrapperMsgGenerator.currentTime((-926));
      EWrapperMsgGenerator.historicalData((-4912), (String) null, 1.7976931348623157E308, (-1445.1565673719713), 2072.243, (-926), 850, 1819, 0.0, false);
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(0, (String) null, "'6?{!Q?4'0\fm]", "current time = -926 (Dec 31, 1969 11:44:34 PM)", (-926), (String) null, "id=-4912 date = null open=1.7976931348623157E308 high=-1445.1565673719713 low=2072.243 close=-926.0 volume=850 count=1819 WAP=0.0 hasGaps=false", (String) null, "BOND", (String) null, vector0, "'6?{!Q?4'0\fm]", true, "current time = -926 (Dec 31, 1969 11:44:34 PM)", (String) null);
      Order order0 = new Order();
      OrderState orderState0 = new OrderState((String) null, " TIF=", "id=0  unknown=-926", "qIITY5F1", 0, 4267.4150470256, Integer.MAX_VALUE, (String) null, "R!4bub!~}!");
      String string1 = EWrapperMsgGenerator.openOrder(1, contract0, order0, orderState0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth(559, 559, 559, 559, 4145.9380441342, 559);
      assertEquals("updateMktDepth: 559 559 559 559 4145.9380441342 559", string0);
      
      String string1 = EWrapperMsgGenerator.tickString((-5148), 0, "com.ib.client.OrderState");
      assertEquals("id=-5148  bidSize=com.ib.client.OrderState", string1);
      
      String string2 = EWrapperMsgGenerator.tickSize(0, 152, 152);
      assertEquals("id=0  unknown=152", string2);
      
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      ContractDetails contractDetails0 = new ContractDetails();
      Contract contract0 = new Contract();
      contractDetails0.m_summary = contract0;
      String string3 = EWrapperMsgGenerator.scannerData((-1968), 152, contractDetails0, (String) null, (String) null, (String) null, "longName = ");
      assertEquals("id = -1968 rank=152 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=null benchmark=null projection=null legsStr=longName = ", string3);
      
      String string4 = EWrapperMsgGenerator.tickGeneric((-1), (-1), 1.0);
      assertEquals("id=-1  unknown=1.0", string4);
      
      String string5 = EWrapperMsgGenerator.contractDetailsEnd((-1968));
      assertEquals("reqId = -1968 =============== end ===============", string5);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.receiveFA(1576, "");
      assertEquals("FA: null ", string0);
      
      String string1 = EWrapperMsgGenerator.tickSize(110, (-145), (-4611));
      assertEquals("id=110  unknown=-4611", string1);
      
      String string2 = EWrapperMsgGenerator.tickString(1992, 1992, "id=110  unknown=-4611");
      assertEquals("id=1992  unknown=id=110  unknown=-4611", string2);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EWrapperMsgGenerator.fundamentalData(2515, "eKehy#f*,A3}RtX#]");
      UnderComp underComp0 = new UnderComp();
      underComp0.m_conId = (-358);
      underComp0.m_delta = (double) (-358);
      underComp0.m_delta = (-2339.4393187255378);
      underComp0.m_conId = (-358);
      String string0 = EWrapperMsgGenerator.deltaNeutralValidation(2515, underComp0);
      assertEquals("id = 2515 underComp.conId =-358 underComp.delta =-2339.4393187255378 underComp.price =0.0", string0);
      
      String string1 = EWrapperMsgGenerator.fundamentalData((-358), "");
      assertEquals("id  = -358 len = 0\n", string1);
      
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      String string2 = EWrapperMsgGenerator.historicalData((-358), "FA:", (-358), 0.0, (-2339.4393187255378), (-1.0), 0, (-358), (-1012.11071986), false);
      assertEquals("id=-358 date = FA: open=-358.0 high=0.0 low=-2339.4393187255378 close=-1.0 volume=0 count=-358 WAP=-1012.11071986 hasGaps=false", string2);
      
      String string3 = EWrapperMsgGenerator.updateNewsBulletin((-358), 2515, "", "");
      assertEquals("MsgId=-358 :: MsgType=2515 :: Origin= :: Message=", string3);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EWrapperMsgGenerator.tickEFP(0, 0, 0, "v0@KKk(4o.{SO{", 0, (-2516), "v0@KKk(4o.{SO{", 0, (-2516));
      EWrapperMsgGenerator.accountDownloadEnd("r?{EDwnfirN'_Dp");
      EWrapperMsgGenerator.updateAccountValue("'GeZv+2\"l(]}0h-?W", "r?{EDwnfirN'_Dp", "d6ZeRZk.kj3", "");
      EWrapperMsgGenerator.managedAccounts("d6ZeRZk.kj3");
      EWrapperMsgGenerator.contractDetailsEnd(0);
      EWrapperMsgGenerator.nextValidId(0);
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract((-2516), "Next Valid Order ID: 0", "reqId = 0 =============== end ===============", "3]m", 0, "v0@KKk(4o.{SO{", "", "SCANNER PARAMETERS:", "3]m", "", vector0, "Connected : The list of managed accounts are : [d6ZeRZk.kj3]", false, "", "v0@KKk(4o.{SO{");
      ContractDetails contractDetails0 = new ContractDetails(contract0, "d6ZeRZk.kj3", "reqId = 0 =============== end ===============", 0, "3]m", "", (-2516), "\";19`#Ya]^}}gW[", "<D", "Connected : The list of managed accounts are : [d6ZeRZk.kj3]", "O", "f/'0vFT`@$D)GI(Jxe", "", "v0@KKk(4o.{SO{", "updateAccountValue: 'GeZv+2\"l(]}0h-?W r?{EDwnfirN'_Dp d6ZeRZk.kj3 ");
      String string0 = EWrapperMsgGenerator.contractDetails(3914, contractDetails0);
      EWrapperMsgGenerator.tickSize(1525, 0, (-2740));
      String string1 = EWrapperMsgGenerator.nextValidId(0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      order0.m_origin = (-558);
      OrderState orderState0 = new OrderState();
      orderState0.m_initMargin = null;
      orderState0.m_status = "~:)$-UEEQ@CQ<M";
      contract0.m_secId = null;
      orderState0.m_maintMargin = null;
      EWrapperMsgGenerator.openOrder(1003, contract0, order0, orderState0);
      String string0 = EWrapperMsgGenerator.updateAccountTime((String) null);
      assertEquals("updateAccountTime: null", string0);
      
      String string1 = EWrapperMsgGenerator.tickPrice(1, Integer.MAX_VALUE, 211.9, 1184);
      assertEquals("id=1  unknown=211.9  canAutoExecute", string1);
      
      String string2 = EWrapperMsgGenerator.updateAccountValue("", (String) null, (String) null, (String) null);
      assertEquals("updateAccountValue:  null null null", string2);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 0;
      EWrapperMsgGenerator.contractDetailsEnd(0);
      EWrapperMsgGenerator.updateAccountTime("reqId = 0 =============== end ===============");
      EWrapperMsgGenerator.updateAccountValue("reqId = 0 =============== end ===============", "updateAccountTime: reqId = 0 =============== end ===============", "reqId = 0 =============== end ===============", "reqId = 0 =============== end ===============");
      EWrapperMsgGenerator.nextValidId(0);
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, "updateAccountValue: reqId = 0 =============== end =============== updateAccountTime: reqId = 0 =============== end =============== reqId = 0 =============== end =============== reqId = 0 =============== end ===============", (String) null, 170, (String) null, "", 0, (String) null, "", (String) null, "hs/sA", (String) null, "", (String) null, (String) null);
      EWrapperMsgGenerator.bondContractDetails(170, contractDetails0);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData(0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSize(6096, 13, (-1849));
      assertEquals("id=6096  modelOptComp=-1849", string0);
      
      String string1 = EWrapperMsgGenerator.updateMktDepth(0, 13, (-2184), 13, 0.0, (-1849));
      assertEquals("updateMktDepth: 0 13 -2184 13 0.0 -1849", string1);
      
      String string2 = EWrapperMsgGenerator.managedAccounts("vJ8K'j2)PPSlI%sGv");
      assertEquals("Connected : The list of managed accounts are : [vJ8K'j2)PPSlI%sGv]", string2);
      
      String string3 = EWrapperMsgGenerator.updateAccountTime(" status=");
      assertEquals("updateAccountTime:  status=", string3);
      
      String string4 = EWrapperMsgGenerator.tickOptionComputation(0, (-1798), 0, (-2184), 6096, (-1798));
      assertEquals("id=0  unknown: vol = 0.0 delta = N/A", string4);
      
      String string5 = EWrapperMsgGenerator.receiveFA(0, "id=0  unknown: vol = 0.0 delta = N/A");
      assertEquals("FA: null id=0  unknown: vol = 0.0 delta = N/A", string5);
      
      String string6 = EWrapperMsgGenerator.accountDownloadEnd("6kI_xFGvbb:d");
      assertEquals("accountDownloadEnd: 6kI_xFGvbb:d", string6);
      
      String string7 = EWrapperMsgGenerator.updateMktDepth(3896, 0, 0, 3896, (-2184), (-1));
      assertEquals("updateMktDepth: 3896 0 0 3896 -2184.0 -1", string7);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice(98, (-4313), 98, 0);
      assertEquals("id=98  unknown=98.0  noAutoExecute", string0);
      
      String string1 = EWrapperMsgGenerator.execDetailsEnd(0);
      assertEquals("reqId = 0 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.tickEFP(99, 2885, 99, "uH('- J+lG2`bE_Uix_", 1.0, 0, "reqId = 0 =============== end ===============", 99, (-4313));
      assertEquals("id=99  unknown: basisPoints = 99.0/uH('- J+lG2`bE_Uix_ impliedFuture = 1.0 holdDays = 0 futureExpiry = reqId = 0 =============== end =============== dividendImpact = 99.0 dividends to expiry = -4313.0", string2);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 2035, 2092.094002, 2035, (-170.8514145), 10.0);
      assertEquals("id=0  unknown: vol = 2092.094002 delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.updateAccountTime("W2tETJIw\"qFubx;2");
      assertEquals("updateAccountTime: W2tETJIw\"qFubx;2", string1);
      
      String string2 = EWrapperMsgGenerator.tickOptionComputation((-1386), 13, (-144.93783022780372), 1672.9661403688497, 814.6071, 2464.1);
      assertEquals("id=-1386  modelOptComp: vol = N/A delta = N/A: modelPrice = 814.6071: pvDividend = 2464.1", string2);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.37677016125643675
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, (-192), 381.8499782874512, 4894.61319, 1494.614020812, 0);
      assertEquals("id=13  unknown: vol = 381.8499782874512 delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.updateAccountTime("id=13  unknown: vol = 381.8499782874512 delta = N/A");
      assertEquals("updateAccountTime: id=13  unknown: vol = 381.8499782874512 delta = N/A", string1);
      
      String string2 = EWrapperMsgGenerator.tickOptionComputation((-2478), 13, (-170.8514145), (-537.39133), (-2478), 1.0);
      assertEquals("id=-2478  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = 1.0", string2);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(2147044993, 0, 2147044993, (-1046.0), (-5881.66537160094), 2147044993);
      assertEquals("id=2147044993  bidSize: vol = 2.147044993E9 delta = N/A", string0);
      
      System.setCurrentTimeMillis((-777L));
      System.setCurrentTimeMillis((-4197L));
      System.setCurrentTimeMillis(2147044993);
      String string1 = EWrapperMsgGenerator.tickOptionComputation(2147044993, 2147044993, 274.402732396, (-4197L), 0, 2147044993);
      assertEquals("id=2147044993  unknown: vol = 274.402732396 delta = N/A", string1);
      
      Contract contract0 = new Contract();
      Order order0 = new Order();
      contract0.m_localSymbol = null;
      Object object0 = new Object();
      contract0.equals(object0);
      OrderState orderState0 = new OrderState(")~", "right = ", "", "Zl1h`&oY^FS?GKa&w=c", 2201.4, 1.7976931348623157E308, 0.0, "0RE", "OptionCallVolume");
      orderState0.m_commission = 1.7976931348623157E308;
      EWrapperMsgGenerator.openOrder(2146141585, contract0, order0, orderState0);
      String string2 = EWrapperMsgGenerator.tickOptionComputation(4220, Integer.MAX_VALUE, 1.7976931348623157E308, (-1092.0), 3211.156, (-1684.925));
      assertEquals("id=4220  unknown: vol = N/A delta = N/A", string2);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 2035, 2092.094002, 2035, (-170.8514145), 2092.094002);
      assertEquals("id=0  unknown: vol = 2092.094002 delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.updateAccountTime("W2tETJIw\"qFubx;2");
      assertEquals("updateAccountTime: W2tETJIw\"qFubx;2", string1);
      
      String string2 = EWrapperMsgGenerator.tickOptionComputation((-1385), 13, (-144.93783022780372), 1672.9661403688497, 814.6071, (-1385));
      assertEquals("id=-1385  modelOptComp: vol = N/A delta = N/A: modelPrice = 814.6071: pvDividend = N/A", string2);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(0, 2035, 0, 2035, (-170.8514145), 0);
      EWrapperMsgGenerator.tickOptionComputation((-1386), 13, (-144.93783022780372), 1672.9661403688497, 814.6071, 2464.1);
      Vector<Integer> vector0 = new Vector<Integer>();
      Contract contract0 = new Contract(2035, "id=-1386  modelOptComp: vol = N/A delta = N/A: modelPrice = 814.6071: pvDividend = 2464.1", "dDvY7'", "OptionCallOpenInterest", 1672.9661403688497, "`)5_,o", "  It does not support notHeld parameter.", "r]>c;ir+^", " triggerMethod=", "id=-228  bidExch: vol = 1.0 delta = N/A", vector0, "ZSZ#jCD", true, "FEbuKdL59$A", "  It does not support notHeld parameter.");
      Order order0 = new Order();
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      OrderState orderState0 = new OrderState();
      OrderState orderState1 = new OrderState();
      Order order1 = new Order();
      EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract0, order1, orderState1);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(2146664621, 0, 2037, (-145.78117109363), 2146664621, 2035);
      EWrapperMsgGenerator.tickOptionComputation(2146664621, 13, (-1.0), 2037, 1.7976931348623157E308, 1.0);
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(36, "  It does not support options exercise from the API.", "  It does not support options exercise from the API.", "DR_ ", 1.7976931348623157E308, "ALIASES", "DR_ ", "ALIASES", "DR_ ", "  It does not support options exercise from the API.", vector0, "ALIASES", true, "%6@~2pycC", "id=2146664621  bidSize: vol = 2037.0 delta = N/A");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState((String) null, (String) null, (String) null, "VOL", 5212.5, 0, 0.0, "ALIASES", "id=0  unknown: vol = 0.0 delta = N/A");
      EWrapperMsgGenerator.openOrder(2035, contract0, order0, orderState0);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(8, (-1351), 1216.24904271406, 1216.24904271406, 8, (-1.0));
      EWrapperMsgGenerator.tickOptionComputation(13, 13, (-1351), (-1.0), 8, 1.7976931348623157E308);
      System.setCurrentTimeMillis((-1351));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract((-1541), "s*-0gT0o\"I>X/0$h*P", "s*-0gT0o\"I>X/0$h*P", "s*-0gT0o\"I>X/0$h*P", (-1541), "s*-0gT0o\"I>X/0$h*P", "s*-0gT0o\"I>X/0$h*P", "s*-0gT0o\"I>X/0$h*P", "s*-0gT0o\"I>X/0$h*P", "s*-0gT0o\"I>X/0$h*P", vector0, "s*-0gT0o\"I>X/0$h*P", true, "s*-0gT0o\"I>X/0$h*P", "s*-0gT0o\"I>X/0$h*P");
      Order order0 = new Order();
      vector0.add((Object) contract0);
      order0.m_stockRangeUpper = 1383.0;
      OrderState orderState0 = new OrderState((String) null, "s*-0gT0o\"I>X/0$h*P", "lEk[Jv", "O", 1.7976931348623157E308, 1, 0.0, "s*-0gT0o\"I>X/0$h*P", "s*-0gT0o\"I>X/0$h*P");
      EWrapperMsgGenerator.openOrder(1, contract0, order0, orderState0);
      OrderState orderState1 = new OrderState("lowEFP", "", (String) null, "lowEFP", 855.815, 1.7976931348623157E308, 1863.5448204390982, "s*-0gT0o\"I>X/0$h*P", (String) null);
      Order order1 = new Order();
      order1.m_algoStrategy = "Vkr~fZ^9<wf#Sr[?";
      EWrapperMsgGenerator.openOrder(0, contract0, order1, orderState1);
      EWrapperMsgGenerator.tickOptionComputation(2144814099, 34, 0, 5212.5, 0, 0);
      System.setCurrentTimeMillis(2937L);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      System.setCurrentTimeMillis((-1541));
      Vector<Integer> vector0 = new Vector<Integer>();
      Contract contract0 = new Contract((-1541), "_;wj-", "VOL", "_;wj-", 0.0, "}8 rv", "s*-0gT0o\"I>X/0$h*P", " exchange=", " exchange=", "W1CFgA%zZb#K,^", vector0, "W1CFgA%zZb#K,^", false, "W1CFgA%zZb#K,^", "_;wj-");
      OrderState orderState0 = new OrderState();
      orderState0.equals((Object) null);
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      EWrapperMsgGenerator.openOrder('c', contract0, order0, orderState0);
      orderState0.m_minCommission = (double) 0;
      Contract contract1 = new Contract((-3209), ".g%3NX~lg)Vjn", "BAG", "s*-0gT0o\"I>X/0$h*P", 1259.0242783, (String) null, "O", "}8 rv", "iJJaa(p@7|t<gVXqh\"", (String) null, (Vector) null, ".", true, "c@(:}", ".g%3NX~lg)Vjn");
      EWrapperMsgGenerator.openOrder(1, contract1, order0, orderState0);
      String string1 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      assertTrue(string1.equals((Object)string0));
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Contract contract0 = new Contract((-1541), "s*-0gT0o\"I>X/0$h*P", "s*-0gT0o\"I>X/0$h*P", "s*-0gT0o\"I>X/0$h*P", 0.0, "}8 rv", "s*-0gT0o\"I>X/0$h*P", "s*-0gT0o\"I>X/0$h*P", "s*-0gT0o\"I>X/0$h*P", "W1CFgA%zZb#K,^", vector0, "W1CFgA%zZb#K,^", false, "W1CFgA%zZb#K,^", "s*-0gT0o\"I>X/0$h*P");
      vector0.add((Integer) (-1541));
      OrderState orderState0 = new OrderState();
      orderState0.equals((Object) null);
      Order order0 = new Order();
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      EWrapperMsgGenerator.openOrder('c', contract0, order0, orderState0);
      orderState0.m_minCommission = (double) 0;
      order0.m_parentId = (-1541);
      order0.m_basisPoints = (double) (-1541);
      Contract contract1 = new Contract((-3209), (String) null, "BAG", "s*-0gT0o\"I>X/0$h*P", Integer.MAX_VALUE, (String) null, "O", "}8 rv", (String) null, (String) null, (Vector) null, ".", true, "c@(:}", (String) null);
      contract1.m_exchange = "";
      EWrapperMsgGenerator.openOrder(1, contract1, order0, orderState0);
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      contract0.clone();
      System.setCurrentTimeMillis(Integer.MAX_VALUE);
      System.setCurrentTimeMillis(0);
      orderState0.m_warningText = "w+z=@;+YFCX!z[m7x6";
      String string0 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      System.setCurrentTimeMillis((-629L));
      String string1 = EWrapperMsgGenerator.openOrder(2, contract1, order0, orderState0);
      assertFalse(string1.equals((Object)string0));
  }
}
