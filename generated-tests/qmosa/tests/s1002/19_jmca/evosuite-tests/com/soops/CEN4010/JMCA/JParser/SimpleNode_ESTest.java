/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 10:19:13 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.PipedInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(23);
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtAddChild((Node) null, 10);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-543));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -543
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(61);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 61);
      SimpleNode simpleNode1 = new SimpleNode(61);
      simpleNode0.parent = (Node) simpleNode1;
      Node[] nodeArray0 = new Node[8];
      simpleNode0.toString("4:F");
      SimpleNode simpleNode2 = new SimpleNode(1461);
      simpleNode0.jjtSetParent(simpleNode2);
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      try { 
        javaParser0.FieldDeclaration(1461);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1553));
      simpleNode0.jjtGetNumChildren();
      simpleNode0.setIdentifier((String) null);
      Node node0 = simpleNode0.parent;
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = null;
      nodeArray0[1] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = null;
      nodeArray0[4] = null;
      nodeArray0[5] = null;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      nodeArray0[8] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.parent = null;
      simpleNode0.jjtAddChild((Node) null, 74);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtClose();
      simpleNode0.jjtClose();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-329));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -329
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.id = 0;
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.jjtClose();
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter(0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'P';
      charArray0[1] = '{';
      charArray0[2] = 'C';
      charArray0[3] = 'm';
      charArray0[4] = '#';
      charArray0[5] = '7';
      charArray0[6] = '(';
      charArray0[7] = 'Q';
      charArray0[8] = 'f';
      stringWriter0.write(charArray0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "", 0, 0);
      char[] charArray1 = new char[0];
      stringWriter1.flush();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray1);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) charBuffer0);
      simpleNode0.dump("", stringWriter2);
      assertEquals("P{Cm#7(Qf<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
      assertEquals("P{Cm#7(Qf<CompilationUnit>\n</CompilationUnit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2102535776209735
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("*lt", stringWriter0);
      javaParserTokenManager0.defaultLexState = 0;
      simpleNode0.jjtOpen();
      String string0 = "";
      simpleNode0.toString();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "*lt");
      stringWriter1.append('4');
      simpleNode0.dump("", stringWriter1);
      javaParserTokenManager0.jjmatchedKind = (-565);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.dump("$", stringWriter2);
      simpleNode0.jjtClose();
      simpleNode0.jjtSetParent((Node) null);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-2184));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2184
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8369882167858358
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("_");
      simpleNode0.jjtGetParent();
      SimpleNode simpleNode1 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
      simpleNode1.dump("", stringWriter0);
      simpleNode1.dump("H_TIzeza],_Giue1$", stringWriter1);
      simpleNode1.dump("H_TIzeza],_Giue1$", stringWriter1);
      simpleNode0.dump("H_TIzeza],_Giue1$", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>_</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5990147122062977
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("*lt", stringWriter0);
      javaParserTokenManager0.defaultLexState = 0;
      simpleNode0.jjtOpen();
      String string0 = "";
      simpleNode0.toString();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "*lt");
      stringWriter1.append('4');
      simpleNode0.dump("", stringWriter1);
      javaParserTokenManager0.jjmatchedKind = (-605);
      simpleNode0.jjtGetParent();
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.dump("$", stringWriter2);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9017412329512398
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&");
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("&");
      simpleNode0.jjtGetParent();
      SimpleNode simpleNode1 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
      simpleNode1.jjtGetParent();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      simpleNode1.jjtGetParent();
      simpleNode1.jjtAddChild((Node) null, 0);
      simpleNode1.jjtGetNumChildren();
      simpleNode0.dump("&", stringWriter0);
      simpleNode1.dump("}", stringWriter1);
      simpleNode0.dump((String) null, stringWriter1);
      simpleNode0.dump("&", stringWriter0);
      StringWriter stringWriter2 = stringWriter0.append('s');
      simpleNode1.dump("Literal", stringWriter2);
      assertEquals(1, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6096274235960984
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&");
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("_");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(8);
      simpleNode0.dump("TypeDeclaration", stringWriter1);
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) "TypeDeclaration");
      StringReader stringReader0 = new StringReader("TypeDeclaration");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-1723201389));
      simpleNode0.dump("", stringWriter1);
      simpleNode0.setIdentifier("<=");
      simpleNode0.dump("<=", stringWriter2);
      simpleNode1.dump("&", (Writer) null);
      simpleNode0.dump((String) null, stringWriter2);
      assertEquals("TypeDeclaration<EnumConstant>\n  <identifier>_</identifier>\n  <identifier>*le</identifier>\n</EnumConstant>\n<EnumConstant>\n  <identifier>_</identifier>\n  <identifier>*le</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1063911301690834
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "this");
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("-");
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      SimpleNode simpleNode1 = new SimpleNode(10);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "&");
      StringReader stringReader0 = new StringReader("this");
      StringReader stringReader1 = new StringReader("-");
      JavaParser javaParser0 = new JavaParser(stringReader1);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 109);
      simpleNode2.dump("-", stringWriter0);
      simpleNode0.toString("");
      simpleNode0.setIdentifier("&&");
      simpleNode0.dump("&", stringWriter1);
      SimpleNode simpleNode3 = new SimpleNode(604);
      String string0 = "interface";
      simpleNode3.jjtAddChild((Node) null, 1);
      StringWriter stringWriter2 = new StringWriter(1371);
      // Undeclared exception!
      try { 
        simpleNode3.dump("interface", stringWriter2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 604
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9017412329512398
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&");
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("_");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(8);
      simpleNode0.dump("TypeDeclaration", stringWriter1);
      StringReader stringReader0 = new StringReader("TypeDeclaration");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "TypeDeclaration");
      StringReader stringReader1 = new StringReader("02zrj;8+XHYV8eL@H&V");
      JavaParser javaParser1 = new JavaParser(stringReader0);
      JavaParser javaParser2 = new JavaParser("TypeDeclaration");
      SimpleNode simpleNode1 = new SimpleNode(javaParser2, 10);
      simpleNode0.dump("5%Jnbl`mXmug#*C:!", stringWriter2);
      stringWriter2.append(' ');
      simpleNode0.toString("");
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump("_", stringWriter1);
      simpleNode1.dump("<=", stringWriter2);
      simpleNode1.dump("TypeDeclaration", stringWriter2);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 1371);
      simpleNode2.dump("TypeDeclaration", (Writer) null);
      assertFalse(simpleNode2.equals((Object)simpleNode0));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.349792396172401
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J");
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("J");
      StringWriter stringWriter0 = new StringWriter(8);
      simpleNode0.dump("PrimaryPrefix", stringWriter0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "J");
      StringReader stringReader0 = new StringReader("ConditionalOrExpression");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 8);
      simpleNode0.dump("PrimaryPrefix", stringWriter0);
      String string0 = null;
      simpleNode0.toString((String) null);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter2 = new StringWriter(8);
      simpleNode0.dump("!mI6Hd2+pXij >@!Jq", stringWriter2);
      simpleNode0.dump("nullCompilationUnit : J", stringWriter0);
      String string1 = "`5MN.~";
      // Undeclared exception!
      try { 
        stringWriter1.append((CharSequence) "J", 4, 4);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
