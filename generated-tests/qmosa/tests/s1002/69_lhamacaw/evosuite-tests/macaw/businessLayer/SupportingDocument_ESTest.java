/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 09:57:20 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SupportingDocument_ESTest extends SupportingDocument_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("");
      supportingDocument0.getDisplayName();
      supportingDocument0.getDisplayName();
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setTitle("-");
      supportingDocument0.getTitle();
      supportingDocument0.getFilePath();
      supportingDocument0.setIdentifier((-2130));
      supportingDocument0.setIdentifier((-377));
      supportingDocument0.clone();
      supportingDocument0.isNewRecord();
      supportingDocument0.getFilePath();
      supportingDocument0.getTitle();
      supportingDocument0.isNewRecord();
      supportingDocument0.setDocumentCode("");
      supportingDocument0.setTitle("-");
      supportingDocument0.clone();
      assertEquals((-377), supportingDocument0.getIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getIdentifier();
      supportingDocument0.getDescription();
      User user0 = new User("@", (String) null);
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      assertTrue(arrayList0.isEmpty());
      
      supportingDocument0.setIdentifier(0);
      String string0 = supportingDocument0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      supportingDocument0.setFileName("UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      supportingDocument0.getFilePath();
      supportingDocument0.getDocumentCode();
      assertEquals(0, supportingDocument0.getIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4433056711089143
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("UNABLE_TO_GET_ORIGINAL_ONTOLOGY_TERM");
      int int0 = supportingDocument0.getIdentifier();
      assertEquals(0, int0);
      
      supportingDocument0.getFileName();
      supportingDocument0.getDisplayItemIdentifier();
      boolean boolean0 = supportingDocument0.isNewRecord();
      assertFalse(boolean0);
      
      User user0 = new User("[rP>/b(U'", "X^wIt6`H-(v_p97N~");
      user0.setEmail("x43Z,C");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      assertEquals(1, arrayList0.size());
      
      supportingDocument1.setDescription("x43Z,C");
      supportingDocument0.setDocumentCode("V");
      supportingDocument0.getFilePath();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      String string0 = supportingDocument2.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      supportingDocument1.setTitle("");
      assertEquals(0, supportingDocument1.getIdentifier());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("C8];jiBmoj!(Ren");
      supportingDocument0.setDocumentCode("C8];jiBmoj!(Ren");
      String string0 = ">o,ZRNMV/L]";
      supportingDocument0.setDocumentCode("=$,.\"m/+");
      supportingDocument0.setFileName((String) null);
      supportingDocument0.getIdentifier();
      supportingDocument0.getDisplayName();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("C8];jiBmoj!(Ren");
      supportingDocument0.getDocumentCode();
      supportingDocument0.getDescription();
      String string1 = null;
      User user0 = new User("C8];jiBmoj!(Ren-=$,.\"m/+", "=$,.\"m/+");
      supportingDocument1.setDocumentCode("R7O:U}");
      user0.setEmail(">o,ZRNMV/L]");
      // Undeclared exception!
      try { 
        SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.610496703540146
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setDocumentCode("Bl");
      supportingDocument0.setDocumentCode(">o,ZRNMV/L]");
      supportingDocument0.getDisplayName();
      supportingDocument0.setFileName("~}b{?; _a.++-KLz@X");
      supportingDocument0.getIdentifier();
      supportingDocument0.getDisplayName();
      User user0 = new User();
      user0.setStatus("Bl");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setTitle("~}b{?; _a.++-KLz@X");
      supportingDocument0.setTitle("user.password.saveChanges");
      SupportingDocument.validateFields(supportingDocument0);
      supportingDocument0.setFileName("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIsNewRecord(false);
      supportingDocument1.clone();
      supportingDocument1.getFileName();
      supportingDocument0.setFileName("O9y*4fvr{/vDT;J");
      supportingDocument0.setFilePath("|");
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3756465481342484
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("");
      supportingDocument0.setIsNewRecord(false);
      String string0 = "e/:M?";
      supportingDocument0.setDescription("e/:M?");
      supportingDocument0.setDocumentCode("e/:M?");
      supportingDocument0.getDisplayName();
      supportingDocument0.setDocumentCode("UNABLE_TO_UPDATE_ALIAS_FILE_PATH");
      supportingDocument0.getDocumentCode();
      supportingDocument0.getDescription();
      User user0 = new User("Fz77;~t6XpE", "e/:M?");
      user0.setEmail("wJ2tO),z\"kprb");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }
}
