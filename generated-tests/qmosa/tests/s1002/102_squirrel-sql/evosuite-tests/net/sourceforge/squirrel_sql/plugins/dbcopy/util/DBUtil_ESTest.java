/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 08:47:47 GMT 2018
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfoUpdateListener;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.ProcedureInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverProperty;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBUtil.getLastStatement();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBUtil.convertTableToObjectList(arrayList0);
      String string0 = "replaceOtherDataType: unexpected exception - ";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "{LXb=;x#1yr)@zuLE", (-15), (String) null, (-15), 2743, 2743, 2743, "{LXb=;x#1yr)@zuLE", "{LXb=;x#1yr)@zuLE", (-15), 0, "replaceOtherDataType: unexpected exception - ");
      DBUtil.isBinaryType(tableColumnInfo0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[9];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[4] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[5] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[6] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[7] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[8] = (IDatabaseObjectInfo) tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "Am>7G]Fz^O");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "r/G]OBDN<S)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBUtil.setLastStatement("\n");
      DBUtil.getLastStatementValues();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceDatabaseObjects();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "6L X.:zA6VoQ";
      DBUtil.setLastStatementValues("6L X.:zA6VoQ");
      String string1 = "(3";
      String string2 = "eE?";
      String string3 = "W#U!";
      int int0 = 32000;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        dBCopyPlugin0.sessionEnding((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 7;
      int int1 = 0;
      DBUtil.typesAreEquivalent(7, 0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[8];
      String string0 = "net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil";
      String string1 = "DB4:Ua,roB]YjT";
      int int2 = 0;
      int int3 = 1893;
      int int4 = 2004;
      String string2 = "7N~[(OK+=1[T";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", "net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", "net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", "DB4:Ua,roB]YjT", 7, "DB4:Ua,roB]YjT", 0, 0, 7, 1893, "", "DB4:Ua,roB]YjT", 2004, 1893, "7N~[(OK+=1[T");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      String string3 = "DBUtil.getTableInfo: found ";
      String string4 = "E(b026pX;|I";
      String string5 = "]z`m\"e5XvAOdOsB*Y";
      int int5 = 2698;
      String string6 = "gD";
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = null;
      try {
        sQLConnection0 = new SQLConnection((Connection) null, sQLDriverPropertyCollection0, sQLDriver0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLConnection == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLConnection", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.fixCase((ISession) null, (String) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      String string0 = "";
      dBCopyPlugin1.getWebSite();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, (String) null, ")+> r|Ey");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = ">Ql[";
      String string1 = "|d-l_(-nn,p";
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      int int0 = 32000;
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, ">Ql[", "|d-l_(-nn,p", ">Ql[", 32000);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      SessionInfoProvider sessionInfoProvider0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "o>8jl!>", "o>8jl!>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setDelayBetweenObjects(true);
      dBCopyPreferenceBean0.setPromptForDialect(true);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(true);
      String string0 = "\t";
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      SchemaInfoUpdateListener schemaInfoUpdateListener0 = mock(SchemaInfoUpdateListener.class, new ViolatedAssumptionAnswer());
      schemaInfo0.removeSchemaInfoUpdateListener(schemaInfoUpdateListener0);
      TableColumnInfo tableColumnInfo0 = null;
      try {
        tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", 0, "", 7, 92, 0, 4, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "\t", 0, 910, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBUtil.getLastStatement();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBUtil.convertTableToObjectList(arrayList0);
      String string0 = "replaceOtherDataType: unexpected exception - ";
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[9];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      DBUtil.convertObjectToTableList(arrayList0);
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "), add constraint ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBUtil.typesAreEquivalent((-7), 0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[8];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", "net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", "net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", "DB4:Ua,roB]YjT", (-7), "DB4:Ua,roB]YjT", 0, 0, (-7), 1893, "", "DB4:Ua,roB]YjT", 2004, 1893, "7N~[(OK+=1[T");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = null;
      try {
        sQLConnection0 = new SQLConnection((Connection) null, sQLDriverPropertyCollection0, sQLDriver0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLConnection == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLConnection", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBUtil.getLastStatement();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBUtil.convertTableToObjectList(arrayList0);
      String string0 = "{LXb=;x#1yr)@zuLE";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "{LXb=;x#1yr)@zuLE", (-15), (String) null, (-15), 2743, 2743, 2743, "{LXb=;x#1yr)@zuLE", "{LXb=;x#1yr)@zuLE", (-15), 0, "{LXb=;x#1yr)@zuLE");
      DBUtil.isBinaryType(tableColumnInfo0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[9];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) tableColumnInfo0;
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.typesAreEquivalent(1453, 1453);
      String string0 = "Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ";
      SQLDatabaseMetaData sQLDatabaseMetaData0 = null;
      ProcedureInfo procedureInfo0 = null;
      try {
        procedureInfo0 = new ProcedureInfo("O\u0006VFFV]$<`].p", "Encountered unexpected exception while attempting to determine if schemas are used in table definitions", "Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ", "", 1453, (SQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBUtil.getLastStatement();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBUtil.convertTableToObjectList(arrayList0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "{LXb=;x#1yr)@zuLE", (-15), (String) null, (-15), 2743, 2743, 2743, "{LXb=;x#1yr)@zuLE", "{LXb=;x#1yr)@zuLE", (-15), 0, "replaceOtherDataType: unexpected exception - ");
      DBUtil.isBinaryType(tableColumnInfo0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[9];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) tableColumnInfo0;
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      iDatabaseObjectInfoArray0[4] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[5] = (IDatabaseObjectInfo) tableColumnInfo0;
      DBUtil.getLastStatement();
      DBUtil.typesAreEquivalent(92, 0);
      String string0 = DBUtil.getSchemaNameFromDbObject(iDatabaseObjectInfoArray0[4]);
      assertNull(string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBUtil.getLastStatement();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBUtil.convertTableToObjectList(arrayList0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("{LXb=;x#1yr)@zuLE", (String) null, (String) null, "PQS+k;", (-3), (String) null, (-5), (-3), (-15), 2743, "{LXb=;x#1yr)@zuLE", "PQS+k;", 16, (-5), "\".M9ucFx1}");
      DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      String string0 = "^\\u`)\\<B_-N";
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("", ")aq }c-wV4HE", ")aq }c-wV4HE", "CREATE TABLE ", 16, (String) null, 746, 152, 1453, 16, ")aq }c-wV4HE", string0, 746, 2743, string0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(61, tableColumnInfo1, (ISession) null);
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, ")aq }c-wV4HE");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBUtil.getLastStatement();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBUtil.convertTableToObjectList(arrayList0);
      String string0 = "PQS+k;";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("{LXb=;x#1yr)@zuLE", (String) null, (String) null, "PQS+k;", 22, (String) null, (-5), 22, (-5), 2743, "{LXb=;x#1yr)@zuLE", "PQS+k;", 16, (-5), "\".M9ucFx1}");
      DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      String string1 = "^\\u`)\\<B_-N";
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("", "", "", "CREATE TABLE ", 16, (String) null, 746, 152, 1453, 16, "", string1, 746, 2743, string1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string2 = "{~*.F;IJ";
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "w#-Gc)uN/", "{~*.F;IJ", "w#-Gc)uN/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DBUtil.getLastStatement();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBUtil.convertTableToObjectList(arrayList0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "{LXb=;x#1yr)@zuLE", (-15), (String) null, (-15), (-15), (-15), (-15), "{LXb=;x#1yr)@zuLE", "{LXb=;x#1yr)@zuLE", (-15), 0, "replaceOtherDataType: unexpected exception - ");
      DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      DBUtil.getLastStatement();
      DBUtil.typesAreEquivalent(595, 0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "E#>923tx1{q(", "org.apache.log4j.Category");
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "org.apache.log4j.Category", (ITableInfo) null, (-1214));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBUtil.getLastStatement();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Object[] objectArray0 = new Object[0];
      arrayList0.add((ITableInfo) null);
      arrayList0.toArray(objectArray0);
      DBUtil.convertTableToObjectList(arrayList0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[9];
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, (String) null, "<J,5m+X2Vp");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1269287948006759
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBUtil.getLastStatement();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBUtil.convertTableToObjectList(arrayList0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("{LXb=;x#1yr)@zuLE", (String) null, (String) null, "PQS+k;", (-3), (String) null, (-5), (-3), (-15), 2743, "{LXb=;x#1yr)@zuLE", "PQS+k;", 16, (-5), "\".M9ucFx1}");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TRIGGER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean1 = DBUtil.typesAreEquivalent((-7), 16);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("r/G]OBpDN<S)", "r/G]OBpDN<S)", "r/G]OBpDN<S)", "replaceOtherDataType: unexpected exception - ", (-4), "/.C_ZrZc;", (-599), 23503, 34, 4192, " ", "r/G]OBpDN<S)", (-15), 4192, "Ih@#G<eus(==P-AO");
      DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      DBUtil.getLastStatement();
      DBUtil.typesAreEquivalent(92, (-4));
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("r/G]OBpDN<S)", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBUtil.getLastStatement();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBUtil.convertTableToObjectList(arrayList0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.fixCase((ISession) null, "");
      String string0 = "/h`<OUZI$";
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "/h`<OUZI$", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = 1453;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Unexpected exception while attempting to determine if a table (");
      DBUtil.typesAreEquivalent(2, 1453);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      String string0 = "^d~?7b&mA7";
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "^d~?7b&mA7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("vZHQtRt+K.cIQ/[", "insert into ", "momm", "", (-4012), "", (-4012), 2495, (-4012), (-4012), "", "", (-4012), (-4012), "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATATYPE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[7];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("index", "momm", (String) null, "r/G]OBDN<S)", 2495, "ii5", (-1039), (-4012), 2495, 2495, "", "Qo", (-251), 1800, "\"?P9'2v0zd5 8h.");
      tableColumnInfoArray0[5] = tableColumnInfo1;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals(", , , , , r/G]OBDN<S), ", string0);
      
      TableColumnInfo tableColumnInfo2 = new TableColumnInfo("", "vZHQtRt+K.cIQ/[", "r/G]OBpDN<S)", (String) null, 102, "momm", (-3), (-4012), 102, (-4012), (String) null, "E<+aTCI-", (-4012), 102, "vZHQtRt+K.cIQ/[");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(2846, tableColumnInfo0, (ISession) null);
      assertEquals(2846, int0);
      
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      int int1 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-4012), int1);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, " CASCADE", "My");
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1935496040981333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DBUtil.getLastStatement();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBUtil.convertTableToObjectList(arrayList0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("{LXb=;x#1yr)@zuLE", (String) null, (String) null, "PQS+k;", (-3), (String) null, (-5), (-3), (-15), 2743, "{LXb=;x#1yr)@zuLE", "PQS+k;", 16, (-5), "\".M9ucFx1}");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TRIGGER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean1 = DBUtil.typesAreEquivalent(16, 16);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DBUtil.getLastStatementValues();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Object[] objectArray0 = new Object[0];
      arrayList0.toArray(objectArray0);
      DBUtil.convertTableToObjectList(arrayList0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "{LXb=;x#1yr)@zuLE", (-15), (String) null, (-15), 2743, 2743, 2743, "{LXb=;x#1yr)@zuLE", "{LXb=;x#1yr)@zuLE", (-15), 0, "replaceOtherDataType: unexpected exception - ");
      DBUtil.isBinaryType(tableColumnInfo0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[9];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) tableColumnInfo0;
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo((String) null, "QtZ@_VK<", (String) null, "r/G]OBDN<S)", 0, "replaceOtherDataType: unexpected exception - ", (-15), 2743, (-15), 2743, "[j%di:\"Y.;", "DBUtil.info.bindbloblength", 1404, 1404, "QtZ@_VK<");
      DBUtil.isBinaryType(tableColumnInfo1);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TRIGGER;
      DBUtil.getLastStatement();
      DBUtil.typesAreEquivalent(1404, 930);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e!${D:S))L3");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(iDatabaseObjectInfoArray0[0], schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = 2846;
      int int1 = (-1);
      int int2 = (-1248);
      String string0 = "&.J)CY6_";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("r", (String) null, (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2543, "Nf(i8aF&7'z9J\b{8+", (-1), 2001, 2846, (-1248), "Nf(i8aF&7'z9J\b{8+", "&.J)CY6_", 2846, 5, "@b{13j.");
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      arrayList0.add((ITableInfo) null);
      arrayList0.add((ITableInfo) null);
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      assertEquals("license.txt", dBCopyPlugin0.getLicenceFileName());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DBUtil.getLastStatement();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBUtil.convertTableToObjectList(arrayList0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("{LXb=;x#1yr)@zuLE", (String) null, (String) null, "PQS+k;", (-3), (String) null, (-5), (-3), (-15), 2743, "{LXb=;x#1yr)@zuLE", "PQS+k;", 16, (-5), "\".M9ucFx1}");
      DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBUtil.getLastStatementValues();
      DBUtil.isBinaryType(tableColumnInfo0);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "wT2? _.B%]Q}!", "momm");
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 986);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("!O;R", "{uKWMou1c--OO", "replaceOtherDataType: unexpected exception - ", "{uKWMou1c--OO", 1111, (String) null, Integer.MAX_VALUE, 5, 5, 2147000000, "replaceOtherDataType: unexpected exception - ", "N\"SZI3k$1TP", 1758, 2966, "(_X%&J8n,7^/_qR");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      DBUtil.replaceDistinctDataType(Integer.MAX_VALUE, tableColumnInfo0, (ISession) null);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin1, tableColumnInfo0, "8roKi=3|S1", "N\"SZI3k$1TP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      dBCopyPlugin0.getDestDatabaseObject();
      arrayList0.add((IDatabaseObjectInfo) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "W\".iYM;s#eXyQv}-_ 6", "W\".iYM;s#eXyQv}-_ 6", "W\".iYM;s#eXyQv}-_ 6", (-3277), "W\".iYM;s#eXyQv}-_ 6", 7, 7, 50000, 50000, "W\".iYM;s#eXyQv}-_ 6", "Dialect does not support pooled sequences", 4, (-2394), "W\".iYM;s#eXyQv}-_ 6");
      arrayList0.add((IDatabaseObjectInfo) tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DBUtil.getLastStatement();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Object[] objectArray0 = new Object[0];
      arrayList0.toArray(objectArray0);
      DBUtil.convertTableToObjectList(arrayList0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "{LXb=;x#1yr)@zuLE", (-15), (String) null, (-15), 2743, 2743, 2743, "{LXb=;x#1yr)@zuLE", "{LXb=;x#1yr)@zuLE", (-15), 0, "replaceOtherDataType: unexpected exception - ");
      DBUtil.isBinaryType(tableColumnInfo0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[9];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) tableColumnInfo0;
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      iDatabaseObjectInfoArray0[4] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[5] = (IDatabaseObjectInfo) tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("{LXb=;x#1yr)@zuLE", (String) null, "r/G]OBDN<S)", "{LXb=;x#1yr)@zuLE", 2743, (String) null, 2004, 16, (-15), 2000, "DBUtil.info.executequery", "DBUtil.info.executequery", (-15), 746, "{LXb=;x#1yr)@zuLE");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(2502, tableColumnInfo0, (ISession) null);
      DBUtil.replaceOtherDataType(tableColumnInfo1, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2743, 93, (-92), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.fw.dialects.SQLServerDialectExt", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", "iX]^%oe;<}", 2004, "catalogFilterExclude", 650, 63, (-830), (-691), "[nj$xQc\".S@A>Km", "net.sourceforge.squirrel_sql.fw.dialects.SQLServerDialectExt", (-773), (-448), "catalogFilterExclude");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TRIGGER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      boolean boolean1 = DBUtil.typesAreEquivalent((-7), 2713);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-2), 668, 6, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 70, (-3), (-2), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-3), (-3), (-13), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.getWebSite();
      DBUtil.typesAreEquivalent(2, 2);
      dBCopyPlugin0.getSourceSession();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin0.getSourceSession();
      int int0 = (-2);
      int int1 = 1;
      int int2 = 307;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 1, 307, (-2), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 0, 6, (-2111), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = 4;
      PreparedStatement preparedStatement0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ResultSet resultSet0 = null;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 4, 4, (-13), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      PreparedStatement preparedStatement0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ResultSet resultSet0 = null;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-5), 817, (-5), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = 2000;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2000, 79, 4, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
