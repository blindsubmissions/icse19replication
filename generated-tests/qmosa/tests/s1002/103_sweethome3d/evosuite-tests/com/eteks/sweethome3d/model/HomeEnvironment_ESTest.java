/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 08:36:32 GMT 2018
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-421.5F));
      homeEnvironment0.setPhotoQuality(178);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getLightColor();
      homeEnvironment0.getSkyTexture();
      List<Camera> list1 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list1);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getDrawingMode();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setLightColor(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("w+@WVSI<lM Va<", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoCameraPath(list1);
      homeEnvironment0.setVideoFrameRate(300);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getLightColor();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(300, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(6, (HomeTexture) null, 0, (HomeTexture) null, (-2097), (-2272.9F));
      homeEnvironment0.clone();
      homeEnvironment0.setVideoFrameRate(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      homeEnvironment0.getVideoCameraPath();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("9", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setWallsAlpha(0.0F);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setAllLevelsVisible(false);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      // Undeclared exception!
      try { 
        texturesCategory0.getTexture(33);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 33, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("#jc]WNS^~\"x;Di", (Content) null, 1.0F, (-117.998F));
      CatalogTexture catalogTexture1 = new CatalogTexture("#jc]WNS^~\"x;Di", "", (Content) null, (-1508), 1.0F, "", true);
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1508), homeTexture0, 8192, 8192, (-1508));
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.isAllLevelsVisible();
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertNotNull(homeTexture1);
      
      homeEnvironment0.isAllLevelsVisible();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(8192, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-1508.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-1508), homeEnvironment0.getGroundColor());
      assertEquals(8192, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeTexture homeTexture0 = null;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 3159.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy(".tmp", propertyChangeListener0);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(0, 3159.0F, 3159.0F, 3159.0F, 0, 0.0F, 0, camera_Lens0);
      Camera camera1 = camera0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera1, "LENS", camera0, homeEnvironment1);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setVideoWidth(1487);
      homeEnvironment1.setSubpartSizeUnderLight((-451.60037F));
      homeEnvironment1.setCeillingLightColor(0);
      int int0 = (-958);
      homeEnvironment0.setSkyColor((-958));
      homeEnvironment1.isAllLevelsVisible();
      int int1 = 6;
      homeEnvironment0.setVideoQuality(6);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("o6KN#");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.o6KN#
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment.Property.values();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Y", propertyChangeListener0);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("j{tAI2L!EAD^;ifR#p", "", temporaryURLContent0, 2396.45F, (-1.0F), "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(1135, homeTexture0, 0, 0, 0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "", (Object) null, homeEnvironment3);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("Y", "Y", homeEnvironment_Property0, "Y");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getVideoFrameRate();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      
      homeEnvironment1.getVideoCameraPath();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoFrameRate(505);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setSkyColor(5);
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3693821196946767
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      homeEnvironment1.setSubpartSizeUnderLight((-205.562F));
      homeEnvironment1.setWallsAlpha((-786.371F));
      homeEnvironment1.setGroundColor(3);
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(300, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("|T12R hsL", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      Camera camera0 = new Camera(0.0F, 0.0F, 0.0F, 0.0F, 1.3333334F, 0.0F);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      camera0.setLens(camera_Lens0);
      Camera camera1 = camera0.clone();
      camera1.setY(0.0F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "R^gsm5+B&I)eaI", homeEnvironment1, camera1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("|T12R hsL", "|T12R hsL", homeEnvironment_Property0, "9>vN3)");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setCeillingLightColor(400);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getVideoQuality();
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment0.setWallsAlpha(1.0F);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, (HomeTexture) null, 1, 1, 1);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setGroundColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoWidth(1);
      homeEnvironment1.setAllLevelsVisible(false);
      boolean boolean0 = homeEnvironment1.isObserverCameraElevationAdjusted();
      assertEquals(1, homeEnvironment0.getVideoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, "", object0, "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoQuality(466);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getSkyColor();
      HomeEnvironment.Property.values();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_WIDTH;
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("m;]5k}5OlAL\t1/h", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment0.setSkyColor(13427964);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setVideoWidth(13427964);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoQuality(13427964);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getPhotoQuality();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("m;]5k}5OlAL\t1/h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.m;]5k}5OlAL\t1/h
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getVideoCameraPath();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight(198);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoHeight(471);
      homeEnvironment0.setSubpartSizeUnderLight(198);
      homeEnvironment0.setSkyColor((-1446));
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setPhotoHeight(0);
      assertEquals((-1446), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setGroundColor((-464));
      assertEquals((-464), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.615630577027551
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setPhotoWidth((-1021));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight((-1796));
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setPhotoHeight((-1796));
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, "", propertyChangeListenerProxy0, "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setSkyColor(320);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals((-1021), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setPhotoWidth((-3924));
      homeEnvironment0.setGroundColor((-1842));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-1689));
      homeEnvironment1.setWallsAlpha(0.0F);
      homeEnvironment0.setGroundColor((-51));
      homeEnvironment0.setVideoQuality((-1842));
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      assertEquals((-51), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13, (HomeTexture) null, 13, (HomeTexture) null, 13, 13);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(13);
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment1.getPhotoWidth();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.871476118054867
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment1.setLightColor(15);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setPhotoHeight(2585);
      homeEnvironment1.setVideoWidth(2585);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setCeillingLightColor((-2869));
      homeEnvironment1.getVideoHeight();
      homeEnvironment0.getPhotoHeight();
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, uRLContent0, 300, 923.19F, "IJft");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment1.setSkyTexture(homeTexture0);
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment1.getVideoAspectRatio());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("w~iN`(f=`92cl/qI\"", propertyChangeListener0);
      CatalogTexture catalogTexture0 = new CatalogTexture("w~iN`(f=`92cl/qI\"", (Content) null, 1.0F, (-5053));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-5053), homeTexture0, (-5053), homeTexture0, 15, (-358.8927F));
      homeEnvironment1.clone();
      homeEnvironment1.setVideoWidth((-5053));
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.isAllLevelsVisible();
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      // Undeclared exception!
      try { 
        homeEnvironment1.setGroundTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13, (HomeTexture) null, 13, (HomeTexture) null, 13, 13);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(13);
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setPhotoQuality(13);
      homeEnvironment0.setLightColor((-51));
      AspectRatio aspectRatio0 = homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setGroundColor(247);
      homeEnvironment1.setPhotoQuality(13);
      homeEnvironment0.setWallsAlpha(2.0F);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(13, (HomeTexture) null, (-51), (HomeTexture) null, 13, 247);
      homeEnvironment2.setVideoAspectRatio(aspectRatio0);
      assertEquals(247, homeEnvironment0.getGroundColor());
      assertNotSame(homeEnvironment0, homeEnvironment1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("w~iN`(f=`92cl/qI\"", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(2676);
      homeEnvironment1.setSkyColor(2676);
      homeEnvironment0.setLightColor(2676);
      homeEnvironment1.setPhotoWidth(2676);
      homeEnvironment0.setLightColor(2676);
      homeEnvironment1.setPhotoQuality(2676);
      homeEnvironment1.setLightColor((-463));
      homeEnvironment1.setCeillingLightColor(2676);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.setGroundColor(400);
      homeEnvironment0.setPhotoQuality((-1));
      homeEnvironment0.setWallsAlpha((-463));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals((-1), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.912494403331052
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getPhotoQuality();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getGroundTexture();
      HomeEnvironment.Property.values();
      HomeEnvironment.Property.values();
      homeEnvironment0.setVideoFrameRate(2);
      homeEnvironment0.setPhotoQuality(2);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setVideoQuality(2);
      homeEnvironment0.setVideoFrameRate((-1584));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setPhotoHeight(2);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("0n15J~Z3,4?", propertyChangeListener0);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setCeillingLightColor(2);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setGroundColor(400);
      homeEnvironment0.setPhotoQuality(1694);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setWallsAlpha(0.0F);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment1.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("|T12R hsL", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      Camera camera0 = new Camera(0.0F, 0.0F, 0.0F, 0.0F, 1.3333334F, 0.0F);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      camera0.setLens(camera_Lens0);
      camera0.clone();
      homeEnvironment1.setVideoWidth(883);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Cewts@23tjcP.t3", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setCeillingLightColor(883);
      homeEnvironment1.getVideoHeight();
      homeEnvironment0.getPhotoHeight();
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("IJft", "PHOTO_HEIGHT", uRLContent0, 300, (-2869), "");
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture1);
      homeEnvironment1.getGroundColor();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7516666169315167
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("w~iN`(f=`92cl/qI\"", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(2676);
      homeEnvironment1.setSkyColor(2676);
      homeEnvironment0.setLightColor(2676);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setCeillingLightColor(2676);
      homeEnvironment0.getVideoHeight();
      homeEnvironment1.getPhotoHeight();
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("w~iN`(f=`92cl/qI\"", "w~iN`(f=`92cl/qI\"", uRLContent0, 2676, (-2869), "w~iN`(f=`92cl/qI\"");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      homeEnvironment1.setSkyTexture((HomeTexture) null);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, (HomeTexture) null, 1, 1, 1);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setGroundColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(0);
      homeEnvironment0.setVideoWidth(1);
      URL uRL0 = MockURL.getFtpExample();
      assertNull(uRL0.getQuery());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = 505;
      homeEnvironment0.setVideoFrameRate(505);
      homeEnvironment0.setVideoFrameRate(505);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment0.setPhotoHeight(9);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("0n15J~Z3,4?", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("0n15J~Z3,4?", propertyChangeListenerProxy0);
      String string0 = "GROUND_COLOR";
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = null;
      try {
        propertyChangeEvent0 = new PropertyChangeEvent((Object) null, "lwEk[Jv", "", (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment1.setLightColor(15);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setPhotoWidth(15);
      homeEnvironment1.setGroundColor(15);
      homeEnvironment2.setWallsAlpha(1.5F);
      homeEnvironment0.setSkyColor((-1797));
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment3.setVideoWidth((-1689));
      homeEnvironment2.setWallsAlpha(1.3333334F);
      homeEnvironment0.setGroundColor(14);
      homeEnvironment3.setVideoQuality((-1689));
      homeEnvironment3.setVideoWidth((-1689));
      assertEquals((-1797), homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.7516666169315167
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getPhotoQuality();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getGroundTexture();
      HomeEnvironment.Property.values();
      HomeEnvironment.Property.values();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setGroundColor(400);
      homeEnvironment0.setWallsAlpha(400);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setSkyColor(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setVideoWidth(400);
      URL uRL0 = MockURL.getFtpExample();
      assertNull(uRL0.getQuery());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoFrameRate(505);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getSubpartSizeUnderLight();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(505, (HomeTexture) null, 0, (HomeTexture) null, 0, 0.0F);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("Qf");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.Qf
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.8133554045006157
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getPhotoQuality();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getGroundTexture();
      HomeEnvironment.Property.values();
      HomeEnvironment.Property.values();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setVideoFrameRate(2);
      homeEnvironment0.setPhotoQuality(2);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setVideoQuality(2);
      homeEnvironment0.setVideoFrameRate((-1571));
      homeEnvironment0.setPhotoWidth(400);
      homeEnvironment0.setGroundColor((-1571));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha((-1571));
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-1827), (HomeTexture) null, 400, (HomeTexture) null, 2, 400);
      homeEnvironment2.setSkyColor(2);
      homeEnvironment1.clone();
      homeEnvironment0.setVideoWidth((-2869));
      URL uRL0 = MockURL.getFtpExample();
      assertEquals((-1), uRL0.getDefaultPort());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getPhotoQuality();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getGroundTexture();
      HomeEnvironment.Property.values();
      homeEnvironment0.setGroundColor(0);
      HomeEnvironment.Property.values();
      homeEnvironment0.setVideoFrameRate(2);
      homeEnvironment0.setPhotoQuality(2);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setVideoQuality(2);
      homeEnvironment0.setCeillingLightColor(2);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor(2);
      System.setCurrentTimeMillis(1L);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoWidth(173);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }
}
