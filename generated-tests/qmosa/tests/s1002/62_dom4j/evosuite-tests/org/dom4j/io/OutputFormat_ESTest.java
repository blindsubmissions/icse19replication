/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 10:17:32 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize((-3785));
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.setIndent("lHgmt@Qi");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent("Hoq]Lj");
      assertEquals("Hoq]Lj", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize((-3785));
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndent(true);
      outputFormat0.setPadText(true);
      outputFormat1.setIndent(false);
      outputFormat0.setLineSeparator("");
      outputFormat1.setXHTML(false);
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat1.setXHTML(true);
      outputFormat1.setIndentSize((-3785));
      outputFormat1.getIndent();
      outputFormat1.setTrimText(true);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setOmitEncoding(false);
      outputFormat2.getIndent();
      outputFormat1.setNewLineAfterNTags((-3785));
      assertEquals("UTF-8", outputFormat1.getEncoding());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("W%", true);
      outputFormat0.setTrimText(true);
      outputFormat0.setExpandEmptyElements(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat0.setXHTML(false);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat1.isNewlines();
      outputFormat1.isSuppressDeclaration();
      outputFormat1.setOmitEncoding(false);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat3.setNewlines(false);
      outputFormat0.isOmitEncoding();
      assertTrue(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isExpandEmptyElements());
      
      outputFormat3.setOmitEncoding(false);
      outputFormat2.isOmitEncoding();
      outputFormat2.setNewlines(true);
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setEncoding(":AMj2pz#6xoX85l:T~8");
      assertEquals(":AMj2pz#6xoX85l:T~8", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat("", true);
      int int0 = (-1);
      outputFormat0.setNewLineAfterNTags((-2130));
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      outputFormat0.setPadText(true);
      stringArray0[2] = "";
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('1');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (1)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("\n", outputFormat1.getLineSeparator());
      
      outputFormat1.setLineSeparator("");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getIndent();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isPadText();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setIndent(false);
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat1.getEncoding();
      outputFormat1.setIndent("  ");
      outputFormat0.isPadText();
      outputFormat1.setExpandEmptyElements(false);
      outputFormat2.getIndent();
      outputFormat0.setPadText(false);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat0.isNewlines());
      
      outputFormat0.setNewlines(true);
      outputFormat0.setEncoding("");
      outputFormat0.setXHTML(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.getLineSeparator();
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[0];
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setIndent("rliv9F7gP^!e]");
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(0);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.getLineSeparator();
      outputFormat1.setTrimText(false);
      outputFormat0.setEncoding((String) null);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat1.isExpandEmptyElements();
      outputFormat2.isExpandEmptyElements();
      outputFormat0.setTrimText(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat1.setNewlines(true);
      outputFormat0.setIndent(true);
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals("  ", outputFormat0.getIndent());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      assertFalse(outputFormat0.isPadText());
      
      outputFormat0.setPadText(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getLineSeparator();
      outputFormat0.isOmitEncoding();
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertTrue(outputFormat0.isPadText());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("y79", false);
      outputFormat0.setLineSeparator("y79");
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertEquals("y79", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[0];
      outputFormat0.setOmitEncoding(true);
      outputFormat0.parseOptions(stringArray0, 3885);
      outputFormat0.isXHTML();
      outputFormat0.setXHTML(false);
      outputFormat0.setOmitEncoding(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('%');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (%)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setEncoding("");
      outputFormat0.getEncoding();
      outputFormat0.setTrimText(false);
      outputFormat0.setIndent("");
      outputFormat0.setIndentSize((-133));
      outputFormat0.setEncoding("");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewlines(false);
      outputFormat0.setIndentSize(1);
      outputFormat0.isTrimText();
      outputFormat0.isTrimText();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isTrimText();
      outputFormat0.getEncoding();
      outputFormat0.setPadText(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getEncoding();
      outputFormat0.setNewlines(true);
      boolean boolean0 = outputFormat0.isPadText();
      assertEquals(" ", outputFormat0.getIndent());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, (String) null);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setIndent(true);
      outputFormat0.setSuppressDeclaration(true);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5400363038209806
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setLineSeparator("<0SAR]8AvuhtV'KE");
      outputFormat0.setEncoding("");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "<0SAR]8AvuhtV'KE";
      outputFormat0.setIndent(true);
      outputFormat1.setNewLineAfterNTags((-264));
      outputFormat1.setXHTML(false);
      int int0 = (-2219);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-2219));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2219
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setNewLineAfterNTags(0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "kY3h";
      stringArray0[6] = "";
      stringArray0[7] = "";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isXHTML());
      assertEquals("", outputFormat0.getIndent());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent("-suppressDeclaration");
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setTrimText(true);
      OutputFormat outputFormat2 = new OutputFormat("");
      outputFormat2.setIndentSize(0);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat2.setPadText(true);
      outputFormat2.setLineSeparator("CJXG{;'6?{!Q?4'0");
      outputFormat1.setIndent(true);
      outputFormat3.setIndentSize(0);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat3.setNewLineAfterNTags(1074);
      outputFormat1.setNewlines(true);
      outputFormat0.setIndent((String) null);
      outputFormat3.setExpandEmptyElements(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat3.setIndent("!S");
      outputFormat1.setPadText(false);
      outputFormat1.isTrimText();
      outputFormat0.getAttributeQuoteCharacter();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('I');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (I)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.536649897488158
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setExpandEmptyElements(false);
      assertFalse(outputFormat0.isOmitEncoding());
      
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndentSize((-4));
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = new OutputFormat("-newlines", false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "-newlines";
      stringArray0[4] = "-newlines";
      outputFormat1.parseOptions(stringArray0, 60);
      outputFormat0.isXHTML();
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.685945324669788
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isPadText();
      OutputFormat.createPrettyPrint();
      outputFormat0.setAttributeQuoteCharacter('\'');
      OutputFormat outputFormat1 = new OutputFormat("");
      outputFormat0.setEncoding("");
      assertEquals('\'', outputFormat0.getAttributeQuoteCharacter());
      
      outputFormat1.setXHTML(true);
      outputFormat1.setNewLineAfterNTags((-512));
      outputFormat1.setIndent((String) null);
      assertFalse(outputFormat1.isOmitEncoding());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7887062617229461
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      int int0 = (-4);
      outputFormat0.setIndentSize((-4));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-xhtml?HeMbdeWoKp,";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(true);
      String string0 = "-newlines";
      OutputFormat outputFormat1 = new OutputFormat("-newlines", false);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      String string1 = "-lineSeparator";
      outputFormat1.setLineSeparator("-lineSeparator");
      String string2 = "";
      String string3 = "-indentSize";
      OutputFormat outputFormat3 = new OutputFormat("-indentSize");
      outputFormat0.setTrimText(false);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "-newlines";
      stringArray1[1] = "";
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray1, (-4));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.103118844840435
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent("CJXG{;'6?{!Q?4'0");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setLineSeparator("|-h8&");
      OutputFormat outputFormat2 = new OutputFormat("");
      outputFormat1.setTrimText(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "|-h8&";
      stringArray0[2] = "";
      stringArray0[3] = "-lineSeparator";
      stringArray0[4] = "-lineSeparator";
      stringArray0[5] = "";
      stringArray0[6] = "|-h8&";
      stringArray0[7] = "";
      int int0 = outputFormat1.parseOptions(stringArray0, 0);
      assertEquals("|-h8&", outputFormat1.getLineSeparator());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6661022550876021
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndentSize((-4));
      OutputFormat outputFormat1 = new OutputFormat("-expandEmptyCJXG{;'6?{!Q?4'0", false);
      OutputFormat outputFormat2 = new OutputFormat("-xhtml-xhtml?HeMbdeWoKp,", false);
      OutputFormat outputFormat3 = new OutputFormat("", true, "-expandEmptyU=^1pSB).mHr5i7'");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-expandEmptyU=^1pSB).mHr5i7'";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.isXHTML();
      outputFormat2.parseOptions(stringArray0, 0);
      int int0 = outputFormat0.parseOptions(stringArray0, 1060);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(1060, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.208855132645658
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent("CJXG{;'6?{!Q?4'0");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewlines(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "?HeMbdeWoKp,";
      stringArray0[2] = "I009L";
      outputFormat1.isXHTML();
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("CJXG{;'6?{!Q?4'0", outputFormat0.getIndent());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7721393884375287
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "1?b>-";
      stringArray0[1] = "-xhtmlqzsS*A Z6,fK%";
      stringArray0[2] = "-xhtmlI009L>P }4|-Kj*g";
      stringArray0[3] = "-xhtmlU=^1pSB).mHr5i7'";
      stringArray0[4] = "-indentSize";
      stringArray0[5] = "(/uj~)$!9J0_JV";
      stringArray0[6] = "";
      stringArray0[7] = "-newlines";
      stringArray0[8] = "2";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"(/uj~)$!9J0_JV\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.196755797914435
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("CJXG{;'6?{!Q?4'0");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-omitEncoding";
      stringArray0[2] = "-omitEncoding";
      stringArray0[4] = "?";
      stringArray0[5] = "|n]G;5n";
      outputFormat1.parseOptions(stringArray0, 5);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setIndentSize(5);
      outputFormat0.parseOptions(stringArray0, 5);
      outputFormat0.setIndent(false);
      OutputFormat.createPrettyPrint();
      outputFormat2.setIndent("CJXG{;'6?{!Q?4'0");
      outputFormat1.parseOptions(stringArray0, 443);
      OutputFormat.createCompactFormat();
      outputFormat2.parseOptions(stringArray0, 443);
      outputFormat2.parseOptions(stringArray0, 443);
      outputFormat2.parseOptions(stringArray0, 443);
      outputFormat0.parseOptions(stringArray0, 443);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3393717343898155
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "]IyQcA4b1";
      stringArray0[1] = "-suppressDeclaration";
      stringArray0[2] = "]IyQcA4b1";
      stringArray0[3] = "]IyQcA4b1";
      stringArray0[4] = "]IyQcA4b1";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat2.parseOptions(stringArray0, 1);
      OutputFormat outputFormat3 = new OutputFormat("]IyQcA4b1", false);
      outputFormat3.parseOptions(stringArray0, 39);
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat5 = new OutputFormat("]IyQcA4b1", true);
      outputFormat5.getNewLineAfterNTags();
      outputFormat4.parseOptions(stringArray0, 273);
      outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isSuppressDeclaration());
      
      int int0 = outputFormat1.parseOptions(stringArray0, 39);
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertEquals(39, int0);
  }
}
