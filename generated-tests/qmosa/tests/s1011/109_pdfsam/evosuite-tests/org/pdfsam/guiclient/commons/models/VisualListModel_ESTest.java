/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:07:49 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.color.ICC_ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.ConvolveOp;
import java.awt.image.DataBuffer;
import java.awt.image.DataBufferInt;
import java.awt.image.DirectColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.Raster;
import java.awt.image.WritableRaster;
import java.awt.image.renderable.ParameterBlock;
import java.time.Month;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(1616, 1616, false);
      visualListModel0.getElements();
      visualListModel0.getSize();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 1616;
      intArray0[2] = 1616;
      intArray0[3] = 1616;
      intArray0[4] = 0;
      intArray0[5] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndex(0);
      int int0 = (-1);
      int int1 = 149;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(149, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 149
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0, true);
      visualListModel0.elementsChanged();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      int int0 = (-1);
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) 0;
      Kernel kernel0 = new Kernel((-1), 0, floatArray0);
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0);
      int int1 = 1;
      int int2 = 0;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)86;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, (-2552), byteArray0, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.prependAllElements(stack0);
      visualListModel0.moveUpIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray0 = new int[7];
      intArray0[0] = (-1724);
      intArray0[1] = (-1611);
      int int0 = (-537);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-1724), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1724)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      boolean boolean0 = false;
      visualListModel0.removeElements((-1), (-1), false);
      int[] intArray0 = new int[5];
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      visualListModel0.addListDataListener(jComboBox0);
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      int int0 = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.prependAllElements(stack0);
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) stack0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      boolean boolean0 = false;
      visualListModel0.subList(0, 0, false);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 3875;
      intArray0[2] = (-1599);
      intArray0[3] = 0;
      intArray0[4] = 1802;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = (-1599);
      intArray0[8] = 212;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-1599), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1599
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      int int0 = 0;
      intArray0[0] = 0;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex((-1));
      int[] intArray0 = new int[8];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      intArray0[5] = (-1);
      intArray0[6] = (-1);
      intArray0[7] = (-1);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.subList((-1281), (-1281));
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      JComponent.getDefaultLocale();
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.getElements();
      int int0 = 0;
      visualListModel0.getElementAt(0);
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid ICC Profile Data
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      visualListModel0.appendAllElements(collection0);
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveDownIndex(2);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.appendAllElements(arrayDeque0);
      visualListModel0.removeElements((-2331), (-2331), false);
      int[] intArray0 = new int[8];
      intArray0[0] = (-1177);
      intArray0[1] = (-2331);
      intArray0[2] = (-2331);
      intArray0[3] = (-2331);
      intArray0[4] = (-2331);
      intArray0[5] = (-2331);
      intArray0[6] = (-1);
      intArray0[7] = (-2331);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.clearData();
      visualListModel0.moveDownIndex((-2331));
      visualListModel0.getValidElements();
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex((-1));
      int[] intArray0 = new int[8];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveUpIndex(1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex((-1));
      int[] intArray0 = new int[8];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[7] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      intArray0[5] = (-1);
      intArray0[6] = (-1);
      intArray0[7] = (-1);
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-2331);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-2331));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2331
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      visualListModel0.subList((-537), 49, false);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 49;
      intArray0[2] = (-537);
      intArray0[3] = 49;
      intArray0[4] = (-537);
      intArray0[5] = 0;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.elementsChanged();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel1.removeElements(intArray0, false);
      visualListModel0.elementsChanged();
      visualListModel1.subList(0, 20000);
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8937882323911377
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.removeElements(1932, (-2331), false);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.clearData();
      visualListModel0.moveDownIndex(297);
      visualListModel0.getValidElements();
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 1963;
      visualListModel0.reverseElements(intArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.addAllElements(1963, (Collection<VisualPageListItem>) hashSet0);
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.prependAllElements(stack0);
      visualListModel0.addAllElements(1963, (Collection<VisualPageListItem>) stack0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.prependAllElements(stack0);
      visualListModel0.addAllElements((-603), (Collection<VisualPageListItem>) stack0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.removeElements((-207), (-207), true);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      int[] intArray0 = new int[0];
      visualListModel0.getListDataListeners();
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.getValidElements();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      visualListModel0.moveDownIndex(0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel1.removeElements(intArray0, true);
      visualListModel0.getValidElements();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addAllElements(18, (Collection<VisualPageListItem>) null);
      assertFalse(visualListModel0.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray0 = new int[7];
      intArray0[0] = (-1724);
      intArray0[1] = (-1611);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getSources();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(vector0);
      ParameterBlock parameterBlock1 = new ParameterBlock();
      parameterBlock1.add((byte)1);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(hashSet0);
      visualListModel0.clearData();
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.addElement((VisualPageListItem) null);
      visualListModel2.moveDownIndexes(intArray0);
      int int0 = visualListModel2.getSize();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.undeleteElements(intArray0);
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      jComboBox0.getPopupLocation((MouseEvent) null);
      visualListModel0.addListDataListener(jComboBox0);
      int[] intArray1 = new int[0];
      visualListModel0.reverseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(stack0);
      visualListModel0.addAllElements(410, (Collection<VisualPageListItem>) stack0);
      visualListModel1.rotateClockwiseElements(intArray1);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[19];
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.appendAllElements(arrayList0);
      visualListModel0.subList(256, 636, true);
      intArray0[11] = 0;
      intArray0[2] = 2;
      visualListModel0.moveUpIndex(1);
      visualListModel0.removeElements((-1), 0, true);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getSize();
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, true);
      visualListModel1.addElementAt((VisualPageListItem) null, 3190);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel1.getElements();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) vector0);
      int[] intArray0 = new int[7];
      intArray0[0] = (-2539);
      intArray0[1] = (-1137);
      intArray0[2] = 50;
      intArray0[3] = (-3617);
      intArray0[4] = 2545;
      intArray0[5] = 1535;
      intArray0[6] = (-2316);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.getValidElements();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.updateElementAt((-1137), (VisualPageListItem) null);
      assertFalse(visualListModel0.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0, true);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.prependAllElements(stack0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      assertTrue(stack0.empty());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.098147389135067
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.appendAllElements(arrayList0);
      visualListModel0.moveUpIndex(1817);
      int[] intArray0 = new int[3];
      intArray0[0] = 1817;
      intArray0[1] = 0;
      intArray0[2] = 1817;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.subList(0, 0, true);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(6, visualListModel0.getSize());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getSize();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      int int0 = (-1281);
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance((-1281));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4241299173467734
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[19];
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.appendAllElements(arrayList0);
      intArray0[11] = 0;
      intArray0[2] = 2;
      visualListModel0.moveUpIndex(1);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) arrayList0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(arrayList0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5232109529528914
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.removeAll(collection0);
      stack0.add(0, (VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int int1 = (-2271);
      visualListModel0.moveUpIndex((-2271));
      int[] intArray0 = new int[3];
      intArray0[0] = (-2271);
      intArray0[1] = (-2271);
      intArray0[2] = 0;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeElements((-2271), 1319, false);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements(intArray0, false);
      int int2 = 10000;
      visualListModel0.subList(3188, 10000, false);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndex(1319);
      visualListModel0.moveUpIndex((-2271));
      visualListModel0.removeElements(0, (-311), false);
      visualListModel0.getElements();
      visualListModel0.removeElements((-2271), 1319, false);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4241299173467734
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.appendAllElements(arrayList0);
      arrayList0.clone();
      visualListModel0.moveUpIndex(1);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) arrayList0);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.appendAllElements(arrayList0);
      visualListModel0.moveUpIndex(1860);
      int[] intArray0 = new int[3];
      intArray0[0] = 1860;
      intArray0[1] = 0;
      intArray0[2] = 1860;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.subList(0, 0, true);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1860
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.3066687254045313
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 114;
      intArray0[3] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.appendAllElements(arrayList0);
      visualListModel0.moveUpIndex(1860);
      int[] intArray1 = new int[3];
      intArray1[0] = 1860;
      intArray1[1] = 0;
      intArray1[2] = 1860;
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.subList(0, 0, true);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 114
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8636799873410004
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.moveDownIndex(0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      VisualPageListItem visualPageListItem0 = null;
      arrayList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[4];
      arrayList0.trimToSize();
      intArray0[0] = 0;
      intArray0[1] = 0;
      arrayList0.add((VisualPageListItem) null);
      intArray0[2] = 114;
      intArray0[3] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.appendAllElements(arrayList0);
      visualListModel0.moveUpIndex(1860);
      int[] intArray1 = new int[3];
      intArray1[0] = 1860;
      intArray1[1] = 0;
      intArray1[2] = 1860;
      try { 
        visualListModel0.undeleteElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1860
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.282374376159249
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 114;
      intArray0[0] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.appendAllElements(arrayList0);
      visualListModel0.moveUpIndex(1860);
      int[] intArray1 = new int[3];
      intArray1[0] = 1860;
      intArray1[1] = 0;
      intArray1[2] = 1860;
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.subList(0, 0, true);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualListModel0.rotateClockwiseElements(intArray1);
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.undeleteElements(intArray0);
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray2 = new int[0];
      visualListModel0.removeElements(intArray2, true);
      try { 
        visualListModel0.removeElements(intArray1, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 1861
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.088501619335465
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 114;
      intArray0[0] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.appendAllElements(arrayList0);
      visualListModel0.moveUpIndex(1845);
      int[] intArray1 = new int[3];
      intArray1[0] = 1845;
      intArray1[1] = 0;
      intArray1[2] = 1845;
      visualListModel0.undeleteElements(intArray1);
      boolean boolean0 = true;
      arrayList0.ensureCapacity(114);
      visualListModel0.removeElements(0, 0, true);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayList0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.4515830605217857
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 114;
      intArray0[0] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.appendAllElements(arrayList0);
      visualListModel0.moveUpIndex(1860);
      int[] intArray1 = new int[3];
      intArray1[0] = 1860;
      intArray1[1] = 0;
      intArray1[2] = 1860;
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.subList(0, 0, true);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualListModel0.rotateClockwiseElements(intArray1);
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.undeleteElements(intArray0);
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.elementChanged(visualPageListItemArray0[2]);
      visualListModel0.moveDownIndexes(intArray1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElementAt(visualPageListItemArray0[0], 114);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2051551011994586
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.spliterator();
      arrayList0.add((VisualPageListItem) null);
      boolean boolean0 = new Boolean(true);
      arrayList0.trimToSize();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.moveDownIndex(256);
      visualListModel0.appendAllElements(arrayList0);
      visualListModel0.moveUpIndex(256);
      int[] intArray0 = new int[3];
      intArray0[0] = 256;
      intArray0[2] = 256;
      visualListModel0.updateElementAt(256, (VisualPageListItem) null);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.updateElementAt(256, (VisualPageListItem) null);
      visualListModel0.updateElementAt(1860, (VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndex((-2390));
      VisualListModel visualListModel1 = new VisualListModel();
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 256
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.4061595753978207
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.clearData();
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[4];
      arrayList0.trimToSize();
      intArray0[0] = 0;
      intArray0[1] = 0;
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.appendAllElements(arrayList0);
      visualListModel0.moveUpIndex((-1));
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      visualListModel0.appendAllElements(arrayList0);
      visualListModel0.subList(0, 0, true);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualListModel1.undeleteElements(intArray0);
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel1.setData(visualPageListItemArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.elementChanged(visualPageListItemArray0[5]);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.addElementAt(visualPageListItemArray0[0], 5938);
      assertEquals(6, visualListModel0.getSize());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.106577333232116
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.listIterator();
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 103;
      intArray0[0] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.appendAllElements(arrayList0);
      visualListModel0.moveUpIndex(1845);
      int[] intArray1 = new int[3];
      intArray1[0] = 1845;
      intArray1[1] = 0;
      intArray0[0] = 1845;
      visualListModel0.undeleteElements(intArray1);
      boolean boolean0 = true;
      arrayList0.ensureCapacity(103);
      visualListModel0.removeElements(1845, 0, true);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayList0);
      try { 
        visualListModel0.moveUpIndexes(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1844
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.0982737395252498
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      arrayList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[4];
      arrayList0.trimToSize();
      intArray0[0] = 0;
      intArray0[1] = 0;
      arrayList0.add((VisualPageListItem) null);
      intArray0[2] = 114;
      intArray0[3] = 0;
      visualListModel0.appendAllElements(arrayList0);
      visualListModel0.moveUpIndex(1860);
      int[] intArray1 = new int[3];
      intArray1[0] = 1860;
      intArray1[1] = 0;
      intArray1[2] = 1860;
      visualListModel0.updateElementAt(1860, (VisualPageListItem) null);
      visualListModel0.subList(0, 0, true);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualListModel0.moveDownIndex(0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.elementChanged((VisualPageListItem) null);
      assertFalse(visualListModel1.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.2047854169135204
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      visualListModel0.subList(114, 40000);
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      int int0 = 1860;
      visualListModel0.moveUpIndex(2);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      int int1 = (-801);
      visualListModel0.subList((-801), 114, false);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1860;
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1860
         //
         verifyException("java.util.Vector", e);
      }
  }
}
