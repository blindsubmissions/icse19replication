/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:56:18 GMT 2018
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("QqEFWD%KZ4O~nq-``h", "!");
      ImprovedFile improvedFile1 = ImprovedFile.createTempDirectory("QqEFWD%KZ4O~nq-``h", "QqEFWD%KZ4O~nq-``h", (File) improvedFile0);
      improvedFile1.basicMakeDirectories(improvedFile0);
      improvedFile1.deleteDirectory(false);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      try { 
        archiveScanner0.scandir(improvedFile1, "!", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/ext1/evosuite_readability_gen/projects/78_caloriecount/QqEFWD%KZ4O~nq-``h/!/QqEFWD%KZ4O~nq-``h0QqEFWD%KZ4O~nq-``h
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3995705288353029
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("W");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile1);
      improvedFile1.deleteOnExit();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      ImprovedFile improvedFile3 = new ImprovedFile(improvedFile2);
      ImprovedFile improvedFile4 = improvedFile0.createTempDir();
      archiveScanner0.processDirectory(improvedFile4, "W", false);
      try { 
        archiveScanner0.processArchive(improvedFile2, "W");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/ext1/evosuite_readability_gen/projects/78_caloriecount/W/tempdir0
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.69240886298655
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = "|eK)W[lO/GuM59h`L";
      ImprovedFile improvedFile0 = new ImprovedFile("|eK)W[lO/GuM59h`L", "|eK)W[lO/GuM59h`L");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0);
      ImprovedFile improvedFile2 = ImprovedFile.createTempImprovedFile("|eK)W[lO/GuM59h`L", "|eK)W[lO/GuM59h`L", improvedFile1);
      improvedFile2.deleteOnExit();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile2);
      archiveScanner0.setBasedir((File) improvedFile1);
      try { 
        archiveScanner0.scan();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error creating temp directory for /home/ubuntu/ext1/evosuite_readability_gen/projects/78_caloriecount/|eK)W[lO/GuM59h`L/|eK)W[lO/GuM59h`L/|eK)W[lO/GuM59h`L0|eK)W[lO/GuM59h`L
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("W");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile1);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("W/tempdir1");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      improvedFile2.toURI();
      improvedFile1.deleteOnExit();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      ImprovedFile improvedFile3 = new ImprovedFile(improvedFile2);
      try { 
        improvedFile0.createTempDir();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error trying to create temp directory, /home/ubuntu/ext1/evosuite_readability_gen/projects/78_caloriecount/W/tempdir1, the call to create the directory failed.
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4761040462897277
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("|eK)W[lO/GuM59h`L");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".ear");
      ImprovedFile.createTempImprovedFile("|eK)W[lO/GuM59h`L", "", improvedFile1);
      improvedFile1.deleteOnExit();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir("|eK)W[lO/GuM59h`L");
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".ear";
      stringArray0[1] = "";
      stringArray0[2] = "|eK)W[lO/GuM59h`L";
      stringArray0[3] = "|eK)W[lO/GuM59h`L";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      String string0 = "{EK\\?W~GU";
      MockFile mockFile0 = new MockFile(improvedFile1, "{EK?W~GU");
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile0);
      ImprovedFile improvedFile3 = new ImprovedFile(improvedFile2, ".ear");
      ImprovedFile improvedFile4 = new ImprovedFile(improvedFile3, "");
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile3);
      // Undeclared exception!
      try { 
        archiveScanner1.processFile("}9+/(M");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4398298923439505
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("|eK)W[lO/GuM59h`L");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".ear");
      ImprovedFile.createTempImprovedFile("|eK)W[lO/GuM59h`L", "", improvedFile1);
      improvedFile1.deleteOnExit();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir("|eK)W[lO/GuM59h`L");
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".ear";
      stringArray0[1] = "";
      stringArray0[2] = "|eK)W[lO/GuM59h`L";
      stringArray0[3] = "|eK)W[lO/GuM59h`L";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.setBasedir((File) improvedFile0);
      ImprovedFile improvedFile2 = improvedFile1.createTempDir("<separator>", "<separator>");
      improvedFile2.setLastModified(0L);
      archiveScanner0.scan();
      improvedFile1.createTempDir();
      ImprovedFile improvedFile3 = new ImprovedFile(improvedFile2);
      ImprovedFile improvedFile4 = new ImprovedFile(improvedFile3, "-C4");
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile4);
      archiveScanner0.processDirectory(improvedFile1, ".ear", false);
      assertFalse(improvedFile1.isAbsolute());
  }
}
