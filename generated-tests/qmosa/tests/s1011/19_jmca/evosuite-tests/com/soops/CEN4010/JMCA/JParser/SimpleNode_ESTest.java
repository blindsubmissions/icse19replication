/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:39:38 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringWriter stringWriter0 = new StringWriter(36);
      char[] charArray0 = new char[6];
      stringWriter0.append((CharSequence) "{V6)e|Z4>)Nk=x~0vwY");
      charArray0[0] = 'O';
      charArray0[1] = '3';
      charArray0[2] = 'O';
      charArray0[3] = 'E';
      stringWriter0.write("");
      charArray0[4] = 'f';
      charArray0[5] = '6';
      stringWriter0.close();
      stringWriter0.append((CharSequence) "");
      stringWriter0.write(charArray0, 0, 0);
      simpleNode0.dump("{V6)e|Z4>)Nk=x~0vwY", stringWriter0);
      simpleNode0.dump("{V6)e|Z4>)Nk=x~0vwY", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2836);
      JavaParser javaParser0 = new JavaParser("ConditionalAndExpression");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 2836);
      simpleNode0.jjtSetParent(simpleNode1);
      Node node0 = simpleNode0.jjtGetParent();
      simpleNode1.jjtSetParent(node0);
      assertEquals(0, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "AssertStatement";
      StringReader stringReader0 = new StringReader("AssertStatement");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-505));
      javaParser0.InclusiveOrExpression();
      try { 
        javaParser0.ClassOrInterfaceBody(false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 15.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "VariableDeclaratorId";
      StringReader stringReader0 = new StringReader("VariableDeclaratorId");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1064));
      String string1 = "#$h:8):";
      char[] charArray0 = new char[3];
      stringReader0.ready();
      simpleNode0.setIdentifier("#$h:8):");
      charArray0[0] = 'V';
      charArray0[1] = '<';
      charArray0[2] = 'L';
      int int0 = 1710;
      // Undeclared exception!
      try { 
        simpleNode0.toString("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1064
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9k");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("9k");
      simpleNode1.identifiers = arrayList0;
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      simpleNode1.toString("9k");
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.jjtSetParent(simpleNode0);
      simpleNode0.toString("AnnotationTypeMemberDeclaration");
      stringReader0.read();
      simpleNode1.toString();
      simpleNode1.jjtSetParent(simpleNode0);
      simpleNode1.jjtSetParent(simpleNode0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.073542846408523
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(109);
      StringWriter stringWriter0 = new StringWriter(109);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringWriter0.write((String) null);
      simpleNode0.dump("", stringWriter0);
      simpleNode0.jjtOpen();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6848735471085738
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 88);
      StringWriter stringWriter0 = new StringWriter(88);
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("&", stringWriter0);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(89, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.7509687782493433
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 88);
      StringWriter stringWriter0 = new StringWriter(88);
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      simpleNode0.setIdentifier("*gt");
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      assertEquals(89, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2148896539491205
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 44);
      simpleNode0.jjtAddChild((Node) null, 44);
      simpleNode0.jjtAddChild((Node) null, 44);
      simpleNode0.jjtAddChild((Node) null, 82);
      // Undeclared exception!
      try { 
        simpleNode0.dump("LTEA;+L\"", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5140966973399504
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      simpleNode0.jjtAddChild(simpleNode0, 88);
      StringWriter stringWriter0 = new StringWriter(88);
      simpleNode0.setIdentifier(";9Be");
      // Undeclared exception!
      simpleNode0.dump(";9Be", stringWriter0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4205719259467042
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 88);
      StringWriter stringWriter0 = new StringWriter(702);
      simpleNode0.dump("<=", stringWriter0);
      JavaParser javaParser0 = new JavaParser("*a$P:]9?mB:_9[6G0)");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 1);
      simpleNode1.setIdentifier(";");
      simpleNode1.dump(";9Be", stringWriter0);
      assertEquals("<ContinueStatement></ContinueStatement>\n<PackageDeclaration>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681098
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 88);
      StringWriter stringWriter0 = new StringWriter(88);
      simpleNode0.setIdentifier(" CW3)&!099PU7sud");
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      simpleNode0.setIdentifier("");
      simpleNode0.dump("*a$P:]9?mB:_9[6G0)", stringWriter0);
      assertEquals(89, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9495936677167384
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(44);
      simpleNode0.toString("<");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)114;
      byteArray0[2] = (byte)42;
      byteArray0[3] = (byte) (-3);
      StringWriter stringWriter0 = new StringWriter(12);
      simpleNode0.dump("z0~j>0E8.", stringWriter0);
      simpleNode0.setIdentifier("<");
      simpleNode0.dump("&", stringWriter0);
      simpleNode0.dump("<ExclusiveOrExpression", stringWriter0);
      assertEquals("<ExclusiveOrExpression>\n  <identifier>*lt</identifier>\n</ExclusiveOrExpression>\n<ExclusiveOrExpression>\n  <identifier>*lt</identifier>\n</ExclusiveOrExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9998704205025659
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 88);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("<=");
      PipedInputStream pipedInputStream0 = new PipedInputStream(68);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 88);
      simpleNode0.dump("", stringWriter0);
      assertEquals("<ContinueStatement>\n  <identifier>*le</identifier>\n</ContinueStatement>\n", stringWriter0.toString());
      assertEquals(89, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8377716126398524
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 88);
      StringWriter stringWriter0 = new StringWriter(88);
      simpleNode0.dump("*a$P:]9?mB:_9[6Gl0)", stringWriter0);
      stringWriter0.append((CharSequence) "*a$P:]9?mB:_9[6Gl0)");
      simpleNode0.setIdentifier("<<");
      String string0 = "U=+";
      simpleNode0.dump("U=+", stringWriter0);
      Writer writer0 = null;
      // Undeclared exception!
      try { 
        simpleNode0.dump("U=+", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1240357221909014
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(44);
      simpleNode0.toString("<");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      simpleNode0.jjtAddChild(simpleNode0, (byte)1);
      StringWriter stringWriter0 = new StringWriter();
      String string0 = ">";
      simpleNode0.setIdentifier(">");
      // Undeclared exception!
      try { 
        simpleNode0.dump("byte", stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4205719259467042
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(44);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 44);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("&", stringWriter0);
      simpleNode0.setIdentifier("}");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.dump("&", stringWriter0);
      assertEquals(45, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.40945861869508926
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 44;
      SimpleNode simpleNode0 = new SimpleNode(44);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("<=");
      String string0 = "%?\"u/Up6;Bz#9";
      simpleNode0.dump("%?\"u/Up6;Bz#9", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.close();
      simpleNode0.setIdentifier("%?\"u/Up6;Bz#9");
      int int1 = (-2085);
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump("%?\"u/Up6;Bz#9", stringWriter2);
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump("isCQ18y+", stringWriter2);
      simpleNode0.dump("public", stringWriter1);
      // Undeclared exception!
      try { 
        simpleNode0.dump("public", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9017412329512398
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(86);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 44);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("&&");
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("Lz7", stringWriter0);
      assertEquals(45, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(44);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("<=");
      simpleNode0.dump("%?\"9/Up6;|x#9", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.close();
      simpleNode0.setIdentifier("%?\"9/Up6;|x#9");
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump("%?\"9/Up6;|x#9", stringWriter2);
      simpleNode0.setIdentifier("{");
      simpleNode0.dump("public", stringWriter1);
      simpleNode0.dump("<=", stringWriter2);
      StringReader stringReader0 = new StringReader(",q");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-2085));
      simpleNode1.dump("RUNSIGNEDSHIFT", stringWriter2);
      simpleNode1.dump("jt&3a'%i7%imbfM", stringWriter0);
      SimpleNode simpleNode2 = new SimpleNode((-2085));
      simpleNode2.dump("N1,{8E!wK!t{F,s)f", stringWriter0);
      simpleNode1.dump("%?\"9/Up6;|x#9", stringWriter0);
      simpleNode1.dump("*ge", stringWriter1);
      assertEquals("<ExclusiveOrExpression>\n  <identifier>*le</identifier>\n  <identifier>%?\"9/Up6;|x#9</identifier>\n</ExclusiveOrExpression>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.8717814824679821
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(86);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 44);
      StringWriter stringWriter0 = new StringWriter(16);
      String string0 = "`k5FQQD&2Va";
      simpleNode0.dump((String) null, stringWriter0);
      String string1 = ">>";
      simpleNode0.setIdentifier(">>");
      simpleNode0.dump(">>", stringWriter0);
      Writer writer0 = null;
      // Undeclared exception!
      try { 
        simpleNode0.dump("`k5FQQD&2Va", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
