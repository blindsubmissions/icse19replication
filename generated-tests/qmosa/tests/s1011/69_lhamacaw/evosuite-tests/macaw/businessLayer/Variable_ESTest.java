/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:10:52 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "xb0;2@z";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setAlias("xb0;2@z");
      rawVariable0.getLabel();
      rawVariable0.getColumnEnd();
      rawVariable0.getForm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("variable.name.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.setCleaningDescription("4qP");
      derivedVariable0.getNotes();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      assertEquals("4qP", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.codeBookNumber = "variable.questionNumber.label";
      supportingDocument0.getDisplayName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      supportingDocument0.setFilePath("NOP?T");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getDisplayItemIdentifier();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add((OntologyTerm) null);
      arrayList1.clear();
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.setColumnEnd("0");
      rawVariable0.setCodeBookNumber("0");
      rawVariable0.getDisplayName();
      rawVariable0.createVariableSummary();
      assertEquals("0", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("`c\"5]yhFS Uk>");
      rawVariable0.addValueLabel(valueLabel0);
      String string0 = "variable.isCoded.label";
      rawVariable0.setCleaningStatus("variable.isCoded.label");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setNotes("variable.isCoded.label");
      rawVariable0.setCategory("`c\"5]yhFS Uk>");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setCoded(true);
      User user0 = new User("`c\"5]yhFS Uk>", "`c\"5]yhFS Uk>");
      user0.setLastName("`c\"5]yhFS Uk>");
      user0.setFirstName("");
      user0.setUserID("`c\"5]yhFS Uk>");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getDisplayItemIdentifier();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("`SURXY<na[bG 2eovE ");
      derivedVariable0.setCleaningDescription("l~n)w");
      derivedVariable0.getFilePath();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setAffiliation("variable.columnStart.label");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getIdentifier();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setFilePath("`SURXY<na[bG 2eovE ");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("l~n)w", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("variable.name.label");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.clone();
      rawVariable0.setSupportingDocuments(arrayList0);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, variableSummary0.getIdentifier());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setForm("user.firstName.label");
      rawVariable0.setCleaningDescription("");
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.parallelStream();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.clone();
      assertEquals("user.firstName.label", rawVariable0.getForm());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.2913361527953433
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "GoE}/0=gzmedkp,RVQ<";
      derivedVariable0.setCleaningDescription("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getNotes();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.getCategory();
      rawVariable0.setIdentifier((-2878));
      assertEquals((-2878), rawVariable0.getIdentifier());
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("f*;8N5y)", "");
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setIdentifier((-7296));
      derivedVariable0.addValueLabel(valueLabel1);
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setCleaningStatus("variable.availability.label");
      derivedVariable0.isNewRecord();
      derivedVariable0.setAvailability("");
      assertEquals("variable.availability.label", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      supportingDocument0.setIsNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      supportingDocument0.setIdentifier((-828));
      rawVariable0.setAlternativeVariable(derivedVariable0);
      supportingDocument0.setFileName(" a5z[z?");
      arrayList0.add(supportingDocument0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      arrayList0.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.getColumnEnd();
      rawVariable0.setAlias("bw 2` |SNeZQmMs");
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSourceVariable(rawVariable0);
      derivedVariable1.getAvailability();
      derivedVariable1.getColumnStart();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      arrayList2.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList2);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.401197381662154
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(false);
      rawVariable0.questionNumber = "";
      rawVariable0.setColumnStart("");
      rawVariable0.getFilePath();
      rawVariable0.getSupportingDocuments();
      rawVariable0.setCodeBookNumber("/");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "/";
      rawVariable0.cloneAttributes(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setName("_xFQ<nk5b");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      User user0 = new User("x _y", "");
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      rawVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setIsNewRecord(false);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.357306009900858
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.setQuestionNumber("lP3C*wz{;0\"C,Y7x");
      derivedVariable0.isCleaned();
      derivedVariable0.setColumnEnd("%Q*E q!k@l|Q");
      derivedVariable0.setCoded(false);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      ontologyTerm0.setIdentifier(0);
      derivedVariable2.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable2.getOntologyTerms();
      arrayList0.iterator();
      arrayList0.add(ontologyTerm0);
      derivedVariable1.removeOntologyTerms(arrayList0);
      derivedVariable1.createVariableSummary();
      derivedVariable1.clone();
      derivedVariable2.getAlias();
      derivedVariable0.clone();
      assertEquals("lP3C*wz{;0\"C,Y7x", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.173768833930095
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setYear("'h#ze}klC;lgh`k");
      rawVariable0.setQuestionNumber("'h#ze}klC;lgh`k");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("&^,(+J", "&^,(+J");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      assertEquals("'h#ze}klC;lgh`k", rawVariable0.getYear());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("'h#ze}klC;lgh`k");
      assertEquals("", rawVariable1.getNotes());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6410925145550594
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(true);
      rawVariable0.getDisplayItemIdentifier();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.addValueLabel((ValueLabel) null);
      User user0 = new User("0", (String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.setCodeBookNumber("|A");
      assertTrue(rawVariable0.isCoded());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.657287226039444
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "GoE}/0=gzmedkp,RVQ<";
      derivedVariable0.setCleaningDescription("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getNotes();
      User user0 = new User("", "");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.setCodeBookNumber("INVALID_ADMINISTRATOR");
      assertEquals("INVALID_ADMINISTRATOR", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.3284718813307355
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      
      derivedVariable0.isCleaned();
      derivedVariable0.setCoded(false);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      ontologyTerm0.setIdentifier(0);
      derivedVariable2.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("zgU[8m-H-3`Mw6492u");
      boolean boolean0 = derivedVariable2.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      derivedVariable0.hasSameDisplayName(derivedVariable2);
      derivedVariable2.getCleaningStatus();
      ArrayList<Variable> arrayList0 = derivedVariable2.getSourceVariables();
      derivedVariable2.setSourceVariables(arrayList0);
      derivedVariable2.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable2.isNewRecord());
      assertFalse(derivedVariable2.isCoded());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.8395094266540166
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("DELETE");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.createVariableSummary();
      rawVariable0.setCleaned(false);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.setCleaned(true);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getDisplayName();
      rawVariable0.setCodeBookNumber((String) null);
      derivedVariable0.setLabel("iK.J2E|w`nnWd9G_\"");
      derivedVariable0.setForm("VARIABLE");
      rawVariable0.setForm("j]ehPME8tgH%=R");
      rawVariable0.setCleaned(true);
      derivedVariable0.setCleaned(true);
      derivedVariable0.getAlternativeVariable();
      derivedVariable0.getForm();
      ValueLabel valueLabel1 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel1);
      rawVariable0.setForm("");
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("VARIABLE", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0982737395252498
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setIdentifier(338);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("zgU[8m-H-3`Mw6492u");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      derivedVariable0.hasSameDisplayName(rawVariable0);
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5940980977370653
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("lP3C*wz{;0\"C,Y7x");
      derivedVariable0.isCleaned();
      derivedVariable0.setColumnEnd("%Q*E q!k@l|Q");
      derivedVariable0.setCoded(false);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("");
      ontologyTerm0.setIdentifier(0);
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCleaned(false);
      derivedVariable1.getAlternativeVariable();
      derivedVariable0.getForm();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("%Q*E q!k@l|Q");
      assertEquals("%Q*E q!k@l|Q", rawVariable1.getForm());
      
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, (Variable) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable2);
      assertEquals(0, derivedVariable2.getIdentifier());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.884297118205747
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("DELETE");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.createVariableSummary();
      rawVariable0.setCleaned(false);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.setCleaned(true);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getDisplayName();
      rawVariable0.setCodeBookNumber((String) null);
      derivedVariable1.cloneAttributes(rawVariable0);
      derivedVariable0.setForm("VARIABLE");
      rawVariable0.setForm("j]ehPME8tgH%=R");
      rawVariable0.setCleaned(true);
      derivedVariable0.setCleaned(true);
      derivedVariable0.getForm();
      ValueLabel valueLabel1 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel1);
      rawVariable0.setForm("");
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("VARIABLE", derivedVariable0.getForm());
      
      rawVariable0.clone();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertTrue(arrayList1.isEmpty());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.5369546858483574
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("DELETE");
      supportingDocument0.setFilePath("DELETE");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaned(true);
      derivedVariable0.clone();
      derivedVariable0.setCleaned(true);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable1.removeValueLabel(valueLabel0);
      derivedVariable0.getDisplayName();
      rawVariable0.setCodeBookNumber("%");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("NON_EXISTENT_ONTOLOGY_TERM");
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getCleaningStatus();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = derivedVariable1.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable1.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.724666065923465
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1863));
      rawVariable0.setQuestionNumber("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setCodeBookNumber("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.clone();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
      derivedVariable1.getSourceVariables();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertEquals("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE", derivedVariable0.getCodeBookNumber());
  }
}
