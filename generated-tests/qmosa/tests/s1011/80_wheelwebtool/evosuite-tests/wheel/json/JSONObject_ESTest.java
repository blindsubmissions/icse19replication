/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:56:43 GMT 2018
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = (-762);
      Integer integer0 = new Integer((-762));
      String[] stringArray0 = new String[1];
      String string0 = ";IG /TWLQP~))b9";
      stringArray0[0] = ";IG /TWLQP~))b9";
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      jSONObject0.toString();
      jSONObject0.optLong("{}");
      try { 
        jSONObject0.getString(";IG /TWLQP~))b9");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\";IG /TWLQP~))b9\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "8.=eiiHqw40s}H.d[";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("8.=eiiHqw40s}H.d[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of 8.=eiiHqw40s}H.d[
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.toString(0);
      Long long0 = new Long((-2399L));
      jSONObject0.put("[]", (Object) long0);
      try { 
        jSONObject0.getJSONArray("\"\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\"\\\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-80));
      String string0 = JSONObject.valueToString(byte0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSONObject.quote("");
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.names();
      JSONObject jSONObject1 = jSONObject0.put("", 1L);
      String string0 = "|d#a";
      try { 
        jSONObject1.getJSONObject("|d#a");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"|d#a\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.333053143183942
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "\u0000jvH&5N_cpNX";
      stringArray0[1] = "";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject.getNames(jSONObject1);
      String string0 = "Expected a ',' or '}'";
      long long0 = 0L;
      jSONObject1.put("Expected a ',' or '}'", 0L);
      int int0 = (-2931);
      JSONObject.valueToString("\u0000jvH&5N_cpNX", 699, (-2931));
      jSONObject1.toString((-2931));
      Long long1 = new Long(3728L);
      JSONObject.numberToString(long1);
      jSONObject1.toString();
      try { 
        jSONObject1.getJSONObject((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = 0.0;
      Double double1 = new Double(0.0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double1, stringArray0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject0.put("", 0L);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      jSONObject1.names();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.containsAll(linkedList1);
      try { 
        jSONObject1.put((String) null, (Collection) linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "1T[";
      stringArray0[1] = "hzV4b'~6?y(";
      stringArray0[2] = "] is not a Boolean.";
      stringArray0[3] = "J!PiXxv_^0";
      stringArray0[4] = "";
      stringArray0[5] = "] not found.";
      stringArray0[6] = "{wBVb)h7~qW5mL@";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      int int0 = jSONObject0.optInt("Bad value from toJSONString: ");
      assertEquals(0, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Map<Byte, String> map0 = null;
      JSONObject jSONObject0 = new JSONObject((Map) null);
      String string0 = "] is not a JSONObject.";
      double double0 = 0.0;
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONObject.", 0.0);
      jSONObject1.optBoolean("] is not a JSONObject.");
      JSONObject.getNames(jSONObject0);
      String string1 = "{";
      JSONObject jSONObject2 = jSONObject0.putOpt("{", "{");
      jSONObject2.names();
      String string2 = "";
      try { 
        jSONObject2.getLong("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 0);
      JSONObject jSONObject0 = new JSONObject(integer0);
      jSONObject0.put("", 0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray((Collection) null);
      int int0 = 1129;
      int int1 = 1251;
      JSONObject.valueToString(jSONArray0, 1129, 1251);
      JSONObject jSONObject0 = new JSONObject((Object) "[]");
      jSONObject0.optInt("[]");
      JSONObject.getNames((Object) null);
      jSONObject0.remove("[]");
      JSONObject.valueToString((Object) null);
      short short0 = (short)0;
      // Undeclared exception!
      try { 
        jSONObject0.write((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.8767681067355984
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "] is not a JSONArray.";
      double double0 = 629.589280205469;
      JSONObject.quote("] is not a JSONArray.");
      Double double1 = new Double(629.589280205469);
      jSONObject0.append(" 1|@#Z;3&", double1);
      Double.min(629.589280205469, 629.589280205469);
      int int0 = 2203;
      Double.isFinite((-2030.940616));
      jSONObject0.toString();
      Boolean boolean0 = new Boolean(true);
      Boolean.logicalAnd(true, true);
      jSONObject0.optBoolean("{\"java.lang.String@0000000003\":wheel.json.JSONArray@0000000002}");
      JSONObject.valueToString(boolean0);
      try { 
        jSONObject0.getLong("Missing value");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Missing value\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      JSONObject.getNames(object0);
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optLong("p^!els/0lr}", (-1L));
      jSONObject0.optString("R^]j{glgw");
      jSONObject0.append("R^]j{glgw", "R^]j{glgw");
      JSONTokener jSONTokener0 = new JSONTokener("");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 0 of 
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.8048691313007765
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Float float0 = new Float(1.0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Qc";
      stringArray0[1] = "";
      stringArray0[2] = "YNlO";
      stringArray0[3] = "H";
      Float.min(0.0F, 0.0F);
      stringArray0[4] = "";
      stringArray0[5] = "' and instead saw '";
      Float.sum(997.81F, 0.0F);
      stringArray0[6] = "";
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      jSONObject0.names();
      jSONObject0.putOpt("!vO'l|l;e]", "' and instead saw '");
      jSONObject0.opt("' and instead saw '");
      String string0 = JSONObject.valueToString("");
      assertNotNull(string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.192060588416434
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put("]ssF335R}5zS9~z", 8448);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "\u0000jvH&5N_cpNX";
      stringArray0[1] = "";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject.getNames(jSONObject1);
      jSONObject1.put("Expected a ',' or '}'", 0L);
      assertEquals(1, jSONObject0.length());
      
      JSONObject.valueToString("\u0000jvH&5N_cpNX", 699, (-2931));
      Byte byte0 = new Byte((byte) (-79));
      String string0 = JSONObject.valueToString(hashMap0);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2484443987142537
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      stringArray0[1] = "+";
      stringArray0[2] = " Yb]o0vq";
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      jSONObject0.put(" of ", (-4230.69));
      jSONObject0.put(",:]}/\"[{;=#", 0L);
      JSONObject jSONObject1 = jSONObject0.put("/VVBY)_S1nSvRf", (Collection) null);
      jSONObject1.toString(0);
      jSONObject0.length();
      jSONObject0.optJSONObject("hbu+]");
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = JSONObject.getNames(object0);
      assertNull(stringArray0);
      
      JSONObject jSONObject0 = new JSONObject();
      long long0 = jSONObject0.optLong("p^!els/0lr}", (-1L));
      assertEquals((-1L), long0);
      
      String string0 = jSONObject0.toString(160);
      assertEquals("{}", string0);
      
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      double double0 = jSONObject0.optDouble((String) null);
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.162418044961669
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[14];
      stringArray0[0] = "\u0000jvH&5N_cpNX";
      stringArray0[1] = "";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject.getNames(jSONObject1);
      String string0 = "Expected a ',' or '}'";
      long long0 = 0L;
      JSONObject jSONObject2 = new JSONObject();
      int int0 = (-2931);
      JSONObject.valueToString("\u0000jvH&5N_cpNX", 699, (-2931));
      jSONObject1.toString((-2931));
      Long long1 = new Long(3728L);
      JSONObject.numberToString(long1);
      jSONObject1.toString();
      try { 
        jSONObject1.getJSONObject((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = ";IG /TWLQP~))b9";
      Integer.toUnsignedLong((-762));
      JSONObject.doubleToString(4294966534L);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject.getNames((Object) jSONArray0);
      JSONObject.valueToString(";IG /TWLQP~))b9");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5060859128333517
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Double double0 = new Double((-174.35360943868));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "i|eK)W[lO/GuM59h`L";
      stringArray0[1] = "[";
      stringArray0[2] = "XOt6,P0#EU";
      stringArray0[3] = "";
      Double.isFinite(0.0);
      stringArray0[4] = "";
      stringArray0[5] = "'";
      stringArray0[6] = "_^(}[CN'G_Z";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      jSONObject0.optBoolean("_^(}[CN'G_Z", true);
      jSONObject0.optDouble("[", (-174.35360943868));
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      Integer integer0 = Integer.valueOf(2263);
      JSONObject jSONObject2 = jSONObject0.put("[", (Object) integer0);
      jSONObject2.optDouble("La1*FvJ&Vi,`$q-R");
      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>();
      JSONObject jSONObject3 = jSONObject2.put("", (Map) hashMap0);
      jSONObject1.has("i|eK)W[lO/GuM59h`L");
      jSONObject3.toString(22, 2263);
      try { 
        jSONObject1.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.47592760080619
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      stringArray0[1] = "+";
      stringArray0[2] = " Yb]o0vq";
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      jSONObject0.put(" of ", (-4230.69));
      JSONObject jSONObject1 = jSONObject0.put(",:]}/\"[{;=#", 0L);
      JSONObject jSONObject2 = jSONObject0.put("/VVBY)_S1nSvRf", (Collection) null);
      jSONObject1.optInt((String) null, (int) (byte)16);
      jSONObject2.toString(0);
      jSONObject1.optDouble((String) null, 2506.898042004);
      JSONObject jSONObject3 = new JSONObject();
      jSONObject1.accumulate(" Yb]o0vq", jSONObject3);
      try { 
        jSONObject1.getJSONArray("6]]8l@)1L'u-K~O;a");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"6]]8l@)1L'u-K~O;a\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2679277339660486
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Double double0 = new Double((-174.35360943868));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "i|eK)W[lO/GuM59h`L";
      stringArray0[1] = "[";
      stringArray0[2] = "XOt6,P0#EU";
      stringArray0[3] = "";
      Double.isFinite(0.0);
      stringArray0[4] = "F~gO|q8";
      stringArray0[5] = "'";
      stringArray0[6] = "_^(}[CN'G_Z";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      jSONObject0.optBoolean("_^(}[CN'G_Z", true);
      jSONObject0.optDouble("[", (-174.35360943868));
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      StringWriter stringWriter0 = new StringWriter(2263);
      jSONObject1.write(stringWriter0);
      jSONObject1.optBoolean("G<B?XW2S&{ Hl{y6TF", true);
      jSONObject0.put("i|eK)W[lO/GuM59h`L", (-174.35360943868));
      jSONObject1.length();
      jSONObject0.optJSONObject((String) null);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.293065294991466
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      JSONObject jSONObject1 = jSONObject0.put("getdecode", 0.0);
      jSONObject1.optBoolean("getdecode");
      jSONObject1.put(".*jxUQ_t?:{gH\"N+Z", (Map) null);
      JSONObject.getNames(jSONObject0);
      JSONObject jSONObject2 = jSONObject0.putOpt("{", "{");
      JSONArray jSONArray0 = new JSONArray();
      jSONObject2.put("R@/-hN5['1C]", 1786.154238275);
      JSONObject.getNames(jSONObject1);
      JSONObject.getNames((Object) "getdecode");
      try { 
        jSONObject2.getLong("Tl=UlGF0ZSR!Ui+fq&");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Tl=UlGF0ZSR!Ui+fq&\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }
}
