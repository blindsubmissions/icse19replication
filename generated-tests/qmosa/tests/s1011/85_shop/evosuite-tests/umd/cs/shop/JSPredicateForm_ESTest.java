/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:39:31 GMT 2018
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.NoSuchElementException;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "x43Fg";
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("x43Fg");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hzV4b'~6?y(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches(jSPredicateForm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StreamTokenizer streamTokenizer0 = null;
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.toStr();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.lastElement();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.print();
      int int0 = 32;
      JSJshopVars.lessT = 32;
      String string0 = null;
      // Undeclared exception!
      try { 
        jSPredicateForm0.set(0, (Object) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" . ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.wordChars(45, (-3));
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm1.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.standarizerPredicateForm();
      JSSubstitution jSSubstitution1 = jSPredicateForm0.matches(jSPredicateForm1, jSSubstitution0);
      assertTrue(jSSubstitution1.fail());
      assertNotSame(jSPredicateForm0, jSPredicateForm2);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7480673485460896
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" . ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm2.firstElement();
      jSTerm0.standarizerPredicateForm();
      JSTerm jSTerm1 = new JSTerm();
      jSPredicateForm0.remove((Object) jSTerm1);
      jSPredicateForm1.equals((JSPredicateForm) jSTerm1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm0.matches(jSPredicateForm1, jSSubstitution0);
      JSTerm jSTerm2 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm2.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8746407405357517
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9C)ZWQ!zc-f6O8@O");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.toStr();
      jSPredicateForm0.standarizerPredicateForm();
      jSTerm0.equals(jSPredicateForm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.remove((Object) jSTerm0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm1 = jSTerm1.applySubstitutionPF(jSSubstitution0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'M';
      charArray0[1] = 'g';
      charArray0[2] = 'D';
      charArray0[3] = 'I';
      stringReader0.read(charArray0);
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.clonePF();
      jSPredicateForm2.toStr();
      jSPredicateForm1.listIterator();
      JSPredicateForm jSPredicateForm3 = jSPredicateForm0.clonePF();
      jSPredicateForm3.standarizerPredicateForm();
      jSTerm0.equals((JSPredicateForm) jSTerm1);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm2.print();
      System.setCurrentTimeMillis(4);
      JSPredicateForm jSPredicateForm4 = jSTerm1.standarizerPredicateForm();
      assertTrue(jSPredicateForm4.equals((Object)jSPredicateForm1));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9356005054539458
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9C)ZWQ!zc-f6O8@O");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'F';
      charArray0[1] = 'P';
      stringReader0.read(charArray0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.toStr();
      jSTerm0.listIterator();
      jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm0.equals((JSPredicateForm) jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm1.matches((JSPredicateForm) jSTerm0);
      jSTerm0.add((Object) jSPredicateForm1);
      jSTerm0.print();
      System.setCurrentTimeMillis((-2));
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSPredicateForm cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9826232826520047
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9C)ZWQ!zc-f6O8@O");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.toStr();
      jSTerm0.equals(jSPredicateForm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.remove((Object) jSTerm0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm1.applySubstitutionPF(jSSubstitution0);
      Integer integer0 = new Integer(2);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      jSTerm0.toStr();
      jSTerm0.listIterator();
      jSTerm0.standarizerPredicateForm();
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSPredicateForm jSPredicateForm2 = jSTerm1.applySubstitutionPF(jSSubstitution2);
      jSPredicateForm1.print();
      System.setCurrentTimeMillis(2);
      jSTerm1.standarizerPredicateForm();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSTerm0.matches(jSPredicateForm2, jSSubstitution3);
      jSTerm0.print();
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.2008276490345495
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9CKZWQ!zc-dO8@O");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.toStr();
      jSTerm0.listIterator();
      StringReader stringReader1 = new StringReader("C2uKFA28wsRqcF");
      jSTerm0.isEmpty();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = jSTerm0.matches(jSPredicateForm0, jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm0.toStr();
      jSPredicateForm0.listIterator();
      JSPredicateForm jSPredicateForm2 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm2.equals(jSPredicateForm1);
      jSPredicateForm1.spliterator();
      Integer integer0 = new Integer(208);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm2.clonePF();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm2.standarizerPredicateForm();
      jSPredicateForm3.toStr();
      jSPredicateForm2.listIterator();
      jSPredicateForm2.standarizerPredicateForm();
      jSPredicateForm4.equals(jSPredicateForm2);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSPredicateForm jSPredicateForm5 = jSTerm0.applySubstitutionPF(jSSubstitution2);
      jSPredicateForm5.print();
      System.setCurrentTimeMillis(0L);
      jSPredicateForm5.matches(jSPredicateForm0, jSSubstitution3);
      JSPredicateForm jSPredicateForm6 = null;
      try {
        jSPredicateForm6 = new JSPredicateForm("(u1>g[&vADp*N]}1X");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0866739010750055
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9CKZWQ!zwlc-dO8@O");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.toStr();
      jSTerm0.listIterator();
      StringReader stringReader1 = new StringReader("C2uKFAI8wsRqcF");
      stringReader1.close();
      StringReader stringReader2 = new StringReader("Predicateform.print(): 0 elements");
      stringReader1.close();
      jSTerm0.equals(jSPredicateForm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm0.matches(jSPredicateForm0, jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm1.toStr();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm2.listIterator();
      JSPredicateForm jSPredicateForm3 = jSTerm0.standarizerPredicateForm();
      jSTerm0.equals((JSPredicateForm) null);
      jSTerm0.spliterator();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm3.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm4.print();
      jSPredicateForm2.applySubstitutionPF(jSSubstitution1);
      JSPredicateForm jSPredicateForm5 = null;
      try {
        jSPredicateForm5 = new JSPredicateForm("(.|Qk9?x");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7480673485460891
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9C)ZWQ!zc-f6O8@O");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      char[] charArray0 = new char[2];
      charArray0[0] = '9';
      Object object0 = jSTerm0.clone();
      jSTerm0.add(object0);
      charArray0[1] = 'T';
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.toStr();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm0.equals(jSPredicateForm1);
      Predicate<String> predicate0 = Predicate.isEqual((Object) jSTerm0);
      jSTerm0.removeIf(predicate0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) jSPredicateForm0;
      objectArray0[1] = (Object) '9';
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.clonePF();
      objectArray0[2] = (Object) 'T';
      jSSubstitution0.toArray(objectArray0);
      JSPredicateForm jSPredicateForm3 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm3.trimToSize();
      jSTerm0.print();
      System.setCurrentTimeMillis((-2));
      System.setCurrentTimeMillis(1L);
      JSPredicateForm jSPredicateForm4 = new JSPredicateForm((String) null);
      jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm5 = jSPredicateForm3.standarizerPredicateForm();
      assertEquals(2, jSPredicateForm3.capacity());
      
      jSPredicateForm2.toStr();
      assertTrue(jSPredicateForm2.equals((Object)jSPredicateForm5));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9588419161201485
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9C)ZWQ!zc-f6O8@O");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = (JSTerm)jSTerm0.clone();
      JSTerm jSTerm2 = new JSTerm();
      jSTerm1.add((Object) jSTerm2);
      jSTerm0.add((Object) jSTerm1);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals(9, stringBuffer0.length());
      
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      boolean boolean0 = jSPredicateForm2.equals(jSPredicateForm1);
      assertTrue(boolean0);
      
      jSTerm0.listIterator();
      jSSubstitution0.add((Object) "&5Uox<LBG!aU5r");
      jSPredicateForm2.standarizerPredicateForm();
      jSPredicateForm0.isEmpty();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSPredicateForm jSPredicateForm3 = jSTerm0.applySubstitutionPF(jSSubstitution1);
      jSPredicateForm1.print();
      System.setCurrentTimeMillis(923L);
      JSSubstitution jSSubstitution2 = jSPredicateForm2.matches(jSPredicateForm3, jSSubstitution1);
      jSTerm0.toStr();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSPredicateForm jSPredicateForm4 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm4.clonePF();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      System.setCurrentTimeMillis((-4));
      jSTerm0.matches(jSPredicateForm3, jSSubstitution2);
      assertFalse(jSSubstitution2.fail());
      assertTrue(jSPredicateForm3.equals((Object)jSPredicateForm1));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6865700306609468
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "9C)\\ZWQ!zc-f6O8@O";
      StringReader stringReader0 = new StringReader("9C)ZWQ!zc-f6O8@O");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = (JSTerm)jSTerm0.clone();
      JSTerm jSTerm2 = new JSTerm();
      jSTerm2.add((Object) stringReader0);
      jSTerm1.add((Object) jSTerm2);
      jSTerm0.add((Object) jSTerm1);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.toStr();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm1.equals((JSPredicateForm) jSTerm1);
      jSTerm0.listIterator();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) jSTerm0;
      jSPredicateForm1.standarizerPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.get((-2));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.listIterator();
      JSTerm jSTerm1 = new JSTerm();
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }
}
