/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 11:08:26 GMT 2018
 */

package weka.core.stemmers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.core.TechnicalInformation;
import weka.core.stemmers.LovinsStemmer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LovinsStemmer_ESTest extends LovinsStemmer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("");
      lovinsStemmer0.getTechnicalInformation();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      LovinsStemmer.main(stringArray0);
      stringArray0[1] = "";
      stringArray0[2] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[3] = "";
      stringArray0[4] = "";
      lovinsStemmer0.toString();
      stringArray0[5] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("");
      lovinsStemmer0.stemString("");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("The publisher's name.");
      lovinsStemmer0.stem("us");
      lovinsStemmer0.stem(" In ");
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray0);
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray0);
      assertEquals(6, stringArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1172652596890142
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[5];
      lovinsStemmer0.getTechnicalInformation();
      stringArray0[0] = "^(/^ciyO~^";
      stringArray0[1] = "";
      lovinsStemmer0.stem("");
      LovinsStemmer.main(stringArray0);
      stringArray0[2] = ": ";
      stringArray0[3] = "ings";
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      stringArray0[4] = "e}klC;lgh`k>g}94O";
      lovinsStemmer0.stemString("v");
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      lovinsStemmer0.stem(": ");
      lovinsStemmer0.globalInfo();
      String string0 = lovinsStemmer0.stemString("e}klC;lgh`k>g}94O");
      assertEquals("e}klc;lgh`k>g}94", string0);
      
      lovinsStemmer0.stem("<X3Eg`aq9I:}ZU");
      lovinsStemmer0.stem("v");
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9295824671012715
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      String[] stringArray0 = new String[3];
      LovinsStemmer.main(stringArray0);
      stringArray0[0] = "pages";
      stringArray0[1] = "oidal";
      lovinsStemmer0.toString();
      stringArray0[2] = "price";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("");
      LovinsStemmer.main(stringArray0);
      String string0 = lovinsStemmer0.stem("oidal");
      assertEquals("oid", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0236961645570002
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "F";
      stringArray0[1] = "N";
      stringArray0[2] = "<#CmmnrZ";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      String string0 = lovinsStemmer0.stemString("The International Standard Book Number (10 digits).");
      assertEquals("th intern standard book number (10 digit).", string0);
      
      lovinsStemmer0.stemString("N");
      String string1 = lovinsStemmer0.stemString("CONTENTS");
      assertEquals("content", string1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6081583698769648
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("Name(s) of editor(s), typed as indicated in the LaTeX book. If there is also an author field, then the editor field gives the editor of the book or collection in which the reference appears.");
      String string0 = null;
      // Undeclared exception!
      try { 
        lovinsStemmer0.stem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.stemmers.LovinsStemmer", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.852219593363262
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.toString();
      String string0 = "\\uM5Dznc";
      lovinsStemmer0.stemString(string0);
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.stem("^b~[wBv&C}'7r");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.globalInfo();
      lovinsStemmer1.globalInfo();
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.globalInfo();
      lovinsStemmer1.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer2.toString();
      lovinsStemmer2.getRevision();
      lovinsStemmer0.globalInfo();
      LovinsStemmer lovinsStemmer3 = new LovinsStemmer();
      lovinsStemmer3.globalInfo();
      lovinsStemmer2.globalInfo();
      lovinsStemmer0.stem("#voM?E VM+pj");
      lovinsStemmer0.toString();
      lovinsStemmer3.stem("ond");
      lovinsStemmer3.stemString("et");
      TechnicalInformation technicalInformation0 = lovinsStemmer1.getTechnicalInformation();
      assertFalse(technicalInformation0.hasAdditional());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.2700316752557592
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[5];
      lovinsStemmer0.getTechnicalInformation();
      stringArray0[0] = "^(/^ciyO~^";
      stringArray0[1] = "";
      lovinsStemmer0.stem("");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      String string0 = lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string0);
      
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("a a5");
      lovinsStemmer0.stem("");
      LovinsStemmer.main(stringArray0);
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("");
      String string1 = lovinsStemmer0.stem("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.");
      assertTrue(string1.equals((Object)string0));
      
      lovinsStemmer0.stemString("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.");
      String string2 = lovinsStemmer0.getRevision();
      assertEquals("8034", string2);
      
      String string3 = lovinsStemmer0.stemString("8,Hj\"YtuO!JE4G1");
      assertEquals("8,hj\"ytu!je4g1", string3);
      
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      LovinsStemmer.main(stringArray0);
      String string4 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string4);
      
      lovinsStemmer0.getTechnicalInformation();
      String string5 = lovinsStemmer0.stemString("l3*u t>eG=hS0Ahj:");
      assertEquals("l3*u t>eg=hs0ahj:", string5);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2403441730695675
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String string0 = lovinsStemmer0.stemString("Key words used for searching or possibly for annotation.");
      assertEquals("key word us for search or pos for annot.", string0);
      
      lovinsStemmer0.getRevision();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "8034";
      stringArray0[1] = "8034";
      stringArray0[2] = "8034";
      stringArray0[3] = "8034";
      stringArray0[4] = "8034";
      stringArray0[5] = "8034";
      stringArray0[6] = "8034";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      lovinsStemmer0.stemString("8034");
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray0);
      String string2 = lovinsStemmer0.getRevision();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stemString("key word us for search or pos for annot.");
      lovinsStemmer1.getRevision();
      lovinsStemmer0.toString();
      String string3 = lovinsStemmer1.stemString("8034");
      assertTrue(string3.equals((Object)string2));
      
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.toString();
      LovinsStemmer.main(stringArray0);
      String string4 = lovinsStemmer1.stemString("bex");
      assertEquals("bic", string4);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.134432915866057
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("ative");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("v,R?>v)6%/3`SURXY<");
      lovinsStemmer0.stem("v,R?>v)6%/3`SURXY<");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      String string0 = lovinsStemmer0.getRevision();
      assertEquals("8034", string0);
      
      lovinsStemmer0.stem("8034");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stem("icism");
      lovinsStemmer1.toString();
      lovinsStemmer0.stem("icism");
      lovinsStemmer1.globalInfo();
      String string1 = lovinsStemmer1.stem("dex");
      assertEquals("dic", string1);
      
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer1.getTechnicalInformation();
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.stem("Usually the address of the publisher or other type of institution. For major publishing houses, van Leunen recommends omitting the information entirely. For small publishers, on the other hand, you can help the reader by giving the complete address.");
      lovinsStemmer1.toString();
      lovinsStemmer2.toString();
      String string2 = lovinsStemmer2.stemString("9fOlImP>z_n");
      assertEquals("9flimp>z_n", string2);
      
      lovinsStemmer1.globalInfo();
      String string3 = lovinsStemmer2.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string3);
      
      String string4 = lovinsStemmer0.stemString("v,R?>v)6%/3`SURXY<");
      assertEquals("v,r?>v)6%/3`surx<", string4);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.971686045898069
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.toString();
      String string0 = "\\uM5Dznc";
      lovinsStemmer0.stemString(string0);
      lovinsStemmer0.toString();
      String string1 = lovinsStemmer0.stem("u&i");
      assertEquals("u&", string1);
      
      lovinsStemmer0.stemString("");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      String string2 = lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      assertEquals("wek.cor.stemmer.lovinsstemmer", string2);
      
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      String string3 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string3);
      
      lovinsStemmer0.stem("!sl j");
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("weka.core.stemmers.LovinsStemmer");
      String string4 = lovinsStemmer0.stemString("oiduad");
      assertEquals("oiduas", string4);
      
      lovinsStemmer0.getTechnicalInformation();
      String string5 = lovinsStemmer0.stemString("4I*aSv$Q9)yHc5wp.$T");
      assertEquals("4i*asv$q9)yhc5wp.$t", string5);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6773909059316823
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      String[] stringArray0 = new String[3];
      LovinsStemmer.main(stringArray0);
      stringArray0[0] = "pages";
      stringArray0[1] = "oidal";
      lovinsStemmer0.toString();
      stringArray0[2] = "price";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.stemString("Get position of flag -f: ");
      assertEquals("ges posit of flag -f: ", string0);
      
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      String string1 = lovinsStemmer0.stemString("7");
      assertEquals("7", string1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.654131214115974
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "F";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      String string0 = lovinsStemmer0.stem("rud");
      assertEquals("rus", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1326475284847262
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      String string0 = "04b$ms'}HnOcJ(";
      lovinsStemmer0.stemString("/B0$ .~Sh:a");
      lovinsStemmer0.stemString("04b$ms'}HnOcJ(");
      String string1 = "#</XM{OrB";
      lovinsStemmer0.stemString("#</XM{OrB");
      lovinsStemmer0.stemString("V");
      lovinsStemmer0.stemString("8034");
      String string2 = "L7roT}l: (pY@N;|Z";
      lovinsStemmer0.stemString("L7roT}l: (pY@N;|Z");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.stemString("04b$ms'}HnOcJ(");
      lovinsStemmer0.stemString("V");
      // Undeclared exception!
      try { 
        lovinsStemmer0.stemString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.stemmers.LovinsStemmer", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9509891646214447
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[0];
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("Problem reading local properties: ");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("ev7elljpqikyt");
      lovinsStemmer0.stem("Problem reading local properties: ");
      lovinsStemmer0.stemString("ev7elljpqikax");
      lovinsStemmer0.stemString("ev7elljpqikyt");
      lovinsStemmer0.stemString("ev7elljpqikerid");
      lovinsStemmer0.stemString("ev7elljpqikys");
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      // Undeclared exception!
      try { 
        lovinsStemmer0.stemString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.stemmers.LovinsStemmer", e);
      }
  }
}
