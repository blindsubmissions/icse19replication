/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:05:00 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.awt.image.ComponentSampleModel;
import java.awt.image.DataBuffer;
import java.awt.image.DataBufferInt;
import java.awt.image.IndexColorModel;
import java.awt.image.Raster;
import java.awt.image.SampleModel;
import java.awt.image.TileObserver;
import java.awt.image.WritableRaster;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(743, 743);
      assertNull(collection0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElementAt(3201);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.appendAllElements(treeSet0);
      visualListModel0.subList(3201, 3201, false);
      int[] intArray0 = new int[5];
      intArray0[0] = 3201;
      intArray0[1] = 3201;
      intArray0[2] = 3201;
      intArray0[3] = 3201;
      intArray0[4] = 3201;
      visualListModel0.reverseElements(intArray0);
      assertEquals(5, intArray0.length);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int int0 = 0;
      int int1 = 0;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 0
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 255;
      intArray0[1] = 3793;
      intArray0[2] = 999;
      intArray0[3] = 0;
      intArray0[4] = (-1399);
      intArray0[5] = 495;
      intArray0[6] = (-2819);
      visualListModel0.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.reverseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.listIterator();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.subList(0, 0, true);
      visualListModel0.removeElements(0, (-4696), true);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.removeElements(2, 2, false);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      int int0 = 286;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-1), 0, 286);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 286
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 809;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(809, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 809
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[3];
      intArray0[0] = (-42);
      intArray0[1] = (-1540);
      intArray0[2] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      assertArrayEquals(new int[] {(-42), (-1540), 0}, intArray0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      visualListModel0.addElement((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.subList((-722), 0, false);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-722));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-722)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      int int0 = 270;
      intArray0[0] = 270;
      intArray0[1] = 0;
      intArray0[2] = 2315;
      intArray0[3] = (-1);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.getElementAt(1);
      visualListModel0.subList(0, 7, true);
      visualListModel0.moveUpIndex(0);
      BigInteger bigInteger0 = BigInteger.ONE;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, 7, intArray0, 1, 0, bigInteger0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.441015278026703
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      visualListModel0.subList(0, 6809, false);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) null);
      int int0 = (-672);
      visualListModel0.removeElements((-672), (-1516), false);
      visualListModel0.moveDownIndex((-496));
      visualListModel0.getValidElements();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.reverseElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      int[] intArray1 = new int[0];
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.getSize();
      visualListModel0.addAllElements(collection0);
      visualListModel0.moveDownIndexes(intArray1);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(2890);
      visualListModel0.clearData();
      visualListModel0.subList(2890, 2890);
      visualListModel0.addAllElements(2890, (Collection<VisualPageListItem>) null);
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.subList(2890, (-3521));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2890) > toIndex(-3521)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.reverseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.listIterator();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.subList(0, 0, true);
      visualListModel0.addAllElements((-419), (Collection<VisualPageListItem>) vector0);
      visualListModel0.getElements();
      visualListModel0.subList((-419), 0);
      int int0 = 180;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-988), (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.304619384820672
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements(50, (Collection<VisualPageListItem>) vector0);
      visualListModel0.getElements();
      visualListModel0.getElementAt(50);
      visualListModel0.prependAllElements(vector0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      intArray0[0] = 50;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveDownIndex(50);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      visualListModel0.addElement((VisualPageListItem) null);
      List<VisualPageListItem> list0 = new LinkedList<VisualPageListItem>();
      visualListModel0.prependAllElements(list0);
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = (-694);
      intArray0[2] = 3;
      intArray0[3] = 0;
      intArray0[4] = 1204;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.getElements();
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 0;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.removeElements(intArray1, false);
      visualListModel0.moveUpIndexes(intArray1);
      assertFalse(intArray1.equals((Object)intArray0));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0982737395252498
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      visualListModel0.addElement((VisualPageListItem) null);
      List<VisualPageListItem> list0 = new Vector<VisualPageListItem>();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements(46, (Collection<VisualPageListItem>) list0);
      visualListModel0.getElements();
      visualListModel0.getElementAt(46);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(vector0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray0 = new int[5];
      intArray0[0] = 46;
      intArray0[1] = 46;
      intArray0[2] = 46;
      intArray0[3] = 46;
      intArray0[4] = 46;
      visualListModel0.undeleteElements(intArray0);
      assertArrayEquals(new int[] {46, 46, 46, 46, 46}, intArray0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.441015278026703
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.appendAllElements(arrayList0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      visualListModel0.removeElements((-4696), 0, true);
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.getValidElements();
      visualListModel3.addAllElements((-4696), collection0);
      assertEquals(0, visualListModel3.getSize());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0262296229952916
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      visualListModel0.addAllElements(0, collection0);
      int int0 = 0;
      visualListModel0.moveUpIndex(0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      int int1 = 0;
      visualListModel0.removeElements(0, 0, false);
      int int2 = (-1);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9512595041439564
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements(50, (Collection<VisualPageListItem>) vector0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(1, 1, false);
      Object object0 = new Object();
      visualListModel0.getSize();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel1.addAllElements(50, (Collection<VisualPageListItem>) vector0);
      visualListModel1.getElements();
      VisualListModel visualListModel2 = new VisualListModel();
      assertEquals(0, visualListModel2.getSize());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getElements();
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7480673485460891
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
      visualListModel0.getElements();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      vector0.setSize(1107);
      vector0.add((VisualPageListItem) null);
      stack0.addAll((Collection<? extends VisualPageListItem>) vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(vector0);
      // Undeclared exception!
      try { 
        visualListModel1.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.506661812497002
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      visualListModel0.addAllElements(0, collection0);
      visualListModel0.moveUpIndex(0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(0, 0, false);
      Object object0 = new Object();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collection0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-1251), (-1), false);
      int[] intArray0 = new int[3];
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      visualListModel0.data = vector0;
      intArray0[0] = (-2099);
      intArray0[1] = (-1251);
      intArray0[2] = (-1251);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.subList((-1251), (-1251), true);
      visualListModel0.getElements();
      visualListModel1.moveUpIndex((-1251));
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.removeElements(intArray0, true);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-2112), (-1251), false);
      assertNull(collection0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
      visualListModel0.getElements();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      vector0.setSize(1107);
      vector0.add((VisualPageListItem) null);
      stack0.addAll((Collection<? extends VisualPageListItem>) vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(vector0);
      VisualListModel visualListModel2 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6094379124341003
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      vector0.setSize(1107);
      vector0.add((VisualPageListItem) null);
      stack0.addAll((Collection<? extends VisualPageListItem>) vector0);
      visualListModel0.setData(vector0);
      stack0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[9];
      intArray1[0] = 155;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = (-4696);
      intArray1[4] = 0;
      intArray1[5] = (-2595);
      intArray1[6] = 0;
      intArray1[7] = 0;
      intArray1[8] = 0;
      visualListModel0.reverseElements(intArray1);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.addAllElements((-741), collection0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9356005054539458
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements(1050, (Collection<VisualPageListItem>) vector0);
      visualListModel0.getElements();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      vector0.setSize(1050);
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(vector0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.removeElements(intArray0, true);
      visualListModel1.moveDownIndexes(intArray0);
      int[] intArray1 = new int[5];
      intArray1[0] = 1050;
      intArray1[1] = 1122;
      intArray1[2] = 1050;
      intArray1[3] = 1050;
      intArray1[4] = 1050;
      try { 
        visualListModel1.rotateClockwiseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1050
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.setSize(2265);
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(vector0);
      visualListModel0.addElementAt((VisualPageListItem) null, 2265);
      visualListModel0.addElementAt((VisualPageListItem) null, 1242);
      visualListModel0.addAllElements((-181), (Collection<VisualPageListItem>) vector0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>(vector0);
      visualListModel0.prependAllElements(arrayList0);
      assertEquals(4532, visualListModel0.getSize());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements(1050, (Collection<VisualPageListItem>) vector0);
      visualListModel0.getElements();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      vector0.setSize(1050);
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(vector0);
      VisualListModel visualListModel2 = new VisualListModel();
      int int0 = (-4696);
      // Undeclared exception!
      try { 
        visualListModel1.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.setSize(2265);
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(vector0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(2265, (Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      vector0.setSize(1107);
      vector0.add((VisualPageListItem) null);
      stack0.addAll((Collection<? extends VisualPageListItem>) vector0);
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.moveUpIndex(0);
      assertEquals(1108, visualListModel0.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0262296229952916
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      int int0 = 255;
      stack0.setSize(255);
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.appendAllElements(stack0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.removeElements(intArray0, false);
      visualListModel0.removeElements(255, 255, true);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.setSize(255);
      stack0.setSize(3522);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      stack0.addAll((Collection<? extends VisualPageListItem>) vector0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.setSize(255);
      stack0.setSize(3522);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      stack0.insertElementAt((VisualPageListItem) null, 3522);
      vector0.add((VisualPageListItem) null);
      stack0.addAll((Collection<? extends VisualPageListItem>) vector0);
      visualListModel0.setData(vector0);
      visualListModel0.moveUpIndex(1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.subList(3522, 10);
      visualListModel1.addElementAt((VisualPageListItem) null, 255);
      visualListModel1.elementChanged((VisualPageListItem) null);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.128549004875151
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.moveDownIndexes(intArray0);
      stack0.setSize(255);
      stack0.setSize(3522);
      visualListModel0.clearData();
      visualListModel0.getValidElements();
      visualListModel0.getElements();
      visualListModel0.updateElementAt(255, (VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(255, 2716, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.951259504143956
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.elementsChanged();
      visualListModel0.appendAllElements(stack0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveDownIndex((-808));
      visualListModel0.moveUpIndex(1443);
      visualListModel2.addElementAt((VisualPageListItem) null, (-206));
      visualListModel0.reverseElements(intArray0);
      assertFalse(visualListModel0.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6674619334292948
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector1 = visualListModel1.data;
      visualListModel0.setData(vector0);
      vector1.setSize(11);
      vector0.setSize(0);
      Vector<VisualPageListItem> vector2 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.addAll((Collection<? extends VisualPageListItem>) vector1);
      visualListModel0.setData(vector1);
      int[] intArray0 = new int[2];
      intArray0[0] = 3522;
      intArray0[1] = 0;
      try { 
        visualListModel1.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 3521
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8343719702816237
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.setSize(255);
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.setData((Vector<VisualPageListItem>) stack0);
      VisualListModel visualListModel3 = new VisualListModel();
      int[] intArray1 = new int[4];
      intArray1[0] = 255;
      intArray1[1] = 255;
      intArray1[2] = 255;
      intArray1[3] = 255;
      visualListModel0.undeleteElements(intArray1);
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      visualListModel2.moveDownIndexes(intArray1);
      VisualListModel visualListModel5 = new VisualListModel();
      visualListModel1.undeleteElements(intArray1);
      VisualListModel visualListModel6 = new VisualListModel();
      visualListModel3.rotateAnticlockwiseElements(intArray1);
      assertEquals(0, visualListModel3.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector1 = visualListModel1.data;
      visualListModel0.setData(vector0);
      vector1.setSize(13);
      Vector<VisualPageListItem> vector2 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.addAll((Collection<? extends VisualPageListItem>) vector1);
      int[] intArray0 = new int[2];
      intArray0[0] = 13;
      intArray0[1] = 13;
      try { 
        visualListModel1.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 13
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.7481554572476763
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector1 = visualListModel1.data;
      visualListModel0.setData(vector0);
      vector1.setSize(13);
      Vector<VisualPageListItem> vector2 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.addAll((Collection<? extends VisualPageListItem>) vector1);
      int[] intArray0 = new int[2];
      intArray0[0] = 13;
      intArray0[1] = 13;
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel1.elementChanged((VisualPageListItem) null);
      visualListModel1.elementChanged((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      assertEquals(2, vector0.size());
  }
}
