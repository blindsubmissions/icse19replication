/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:37:07 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = 176;
      linkedList0.pollLast();
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.getFetchSize();
      fBCachedFetcher0.setFetchSize(31);
      fBCachedFetcher0.absolute(34);
      fBCachedFetcher0.absolute(176);
      fBCachedFetcher0.last();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = 176;
      Integer integer0 = new Integer(176);
      linkedList0.removeLastOccurrence(integer0);
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      linkedList0.pollLast();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.setFetchSize(0);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.absolute(34);
      fBCachedFetcher0.absolute(176);
      fBCachedFetcher0.last();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.458311329683084
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.pollLast();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.setFetchSize(0);
      fBCachedFetcher0.last();
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.next();
      linkedList0.pollLast();
      linkedList0.stream();
      fBCachedFetcher0.setFetchSize((-1619));
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.first();
      fBCachedFetcher0.previous();
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      Integer integer0 = new Integer(176);
      Integer.getInteger("");
      linkedList0.pollLast();
      int int0 = 34;
      int int1 = 0;
      fBCachedFetcher0.setFetchSize(0);
      fBCachedFetcher0.absolute(34);
      fBCachedFetcher0.absolute(176);
      fBCachedFetcher0.last();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.close();
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.setFetchSize(176);
      fBCachedFetcher0.next();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow((byte[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3693821196946767
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = 176;
      Integer integer0 = new Integer(176);
      linkedList0.removeLastOccurrence(integer0);
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      fBCachedFetcher0.isAfterLast();
      int int1 = 34;
      fBCachedFetcher0.setFetchSize(0);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.absolute(34);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.pollLast();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.setFetchSize(0);
      fBCachedFetcher0.last();
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.next();
      linkedList0.pollLast();
      linkedList0.stream();
      fBCachedFetcher0.setFetchSize((-1619));
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.first();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.first();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.absolute((-1003));
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.relative(0);
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.last();
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals((-1619), fBCachedFetcher0.getFetchSize());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4336989513854284
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      Integer integer0 = new Integer(176);
      Integer integer1 = new Integer(1816);
      linkedList0.removeLastOccurrence(integer0);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.isAfterLast();
      int int0 = 34;
      int int1 = 0;
      fBCachedFetcher0.setFetchSize(34);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.absolute(176);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.pollFirst();
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.next();
      linkedList0.pollLast();
      linkedList0.stream();
      fBCachedFetcher1.isLast();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      Integer integer0 = new Integer(176);
      linkedList0.removeLastOccurrence(integer0);
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      fBCachedFetcher0.first();
      fBCachedFetcher0.isFirst();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.relative(176);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3728173314236867
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      Integer integer0 = new Integer(176);
      linkedList0.removeLastOccurrence(integer0);
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.beforeFirst();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.pollLast();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.first();
      fBCachedFetcher1.previous();
      fBCachedFetcher0.absolute(100);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.relative((-2396));
      fBCachedFetcher1.last();
      fBCachedFetcher1.updateRow(byteArray0);
      fBCachedFetcher1.isEmpty();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8662160235859526
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[5][2];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-112);
      byteArray1[1] = (byte)21;
      byteArray1[2] = (byte)66;
      byteArray1[3] = (byte) (-92);
      byteArray1[4] = (byte) (-108);
      byteArray1[5] = (byte) (-121);
      byte byte0 = (byte) (-45);
      byteArray1[6] = (byte) (-45);
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isFirst();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.previous();
      // Undeclared exception!
      try { 
        fBCachedFetcher1.absolute((byte) (-92));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      int int0 = 189;
      Integer integer0 = new Integer(189);
      linkedList0.removeLastOccurrence(integer0);
      byte[][] byteArray0 = new byte[19][0];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.updateRow(byteArray0);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.573688599722804
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      Integer integer0 = new Integer(150);
      linkedList0.removeLastOccurrence(integer0);
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isFirst();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      fBCachedFetcher0.next();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.pollLast();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.first();
      fBCachedFetcher1.previous();
      fBCachedFetcher0.absolute(100);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.relative((-2423));
      fBCachedFetcher1.insertRow((byte[][]) null);
      fBCachedFetcher1.last();
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher1.next();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }
}
