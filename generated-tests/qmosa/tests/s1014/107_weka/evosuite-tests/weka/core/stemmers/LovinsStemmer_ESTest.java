/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:17:31 GMT 2018
 */

package weka.core.stemmers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.core.TechnicalInformation;
import weka.core.stemmers.LovinsStemmer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LovinsStemmer_ESTest extends LovinsStemmer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("oa9)Z*G");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "oa9)Z*G";
      lovinsStemmer0.getRevision();
      stringArray0[1] = "oa9)Z*G";
      stringArray0[2] = "oa9)Z*G";
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("oa9)Z*G");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getRevision();
      stringArray0[3] = "oa9)z*g";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.getRevision();
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.stemString("sQ@u>wAA\"X@YwCe");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("");
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("'*,;4%l`t^43AZ\"Y");
      lovinsStemmer0.stemString("s");
      LovinsStemmer.main((String[]) null);
      LovinsStemmer.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.791759469228055
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.stem("U");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[2] = "";
      stringArray0[3] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[4] = "U";
      stringArray0[5] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      LovinsStemmer.main(stringArray0);
      String string0 = lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer based on the lovins stemmer, described here:\n\njulie beth lovins (1968). development of a stemming algorithm. mechanical translation and computational linguistics. 11:22-31.", string0);
      
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      String string2 = lovinsStemmer0.stemString("?V%l>ZH|!=2sSA5UN\"");
      assertEquals("?v%l>zh|!=2s5un\"", string2);
      
      lovinsStemmer0.stem("");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("a stemmer based on the lovins stemmer, described here:\n\njulie beth lovins (1968). development of a stemming algorithm. mechanical translation and computational linguistics. 11:22-31.");
      String string3 = lovinsStemmer0.getRevision();
      assertEquals("8034", string3);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1376533984127972
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.stemString("9=yn]1- dCpB");
      String string0 = lovinsStemmer0.stemString("l#XWuO6S.KefLCz'4l");
      assertEquals("l#xwuo6.keflcz'4l", string0);
      
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("s");
      String string1 = lovinsStemmer0.getRevision();
      assertEquals("8034", string1);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "8034";
      stringArray0[1] = "9=yn]1- dcpb";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("$DJm@ `m_");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("");
      String string2 = lovinsStemmer0.stem("Xh\"");
      assertEquals("xh\"", string2);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.7971347991462773
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ARw^o;/LH<{_H76";
      stringArray0[1] = "Ek7m}";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("TX^n");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stem("language");
      lovinsStemmer0.stem("Ek7m}");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("PUBLISHER");
      // Undeclared exception!
      try { 
        lovinsStemmer0.stem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.stemmers.LovinsStemmer", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6264744012605673
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("MRNUMBER");
      String string0 = lovinsStemmer0.stem("mrnumber");
      assertEquals("mrnumber", string0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "mrnumber";
      stringArray0[1] = "MRNUMBER";
      String string1 = lovinsStemmer0.stemString("cid");
      assertEquals("cis", string1);
      
      String string2 = lovinsStemmer0.getRevision();
      assertEquals("8034", string2);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0821955300387673
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.globalInfo();
      String string0 = lovinsStemmer0.stem(";5jutex");
      assertEquals(";5jutic", string0);
      
      String string1 = lovinsStemmer0.stem("ariness");
      assertEquals("ar", string1);
      
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.getRevision();
      lovinsStemmer1.globalInfo();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "ar";
      stringArray0[1] = "ar";
      stringArray0[2] = "8034";
      stringArray0[3] = ";5jutex";
      stringArray0[4] = "";
      stringArray0[5] = ";5jutex";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer1.toString();
      String string2 = lovinsStemmer1.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string2);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.525304011384848
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("MRNUMBER");
      lovinsStemmer0.stem("MRNUMBER");
      lovinsStemmer0.stem(";5juvad");
      String[] stringArray0 = new String[10];
      stringArray0[0] = "MRNUMBER";
      stringArray0[1] = "";
      LovinsStemmer.main(stringArray0);
      assertEquals(10, stringArray0.length);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8376855393739576
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("MRNUMBER");
      lovinsStemmer0.stem("lily");
      lovinsStemmer0.stem("lil");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "mrnumber";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.getRevision();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer1.stemString(";5juvaslud");
      lovinsStemmer0.stemString(";5juvaslus");
      LovinsStemmer.main(stringArray0);
      LovinsStemmer.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2120994351006502
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      String string0 = lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string0);
      
      LovinsStemmer.main((String[]) null);
      String[] stringArray0 = new String[1];
      lovinsStemmer0.getRevision();
      stringArray0[0] = "&~@'M,nZLJ.j";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("");
      lovinsStemmer0.getRevision();
      LovinsStemmer.main((String[]) null);
      LovinsStemmer.main(stringArray0);
      String string1 = lovinsStemmer0.stemString("&~@'M,nZLJ.j");
      assertEquals("&~@'m,nzlj.j", string1);
      
      LovinsStemmer.main((String[]) null);
      String string2 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string2);
      
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("dex");
      lovinsStemmer0.stem("&~@'M,nZLJ.j");
      lovinsStemmer0.toString();
      String string3 = lovinsStemmer0.getRevision();
      assertEquals("8034", string3);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.137808159182962
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "_x?!XL0HWE>bFRt";
      stringArray0[1] = "Mw]";
      lovinsStemmer0.getTechnicalInformation();
      stringArray0[2] = "b";
      stringArray0[3] = "ionalism";
      stringArray0[4] = "AZKVlvE(q2 ";
      stringArray0[5] = "lAYbx\u0007a5cQ!AZ:";
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      lovinsStemmer0.stem("7J'n=>$3d6' X90gx2W");
      String string1 = lovinsStemmer0.stemString("-8NXd3}~KV,>BK2&:");
      assertEquals("-8nxd3}~kv,>bk2&:", string1);
      
      String string2 = lovinsStemmer0.getRevision();
      assertEquals("8034", string2);
      
      String string3 = lovinsStemmer0.stemString("metr");
      assertEquals("meter", string3);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9242074232752622
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "_x?!XL0HWE>bFRt";
      lovinsStemmer0.stem("xtb");
      lovinsStemmer0.globalInfo();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("]B!r");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("ond");
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      String[] stringArray1 = new String[4];
      stringArray1[0] = "Mw]";
      stringArray1[1] = "";
      stringArray1[2] = "Copyright information.";
      stringArray1[3] = "]b!r";
      LovinsStemmer.main(stringArray1);
      assertEquals(4, stringArray1.length);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.2120994351006502
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "_x?!XL0HWE>bFRt";
      stringArray0[1] = "Mw]";
      lovinsStemmer0.stemString("lovinsstemmerpex");
      lovinsStemmer0.getTechnicalInformation();
      stringArray0[2] = "b";
      stringArray0[3] = "ionalism";
      stringArray0[4] = "AZKVlvE(q2 ";
      stringArray0[5] = "lAYbx\u0007a5cQ!AZ:";
      lovinsStemmer0.stem("Mw]");
      stringArray0[6] = "Mw]";
      stringArray0[7] = "5R#FFz";
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("lAYbx\u0007a5cQ!AZ:");
      stringArray0[8] = "ies";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("ionalism");
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.globalInfo();
      String string1 = lovinsStemmer0.getRevision();
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8167653050890078
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "oa9)Z*G";
      lovinsStemmer0.getRevision();
      stringArray0[1] = "oa9)Z*G";
      stringArray0[2] = "oa9)Z*G";
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("oa9)Z*G");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("pex");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("lovinsstemmeryt");
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.globalInfo();
      String string1 = lovinsStemmer0.getRevision();
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8537447706086106
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LovinsStemmer.main((String[]) null);
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.stem("=#Y#}!,B.cd");
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      String string0 = lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("NK{c\"\"iS?^ %W0F{;");
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("lovinsstemmeryther");
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      String string1 = lovinsStemmer0.getRevision();
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8410205459886739
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.stemString("9=yn]1- dCpB");
      lovinsStemmer0.stemString("l#XWuO6S.KefLCz'4l");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("ionet");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "5R#FFz";
      stringArray0[1] = "5.7 < 5.70001 ? ";
      stringArray0[2] = "9=yn]1- dCpB";
      stringArray0[3] = "ionalism";
      lovinsStemmer0.getTechnicalInformation();
      stringArray0[4] = "9=yn]1- dCpB";
      stringArray0[5] = "l#XWuO6S.KefLCz'4l";
      stringArray0[6] = "ionpand";
      stringArray0[7] = "AZKVlvE(q2 ";
      stringArray0[8] = "ionet";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("l#XWuO6S.KefLCz'4l");
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.globalInfo();
      String string1 = lovinsStemmer0.getRevision();
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8804901314870051
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ARw^o;/LH<{_H76";
      stringArray0[1] = "Ek7m}";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("TX^n");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stem("language");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("langu");
      lovinsStemmer0.stemString("^?B\"z");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("^?B\"z");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("keflcz'4lmit");
      lovinsStemmer0.stemString("Mn");
      lovinsStemmer0.getRevision();
      TechnicalInformation technicalInformation0 = lovinsStemmer0.getTechnicalInformation();
      assertFalse(technicalInformation0.hasAdditional());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.556183821230542
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("V>>*G6*:9<K:PqpH");
      lovinsStemmer0.stem("");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.globalInfo();
      String[] stringArray0 = new String[7];
      lovinsStemmer0.stemString("3@z>WA/vun&i-");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("ond");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stemString("3@z>wa/vun&i-");
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.stemString("The month in which the work was published or, for an unpublished work, in which it was written. You should use the standard three-letter abbreviation, as described in Appendix B.1.3 of the LaTeX book.");
      LovinsStemmer.main(stringArray0);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "3@z>wa/vun&i-";
      stringArray1[1] = "V>>*G6*:9<K:PqpH";
      stringArray1[2] = "3@z>WA/vun&i-";
      LovinsStemmer.main(stringArray1);
      assertNotSame(stringArray1, stringArray0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.8587543173837989
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[2];
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("bookax");
      LovinsStemmer.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.2700316752557592
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      lovinsStemmer0.getRevision();
      stringArray0[1] = "oa9)Z*G";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("oa9)Z*G");
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("MISC");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("bex");
      lovinsStemmer0.stem("xtbuad");
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.getRevision();
      assertEquals("8034", string0);
  }
}
