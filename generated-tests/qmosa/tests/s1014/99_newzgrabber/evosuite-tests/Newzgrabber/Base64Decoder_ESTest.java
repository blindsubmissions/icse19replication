/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:33:25 GMT 2018
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import javax.swing.DebugGraphics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-98);
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(sequenceInputStream0, (byte)123);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      Newzgrabber.verbose = true;
      base64Decoder0.ABORT = false;
      base64Decoder0.setLineCount(0L);
      Newzgrabber.main((String[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      base64Decoder0.ProgressSet = true;
      base64Decoder0.decodeStream();
      bufferedCustomInputStream0.read();
      base64Decoder0.ABORT = false;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(2L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte) (-57);
      byteArray0[3] = (byte)68;
      byteArray0[4] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(sequenceInputStream0, (byte)123);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      bufferedCustomInputStream0.closeTemp();
      base64Decoder0.setLineCount((-1L));
      Newzgrabber.main((String[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      base64Decoder0.decodeStream();
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(byteArrayInputStream0);
      bufferedCustomInputStream1.read();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-98);
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(sequenceInputStream0, (byte)123);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      Newzgrabber.verbose = true;
      base64Decoder0.ABORT = true;
      base64Decoder0.setLineCount(0L);
      Newzgrabber.main((String[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      base64Decoder0.ProgressSet = true;
      base64Decoder0.decodeStream();
      int int0 = bufferedCustomInputStream0.read();
      assertEquals(0, int0);
      
      base64Decoder0.ABORT = true;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(0L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.2868359830561607
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-98);
      byteArray0[2] = (byte)10;
      byteArray0[4] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(sequenceInputStream0, (byte)123);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder2.setLineCount(1L);
      base64Decoder2.decodeStream();
      bufferedCustomInputStream0.read();
      base64Decoder0.decodeStream();
      base64Decoder1.decodeStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      Base64Decoder base64Decoder3 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      BufferedCustomInputStream bufferedCustomInputStream1 = null;
      try {
        bufferedCustomInputStream1 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.2711893730418441
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)52;
      byteArray0[2] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 1654);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.setLineCount((-361L));
      Newzgrabber.main((String[]) null);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0, false);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream1, (OutputStream) null);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1086);
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream0);
      base64Decoder0.MARKLIMIT = (int) (byte)10;
      Newzgrabber.IsBatch = true;
      base64Decoder0.decodeStream();
      assertEquals((-361L), base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.18490739916777568
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)123;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)123;
      byteArray0[6] = (byte)52;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      PrintStream printStream0 = DebugGraphics.logStream();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      Base64Decoder base64Decoder3 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      base64Decoder3.decodeStream();
      Base64Decoder base64Decoder4 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      Base64Decoder base64Decoder5 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      byteArrayInputStream0.reset();
      Base64Decoder base64Decoder6 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      byteArrayInputStream0.markSupported();
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(byteArrayInputStream0);
      Base64Decoder base64Decoder7 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      Base64Decoder base64Decoder8 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      base64Decoder0.decodeStream();
      base64Decoder4.decodeStream();
      base64Decoder3.decodeStream();
      base64Decoder1.decodeStream();
      assertFalse(base64Decoder1.equals((Object)base64Decoder6));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.20619205063323187
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte)43;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      bufferedCustomInputStream0.readLine();
      byteArrayInputStream0.reset();
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder1.decodeStream();
      assertEquals(0L, base64Decoder1.getLineCount());
  }
}
