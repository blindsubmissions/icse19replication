/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:33:32 GMT 2018
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat("BtGA.@V~y-IK", true, "BtGA.@V~y-IK");
      outputFormat0.setNewlines(true);
      outputFormat0.setLineSeparator("BtGA.@V~y-IK");
      outputFormat0.setIndent("BtGA.@V~y-IK");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setPadText(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterNTags((-1));
      outputFormat0.getNewLineAfterNTags();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('G');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (G)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setEncoding("");
      boolean boolean0 = true;
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('A');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (A)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isExpandEmptyElements();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent((String) null);
      outputFormat0.setLineSeparator(" ");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setPadText(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.isOmitEncoding();
      outputFormat1.getNewLineAfterNTags();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("|f#?6WrvWtE*d");
      outputFormat1.setOmitEncoding(true);
      outputFormat0.isOmitEncoding();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "|f#?6WrvWtE*d";
      stringArray0[1] = "K?";
      stringArray0[2] = "|f#?6WrvWtE*d";
      stringArray0[3] = "|f#?6WrvWtE*d";
      stringArray0[4] = null;
      stringArray0[5] = "";
      outputFormat0.parseOptions(stringArray0, 4431);
      outputFormat0.setIndent("");
      assertEquals(" ", outputFormat0.getLineSeparator());
      
      outputFormat2.isOmitEncoding();
      outputFormat1.getEncoding();
      outputFormat2.setNewLineAfterDeclaration(false);
      outputFormat2.setNewlines(false);
      assertTrue(outputFormat2.isTrimText());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = false;
      OutputFormat outputFormat0 = new OutputFormat("3b", false);
      outputFormat0.setEncoding("3b");
      outputFormat0.setEncoding("3b");
      outputFormat0.setLineSeparator("3b");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator("");
      outputFormat0.setXHTML(false);
      outputFormat0.setTrimText(false);
      String[] stringArray0 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      
      boolean boolean0 = outputFormat0.isXHTML();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewlines(false);
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals(0, int0);
      
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      boolean boolean1 = outputFormat0.isPadText();
      assertTrue(boolean1 == boolean0);
      
      String string0 = outputFormat0.getIndent();
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertNull(string0);
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("");
      outputFormat0.setLineSeparator("ZH|!=2sSA");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setLineSeparator("U+Y_l3i");
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.getLineSeparator();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent("");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setNewlines(false);
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat0.setXHTML(true);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat1.isOmitEncoding();
      outputFormat0.setTrimText(true);
      outputFormat1.isTrimText();
      outputFormat0.isNewLineAfterDeclaration();
      assertEquals("  ", outputFormat0.getIndent());
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isExpandEmptyElements());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-lineSeparator");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndentSize(1);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndentSize(8);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isExpandEmptyElements();
      outputFormat0.getEncoding();
      outputFormat0.setIndentSize(1);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setIndentSize(0);
      assertEquals("-lineSeparator", outputFormat0.getLineSeparator());
      
      outputFormat1.setNewlines(false);
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5400363038209806
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat0.isNewlines());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      outputFormat0.setNewlines(true);
      stringArray0[1] = "d`G'Je";
      stringArray0[2] = "&WZ~FD[67@Lr!-0";
      stringArray0[3] = "";
      stringArray0[4] = "-encoding";
      OutputFormat.createCompactFormat();
      stringArray0[5] = "HEbmNcVv3\"";
      stringArray0[6] = "SqXqZ6j[5rKu*:\"";
      stringArray0[7] = "-In#PuhXZW";
      stringArray0[8] = "J=";
      outputFormat0.parseOptions(stringArray0, 2071);
      outputFormat0.setXHTML(true);
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setLineSeparator((String) null);
      outputFormat0.isTrimText();
      outputFormat1.getIndent();
      outputFormat1.setPadText(true);
      outputFormat1.setAttributeQuoteCharacter('\"');
      assertTrue(outputFormat1.isPadText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "\"I9ht3k";
      stringArray0[1] = "";
      stringArray0[2] = ")";
      stringArray0[3] = "";
      stringArray0[4] = "$e7&yA)|i)0/";
      stringArray0[5] = "";
      stringArray0[6] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setEncoding("-expandEmpty");
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertEquals("-expandEmpty", outputFormat0.getEncoding());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5232109529528914
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.setEncoding("=| %`.N>s;A\"(og!,;|");
      String string0 = null;
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      boolean boolean0 = true;
      outputFormat1.setEncoding("");
      outputFormat0.setPadText(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent(true);
      String string1 = null;
      outputFormat0.setIndent((String) null);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setIndent(true);
      outputFormat0.setNewlines(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 2434);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndentSize(896);
      outputFormat0.getLineSeparator();
      outputFormat0.isPadText();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterNTags(1019);
      outputFormat0.setPadText(false);
      outputFormat0.isNewlines();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.getLineSeparator();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setIndent("\n");
      outputFormat0.setEncoding("");
      outputFormat0.isPadText();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.getIndent();
      outputFormat1.getEncoding();
      outputFormat0.setIndent("UTF-8");
      OutputFormat.createCompactFormat();
      outputFormat1.setEncoding(":@u5%b?FS'Y^M");
      OutputFormat.createPrettyPrint();
      boolean boolean0 = outputFormat1.isNewlines();
      assertEquals(":@u5%b?FS'Y^M", outputFormat1.getEncoding());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.2816340498925647
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "01H4Is";
      outputFormat0.setIndent(true);
      stringArray0[4] = ":)<VTG5:EW2$'J+Nq";
      outputFormat0.setTrimText(false);
      outputFormat0.setNewLineAfterNTags(1044);
      stringArray0[5] = "\"C2U*#8KHL@Q5";
      outputFormat0.setLineSeparator("UTF-8");
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.setXHTML(true);
      outputFormat0.parseOptions(stringArray0, 39);
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertEquals(1044, outputFormat0.getNewLineAfterNTags());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.3474375882098704
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent((String) null);
      outputFormat0.setNewlines(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent("-padText");
      outputFormat0.setLineSeparator("-padText");
      outputFormat0.setPadText(true);
      outputFormat0.setEncoding("-padText");
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setTrimText(false);
      outputFormat1.setIndent(true);
      outputFormat0.getNewLineAfterNTags();
      outputFormat1.setNewlines(false);
      String[] stringArray0 = new String[2];
      outputFormat0.setIndent("-padText");
      stringArray0[0] = "-indentSize";
      stringArray0[1] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6001660731596457
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newlines");
      assertFalse(outputFormat0.isNewlines());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "-newlines";
      stringArray0[4] = "-newlines";
      stringArray0[5] = "-newlines";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isNewlines());
      assertEquals(6, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9504094967322703
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-expandEmpty";
      outputFormat0.setTrimText(true);
      stringArray0[1] = "&=SaLz%fc[W]&OB&wN66";
      stringArray0[2] = "1]B>uVE~j]t?S/R/dw";
      outputFormat0.setLineSeparator("&=SaLz%fc[W]&OB&wN66");
      stringArray0[3] = "";
      stringArray0[4] = "-lineSeparator";
      stringArray0[5] = "";
      stringArray0[6] = "=s.Ij<2l!j";
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setOmitEncoding(true);
      outputFormat0.setLineSeparator("hT");
      stringArray0[7] = "";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("hT", outputFormat0.getLineSeparator());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.143952200643869
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indent");
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-indent";
      stringArray0[1] = "-indent";
      stringArray0[2] = "-indent";
      stringArray0[3] = "-indent";
      outputFormat0.setEncoding("}y40X|P<k*M");
      stringArray0[4] = "-indent";
      stringArray0[5] = "-indent";
      OutputFormat.createCompactFormat();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0342019871053743
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[3];
      String string0 = "-xhtml";
      String string1 = "-newlines";
      outputFormat0.setEncoding("-newlines");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(false);
      stringArray0[0] = "-xhtml";
      String string2 = "-expandEmpty&=SaLz%fc[W]&OB&wN66";
      stringArray0[1] = "-expandEmpty&=SaLz%fc[W]&OB&wN66";
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.setTrimText(false);
      stringArray0[2] = " ";
      outputFormat0.parseOptions(stringArray0, 1711);
      outputFormat0.parseOptions(stringArray0, 673);
      outputFormat0.parseOptions(stringArray0, 1711);
      int int0 = 39;
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.parseOptions(stringArray0, 0);
      String string3 = "-indent";
      outputFormat0.setIndent("-indent");
      outputFormat0.setIndent(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-325408716));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -325408716
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("expanpty", true, "`e#cdRPsGl");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "`e#cdRPsGl";
      stringArray0[1] = "expanpty";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.parseOptions(stringArray0, 1);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "-suppressDeclaration";
      stringArray1[1] = "-suppressDeclaration";
      outputFormat0.getNewLineAfterNTags();
      int int0 = outputFormat0.parseOptions(stringArray1, 0);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7309439966762843
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-padText";
      stringArray0[1] = "0V8llVXC<%#Js";
      stringArray0[2] = "}(-5 sz m8sy";
      stringArray0[3] = "d/6";
      outputFormat0.setEncoding("0V8llVXC<%#Js");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent(false);
      outputFormat1.setExpandEmptyElements(false);
      outputFormat1.setTrimText(false);
      stringArray0[4] = "-suppressDeclaration";
      outputFormat0.parseOptions(stringArray0, 510);
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 4760);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-974));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -974
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "org.dom4j.io.OutputFormat";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-indentSize";
      stringArray0[3] = "rjaJ8? !aR";
      String string0 = "UTF-8";
      stringArray0[4] = "UTF-8";
      stringArray0[5] = "Invalid attribute quote character (";
      stringArray0[6] = "-n~wl*";
      stringArray0[7] = "-suppressDeclaration";
      stringArray0[8] = "<86fjrZ+lph";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"rjaJ8? !aR\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
