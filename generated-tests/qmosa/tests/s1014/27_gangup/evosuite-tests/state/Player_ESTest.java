/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:25:01 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(4061, "gui.ModuleBrowserDialog$ModuleFilter", "", 0, 1);
      player0.setDead((long) 0);
      player0.getZ();
      player0.setZ(1);
      player0.setDead();
      player0.reset(false);
      player0.isConnected();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-88);
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)80;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      player0.unpack(byteArray0);
      player0.reset(true);
      player0.getTimeOfDeath();
      player0.getPictureId();
      float float0 = player0.getZ();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(2, "eyY!fS(AZ~O+,G/pmP$", 2);
      player0.isConnected();
      player0.gangStrength();
      player0.pack();
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead(0L);
      player0.setDead((long) 2);
      player0.getIP();
      player0.type();
      player0.getPictureId();
      player0.getStrength();
      player0.getIP();
      player0.getY();
      float float0 = player0.getMoney();
      assertTrue(player0.isDead());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(0, ";4%l`t^", ";4%l`t^", 0);
      player0.getName();
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      player0.getIP();
      Player player1 = new Player((short)4919, "f#?6Wrv", 87);
      player1.remove(player0);
      player0.isJoinOK(player1, false);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)41;
      byteArray0[5] = (byte) (-24);
      byteArray0[6] = (byte)5;
      byteArray0[7] = (byte)107;
      byteArray0[8] = (byte) (-21);
      player0.unpack(byteArray0);
      player0.setX((-2983.87F));
      assertEquals((-2983.87F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(0, "\"AOqV9)s3$v0r5RB", "\"AOqV9)s3$v0r5RB", 236);
      byte[] byteArray0 = player0.pack();
      player0.setDead();
      player0.setZ(0);
      player0.gangStrength();
      player0.pack();
      player0.setZ(236);
      player0.setDead();
      player0.toString();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2595);
      byteArrayOutputStream0.flush();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      player0.type();
      player0.toString();
      player0.reset(false);
      player0.unpack(byteArray0);
      player0.getIP();
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      Player player1 = new Player((short)4919, " ", "SaLz%fc[W]&&w", (short)4919);
      player0.remove(player1);
      player0.setMoney((-1432.83F));
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(0, "ko9z>+", 0);
      player0.pack();
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream("ko9z>+");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      
      float float1 = player0.getY();
      assertEquals(0.0F, float1, 0.01F);
      
      player0.toString();
      Player player1 = new Player(0, "ko9z>+", "ko9z>+", 4);
      player0.setJoinOK(player1, false);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(4, player1.getPictureId());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(1062, "", 674);
      player0.setY(1062);
      player0.setDead(0L);
      Player player1 = new Player(3688, "", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 3688, 3343);
      player1.setDead();
      player0.next = (Party) player1;
      player0.setMoney(1062);
      player0.setDead();
      player0.reset(true);
      player1.pack();
      player1.setJoinOK(player0, true);
      player1.type();
      player0.head = (Party) player1;
      player0.reset(true);
      player0.type();
      player0.setMoney((short)4919);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(200, "HsLSQtr7:cfX", "HsLSQtr7:cfX", 2);
      Party party0 = player0.gangBoss();
      Player player1 = new Player();
      party0.next = (Party) player0;
      party0.remove(player1);
      player0.remove(party0);
      player0.setConnected(true);
      player0.setZ(200);
      player0.reset(true);
      player0.getMoney();
      player0.isDead();
      player0.isDead();
      player0.gangStrength();
      player1.setZ(1196.2908F);
      long long0 = player0.getTimeOfDeath();
      assertEquals(200.0F, player0.getZ(), 0.01F);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5400363038209806
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(2415, "Ya+xT", "Ya+xT", 0, 0);
      Player player1 = (Player)player0.gangBoss();
      player0.prev = (Party) player1;
      player1.add(player0);
      player0.setX(0.0F);
      player0.setMoney(2415);
      player0.id = 0;
      player0.add(player1);
      player0.setDead(565L, true);
      Player player2 = new Player(2415);
      player2.setDead((long) 0);
      player2.remove(player1);
      player1.add(player2);
      player0.getZ();
      player0.isDead();
      player0.setDead(0L);
      player0.setConnected(true);
      Player player3 = new Player(1786, "", "Ya+xT", 5);
      Player player4 = new Player(0, "", " \"3XB^u3'zgS", 2415, (-1064));
      player1.setJoinOK(player4, true);
      boolean boolean0 = player0.isDead();
      assertEquals(2415.0F, player0.getMoney(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(0, "ko9z>+", 0);
      player0.pack();
      player0.getX();
      player0.isDead();
      MockPrintStream mockPrintStream0 = new MockPrintStream("ko9z>+");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      dataOutputStream0.writeBytes("Otp\"pl}~kf");
      player0.pack(dataOutputStream0);
      player0.getStrength();
      player0.getY();
      player0.toString();
      Player player1 = new Player(1, "ko9z>+", 4);
      player1.getSubparty();
      player0.setJoinOK(player1, false);
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(4);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4036404106149494
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(3888, ".*[.]class$", ".*[.]class$", (-611), 3888);
      player0.setDead((-939L));
      player0.getStrength();
      player0.getY();
      player0.toString();
      Player player1 = new Player((-611), ".*[.]class$", 1963);
      player1.getSubparty();
      Player player2 = new Player((short)4919, "", ".*[.]class$", 4);
      player1.setJoinOK(player2, true);
      player1.isJoinOK(player2, false);
      System.setCurrentTimeMillis(15000L);
      System.setCurrentTimeMillis((-1324L));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9730014063936125
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      System.setCurrentTimeMillis((-281L));
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player1.pack();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      player1.setJoinOK(player0, false);
      player1.isBoss();
      player1.setX(0.2F);
      System.setCurrentTimeMillis(1392409296320L);
      player1.isJoinOK(player0, true);
      assertEquals(0.2F, player1.getX(), 0.01F);
      
      Player player2 = new Player((-334));
      boolean boolean0 = player2.isJoinOK(player0, false);
      assertFalse(boolean0);
  }
}
