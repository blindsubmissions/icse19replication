/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:47:16 GMT 2018
 */

package wheel.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;
import org.xmlpull.mxp1_serializer.MXSerializer;
import org.xmlpull.v1.XmlPullParserFactory;
import org.xmlpull.v1.XmlSerializer;
import org.xmlpull.v1.wrapper.XmlPullWrapperFactory;
import org.xmlpull.v1.wrapper.XmlSerializerWrapper;
import org.xmlpull.v1.wrapper.classic.StaticXmlSerializerWrapper;
import org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;
import sun.util.calendar.ZoneInfo;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.CheckboxGroup;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Hidden;
import wheel.components.Link;
import wheel.components.NumberInput;
import wheel.components.Radio;
import wheel.components.RadioGroup;
import wheel.components.Select;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.TableRow;
import wheel.components.Text;
import wheel.components.TextArea;
import wheel.components.TextInput;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;
import wheel.util.StringSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "%s5V~EX&6";
      TextArea textArea0 = new TextArea(errorPage0, "%s5V~EX&6", "%s5V~EX&6");
      textArea0.value("%s5V~EX&6");
      ActionExpression actionExpression0 = new ActionExpression("%s5V~EX&6");
      // Undeclared exception!
      try { 
        textArea0.textarea("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "";
      Form form0 = new Form("");
      Form form1 = form0.renderHint("");
      String string1 = null;
      DateInput dateInput0 = null;
      try {
        dateInput0 = new DateInput(form1, "", (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "", "");
      String string0 = "m!J1]B>uVE";
      textInput0.useXhtml = true;
      FormElement formElement0 = textInput0.value("m!J1]B>uVE");
      TableBlock tableBlock0 = new TableBlock(formElement0, (String) null);
      MXSerializer mXSerializer0 = new MXSerializer();
      tableBlock0._renderActions(mXSerializer0);
      tableBlock0.renderHint("");
      String string1 = "&gt;";
      Radio radio0 = new Radio(errorPage0, "", "&gt;");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      // Undeclared exception!
      try { 
        textInput0.label((Object) mXSerializer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Radio radio0 = new Radio((Component) null, "wheel.util.InitialFieldValue", "v{-]*r");
      // Undeclared exception!
      try { 
        radio0.tt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.351783994289646
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "%l>ZH|!=2sSA5";
      Form form0 = new Form("%l>ZH|!=2sSA5");
      String string1 = "org.mvel.conversion.FloatCH";
      String string2 = "";
      Hidden hidden0 = null;
      try {
        hidden0 = new Hidden(form0, "org.mvel.conversion.FloatCH", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280554
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = null;
      Form form0 = new Form((String) null);
      String string1 = "`+!]x;B";
      String string2 = "kp(RcA=XNCI";
      DateInput dateInput0 = new DateInput(form0, "`+!]x;B", "kp(RcA=XNCI", (CharSequence) null);
      Text text0 = null;
      try {
        text0 = new Text(dateInput0, "`+!]x;B");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = ",vG@>\"l#XWuO6S";
      Form form0 = new Form(",vG@>\"l#XWuO6S");
      // Undeclared exception!
      try { 
        form0.base(",vG@>\"l#XWuO6S");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "6jY9XeY";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("6jY9XeY");
      String string1 = "D9DboU";
      Hidden hidden0 = new Hidden(xmlEntityRef0, "b>7^", "D9DboU");
      // Undeclared exception!
      try { 
        xmlEntityRef0.iframe();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("b(QOVuk}GBd");
      xmlEntityRef0.afterAdd();
      // Undeclared exception!
      try { 
        xmlEntityRef0.dfn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "";
      String string1 = ")kS*{-M=(,T&Z";
      TextInput textInput0 = new TextInput((Component) null, "", ")kS*{-M=(,T&Z");
      FormElement formElement0 = textInput0.value("");
      // Undeclared exception!
      try { 
        formElement0.var((Object) textInput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "!KSB+$0-";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("!KSB+$0-");
      NumberInput numberInput0 = new NumberInput(xmlEntityRef0, "!KSB+$0-", "!KSB+$0-");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      ElExpression elExpression0 = new ElExpression("!KSB+$0-");
      Hidden hidden0 = new Hidden(numberInput0, "!KSB+$0-", "Thead component can be added only to a Table.");
      // Undeclared exception!
      try { 
        xmlEntityRef0.h3((Object) hidden0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Component component0 = null;
      String string0 = "this.form.submit();";
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = new ElExpression("this.form.submit();");
      CheckboxGroup checkboxGroup0 = new CheckboxGroup((Component) null, "script", "this.form.submit();", stringSelectModel0, elExpression0);
      // Undeclared exception!
      try { 
        checkboxGroup0.map("this.form.submit();");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "Thead component can be added only to a Table.";
      Table table0 = new Table(errorPage0, "Thead component can be added only to a Table.");
      Table table1 = table0.renderHint("Thead component can be added only to a Table.");
      // Undeclared exception!
      try { 
        table1.id("Thead component can be added only to a Table.");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.26238625418332
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = new Block(errorPage0);
      TableRow tableRow0 = new TableRow(block0);
      String string0 = "YVX\\uCH";
      ActionExpression actionExpression0 = new ActionExpression(string0);
      Form form0 = new Form(block0, "9:z", actionExpression0);
      String[] stringArray0 = new String[0];
      Form form1 = form0._buildFromSerializedString(stringArray0);
      Form form2 = form1.addFormValidationError("9:z");
      String string1 = "";
      // Undeclared exception!
      try { 
        form2.id("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "6jY9XeY";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("6jY9XeY");
      String string1 = "b>7^";
      String string2 = "D9Db*eoU";
      Hidden hidden0 = new Hidden(xmlEntityRef0, "b>7^", "D9Db*eoU");
      Form form0 = new Form("D9Db*eoU");
      form0._setParent(hidden0);
      Table table0 = null;
      try {
        table0 = new Table(form0, "6jY9XeY");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "";
      TextInput textInput0 = new TextInput(errorPage0, "", "");
      String string1 = "m!J1]B>uVE";
      textInput0.useXhtml = true;
      FormElement formElement0 = textInput0.value("m!J1]B>uVE");
      String string2 = null;
      // Undeclared exception!
      try { 
        formElement0.img("dt", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.noscript();
      Table table0 = new Table(errorPage0, "[x%$");
      table0.id("[x%$");
      String string0 = null;
      String string1 = "(}US5-l#";
      DateInput dateInput0 = new DateInput(errorPage0, "(}US5-l#", "(}US5-l#", "[x%$");
      dateInput0.getComponentName();
      XmlPullWrapperFactory xmlPullWrapperFactory0 = XmlPullWrapperFactory.newInstance();
      StaticXmlSerializerWrapper staticXmlSerializerWrapper0 = new StaticXmlSerializerWrapper((XmlSerializer) null, xmlPullWrapperFactory0);
      Form form0 = new Form("(}US5-l#");
      form0._classReferenceFromHints();
      String string2 = "";
      // Undeclared exception!
      try { 
        staticXmlSerializerWrapper0.startTag("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xmlpull.v1.wrapper.classic.StaticXmlSerializerWrapper", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "'.";
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "'.");
      ElExpression elExpression0 = new ElExpression("'.");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("'.");
      // Undeclared exception!
      try { 
        xmlEntityRef0.label();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.4339872044851467
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "[x%$";
      errorPage0.noscript();
      Table table0 = new Table(errorPage0, "[x%$");
      Table table1 = table0.id("[x%$");
      Table table2 = table1.renderHint("[x%$");
      table0.actionBinding("[x%$");
      table2.form("h4");
      FileInput fileInput0 = new FileInput(table2, "h4", "h4");
      fileInput0.getTempFileLocation();
      table2.blockquote();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "[x%$";
      stringArray0[1] = "/tmp";
      stringArray0[2] = "h4";
      // Undeclared exception!
      try { 
        table1.area(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attributes must be given in name, value pairs.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.401197381662154
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.noscript();
      Table table0 = new Table(errorPage0, "[x%$");
      Table table1 = table0.id("[x%$");
      Table table2 = table1.renderHint("[x%$");
      Form form0 = (Form)table2.form("h4");
      FileInput fileInput0 = new FileInput(table2, "h4", "h4");
      fileInput0.getTempFileLocation();
      table2.blockquote();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "[x%$";
      table1.id("/](.,4O");
      Table table3 = table1.renderHint("/](.,4O");
      TableRow tableRow0 = table3.tr();
      tableRow0.createTd();
      ErrorPage errorPage1 = (ErrorPage)tableRow0._getTopLevelComponent(true);
      Text text0 = new Text(errorPage1, fileInput0);
      tableRow0.s((Object) text0);
      tableRow0.small((Object) errorPage1);
      form0.defaultTagName();
      // Undeclared exception!
      try { 
        table3.imageSubmit("0D~N@MN- ", "[x%$");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.noscript();
      Table table0 = new Table(errorPage0, "[x%$");
      table0.id("[x%$");
      DateInput dateInput0 = new DateInput(errorPage0, "(}US5-l#", "(}US5-l#", "[x%$");
      Form form0 = new Form("(}US5-l#");
      form0._classReferenceFromHints();
      ErrorPage errorPage1 = new ErrorPage();
      TextArea textArea0 = new TextArea(form0, "", "0dSRMH");
      FormElement formElement0 = textArea0.value("(");
      DynamicSelectModel dynamicSelectModel0 = formElement0.selectModel();
      dynamicSelectModel0.collection("(}US5-l#");
      form0.addInternalRenderHint((String) null);
      // Undeclared exception!
      try { 
        form0.pre();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.noscript();
      Table table0 = new Table(errorPage0, "[x%$");
      errorPage0.dt();
      Table table1 = table0.id("[x%$");
      Table table2 = table1.renderHint("[x%$");
      String string0 = "h4";
      table2.form("h4");
      block0.id("<v'QhA>7TS.QVBx}");
      Table table3 = table2.renderHint("<v'QhA>7TS.QVBx}");
      TableRow tableRow0 = table3.tr();
      tableRow0.createTd();
      Radio radio0 = new Radio(table2, "li", "");
      FileInput fileInput0 = new FileInput(radio0, "li", "<v'QhA>7TS.QVBx}");
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
      MockGregorianCalendar mockGregorianCalendar0 = null;
      try {
        mockGregorianCalendar0 = new MockGregorianCalendar(zoneInfo0, (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "[x%$";
      errorPage0.noscript();
      Table table0 = new Table(errorPage0, "[x%$");
      Table table1 = table0.id("[x%$");
      table0.placeholder("[x%$");
      Table table2 = table1.renderHint("[x%$");
      String string1 = "h4";
      table2.form("h4");
      FileInput fileInput0 = new FileInput(table2, "h4", "h4");
      fileInput0.getTempFileLocation();
      // Undeclared exception!
      try { 
        table0.numberInput("Z^2 =`v/p_?EM/");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "uiGE{UP @_E\"'";
      Hidden hidden0 = new Hidden((Component) null, "uiGE{UP @_E\"'", "uiGE{UP @_E\"'");
      String string1 = "h3";
      FormElement formElement0 = hidden0.value("h3");
      // Undeclared exception!
      try { 
        formElement0.h3();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
