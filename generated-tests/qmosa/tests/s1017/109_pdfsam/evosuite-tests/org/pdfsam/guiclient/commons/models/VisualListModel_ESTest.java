/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 13:04:44 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ConvolveOp;
import java.awt.image.DataBuffer;
import java.awt.image.DataBufferByte;
import java.awt.image.DirectColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.MultiPixelPackedSampleModel;
import java.awt.image.Raster;
import java.awt.image.SampleModel;
import java.awt.image.WritableRaster;
import java.awt.image.renderable.ParameterBlock;
import java.beans.PropertyChangeListenerProxy;
import java.time.LocalTime;
import java.time.Month;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.temporal.Temporal;
import java.time.temporal.TemporalQuery;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import javax.media.jai.CollectionOp;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockLocalTime;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      int int0 = (-2211);
      intArray0[0] = (-2211);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int int1 = 83;
      intArray0[1] = 83;
      intArray0[2] = 1650;
      intArray0[3] = 1466;
      visualListModel0.rotateClockwiseElements(intArray0);
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) (-2211);
      floatArray0[1] = (float) 1650;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel((-2211), (-2211), floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 2 and should be 4888521
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = (-1701);
      intArray0[2] = 0;
      visualListModel0.undeleteElements(intArray0);
      assertArrayEquals(new int[] {1, (-1701), 0}, intArray0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.moveUpIndex(0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.subList(0, 0);
      visualListModel0.setData(vector0);
      Rotation rotation0 = Rotation.DEGREES_180;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((BufferedImage) null, 255, false, "}", "}", rotation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      BufferedImage bufferedImage0 = null;
      int int0 = 0;
      boolean boolean0 = true;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualListModel0.clearData();
      int[] intArray0 = new int[9];
      intArray0[0] = (-2309);
      int int0 = (-2693);
      intArray0[1] = (-2693);
      intArray0[2] = 359;
      intArray0[3] = 1;
      int int1 = 0;
      intArray0[4] = 0;
      intArray0[5] = (-382);
      intArray0[6] = 256;
      int int2 = 0;
      intArray0[7] = 0;
      int int3 = 0;
      intArray0[8] = 0;
      visualListModel0.removeElements(intArray0, true);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, "org.pdfsam.guiclient.commons.models.VisualListModel");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.subList(0, 0, false);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      visualListModel0.moveDownIndexes(intArray0);
      intArray0[1] = 0;
      intArray0[2] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      int int0 = 0;
      int int1 = 0;
      visualListModel0.subList(0, 0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      visualListModel0.subList(0, 1000, false);
      int[] intArray0 = new int[7];
      intArray0[0] = 1000;
      intArray0[1] = 1000;
      intArray0[2] = 0;
      intArray0[3] = 0;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector0.addAll((Collection<? extends VisualPageListItem>) vector1);
      visualListModel0.setData(vector0);
      intArray0[4] = 0;
      intArray0[5] = (-1);
      visualListModel0.rotateClockwiseElements(intArray0);
      intArray0[6] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      assertArrayEquals(new int[] {1000, 1000, 0, 0, 0, (-1), 0}, intArray0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 1020;
      intArray0[2] = (-754);
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 369;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveUpIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = (-1373);
      intArray0[1] = 3096;
      intArray0[2] = 706;
      intArray0[3] = 1523;
      visualListModel0.getElements();
      intArray0[4] = 0;
      intArray0[5] = (-1277);
      intArray0[6] = 50;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndex(270);
      int[] intArray1 = new int[5];
      intArray1[0] = 706;
      intArray1[1] = (-1277);
      intArray1[2] = (-1373);
      intArray1[3] = 1523;
      intArray1[4] = 537;
      visualListModel0.removeElements(intArray1, false);
      int[] intArray2 = new int[4];
      intArray2[0] = (-1373);
      visualListModel0.clearData();
      intArray2[1] = 1523;
      intArray2[2] = 50;
      intArray2[3] = 50;
      visualListModel0.reverseElements(intArray2);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<Integer> vector0 = new Vector<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(vector0);
      Class<PropertyChangeListenerProxy> class0 = PropertyChangeListenerProxy.class;
      defaultComboBoxModel0.getListeners(class0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.getValidElements();
      visualListModel0.getElements();
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 0, true);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 0;
      visualListModel0.undeleteElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1;
      visualListModel0.moveUpIndex(1);
      visualListModel0.getSize();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      AffineTransform affineTransform0 = AffineTransform.getTranslateInstance(1, 0.0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, visualListModel0);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      // Undeclared exception!
      try { 
        affineTransformOp0.filter((BufferedImage) null, (BufferedImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // src image is null
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 1055;
      visualListModel0.clearData();
      intArray0[1] = (-564);
      intArray0[2] = 780;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      intArray0[3] = (-1);
      intArray0[4] = 0;
      intArray0[5] = 0;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      visualListModel0.removeElements((-1023), 1, true);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      visualListModel0.appendAllElements(vector0);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = (-1023);
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 0;
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      assertEquals(6, intArray0.length);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.elementsChanged();
      int int0 = 1;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.441015278026703
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 275;
      boolean boolean0 = true;
      visualListModel0.subList(275, 275, true);
      int[] intArray0 = new int[0];
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      int[] intArray1 = new int[0];
      visualListModel0.removeElements(intArray1, true);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndex(275);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.getElementAt(275);
      visualListModel0.getValidElements();
      visualListModel0.getSize();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(275, "y.*IcufE?b", "y.*IcufE?b");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-1286);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      intArray0[1] = (-210);
      intArray0[2] = 0;
      intArray0[3] = 3409;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.prependAllElements(stack0);
      intArray0[4] = 0;
      intArray0[5] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int int0 = 180;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(3409, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[2];
      intArray0[0] = 270;
      intArray0[1] = (-1172);
      visualListModel0.rotateClockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 2110;
      visualListModel0.rotateClockwiseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      ArrayDeque<PropertyChangeListenerProxy> arrayDeque0 = new ArrayDeque<PropertyChangeListenerProxy>();
      linkedHashSet0.retainAll(arrayDeque0);
      visualListModel0.addAllElements((-130), (Collection<VisualPageListItem>) linkedHashSet0);
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 180;
      intArray0[4] = (-4159);
      intArray0[5] = (-105);
      Object object0 = new Object();
      linkedHashSet0.contains(object0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((BufferedImage) null, 360, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int int0 = 0;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 2110;
      visualListModel0.rotateClockwiseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      ArrayDeque<PropertyChangeListenerProxy> arrayDeque0 = new ArrayDeque<PropertyChangeListenerProxy>();
      linkedHashSet0.retainAll(arrayDeque0);
      visualListModel0.addAllElements(2110, (Collection<VisualPageListItem>) linkedHashSet0);
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 180;
      intArray0[1] = (-4159);
      intArray0[5] = (-105);
      Object object0 = new Object();
      linkedHashSet0.contains(object0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((BufferedImage) null, 360, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-2509));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[2] = 44;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 35);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9913464134109884
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      visualListModel0.undeleteElements(intArray0);
      intArray0[1] = (-2852);
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = (-2855);
      intArray0[6] = 1941;
      intArray0[7] = 1;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<Month> stack0 = new Stack<Month>();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>(stack0);
      visualListModel0.removeListDataListener(jComboBox0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.appendAllElements(linkedHashSet0);
      visualListModel0.moveDownIndex((-1617));
      visualListModel0.removeElements(0, (-652), false);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-2852), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-2852)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      int[] intArray0 = new int[1];
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.updateElementAt(3346, (VisualPageListItem) null);
      visualListModel1.reverseElements(intArray0);
      visualListModel0.moveDownIndex(3346);
      assertFalse(visualListModel0.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.addElement((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndex((-2186));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      visualListModel0.removeElements((-1023), 1, true);
      HashMap<RenderingHints.Key, Temporal> hashMap0 = new HashMap<RenderingHints.Key, Temporal>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0);
      CollectionOp collectionOp0 = new CollectionOp("", parameterBlock0, renderingHints0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1023);
      intArray0[0] = 52;
      intArray0[2] = (-1);
      intArray0[3] = (-1023);
      intArray0[4] = 0;
      intArray0[5] = (-1023);
      intArray0[6] = 0;
      intArray0[7] = 1;
      intArray0[8] = (-1023);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.addAllElements((-2852), (Collection<VisualPageListItem>) collectionOp0);
      visualListModel0.getValidElements();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addAllElements(1825, (Collection<VisualPageListItem>) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateClockwiseElements(intArray0);
      assertFalse(visualListModel2.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.2450352741261774
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.subList(5180, 5180);
      visualListModel1.updateElementAt(3346, (VisualPageListItem) null);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, 3346);
      visualListModel1.clearData();
      visualListModel0.clearData();
      visualListModel1.moveUpIndex(811);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.893788232391138
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 5379;
      intArray0[4] = 0;
      intArray0[2] = 0;
      intArray0[6] = 0;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndex(10000);
      visualListModel0.removeElements(4, 50000, false);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      assertTrue(stack0.isEmpty());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.addElement((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.prependAllElements(stack0);
      assertEquals("[null, null, null, null]", stack0.toString());
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.2047854169135204
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.updateElementAt(3346, (VisualPageListItem) null);
      int[] intArray0 = new int[7];
      intArray0[0] = 3346;
      intArray0[1] = (-1700);
      intArray0[2] = 3346;
      intArray0[3] = (-1700);
      intArray0[4] = 3346;
      intArray0[5] = (-1700);
      intArray0[6] = (-1700);
      visualListModel1.reverseElements(intArray0);
      visualListModel0.moveDownIndex((-595));
      visualListModel1.undeleteElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.getSize();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertFalse(visualListModel0.equals((Object)visualListModel2));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndex(415);
      Vector<Integer> vector0 = new Vector<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(vector0);
      Class<PropertyChangeListenerProxy> class0 = PropertyChangeListenerProxy.class;
      defaultComboBoxModel0.getListeners(class0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.559581156259877
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int int0 = 21;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndex(415);
      intArray0[0] = 21;
      int int1 = 482;
      boolean boolean0 = false;
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 22
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.711845135233912
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[11];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[3];
      visualListModel0.reverseElements(intArray1);
      visualListModel0.moveDownIndex(0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4941751382893083
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int int0 = 21;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndex((-2202));
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.7480673485460896
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndex(21);
      intArray0[0] = 21;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndex(0);
      System.setCurrentTimeMillis(0L);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 21
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndex(21);
      intArray0[0] = 21;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.subList((-1096), 21);
      int int0 = 0;
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 21
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.019814992492946
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndex((-2202));
      visualListModel0.updateElementAt((-2202), (VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.updateElementAt((-2202), (VisualPageListItem) null);
      visualListModel0.moveDownIndex((-2840));
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndex((-1744));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndex((-1744));
      long long0 = 0L;
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.022808529414704
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      visualListModel0.moveUpIndex(0);
      visualListModel0.removeElements((-2585), (-2585), true);
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, visualListModel0);
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[8] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[0] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      visualListModel0.reverseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.6957425341696348
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndex((-1744));
      visualListModel0.removeElements(0, 0, true);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.9512595041439562
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndex((-2202));
      visualListModel0.updateElementAt((-2202), (VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 6);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1537419427010902
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndex((-1744));
      visualListModel0.removeElements(1, 1, false);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9722469794234416
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndex(11);
      visualListModel0.moveDownIndex(11);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndex(0);
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }
}
