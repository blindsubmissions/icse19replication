/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:28:41 GMT 2018
 */

package org.jcvi.jillion.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jcvi.jillion.core.Range;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Range_ESTest extends Range_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long long0 = 32767L;
      Range.ofLength(32767L);
      String string0 = "ZERO_BASED";
      // Undeclared exception!
      try { 
        Range.parseRange("ZERO_BASED");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse ZERO_BASED into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      range_Builder0.contractBegin((-1L));
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse  into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range.of(range_CoordinateSystem0, (-1L), (-1L));
      Range.of((-1L));
      // Undeclared exception!
      try { 
        Range.ofLength((-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must be >=0
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.610917912644226
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Range range0 = Range.ofLength(3380L);
      range0.getEnd();
      Range.Builder range_Builder0 = new Range.Builder(range0);
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      range_Builder1.copy();
      range0.split(1015L);
      range_Builder0.copy();
      range_Builder1.expandEnd(3380L);
      range_Builder0.copy();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      range_Builder1.shift(1178L);
      range_Builder1.build();
      Range.of(range_CoordinateSystem0, 1015L, 3380L);
      range_Builder1.contractBegin(3379L);
      range_Builder1.copy();
      // Undeclared exception!
      try { 
        Range.parseRange((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder(32767L);
      long long0 = (-1L);
      long long1 = 2685L;
      Range.Builder range_Builder1 = range_Builder0.contractEnd(2685L);
      range_Builder0.expandEnd((-1L));
      long long2 = 0L;
      Range range0 = range_Builder1.build();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      range0.getBegin(range_CoordinateSystem0);
      // Undeclared exception!
      try { 
        range0.split((-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // max splitLength must be >= 1
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.0407272942644323
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Range range0 = Range.ofLength(2075L);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      range0.forEach(consumer0);
      boolean boolean0 = range0.isEmpty();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.359985895062485
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = Range.of(0L, 0L);
      range1.toString();
      Range range2 = Range.of(0L, 0L);
      range2.startsBefore(range0);
      Range range3 = range0.intersection(range2);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      range3.getEnd(range_CoordinateSystem1);
      range3.toString(range_CoordinateSystem0);
      range3.equals(range2);
      range0.isEmpty();
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("@\u0007bmm 8)AFo");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.@\u0007bmm 8)AFo
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.8501476017100575
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 0L, 0L);
      Range range1 = Range.of(range_CoordinateSystem0, 0L, 0L);
      range1.iterator();
      range0.isSubRangeOf(range1);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      long long0 = 0L;
      Range range2 = Range.of(range_CoordinateSystem1, 0L, 0L);
      Range.ofLength(846L);
      range2.complement(range1);
      Range range3 = Range.of(range_CoordinateSystem0, (-240L), 0L);
      Range.Comparators.values();
      Range.Builder range_Builder0 = new Range.Builder();
      range_Builder0.copy();
      range0.intersects(range3);
      range_Builder0.copy();
      long long1 = 199L;
      // Undeclared exception!
      try { 
        Range.parseRange((String) null, range_CoordinateSystem0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.3482388626123596
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      long long0 = (-128L);
      Range range0 = Range.of((-128L));
      Range range1 = Range.of(0L);
      List<Range> list0 = range1.complement(range0);
      List<Range> list1 = range0.complementFrom(list0);
      range0.complementFrom(list1);
      Range.Builder range_Builder0 = null;
      try {
        range_Builder0 = new Range.Builder((-128L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must be >=0
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.3033977055816277
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      long long0 = 409L;
      Range range0 = Range.of(range_CoordinateSystem0, 409L, 409L);
      long long1 = 1722L;
      Range range1 = Range.of(1722L);
      range1.complement(range0);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
      // Undeclared exception!
      try { 
        Range.parseRange("", range_CoordinateSystem1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse  into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      long long0 = (-128L);
      long long1 = 0L;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, (-128L), 0L);
      String string0 = "*GU";
      range_Builder0.expandBegin((-128L));
      // Undeclared exception!
      try { 
        Range.parseRange("*GU", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse *GU into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.7376696182833657
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long long0 = 2147483647L;
      Range range0 = Range.ofLength(2147483647L);
      range0.complement(range0);
      Range.of(2147483647L, 2147483647L);
      // Undeclared exception!
      try { 
        Range.parseRange((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.6486301330898843
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Range range0 = Range.ofLength(2147483647L);
      range0.split(2147483647L);
      range0.endsBefore(range0);
      Range range1 = Range.of(2147483647L);
      range0.intersects(range1);
      range0.equals("DKx%BeE^");
      range0.toString();
      Range.Builder range_Builder0 = new Range.Builder(2147483647L, 2147483647L);
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      range_Builder1.copy();
      range_Builder1.copy();
      long long0 = 0L;
      range_Builder1.expandEnd(0L);
      range_Builder1.contractEnd(0L);
      range0.complement(range0);
      // Undeclared exception!
      try { 
        range_Builder1.contractEnd(2147483647L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.38138372418966
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Range.ofLength(0L);
      Range range0 = Range.of(0L, 0L);
      Range range1 = Range.ofLength(9223372034707292161L);
      range0.intersection(range1);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      String string0 = "Qq&nA6P9l";
      // Undeclared exception!
      try { 
        Range.parseRange("Qq&nA6P9l", range_CoordinateSystem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse Qq&nA6P9l into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.274105619884916
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder(32767L);
      long long0 = 2685L;
      Range.Builder range_Builder1 = range_Builder0.contractEnd(2685L);
      Range.Builder range_Builder2 = range_Builder0.expandEnd((-1L));
      Range range0 = range_Builder1.build();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      range0.getBegin(range_CoordinateSystem0);
      Range range1 = Range.of(0L, 0L);
      range0.complement(range1);
      range_Builder2.contractEnd((-1L));
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      String string0 = null;
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.5263605246161633
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Range range0 = Range.of((-128L));
      Range range1 = Range.of(0L);
      List<Range> list0 = range1.complement(range0);
      range0.complementFrom(list0);
      Long long0 = new Long(1564L);
      range0.equals(long0);
      range1.isEmpty();
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("0}a[lbZJ),,");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.0}a[lbZJ),,
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.3934263028558336
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Range range0 = Range.ofLength(3380L);
      range0.getEnd();
      Range.Builder range_Builder0 = new Range.Builder(range0);
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      range_Builder1.copy();
      range0.split(1015L);
      Range.Builder range_Builder2 = range_Builder0.copy();
      Range range1 = range_Builder2.build();
      Range.Builder range_Builder3 = new Range.Builder(3380L, 9223372036854773778L);
      range_Builder3.contractBegin(3379L);
      range_Builder0.copy();
      range1.asRange();
      Range.CoordinateSystem[] range_CoordinateSystemArray0 = Range.CoordinateSystem.values();
      assertEquals(3, range_CoordinateSystemArray0.length);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.7612001156935655
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, 0L, 0L);
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      Range range0 = Range.ofLength(0L);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      Range.CoordinateSystem range_CoordinateSystem2 = Range.CoordinateSystem.ZERO_BASED;
      range0.getBegin(range_CoordinateSystem2);
      range0.toString(range_CoordinateSystem1);
      range_Builder1.shift((-240L));
      range0.getBegin();
      range0.startsBefore(range0);
      Range.of(3045L, 2147483647L);
      long long0 = 65535L;
      Range.Builder range_Builder2 = new Range.Builder((-2561L), 65535L);
      Range.CoordinateSystem range_CoordinateSystem3 = Range.CoordinateSystem.RESIDUE_BASED;
      Range.of(range_CoordinateSystem3, 255L, 1722L);
      Range.of(range_CoordinateSystem3, 0L, 2684L);
      Range.Builder range_Builder3 = null;
      try {
        range_Builder3 = new Range.Builder((Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // range can not be null
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.4474997973810892
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Range range0 = Range.ofLength(3380L);
      range0.getEnd();
      Range.Builder range_Builder0 = new Range.Builder(range0);
      Range.Builder range_Builder1 = new Range.Builder(3380L, 3379L);
      Range.Builder range_Builder2 = new Range.Builder(range_Builder0);
      range0.split(1015L);
      range_Builder0.copy();
      Range.Builder range_Builder3 = range_Builder1.expandEnd(3380L);
      range_Builder0.copy();
      Range range1 = Range.ofLength(1178L);
      range0.getBegin();
      range0.startsBefore(range1);
      Range range2 = Range.of(2075L, 2075L);
      Range.Builder range_Builder4 = new Range.Builder(0L, 3379L);
      range_Builder3.expandBegin(2075L);
      range2.endsBefore(range0);
      range_Builder0.expandBegin(128L);
      range2.intersection(range0);
      range2.split(2439L);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("BAWt1+8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.BAWt1+8
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.4012328618174816
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = Range.of(0L, 0L);
      range0.toString();
      Range range2 = Range.of(0L, 0L);
      range2.startsBefore(range0);
      Range range3 = range0.intersection(range2);
      range3.equals(range0);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      range3.getEnd(range_CoordinateSystem1);
      range3.toString(range_CoordinateSystem0);
      range3.equals(range2);
      range1.isSubRangeOf(range0);
      range1.complement(range3);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("@\u0007bmm 8)AFo");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.@\u0007bmm 8)AFo
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.3276698862269427
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Range range0 = Range.ofLength(3380L);
      range0.getEnd();
      Range.Builder range_Builder0 = new Range.Builder(range0);
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      Range.Builder range_Builder2 = range_Builder1.copy();
      Range.Builder range_Builder3 = new Range.Builder(3380L, 3380L);
      Range.Builder range_Builder4 = new Range.Builder(range_Builder2);
      Range.Builder range_Builder5 = new Range.Builder(range_Builder4);
      range_Builder4.copy();
      Range.Builder range_Builder6 = range_Builder4.copy();
      long long0 = 0L;
      Range.Builder range_Builder7 = range_Builder1.expandEnd(3380L);
      range_Builder6.contractEnd(0L);
      range_Builder7.contractEnd(0L);
      // Undeclared exception!
      try { 
        range0.complement((Range) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null Range used in intersection operation.
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.425818013353478
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Range range0 = Range.of((-128L));
      range0.getLength();
      List<Range> list0 = range0.complement(range0);
      range0.complementFrom(list0);
      List<Range> list1 = new LinkedList<Range>();
      range0.complementFrom(list1);
      Range.Builder range_Builder0 = new Range.Builder((-128L), 0L);
      // Undeclared exception!
      try { 
        Range.CoordinateSystem.valueOf("can not remove from Range");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.CoordinateSystem.can not remove from Range
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.3184914725250287
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, 0L, 0L);
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      Range range0 = Range.ofLength(0L);
      Range range1 = range_Builder1.build();
      range_Builder0.expandBegin(0L);
      range1.endsBefore(range0);
      Range.Builder range_Builder2 = new Range.Builder(0L, 0L);
      range_Builder1.copy();
      Range.ofLength(0L);
      // Undeclared exception!
      try { 
        Range.of(range_CoordinateSystem0, 9223372036854773778L, 0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.865841390558969
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Range range0 = Range.ofLength(3380L);
      range0.getEnd();
      Range.Builder range_Builder0 = new Range.Builder(range0);
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      Range.Builder range_Builder2 = range_Builder1.copy();
      List<Range> list0 = range0.split(1015L);
      range_Builder0.copy();
      range_Builder1.expandEnd(3380L);
      range_Builder0.copy();
      Range range1 = Range.of((-386L));
      Range range2 = Range.of((-386L), (-386L));
      List<Range> list1 = range1.complement(range2);
      assertTrue(list1.isEmpty());
      
      List<Range> list2 = range2.complementFrom(list0);
      List<Range> list3 = range1.complementFrom(list2);
      assertEquals(1, list2.size());
      assertFalse(list3.contains(range0));
      assertSame(range2, range1);
      
      List<Range> list4 = range0.complementFrom(list0);
      assertTrue(list4.isEmpty());
      
      Range.Builder range_Builder3 = new Range.Builder(1178L);
      range_Builder2.contractEnd(3380L);
      range0.getBegin();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      String string0 = range0.toString(range_CoordinateSystem0);
      assertEquals("[ 0 .. 3380 ]/SB", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.610375441241442
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, 0L, 0L);
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      Range range0 = Range.ofLength(0L);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      Range.CoordinateSystem range_CoordinateSystem2 = Range.CoordinateSystem.ZERO_BASED;
      range0.getBegin(range_CoordinateSystem2);
      range0.toString(range_CoordinateSystem1);
      range_Builder1.shift((-240L));
      range0.startsBefore(range0);
      Range.of((-240L), 2147483647L);
      long long0 = 65535L;
      Range.Builder range_Builder2 = new Range.Builder((-2561L), 65535L);
      Range.CoordinateSystem range_CoordinateSystem3 = Range.CoordinateSystem.RESIDUE_BASED;
      Range.of(range_CoordinateSystem3, 255L, 1722L);
      Range.of(range_CoordinateSystem3, 0L, 2684L);
      Range range1 = null;
      Range.Builder range_Builder3 = null;
      try {
        range_Builder3 = new Range.Builder((Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // range can not be null
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.997068727089016
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder((-3452L), (-3452L));
      long long0 = 2147483647L;
      range_Builder0.build();
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      // Undeclared exception!
      try { 
        Range.of(range_CoordinateSystem0, 9223372036854775807L, (-1152L));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // given length -1153 would make range [9223372036854775806 - ? ] beyond max allowed end offset
         //
         verifyException("org.jcvi.jillion.core.Range$Builder", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.614569341033185
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Range range0 = Range.ofLength(3380L);
      range0.getEnd();
      Range.Builder range_Builder0 = new Range.Builder(range0);
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      range_Builder1.copy();
      List<Range> list0 = range0.split(1015L);
      range0.complementFrom(list0);
      Long long0 = new Long(4294966314L);
      range0.equals("f^x");
      range0.isEmpty();
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("*P((D_QXs]$3_e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.*P((D_QXs]$3_e
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.4500959114204797
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = Range.of(9223372036854774826L);
      Range range2 = Range.of((-810L));
      range1.endsBefore(range2);
      List<Range> list0 = range1.complement(range0);
      range0.complementFrom(list0);
      Long long0 = new Long(0L);
      range1.equals(list0);
      // Undeclared exception!
      try { 
        Range.parseRange("g+j,X");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse g+j,X into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.294567301211855
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Range range0 = Range.of(2147483647L);
      Range.Builder range_Builder0 = new Range.Builder(2147483647L, 2147483647L);
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      range_Builder1.copy();
      range_Builder1.copy();
      range_Builder1.expandEnd(0L);
      range_Builder1.contractEnd(0L);
      Range.Builder range_Builder2 = new Range.Builder(range0);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      range_CoordinateSystem0.toString();
      // Undeclared exception!
      try { 
        Range.parseRange("Zero Based");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse Zero Based into a Range
         //
         verifyException("org.jcvi.jillion.core.Range", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.528828714116743
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, 0L, 0L);
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      Range range0 = Range.ofLength(0L);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      range_Builder1.contractBegin(0L);
      Range.CoordinateSystem range_CoordinateSystem2 = Range.CoordinateSystem.ZERO_BASED;
      range0.getBegin(range_CoordinateSystem2);
      String string0 = range0.toString(range_CoordinateSystem1);
      assertEquals("[ 0 .. -1 ]/0B", string0);
      
      range_Builder1.shift((-240L));
      range0.getBegin();
      boolean boolean0 = range0.startsBefore(range0);
      assertFalse(boolean0);
      
      Range range1 = Range.of(3045L, 2147483647L);
      Range.Builder range_Builder2 = new Range.Builder((-240L), 0L);
      Range range2 = range_Builder0.build();
      range_Builder2.contractBegin((-2561L));
      range_Builder2.copy();
      range1.asRange();
      assertFalse(range1.isEmpty());
      
      range0.intersects(range2);
      assertTrue(range0.isEmpty());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.534388349818702
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Range range0 = Range.ofLength(3380L);
      range0.getEnd();
      Range.Builder range_Builder0 = new Range.Builder(range0);
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      range0.split(1015L);
      range_Builder0.copy();
      range_Builder1.expandEnd(3380L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, 1015L, 3379L);
      List<Range> list0 = range0.complement(range1);
      range1.complementFrom(list0);
      Long long0 = new Long(1015L);
      range0.equals((Object) null);
      range1.isEmpty();
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("c?7=6sap#_$LM1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.c?7=6sap#_$LM1
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.2794934059304146
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, 0L, 0L);
      Range.Builder range_Builder1 = new Range.Builder(982L, 4294967295L);
      Range range0 = range_Builder1.build();
      range_Builder0.copy();
      Range range1 = Range.of(1014L);
      range0.isSubRangeOf(range1);
      Range range2 = range0.asRange();
      assertFalse(range2.isEmpty());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.637586159726386
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Range range0 = Range.ofLength(0L);
      Range range1 = Range.of(0L, 0L);
      range0.toString();
      Range range2 = Range.of(0L, 0L);
      Range range3 = range0.intersection(range2);
      range1.startsBefore(range0);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      range3.getEnd(range_CoordinateSystem0);
      Range range4 = Range.of((-2074L), 707L);
      range4.equals((Object) null);
      range3.isEmpty();
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("*P((D_QXs]$3_e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.*P((D_QXs]$3_e
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=4.070829580655581
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Range range0 = Range.ofLength(2147483647L);
      Range.ofLength(2147483647L);
      range0.split(2147483647L);
      range0.endsBefore(range0);
      Range range1 = Range.of(2147483647L);
      range0.intersects(range1);
      range0.equals("DKx%BeE^");
      range0.toString();
      Range.of(1253L);
      range0.endsBefore(range1);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range2 = Range.of(range_CoordinateSystem0, (-1204L), 1253L);
      List<Range> list0 = range2.complement(range0);
      range0.complementFrom(list0);
      Long long0 = new Long(1L);
      Object object0 = new Object();
      range1.equals(object0);
      Range range3 = Range.parseRange("[ 0 .. 2147483646 ]/0B");
      range3.getLength();
      range2.isEmpty();
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("JrRx1#N");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.JrRx1#N
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.7985045625517038
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, 0L, 0L);
      Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
      Range range0 = Range.ofLength(0L);
      Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
      range0.toString(range_CoordinateSystem1);
      range_Builder1.shift((-240L));
      range0.startsBefore(range0);
      Range range1 = Range.of((-240L), 2147483647L);
      range_Builder0.build();
      Range range2 = Range.of((-32768L), 0L);
      Range.CoordinateSystem range_CoordinateSystem2 = Range.CoordinateSystem.SPACE_BASED;
      range1.toString(range_CoordinateSystem2);
      range2.equals(range0);
      Range range3 = Range.of((-2561L));
      range3.isSubRangeOf(range1);
      range3.complement(range0);
      // Undeclared exception!
      try { 
        Range.Comparators.valueOf("(@?Xy");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jcvi.jillion.core.Range.Comparators.(@?Xy
         //
         verifyException("java.lang.Enum", e);
      }
  }
}
