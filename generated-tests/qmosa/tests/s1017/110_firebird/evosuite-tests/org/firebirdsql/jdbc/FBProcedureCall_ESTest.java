/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:33:36 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      int int0 = (-1);
      int int1 = 214;
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-1), 214);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getInputParam(3903);
      assertFalse(fBProcedureCall0.equals((Object)object0));
      assertNotSame(fBProcedureCall0, object0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 1;
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(1);
      fBProcedureParam0.setType(1);
      fBProcedureParam0.setType(1);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      try { 
        fBProcedureCall0.registerOutParam(221, (-1342));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(0);
      fBProcedureParam0.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int0 = 0;
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      fBProcedureCall0.getInputParam(2732);
      FBProcedureParam fBProcedureParam1 = null;
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = "Cannot set parameter, since it is constant.";
      fBProcedureCall0.setName("Cannot set parameter, since it is constant.");
      fBProcedureCall0.addParam(0, "Cannot set parameter, since it is constant.");
      int int0 = 953;
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(953);
      fBProcedureParam0.clone();
      try { 
        fBProcedureParam0.setValue("Cannot set parameter, since it is constant.");
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 0;
      fBProcedureCall0.setName("");
      fBProcedureCall0.addParam(0, "");
      int int1 = 0;
      fBProcedureCall0.getOutputParam(0);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(0, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8403407956415925
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = "kBN0<N7h>";
      fBProcedureCall0.addParam(673, "kBN0<N7h>");
      fBProcedureCall0.clone();
      int int0 = (-1602);
      fBProcedureCall0.mapOutParamIndexToPosition((-1602));
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-82), (-1124));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -83
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 1539;
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(1539);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.mapOutParamIndexToPosition(892);
      fBProcedureCall0.getName();
      fBProcedureCall0.equals((Object) null);
      try { 
        fBProcedureCall0.registerOutParam(1689, 246);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(991, "1EU=e}|oc}G");
      fBProcedureCall0.setName("07005");
      fBProcedureCall0.hashCode();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(0, "");
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(0, "");
      int int0 = (-1);
      fBProcedureParam0.setIndex((-1));
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.getName();
      fBProcedureParam0.clone();
      fBProcedureCall0.getInputParams();
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      fBProcedureCall0.equals(list0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1709, "8AIJq$");
      fBProcedureParam0.setIndex(1709);
      fBProcedureParam0.setIndex(1709);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(1709, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7480215040807063
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.getOutputParams();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall0.addParam(0, "Cannot set parameter, since it is constant.");
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(2);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(false);
      fBProcedureCall1.getSQL(false);
      int int0 = (-2494);
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-2494), "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2494
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.478751524647954
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 887;
      int int1 = 1216;
      fBProcedureCall0.mapOutParamIndexToPosition(1216, true);
      fBProcedureCall0.getInputParam(887);
      fBProcedureCall0.getSQL(false);
      int int2 = 0;
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5043783220960494
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(0, "Specified parameter does not exist.");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.setName(". ");
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam(547);
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.mapOutParamIndexToPosition((-663));
      fBProcedureCall0.mapOutParamIndexToPosition((-663), true);
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(0, "");
      Object object1 = fBProcedureCall0.clone();
      fBProcedureParam2.setIndex((-663));
      fBProcedureCall0.equals(fBProcedureParam2);
      fBProcedureParam2.setIndex(0);
      fBProcedureParam1.clone();
      fBProcedureParam2.setIndex(0);
      fBProcedureCall0.equals("");
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      fBProcedureCall0.equals(fBProcedureParam2);
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.setName("");
      fBProcedureCall0.getInputParams();
      assertTrue(fBProcedureCall0.equals((Object)object1));
      
      fBProcedureCall0.registerOutParam(0, (-663));
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.hashCode();
      assertFalse(fBProcedureCall0.equals((Object)object0));
      assertNotSame(fBProcedureCall0, object0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1192809219098505
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("0p`Y rk^a");
      fBProcedureCall0.mapOutParamIndexToPosition(41, true);
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
      
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(41, "%t+D;6");
      fBProcedureCall0.setName("Nd1 Tef[lr8-@c.");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.clone();
      fBProcedureCall0.mapOutParamIndexToPosition(41);
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.getInputParam(41);
      fBProcedureCall0.equals(fBProcedureCall1);
      assertNotSame(fBProcedureCall0, object0);
      
      fBProcedureCall1.addParam(41, "");
      assertFalse(fBProcedureCall1.equals((Object)object0));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = (-856);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam((-856));
      fBProcedureParam0.setType(1470);
      fBProcedureParam0.setIndex(0);
      fBProcedureParam0.setType(0);
      fBProcedureParam0.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam((-856));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -857
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6484383345463107
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "");
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam(0, "");
      fBProcedureParam1.setIndex((-1));
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.getName();
      FBProcedureParam fBProcedureParam2 = (FBProcedureParam)fBProcedureParam1.clone();
      fBProcedureCall0.getInputParams();
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      fBProcedureParam0.clone();
      fBProcedureParam2.setIndex(0);
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall0.equals(fBProcedureCall1);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.equals(list0);
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getOutputParam((-1));
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      fBProcedureCall2.mapOutParamIndexToPosition((-1));
      fBProcedureCall0.getInputParams();
      FBProcedureCall fBProcedureCall3 = new FBProcedureCall();
      fBProcedureCall3.setName("[H1B8a{Mg\"u4/V-");
      fBProcedureCall3.getInputParams();
      int int0 = (-313);
      try { 
        fBProcedureCall3.registerOutParam(4009, (-313));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.08676875496392
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1709, "8AIJq$");
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(1709, "8AIJq$");
      fBProcedureCall0.setName("8AIJq$");
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.mapOutParamIndexToPosition(1709);
      assertTrue(fBProcedureCall0.equals((Object)object0));
      
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(1709);
      fBProcedureCall1.equals(object0);
      assertFalse(object0.equals((Object)fBProcedureCall0));
      assertNotSame(object0, fBProcedureCall0);
      
      fBProcedureCall1.addParam(1709, "SELECT * FROM");
      assertFalse(fBProcedureCall1.equals((Object)object0));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.395908119293929
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(18, "%>");
      fBProcedureCall0.getOutputParam((-569));
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.addParam(78, "SELECT * FROM null(%>)");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.mapOutParamIndexToPosition((-1));
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.setName("3t");
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.registerOutParam((-1), 1281);
      fBProcedureCall1.addOutputParam(fBProcedureParam0);
      assertEquals(1281, fBProcedureParam0.getType());
      
      fBProcedureCall0.getInputParam(18);
      fBProcedureCall1.getSQL(true);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall2.addParam(78, "%>");
      assertEquals(78, fBProcedureParam1.getPosition());
  }
}
