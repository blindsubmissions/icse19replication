/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:09:09 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", (Object) null);
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("gB|&SsyVhBE\"", true);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", (Object) null);
      fieldWriter0.visitEnd();
      String string0 = "wheel.asm.AnnotationWriter";
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 2, (String) null, "gB|&SsyVhBE\"", "wheel.asm.AnnotationWriter", bufferedInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("gB|&SsyVhBE\"", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", (Object) null);
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector(2);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", (Object) null);
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9596147939120492
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1469);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1280), "Sensitive", "Sensitive", "Sensitive", "Sensitive");
      fieldWriter0.getSize();
      Object object0 = new Object();
      fieldWriter0.visitAnnotation("H'lK#3u9Yjz", false);
      fieldWriter0.visitAnnotation("Insensitive", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(60, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1469);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", "~L", "gB|&SsyVhBE\"");
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector(1469);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0042424730540764
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131087);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131087, "org.apache.commons.io.filefilter.WildcardFileFilter", "", "<W}AQkW<s2enp5", "<W}AQkW<s2enp5");
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector(4);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3143738430069454
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, ")dIIy^)ZR2", "gB|&SsyVhBE\"", "a,", ")dIIy^)ZR2");
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("a,", false);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3667110520552042
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", "gB|&SsyVhBE\"");
      fieldWriter0.visitAnnotation("<fMt", true);
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector(0);
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1469);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1280), "Sensitive", "Sensitive", "Sensitive", "Sensitive");
      Attribute attribute0 = new Attribute("*}tSv");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6869615765973234
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1469);
      ClassWriter classWriter1 = new ClassWriter(3279);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, (-250), "aLJzk}:R", "", (String) null, "");
      fieldWriter0.getSize();
      Object object0 = new Object();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 9, "Sensitive", "SourceDebugExtension", "", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0114042647073518
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1469);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1280), "Sensitive", "Sensitive", "Sensitive", "Sensitive");
      Object object0 = new Object();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      fieldWriter0.visitAnnotation("Sensitive", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2148896539491203
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter1 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, 716, "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", (String) null, "gB|&SsyVhBE\"");
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector(1);
      FieldWriter fieldWriter1 = classWriter1.lastField;
      fieldWriter1.put(byteVector0);
      int int0 = fieldWriter1.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6829081047004717
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-12));
      classWriter0.newDouble(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-12), "_z!9mP;.0pA65sxZw", "_z!9mP;.0pA65sxZw", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      classWriter0.visit((-12), 3, "", "", "", (String[]) null);
      ByteVector byteVector1 = byteVector0.putShort((-12));
      fieldWriter0.put(byteVector1);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "_z!9mP;.0pA65sxZw", "_z!9mP;.0pA65sxZw", "v1n&(fk(gH", "v1n&(fk(gH");
      fieldWriter0.put(byteVector1);
      assertNotSame(fieldWriter0, fieldWriter1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.2153881010836145
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1469);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1248), "", "", "", "");
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector(2);
      Attribute attribute0 = new Attribute("ConstantValue");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9201423338489254
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1445);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Sensitivz";
      stringArray0[1] = "Sensitivz";
      stringArray0[2] = "l";
      stringArray0[3] = "Sensitivz";
      stringArray0[4] = "Sensitivz";
      stringArray0[5] = "l";
      stringArray0[6] = "Sensitivz";
      classWriter0.visit((-1280), 1445, "l", "l", (String) null, stringArray0);
      classWriter0.visitInnerClass("Sensitivz", "Sensitivz", "}J:+;y2:Nl", 1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1280), "Sensitivz", "Sensitivz", "Sensitivz", "Sensitivz");
      fieldWriter0.getSize();
      classWriter0.visitSource("Sensitivz", "System");
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector(25);
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
  }
}
