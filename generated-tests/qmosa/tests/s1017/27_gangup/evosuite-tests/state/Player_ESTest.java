/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 14:07:49 GMT 2018
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.FilterOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.SyncFailedException;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(3918, "T1'yy]$!VI;yBA$", 3918);
      Player player1 = new Player((-1094), "T1'yy]$!VI;yBA$", "", (-1094));
      player0.remove(player1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player0.unpack(dataInputStream0);
      player0.setDead(2291L);
      player1.setDead((long) 3918);
      player0.isDead();
      player0.toString();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("", "");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-1650), "", "Player", (-1650));
      player0.gangStrength();
      Party party0 = player0.gangBoss();
      party0.id = 1;
      player0.remove(party0);
      Player player1 = new Player((-1650), "", "", 2372, 0);
      player1.reset(false);
      party0.next = (Party) player1;
      byte[] byteArray0 = player0.pack();
      Party party1 = player1.gangBoss();
      party1.getSubparty();
      player0.remove(party1);
      player0.remove(player1);
      player1.setDead((-614L), true);
      player0.getStrength();
      player1.setX(0.0F);
      player0.pack();
      player1.head = (Party) player0;
      player0.pack();
      player1.setDead((long) (short)4919);
      player1.getIP();
      player0.type();
      player0.setY(0.0F);
      player0.unpack(byteArray0);
      player0.setMoney(1);
      player0.getX();
      player0.setZ(0.0F);
      assertEquals(1.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      player0.setMoney(187.39F);
      byte byte0 = (byte)123;
      byteArray0[2] = (byte)123;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)122;
      byteArray0[5] = (byte) (-46);
      player0.unpack(byteArray0);
      player0.toString();
      Player player1 = new Player();
      boolean boolean0 = true;
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("Player-1");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0, "S", "S", 0);
      player0.setDead((long) 0, true);
      player0.getY();
      boolean boolean0 = false;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((-1L));
      player0.setConnected(false);
      player0.getMoney();
      player0.isConnected();
      player0.setDead(1688L);
      assertEquals(1688L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(0);
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      Player player1 = new Player(0);
      player1.setConnected(true);
      player0.remove(player1);
      player0.setJoinOK(player1, true);
      player1.setConnected(true);
      player0.setJoinOK(player1, true);
      player1.reset(true);
      boolean boolean0 = player1.isConnected();
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("Player0", player1.getName());
      assertEquals(0.0F, player1.getMoney(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(0, "=)K$", "=)K$", 0);
      Party party0 = player0.next;
      player0.remove((Party) null);
      Player player1 = new Player((-3537), ".vSC", (-1646));
      player0.setJoinOK(player1, true);
      player0.setDead((-829L), true);
      player0.setMoney(3996.5715F);
      player0.isConnected();
      player0.getPictureId();
      Player player2 = new Player((-671), "=)K$", "xw7uP}z<we'KXCIJQ5", 2674);
      player2.reset(true);
      player0.setJoinOK(player2, true);
      player1.pack();
      player0.setY((-1210.87F));
      player0.getStrength();
      player0.setJoinOK(player1, true);
      assertEquals((-1210.87F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(0, "TTa@T", "wPRgd,<s%MiY", 0, 2343);
      Player player1 = new Player();
      player0.boss = (Party) player1;
      player0.head = (Party) player1;
      player1.gangStrength();
      player0.setDead();
      player0.getZ();
      player0.setZ(0.0F);
      player0.isDead();
      player0.setMoney((-2486.8782F));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-55);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(0, "]g%q`>", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 0, 4178);
      boolean boolean0 = player0.isDead();
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("]g%q`>", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(4178, player0.getStrength());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-2968), "", "", (-2968));
      player0.setConnected(false);
      player0.setDead((-107L), true);
      player0.setDead((-107L), true);
      player0.setDead(1282L, false);
      long long0 = player0.getTimeOfDeath();
      assertTrue(player0.isDead());
      assertEquals(1282L, long0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(5, "state.Party", 4919);
      player0.setMoney(1.0F);
      player0.getMoney();
      File file0 = MockFile.createTempFile("state.Party", "module.ModuleBrowserDialog$ModuleFilter");
      Player player1 = new Player();
      player0.add(player1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      dataOutputStream0.writeInt((short)4919);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.getChannel();
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      dataInputStream0.readUTF();
      player0.unpack(dataInputStream0);
      player0.pack(dataOutputStream0);
      player0.setDead(3641L);
      player0.getName();
      player0.toString();
      player0.getTimeOfDeath();
      player0.getTimeOfDeath();
      player0.getIP();
      player0.gangStrength();
      player0.setX(5);
      player0.toString();
      assertEquals(5.0F, player0.getX(), 0.01F);
      
      Player player2 = new Player(3, (String) null, "module.ModuleBrowserDialog$ModuleFilter", 3271);
      player1.isJoinOK(player2, true);
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(1697, (String) null, (String) null, 1697, 25600);
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player1.boss = (Party) player0;
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertTrue(boolean0);
      
      System.setCurrentTimeMillis(2020L);
      System.setCurrentTimeMillis(0L);
      player0.setConnected(true);
      boolean boolean1 = player0.isJoinOK(player1, true);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1697, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(25600, player0.getStrength());
      assertEquals("Player-1", player1.getName());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.022808529414704
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(3791, "", "state.Party", 5, 5);
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals("Player-1", player1.getName());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      assertFalse(boolean0);
      
      System.setCurrentTimeMillis(2020L);
      Player player2 = new Player((short)4919, "state.Party", "/+6Zq#;</.gKE", 25600);
      player2.setConnected(true);
      boolean boolean1 = player2.isJoinOK(player0, false);
      assertEquals("state.Party", player2.getIP());
      assertEquals(25600, player2.getPictureId());
      assertEquals(5, player0.getStrength());
      assertEquals(1, player2.getStrength());
      assertTrue(player2.isConnected());
      assertFalse(player2.isDead());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(1697, (String) null, (String) null, 1697, 25600);
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player1.boss = (Party) player0;
      System.setCurrentTimeMillis(1392409296320L);
      player1.setMoney(1392409296320L);
      System.setCurrentTimeMillis(1392409296320L);
      player0.setConnected(true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(1.39240931E12F, player1.getMoney(), 0.01F);
      assertFalse(boolean0);
  }
}
