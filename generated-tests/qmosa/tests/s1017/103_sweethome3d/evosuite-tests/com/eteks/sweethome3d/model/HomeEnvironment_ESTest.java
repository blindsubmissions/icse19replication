/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 12:53:11 GMT 2018
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-1012));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_FRAME_RATE;
      homeEnvironment0.setVideoQuality((-1012));
      homeEnvironment0.setVideoQuality((-1012));
      homeEnvironment0.setCeillingLightColor((-1012));
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setLightColor((-1012));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setSubpartSizeUnderLight((-1012));
      assertEquals((-1012), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setPhotoQuality((-1227));
      assertTrue(homeEnvironment1.isAllLevelsVisible());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, (HomeTexture) null, 1, (HomeTexture) null, 1, 1);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment2.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment1.getVideoCameraPath();
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment3.setPhotoHeight(1);
      homeEnvironment3.setAllLevelsVisible(true);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyColor(1);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoQuality();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getSkyColor();
      homeEnvironment2.setSubpartSizeUnderLight(3732.865F);
      homeEnvironment2.setSubpartSizeUnderLight(1);
      homeEnvironment1.getSkyTexture();
      homeEnvironment3.clone();
      homeEnvironment1.setPhotoHeight(0);
      homeEnvironment1.setSkyTexture((HomeTexture) null);
      homeEnvironment2.setSkyTexture((HomeTexture) null);
      assertEquals(1.0F, homeEnvironment2.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("~/^k/uiG=[(CFo", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, "~/^k/uiG=[(CFo", homeEnvironment1, object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoWidth(73);
      homeEnvironment0.setWallsAlpha(2564.0376F);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(400);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("eZrFXI.,D M", resourceURLContent0, 1.5F, 1.5F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      int int0 = 0;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13, homeTexture0, 0, homeTexture0, 13, 0);
      homeEnvironment0.setVideoWidth(13);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getVideoFrameRate();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setPhotoHeight((-248));
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("eZrFXI.,D M");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.eZrFXI.,D M
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(716);
      homeEnvironment1.getSkyTexture();
      AspectRatio aspectRatio0 = homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setVideoQuality((-2736));
      homeEnvironment0.setGroundColor(0);
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.io.HomeURLContent", "YAW", (Content) null, 1, 1, "IoMkWkU]Kp!", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, homeTexture0, (-1441), homeTexture0, 0, (-1441));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getVideoQuality();
      CatalogTexture catalogTexture1 = new CatalogTexture("", (Content) null, 0.0F, 3039.85F, true);
      catalogTexture0.compareTo(catalogTexture1);
      homeEnvironment0.setGroundColor((-5040));
      homeEnvironment0.setPhotoQuality((-617));
      homeEnvironment0.getVideoQuality();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals((-617), homeEnvironment0.getPhotoQuality());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.615630577027551
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-3903));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Dd VrV8", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyColor((-3903));
      Camera camera0 = new Camera((-3903), (-272.1F), (-2613.7932F), 1.7777778F, (-1.0F), 0.0F);
      Camera camera1 = new Camera(0.0F, 1.7777778F, (-2613.7932F), (-1.0F), (-1.0F), 0.0F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "Dd VrV8", camera1, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setPhotoWidth(2372);
      homeEnvironment1.setPhotoHeight((-3903));
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setSubpartSizeUnderLight(2372);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.SKY_COLOR;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment1.setPhotoWidth(1501);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-3903), homeEnvironment0.getSkyColor());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("Super class isn't cloneable");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.Super class isn't cloneable
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1519, (HomeTexture) null, (-1), (HomeTexture) null, 1519, 1.3333334F);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1.3333334F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-1), homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1519, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(1519, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2312, (HomeTexture) null, 2312, 2312, 4214.982F);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoQuality(51);
      homeEnvironment0.setGroundColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyTexture((HomeTexture) null);
      List<Camera> list1 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list1);
      homeEnvironment1.getSkyTexture();
      homeEnvironment1.getVideoFrameRate();
      homeEnvironment0.getVideoHeight();
      homeEnvironment1.getVideoFrameRate();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("3NBJ'=5/t}`,b$q|kLk", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setCeillingLightColor((-1));
      homeEnvironment1.setSubpartSizeUnderLight(550.9F);
      assertEquals(550.9F, homeEnvironment1.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setSubpartSizeUnderLight(0.0F);
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment0.setSkyColor(2456);
      homeEnvironment1.setAllLevelsVisible(true);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment2.setSubpartSizeUnderLight(363.03915F);
      homeEnvironment1.setWallsAlpha(1.0F);
      homeEnvironment0.setPhotoQuality(2456);
      homeEnvironment1.getLightColor();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "", homeEnvironment3, object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.getGroundColor();
      homeEnvironment2.setVideoWidth(13684944);
      homeEnvironment1.setCeillingLightColor(13684944);
      assertTrue(homeEnvironment1.isAllLevelsVisible());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.615630577027551
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setPhotoHeight(11);
      homeEnvironment0.setVideoFrameRate(400);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getLightColor();
      homeEnvironment1.setCeillingLightColor(400);
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      assertEquals(400, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      resourceURLContent0.getJAREntryURL();
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", temporaryURLContent0, 0.0F, 0.0F, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setWallsAlpha((-1.0F));
      homeEnvironment0.setPhotoHeight(0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setVideoFrameRate(25);
      homeEnvironment0.setLightColor((-742));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoWidth((-1661));
      assertEquals(0, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("~/^k/uiG=[(CFo", propertyChangeListener0);
      homeEnvironment0.clone();
      Object object0 = new Object();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoWidth(73);
      homeEnvironment0.setWallsAlpha(2564.0376F);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(400);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.351673301904631
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("m!fTQ\\H@6 ", "PHOTO_WIDTH", (Content) null, 821, 821, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(821, homeTexture0, 821, homeTexture0, 209, (-1694.477F));
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("m!fTQ\\H@6 ", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "V4wPRgd,<s%MiY]", "m!fTQ\\H@6 ", "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object1, (String) null, propertyChangeListenerProxy0, (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getGroundColor();
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals((-1694.477F), float0, 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.458311329683084
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("m!fTQ\\H@6 ", "PHOTO_WIDTH", (Content) null, 821, 821, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(821, homeTexture0, 821, homeTexture0, 209, (-1694.477F));
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoAspectRatio();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("m!fTQ\\H@6 ", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "V4wPRgd,<s%MiY]", "m!fTQ\\H@6 ", "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object1, (String) null, propertyChangeListenerProxy0, (Object) null);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getPhotoQuality();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1519, (HomeTexture) null, 1519, (HomeTexture) null, 1929, 1519);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.OperatingSystem", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.setVideoWidth(73);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(73, (HomeTexture) null, 2237, (HomeTexture) null, 1929, 1519);
      homeEnvironment2.setWallsAlpha(1519);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment((-15), (HomeTexture) null, 1929, (HomeTexture) null, 0, 400);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment3.setVideoAspectRatio(aspectRatio0);
      homeEnvironment3.setPhotoQuality(400);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment2.getPhotoQuality();
      homeEnvironment2.getVideoWidth();
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment3.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment3.getVideoAspectRatio());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("~/^k/uiG=[(CFo", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, "~/^k/uiG=[(CFo", homeEnvironment1, object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoWidth(73);
      homeEnvironment0.setWallsAlpha(2564.0376F);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(400);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment1.setPhotoHeight(1650);
      homeEnvironment0.getVideoAspectRatio();
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getVideoAspectRatio());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getDrawingMode();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("m!fTQ\\H@6 ", "PHOTO_WIDTH", (Content) null, 821, 821, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(821, homeTexture0, 821, homeTexture0, 209, (-1694.477F));
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("m!fTQ\\H@6 ", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "V4wPRgd,<s%MiY]", "m!fTQ\\H@6 ", "");
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object1, (String) null, propertyChangeListenerProxy0, (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setGroundColor(821);
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-816));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", uRLContent0, (-816), (-816), "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      assertEquals((-816), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_FRAME_RATE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("N8E;v']>hZ$(o[_:", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoWidth(7);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight(7);
      AspectRatio aspectRatio0 = homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      System.setCurrentTimeMillis(600000L);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setAllLevelsVisible(false);
      Random.setNextRandom(25);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13, (HomeTexture) null, 1929, (HomeTexture) null, 1929, 2895.766F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(73, (HomeTexture) null, 0, (HomeTexture) null, 73, 2613.5894F);
      homeEnvironment1.setWallsAlpha(73);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(694, (HomeTexture) null, 2146646434, (HomeTexture) null, 0, (-1.0F));
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment2.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-46));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSubpartSizeUnderLight((-46));
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_FRAME_RATE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("N8E;v']>hZ$(o[_:", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoWidth(7);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight(7);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setLightColor(13427964);
      homeEnvironment0.setPhotoQuality((-46));
      homeEnvironment0.setPhotoQuality(1073741824);
      Random.setNextRandom((-2730));
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 13;
      URL uRL0 = MockURL.getFileExample();
      boolean boolean0 = false;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("eZrFXI.,D M", resourceURLContent0, 1.5F, 1.5F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13, homeTexture0, 0, homeTexture0, 13, 0);
      homeEnvironment0.setVideoWidth(13);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment0.setVideoWidth(13);
      PropertyChangeListener propertyChangeListener0 = null;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("eZrFXI.,D M", propertyChangeListenerProxy0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object1, "eZrFXI.,D M", catalogTexture0, object0);
      // Undeclared exception!
      try { 
        propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.beans.PropertyChangeListenerProxy", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("m!fTQ\\H@6 ", "PHOTO_WIDTH", (Content) null, 821, 821, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(821, homeTexture0, 821, homeTexture0, 209, (-1694.477F));
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(95, homeTexture0, 1049, homeTexture0, 821, (-1.0F));
      homeEnvironment1.setVideoWidth((-47));
      homeEnvironment1.setWallsAlpha(95);
      homeEnvironment1.setPhotoHeight((-35));
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment1.setVideoFrameRate(7);
      homeEnvironment0.setLightColor(209);
      homeEnvironment1.getSkyTexture();
      homeEnvironment0.setPhotoWidth((-111));
      assertEquals((-111), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      float float0 = 0.0F;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha(0.0F);
      homeEnvironment1.setPhotoHeight(821);
      homeEnvironment1.getVideoCameraPath();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment1.setPhotoHeight(821);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.253857589601352
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-816));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setLightColor((-816));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoWidth(131);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setPhotoWidth(131);
      Random.setNextRandom(131);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.5400363038209806
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha(0.0F);
      homeEnvironment1.getVideoCameraPath();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment1.setVideoFrameRate(2371);
      homeEnvironment1.setLightColor(2371);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoWidth(131);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoWidth(7);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      assertEquals(2371, homeEnvironment1.getVideoFrameRate());
  }
}
