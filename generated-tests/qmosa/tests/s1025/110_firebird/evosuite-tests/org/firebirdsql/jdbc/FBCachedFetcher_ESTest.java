/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 16:36:52 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      fBCachedFetcher0.beforeFirst();
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.last();
      fBCachedFetcher0.relative((-1973));
      fBCachedFetcher0.isLast();
      byte[][] byteArray0 = new byte[3][3];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-79);
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)17;
      byteArray1[3] = (byte) (-127);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte) (-79);
      byteArray2[1] = (byte)0;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte) (-127);
      byteArray3[1] = (byte)17;
      byteArray3[2] = (byte)0;
      byteArray3[3] = (byte)0;
      byteArray3[4] = (byte) (-127);
      byteArray3[5] = (byte)0;
      byteArray3[6] = (byte) (-79);
      byteArray0[2] = byteArray3;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getFetchSize();
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.relative(0);
      fBCachedFetcher0.getFetchSize();
      byte[][] byteArray0 = new byte[4][1];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)39;
      byteArray1[2] = (byte)46;
      byteArray1[3] = (byte) (-1);
      byteArray1[4] = (byte) (-104);
      byteArray1[5] = (byte) (-44);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte) (-19);
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)46;
      byteArray2[4] = (byte)100;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[2];
      byteArray3[0] = (byte) (-1);
      byteArray3[1] = (byte) (-19);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[9];
      byteArray4[0] = (byte) (-44);
      byteArray4[1] = (byte)46;
      byteArray4[2] = (byte) (-44);
      byteArray4[3] = (byte)100;
      byteArray4[4] = (byte)39;
      byteArray4[5] = (byte) (-19);
      byteArray4[6] = (byte) (-1);
      byteArray4[7] = (byte)100;
      byteArray4[8] = (byte) (-104);
      byteArray0[3] = byteArray4;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[7][7];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte) (-112);
      byteArray1[2] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte) (-112);
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte) (-1);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte)0;
      byteArray3[1] = (byte) (-1);
      byteArray3[2] = (byte) (-1);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte) (-1);
      byteArray4[1] = (byte) (-112);
      byteArray4[2] = (byte)0;
      byteArray4[3] = (byte)0;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte) (-112);
      byteArray5[1] = (byte)0;
      byteArray5[2] = (byte)0;
      byteArray5[3] = (byte) (-1);
      byteArray5[4] = (byte) (-1);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[4];
      byteArray6[0] = (byte) (-112);
      byteArray6[1] = (byte) (-112);
      byteArray6[2] = (byte)19;
      byteArray6[3] = (byte) (-112);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[6];
      byteArray7[0] = (byte) (-1);
      byteArray7[1] = (byte)19;
      byteArray7[2] = (byte)0;
      byteArray7[3] = (byte)23;
      byteArray7[4] = (byte)0;
      byteArray7[5] = (byte) (-44);
      byteArray0[6] = byteArray7;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.setFetchSize(455);
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.isEmpty();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      boolean boolean0 = fBCachedFetcher0.absolute(1152);
      assertTrue(fBCachedFetcher0.isLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][5];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte) (-76);
      byteArray2[1] = (byte)15;
      byteArray2[2] = (byte)61;
      byteArray2[3] = (byte)56;
      byteArray2[4] = (byte) (-8);
      byteArray2[5] = (byte)1;
      byteArray2[6] = (byte)124;
      byteArray2[7] = (byte)23;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte)124;
      byteArray3[1] = (byte)61;
      byteArray3[2] = (byte)15;
      byteArray3[3] = (byte)61;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[9];
      byteArray4[0] = (byte)56;
      byteArray4[1] = (byte) (-8);
      byteArray4[2] = (byte)61;
      byteArray4[3] = (byte)56;
      byteArray4[4] = (byte)124;
      byteArray4[5] = (byte)56;
      byteArray4[6] = (byte) (-8);
      byteArray4[7] = (byte)15;
      byteArray4[8] = (byte)124;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[9];
      byteArray5[0] = (byte) (-8);
      byteArray5[1] = (byte)23;
      byteArray5[2] = (byte) (-8);
      byteArray5[3] = (byte)15;
      byteArray5[4] = (byte)1;
      byteArray5[5] = (byte) (-76);
      byteArray5[6] = (byte) (-8);
      byteArray5[7] = (byte)111;
      byteArray5[8] = (byte)56;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[5];
      byteArray6[0] = (byte) (-8);
      byteArray6[1] = (byte) (-8);
      byteArray6[2] = (byte) (-76);
      byteArray6[3] = (byte)111;
      byteArray6[4] = (byte)56;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[5];
      byteArray7[0] = (byte)1;
      byteArray7[1] = (byte)1;
      byteArray7[2] = (byte)1;
      byteArray7[3] = (byte)15;
      byteArray7[4] = (byte)56;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[0];
      byteArray0[7] = byteArray8;
      linkedList1.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5171515848932913
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.last();
      fBCachedFetcher0.relative((-1973));
      fBCachedFetcher0.isLast();
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte) (-79);
      byteArray0[0] = (byte) (-79);
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      try { 
        fBCachedFetcher1.absolute((byte)0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][0];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3592367006650063
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][0];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.absolute((-713));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.isFirst();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.clear();
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      linkedList0.clone();
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.updateRow(byteArray0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.clone();
      linkedList0.offerLast(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.updateRow(byteArray0);
      assertEquals(0, fBResultSet0.getRow());
      assertTrue(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0140355237092673
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.clear();
      linkedList0.clone();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Integer integer0 = new Integer(4589);
      linkedList0.removeLastOccurrence(fBResultSet0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.previous();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.clear();
      linkedList0.clone();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      Integer integer0 = new Integer(4589);
      linkedList0.removeLastOccurrence(fBResultSet0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.next();
      fBCachedFetcher0.first();
      boolean boolean0 = fBCachedFetcher0.last();
      assertTrue(fBCachedFetcher0.isFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.094729047527649
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.clear();
      linkedList0.clone();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      Integer integer0 = new Integer(4589);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.next();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.updateRow((byte[][]) null);
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertEquals(2, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.410489710861261
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.clear();
      linkedList0.clone();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      Integer integer0 = new Integer(4589);
      linkedList0.removeLastOccurrence(fBResultSet0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      byte[][] byteArray0 = new byte[8][9];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-11);
      byteArray1[1] = (byte)2;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte) (-100);
      byteArray2[1] = (byte) (-11);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte) (-100);
      byteArray3[1] = (byte) (-27);
      byteArray3[2] = (byte)2;
      byteArray3[3] = (byte) (-11);
      byteArray3[4] = (byte)2;
      byteArray3[5] = (byte) (-11);
      byteArray3[6] = (byte) (-100);
      byteArray3[7] = (byte) (-100);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[6];
      byteArray4[0] = (byte) (-27);
      byteArray4[1] = (byte) (-100);
      byteArray4[2] = (byte) (-27);
      byteArray4[3] = (byte)2;
      byteArray4[4] = (byte) (-27);
      byteArray4[5] = (byte)2;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[0];
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[2];
      byteArray6[0] = (byte) (-100);
      byteArray6[1] = (byte) (-69);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[5];
      byteArray7[0] = (byte) (-69);
      byteArray7[1] = (byte) (-100);
      byteArray7[2] = (byte)2;
      byteArray7[3] = (byte) (-11);
      byteArray7[4] = (byte) (-11);
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[4];
      byteArray8[0] = (byte) (-11);
      byteArray8[1] = (byte) (-100);
      byteArray8[2] = (byte)2;
      byteArray8[3] = (byte) (-69);
      byteArray0[7] = byteArray8;
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.relative(335544559);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.relative(4589);
      fBCachedFetcher0.absolute(949);
      boolean boolean0 = fBCachedFetcher0.last();
      assertFalse(fBCachedFetcher0.isFirst());
      assertTrue(boolean0);
  }
}
