/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:23:12 GMT 2018
 */

package weka.core.stemmers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.core.stemmers.LovinsStemmer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LovinsStemmer_ESTest extends LovinsStemmer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.globalInfo();
      String string0 = lovinsStemmer0.stemString("The work's title, typed as explained in the LaTeX book.");
      assertEquals("th work titl, typ as explain in th latic book.", string0);
      
      lovinsStemmer0.stemString("th work titl, typ as explain in th latic book.");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "th work titl, typ as explain in th latic book.";
      lovinsStemmer0.getRevision();
      stringArray0[1] = "th work titl, typ as explain in th latic book.";
      lovinsStemmer0.getRevision();
      stringArray0[2] = "th work titl, typ as explain in th latic book.";
      stringArray0[3] = "th work titl, typ as explain in th latic book.";
      stringArray0[4] = "The work's title, typed as explained in the LaTeX book.";
      LovinsStemmer.main(stringArray0);
      stringArray0[5] = "The work's title, typed as explained in the LaTeX book.";
      stringArray0[6] = "th work titl, typ as explain in th latic book.";
      stringArray0[7] = "th work titl, typ as explain in th latic book.";
      stringArray0[8] = "th work titl, typ as explain in th latic book.";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("th work titl, typ as explain in th latic book.");
      lovinsStemmer0.getRevision();
      String string2 = lovinsStemmer0.getRevision();
      assertEquals("8034", string2);
      
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.stem("weka.core.stemmers.LovinsStemmer");
      LovinsStemmer.main(stringArray0);
      String string3 = lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string3);
      
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("weka.core.stemmers.lovinsstemmer");
      String string4 = lovinsStemmer0.stem("<a|A0M");
      assertEquals("<a|a0m", string4);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9918043194309514
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.stemString("-?TISiX?L^O4h(");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      // Undeclared exception!
      try { 
        lovinsStemmer0.stemString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.stemmers.LovinsStemmer", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0670151478845722
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "edition";
      stringArray0[1] = "<|5l7vv%K_";
      stringArray0[2] = "yK&VBh;nJ0";
      stringArray0[3] = "MO .=r^";
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("_zp(I");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("The organization that sponsors a conference or that publishes a manual.");
      lovinsStemmer0.toString();
      String string1 = lovinsStemmer0.getRevision();
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.791759469228055
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.stemString("iness");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.stem("[`*");
      lovinsStemmer0.stem("");
      String[] stringArray0 = new String[1];
      lovinsStemmer0.stemString("8034");
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getTechnicalInformation();
      stringArray0[0] = "[`*";
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      // Undeclared exception!
      try { 
        lovinsStemmer0.stem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.016264651023736
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[7];
      lovinsStemmer0.toString();
      stringArray0[0] = "tDQu$RH5A6oCXrX];G";
      LovinsStemmer.main(stringArray0);
      stringArray0[1] = "eful";
      lovinsStemmer0.globalInfo();
      String string0 = lovinsStemmer0.stemString("1cy&");
      assertEquals("1cy&", string0);
      
      stringArray0[2] = "arizing";
      stringArray0[3] = "";
      stringArray0[4] = "\n\n";
      lovinsStemmer0.getTechnicalInformation();
      stringArray0[5] = "`fTf-%dY";
      stringArray0[6] = "6hv";
      lovinsStemmer0.stem("\n\n");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("8034");
      lovinsStemmer0.getTechnicalInformation();
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.toString();
      String string2 = lovinsStemmer0.stemString("U\"");
      assertEquals("u\"", string2);
      
      lovinsStemmer0.stem("weka.core.stemmers.LovinsStemmer");
      String string3 = lovinsStemmer0.stemString("6hv");
      assertEquals("6hv", string3);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4205719259467045
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      String string1 = lovinsStemmer0.stem("0,/2q]tW55`oEbdNn");
      assertEquals("0,/2q]tw55`oebdn", string1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.045843652118818
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "abstract";
      stringArray0[1] = "d+y!n6Q(aw1I";
      stringArray0[2] = "pp";
      stringArray0[3] = "eiC1)M.S?'0TFiY#J";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      lovinsStemmer0.getRevision();
      String string1 = lovinsStemmer0.getRevision();
      assertEquals("8034", string1);
      
      String string2 = lovinsStemmer0.stem("encing");
      assertEquals("enc", string2);
      
      lovinsStemmer0.toString();
      String string3 = lovinsStemmer0.stemString("s%/{{[tg_52b&*");
      assertEquals("s%/{{[tg_52b&*", string3);
      
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      String string4 = lovinsStemmer0.stemString(")PXz-");
      assertEquals(")pxz-", string4);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8804901314870051
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[2] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[3] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("An annotation. It is not used by the standard bibliography styles, but may be used by others that produce an annotated bibliography.");
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("}");
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.301273572363032
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("c|J8'");
      lovinsStemmer0.stem("N44!iMq#M");
      lovinsStemmer0.globalInfo();
      String string0 = lovinsStemmer0.stemString("c|J8'");
      assertEquals("c|j8'", string0);
      
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("");
      lovinsStemmer0.stem("");
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("@");
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.stemString("c|j8'");
      lovinsStemmer0.globalInfo();
      String string1 = lovinsStemmer0.stem("fulness");
      assertEquals("fl", string1);
      
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main((String[]) null);
      String string2 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string2);
      
      lovinsStemmer0.toString();
      String string3 = lovinsStemmer0.stemString("c|j8'");
      assertEquals("c|j8'", string3);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0854099392984664
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "edition";
      stringArray0[1] = "<|5l7vv%K_";
      stringArray0[2] = "yK&VBh;nJ0";
      stringArray0[3] = "MO .=r^";
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stem("EDITOR");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("edition");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("edit");
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      // Undeclared exception!
      try { 
        lovinsStemmer0.stemString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.stemmers.LovinsStemmer", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.7349230660013719
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("rud");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.toString();
      lovinsStemmer0.stemString("mqz");
      lovinsStemmer0.toString();
      String string1 = lovinsStemmer0.getRevision();
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8993098830849456
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("Pf/]");
      lovinsStemmer0.stem("JC");
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "pf/]";
      stringArray0[1] = "8034";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("jc");
      String string0 = lovinsStemmer0.getRevision();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.toString();
      lovinsStemmer0.stemString("derkM%PZwKWty");
      String string1 = lovinsStemmer1.stemString("8034");
      assertTrue(string1.equals((Object)string0));
      
      lovinsStemmer0.getTechnicalInformation();
      String string2 = lovinsStemmer0.stemString("Any additional information that can help the reader. The first word should be capitalized.");
      assertEquals("any addit inform that can help th reader. th first word should be capital.", string2);
      
      lovinsStemmer0.stem("zu6z9erid");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer1.stem("Qp|OBw*uZ6~H");
      lovinsStemmer1.stemString("pf/]");
      String string3 = lovinsStemmer0.stemString("2T1}fH!grCx93pL~siM");
      assertEquals("2t1}fh!grcx93pl~sim", string3);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9560718577335003
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("!OYUlSM\"+Ri:=");
      lovinsStemmer0.stem("techreport");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("9g%");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      lovinsStemmer0.stemString("vr}<4OgFYerX");
      lovinsStemmer0.getRevision();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "8034";
      stringArray0[1] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[2] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      String[] stringArray1 = new String[0];
      LovinsStemmer.main(stringArray1);
      String string1 = lovinsStemmer0.stemString("jt?yglc{jpvowend");
      assertEquals("jt?yglc{jpvowens", string1);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.145291951432755
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("E&2=\"Zu6Z9,");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "E&2=\"Zu6Z9,";
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("E&2=\"Zu6Z9,");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("m>qgw6x(Ht:Ky<\"8`EV");
      lovinsStemmer0.stemString("ively");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.getTechnicalInformation();
      lovinsStemmer1.stemString("'h(F-d'");
      lovinsStemmer0.stem("8034");
      LovinsStemmer.main(stringArray0);
      // Undeclared exception!
      try { 
        lovinsStemmer0.stem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.2120994351006502
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("~g_FMT4kh2c9^oq");
      lovinsStemmer0.stem("~g_FMT4kh2c9^oq");
      String string0 = lovinsStemmer0.stem("~g_fmt4kh2c9^oq");
      assertEquals("~g_fmt4kh2c9^oq", string0);
      
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[0];
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getRevision();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stem("pex");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      String string1 = lovinsStemmer1.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      String string2 = lovinsStemmer1.stemString("pex");
      assertEquals("pic", string2);
      
      lovinsStemmer0.getRevision();
      lovinsStemmer1.toString();
      lovinsStemmer0.getRevision();
      String string3 = lovinsStemmer0.stem("jpvowensert");
      assertEquals("jpvowensers", string3);
  }
}
