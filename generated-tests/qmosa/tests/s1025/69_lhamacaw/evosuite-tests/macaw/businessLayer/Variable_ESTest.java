/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 18:01:07 GMT 2018
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getCleaningStatus();
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      
      derivedVariable0.columnEnd = "Unknown";
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals("", derivedVariable0.getCodeBookNumber());
      
      rawVariable0.getCodeBookNumber();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.4965075614664793
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      user0.setStatus("");
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      rawVariable0.setCleaningDescription("`]MFwc&qCT`");
      user0.setIdentifier(301);
      rawVariable0.getQuestionNumber();
      rawVariable0.setNotes("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable1.addOntologyTerms(arrayList0);
      derivedVariable0.setFilePath("u@");
      rawVariable1.setNotes("");
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable1.setQuestionNumber("u@");
      derivedVariable0.columnEnd = "general.error.promotesSecurityRisk";
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList1);
      rawVariable1.setForm("");
      rawVariable1.isNewRecord();
      rawVariable1.getNotes();
      rawVariable1.setNotes("`]MFwc&qCT`");
      rawVariable0.setCodeBookNumber("J//wB:zwvR2fhh~y)y");
      rawVariable1.setQuestionNumber("J//wB:zwvR2fhh~y)y");
      rawVariable1.getDisplayItemIdentifier();
      assertEquals("J//wB:zwvR2fhh~y)y", rawVariable1.getQuestionNumber());
      
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList2);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlternativeVariable((Variable) null);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getIdentifier();
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, (RawVariable) null, (RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getCleaningStatus();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      derivedVariable1.addValueLabel(valueLabel0);
      derivedVariable1.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.getName();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable1.cloneAttributes(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "EDIT";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getColumnEnd();
      assertEquals("", string0);
      
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      assertEquals("", derivedVariable0.getName());
      
      rawVariable0.getDisplayName();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.5553480614894135
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCodeBookNumber("");
      rawVariable0.getFilePath();
      rawVariable0.setAlias("0");
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      rawVariable0.getColumnStart();
      rawVariable0.setName("0");
      rawVariable0.setAlias("");
      rawVariable0.getYear();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getIdentifier();
      rawVariable0.getDisplayName();
      derivedVariable0.setAvailability("");
      derivedVariable0.setNotes("variable.alternativeVariable.label");
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getForm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCoded(false);
      derivedVariable1.setCoded(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.setYear("");
      rawVariable0.getYear();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList0);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertTrue(derivedVariable0.isCleaned());
      
      ArrayList<SupportingDocument> arrayList1 = derivedVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      derivedVariable1.addSupportingDocuments(arrayList1);
      derivedVariable1.createVariableSummary();
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.401197381662154
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User(",x", ",x");
      user0.setFirstName("eg(!PE1T");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList1);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getSourceVariables();
      rawVariable0.setCategory("eg(!PE1T");
      rawVariable0.setFilePath(",x");
      assertEquals(",x", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.3966337170421057
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      arrayList1.listIterator(0);
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.setAlias("user.lastName.saveChanges");
      rawVariable0.getLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      arrayList2.listIterator();
      derivedVariable0.addSourceVariables(arrayList2);
      rawVariable0.clone();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList3);
      rawVariable0.setCategory("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      rawVariable0.getColumnEnd();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      assertEquals("user.lastName.saveChanges", rawVariable0.getAlias());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      derivedVariable0.getColumnEnd();
      derivedVariable0.setName("Unknown");
      User user0 = new User("", "");
      user0.setAddressLine2("Unknown");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable1.getName();
      derivedVariable0.setColumnEnd("BL`_f[iJ{cMK!NiSa_a");
      DerivedVariable.validateFields(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.2886662070247046
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-186));
      derivedVariable0.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable1);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable1.setCoded(true);
      derivedVariable2.setCoded(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable2.removeSupportingDocument(supportingDocument0);
      Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("");
      rawVariable1.getYear();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.446185910697443
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setCategory("variable.category.label");
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setColumnEnd("user.userID.label");
      rawVariable0.setFilePath("");
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.addSourceVariable(rawVariable1);
      derivedVariable0.getSourceVariables();
      rawVariable0.setCategory("variable.form.label");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable1);
      rawVariable1.setFilePath((String) null);
      assertEquals("user.userID.label", rawVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.396914420218569
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      User user0 = new User(",x", ",x");
      user0.setFirstName("eg(!PE1T");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getCodeBookNumber();
      derivedVariable0.setIsNewRecord(true);
      String string0 = derivedVariable0.getCategory();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", string0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7505708775343365
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "NON_EXISTENT_ONTOLOGY_TERM";
      derivedVariable0.getCategory();
      derivedVariable0.getColumnEnd();
      derivedVariable0.setName("Unknown");
      User user0 = new User("", "");
      user0.setAddressLine2("Unknown");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable1.getName();
      derivedVariable0.setColumnEnd("BL`_f[iJ{cMK!NiSa_a");
      DerivedVariable.validateFields(derivedVariable0);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("BL`_f[iJ{cMK!NiSa_a", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.236476568754351
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals(0, arrayList0.size());
      
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-186));
      derivedVariable0.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.spliterator();
      derivedVariable1.removeSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable1.getQuestionNumber();
      derivedVariable0.setNotes("");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable3);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      arrayList1.add(supportingDocument1);
      derivedVariable1.removeSourceVariables(arrayList2);
      derivedVariable3.getOntologyTerms();
      derivedVariable1.setSupportingDocuments(arrayList1);
      derivedVariable2.removeSupportingDocuments(arrayList1);
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertFalse(derivedVariable2.isCoded());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.2551105127277413
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "EDIT";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, (Variable) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.cloneAttributes(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply(ontologyTerm0);
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getCodeBookNumber();
      derivedVariable0.setIsNewRecord(true);
      String string0 = rawVariable1.form;
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      System.setCurrentTimeMillis((-318L));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User("SL+J:7Ba$UP97S", "SL+J:7Ba$UP97S");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm2, ontologyTerm1);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      ontologyTerm1.setIdentifier(0);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }
}
