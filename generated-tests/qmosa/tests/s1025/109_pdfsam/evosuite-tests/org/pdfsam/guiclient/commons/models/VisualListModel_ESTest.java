/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 24 15:22:37 GMT 2018
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.awt.image.IndexColorModel;
import java.awt.image.renderable.ParameterBlock;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.Vector;
import javax.media.jai.CollectionImage;
import javax.media.jai.OperationRegistry;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = (-706);
      int int0 = 9999;
      intArray0[1] = 9999;
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[2];
      visualListModel0.moveDownIndex(379);
      int int1 = 0;
      intArray1[0] = 0;
      intArray1[1] = (-2216);
      visualListModel0.removeElements(intArray1, true);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-1161), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1161
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      visualListModel0.moveUpIndexes(intArray0);
      intArray0[0] = 9999;
      intArray0[1] = (-2339);
      intArray0[2] = 276;
      intArray0[3] = (-1);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      visualListModel0.addAllElements(collection0);
      visualListModel0.addAllElements(collection0);
      visualListModel0.moveUpIndex(14);
      visualListModel0.moveUpIndex((-2339));
      visualListModel0.addAllElements(1, collection0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 1;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(1, 1, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int int0 = 0;
      visualListModel0.getListDataListeners();
      visualListModel0.getElementAt(0);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveUpIndex(500);
      visualListModel0.clearData();
      visualListModel0.undeleteElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-3275);
      intArray0[1] = (-3275);
      intArray0[2] = (-183);
      intArray0[3] = (-3275);
      intArray0[4] = (-3275);
      intArray0[5] = (-3275);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-3275), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3275
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      jComboBox0.transferFocusDownCycle();
      visualListModel0.addListDataListener(jComboBox0);
      int[] intArray0 = new int[2];
      intArray0[0] = 1131;
      int int0 = (-1756);
      intArray0[1] = (-1756);
      visualListModel0.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-1756), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1756)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "org.apache.log4j.RollingCalendar";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "org.pdfsam.guiclient.commons.models.VisualListModel";
      stringArray0[5] = "com.lowagie.text.pdf.PdfGraphics2D$HyperLinkKey";
      stringArray0[6] = "dih+})";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      visualListModel0.addListDataListener(jComboBox0);
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getValidElements();
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      visualListModel0.addAllElements(2054, (Collection<VisualPageListItem>) null);
      intArray1[1] = 0;
      intArray1[2] = (-1109);
      intArray1[3] = 9999;
      intArray1[4] = (-1896);
      intArray1[5] = 0;
      visualListModel0.undeleteElements(intArray1);
      assertArrayEquals(new int[] {0, 0, (-1109), 9999, (-1896), 0}, intArray1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-442);
      intArray0[1] = 476;
      intArray0[2] = (-1);
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = (-139);
      visualListModel0.rotateClockwiseElements(intArray0);
      Class<DefaultCaret> class0 = DefaultCaret.class;
      visualListModel0.getListeners((Class) class0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0549201679861442
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 14;
      intArray0[1] = 0;
      intArray0[2] = 330;
      intArray0[3] = 187;
      visualListModel0.rotateClockwiseElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(869, 869, false);
      assertNull(collection0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      int int0 = 1246;
      intArray0[0] = 1246;
      intArray0[1] = 0;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.getSize();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(255, "RAm;<IzK)$_E");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      int int0 = (-1166);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-1166));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      visualListModel0.getSize();
      int[] intArray0 = new int[9];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getListDataListeners();
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      Vector<String> vector0 = new Vector<String>();
      vector0.add("");
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.moveUpIndex(0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.subList(0, 0, true);
      int int0 = 0;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-123);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)106;
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-80);
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)40;
      byteArray2[1] = (byte)0;
      byteArray2[2] = (byte) (-80);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(681, 2485, byteArray0, byteArray1, byteArray2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "org.apache.log4j.RollingCalendar";
      stringArray0[2] = "";
      stringArray0[4] = "org.pdfsam.guiclient.commons.models.VisualListModel";
      stringArray0[5] = "com.lowagie.text.pdf.PdfGraphics2D$HyperLinkKey";
      stringArray0[6] = "dih+})";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      visualListModel0.addListDataListener(jComboBox0);
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getValidElements();
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) null);
      intArray1[1] = 0;
      intArray1[2] = (-1109);
      intArray1[3] = 9999;
      intArray1[4] = (-1896);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      int int0 = (-902);
      visualListModel0.subList((-902), (-902), true);
      visualListModel0.getValidElements();
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(811, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.022808529414703
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = (-2602);
      intArray0[2] = (-2540);
      intArray0[3] = 4;
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      intArray0[4] = 1182;
      intArray0[5] = 379;
      intArray0[6] = 3824;
      intArray0[7] = (-1009);
      intArray0[8] = (-1);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.prependAllElements(stack0);
      visualListModel0.getSize();
      visualListModel0.getValidElements();
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      visualListModel0.moveUpIndexes(intArray0);
      intArray0[0] = 9999;
      int int0 = (-2339);
      intArray0[1] = (-2339);
      intArray0[2] = 276;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      boolean boolean0 = true;
      visualListModel0.removeElements(276, (-2339), true);
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        visualListModel0.getListeners((Class) class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.Object; cannot be cast to [Ljava.util.EventListener;
         //
         verifyException("javax.swing.event.EventListenerList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      VisualListModel visualListModel1 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) priorityQueue0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.moveDownIndex((-1481));
      visualListModel0.removeElements(intArray0, false);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-288), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -288
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveDownIndex((-706));
      visualListModel0.removeElements(intArray0, true);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-1281), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1281
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      visualListModel0.moveDownIndex(276);
      int[] intArray0 = new int[2];
      intArray0[0] = 276;
      intArray0[1] = 135;
      visualListModel0.removeElements((-1), 10000, true);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.updateElementAt(276, (VisualPageListItem) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.253857589601352
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      visualListModel0.moveUpIndexes(intArray0);
      intArray0[0] = 9999;
      intArray0[1] = 9999;
      intArray0[2] = 276;
      intArray0[3] = (-1);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      visualListModel0.addAllElements(collection0);
      visualListModel0.addAllElements(collection0);
      visualListModel0.moveUpIndex(14);
      visualListModel0.addAllElements(1, collection0);
      visualListModel0.getValidElements();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.addAllElements((-1145), collection0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 1791;
      int int0 = 1221;
      intArray0[1] = 1221;
      intArray0[2] = (-2249);
      intArray0[3] = (-1925);
      intArray0[4] = 1480;
      intArray0[5] = 2;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getListDataListeners();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-2249));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2249
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      int[] intArray0 = new int[8];
      intArray0[0] = (-1481);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1481);
      intArray0[4] = (-1481);
      intArray0[5] = (-1481);
      intArray0[7] = (-1);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.253857589601352
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getListDataListeners();
      visualListModel0.getElementAt(0);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.subList((-1), 2);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel1.moveUpIndex(2);
      visualListModel0.addAllElements(198, (Collection<VisualPageListItem>) null);
      visualListModel0.getValidElements();
      visualListModel1.reverseElements(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[1];
      int int0 = (-1475);
      intArray0[0] = (-1475);
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getElements();
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1475
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      int int0 = 9999;
      visualListModel0.moveUpIndexes(intArray0);
      intArray0[0] = 9999;
      intArray0[0] = (-2339);
      int int1 = 276;
      intArray0[2] = 276;
      int int2 = (-1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      intArray0[3] = (-1);
      visualListModel0.removeElements(276, (-1200), true);
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        visualListModel0.getListeners((Class) class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to [Ljava.util.EventListener;
         //
         verifyException("javax.swing.event.EventListenerList", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.getSize();
      visualListModel0.addElementAt((VisualPageListItem) null, (-1475));
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = (-1475);
      intArray0[2] = 1;
      intArray0[3] = (-1475);
      intArray0[4] = 1;
      intArray0[5] = 1;
      visualListModel0.updateElementAt((-1475), (VisualPageListItem) null);
      visualListModel0.clearData();
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.data = vector0;
      visualListModel0.addElement((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.removeElements((-3339), 1, false);
      int[] intArray0 = new int[6];
      intArray0[0] = (-3339);
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 1;
      visualListModel0.rotateClockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8937882323911377
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1475);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.removeElements(0, 2347, true);
      int[] intArray1 = new int[1];
      intArray1[0] = 2347;
      try { 
        visualListModel0.rotateClockwiseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2347
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1439522006438696
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      visualListModel0.getSize();
      int[] intArray0 = new int[9];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getListDataListeners();
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      visualListModel0.removeElements(0, (-1), true);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndex(0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) priorityQueue0);
      visualListModel0.getValidElements();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.addAllElements(Integer.MAX_VALUE, (Collection<VisualPageListItem>) priorityQueue0);
      assertEquals(0, priorityQueue0.size());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.588573162682118
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque1 = arrayDeque0.clone();
      ArrayDeque<VisualPageListItem> arrayDeque2 = arrayDeque1.clone();
      visualListModel0.prependAllElements(arrayDeque2);
      visualListModel0.getElements();
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getSize();
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.clearData();
      visualListModel1.elementChanged((VisualPageListItem) null);
      visualListModel1.reverseElements(intArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>(1);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) priorityQueue0);
      visualListModel0.getElements();
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.data = vector0;
      visualListModel0.addElement((VisualPageListItem) null);
      int int0 = (-3339);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.338371704803573
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      visualListModel0.getElements();
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getSize();
      int int0 = 49;
      visualListModel0.addElementAt((VisualPageListItem) null, 49);
      visualListModel0.updateElementAt(506, (VisualPageListItem) null);
      visualListModel0.clearData();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[5] = null;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.287773229162282
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.removeElements(intArray0, true);
      arrayDeque0.clone();
      ArrayDeque<VisualPageListItem> arrayDeque1 = new ArrayDeque<VisualPageListItem>();
      arrayDeque0.clone();
      visualListModel0.getElements();
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndex(8);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements(1, (Collection<VisualPageListItem>) null);
      visualListModel0.getValidElements();
      visualListModel1.reverseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.addAllElements(1, (Collection<VisualPageListItem>) arrayDeque0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.415052121917807
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      visualListModel0.getSize();
      int[] intArray0 = new int[0];
      visualListModel0.addElement((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      arrayDeque0.clone();
      ArrayDeque<VisualPageListItem> arrayDeque1 = arrayDeque0.clone();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>(arrayDeque0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayDeque1);
      visualListModel0.moveUpIndex(1);
      VisualListModel visualListModel1 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) arrayDeque0);
      visualListModel2.getValidElements();
      visualListModel2.removeElements(10, (-774), false);
      visualListModel2.reverseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel2.getElements();
      visualListModel3.rotateAnticlockwiseElements(intArray0);
      visualListModel1.moveUpIndex(2508);
      assertNotSame(visualListModel1, visualListModel2);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8343719702816237
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[1];
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      visualListModel0.addAllElements(6, (Collection<VisualPageListItem>) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      visualListModel0.getElements();
      visualListModel1.removeElements((-1062), (-1062), true);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7917594692280554
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[1];
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveDownIndex(0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }
}
